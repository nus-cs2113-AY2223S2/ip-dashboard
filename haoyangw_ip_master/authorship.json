[{"path":"src/main/java/io/github/haoyangw/rica/Rica.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haoyangw"},"content":"package io.github.haoyangw.rica;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"haoyangw"},"content":"import io.github.haoyangw.rica.exception.RicaException;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"haoyangw"},"content":"import io.github.haoyangw.rica.exception.RicaTaskException;","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"haoyangw"},"content":"import io.github.haoyangw.rica.task.TaskManager;","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"haoyangw"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"haoyangw"},"content":"public class Rica {","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"haoyangw"},"content":"    private static final String BYE_PHRASE \u003d \" Leaving so soon? Come back anytime, I\u0027ll be happy to help!\";","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"haoyangw"},"content":"    private static final String BYE_TRIGGER \u003d \"bye\";","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"haoyangw"},"content":"    private static final String DEADLINE_TRIGGER \u003d \"deadline\";","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"haoyangw"},"content":"    private static final String EVENT_TRIGGER \u003d \"event\";","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"haoyangw"},"content":"    private static final String LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"haoyangw"},"content":"    private static final String LIST_TRIGGER \u003d \"list\";","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"haoyangw"},"content":"    private static final String MARK_TRIGGER \u003d \"mark\";","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"haoyangw"},"content":"    private static final String TODO_TRIGGER \u003d \"todo\";","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"haoyangw"},"content":"    private static final String UNKNOWN_CMD_ERROR \u003d \" ??? Sorry, I don\u0027t understand this command. Sent to the wrong bot? xD\";","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"haoyangw"},"content":"    private static final String UNMARK_TRIGGER \u003d \"unmark\";","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"haoyangw"},"content":"    private static TaskManager taskManager;","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"haoyangw"},"content":"    private static TaskManager getTaskManager() {","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"haoyangw"},"content":"        return Rica.taskManager;","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"haoyangw"},"content":"    private static void printlnWithIndent(String line) {","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"haoyangw"},"content":"        System.out.print(\"    \");","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"haoyangw"},"content":"        System.out.println(line);","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"haoyangw"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"haoyangw"},"content":"     * Parse the command entered into CLI and execute the corresponding actions","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"haoyangw"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"haoyangw"},"content":"    private static void runCommands() throws RicaTaskException {","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"haoyangw"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"haoyangw"},"content":"        String command \u003d \"\";","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"haoyangw"},"content":"        do {","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"haoyangw"},"content":"            command \u003d in.nextLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"haoyangw"},"content":"            printlnWithIndent(Rica.LINE);","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"haoyangw"},"content":"            String[] params \u003d command.split(\" \");","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"haoyangw"},"content":"            switch (params[0]) {","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"haoyangw"},"content":"            case Rica.MARK_TRIGGER:","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"haoyangw"},"content":"                int indexOfTodo \u003d Integer.parseInt(params[1]) - 1;","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"haoyangw"},"content":"                Rica.getTaskManager().markDone(indexOfTodo);","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"haoyangw"},"content":"                break;","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"haoyangw"},"content":"            case Rica.UNMARK_TRIGGER:","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"haoyangw"},"content":"                indexOfTodo \u003d Integer.parseInt(params[1]) - 1;","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"haoyangw"},"content":"                Rica.getTaskManager().unmarkDone(indexOfTodo);","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"haoyangw"},"content":"                break;","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"haoyangw"},"content":"            case Rica.LIST_TRIGGER:","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"haoyangw"},"content":"                Rica.getTaskManager().printTasks();","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"haoyangw"},"content":"                break;","lastModifiedDate":"2023-02-03"},{"lineNumber":53,"author":{"gitId":"haoyangw"},"content":"            case Rica.DEADLINE_TRIGGER:","lastModifiedDate":"2023-02-03"},{"lineNumber":54,"author":{"gitId":"haoyangw"},"content":"            case Rica.EVENT_TRIGGER:","lastModifiedDate":"2023-02-04"},{"lineNumber":55,"author":{"gitId":"haoyangw"},"content":"            case Rica.TODO_TRIGGER:","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"haoyangw"},"content":"                try {","lastModifiedDate":"2023-02-09"},{"lineNumber":57,"author":{"gitId":"haoyangw"},"content":"                    Rica.getTaskManager().createTaskFrom(command);","lastModifiedDate":"2023-02-08"},{"lineNumber":58,"author":{"gitId":"haoyangw"},"content":"                } catch (RicaTaskException exception) {","lastModifiedDate":"2023-02-09"},{"lineNumber":59,"author":{"gitId":"haoyangw"},"content":"                    printlnWithIndent(exception.getMessage());","lastModifiedDate":"2023-02-09"},{"lineNumber":60,"author":{"gitId":"haoyangw"},"content":"                }","lastModifiedDate":"2023-02-09"},{"lineNumber":61,"author":{"gitId":"haoyangw"},"content":"                break;","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"haoyangw"},"content":"            case Rica.BYE_TRIGGER:","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"haoyangw"},"content":"                printlnWithIndent(Rica.BYE_PHRASE);","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"haoyangw"},"content":"                break;","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"haoyangw"},"content":"            default:","lastModifiedDate":"2023-02-09"},{"lineNumber":66,"author":{"gitId":"haoyangw"},"content":"                printlnWithIndent(UNKNOWN_CMD_ERROR);","lastModifiedDate":"2023-02-09"},{"lineNumber":67,"author":{"gitId":"haoyangw"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"haoyangw"},"content":"            printlnWithIndent(Rica.LINE);","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"haoyangw"},"content":"        } while (!command.equals(Rica.BYE_TRIGGER));","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":72,"author":{"gitId":"haoyangw"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-07"},{"lineNumber":73,"author":{"gitId":"haoyangw"},"content":"        printlnWithIndent(Rica.LINE);","lastModifiedDate":"2023-02-07"},{"lineNumber":74,"author":{"gitId":"haoyangw"},"content":"        printlnWithIndent(\" Hello! I\u0027m R.I.C.A.\");","lastModifiedDate":"2023-02-07"},{"lineNumber":75,"author":{"gitId":"haoyangw"},"content":"        printlnWithIndent((\" That\u0027s Really-Intelligent-Chat-Assistant for you!\"));","lastModifiedDate":"2023-02-07"},{"lineNumber":76,"author":{"gitId":"haoyangw"},"content":"        printlnWithIndent(\" How may I be of assistance?\");","lastModifiedDate":"2023-02-07"},{"lineNumber":77,"author":{"gitId":"haoyangw"},"content":"        printlnWithIndent(Rica.LINE);","lastModifiedDate":"2023-02-07"},{"lineNumber":78,"author":{"gitId":"haoyangw"},"content":"        taskManager \u003d new TaskManager();","lastModifiedDate":"2023-02-07"},{"lineNumber":79,"author":{"gitId":"haoyangw"},"content":"        try {","lastModifiedDate":"2023-02-09"},{"lineNumber":80,"author":{"gitId":"haoyangw"},"content":"            Rica.runCommands();","lastModifiedDate":"2023-02-07"},{"lineNumber":81,"author":{"gitId":"haoyangw"},"content":"        } catch (RicaException exception) {","lastModifiedDate":"2023-02-09"},{"lineNumber":82,"author":{"gitId":"haoyangw"},"content":"            printlnWithIndent(exception.getMessage());","lastModifiedDate":"2023-02-09"},{"lineNumber":83,"author":{"gitId":"haoyangw"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":84,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":85,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":86,"author":{"gitId":"haoyangw"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"haoyangw":86}},{"path":"src/main/java/io/github/haoyangw/rica/exception/RicaException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haoyangw"},"content":"package io.github.haoyangw.rica.exception;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"haoyangw"},"content":"public class RicaException extends RuntimeException {","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"haoyangw"},"content":"    public RicaException() {","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"haoyangw"},"content":"        super();","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"haoyangw"},"content":"    public RicaException(String msg) {","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"haoyangw"},"content":"        super(msg);","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"haoyangw"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"haoyangw":11}},{"path":"src/main/java/io/github/haoyangw/rica/exception/RicaTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haoyangw"},"content":"package io.github.haoyangw.rica.exception;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"haoyangw"},"content":"public class RicaTaskException extends RicaException {","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"haoyangw"},"content":"    public RicaTaskException() {","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"haoyangw"},"content":"        super();","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"haoyangw"},"content":"    public RicaTaskException(String msg) {","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"haoyangw"},"content":"        super(msg);","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"haoyangw"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"haoyangw":12}},{"path":"src/main/java/io/github/haoyangw/rica/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haoyangw"},"content":"package io.github.haoyangw.rica.task;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"haoyangw"},"content":"import io.github.haoyangw.rica.exception.RicaTaskException;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"haoyangw"},"content":"public class Deadline extends Todo {","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"haoyangw"},"content":"    private static final String COMMAND \u003d \"deadline\";","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"haoyangw"},"content":"    private static final String DEADLINE_KEYWORD \u003d \"/by\";","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"haoyangw"},"content":"    private static final String MISSING_DEADLINE_ERROR \u003d \" Forget something? (Hint: Where\u0027s the deadline for this deadline task?)\";","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"haoyangw"},"content":"    private static final String MISSING_DESCRIPTION_ERROR \u003d \" Did you give a description for this deadline task xD\";","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"haoyangw"},"content":"    private static final String TYPE \u003d \"D\";","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"haoyangw"},"content":"    private static final String WRONG_CREATE_CMD_ERROR \u003d \" Hmm I\u0027m being told to set a deadline with the wrong command. Help xP\";","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"haoyangw"},"content":"    protected final String deadline;","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"haoyangw"},"content":"    public Deadline(String description, String deadline) {","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"haoyangw"},"content":"        super(description);","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"haoyangw"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"haoyangw"},"content":"    private static String getDescriptionOf(String command) throws RicaTaskException {","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"haoyangw"},"content":"        String[] parameters \u003d command.split(\" \");","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"haoyangw"},"content":"        int MISSING_PARAMS \u003d 1;","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"haoyangw"},"content":"        if (parameters.length \u003d\u003d MISSING_PARAMS) {","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"haoyangw"},"content":"            throw new RicaTaskException(Deadline.MISSING_DESCRIPTION_ERROR);","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"haoyangw"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"haoyangw"},"content":"        StringBuilder descBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"haoyangw"},"content":"        for (int i \u003d 1; i \u003c parameters.length; i +\u003d 1) {","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"haoyangw"},"content":"            if (parameters[i].equals(Deadline.DEADLINE_KEYWORD)) {","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"haoyangw"},"content":"                if (i \u003d\u003d 1) {","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"haoyangw"},"content":"                    throw new RicaTaskException(Deadline.MISSING_DESCRIPTION_ERROR);","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"haoyangw"},"content":"                }","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"haoyangw"},"content":"                break;","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"haoyangw"},"content":"            }","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"haoyangw"},"content":"            if (i !\u003d 1) {","lastModifiedDate":"2023-02-04"},{"lineNumber":34,"author":{"gitId":"haoyangw"},"content":"                descBuilder.append(\" \");","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"haoyangw"},"content":"            }","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"haoyangw"},"content":"            descBuilder.append(parameters[i]);","lastModifiedDate":"2023-02-04"},{"lineNumber":37,"author":{"gitId":"haoyangw"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"haoyangw"},"content":"        return descBuilder.toString();","lastModifiedDate":"2023-02-08"},{"lineNumber":39,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":41,"author":{"gitId":"haoyangw"},"content":"    private static String getDeadlineOf(String command) throws RicaTaskException {","lastModifiedDate":"2023-02-09"},{"lineNumber":42,"author":{"gitId":"haoyangw"},"content":"        int deadlineKeywordFirstIndex \u003d command.indexOf(Deadline.DEADLINE_KEYWORD);","lastModifiedDate":"2023-02-09"},{"lineNumber":43,"author":{"gitId":"haoyangw"},"content":"        final int NOT_FOUND \u003d -1;","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"haoyangw"},"content":"        if (deadlineKeywordFirstIndex \u003d\u003d NOT_FOUND) {","lastModifiedDate":"2023-02-09"},{"lineNumber":45,"author":{"gitId":"haoyangw"},"content":"            throw new RicaTaskException(Deadline.MISSING_DEADLINE_ERROR);","lastModifiedDate":"2023-02-09"},{"lineNumber":46,"author":{"gitId":"haoyangw"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":47,"author":{"gitId":"haoyangw"},"content":"        int deadlineKeywordLastIndex \u003d deadlineKeywordFirstIndex","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"haoyangw"},"content":"                + Deadline.DEADLINE_KEYWORD.length();","lastModifiedDate":"2023-02-08"},{"lineNumber":49,"author":{"gitId":"haoyangw"},"content":"        String deadline \u003d command.substring(deadlineKeywordLastIndex).trim();","lastModifiedDate":"2023-02-08"},{"lineNumber":50,"author":{"gitId":"haoyangw"},"content":"        if (deadline.isBlank()) {","lastModifiedDate":"2023-02-09"},{"lineNumber":51,"author":{"gitId":"haoyangw"},"content":"            throw new RicaTaskException(Deadline.MISSING_DEADLINE_ERROR);","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"haoyangw"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":53,"author":{"gitId":"haoyangw"},"content":"        return deadline;","lastModifiedDate":"2023-02-08"},{"lineNumber":54,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":56,"author":{"gitId":"haoyangw"},"content":"    public static Deadline create(String command) throws RicaTaskException {","lastModifiedDate":"2023-02-09"},{"lineNumber":57,"author":{"gitId":"haoyangw"},"content":"        String[] parameters \u003d command.split(\" \");","lastModifiedDate":"2023-02-08"},{"lineNumber":58,"author":{"gitId":"haoyangw"},"content":"        // Wrong command for adding a deadline","lastModifiedDate":"2023-02-08"},{"lineNumber":59,"author":{"gitId":"haoyangw"},"content":"        if (!parameters[0].equals(Deadline.COMMAND)) {","lastModifiedDate":"2023-02-08"},{"lineNumber":60,"author":{"gitId":"haoyangw"},"content":"            throw new RicaTaskException(Deadline.WRONG_CREATE_CMD_ERROR);","lastModifiedDate":"2023-02-09"},{"lineNumber":61,"author":{"gitId":"haoyangw"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":62,"author":{"gitId":"haoyangw"},"content":"        String description \u003d Deadline.getDescriptionOf(command);","lastModifiedDate":"2023-02-08"},{"lineNumber":63,"author":{"gitId":"haoyangw"},"content":"        String deadline \u003d Deadline.getDeadlineOf(command);","lastModifiedDate":"2023-02-08"},{"lineNumber":64,"author":{"gitId":"haoyangw"},"content":"        return new Deadline(description, deadline);","lastModifiedDate":"2023-02-03"},{"lineNumber":65,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":66,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":67,"author":{"gitId":"haoyangw"},"content":"    public String getDeadline() {","lastModifiedDate":"2023-02-07"},{"lineNumber":68,"author":{"gitId":"haoyangw"},"content":"        return this.deadline;","lastModifiedDate":"2023-02-07"},{"lineNumber":69,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":70,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":71,"author":{"gitId":"haoyangw"},"content":"    @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":72,"author":{"gitId":"haoyangw"},"content":"    protected String getType() {","lastModifiedDate":"2023-02-03"},{"lineNumber":73,"author":{"gitId":"haoyangw"},"content":"        return Deadline.TYPE;","lastModifiedDate":"2023-02-03"},{"lineNumber":74,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":75,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":76,"author":{"gitId":"haoyangw"},"content":"    @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":77,"author":{"gitId":"haoyangw"},"content":"    public String toString() {","lastModifiedDate":"2023-02-03"},{"lineNumber":78,"author":{"gitId":"haoyangw"},"content":"        return String.format(\"%s (by: %s)\", super.toString(), this.getDeadline());","lastModifiedDate":"2023-02-03"},{"lineNumber":79,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":80,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":81,"author":{"gitId":"haoyangw"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"haoyangw":81}},{"path":"src/main/java/io/github/haoyangw/rica/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haoyangw"},"content":"package io.github.haoyangw.rica.task;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"haoyangw"},"content":"import io.github.haoyangw.rica.exception.RicaTaskException;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"haoyangw"},"content":"public class Event extends Todo {","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"haoyangw"},"content":"    private static final String COMMAND \u003d \"event\";","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"haoyangw"},"content":"    private static final String MISSING_DESC_ERROR \u003d \" Remember to provide a description of the event you\u0027re adding y\u0027know!\";","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"haoyangw"},"content":"    private static final String MISSING_END_TIME_ERROR \u003d \" You didn\u0027t provide an end date/time! :(\";","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"haoyangw"},"content":"    private static final String MISSING_START_TIME_ERROR \u003d \" You didn\u0027t give me a start date/time how do I create an event xD\";","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"haoyangw"},"content":"    private static final String END_KEYWORD \u003d \"/to\";","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"haoyangw"},"content":"    private static final String START_KEYWORD \u003d \"/from\";","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"haoyangw"},"content":"    private static final String TYPE \u003d \"E\";","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"haoyangw"},"content":"    private static final String WRONG_CMD_ERROR \u003d \" Hmm I\u0027m being told to add an event with the wrong command. Help xP\";","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"haoyangw"},"content":"    private final String endTime;","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"haoyangw"},"content":"    private final String startTime;","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"haoyangw"},"content":"    public Event(String description, String startTime, String endTime) {","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"haoyangw"},"content":"        super(description);","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"haoyangw"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"haoyangw"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"haoyangw"},"content":"    private static String getDescriptionOf(String command) throws RicaTaskException {","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"haoyangw"},"content":"        String[] parameters \u003d command.split(\" \");","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"haoyangw"},"content":"        StringBuilder descBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"haoyangw"},"content":"        for (int i \u003d 1; i \u003c parameters.length; i +\u003d 1) {","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"haoyangw"},"content":"            if (parameters[i].equals(Event.START_KEYWORD)) {","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"haoyangw"},"content":"                break;","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"haoyangw"},"content":"            }","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"haoyangw"},"content":"            if (i !\u003d 1) {","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"haoyangw"},"content":"                descBuilder.append(\" \");","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"haoyangw"},"content":"            }","lastModifiedDate":"2023-02-04"},{"lineNumber":33,"author":{"gitId":"haoyangw"},"content":"            descBuilder.append(parameters[i]);","lastModifiedDate":"2023-02-04"},{"lineNumber":34,"author":{"gitId":"haoyangw"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":35,"author":{"gitId":"haoyangw"},"content":"        String description \u003d descBuilder.toString();","lastModifiedDate":"2023-02-04"},{"lineNumber":36,"author":{"gitId":"haoyangw"},"content":"        if (description.isBlank()) {","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"haoyangw"},"content":"            throw new RicaTaskException(Event.MISSING_DESC_ERROR);","lastModifiedDate":"2023-02-09"},{"lineNumber":38,"author":{"gitId":"haoyangw"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"haoyangw"},"content":"        return description;","lastModifiedDate":"2023-02-08"},{"lineNumber":40,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":41,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":42,"author":{"gitId":"haoyangw"},"content":"    private String getEndTime() {","lastModifiedDate":"2023-02-08"},{"lineNumber":43,"author":{"gitId":"haoyangw"},"content":"        return this.endTime;","lastModifiedDate":"2023-02-08"},{"lineNumber":44,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":45,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":46,"author":{"gitId":"haoyangw"},"content":"    private static String getEndTimeOf(String command) throws RicaTaskException {","lastModifiedDate":"2023-02-09"},{"lineNumber":47,"author":{"gitId":"haoyangw"},"content":"        int endDateFirstIndex \u003d command.indexOf(Event.END_KEYWORD)","lastModifiedDate":"2023-02-08"},{"lineNumber":48,"author":{"gitId":"haoyangw"},"content":"                + Event.END_KEYWORD.length();","lastModifiedDate":"2023-02-08"},{"lineNumber":49,"author":{"gitId":"haoyangw"},"content":"        String endTime \u003d command.substring(endDateFirstIndex).trim();","lastModifiedDate":"2023-02-09"},{"lineNumber":50,"author":{"gitId":"haoyangw"},"content":"        if (endTime.isBlank()) {","lastModifiedDate":"2023-02-09"},{"lineNumber":51,"author":{"gitId":"haoyangw"},"content":"            throw new RicaTaskException(Event.MISSING_END_TIME_ERROR);","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"haoyangw"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":53,"author":{"gitId":"haoyangw"},"content":"        return endTime;","lastModifiedDate":"2023-02-09"},{"lineNumber":54,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":55,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":56,"author":{"gitId":"haoyangw"},"content":"    private String getStartTime() {","lastModifiedDate":"2023-02-08"},{"lineNumber":57,"author":{"gitId":"haoyangw"},"content":"        return this.startTime;","lastModifiedDate":"2023-02-08"},{"lineNumber":58,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":59,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":60,"author":{"gitId":"haoyangw"},"content":"    private static String getStartTimeOf(String command) throws RicaTaskException {","lastModifiedDate":"2023-02-09"},{"lineNumber":61,"author":{"gitId":"haoyangw"},"content":"        boolean hasStartTimeKeyword \u003d command.contains(Event.START_KEYWORD);","lastModifiedDate":"2023-02-09"},{"lineNumber":62,"author":{"gitId":"haoyangw"},"content":"        if (!hasStartTimeKeyword) {","lastModifiedDate":"2023-02-09"},{"lineNumber":63,"author":{"gitId":"haoyangw"},"content":"            throw new RicaTaskException(Event.MISSING_START_TIME_ERROR);","lastModifiedDate":"2023-02-09"},{"lineNumber":64,"author":{"gitId":"haoyangw"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":65,"author":{"gitId":"haoyangw"},"content":"        int startDateFirstIndex \u003d command.indexOf(Event.START_KEYWORD)","lastModifiedDate":"2023-02-08"},{"lineNumber":66,"author":{"gitId":"haoyangw"},"content":"                + Event.START_KEYWORD.length();","lastModifiedDate":"2023-02-08"},{"lineNumber":67,"author":{"gitId":"haoyangw"},"content":"        boolean hasEndTimeKeyword \u003d command.contains(Event.END_KEYWORD);","lastModifiedDate":"2023-02-09"},{"lineNumber":68,"author":{"gitId":"haoyangw"},"content":"        if (!hasEndTimeKeyword) {","lastModifiedDate":"2023-02-09"},{"lineNumber":69,"author":{"gitId":"haoyangw"},"content":"            throw new RicaTaskException(Event.MISSING_END_TIME_ERROR);","lastModifiedDate":"2023-02-09"},{"lineNumber":70,"author":{"gitId":"haoyangw"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":71,"author":{"gitId":"haoyangw"},"content":"        int startDateLastIndex \u003d command.indexOf(Event.END_KEYWORD) - 1;","lastModifiedDate":"2023-02-08"},{"lineNumber":72,"author":{"gitId":"haoyangw"},"content":"        String startTime \u003d command.substring(startDateFirstIndex, startDateLastIndex).trim();","lastModifiedDate":"2023-02-09"},{"lineNumber":73,"author":{"gitId":"haoyangw"},"content":"        if (startTime.isBlank()) {","lastModifiedDate":"2023-02-09"},{"lineNumber":74,"author":{"gitId":"haoyangw"},"content":"            throw new RicaTaskException(Event.MISSING_START_TIME_ERROR);","lastModifiedDate":"2023-02-09"},{"lineNumber":75,"author":{"gitId":"haoyangw"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":76,"author":{"gitId":"haoyangw"},"content":"        return startTime;","lastModifiedDate":"2023-02-09"},{"lineNumber":77,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":78,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":79,"author":{"gitId":"haoyangw"},"content":"    @Override","lastModifiedDate":"2023-02-08"},{"lineNumber":80,"author":{"gitId":"haoyangw"},"content":"    protected String getType() {","lastModifiedDate":"2023-02-08"},{"lineNumber":81,"author":{"gitId":"haoyangw"},"content":"        return Event.TYPE;","lastModifiedDate":"2023-02-08"},{"lineNumber":82,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":83,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":84,"author":{"gitId":"haoyangw"},"content":"    public static Event create(String command) throws RicaTaskException {","lastModifiedDate":"2023-02-09"},{"lineNumber":85,"author":{"gitId":"haoyangw"},"content":"        String[] parameters \u003d command.trim().split(\" \");","lastModifiedDate":"2023-02-08"},{"lineNumber":86,"author":{"gitId":"haoyangw"},"content":"        // Wrong command for adding an event","lastModifiedDate":"2023-02-08"},{"lineNumber":87,"author":{"gitId":"haoyangw"},"content":"        if (!parameters[0].equals(Event.COMMAND)) {","lastModifiedDate":"2023-02-08"},{"lineNumber":88,"author":{"gitId":"haoyangw"},"content":"            throw new RicaTaskException(Event.WRONG_CMD_ERROR);","lastModifiedDate":"2023-02-09"},{"lineNumber":89,"author":{"gitId":"haoyangw"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":90,"author":{"gitId":"haoyangw"},"content":"        String description \u003d Event.getDescriptionOf(command);","lastModifiedDate":"2023-02-08"},{"lineNumber":91,"author":{"gitId":"haoyangw"},"content":"        String startTime \u003d Event.getStartTimeOf(command);","lastModifiedDate":"2023-02-08"},{"lineNumber":92,"author":{"gitId":"haoyangw"},"content":"        String endTime \u003d Event.getEndTimeOf(command);","lastModifiedDate":"2023-02-08"},{"lineNumber":93,"author":{"gitId":"haoyangw"},"content":"        return new Event(description, startTime, endTime);","lastModifiedDate":"2023-02-04"},{"lineNumber":94,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":95,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":96,"author":{"gitId":"haoyangw"},"content":"    @Override","lastModifiedDate":"2023-02-04"},{"lineNumber":97,"author":{"gitId":"haoyangw"},"content":"    public String toString() {","lastModifiedDate":"2023-02-04"},{"lineNumber":98,"author":{"gitId":"haoyangw"},"content":"        return String.format(\"%s (from: %s to: %s)\", super.toString(),","lastModifiedDate":"2023-02-04"},{"lineNumber":99,"author":{"gitId":"haoyangw"},"content":"                this.getStartTime(), this.getEndTime());","lastModifiedDate":"2023-02-04"},{"lineNumber":100,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":101,"author":{"gitId":"haoyangw"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"haoyangw":101}},{"path":"src/main/java/io/github/haoyangw/rica/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haoyangw"},"content":"package io.github.haoyangw.rica.task;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"haoyangw"},"content":"public class Task {","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"haoyangw"},"content":"    protected final String description;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"haoyangw"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"haoyangw"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"haoyangw"},"content":"    public String getDescription() {","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"haoyangw"},"content":"        return this.description;","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"haoyangw"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"haoyangw"},"content":"    public String toString() {","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"haoyangw"},"content":"        return this.getDescription();","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"haoyangw"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"haoyangw":18}},{"path":"src/main/java/io/github/haoyangw/rica/task/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haoyangw"},"content":"package io.github.haoyangw.rica.task;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"haoyangw"},"content":"import io.github.haoyangw.rica.exception.RicaTaskException;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"haoyangw"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"haoyangw"},"content":"public class TaskManager {","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"haoyangw"},"content":"    private static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"haoyangw"},"content":"    private static final String ADD_PHRASE \u003d \" New %s I\u0027ll remember: \";","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"haoyangw"},"content":"    private static final String DEADLINE_CMD \u003d \"deadline\";","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"haoyangw"},"content":"    private static final String EVENT_CMD \u003d \"event\";","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"haoyangw"},"content":"    private static final String INVALID_TASK_INDEX_ERROR \u003d \" You alright? I can\u0027t mark a task that doesn\u0027t exist as done xD\";","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"haoyangw"},"content":"    private static final String SINGLE_TASK_ADDED_PHRASE \u003d \" You have %d task for now, all the best!\";","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"haoyangw"},"content":"    private static final String TASK_ADDED_PHRASE \u003d \" You have %d tasks for now, all the best!\";","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"haoyangw"},"content":"    private static final String TODO_CMD \u003d \"todo\";","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"haoyangw"},"content":"    private static final String WRONG_TASK_TYPE \u003d \" Erm I don\u0027t think this task can be marked done xD\";","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"haoyangw"},"content":"    private static void addTask(Task newTask) {","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"haoyangw"},"content":"        if (newTask !\u003d null) {","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"haoyangw"},"content":"            TaskManager.getTasks().add(newTask);","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"haoyangw"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"haoyangw"},"content":"    private static void createTask(String typeOfTask, String command) {","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"haoyangw"},"content":"        switch (typeOfTask) {","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"haoyangw"},"content":"        case TaskManager.TODO_CMD:","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"haoyangw"},"content":"            Todo newTodo \u003d Todo.create(command);","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"haoyangw"},"content":"            TaskManager.addTask(newTodo);","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"haoyangw"},"content":"            printlnWithIndent(String.format(TaskManager.ADD_PHRASE,","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"haoyangw"},"content":"                    TaskManager.TODO_CMD));","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"haoyangw"},"content":"            printlnWithIndent(\"   \" + newTodo.toString());","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"haoyangw"},"content":"            break;","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"haoyangw"},"content":"        case TaskManager.DEADLINE_CMD:","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"haoyangw"},"content":"            Deadline newDeadline \u003d Deadline.create(command);","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"haoyangw"},"content":"            TaskManager.addTask(newDeadline);","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"haoyangw"},"content":"            printlnWithIndent(String.format(TaskManager.ADD_PHRASE,","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"haoyangw"},"content":"                    TaskManager.DEADLINE_CMD));","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"haoyangw"},"content":"            printlnWithIndent(\"   \" + newDeadline.toString());","lastModifiedDate":"2023-02-08"},{"lineNumber":39,"author":{"gitId":"haoyangw"},"content":"            break;","lastModifiedDate":"2023-02-08"},{"lineNumber":40,"author":{"gitId":"haoyangw"},"content":"        case TaskManager.EVENT_CMD:","lastModifiedDate":"2023-02-08"},{"lineNumber":41,"author":{"gitId":"haoyangw"},"content":"            Event newEvent \u003d Event.create(command);","lastModifiedDate":"2023-02-08"},{"lineNumber":42,"author":{"gitId":"haoyangw"},"content":"            TaskManager.addTask(newEvent);","lastModifiedDate":"2023-02-08"},{"lineNumber":43,"author":{"gitId":"haoyangw"},"content":"            printlnWithIndent(String.format(TaskManager.ADD_PHRASE,","lastModifiedDate":"2023-02-08"},{"lineNumber":44,"author":{"gitId":"haoyangw"},"content":"                    TaskManager.EVENT_CMD));","lastModifiedDate":"2023-02-08"},{"lineNumber":45,"author":{"gitId":"haoyangw"},"content":"            printlnWithIndent(\"   \" + newEvent.toString());","lastModifiedDate":"2023-02-08"},{"lineNumber":46,"author":{"gitId":"haoyangw"},"content":"            break;","lastModifiedDate":"2023-02-08"},{"lineNumber":47,"author":{"gitId":"haoyangw"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":48,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":49,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":50,"author":{"gitId":"haoyangw"},"content":"    private static Task getTask(int indexOfTask) {","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"haoyangw"},"content":"        boolean isNegativeIndex \u003d indexOfTask \u003c 0;","lastModifiedDate":"2023-02-07"},{"lineNumber":52,"author":{"gitId":"haoyangw"},"content":"        boolean isIndexTooLarge \u003d indexOfTask \u003e\u003d TaskManager.getTasks().size();","lastModifiedDate":"2023-02-07"},{"lineNumber":53,"author":{"gitId":"haoyangw"},"content":"        if (isNegativeIndex || isIndexTooLarge) {","lastModifiedDate":"2023-02-07"},{"lineNumber":54,"author":{"gitId":"haoyangw"},"content":"            return null;","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"haoyangw"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"haoyangw"},"content":"        return TaskManager.getTasks().get(indexOfTask);","lastModifiedDate":"2023-02-03"},{"lineNumber":57,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":58,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":59,"author":{"gitId":"haoyangw"},"content":"    private static ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-02-07"},{"lineNumber":60,"author":{"gitId":"haoyangw"},"content":"        return TaskManager.tasks;","lastModifiedDate":"2023-02-07"},{"lineNumber":61,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":62,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":63,"author":{"gitId":"haoyangw"},"content":"    private static boolean hasAnyTasks() {","lastModifiedDate":"2023-02-07"},{"lineNumber":64,"author":{"gitId":"haoyangw"},"content":"        return !TaskManager.getTasks().isEmpty();","lastModifiedDate":"2023-02-07"},{"lineNumber":65,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":66,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":67,"author":{"gitId":"haoyangw"},"content":"    private static void insertTask(int indexOfTask, Task newTask) {","lastModifiedDate":"2023-02-07"},{"lineNumber":68,"author":{"gitId":"haoyangw"},"content":"        if (newTask !\u003d null) {","lastModifiedDate":"2023-02-07"},{"lineNumber":69,"author":{"gitId":"haoyangw"},"content":"            TaskManager.getTasks().add(indexOfTask, newTask);","lastModifiedDate":"2023-02-07"},{"lineNumber":70,"author":{"gitId":"haoyangw"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":71,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":72,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":73,"author":{"gitId":"haoyangw"},"content":"    private static void printlnWithIndent(String line) {","lastModifiedDate":"2023-02-07"},{"lineNumber":74,"author":{"gitId":"haoyangw"},"content":"        System.out.print(\"    \");","lastModifiedDate":"2023-02-07"},{"lineNumber":75,"author":{"gitId":"haoyangw"},"content":"        System.out.println(line);","lastModifiedDate":"2023-02-07"},{"lineNumber":76,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":77,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":78,"author":{"gitId":"haoyangw"},"content":"    private static void rmTask(int indexOfTask) {","lastModifiedDate":"2023-02-03"},{"lineNumber":79,"author":{"gitId":"haoyangw"},"content":"        boolean isNegativeIndex \u003d indexOfTask \u003c 0;","lastModifiedDate":"2023-02-07"},{"lineNumber":80,"author":{"gitId":"haoyangw"},"content":"        boolean isIndexTooLarge \u003d indexOfTask \u003e\u003d TaskManager.getTasks().size();","lastModifiedDate":"2023-02-07"},{"lineNumber":81,"author":{"gitId":"haoyangw"},"content":"        if (isNegativeIndex || isIndexTooLarge) {","lastModifiedDate":"2023-02-07"},{"lineNumber":82,"author":{"gitId":"haoyangw"},"content":"            return;","lastModifiedDate":"2023-02-03"},{"lineNumber":83,"author":{"gitId":"haoyangw"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":84,"author":{"gitId":"haoyangw"},"content":"        TaskManager.getTasks().remove(indexOfTask);","lastModifiedDate":"2023-02-03"},{"lineNumber":85,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":86,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":87,"author":{"gitId":"haoyangw"},"content":"    public void createTaskFrom(String command) {","lastModifiedDate":"2023-02-08"},{"lineNumber":88,"author":{"gitId":"haoyangw"},"content":"        String[] parameters \u003d command.split(\" \");","lastModifiedDate":"2023-02-07"},{"lineNumber":89,"author":{"gitId":"haoyangw"},"content":"        String typeOfTask \u003d parameters[0];","lastModifiedDate":"2023-02-07"},{"lineNumber":90,"author":{"gitId":"haoyangw"},"content":"        TaskManager.createTask(typeOfTask, command);","lastModifiedDate":"2023-02-08"},{"lineNumber":91,"author":{"gitId":"haoyangw"},"content":"        int howManyTasks \u003d TaskManager.getTasks().size();","lastModifiedDate":"2023-02-07"},{"lineNumber":92,"author":{"gitId":"haoyangw"},"content":"        if (howManyTasks \u003e 1) {","lastModifiedDate":"2023-02-07"},{"lineNumber":93,"author":{"gitId":"haoyangw"},"content":"            printlnWithIndent(String.format(TaskManager.TASK_ADDED_PHRASE,","lastModifiedDate":"2023-02-07"},{"lineNumber":94,"author":{"gitId":"haoyangw"},"content":"                    TaskManager.getTasks().size()));","lastModifiedDate":"2023-02-07"},{"lineNumber":95,"author":{"gitId":"haoyangw"},"content":"        } else if (howManyTasks \u003d\u003d 1) {","lastModifiedDate":"2023-02-07"},{"lineNumber":96,"author":{"gitId":"haoyangw"},"content":"            printlnWithIndent(String.format(TaskManager.SINGLE_TASK_ADDED_PHRASE,","lastModifiedDate":"2023-02-07"},{"lineNumber":97,"author":{"gitId":"haoyangw"},"content":"                    TaskManager.getTasks().size()));","lastModifiedDate":"2023-02-07"},{"lineNumber":98,"author":{"gitId":"haoyangw"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":99,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":100,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":101,"author":{"gitId":"haoyangw"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":102,"author":{"gitId":"haoyangw"},"content":"     * Mark a given task in the task list as done","lastModifiedDate":"2023-02-03"},{"lineNumber":103,"author":{"gitId":"haoyangw"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":104,"author":{"gitId":"haoyangw"},"content":"     * @param indexOfTask Index of given task in the task list","lastModifiedDate":"2023-02-03"},{"lineNumber":105,"author":{"gitId":"haoyangw"},"content":"     * @return rica.Task object representing the desired task being marked as done,","lastModifiedDate":"2023-02-10"},{"lineNumber":106,"author":{"gitId":"haoyangw"},"content":"     * null if not an instance of rica.Todo","lastModifiedDate":"2023-02-10"},{"lineNumber":107,"author":{"gitId":"haoyangw"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":108,"author":{"gitId":"haoyangw"},"content":"    public static Todo markDone(int indexOfTask) throws RicaTaskException {","lastModifiedDate":"2023-02-09"},{"lineNumber":109,"author":{"gitId":"haoyangw"},"content":"        boolean isNegativeIndex \u003d indexOfTask \u003c 0;","lastModifiedDate":"2023-02-07"},{"lineNumber":110,"author":{"gitId":"haoyangw"},"content":"        boolean isIndexTooLarge \u003d indexOfTask \u003e\u003d TaskManager.getTasks().size();","lastModifiedDate":"2023-02-07"},{"lineNumber":111,"author":{"gitId":"haoyangw"},"content":"        if (isNegativeIndex || isIndexTooLarge) {","lastModifiedDate":"2023-02-07"},{"lineNumber":112,"author":{"gitId":"haoyangw"},"content":"            throw new RicaTaskException(TaskManager.INVALID_TASK_INDEX_ERROR);","lastModifiedDate":"2023-02-09"},{"lineNumber":113,"author":{"gitId":"haoyangw"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":114,"author":{"gitId":"haoyangw"},"content":"        Task selectedTask \u003d TaskManager.getTask(indexOfTask);","lastModifiedDate":"2023-02-03"},{"lineNumber":115,"author":{"gitId":"haoyangw"},"content":"        boolean isTaskATodo \u003d selectedTask instanceof Todo;","lastModifiedDate":"2023-02-07"},{"lineNumber":116,"author":{"gitId":"haoyangw"},"content":"        if (!isTaskATodo) {","lastModifiedDate":"2023-02-07"},{"lineNumber":117,"author":{"gitId":"haoyangw"},"content":"            throw new RicaTaskException(TaskManager.WRONG_TASK_TYPE);","lastModifiedDate":"2023-02-09"},{"lineNumber":118,"author":{"gitId":"haoyangw"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":119,"author":{"gitId":"haoyangw"},"content":"        // At this point, rica.Task is definitely an instance of rica.Todo. Can cast it to rica.Todo safely","lastModifiedDate":"2023-02-10"},{"lineNumber":120,"author":{"gitId":"haoyangw"},"content":"        Todo selectedTodo \u003d (Todo) selectedTask;","lastModifiedDate":"2023-02-03"},{"lineNumber":121,"author":{"gitId":"haoyangw"},"content":"        if (selectedTodo.getIsDone()) {","lastModifiedDate":"2023-02-03"},{"lineNumber":122,"author":{"gitId":"haoyangw"},"content":"            printlnWithIndent(\" Take a break maybe? Alright marked as done my friend:\");","lastModifiedDate":"2023-02-03"},{"lineNumber":123,"author":{"gitId":"haoyangw"},"content":"            printlnWithIndent(\"    \" + selectedTodo);","lastModifiedDate":"2023-02-03"},{"lineNumber":124,"author":{"gitId":"haoyangw"},"content":"            return selectedTodo;","lastModifiedDate":"2023-02-03"},{"lineNumber":125,"author":{"gitId":"haoyangw"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":126,"author":{"gitId":"haoyangw"},"content":"        TaskManager.rmTask(indexOfTask);","lastModifiedDate":"2023-02-03"},{"lineNumber":127,"author":{"gitId":"haoyangw"},"content":"        selectedTodo \u003d selectedTodo.setDone(true);","lastModifiedDate":"2023-02-03"},{"lineNumber":128,"author":{"gitId":"haoyangw"},"content":"        TaskManager.insertTask(indexOfTask, selectedTodo);","lastModifiedDate":"2023-02-03"},{"lineNumber":129,"author":{"gitId":"haoyangw"},"content":"        printlnWithIndent(\" Shall remember that this task is done:\");","lastModifiedDate":"2023-02-04"},{"lineNumber":130,"author":{"gitId":"haoyangw"},"content":"        printlnWithIndent(\"    \" + selectedTodo);","lastModifiedDate":"2023-02-03"},{"lineNumber":131,"author":{"gitId":"haoyangw"},"content":"        return selectedTodo;","lastModifiedDate":"2023-02-03"},{"lineNumber":132,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":133,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":134,"author":{"gitId":"haoyangw"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":135,"author":{"gitId":"haoyangw"},"content":"     * Prints out the list of tasks added so far, or inform the user if no tasks have been added","lastModifiedDate":"2023-02-07"},{"lineNumber":136,"author":{"gitId":"haoyangw"},"content":"     * yet","lastModifiedDate":"2023-02-07"},{"lineNumber":137,"author":{"gitId":"haoyangw"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":138,"author":{"gitId":"haoyangw"},"content":"    public static void printTasks() {","lastModifiedDate":"2023-02-07"},{"lineNumber":139,"author":{"gitId":"haoyangw"},"content":"        if (!TaskManager.hasAnyTasks()) {","lastModifiedDate":"2023-02-07"},{"lineNumber":140,"author":{"gitId":"haoyangw"},"content":"            printlnWithIndent(\" Hope I\u0027m not amnesiac, but I don\u0027t remember any tasks?\");","lastModifiedDate":"2023-02-07"},{"lineNumber":141,"author":{"gitId":"haoyangw"},"content":"        } else {","lastModifiedDate":"2023-02-07"},{"lineNumber":142,"author":{"gitId":"haoyangw"},"content":"            ArrayList\u003cTask\u003e tasks \u003d TaskManager.getTasks();","lastModifiedDate":"2023-02-07"},{"lineNumber":143,"author":{"gitId":"haoyangw"},"content":"            printlnWithIndent(\" I think you have these tasks:\");","lastModifiedDate":"2023-02-07"},{"lineNumber":144,"author":{"gitId":"haoyangw"},"content":"            for (int i \u003d 1; i \u003c\u003d tasks.size(); i +\u003d 1) {","lastModifiedDate":"2023-02-07"},{"lineNumber":145,"author":{"gitId":"haoyangw"},"content":"                printlnWithIndent(\" \" + i + \".\" + tasks.get(i - 1));","lastModifiedDate":"2023-02-07"},{"lineNumber":146,"author":{"gitId":"haoyangw"},"content":"            }","lastModifiedDate":"2023-02-07"},{"lineNumber":147,"author":{"gitId":"haoyangw"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":148,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":149,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":150,"author":{"gitId":"haoyangw"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":151,"author":{"gitId":"haoyangw"},"content":"     * Mark a given task in the task list as not done","lastModifiedDate":"2023-02-03"},{"lineNumber":152,"author":{"gitId":"haoyangw"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":153,"author":{"gitId":"haoyangw"},"content":"     * @param indexOfTask Index of desired task in the task list","lastModifiedDate":"2023-02-03"},{"lineNumber":154,"author":{"gitId":"haoyangw"},"content":"     * @return rica.Task object representing the desired task being marked as not done,","lastModifiedDate":"2023-02-10"},{"lineNumber":155,"author":{"gitId":"haoyangw"},"content":"     * null if not an instance of rica.Todo","lastModifiedDate":"2023-02-10"},{"lineNumber":156,"author":{"gitId":"haoyangw"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":157,"author":{"gitId":"haoyangw"},"content":"    public static Todo unmarkDone(int indexOfTask) throws RicaTaskException {","lastModifiedDate":"2023-02-09"},{"lineNumber":158,"author":{"gitId":"haoyangw"},"content":"        boolean isIndexNegative \u003d indexOfTask \u003c 0;","lastModifiedDate":"2023-02-07"},{"lineNumber":159,"author":{"gitId":"haoyangw"},"content":"        boolean isIndexTooLarge \u003d indexOfTask \u003e\u003d TaskManager.getTasks().size();","lastModifiedDate":"2023-02-07"},{"lineNumber":160,"author":{"gitId":"haoyangw"},"content":"        if (isIndexNegative || isIndexTooLarge) {","lastModifiedDate":"2023-02-07"},{"lineNumber":161,"author":{"gitId":"haoyangw"},"content":"            throw new RicaTaskException(TaskManager.INVALID_TASK_INDEX_ERROR);","lastModifiedDate":"2023-02-09"},{"lineNumber":162,"author":{"gitId":"haoyangw"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":163,"author":{"gitId":"haoyangw"},"content":"        Task selectedTask \u003d TaskManager.getTask(indexOfTask);","lastModifiedDate":"2023-02-03"},{"lineNumber":164,"author":{"gitId":"haoyangw"},"content":"        boolean isTaskATodo \u003d selectedTask instanceof Todo;","lastModifiedDate":"2023-02-07"},{"lineNumber":165,"author":{"gitId":"haoyangw"},"content":"        if (!isTaskATodo) {","lastModifiedDate":"2023-02-07"},{"lineNumber":166,"author":{"gitId":"haoyangw"},"content":"            throw new RicaTaskException(TaskManager.WRONG_TASK_TYPE);","lastModifiedDate":"2023-02-09"},{"lineNumber":167,"author":{"gitId":"haoyangw"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":168,"author":{"gitId":"haoyangw"},"content":"        Todo selectedTodo \u003d (Todo) selectedTask;","lastModifiedDate":"2023-02-03"},{"lineNumber":169,"author":{"gitId":"haoyangw"},"content":"        if (!selectedTodo.getIsDone()) {","lastModifiedDate":"2023-02-03"},{"lineNumber":170,"author":{"gitId":"haoyangw"},"content":"            printlnWithIndent(\" Getting a little ahead of yourself are you xD It\u0027s not even done:\");","lastModifiedDate":"2023-02-03"},{"lineNumber":171,"author":{"gitId":"haoyangw"},"content":"            printlnWithIndent(\"    \" + selectedTodo);","lastModifiedDate":"2023-02-03"},{"lineNumber":172,"author":{"gitId":"haoyangw"},"content":"            return selectedTodo;","lastModifiedDate":"2023-02-03"},{"lineNumber":173,"author":{"gitId":"haoyangw"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":174,"author":{"gitId":"haoyangw"},"content":"        TaskManager.rmTask(indexOfTask);","lastModifiedDate":"2023-02-03"},{"lineNumber":175,"author":{"gitId":"haoyangw"},"content":"        selectedTodo \u003d selectedTodo.setDone(false);","lastModifiedDate":"2023-02-03"},{"lineNumber":176,"author":{"gitId":"haoyangw"},"content":"        TaskManager.insertTask(indexOfTask, selectedTodo);","lastModifiedDate":"2023-02-03"},{"lineNumber":177,"author":{"gitId":"haoyangw"},"content":"        printlnWithIndent(\" (Why??) Anyway, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-02-04"},{"lineNumber":178,"author":{"gitId":"haoyangw"},"content":"        printlnWithIndent(\"    \" + selectedTodo);","lastModifiedDate":"2023-02-03"},{"lineNumber":179,"author":{"gitId":"haoyangw"},"content":"        return selectedTodo;","lastModifiedDate":"2023-02-03"},{"lineNumber":180,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":181,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":182,"author":{"gitId":"haoyangw"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"haoyangw":182}},{"path":"src/main/java/io/github/haoyangw/rica/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haoyangw"},"content":"package io.github.haoyangw.rica.task;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"haoyangw"},"content":"import io.github.haoyangw.rica.exception.RicaTaskException;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"haoyangw"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"haoyangw"},"content":"    private static final String MISSING_DESCRIPTION_ERROR \u003d \" Remember to provide a description of the todo task you\u0027re adding y\u0027know!\";","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"haoyangw"},"content":"    private static final String TYPE \u003d \"T\";","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"haoyangw"},"content":"    protected final boolean isDone;","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"haoyangw"},"content":"    private Todo(String description, boolean isDone) {","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"haoyangw"},"content":"        super(description);","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"haoyangw"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"haoyangw"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"haoyangw"},"content":"        this(description, false);","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"haoyangw"},"content":"    private static String getDescriptionOf(String command) {","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"haoyangw"},"content":"        String[] parameters \u003d command.split(\" \");","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"haoyangw"},"content":"        StringBuilder descriptionBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"haoyangw"},"content":"        for (int i \u003d 1; i \u003c parameters.length; i +\u003d 1) {","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"haoyangw"},"content":"            if (i !\u003d 1) {","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"haoyangw"},"content":"                descriptionBuilder.append(\" \");","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"haoyangw"},"content":"            }","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"haoyangw"},"content":"            descriptionBuilder.append(parameters[i]);","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"haoyangw"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"haoyangw"},"content":"        return descriptionBuilder.toString();","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"haoyangw"},"content":"    protected boolean getIsDone() {","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"haoyangw"},"content":"        return this.isDone;","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":35,"author":{"gitId":"haoyangw"},"content":"    protected String getType() {","lastModifiedDate":"2023-02-07"},{"lineNumber":36,"author":{"gitId":"haoyangw"},"content":"        return Todo.TYPE;","lastModifiedDate":"2023-02-07"},{"lineNumber":37,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":38,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":39,"author":{"gitId":"haoyangw"},"content":"    public static Todo create(String command) throws RicaTaskException {","lastModifiedDate":"2023-02-09"},{"lineNumber":40,"author":{"gitId":"haoyangw"},"content":"        String description \u003d Todo.getDescriptionOf(command);","lastModifiedDate":"2023-02-08"},{"lineNumber":41,"author":{"gitId":"haoyangw"},"content":"        if (description.isBlank()) {","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"haoyangw"},"content":"            throw new RicaTaskException(Todo.MISSING_DESCRIPTION_ERROR);","lastModifiedDate":"2023-02-09"},{"lineNumber":43,"author":{"gitId":"haoyangw"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"haoyangw"},"content":"        return new Todo(description);","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"haoyangw"},"content":"    public Todo setDone(boolean isDone) {","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"haoyangw"},"content":"        return new Todo(this.getDescription(), isDone);","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"haoyangw"},"content":"    @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"haoyangw"},"content":"    public String toString() {","lastModifiedDate":"2023-02-03"},{"lineNumber":53,"author":{"gitId":"haoyangw"},"content":"        String boxContent \u003d this.getIsDone() ? \"X\" : \" \";","lastModifiedDate":"2023-02-03"},{"lineNumber":54,"author":{"gitId":"haoyangw"},"content":"        return String.format(\"[%s][%s] %s\", this.getType(), boxContent, super.toString());","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":57,"author":{"gitId":"haoyangw"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"haoyangw":57}}]
