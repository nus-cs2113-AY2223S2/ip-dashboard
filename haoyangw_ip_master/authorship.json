[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"haoyangw"},"content":"Welcome to R.I.C.A, a chatbot that provides todo list management through a text-based interface! R.I.C.A. is short for Really-Intelligent-Chat-Assistant, and I hope she\u0027ll be helpful for you. Or as Rica would say:","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"haoyangw"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"haoyangw"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"haoyangw"},"content":"     Hello! I\u0027m","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"haoyangw"},"content":"     .______              __          ______             ___          ","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"haoyangw"},"content":"     |   _  \\            |  |        /      |           /   \\         ","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"haoyangw"},"content":"     |  |_)  |           |  |       |  ,----\u0027          /  ^  \\        ","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"haoyangw"},"content":"     |      /            |  |       |  |              /  /_\\  \\       ","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"haoyangw"},"content":"     |  |\\  \\----.  __   |  |  __   |  `----.  __    /  _____  \\   __ ","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"haoyangw"},"content":"     | _| `._____| (__)  |__| (__)   \\______| (__)  /__/     \\__\\ (__)","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"haoyangw"},"content":"     That\u0027s Really-Intelligent-Chat-Assistant for you!","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"haoyangw"},"content":"     How may I be of assistance?","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"haoyangw"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"haoyangw"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"haoyangw"},"content":"## Table of Contents","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"haoyangw"},"content":"\u003c!-- TOC --\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"haoyangw"},"content":"* [User Guide](#user-guide)","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"haoyangw"},"content":"  * [Features](#features)","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"haoyangw"},"content":"    * [Task Type 1: `Todos`](#task-type-1--todos)","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"haoyangw"},"content":"    * [Task Type 2: `Events`](#task-type-2--events)","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"haoyangw"},"content":"    * [Task Type 3: `Deadlines`](#task-type-3--deadlines)","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"haoyangw"},"content":"    * [Find Tasks By Description](#find-tasks-by-description)","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"haoyangw"},"content":"    * [Task Completion Status](#task-completion-status)","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"haoyangw"},"content":"    * [Task Deletion](#task-deletion)","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"haoyangw"},"content":"    * [Task Data Storage](#task-data-storage)","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"haoyangw"},"content":"  * [Usage](#usage)","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"haoyangw"},"content":"    * [`todo` - New Todo Task](#todo---new-todo-task)","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"haoyangw"},"content":"    * [`deadline` - New Deadline Task](#deadline---new-deadline-task)","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"haoyangw"},"content":"    * [`event` - New Event Task](#event---new-event-task)","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"haoyangw"},"content":"    * [`list` - List all Tasks](#list---list-all-tasks)","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"haoyangw"},"content":"    * [`mark` - Marks a Task as done](#mark---marks-a-task-as-done)","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"haoyangw"},"content":"    * [`unmark` - Marks a Task as not done](#unmark---marks-a-task-as-not-done)","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"haoyangw"},"content":"    * [`delete` - Deletes a Task](#delete---deletes-a-task)","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"haoyangw"},"content":"    * [`find` - Find Task by Keyword](#find---find-task-by-keyword)","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"haoyangw"},"content":"    * [`bye` - Turns Rica Off](#bye---turns-rica-off)","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"haoyangw"},"content":"\u003c!-- TOC --\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":42,"author":{"gitId":"haoyangw"},"content":"### Task Type 1: `Todos`","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"haoyangw"},"content":"Most basic Task supported by Rica. Todo Tasks are either done or not done(commands are explained below), but are considered not done when first created. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"haoyangw"},"content":"Each Todo also has a Task **description** of what work needs to be done exactly.","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"haoyangw"},"content":"### Task Type 2: `Events`","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"haoyangw"},"content":"A kind of Todo that represents an Event. Event Tasks have an associated **start date and/or time** and **end date and/or time** that, accordingly, indicates when that Event will begin and end. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"haoyangw"},"content":"Like Todos, they can be marked done or not done(default state when first created), and each have an Event description as well.","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"haoyangw"},"content":"### Task Type 3: `Deadlines`","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"haoyangw"},"content":"Another kind of Todo that represents a Deadline(scary stuff, eh?). Deadline Tasks have a specified **due date** that refers to the date and/or time before which they must be completed(or suffer the consequences! oh dear). \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"haoyangw"},"content":"Anyway, like Todos, they can also be marked done or not done(default state when first created), and each have a Deadline description.","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"haoyangw"},"content":"### Find Tasks By Description","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"haoyangw"},"content":"After creating a long list of Tasks(bless your eyes, by the way), you may request for Rica to return a list of _only those Tasks_ that have _descriptions matching a certain **keyword**_ specified by you(see command description below for details). Handy right?","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"haoyangw"},"content":"### Task Completion Status","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"haoyangw"},"content":"All Tasks can be marked **done** or **not done**. Rica will help you remember this state for every Task you create, and you may mark any Task as done or not done(oh no) with commands explained further below. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"haoyangw"},"content":"This status is indicated by a cross `[X]` if a Task is done or an empty box `[ ]` if not done when Rica is told to list all Tasks she remembers. See `list` command below for an example.","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"haoyangw"},"content":"### Task Deletion","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":68,"author":{"gitId":"haoyangw"},"content":"**Deletes** a Task remembered by Rica. So your Task list has _one less Task_! My personal favourite action in life, and Rica\u0027s favourite(I believe, ask her some day).","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":70,"author":{"gitId":"haoyangw"},"content":"### Task Data Storage","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":72,"author":{"gitId":"haoyangw"},"content":"Rica has a fantastic memory, so she will _record your list of Tasks_ in your computer\u0027s storage and _restore her previous memories_ the next time she is awakened. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"haoyangw"},"content":"Her memories will be stored in the data\\tasks.txt file(relative to Rica\u0027s jar file). Don\u0027t delete this, unless you love an amnesiac Rica. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"haoyangw"},"content":"And don\u0027t touch her memories please, unless you speak Rica-language fluently, I don\u0027t want your Task list disappearing!","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":78,"author":{"gitId":"haoyangw"},"content":"### `todo` - New Todo Task","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":80,"author":{"gitId":"haoyangw"},"content":"Creates a new Todo Task with the given description and a default state of not done.","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":82,"author":{"gitId":"haoyangw"},"content":"**Syntax**:","lastModifiedDate":"2023-03-03"},{"lineNumber":83,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":84,"author":{"gitId":"haoyangw"},"content":"`todo (your-task-description)`","lastModifiedDate":"2023-03-03"},{"lineNumber":85,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":86,"author":{"gitId":"haoyangw"},"content":"**Example of usage**: ","lastModifiedDate":"2023-03-03"},{"lineNumber":87,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":88,"author":{"gitId":"haoyangw"},"content":"`todo Remember to be kind to yourself`","lastModifiedDate":"2023-03-03"},{"lineNumber":89,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":90,"author":{"gitId":"haoyangw"},"content":"**Expected outcome**:","lastModifiedDate":"2023-03-03"},{"lineNumber":91,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":92,"author":{"gitId":"haoyangw"},"content":"Rica will remember a new Todo Task with a description \u0027Remember to be kind to yourself\u0027 for you, which will be added to your list of Tasks.","lastModifiedDate":"2023-03-03"},{"lineNumber":93,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":94,"author":{"gitId":"haoyangw"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":95,"author":{"gitId":"haoyangw"},"content":"todo Remember to be kind to yourself","lastModifiedDate":"2023-03-03"},{"lineNumber":96,"author":{"gitId":"haoyangw"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":97,"author":{"gitId":"haoyangw"},"content":"     New todo I\u0027ll remember: ","lastModifiedDate":"2023-03-03"},{"lineNumber":98,"author":{"gitId":"haoyangw"},"content":"       [T][ ] Remember to be kind to yourself","lastModifiedDate":"2023-03-03"},{"lineNumber":99,"author":{"gitId":"haoyangw"},"content":"     You have 1 task for now, all the best!","lastModifiedDate":"2023-03-03"},{"lineNumber":100,"author":{"gitId":"haoyangw"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":101,"author":{"gitId":"haoyangw"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":102,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":103,"author":{"gitId":"haoyangw"},"content":"### `deadline` - New Deadline Task","lastModifiedDate":"2023-03-03"},{"lineNumber":104,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":105,"author":{"gitId":"haoyangw"},"content":"Creates a new Deadline Task with the given description and due date.","lastModifiedDate":"2023-03-03"},{"lineNumber":106,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":107,"author":{"gitId":"haoyangw"},"content":"**Syntax**:","lastModifiedDate":"2023-03-03"},{"lineNumber":108,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":109,"author":{"gitId":"haoyangw"},"content":"`deadline (your-task-description) /by (your-deadline)`","lastModifiedDate":"2023-03-03"},{"lineNumber":110,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":111,"author":{"gitId":"haoyangw"},"content":"**Example of usage**:","lastModifiedDate":"2023-03-03"},{"lineNumber":112,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":113,"author":{"gitId":"haoyangw"},"content":"`deadline Fall asleep /by 10pm`","lastModifiedDate":"2023-03-03"},{"lineNumber":114,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":115,"author":{"gitId":"haoyangw"},"content":"**Expected outcome**:","lastModifiedDate":"2023-03-03"},{"lineNumber":116,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":117,"author":{"gitId":"haoyangw"},"content":"Rica will remember that you have a deadline called \u0027Fall asleep\u0027 to meet by 10pm, which is added to your list of Tasks.","lastModifiedDate":"2023-03-03"},{"lineNumber":118,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":119,"author":{"gitId":"haoyangw"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":120,"author":{"gitId":"haoyangw"},"content":"deadline Fall asleep /by 10pm","lastModifiedDate":"2023-03-03"},{"lineNumber":121,"author":{"gitId":"haoyangw"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":122,"author":{"gitId":"haoyangw"},"content":"     New deadline I\u0027ll remember: ","lastModifiedDate":"2023-03-03"},{"lineNumber":123,"author":{"gitId":"haoyangw"},"content":"       [D][ ] Fall asleep (by: 10pm)","lastModifiedDate":"2023-03-03"},{"lineNumber":124,"author":{"gitId":"haoyangw"},"content":"     You have 1 task for now, all the best!","lastModifiedDate":"2023-03-03"},{"lineNumber":125,"author":{"gitId":"haoyangw"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":126,"author":{"gitId":"haoyangw"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":127,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":128,"author":{"gitId":"haoyangw"},"content":"### `event` - New Event Task","lastModifiedDate":"2023-03-03"},{"lineNumber":129,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":130,"author":{"gitId":"haoyangw"},"content":"Creates a new Event Task with the given description, start date/time and end date/time.","lastModifiedDate":"2023-03-03"},{"lineNumber":131,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":132,"author":{"gitId":"haoyangw"},"content":"**Syntax**:","lastModifiedDate":"2023-03-03"},{"lineNumber":133,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":134,"author":{"gitId":"haoyangw"},"content":"`event (your-tassk-description) /from (your-start-date) /to (your-end-date)`","lastModifiedDate":"2023-03-03"},{"lineNumber":135,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":136,"author":{"gitId":"haoyangw"},"content":"**Example of usage**:","lastModifiedDate":"2023-03-03"},{"lineNumber":137,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":138,"author":{"gitId":"haoyangw"},"content":"`event Watch sunset /from 7pm /to 7.15pm`","lastModifiedDate":"2023-03-03"},{"lineNumber":139,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":140,"author":{"gitId":"haoyangw"},"content":"**Expected outcome**:","lastModifiedDate":"2023-03-03"},{"lineNumber":141,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":142,"author":{"gitId":"haoyangw"},"content":"Rica will keep in mind that you want to \u0027Watch sunset\u0027 from 7pm to 7.15pm, and this Deadline is added to your list of Tasks.","lastModifiedDate":"2023-03-03"},{"lineNumber":143,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":144,"author":{"gitId":"haoyangw"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":145,"author":{"gitId":"haoyangw"},"content":"event Watch sunset /from 7pm /to 7.15pm","lastModifiedDate":"2023-03-03"},{"lineNumber":146,"author":{"gitId":"haoyangw"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":147,"author":{"gitId":"haoyangw"},"content":"     New event I\u0027ll remember: ","lastModifiedDate":"2023-03-03"},{"lineNumber":148,"author":{"gitId":"haoyangw"},"content":"       [E][ ] Watch sunset (from: 7pm to: 7.15pm)","lastModifiedDate":"2023-03-03"},{"lineNumber":149,"author":{"gitId":"haoyangw"},"content":"     You have 1 task for now, all the best!","lastModifiedDate":"2023-03-03"},{"lineNumber":150,"author":{"gitId":"haoyangw"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":151,"author":{"gitId":"haoyangw"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":152,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":153,"author":{"gitId":"haoyangw"},"content":"### `list` - List all Tasks","lastModifiedDate":"2023-03-03"},{"lineNumber":154,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":155,"author":{"gitId":"haoyangw"},"content":"Lists all Tasks that Rica currently remembers along with their completion status.","lastModifiedDate":"2023-03-03"},{"lineNumber":156,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":157,"author":{"gitId":"haoyangw"},"content":"**Example of usage**:","lastModifiedDate":"2023-03-03"},{"lineNumber":158,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":159,"author":{"gitId":"haoyangw"},"content":"`list`","lastModifiedDate":"2023-03-03"},{"lineNumber":160,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":161,"author":{"gitId":"haoyangw"},"content":"**Expected outcome**:","lastModifiedDate":"2023-03-03"},{"lineNumber":162,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":163,"author":{"gitId":"haoyangw"},"content":"Rica-language description of all the Tasks you told her to remember for you as well as which Tasks are done or not done.","lastModifiedDate":"2023-03-03"},{"lineNumber":164,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":165,"author":{"gitId":"haoyangw"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":166,"author":{"gitId":"haoyangw"},"content":"list","lastModifiedDate":"2023-03-03"},{"lineNumber":167,"author":{"gitId":"haoyangw"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":168,"author":{"gitId":"haoyangw"},"content":"     I think you have these tasks:","lastModifiedDate":"2023-03-03"},{"lineNumber":169,"author":{"gitId":"haoyangw"},"content":"     1.[E][ ] Watch sunset (from: 7pm to: 7.15pm)","lastModifiedDate":"2023-03-03"},{"lineNumber":170,"author":{"gitId":"haoyangw"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":171,"author":{"gitId":"haoyangw"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":172,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":173,"author":{"gitId":"haoyangw"},"content":"### `mark` - Marks a Task as done","lastModifiedDate":"2023-03-03"},{"lineNumber":174,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":175,"author":{"gitId":"haoyangw"},"content":"Given the Task number(according to Rica\u0027s list), mark the corresponding Task as done by the user(hooray!).","lastModifiedDate":"2023-03-03"},{"lineNumber":176,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":177,"author":{"gitId":"haoyangw"},"content":"**Syntax**:","lastModifiedDate":"2023-03-03"},{"lineNumber":178,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":179,"author":{"gitId":"haoyangw"},"content":"`mark (your-task-number)`","lastModifiedDate":"2023-03-03"},{"lineNumber":180,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":181,"author":{"gitId":"haoyangw"},"content":"**Example of usage**:","lastModifiedDate":"2023-03-03"},{"lineNumber":182,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":183,"author":{"gitId":"haoyangw"},"content":"`mark 1`","lastModifiedDate":"2023-03-03"},{"lineNumber":184,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":185,"author":{"gitId":"haoyangw"},"content":"**Expected outcome**:","lastModifiedDate":"2023-03-03"},{"lineNumber":186,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":187,"author":{"gitId":"haoyangw"},"content":"Task number 1 is now done, and the next time you tell Rica to `list`, Task number 1 is indicated as done.","lastModifiedDate":"2023-03-03"},{"lineNumber":188,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":189,"author":{"gitId":"haoyangw"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":190,"author":{"gitId":"haoyangw"},"content":"mark 1","lastModifiedDate":"2023-03-03"},{"lineNumber":191,"author":{"gitId":"haoyangw"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":192,"author":{"gitId":"haoyangw"},"content":"     Shall remember that this task is done:","lastModifiedDate":"2023-03-03"},{"lineNumber":193,"author":{"gitId":"haoyangw"},"content":"        [E][X] Watch sunset (from: 7pm to: 7.15pm)","lastModifiedDate":"2023-03-03"},{"lineNumber":194,"author":{"gitId":"haoyangw"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":195,"author":{"gitId":"haoyangw"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":196,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":197,"author":{"gitId":"haoyangw"},"content":"### `unmark` - Marks a Task as not done","lastModifiedDate":"2023-03-03"},{"lineNumber":198,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":199,"author":{"gitId":"haoyangw"},"content":"Given the Task number(according to Rica\u0027s list), indicate that the corresponding Task is not done.","lastModifiedDate":"2023-03-03"},{"lineNumber":200,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":201,"author":{"gitId":"haoyangw"},"content":"**Syntax**:","lastModifiedDate":"2023-03-03"},{"lineNumber":202,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":203,"author":{"gitId":"haoyangw"},"content":"`unmark (your-task-number)`","lastModifiedDate":"2023-03-03"},{"lineNumber":204,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":205,"author":{"gitId":"haoyangw"},"content":"**Example of usage**:","lastModifiedDate":"2023-03-03"},{"lineNumber":206,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":207,"author":{"gitId":"haoyangw"},"content":"`unmark 1`","lastModifiedDate":"2023-03-03"},{"lineNumber":208,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":209,"author":{"gitId":"haoyangw"},"content":"**Expected outcome**:","lastModifiedDate":"2023-03-03"},{"lineNumber":210,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":211,"author":{"gitId":"haoyangw"},"content":"Task number 1 is now not done, and the next time you tell Rica to `list`, Task number 1 is labelled as not done.","lastModifiedDate":"2023-03-03"},{"lineNumber":212,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":213,"author":{"gitId":"haoyangw"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":214,"author":{"gitId":"haoyangw"},"content":"unmark 1","lastModifiedDate":"2023-03-03"},{"lineNumber":215,"author":{"gitId":"haoyangw"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":216,"author":{"gitId":"haoyangw"},"content":"     (Why??) Anyway, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2023-03-03"},{"lineNumber":217,"author":{"gitId":"haoyangw"},"content":"        [E][ ] Watch sunset (from: 7pm to: 7.15pm)","lastModifiedDate":"2023-03-03"},{"lineNumber":218,"author":{"gitId":"haoyangw"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":219,"author":{"gitId":"haoyangw"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":220,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":221,"author":{"gitId":"haoyangw"},"content":"### `delete` - Deletes a Task","lastModifiedDate":"2023-03-03"},{"lineNumber":222,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":223,"author":{"gitId":"haoyangw"},"content":"Given the Task number within Rica\u0027s Task list, Rica will forget that you have that particular Task(I hope you\u0027re not skipping duty!).","lastModifiedDate":"2023-03-03"},{"lineNumber":224,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":225,"author":{"gitId":"haoyangw"},"content":"**Syntax**:","lastModifiedDate":"2023-03-03"},{"lineNumber":226,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":227,"author":{"gitId":"haoyangw"},"content":"`delete (your-task-number)`","lastModifiedDate":"2023-03-03"},{"lineNumber":228,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":229,"author":{"gitId":"haoyangw"},"content":"**Example of usage**:","lastModifiedDate":"2023-03-03"},{"lineNumber":230,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":231,"author":{"gitId":"haoyangw"},"content":"`delete 1`","lastModifiedDate":"2023-03-03"},{"lineNumber":232,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":233,"author":{"gitId":"haoyangw"},"content":"**Expected outcome**:","lastModifiedDate":"2023-03-03"},{"lineNumber":234,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":235,"author":{"gitId":"haoyangw"},"content":"Task number 1 will be deleted, so it will no longer be listed when you tell Rica to `list`.","lastModifiedDate":"2023-03-03"},{"lineNumber":236,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":237,"author":{"gitId":"haoyangw"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":238,"author":{"gitId":"haoyangw"},"content":"delete 1","lastModifiedDate":"2023-03-03"},{"lineNumber":239,"author":{"gitId":"haoyangw"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":240,"author":{"gitId":"haoyangw"},"content":"     I have removed this task for you:","lastModifiedDate":"2023-03-03"},{"lineNumber":241,"author":{"gitId":"haoyangw"},"content":"       [E][ ] Watch sunset (from: 7pm to: 7.15pm)","lastModifiedDate":"2023-03-03"},{"lineNumber":242,"author":{"gitId":"haoyangw"},"content":"     Let\u0027s see... You now have 0 tasks left. Keep going!","lastModifiedDate":"2023-03-03"},{"lineNumber":243,"author":{"gitId":"haoyangw"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":244,"author":{"gitId":"haoyangw"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":245,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":246,"author":{"gitId":"haoyangw"},"content":"### `find` - Find Task by Keyword","lastModifiedDate":"2023-03-03"},{"lineNumber":247,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":248,"author":{"gitId":"haoyangw"},"content":"Given a keyword, Rica will look through her memory and provide you a list of all Tasks with a matching description.","lastModifiedDate":"2023-03-03"},{"lineNumber":249,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":250,"author":{"gitId":"haoyangw"},"content":"**Syntax**:","lastModifiedDate":"2023-03-03"},{"lineNumber":251,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":252,"author":{"gitId":"haoyangw"},"content":"`find (your-keyword)`","lastModifiedDate":"2023-03-03"},{"lineNumber":253,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":254,"author":{"gitId":"haoyangw"},"content":"**Example of usage**:","lastModifiedDate":"2023-03-03"},{"lineNumber":255,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":256,"author":{"gitId":"haoyangw"},"content":"`find sunset`","lastModifiedDate":"2023-03-03"},{"lineNumber":257,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":258,"author":{"gitId":"haoyangw"},"content":"**Expected outcome**:","lastModifiedDate":"2023-03-03"},{"lineNumber":259,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":260,"author":{"gitId":"haoyangw"},"content":"Task with a description containing the word \u0027sunset\u0027 is shown to the user.","lastModifiedDate":"2023-03-03"},{"lineNumber":261,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":262,"author":{"gitId":"haoyangw"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":263,"author":{"gitId":"haoyangw"},"content":"find sunset","lastModifiedDate":"2023-03-03"},{"lineNumber":264,"author":{"gitId":"haoyangw"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":265,"author":{"gitId":"haoyangw"},"content":"     I found some matching tasks for \u0027sunset\u0027:","lastModifiedDate":"2023-03-03"},{"lineNumber":266,"author":{"gitId":"haoyangw"},"content":"     1.[E][ ] Watch sunset (from: 7pm to: 7.15pm)","lastModifiedDate":"2023-03-03"},{"lineNumber":267,"author":{"gitId":"haoyangw"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":268,"author":{"gitId":"haoyangw"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":269,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":270,"author":{"gitId":"haoyangw"},"content":"### `bye` - Turns Rica Off","lastModifiedDate":"2023-03-03"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":272,"author":{"gitId":"haoyangw"},"content":"Rica will bid you adieu and shut down. Hope you know what you\u0027re doing!","lastModifiedDate":"2023-03-03"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":274,"author":{"gitId":"haoyangw"},"content":"**Example of usage**:","lastModifiedDate":"2023-03-03"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":276,"author":{"gitId":"haoyangw"},"content":"`bye`","lastModifiedDate":"2023-03-03"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":278,"author":{"gitId":"haoyangw"},"content":"**Expected outcome**:","lastModifiedDate":"2023-03-03"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":280,"author":{"gitId":"haoyangw"},"content":"Rica is gone!","lastModifiedDate":"2023-03-03"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":282,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":283,"author":{"gitId":"haoyangw"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":284,"author":{"gitId":"haoyangw"},"content":"     Leaving so soon? Come back anytime, I\u0027ll be happy to help!","lastModifiedDate":"2023-03-03"},{"lineNumber":285,"author":{"gitId":"haoyangw"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":286,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"haoyangw":268,"-":18}},{"path":"src/main/java/io/github/haoyangw/rica/Rica.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haoyangw"},"content":"package io.github.haoyangw.rica;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"haoyangw"},"content":"import io.github.haoyangw.rica.exception.RicaException;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"haoyangw"},"content":"import io.github.haoyangw.rica.exception.RicaTaskException;","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"haoyangw"},"content":"import io.github.haoyangw.rica.input.Command;","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"haoyangw"},"content":"import io.github.haoyangw.rica.input.CommandManager;","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"haoyangw"},"content":"import io.github.haoyangw.rica.task.TaskManager;","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"haoyangw"},"content":"import io.github.haoyangw.rica.ui.TextUi;","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"haoyangw"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"haoyangw"},"content":" * Main class of the Rica program. main() is the method executed each time this","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"haoyangw"},"content":" *   Java program is run.","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"haoyangw"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"haoyangw"},"content":"public class Rica {","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"haoyangw"},"content":"    private static final String BYE_COMMAND \u003d \"bye\";","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"haoyangw"},"content":"    private final CommandManager commandManager;","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"haoyangw"},"content":"    private final TaskManager taskManager;","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"haoyangw"},"content":"    private final TextUi textUi;","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"haoyangw"},"content":"    public Rica() {","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"haoyangw"},"content":"        this.commandManager \u003d new CommandManager();","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"haoyangw"},"content":"        this.taskManager \u003d new TaskManager();","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"haoyangw"},"content":"        this.textUi \u003d new TextUi();","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"haoyangw"},"content":"    private CommandManager getCommandManager() {","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"haoyangw"},"content":"        return this.commandManager;","lastModifiedDate":"2023-02-27"},{"lineNumber":28,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":29,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":30,"author":{"gitId":"haoyangw"},"content":"    private TaskManager getTaskManager() {","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"haoyangw"},"content":"        return this.taskManager;","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"haoyangw"},"content":"    private TextUi getTextUi() {","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"haoyangw"},"content":"        return this.textUi;","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"haoyangw"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"haoyangw"},"content":"     * Parse the command entered into CLI and execute the corresponding actions.","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"haoyangw"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"haoyangw"},"content":"     * If an error occurs while executing any command, print an error message to","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"haoyangw"},"content":"     *   inform the user about it.","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"haoyangw"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"haoyangw"},"content":"    private void runCommands() throws RicaTaskException {","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"haoyangw"},"content":"        String command \u003d \"\";","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"haoyangw"},"content":"        do {","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"haoyangw"},"content":"            command \u003d this.getCommandManager().getNextCommand();","lastModifiedDate":"2023-02-27"},{"lineNumber":48,"author":{"gitId":"haoyangw"},"content":"            this.getTextUi().printHeader();","lastModifiedDate":"2023-02-23"},{"lineNumber":49,"author":{"gitId":"haoyangw"},"content":"            try {","lastModifiedDate":"2023-02-11"},{"lineNumber":50,"author":{"gitId":"haoyangw"},"content":"                Command nextCmd \u003d CommandManager.parse(command, this.getTaskManager());","lastModifiedDate":"2023-02-27"},{"lineNumber":51,"author":{"gitId":"haoyangw"},"content":"                nextCmd.run();","lastModifiedDate":"2023-02-27"},{"lineNumber":52,"author":{"gitId":"haoyangw"},"content":"            } catch (RicaException exception) {","lastModifiedDate":"2023-02-27"},{"lineNumber":53,"author":{"gitId":"haoyangw"},"content":"                this.getTextUi().printErrorMessage(exception);","lastModifiedDate":"2023-02-27"},{"lineNumber":54,"author":{"gitId":"haoyangw"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"haoyangw"},"content":"            this.getTextUi().printFooter();","lastModifiedDate":"2023-02-23"},{"lineNumber":56,"author":{"gitId":"haoyangw"},"content":"        } while (!command.equals(Rica.BYE_COMMAND));","lastModifiedDate":"2023-02-27"},{"lineNumber":57,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":59,"author":{"gitId":"haoyangw"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":60,"author":{"gitId":"haoyangw"},"content":"     * Performs Rica\u0027s initialisation steps, namely greeting the user and continuously","lastModifiedDate":"2023-03-01"},{"lineNumber":61,"author":{"gitId":"haoyangw"},"content":"     *   reading the user\u0027s commands","lastModifiedDate":"2023-03-01"},{"lineNumber":62,"author":{"gitId":"haoyangw"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":63,"author":{"gitId":"haoyangw"},"content":"    public void start() {","lastModifiedDate":"2023-02-23"},{"lineNumber":64,"author":{"gitId":"haoyangw"},"content":"        this.getTextUi().printWelcomeMessage();","lastModifiedDate":"2023-02-23"},{"lineNumber":65,"author":{"gitId":"haoyangw"},"content":"        this.getTaskManager().initialise();","lastModifiedDate":"2023-03-02"},{"lineNumber":66,"author":{"gitId":"haoyangw"},"content":"        try {","lastModifiedDate":"2023-02-09"},{"lineNumber":67,"author":{"gitId":"haoyangw"},"content":"            this.runCommands();","lastModifiedDate":"2023-02-23"},{"lineNumber":68,"author":{"gitId":"haoyangw"},"content":"        } catch (RicaException exception) {","lastModifiedDate":"2023-02-09"},{"lineNumber":69,"author":{"gitId":"haoyangw"},"content":"            this.getTextUi().printErrorMessage(exception);","lastModifiedDate":"2023-02-23"},{"lineNumber":70,"author":{"gitId":"haoyangw"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":71,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":72,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":73,"author":{"gitId":"haoyangw"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":74,"author":{"gitId":"haoyangw"},"content":"     * Main method of the Rica program that is executed every time Rica is started.","lastModifiedDate":"2023-03-01"},{"lineNumber":75,"author":{"gitId":"haoyangw"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":76,"author":{"gitId":"haoyangw"},"content":"     * @param args Commandline arguments passed by the user when executing the Rica","lastModifiedDate":"2023-03-01"},{"lineNumber":77,"author":{"gitId":"haoyangw"},"content":"     *   jar file","lastModifiedDate":"2023-03-01"},{"lineNumber":78,"author":{"gitId":"haoyangw"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":79,"author":{"gitId":"haoyangw"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-23"},{"lineNumber":80,"author":{"gitId":"haoyangw"},"content":"        new Rica().start();","lastModifiedDate":"2023-02-23"},{"lineNumber":81,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":82,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":83,"author":{"gitId":"haoyangw"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"haoyangw":83}},{"path":"src/main/java/io/github/haoyangw/rica/exception/RicaCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haoyangw"},"content":"package io.github.haoyangw.rica.exception;","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"haoyangw"},"content":"public class RicaCommandException extends RicaException {","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"haoyangw"},"content":"    public RicaCommandException() {","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"haoyangw"},"content":"        super();","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"haoyangw"},"content":"    public RicaCommandException(String msg) {","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"haoyangw"},"content":"        super(msg);","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"haoyangw"},"content":"}","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"haoyangw":11}},{"path":"src/main/java/io/github/haoyangw/rica/exception/RicaException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haoyangw"},"content":"package io.github.haoyangw.rica.exception;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"haoyangw"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"haoyangw"},"content":" * Represents and categorises Rica-specific runtime \u003ccode\u003eExceptions\u003c/code\u003e for","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"haoyangw"},"content":" *   more specific exception handling in Rica\u0027s internal code","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"haoyangw"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"haoyangw"},"content":"public class RicaException extends RuntimeException {","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"haoyangw"},"content":"    public RicaException() {","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"haoyangw"},"content":"        super();","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"haoyangw"},"content":"    public RicaException(String msg) {","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"haoyangw"},"content":"        super(msg);","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"haoyangw"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"haoyangw":15}},{"path":"src/main/java/io/github/haoyangw/rica/exception/RicaSerializationException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haoyangw"},"content":"package io.github.haoyangw.rica.exception;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"haoyangw"},"content":"public class RicaSerializationException extends RicaException {","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"haoyangw"},"content":"    public RicaSerializationException() {","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"haoyangw"},"content":"        super();","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"haoyangw"},"content":"    public RicaSerializationException(String msg) {","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"haoyangw"},"content":"        super(msg);","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"haoyangw"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"haoyangw":12}},{"path":"src/main/java/io/github/haoyangw/rica/exception/RicaStorageException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haoyangw"},"content":"package io.github.haoyangw.rica.exception;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"haoyangw"},"content":"public class RicaStorageException extends RicaException {","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"haoyangw"},"content":"    public RicaStorageException() {","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"haoyangw"},"content":"        super();","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"haoyangw"},"content":"    public RicaStorageException(String msg) {","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"haoyangw"},"content":"        super(msg);","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"haoyangw"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"haoyangw":11}},{"path":"src/main/java/io/github/haoyangw/rica/exception/RicaTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haoyangw"},"content":"package io.github.haoyangw.rica.exception;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"haoyangw"},"content":"public class RicaTaskException extends RicaException {","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"haoyangw"},"content":"    public RicaTaskException() {","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"haoyangw"},"content":"        super();","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"haoyangw"},"content":"    public RicaTaskException(String msg) {","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"haoyangw"},"content":"        super(msg);","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"haoyangw"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"haoyangw":12}},{"path":"src/main/java/io/github/haoyangw/rica/input/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haoyangw"},"content":"package io.github.haoyangw.rica.input;","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"haoyangw"},"content":"import io.github.haoyangw.rica.task.TaskManager;","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"haoyangw"},"content":"import io.github.haoyangw.rica.ui.TextUi;","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"haoyangw"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"haoyangw"},"content":"    public ByeCommand(String command, TaskManager taskManager) {","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"haoyangw"},"content":"        super(command, taskManager);","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"haoyangw"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"haoyangw"},"content":"     * Executes the \u0027bye\u0027 command issued by the user, which involves printing Rica\u0027s","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"haoyangw"},"content":"     *   signature goodbye message to tell the user how much she\u0027ll miss him/her","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"haoyangw"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"haoyangw"},"content":"    @Override","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"haoyangw"},"content":"    public void run() {","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"haoyangw"},"content":"        super.getTextUi().printGoodbyeMessage();","lastModifiedDate":"2023-02-27"},{"lineNumber":19,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"haoyangw"},"content":"}","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"haoyangw":20}},{"path":"src/main/java/io/github/haoyangw/rica/input/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haoyangw"},"content":"package io.github.haoyangw.rica.input;","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"haoyangw"},"content":"import io.github.haoyangw.rica.exception.RicaException;","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"haoyangw"},"content":"import io.github.haoyangw.rica.task.TaskManager;","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"haoyangw"},"content":"import io.github.haoyangw.rica.ui.TextUi;","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"haoyangw"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"haoyangw"},"content":" * Represents a command issued by the user. \u003ccode\u003eCommand\u003c/code\u003e implementations","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"haoyangw"},"content":" *   must have a run() method that executes the user\u0027s specified command.","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"haoyangw"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"haoyangw"},"content":"public abstract class Command {","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"haoyangw"},"content":"    private final String command;","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"haoyangw"},"content":"    private final TaskManager taskManager;","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"haoyangw"},"content":"    private final TextUi textUi;","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"haoyangw"},"content":"    public static final String CMD_SEPARATOR \u003d \" \";","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"haoyangw"},"content":"    public Command(String command, TaskManager taskManager) {","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"haoyangw"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-02-27"},{"lineNumber":19,"author":{"gitId":"haoyangw"},"content":"        this.taskManager \u003d taskManager;","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"haoyangw"},"content":"        textUi \u003d new TextUi();","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"haoyangw"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"haoyangw"},"content":"     * Returns the full command currently issued by the user","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"haoyangw"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"haoyangw"},"content":"     * @return String object representing the full command entered by the user","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"haoyangw"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"haoyangw"},"content":"    protected String getCommand() {","lastModifiedDate":"2023-02-27"},{"lineNumber":29,"author":{"gitId":"haoyangw"},"content":"        return this.command;","lastModifiedDate":"2023-02-27"},{"lineNumber":30,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":31,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":32,"author":{"gitId":"haoyangw"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"haoyangw"},"content":"     * Returns an instance of TaskManager currently used by Rica in order to provide","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"haoyangw"},"content":"     *   access to the user\u0027s current Tasks","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"haoyangw"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"haoyangw"},"content":"     * @return Instance of TaskManager currently attached to main Rica instance","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"haoyangw"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"haoyangw"},"content":"    protected TaskManager getTaskManager() {","lastModifiedDate":"2023-02-27"},{"lineNumber":39,"author":{"gitId":"haoyangw"},"content":"        return this.taskManager;","lastModifiedDate":"2023-02-27"},{"lineNumber":40,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":41,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":42,"author":{"gitId":"haoyangw"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"haoyangw"},"content":"     * Returns an instance of TextUi for printing messages to the user Rica-style","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"haoyangw"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"haoyangw"},"content":"     * @return Instance of TextUi currently available to this Command object","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"haoyangw"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"haoyangw"},"content":"    protected TextUi getTextUi() {","lastModifiedDate":"2023-02-27"},{"lineNumber":48,"author":{"gitId":"haoyangw"},"content":"        return this.textUi;","lastModifiedDate":"2023-02-27"},{"lineNumber":49,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":50,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":51,"author":{"gitId":"haoyangw"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"haoyangw"},"content":"     * Executes the command currently issued by the user, including printing any","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"haoyangw"},"content":"     *   messages to inform the user of the results","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"haoyangw"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"haoyangw"},"content":"    public abstract void run();","lastModifiedDate":"2023-03-01"},{"lineNumber":56,"author":{"gitId":"haoyangw"},"content":"}","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"haoyangw":56}},{"path":"src/main/java/io/github/haoyangw/rica/input/CommandManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haoyangw"},"content":"package io.github.haoyangw.rica.input;","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"haoyangw"},"content":"import io.github.haoyangw.rica.exception.RicaCommandException;","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"haoyangw"},"content":"import io.github.haoyangw.rica.task.TaskManager;","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"haoyangw"},"content":"import java.io.InputStream;","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"haoyangw"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"haoyangw"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"haoyangw"},"content":" * Handles the reading of commands from the user, and the parsing of commands to","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"haoyangw"},"content":" *   determine which \u003ccode\u003eCommand\u003c/code\u003e implementation the user wants us to execute.","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"haoyangw"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"haoyangw"},"content":"public class CommandManager {","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"haoyangw"},"content":"    private static final String BYE_CMD \u003d \"bye\";","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"haoyangw"},"content":"    private static final String DEADLINE_CMD \u003d \"deadline\";","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"haoyangw"},"content":"    private static final String DELETE_CMD \u003d \"delete\";","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"haoyangw"},"content":"    private static final String EVENT_CMD \u003d \"event\";","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"haoyangw"},"content":"    private static final String FIND_CMD \u003d \"find\";","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"haoyangw"},"content":"    private static final String LIST_CMD \u003d \"list\";","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"haoyangw"},"content":"    private static final String MARK_CMD \u003d \"mark\";","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"haoyangw"},"content":"    private static final String TODO_CMD \u003d \"todo\";","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"haoyangw"},"content":"    private static final String UNKNOWN_CMD_ERROR \u003d \" ??? Sorry, I don\u0027t understand this command. Sent to the wrong bot? xD\";","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"haoyangw"},"content":"    private static final String UNMARK_CMD \u003d \"unmark\";","lastModifiedDate":"2023-02-27"},{"lineNumber":24,"author":{"gitId":"haoyangw"},"content":"    private final Scanner userInput;","lastModifiedDate":"2023-02-27"},{"lineNumber":25,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":26,"author":{"gitId":"haoyangw"},"content":"    public CommandManager() {","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"haoyangw"},"content":"        this.userInput \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-27"},{"lineNumber":28,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":29,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":30,"author":{"gitId":"haoyangw"},"content":"    public CommandManager(InputStream userInput) {","lastModifiedDate":"2023-02-27"},{"lineNumber":31,"author":{"gitId":"haoyangw"},"content":"        this.userInput \u003d new Scanner(userInput);","lastModifiedDate":"2023-02-27"},{"lineNumber":32,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":33,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":34,"author":{"gitId":"haoyangw"},"content":"    private Scanner getUserInput() {","lastModifiedDate":"2023-02-27"},{"lineNumber":35,"author":{"gitId":"haoyangw"},"content":"        return this.userInput;","lastModifiedDate":"2023-02-27"},{"lineNumber":36,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":37,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":38,"author":{"gitId":"haoyangw"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"haoyangw"},"content":"     * Reads in the next command from the user as a String","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"haoyangw"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"haoyangw"},"content":"     * @return String object representing the full command issued by","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"haoyangw"},"content":"     *   the user","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"haoyangw"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"haoyangw"},"content":"    public String getNextCommand() {","lastModifiedDate":"2023-02-27"},{"lineNumber":45,"author":{"gitId":"haoyangw"},"content":"        return this.getUserInput().nextLine();","lastModifiedDate":"2023-02-27"},{"lineNumber":46,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":47,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":48,"author":{"gitId":"haoyangw"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"haoyangw"},"content":"     * Parses a command issued by the user to determine the corresponding Command","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"haoyangw"},"content":"     *   subclass that can execute that command","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"haoyangw"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"haoyangw"},"content":"     * @param command String of the full command issued by the user","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"haoyangw"},"content":"     * @param taskManager TaskManager instance currently used by Rica that will provide","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"haoyangw"},"content":"     *   the corresponding Command subclass with access to the user\u0027s tasks","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"haoyangw"},"content":"     * @return Corresponding implementation of Command that can execute the user\u0027s","lastModifiedDate":"2023-03-01"},{"lineNumber":56,"author":{"gitId":"haoyangw"},"content":"     *   current command","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"haoyangw"},"content":"     * @throws RicaCommandException If an unrecognised command is issued by the user","lastModifiedDate":"2023-03-01"},{"lineNumber":58,"author":{"gitId":"haoyangw"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":59,"author":{"gitId":"haoyangw"},"content":"    public static Command parse(String command, TaskManager taskManager)","lastModifiedDate":"2023-02-27"},{"lineNumber":60,"author":{"gitId":"haoyangw"},"content":"            throws RicaCommandException {","lastModifiedDate":"2023-02-27"},{"lineNumber":61,"author":{"gitId":"haoyangw"},"content":"        String[] params \u003d command.split(\" \");","lastModifiedDate":"2023-02-27"},{"lineNumber":62,"author":{"gitId":"haoyangw"},"content":"        int FIRST_PARAM \u003d 0;","lastModifiedDate":"2023-03-02"},{"lineNumber":63,"author":{"gitId":"haoyangw"},"content":"        String keyword \u003d params[FIRST_PARAM];","lastModifiedDate":"2023-03-02"},{"lineNumber":64,"author":{"gitId":"haoyangw"},"content":"        switch (keyword) {","lastModifiedDate":"2023-02-27"},{"lineNumber":65,"author":{"gitId":"haoyangw"},"content":"        case BYE_CMD:","lastModifiedDate":"2023-02-27"},{"lineNumber":66,"author":{"gitId":"haoyangw"},"content":"            return new ByeCommand(command, taskManager);","lastModifiedDate":"2023-02-27"},{"lineNumber":67,"author":{"gitId":"haoyangw"},"content":"        case DEADLINE_CMD:","lastModifiedDate":"2023-02-27"},{"lineNumber":68,"author":{"gitId":"haoyangw"},"content":"            return new DeadlineCommand(command, taskManager);","lastModifiedDate":"2023-02-27"},{"lineNumber":69,"author":{"gitId":"haoyangw"},"content":"        case DELETE_CMD:","lastModifiedDate":"2023-02-27"},{"lineNumber":70,"author":{"gitId":"haoyangw"},"content":"            return new DeleteCommand(command, taskManager);","lastModifiedDate":"2023-02-27"},{"lineNumber":71,"author":{"gitId":"haoyangw"},"content":"        case EVENT_CMD:","lastModifiedDate":"2023-02-27"},{"lineNumber":72,"author":{"gitId":"haoyangw"},"content":"            return new EventCommand(command, taskManager);","lastModifiedDate":"2023-02-27"},{"lineNumber":73,"author":{"gitId":"haoyangw"},"content":"        case FIND_CMD:","lastModifiedDate":"2023-02-28"},{"lineNumber":74,"author":{"gitId":"haoyangw"},"content":"            return new FindCommand(command, taskManager);","lastModifiedDate":"2023-02-28"},{"lineNumber":75,"author":{"gitId":"haoyangw"},"content":"        case LIST_CMD:","lastModifiedDate":"2023-02-27"},{"lineNumber":76,"author":{"gitId":"haoyangw"},"content":"            return new ListCommand(command, taskManager);","lastModifiedDate":"2023-02-27"},{"lineNumber":77,"author":{"gitId":"haoyangw"},"content":"        case MARK_CMD:","lastModifiedDate":"2023-02-27"},{"lineNumber":78,"author":{"gitId":"haoyangw"},"content":"            return new MarkCommand(command, taskManager);","lastModifiedDate":"2023-02-27"},{"lineNumber":79,"author":{"gitId":"haoyangw"},"content":"        case TODO_CMD:","lastModifiedDate":"2023-02-27"},{"lineNumber":80,"author":{"gitId":"haoyangw"},"content":"            return new TodoCommand(command, taskManager);","lastModifiedDate":"2023-02-27"},{"lineNumber":81,"author":{"gitId":"haoyangw"},"content":"        case UNMARK_CMD:","lastModifiedDate":"2023-02-27"},{"lineNumber":82,"author":{"gitId":"haoyangw"},"content":"            return new UnmarkCommand(command, taskManager);","lastModifiedDate":"2023-02-27"},{"lineNumber":83,"author":{"gitId":"haoyangw"},"content":"        default:","lastModifiedDate":"2023-02-27"},{"lineNumber":84,"author":{"gitId":"haoyangw"},"content":"            throw new RicaCommandException(CommandManager.UNKNOWN_CMD_ERROR);","lastModifiedDate":"2023-02-27"},{"lineNumber":85,"author":{"gitId":"haoyangw"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":86,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":87,"author":{"gitId":"haoyangw"},"content":"}","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"haoyangw":87}},{"path":"src/main/java/io/github/haoyangw/rica/input/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haoyangw"},"content":"package io.github.haoyangw.rica.input;","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"haoyangw"},"content":"import io.github.haoyangw.rica.exception.RicaTaskException;","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"haoyangw"},"content":"import io.github.haoyangw.rica.task.TaskManager;","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"haoyangw"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"haoyangw"},"content":"    public DeadlineCommand(String command, TaskManager taskManager) {","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"haoyangw"},"content":"        super(command, taskManager);","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"haoyangw"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"haoyangw"},"content":"     * Executes the \u0027deadline\u0027 command issued by the user, creating a new Deadline","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"haoyangw"},"content":"     *   Task for Rica to keep track of","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"haoyangw"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"haoyangw"},"content":"    @Override","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"haoyangw"},"content":"    public void run() {","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"haoyangw"},"content":"        try {","lastModifiedDate":"2023-02-27"},{"lineNumber":19,"author":{"gitId":"haoyangw"},"content":"            super.getTaskManager().createTaskFrom(super.getCommand());","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"haoyangw"},"content":"        } catch (RicaTaskException exception) {","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"haoyangw"},"content":"            super.getTextUi().printErrorMessage(exception);","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"haoyangw"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":24,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":25,"author":{"gitId":"haoyangw"},"content":"}","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"haoyangw":25}},{"path":"src/main/java/io/github/haoyangw/rica/input/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haoyangw"},"content":"package io.github.haoyangw.rica.input;","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"haoyangw"},"content":"import io.github.haoyangw.rica.exception.RicaTaskException;","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"haoyangw"},"content":"import io.github.haoyangw.rica.task.TaskManager;","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"haoyangw"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"haoyangw"},"content":"    public DeleteCommand(String command, TaskManager taskManager) {","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"haoyangw"},"content":"        super(command, taskManager);","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"haoyangw"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"haoyangw"},"content":"     * Executes the \u0027delete\u0027 command, deleting a specified Task from Rica\u0027s memory","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"haoyangw"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"haoyangw"},"content":"    @Override","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"haoyangw"},"content":"    public void run() {","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"haoyangw"},"content":"        try {","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"haoyangw"},"content":"            super.getTaskManager().deleteTaskSpecifiedBy(super.getCommand());","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"haoyangw"},"content":"        } catch (RicaTaskException exception) {","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"haoyangw"},"content":"            super.getTextUi().printErrorMessage(exception);","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"haoyangw"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"haoyangw"},"content":"}","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"haoyangw":23}},{"path":"src/main/java/io/github/haoyangw/rica/input/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haoyangw"},"content":"package io.github.haoyangw.rica.input;","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"haoyangw"},"content":"import io.github.haoyangw.rica.exception.RicaTaskException;","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"haoyangw"},"content":"import io.github.haoyangw.rica.task.TaskManager;","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"haoyangw"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"haoyangw"},"content":"    public EventCommand(String command, TaskManager taskManager) {","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"haoyangw"},"content":"        super(command, taskManager);","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"haoyangw"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"haoyangw"},"content":"     * Executes the \u0027event\u0027 command, creating a new Event for Rica to keep track of","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"haoyangw"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"haoyangw"},"content":"    @Override","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"haoyangw"},"content":"    public void run() {","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"haoyangw"},"content":"        try {","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"haoyangw"},"content":"            super.getTaskManager().createTaskFrom(super.getCommand());","lastModifiedDate":"2023-02-27"},{"lineNumber":19,"author":{"gitId":"haoyangw"},"content":"        } catch (RicaTaskException exception) {","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"haoyangw"},"content":"            super.getTextUi().printErrorMessage(exception);","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"haoyangw"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"haoyangw"},"content":"}","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"haoyangw":23}},{"path":"src/main/java/io/github/haoyangw/rica/input/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haoyangw"},"content":"package io.github.haoyangw.rica.input;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"haoyangw"},"content":"import io.github.haoyangw.rica.task.Task;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"haoyangw"},"content":"import io.github.haoyangw.rica.task.TaskManager;","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"haoyangw"},"content":"import java.util.List;","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"haoyangw"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"haoyangw"},"content":"    private static final String MATCHING_TASKS_MSG \u003d \" I found some matching tasks for \u0027%s\u0027:\";","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"haoyangw"},"content":"    private static final String NO_MATCHING_TASKS_MSG \u003d \" Hmm, none of your tasks match \u0027%s\u0027 :( Ever tried \u0027Hello world\u0027? ;)\";","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"haoyangw"},"content":"    public FindCommand(String command, TaskManager taskManager) {","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"haoyangw"},"content":"        super(command, taskManager);","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"haoyangw"},"content":"    private static String getKeywordFrom(String command) {","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"haoyangw"},"content":"        final int NUM_PARAMETERS \u003d 2;","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"haoyangw"},"content":"        final int INDEX_OF_KEYWORD \u003d 1;","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"haoyangw"},"content":"        return command.split(\" \", NUM_PARAMETERS)[INDEX_OF_KEYWORD];","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"haoyangw"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"haoyangw"},"content":"    public void run() {","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"haoyangw"},"content":"        String keyword \u003d FindCommand.getKeywordFrom(super.getCommand());","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"haoyangw"},"content":"        List\u003cTask\u003e matchingTasks \u003d super.getTaskManager().getMatchingTasks(keyword);","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"haoyangw"},"content":"        super.getTextUi().printTasks(matchingTasks,","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"haoyangw"},"content":"                String.format(FindCommand.MATCHING_TASKS_MSG, keyword),","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"haoyangw"},"content":"                String.format(FindCommand.NO_MATCHING_TASKS_MSG, keyword));","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"haoyangw"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"haoyangw":31}},{"path":"src/main/java/io/github/haoyangw/rica/input/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haoyangw"},"content":"package io.github.haoyangw.rica.input;","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"haoyangw"},"content":"import io.github.haoyangw.rica.task.TaskManager;","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"haoyangw"},"content":"import io.github.haoyangw.rica.ui.TextUi;","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"haoyangw"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"haoyangw"},"content":"    public ListCommand(String command, TaskManager taskManager) {","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"haoyangw"},"content":"        super(command, taskManager);","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"haoyangw"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"haoyangw"},"content":"     * Executes the \u0027list\u0027 command, which lists out all Tasks that Rica is currently","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"haoyangw"},"content":"     *   keeping track of on the user\u0027s screen","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"haoyangw"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"haoyangw"},"content":"    @Override","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"haoyangw"},"content":"    public void run() {","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"haoyangw"},"content":"        super.getTaskManager().printTasks();","lastModifiedDate":"2023-02-27"},{"lineNumber":19,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"haoyangw"},"content":"}","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"haoyangw":20}},{"path":"src/main/java/io/github/haoyangw/rica/input/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haoyangw"},"content":"package io.github.haoyangw.rica.input;","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"haoyangw"},"content":"import io.github.haoyangw.rica.task.TaskManager;","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"haoyangw"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"haoyangw"},"content":"    public MarkCommand(String command, TaskManager taskManager) {","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"haoyangw"},"content":"        super(command, taskManager);","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"haoyangw"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"haoyangw"},"content":"     * Executes the \u0027mark\u0027 command, which marks a specified Task as done by the user","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"haoyangw"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"haoyangw"},"content":"    @Override","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"haoyangw"},"content":"    public void run() {","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"haoyangw"},"content":"        String[] params \u003d super.getCommand().split(Command.CMD_SEPARATOR);","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"haoyangw"},"content":"        int SECOND_PARAM \u003d 1;","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"haoyangw"},"content":"        int indexOfTodo \u003d Integer.parseInt(params[SECOND_PARAM]) - 1;","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"haoyangw"},"content":"        super.getTaskManager().markDone(indexOfTodo);","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"haoyangw"},"content":"}","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"haoyangw":22}},{"path":"src/main/java/io/github/haoyangw/rica/input/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haoyangw"},"content":"package io.github.haoyangw.rica.input;","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"haoyangw"},"content":"import io.github.haoyangw.rica.exception.RicaTaskException;","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"haoyangw"},"content":"import io.github.haoyangw.rica.task.TaskManager;","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"haoyangw"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"haoyangw"},"content":"    public TodoCommand(String command, TaskManager taskManager) {","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"haoyangw"},"content":"        super(command, taskManager);","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"haoyangw"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"haoyangw"},"content":"     * Executes the \u0027todo\u0027 command, which creates a new Todo Task for Rica to keep","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"haoyangw"},"content":"     *   track of","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"haoyangw"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"haoyangw"},"content":"    @Override","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"haoyangw"},"content":"    public void run() {","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"haoyangw"},"content":"        try {","lastModifiedDate":"2023-02-27"},{"lineNumber":19,"author":{"gitId":"haoyangw"},"content":"            super.getTaskManager().createTaskFrom(super.getCommand());","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"haoyangw"},"content":"        } catch (RicaTaskException exception) {","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"haoyangw"},"content":"            super.getTextUi().printErrorMessage(exception);","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"haoyangw"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":24,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":25,"author":{"gitId":"haoyangw"},"content":"}","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"haoyangw":25}},{"path":"src/main/java/io/github/haoyangw/rica/input/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haoyangw"},"content":"package io.github.haoyangw.rica.input;","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"haoyangw"},"content":"import io.github.haoyangw.rica.task.TaskManager;","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"haoyangw"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"haoyangw"},"content":"    public UnmarkCommand(String command, TaskManager taskManager) {","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"haoyangw"},"content":"        super(command, taskManager);","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"haoyangw"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"haoyangw"},"content":"     * Executes the \u0027unmark\u0027 command, marking a specified Task as no longer already","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"haoyangw"},"content":"     *   done by the user","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"haoyangw"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"haoyangw"},"content":"    @Override","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"haoyangw"},"content":"    public void run() {","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"haoyangw"},"content":"        String[] params \u003d super.getCommand().split(Command.CMD_SEPARATOR);","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"haoyangw"},"content":"        int SECOND_PARAM \u003d 1;","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"haoyangw"},"content":"        int indexOfTodo \u003d Integer.parseInt(params[SECOND_PARAM]) - 1;","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"haoyangw"},"content":"        super.getTaskManager().unmarkDone(indexOfTodo);","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"haoyangw"},"content":"}","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"haoyangw":23}},{"path":"src/main/java/io/github/haoyangw/rica/storage/Serializable.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haoyangw"},"content":"package io.github.haoyangw.rica.storage;","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"haoyangw"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"haoyangw"},"content":" * Marks an Object as capable of having its state stored in a text file in Rica\u0027s","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"haoyangw"},"content":" *   own data format. Implementations must provide a serailizeObject() method that","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"haoyangw"},"content":" *   returns a String representation of the Object\u0027s state for storage in a text file.","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"haoyangw"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"haoyangw"},"content":"public interface Serializable {","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"haoyangw"},"content":"    public String serializeObject();","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"haoyangw"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"haoyangw":10}},{"path":"src/main/java/io/github/haoyangw/rica/storage/StorageManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haoyangw"},"content":"package io.github.haoyangw.rica.storage;","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"haoyangw"},"content":"import io.github.haoyangw.rica.exception.RicaSerializationException;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"haoyangw"},"content":"import io.github.haoyangw.rica.exception.RicaStorageException;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"haoyangw"},"content":"import io.github.haoyangw.rica.task.Task;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"haoyangw"},"content":"import io.github.haoyangw.rica.ui.TextUi;","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"haoyangw"},"content":"import java.io.File;","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"haoyangw"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"haoyangw"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"haoyangw"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"haoyangw"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"haoyangw"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"haoyangw"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"haoyangw"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"haoyangw"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"haoyangw"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"haoyangw"},"content":" * Handles the storage of Rica\u0027s data into a text file and the retrieval of stored","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"haoyangw"},"content":" *   data from a saved text file to bring back Rica\u0027s memory. Provides saveTasks()","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"haoyangw"},"content":" *   to save Rica\u0027s list of Tasks, and getSavedTasks() to read the saved list of","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"haoyangw"},"content":" *   Tasks(if any) from storage.","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"haoyangw"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"haoyangw"},"content":"public class StorageManager {","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"haoyangw"},"content":"    private static final String CANNOT_CLEAR_DATA_ERROR \u003d \" What a day, can\u0027t even clear my memory from your storage ;( Sorry if it\u0027s taking up space oops!\";","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"haoyangw"},"content":"    private static final String CANNOT_SAVE_DATA_ERROR \u003d \" Died while saving my data to your storage, I\u0027m sorry if I come back an empty shell next time xP\";","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"haoyangw"},"content":"    private static final String DEFAULT_DATA_PATH \u003d \"data/tasks.txt\";","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"haoyangw"},"content":"    private static final String DATA_FILE_HAS_NO_PARENT_ERROR \u003d \" My data file is placed in the void? Please don\u0027t give me amnesia :O (contact Mr Stark!!)\";","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"haoyangw"},"content":"    private static final String DATA_FILE_NOT_FOUND_ERROR \u003d \" Cannot find the data file, you\u0027re gonna have to deal with my amnesia today my friend xP\";","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"haoyangw"},"content":"    private static final String INVALID_DATA_PATH_GIVEN_ERROR \u003d \" Empty data path given, what am I supposed to read xD\";","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"haoyangw"},"content":"    private static final String FAILED_TO_CREATE_DATA_FILE_ERROR \u003d \" Darn, can\u0027t even create a data file to store my memory. Not my day! xP\";","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"haoyangw"},"content":"    private static final String STILL_NO_DATA_FILE_ERROR \u003d \" Mayday mayday... I tried creating my data file and it disappeared Dx\";","lastModifiedDate":"2023-03-02"},{"lineNumber":33,"author":{"gitId":"haoyangw"},"content":"    private final String dataPath;","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"haoyangw"},"content":"    private final TextUi textUi;","lastModifiedDate":"2023-03-02"},{"lineNumber":35,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"haoyangw"},"content":"    public StorageManager() {","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"haoyangw"},"content":"        this(StorageManager.DEFAULT_DATA_PATH);","lastModifiedDate":"2023-02-13"},{"lineNumber":38,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":40,"author":{"gitId":"haoyangw"},"content":"    public StorageManager(String dataPath) {","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"haoyangw"},"content":"        this.dataPath \u003d dataPath;","lastModifiedDate":"2023-02-13"},{"lineNumber":42,"author":{"gitId":"haoyangw"},"content":"        this.textUi \u003d new TextUi();","lastModifiedDate":"2023-03-02"},{"lineNumber":43,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":44,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":45,"author":{"gitId":"haoyangw"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"haoyangw"},"content":"     * Clears the content of the data file. Useful when the data file contains","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"haoyangw"},"content":"     *   garbage, or in other extreme scenarios.","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"haoyangw"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"haoyangw"},"content":"    private void clearDataFile() {","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"haoyangw"},"content":"        FileWriter dataFile;","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"haoyangw"},"content":"        try {","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"haoyangw"},"content":"            dataFile \u003d new FileWriter(this.getDataPath(), false);","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"haoyangw"},"content":"            String BLANK_FILE_STRING \u003d \"\";","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"haoyangw"},"content":"            dataFile.write(BLANK_FILE_STRING);","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"haoyangw"},"content":"            dataFile.close();","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"haoyangw"},"content":"        } catch (IOException exception) {","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"haoyangw"},"content":"            throw new RicaStorageException(StorageManager.CANNOT_CLEAR_DATA_ERROR);","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"haoyangw"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"haoyangw"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":62,"author":{"gitId":"haoyangw"},"content":"     * Creates all directories along the data file path if they don\u0027t already exist.","lastModifiedDate":"2023-03-02"},{"lineNumber":63,"author":{"gitId":"haoyangw"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":64,"author":{"gitId":"haoyangw"},"content":"     * @param dataPathString Path to desired data file","lastModifiedDate":"2023-03-02"},{"lineNumber":65,"author":{"gitId":"haoyangw"},"content":"     * @return String specifying any errors encountered during the process","lastModifiedDate":"2023-03-01"},{"lineNumber":66,"author":{"gitId":"haoyangw"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":67,"author":{"gitId":"haoyangw"},"content":"    private static void createDataFile(String dataPathString) throws RicaStorageException {","lastModifiedDate":"2023-03-02"},{"lineNumber":68,"author":{"gitId":"haoyangw"},"content":"        Path dataPath \u003d Paths.get(dataPathString);","lastModifiedDate":"2023-03-02"},{"lineNumber":69,"author":{"gitId":"haoyangw"},"content":"        Path parentDirPath \u003d dataPath.getParent();","lastModifiedDate":"2023-03-02"},{"lineNumber":70,"author":{"gitId":"haoyangw"},"content":"        if (parentDirPath \u003d\u003d null) {","lastModifiedDate":"2023-03-02"},{"lineNumber":71,"author":{"gitId":"haoyangw"},"content":"            throw new RicaStorageException(StorageManager.DATA_FILE_HAS_NO_PARENT_ERROR);","lastModifiedDate":"2023-03-02"},{"lineNumber":72,"author":{"gitId":"haoyangw"},"content":"        }","lastModifiedDate":"2023-03-02"},{"lineNumber":73,"author":{"gitId":"haoyangw"},"content":"        try {","lastModifiedDate":"2023-02-13"},{"lineNumber":74,"author":{"gitId":"haoyangw"},"content":"            // Create all directories along the data file path if any don\u0027t exist","lastModifiedDate":"2023-03-02"},{"lineNumber":75,"author":{"gitId":"haoyangw"},"content":"            Files.createDirectories(parentDirPath);","lastModifiedDate":"2023-03-02"},{"lineNumber":76,"author":{"gitId":"haoyangw"},"content":"            dataPath.toFile().createNewFile();","lastModifiedDate":"2023-03-02"},{"lineNumber":77,"author":{"gitId":"haoyangw"},"content":"        } catch (IOException exception) {","lastModifiedDate":"2023-02-13"},{"lineNumber":78,"author":{"gitId":"haoyangw"},"content":"            throw new RicaStorageException(StorageManager.FAILED_TO_CREATE_DATA_FILE_ERROR);","lastModifiedDate":"2023-03-02"},{"lineNumber":79,"author":{"gitId":"haoyangw"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":80,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":81,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":82,"author":{"gitId":"haoyangw"},"content":"    private String getDataPath() {","lastModifiedDate":"2023-02-13"},{"lineNumber":83,"author":{"gitId":"haoyangw"},"content":"        return this.dataPath;","lastModifiedDate":"2023-02-13"},{"lineNumber":84,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":85,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":86,"author":{"gitId":"haoyangw"},"content":"    private TextUi getTextUi() {","lastModifiedDate":"2023-03-02"},{"lineNumber":87,"author":{"gitId":"haoyangw"},"content":"        return this.textUi;","lastModifiedDate":"2023-03-02"},{"lineNumber":88,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":89,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":90,"author":{"gitId":"haoyangw"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":91,"author":{"gitId":"haoyangw"},"content":"     * Reads the data file(if it exists) and re-generates the list of Tasks that","lastModifiedDate":"2023-03-01"},{"lineNumber":92,"author":{"gitId":"haoyangw"},"content":"     *   Rica had been keeping track of previously.","lastModifiedDate":"2023-03-01"},{"lineNumber":93,"author":{"gitId":"haoyangw"},"content":"     * Don\u0027t want Rica to have amnesia, do we?","lastModifiedDate":"2023-03-01"},{"lineNumber":94,"author":{"gitId":"haoyangw"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":95,"author":{"gitId":"haoyangw"},"content":"     * @return ArrayList containing all the Tasks remembered by Rica previously","lastModifiedDate":"2023-03-01"},{"lineNumber":96,"author":{"gitId":"haoyangw"},"content":"     * @throws RicaStorageException If an empty path was given or the specified","lastModifiedDate":"2023-03-01"},{"lineNumber":97,"author":{"gitId":"haoyangw"},"content":"     *   data file doesn\u0027t exist","lastModifiedDate":"2023-03-01"},{"lineNumber":98,"author":{"gitId":"haoyangw"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":99,"author":{"gitId":"haoyangw"},"content":"    public ArrayList\u003cTask\u003e getSavedTasks() throws RicaStorageException {","lastModifiedDate":"2023-02-13"},{"lineNumber":100,"author":{"gitId":"haoyangw"},"content":"        File dataFile;","lastModifiedDate":"2023-02-13"},{"lineNumber":101,"author":{"gitId":"haoyangw"},"content":"        try {","lastModifiedDate":"2023-03-02"},{"lineNumber":102,"author":{"gitId":"haoyangw"},"content":"            dataFile \u003d new File(this.getDataPath());","lastModifiedDate":"2023-03-02"},{"lineNumber":103,"author":{"gitId":"haoyangw"},"content":"        } catch (NullPointerException exception) {","lastModifiedDate":"2023-03-02"},{"lineNumber":104,"author":{"gitId":"haoyangw"},"content":"            throw new RicaStorageException(StorageManager.INVALID_DATA_PATH_GIVEN_ERROR);","lastModifiedDate":"2023-03-02"},{"lineNumber":105,"author":{"gitId":"haoyangw"},"content":"        }","lastModifiedDate":"2023-03-02"},{"lineNumber":106,"author":{"gitId":"haoyangw"},"content":"        if (!dataFile.exists()) {","lastModifiedDate":"2023-03-02"},{"lineNumber":107,"author":{"gitId":"haoyangw"},"content":"            this.getTextUi().printImportantMessage(StorageManager.DATA_FILE_NOT_FOUND_ERROR);","lastModifiedDate":"2023-03-02"},{"lineNumber":108,"author":{"gitId":"haoyangw"},"content":"            this.getTextUi().printFooter();","lastModifiedDate":"2023-03-02"},{"lineNumber":109,"author":{"gitId":"haoyangw"},"content":"            /*","lastModifiedDate":"2023-03-02"},{"lineNumber":110,"author":{"gitId":"haoyangw"},"content":"             * createDataFile() will throw RicaStorageException if data file cannot","lastModifiedDate":"2023-03-02"},{"lineNumber":111,"author":{"gitId":"haoyangw"},"content":"             *   be created","lastModifiedDate":"2023-03-02"},{"lineNumber":112,"author":{"gitId":"haoyangw"},"content":"             */","lastModifiedDate":"2023-03-02"},{"lineNumber":113,"author":{"gitId":"haoyangw"},"content":"            StorageManager.createDataFile(this.getDataPath());","lastModifiedDate":"2023-03-02"},{"lineNumber":114,"author":{"gitId":"haoyangw"},"content":"        }","lastModifiedDate":"2023-03-02"},{"lineNumber":115,"author":{"gitId":"haoyangw"},"content":"        Scanner dataReader;","lastModifiedDate":"2023-02-13"},{"lineNumber":116,"author":{"gitId":"haoyangw"},"content":"        ArrayList\u003cTask\u003e savedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-13"},{"lineNumber":117,"author":{"gitId":"haoyangw"},"content":"        try {","lastModifiedDate":"2023-02-13"},{"lineNumber":118,"author":{"gitId":"haoyangw"},"content":"            dataReader \u003d new Scanner(dataFile);","lastModifiedDate":"2023-02-13"},{"lineNumber":119,"author":{"gitId":"haoyangw"},"content":"            while (dataReader.hasNext()) {","lastModifiedDate":"2023-02-13"},{"lineNumber":120,"author":{"gitId":"haoyangw"},"content":"                String objectData \u003d dataReader.nextLine();","lastModifiedDate":"2023-02-13"},{"lineNumber":121,"author":{"gitId":"haoyangw"},"content":"                Task deserializedTask \u003d Task.deserializeObject(objectData);","lastModifiedDate":"2023-02-13"},{"lineNumber":122,"author":{"gitId":"haoyangw"},"content":"                savedTasks.add(deserializedTask);","lastModifiedDate":"2023-02-13"},{"lineNumber":123,"author":{"gitId":"haoyangw"},"content":"            }","lastModifiedDate":"2023-02-13"},{"lineNumber":124,"author":{"gitId":"haoyangw"},"content":"        } catch (NullPointerException exception) {","lastModifiedDate":"2023-02-13"},{"lineNumber":125,"author":{"gitId":"haoyangw"},"content":"            throw new RicaStorageException(StorageManager.INVALID_DATA_PATH_GIVEN_ERROR);","lastModifiedDate":"2023-02-13"},{"lineNumber":126,"author":{"gitId":"haoyangw"},"content":"        } catch (FileNotFoundException exception) {","lastModifiedDate":"2023-02-13"},{"lineNumber":127,"author":{"gitId":"haoyangw"},"content":"            throw new RicaStorageException(StorageManager.STILL_NO_DATA_FILE_ERROR);","lastModifiedDate":"2023-03-02"},{"lineNumber":128,"author":{"gitId":"haoyangw"},"content":"        } catch (RicaSerializationException | RicaStorageException exception) {","lastModifiedDate":"2023-03-03"},{"lineNumber":129,"author":{"gitId":"haoyangw"},"content":"            // Data file contains garbage, clear it to prevent future errors","lastModifiedDate":"2023-03-03"},{"lineNumber":130,"author":{"gitId":"haoyangw"},"content":"            this.clearDataFile();","lastModifiedDate":"2023-03-03"},{"lineNumber":131,"author":{"gitId":"haoyangw"},"content":"            throw exception;","lastModifiedDate":"2023-03-03"},{"lineNumber":132,"author":{"gitId":"haoyangw"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":133,"author":{"gitId":"haoyangw"},"content":"        return savedTasks;","lastModifiedDate":"2023-02-13"},{"lineNumber":134,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":135,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":136,"author":{"gitId":"haoyangw"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":137,"author":{"gitId":"haoyangw"},"content":"     * Serializes the given list of Tasks from Rica into lines of text that are","lastModifiedDate":"2023-03-01"},{"lineNumber":138,"author":{"gitId":"haoyangw"},"content":"     *   written to our designated data file.","lastModifiedDate":"2023-03-01"},{"lineNumber":139,"author":{"gitId":"haoyangw"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":140,"author":{"gitId":"haoyangw"},"content":"     * @param tasks ArrayList of Tasks that Rica is currently keeping track of, and","lastModifiedDate":"2023-03-01"},{"lineNumber":141,"author":{"gitId":"haoyangw"},"content":"     *   that she would like us to save for her","lastModifiedDate":"2023-03-01"},{"lineNumber":142,"author":{"gitId":"haoyangw"},"content":"     * @throws RicaStorageException If Rica\u0027s data cannot be fully written to our","lastModifiedDate":"2023-03-01"},{"lineNumber":143,"author":{"gitId":"haoyangw"},"content":"     *   designated data file, meaning that she\u0027ll be getting memory loss(oh dear!)","lastModifiedDate":"2023-03-01"},{"lineNumber":144,"author":{"gitId":"haoyangw"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":145,"author":{"gitId":"haoyangw"},"content":"    public void saveTasks(ArrayList\u003cTask\u003e tasks) throws RicaStorageException {","lastModifiedDate":"2023-02-13"},{"lineNumber":146,"author":{"gitId":"haoyangw"},"content":"        FileWriter dataFile;","lastModifiedDate":"2023-02-13"},{"lineNumber":147,"author":{"gitId":"haoyangw"},"content":"        try {","lastModifiedDate":"2023-02-13"},{"lineNumber":148,"author":{"gitId":"haoyangw"},"content":"            dataFile \u003d new FileWriter(this.getDataPath(), false);","lastModifiedDate":"2023-02-13"},{"lineNumber":149,"author":{"gitId":"haoyangw"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-02-13"},{"lineNumber":150,"author":{"gitId":"haoyangw"},"content":"                String serializedData \u003d task.serializeObject();","lastModifiedDate":"2023-02-13"},{"lineNumber":151,"author":{"gitId":"haoyangw"},"content":"                dataFile.write(serializedData + System.lineSeparator());","lastModifiedDate":"2023-02-13"},{"lineNumber":152,"author":{"gitId":"haoyangw"},"content":"            }","lastModifiedDate":"2023-02-13"},{"lineNumber":153,"author":{"gitId":"haoyangw"},"content":"            dataFile.close();","lastModifiedDate":"2023-02-13"},{"lineNumber":154,"author":{"gitId":"haoyangw"},"content":"        } catch (IOException exception) {","lastModifiedDate":"2023-02-13"},{"lineNumber":155,"author":{"gitId":"haoyangw"},"content":"            throw new RicaStorageException(StorageManager.CANNOT_SAVE_DATA_ERROR);","lastModifiedDate":"2023-03-03"},{"lineNumber":156,"author":{"gitId":"haoyangw"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":157,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":158,"author":{"gitId":"haoyangw"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"haoyangw":158}},{"path":"src/main/java/io/github/haoyangw/rica/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haoyangw"},"content":"package io.github.haoyangw.rica.task;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"haoyangw"},"content":"import io.github.haoyangw.rica.exception.RicaSerializationException;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"haoyangw"},"content":"import io.github.haoyangw.rica.exception.RicaTaskException;","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"haoyangw"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"haoyangw"},"content":" * Represents a deadline kind of Task that consists of a due date","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"haoyangw"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"haoyangw"},"content":"public class Deadline extends Todo {","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"haoyangw"},"content":"    private static final String COMMAND \u003d \"deadline\";","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"haoyangw"},"content":"    private static final String DEADLINE_KEYWORD \u003d \"/by\";","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"haoyangw"},"content":"    private static final String MISSING_DEADLINE_ERROR \u003d \" Forget something? (Hint: Where\u0027s the deadline for this deadline task?)\";","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"haoyangw"},"content":"    private static final String MISSING_DESCRIPTION_ERROR \u003d \" Did you give a description for this deadline task xD\";","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"haoyangw"},"content":"    private static final int NUM_OF_SERIALIZED_DATA \u003d 4;","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"haoyangw"},"content":"    private static final String WRONG_CREATE_CMD_ERROR \u003d \" Hmm I\u0027m being told to set a deadline with the wrong command. Help xP\";","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"haoyangw"},"content":"    protected static final String TYPE \u003d \"D\";","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"haoyangw"},"content":"    protected final String deadline;","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"haoyangw"},"content":"    public Deadline(String description, String deadline) {","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"haoyangw"},"content":"        this(description, false, deadline);","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"haoyangw"},"content":"    private Deadline(String description, boolean isDone, String deadline) {","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"haoyangw"},"content":"        super(description, isDone);","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"haoyangw"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"haoyangw"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"haoyangw"},"content":"     * Parses a command issued by the user and extracts the deadline description","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"haoyangw"},"content":"     *   portion, which is returned to the caller","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"haoyangw"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"haoyangw"},"content":"     * @param command Full command issued by the user","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"haoyangw"},"content":"     * @return String Object containing the description of the deadline to be created","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"haoyangw"},"content":"     * @throws RicaTaskException If command doesn\u0027t contain a description of the","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"haoyangw"},"content":"     *   deadline to be created","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"haoyangw"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"haoyangw"},"content":"    private static String getDescriptionOf(String command) throws RicaTaskException {","lastModifiedDate":"2023-02-09"},{"lineNumber":38,"author":{"gitId":"haoyangw"},"content":"        String[] parameters \u003d command.split(\" \");","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"haoyangw"},"content":"        int MISSING_PARAMS \u003d 1;","lastModifiedDate":"2023-02-09"},{"lineNumber":40,"author":{"gitId":"haoyangw"},"content":"        if (parameters.length \u003d\u003d MISSING_PARAMS) {","lastModifiedDate":"2023-02-09"},{"lineNumber":41,"author":{"gitId":"haoyangw"},"content":"            throw new RicaTaskException(Deadline.MISSING_DESCRIPTION_ERROR);","lastModifiedDate":"2023-02-09"},{"lineNumber":42,"author":{"gitId":"haoyangw"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":43,"author":{"gitId":"haoyangw"},"content":"        StringBuilder descBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"haoyangw"},"content":"        for (int i \u003d 1; i \u003c parameters.length; i +\u003d 1) {","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"haoyangw"},"content":"            if (parameters[i].equals(Deadline.DEADLINE_KEYWORD)) {","lastModifiedDate":"2023-02-08"},{"lineNumber":46,"author":{"gitId":"haoyangw"},"content":"                int DESCRIPTION_INDEX \u003d 1;","lastModifiedDate":"2023-03-02"},{"lineNumber":47,"author":{"gitId":"haoyangw"},"content":"                if (i \u003d\u003d DESCRIPTION_INDEX) {","lastModifiedDate":"2023-03-02"},{"lineNumber":48,"author":{"gitId":"haoyangw"},"content":"                    throw new RicaTaskException(Deadline.MISSING_DESCRIPTION_ERROR);","lastModifiedDate":"2023-02-09"},{"lineNumber":49,"author":{"gitId":"haoyangw"},"content":"                }","lastModifiedDate":"2023-02-09"},{"lineNumber":50,"author":{"gitId":"haoyangw"},"content":"                break;","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"haoyangw"},"content":"            }","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"haoyangw"},"content":"            int FIRST_WORD_OF_DESCRIPTION \u003d 1;","lastModifiedDate":"2023-03-02"},{"lineNumber":53,"author":{"gitId":"haoyangw"},"content":"            if (i !\u003d FIRST_WORD_OF_DESCRIPTION) {","lastModifiedDate":"2023-03-02"},{"lineNumber":54,"author":{"gitId":"haoyangw"},"content":"                descBuilder.append(\" \");","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"haoyangw"},"content":"            }","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"haoyangw"},"content":"            descBuilder.append(parameters[i]);","lastModifiedDate":"2023-02-04"},{"lineNumber":57,"author":{"gitId":"haoyangw"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":58,"author":{"gitId":"haoyangw"},"content":"        return descBuilder.toString();","lastModifiedDate":"2023-02-08"},{"lineNumber":59,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":60,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":61,"author":{"gitId":"haoyangw"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":62,"author":{"gitId":"haoyangw"},"content":"     * Parses a command issued by the user and extracts the date of the deadline,","lastModifiedDate":"2023-03-01"},{"lineNumber":63,"author":{"gitId":"haoyangw"},"content":"     *   which is returned to the caller.","lastModifiedDate":"2023-03-01"},{"lineNumber":64,"author":{"gitId":"haoyangw"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":65,"author":{"gitId":"haoyangw"},"content":"     * @param command Full command issued by the user","lastModifiedDate":"2023-03-01"},{"lineNumber":66,"author":{"gitId":"haoyangw"},"content":"     * @return String Object containing the date of the deadline to be created","lastModifiedDate":"2023-03-01"},{"lineNumber":67,"author":{"gitId":"haoyangw"},"content":"     * @throws RicaTaskException If command doesn\u0027t contain a date to set as the","lastModifiedDate":"2023-03-01"},{"lineNumber":68,"author":{"gitId":"haoyangw"},"content":"     *   deadline of the new Task","lastModifiedDate":"2023-03-01"},{"lineNumber":69,"author":{"gitId":"haoyangw"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":70,"author":{"gitId":"haoyangw"},"content":"    private static String getDeadlineOf(String command) throws RicaTaskException {","lastModifiedDate":"2023-02-09"},{"lineNumber":71,"author":{"gitId":"haoyangw"},"content":"        int deadlineKeywordFirstIndex \u003d command.indexOf(Deadline.DEADLINE_KEYWORD);","lastModifiedDate":"2023-02-09"},{"lineNumber":72,"author":{"gitId":"haoyangw"},"content":"        final int NOT_FOUND \u003d -1;","lastModifiedDate":"2023-02-09"},{"lineNumber":73,"author":{"gitId":"haoyangw"},"content":"        if (deadlineKeywordFirstIndex \u003d\u003d NOT_FOUND) {","lastModifiedDate":"2023-02-09"},{"lineNumber":74,"author":{"gitId":"haoyangw"},"content":"            throw new RicaTaskException(Deadline.MISSING_DEADLINE_ERROR);","lastModifiedDate":"2023-02-09"},{"lineNumber":75,"author":{"gitId":"haoyangw"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":76,"author":{"gitId":"haoyangw"},"content":"        int deadlineKeywordLastIndex \u003d deadlineKeywordFirstIndex","lastModifiedDate":"2023-02-09"},{"lineNumber":77,"author":{"gitId":"haoyangw"},"content":"                + Deadline.DEADLINE_KEYWORD.length();","lastModifiedDate":"2023-02-08"},{"lineNumber":78,"author":{"gitId":"haoyangw"},"content":"        String deadline \u003d command.substring(deadlineKeywordLastIndex).trim();","lastModifiedDate":"2023-02-08"},{"lineNumber":79,"author":{"gitId":"haoyangw"},"content":"        if (deadline.isBlank()) {","lastModifiedDate":"2023-02-09"},{"lineNumber":80,"author":{"gitId":"haoyangw"},"content":"            throw new RicaTaskException(Deadline.MISSING_DEADLINE_ERROR);","lastModifiedDate":"2023-02-09"},{"lineNumber":81,"author":{"gitId":"haoyangw"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":82,"author":{"gitId":"haoyangw"},"content":"        return deadline;","lastModifiedDate":"2023-02-08"},{"lineNumber":83,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":84,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":85,"author":{"gitId":"haoyangw"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":86,"author":{"gitId":"haoyangw"},"content":"     * Parses a full command issued by the user and creates a new deadline Task","lastModifiedDate":"2023-03-01"},{"lineNumber":87,"author":{"gitId":"haoyangw"},"content":"     *   with the given parameters","lastModifiedDate":"2023-03-01"},{"lineNumber":88,"author":{"gitId":"haoyangw"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":89,"author":{"gitId":"haoyangw"},"content":"     * @param command Full command issued by the user","lastModifiedDate":"2023-03-01"},{"lineNumber":90,"author":{"gitId":"haoyangw"},"content":"     * @return Instance of Deadline containing the designated due date and Task","lastModifiedDate":"2023-03-01"},{"lineNumber":91,"author":{"gitId":"haoyangw"},"content":"     *   description","lastModifiedDate":"2023-03-01"},{"lineNumber":92,"author":{"gitId":"haoyangw"},"content":"     * @throws RicaTaskException If the wrong command was issued(not \u0027deadline\u0027)","lastModifiedDate":"2023-03-01"},{"lineNumber":93,"author":{"gitId":"haoyangw"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":94,"author":{"gitId":"haoyangw"},"content":"    public static Deadline create(String command) throws RicaTaskException {","lastModifiedDate":"2023-02-09"},{"lineNumber":95,"author":{"gitId":"haoyangw"},"content":"        String[] parameters \u003d command.split(\" \");","lastModifiedDate":"2023-02-08"},{"lineNumber":96,"author":{"gitId":"haoyangw"},"content":"        // Wrong command for adding a deadline","lastModifiedDate":"2023-02-08"},{"lineNumber":97,"author":{"gitId":"haoyangw"},"content":"        int FIRST_PARAM \u003d 0;","lastModifiedDate":"2023-03-02"},{"lineNumber":98,"author":{"gitId":"haoyangw"},"content":"        if (!parameters[FIRST_PARAM].equals(Deadline.COMMAND)) {","lastModifiedDate":"2023-03-02"},{"lineNumber":99,"author":{"gitId":"haoyangw"},"content":"            throw new RicaTaskException(Deadline.WRONG_CREATE_CMD_ERROR);","lastModifiedDate":"2023-02-09"},{"lineNumber":100,"author":{"gitId":"haoyangw"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":101,"author":{"gitId":"haoyangw"},"content":"        String description \u003d Deadline.getDescriptionOf(command);","lastModifiedDate":"2023-02-08"},{"lineNumber":102,"author":{"gitId":"haoyangw"},"content":"        String deadline \u003d Deadline.getDeadlineOf(command);","lastModifiedDate":"2023-02-08"},{"lineNumber":103,"author":{"gitId":"haoyangw"},"content":"        return new Deadline(description, deadline);","lastModifiedDate":"2023-02-03"},{"lineNumber":104,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":105,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":106,"author":{"gitId":"haoyangw"},"content":"    public String getDeadline() {","lastModifiedDate":"2023-02-07"},{"lineNumber":107,"author":{"gitId":"haoyangw"},"content":"        return this.deadline;","lastModifiedDate":"2023-02-07"},{"lineNumber":108,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":109,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":110,"author":{"gitId":"haoyangw"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":111,"author":{"gitId":"haoyangw"},"content":"     * Takes a String representation of a Deadline(probably saved in the data file)","lastModifiedDate":"2023-03-01"},{"lineNumber":112,"author":{"gitId":"haoyangw"},"content":"     *   and re-creates an instance of Deadline with the corresponding state variables.","lastModifiedDate":"2023-03-01"},{"lineNumber":113,"author":{"gitId":"haoyangw"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":114,"author":{"gitId":"haoyangw"},"content":"     * @param objectData String representation of all of Deadline\u0027s state variables","lastModifiedDate":"2023-03-01"},{"lineNumber":115,"author":{"gitId":"haoyangw"},"content":"     * @return Instance of Deadline with the previously saved state","lastModifiedDate":"2023-03-01"},{"lineNumber":116,"author":{"gitId":"haoyangw"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":117,"author":{"gitId":"haoyangw"},"content":"    public static Deadline deserializeObject(String objectData) {","lastModifiedDate":"2023-02-13"},{"lineNumber":118,"author":{"gitId":"haoyangw"},"content":"        String[] variables \u003d objectData.split(Task.DATA_STRING_SEPARATOR_REGEX);","lastModifiedDate":"2023-02-13"},{"lineNumber":119,"author":{"gitId":"haoyangw"},"content":"        if (variables.length \u003c Deadline.NUM_OF_SERIALIZED_DATA) {","lastModifiedDate":"2023-02-13"},{"lineNumber":120,"author":{"gitId":"haoyangw"},"content":"            throw new RicaSerializationException(Task.INCOMPLETE_SERIALIZED_OBJECT_STRING);","lastModifiedDate":"2023-02-13"},{"lineNumber":121,"author":{"gitId":"haoyangw"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":122,"author":{"gitId":"haoyangw"},"content":"        int FIRST_SAVED_DATA \u003d 0;","lastModifiedDate":"2023-03-02"},{"lineNumber":123,"author":{"gitId":"haoyangw"},"content":"        if (!variables[FIRST_SAVED_DATA].equals(Deadline.TYPE)) {","lastModifiedDate":"2023-03-02"},{"lineNumber":124,"author":{"gitId":"haoyangw"},"content":"            throw new RicaSerializationException(Task.WRONG_SERIALIZED_OBJECT_TYPE);","lastModifiedDate":"2023-02-13"},{"lineNumber":125,"author":{"gitId":"haoyangw"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":126,"author":{"gitId":"haoyangw"},"content":"        int SECOND_SAVED_DATA \u003d 1;","lastModifiedDate":"2023-03-02"},{"lineNumber":127,"author":{"gitId":"haoyangw"},"content":"        String description \u003d variables[SECOND_SAVED_DATA];","lastModifiedDate":"2023-03-02"},{"lineNumber":128,"author":{"gitId":"haoyangw"},"content":"        int THIRD_SAVED_DATA \u003d 2;","lastModifiedDate":"2023-03-02"},{"lineNumber":129,"author":{"gitId":"haoyangw"},"content":"        boolean isDone \u003d Boolean.parseBoolean(variables[THIRD_SAVED_DATA]);","lastModifiedDate":"2023-03-02"},{"lineNumber":130,"author":{"gitId":"haoyangw"},"content":"        int FORTH_SAVED_DATA \u003d 3;","lastModifiedDate":"2023-03-02"},{"lineNumber":131,"author":{"gitId":"haoyangw"},"content":"        String deadline \u003d variables[FORTH_SAVED_DATA];","lastModifiedDate":"2023-03-02"},{"lineNumber":132,"author":{"gitId":"haoyangw"},"content":"        return new Deadline(description, isDone, deadline);","lastModifiedDate":"2023-02-13"},{"lineNumber":133,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":134,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":135,"author":{"gitId":"haoyangw"},"content":"    @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":136,"author":{"gitId":"haoyangw"},"content":"    protected String getType() {","lastModifiedDate":"2023-02-03"},{"lineNumber":137,"author":{"gitId":"haoyangw"},"content":"        return Deadline.TYPE;","lastModifiedDate":"2023-02-03"},{"lineNumber":138,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":139,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":140,"author":{"gitId":"haoyangw"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":141,"author":{"gitId":"haoyangw"},"content":"     * Saves all of this Deadline instance\u0027s state into a String Object that can","lastModifiedDate":"2023-03-01"},{"lineNumber":142,"author":{"gitId":"haoyangw"},"content":"     *   then be written to persistent storage.","lastModifiedDate":"2023-03-01"},{"lineNumber":143,"author":{"gitId":"haoyangw"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":144,"author":{"gitId":"haoyangw"},"content":"     * @return String representation of Deadline instance\u0027s state","lastModifiedDate":"2023-03-01"},{"lineNumber":145,"author":{"gitId":"haoyangw"},"content":"     * @see io.github.haoyangw.rica.storage.Serializable","lastModifiedDate":"2023-03-01"},{"lineNumber":146,"author":{"gitId":"haoyangw"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":147,"author":{"gitId":"haoyangw"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":148,"author":{"gitId":"haoyangw"},"content":"    public String serializeObject() {","lastModifiedDate":"2023-02-13"},{"lineNumber":149,"author":{"gitId":"haoyangw"},"content":"        String todoData \u003d super.serializeObject();","lastModifiedDate":"2023-02-13"},{"lineNumber":150,"author":{"gitId":"haoyangw"},"content":"        return todoData + Task.DATA_STRING_SEPARATOR + this.getDeadline();","lastModifiedDate":"2023-02-13"},{"lineNumber":151,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":152,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":153,"author":{"gitId":"haoyangw"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":154,"author":{"gitId":"haoyangw"},"content":"     * Sets this Deadline Task as done/not done by the user","lastModifiedDate":"2023-03-01"},{"lineNumber":155,"author":{"gitId":"haoyangw"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":156,"author":{"gitId":"haoyangw"},"content":"     * @param isDone Whether this Deadline is now done","lastModifiedDate":"2023-03-01"},{"lineNumber":157,"author":{"gitId":"haoyangw"},"content":"     * @return Instance of Deadline with isDone state variable set accordingly","lastModifiedDate":"2023-03-01"},{"lineNumber":158,"author":{"gitId":"haoyangw"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":159,"author":{"gitId":"haoyangw"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":160,"author":{"gitId":"haoyangw"},"content":"    public Deadline setDone(boolean isDone) {","lastModifiedDate":"2023-02-13"},{"lineNumber":161,"author":{"gitId":"haoyangw"},"content":"        return new Deadline(super.getDescription(), isDone, this.getDeadline());","lastModifiedDate":"2023-02-13"},{"lineNumber":162,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":163,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":164,"author":{"gitId":"haoyangw"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":165,"author":{"gitId":"haoyangw"},"content":"     * Generates a user-friendly String representation of this Deadline instance","lastModifiedDate":"2023-03-01"},{"lineNumber":166,"author":{"gitId":"haoyangw"},"content":"     *   for the user to understand this Deadline\u0027s current state","lastModifiedDate":"2023-03-01"},{"lineNumber":167,"author":{"gitId":"haoyangw"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":168,"author":{"gitId":"haoyangw"},"content":"     * @return String representation of this Deadline instance\u0027s state","lastModifiedDate":"2023-03-01"},{"lineNumber":169,"author":{"gitId":"haoyangw"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":170,"author":{"gitId":"haoyangw"},"content":"    @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":171,"author":{"gitId":"haoyangw"},"content":"    public String toString() {","lastModifiedDate":"2023-02-03"},{"lineNumber":172,"author":{"gitId":"haoyangw"},"content":"        return String.format(\"%s (by: %s)\", super.toString(), this.getDeadline());","lastModifiedDate":"2023-02-03"},{"lineNumber":173,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":174,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":175,"author":{"gitId":"haoyangw"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"haoyangw":175}},{"path":"src/main/java/io/github/haoyangw/rica/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haoyangw"},"content":"package io.github.haoyangw.rica.task;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"haoyangw"},"content":"import io.github.haoyangw.rica.exception.RicaSerializationException;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"haoyangw"},"content":"import io.github.haoyangw.rica.exception.RicaTaskException;","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"haoyangw"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"haoyangw"},"content":" * Represents an Event Task that involves a start date/time and end date/time","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"haoyangw"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"haoyangw"},"content":"public class Event extends Todo {","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"haoyangw"},"content":"    private static final String COMMAND \u003d \"event\";","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"haoyangw"},"content":"    private static final String MISSING_DESC_ERROR \u003d \" Remember to provide a description of the event you\u0027re adding y\u0027know!\";","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"haoyangw"},"content":"    private static final String MISSING_END_TIME_ERROR \u003d \" You didn\u0027t provide an end date/time! :(\";","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"haoyangw"},"content":"    private static final String MISSING_START_TIME_ERROR \u003d \" You didn\u0027t give me a start date/time how do I create an event xD\";","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"haoyangw"},"content":"    private static final String END_KEYWORD \u003d \"/to\";","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"haoyangw"},"content":"    private static final int NUM_OF_SERIALIZED_DATA \u003d 5;","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"haoyangw"},"content":"    private static final String START_KEYWORD \u003d \"/from\";","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"haoyangw"},"content":"    private static final String WRONG_CMD_ERROR \u003d \" Hmm I\u0027m being told to add an event with the wrong command. Help xP\";","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"haoyangw"},"content":"    protected static final String TYPE \u003d \"E\";","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"haoyangw"},"content":"    private final String endTime;","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"haoyangw"},"content":"    private final String startTime;","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"haoyangw"},"content":"    public Event(String description, String startTime, String endTime) {","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"haoyangw"},"content":"        this(description, false, startTime, endTime);","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"haoyangw"},"content":"    private Event(String description, boolean isDone, String startTime, String endTime) {","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"haoyangw"},"content":"        super(description, isDone);","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"haoyangw"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"haoyangw"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"haoyangw"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"haoyangw"},"content":"     * Parses a command issued by the user and extracts the deadline description","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"haoyangw"},"content":"     *   portion, which is returned to the caller","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"haoyangw"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"haoyangw"},"content":"     * @param command Full command issued by the user","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"haoyangw"},"content":"     * @return String Object containing the description of the deadline to be created","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"haoyangw"},"content":"     * @throws RicaTaskException If command doesn\u0027t contain a description of the","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"haoyangw"},"content":"     *   deadline to be created","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"haoyangw"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"haoyangw"},"content":"    private static String getDescriptionOf(String command) throws RicaTaskException {","lastModifiedDate":"2023-02-09"},{"lineNumber":42,"author":{"gitId":"haoyangw"},"content":"        String[] parameters \u003d command.split(\" \");","lastModifiedDate":"2023-02-04"},{"lineNumber":43,"author":{"gitId":"haoyangw"},"content":"        StringBuilder descBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-02-04"},{"lineNumber":44,"author":{"gitId":"haoyangw"},"content":"        for (int i \u003d 1; i \u003c parameters.length; i +\u003d 1) {","lastModifiedDate":"2023-02-04"},{"lineNumber":45,"author":{"gitId":"haoyangw"},"content":"            if (parameters[i].equals(Event.START_KEYWORD)) {","lastModifiedDate":"2023-02-08"},{"lineNumber":46,"author":{"gitId":"haoyangw"},"content":"                break;","lastModifiedDate":"2023-02-04"},{"lineNumber":47,"author":{"gitId":"haoyangw"},"content":"            }","lastModifiedDate":"2023-02-04"},{"lineNumber":48,"author":{"gitId":"haoyangw"},"content":"            int FIRST_WORD_OF_DESCRIPTION \u003d 1;","lastModifiedDate":"2023-03-02"},{"lineNumber":49,"author":{"gitId":"haoyangw"},"content":"            if (i !\u003d FIRST_WORD_OF_DESCRIPTION) {","lastModifiedDate":"2023-03-02"},{"lineNumber":50,"author":{"gitId":"haoyangw"},"content":"                descBuilder.append(\" \");","lastModifiedDate":"2023-02-04"},{"lineNumber":51,"author":{"gitId":"haoyangw"},"content":"            }","lastModifiedDate":"2023-02-04"},{"lineNumber":52,"author":{"gitId":"haoyangw"},"content":"            descBuilder.append(parameters[i]);","lastModifiedDate":"2023-02-04"},{"lineNumber":53,"author":{"gitId":"haoyangw"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":54,"author":{"gitId":"haoyangw"},"content":"        String description \u003d descBuilder.toString();","lastModifiedDate":"2023-02-04"},{"lineNumber":55,"author":{"gitId":"haoyangw"},"content":"        if (description.isBlank()) {","lastModifiedDate":"2023-02-09"},{"lineNumber":56,"author":{"gitId":"haoyangw"},"content":"            throw new RicaTaskException(Event.MISSING_DESC_ERROR);","lastModifiedDate":"2023-02-09"},{"lineNumber":57,"author":{"gitId":"haoyangw"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":58,"author":{"gitId":"haoyangw"},"content":"        return description;","lastModifiedDate":"2023-02-08"},{"lineNumber":59,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":60,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":61,"author":{"gitId":"haoyangw"},"content":"    private String getEndTime() {","lastModifiedDate":"2023-02-08"},{"lineNumber":62,"author":{"gitId":"haoyangw"},"content":"        return this.endTime;","lastModifiedDate":"2023-02-08"},{"lineNumber":63,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":64,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":65,"author":{"gitId":"haoyangw"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":66,"author":{"gitId":"haoyangw"},"content":"     * Parses an Event creation command issued by the user and extracts the desired","lastModifiedDate":"2023-03-01"},{"lineNumber":67,"author":{"gitId":"haoyangw"},"content":"     *   end date/time, which is returned to the caller.","lastModifiedDate":"2023-03-01"},{"lineNumber":68,"author":{"gitId":"haoyangw"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":69,"author":{"gitId":"haoyangw"},"content":"     * @param command Event creation command issued by the user","lastModifiedDate":"2023-03-01"},{"lineNumber":70,"author":{"gitId":"haoyangw"},"content":"     * @return String Object containing the desired end date/time","lastModifiedDate":"2023-03-01"},{"lineNumber":71,"author":{"gitId":"haoyangw"},"content":"     * @throws RicaTaskException If an end date/time is not found within the event","lastModifiedDate":"2023-03-01"},{"lineNumber":72,"author":{"gitId":"haoyangw"},"content":"     *   creation command","lastModifiedDate":"2023-03-01"},{"lineNumber":73,"author":{"gitId":"haoyangw"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":74,"author":{"gitId":"haoyangw"},"content":"    private static String getEndTimeOf(String command) throws RicaTaskException {","lastModifiedDate":"2023-02-09"},{"lineNumber":75,"author":{"gitId":"haoyangw"},"content":"        int endDateFirstIndex \u003d command.indexOf(Event.END_KEYWORD)","lastModifiedDate":"2023-02-08"},{"lineNumber":76,"author":{"gitId":"haoyangw"},"content":"                + Event.END_KEYWORD.length();","lastModifiedDate":"2023-02-08"},{"lineNumber":77,"author":{"gitId":"haoyangw"},"content":"        String endTime \u003d command.substring(endDateFirstIndex).trim();","lastModifiedDate":"2023-02-09"},{"lineNumber":78,"author":{"gitId":"haoyangw"},"content":"        if (endTime.isBlank()) {","lastModifiedDate":"2023-02-09"},{"lineNumber":79,"author":{"gitId":"haoyangw"},"content":"            throw new RicaTaskException(Event.MISSING_END_TIME_ERROR);","lastModifiedDate":"2023-02-09"},{"lineNumber":80,"author":{"gitId":"haoyangw"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":81,"author":{"gitId":"haoyangw"},"content":"        return endTime;","lastModifiedDate":"2023-02-09"},{"lineNumber":82,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":83,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":84,"author":{"gitId":"haoyangw"},"content":"    private String getStartTime() {","lastModifiedDate":"2023-02-08"},{"lineNumber":85,"author":{"gitId":"haoyangw"},"content":"        return this.startTime;","lastModifiedDate":"2023-02-08"},{"lineNumber":86,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":87,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":88,"author":{"gitId":"haoyangw"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":89,"author":{"gitId":"haoyangw"},"content":"     * Parses an Event creation command issued by the user and extracts the desired","lastModifiedDate":"2023-03-01"},{"lineNumber":90,"author":{"gitId":"haoyangw"},"content":"     *   start date/time, which is returned to the caller.","lastModifiedDate":"2023-03-01"},{"lineNumber":91,"author":{"gitId":"haoyangw"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":92,"author":{"gitId":"haoyangw"},"content":"     * @param command Event creation command issued by the user","lastModifiedDate":"2023-03-01"},{"lineNumber":93,"author":{"gitId":"haoyangw"},"content":"     * @return String Object containing the start date/time of this Event","lastModifiedDate":"2023-03-01"},{"lineNumber":94,"author":{"gitId":"haoyangw"},"content":"     * @throws RicaTaskException If no start date/time is found within Event creation","lastModifiedDate":"2023-03-01"},{"lineNumber":95,"author":{"gitId":"haoyangw"},"content":"     *   command","lastModifiedDate":"2023-03-01"},{"lineNumber":96,"author":{"gitId":"haoyangw"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":97,"author":{"gitId":"haoyangw"},"content":"    private static String getStartTimeOf(String command) throws RicaTaskException {","lastModifiedDate":"2023-02-09"},{"lineNumber":98,"author":{"gitId":"haoyangw"},"content":"        boolean hasStartTimeKeyword \u003d command.contains(Event.START_KEYWORD);","lastModifiedDate":"2023-02-09"},{"lineNumber":99,"author":{"gitId":"haoyangw"},"content":"        if (!hasStartTimeKeyword) {","lastModifiedDate":"2023-02-09"},{"lineNumber":100,"author":{"gitId":"haoyangw"},"content":"            throw new RicaTaskException(Event.MISSING_START_TIME_ERROR);","lastModifiedDate":"2023-02-09"},{"lineNumber":101,"author":{"gitId":"haoyangw"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":102,"author":{"gitId":"haoyangw"},"content":"        int startDateFirstIndex \u003d command.indexOf(Event.START_KEYWORD)","lastModifiedDate":"2023-02-08"},{"lineNumber":103,"author":{"gitId":"haoyangw"},"content":"                + Event.START_KEYWORD.length();","lastModifiedDate":"2023-02-08"},{"lineNumber":104,"author":{"gitId":"haoyangw"},"content":"        boolean hasEndTimeKeyword \u003d command.contains(Event.END_KEYWORD);","lastModifiedDate":"2023-02-09"},{"lineNumber":105,"author":{"gitId":"haoyangw"},"content":"        if (!hasEndTimeKeyword) {","lastModifiedDate":"2023-02-09"},{"lineNumber":106,"author":{"gitId":"haoyangw"},"content":"            throw new RicaTaskException(Event.MISSING_END_TIME_ERROR);","lastModifiedDate":"2023-02-09"},{"lineNumber":107,"author":{"gitId":"haoyangw"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":108,"author":{"gitId":"haoyangw"},"content":"        int startDateLastIndex \u003d command.indexOf(Event.END_KEYWORD) - 1;","lastModifiedDate":"2023-02-08"},{"lineNumber":109,"author":{"gitId":"haoyangw"},"content":"        String startTime \u003d command.substring(startDateFirstIndex, startDateLastIndex).trim();","lastModifiedDate":"2023-02-09"},{"lineNumber":110,"author":{"gitId":"haoyangw"},"content":"        if (startTime.isBlank()) {","lastModifiedDate":"2023-02-09"},{"lineNumber":111,"author":{"gitId":"haoyangw"},"content":"            throw new RicaTaskException(Event.MISSING_START_TIME_ERROR);","lastModifiedDate":"2023-02-09"},{"lineNumber":112,"author":{"gitId":"haoyangw"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":113,"author":{"gitId":"haoyangw"},"content":"        return startTime;","lastModifiedDate":"2023-02-09"},{"lineNumber":114,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":115,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":116,"author":{"gitId":"haoyangw"},"content":"    @Override","lastModifiedDate":"2023-02-08"},{"lineNumber":117,"author":{"gitId":"haoyangw"},"content":"    protected String getType() {","lastModifiedDate":"2023-02-08"},{"lineNumber":118,"author":{"gitId":"haoyangw"},"content":"        return Event.TYPE;","lastModifiedDate":"2023-02-08"},{"lineNumber":119,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":120,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":121,"author":{"gitId":"haoyangw"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":122,"author":{"gitId":"haoyangw"},"content":"     * Parses an Event creation command and instantiates an Event object with the","lastModifiedDate":"2023-03-01"},{"lineNumber":123,"author":{"gitId":"haoyangw"},"content":"     *   desired start date, end date and description.","lastModifiedDate":"2023-03-01"},{"lineNumber":124,"author":{"gitId":"haoyangw"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":125,"author":{"gitId":"haoyangw"},"content":"     * @param command Event creation command issued by the user","lastModifiedDate":"2023-03-01"},{"lineNumber":126,"author":{"gitId":"haoyangw"},"content":"     * @return Instance of Event with the user\u0027s desired start date, end date and","lastModifiedDate":"2023-03-01"},{"lineNumber":127,"author":{"gitId":"haoyangw"},"content":"     *   description","lastModifiedDate":"2023-03-01"},{"lineNumber":128,"author":{"gitId":"haoyangw"},"content":"     * @throws RicaTaskException If wrong command was issued for Event creation","lastModifiedDate":"2023-03-01"},{"lineNumber":129,"author":{"gitId":"haoyangw"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":130,"author":{"gitId":"haoyangw"},"content":"    public static Event create(String command) throws RicaTaskException {","lastModifiedDate":"2023-02-09"},{"lineNumber":131,"author":{"gitId":"haoyangw"},"content":"        String[] parameters \u003d command.trim().split(\" \");","lastModifiedDate":"2023-02-08"},{"lineNumber":132,"author":{"gitId":"haoyangw"},"content":"        // Wrong command for adding an event","lastModifiedDate":"2023-02-08"},{"lineNumber":133,"author":{"gitId":"haoyangw"},"content":"        int FIRST_PARAM \u003d 0;","lastModifiedDate":"2023-03-02"},{"lineNumber":134,"author":{"gitId":"haoyangw"},"content":"        if (!parameters[FIRST_PARAM].equals(Event.COMMAND)) {","lastModifiedDate":"2023-03-02"},{"lineNumber":135,"author":{"gitId":"haoyangw"},"content":"            throw new RicaTaskException(Event.WRONG_CMD_ERROR);","lastModifiedDate":"2023-02-09"},{"lineNumber":136,"author":{"gitId":"haoyangw"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":137,"author":{"gitId":"haoyangw"},"content":"        String description \u003d Event.getDescriptionOf(command);","lastModifiedDate":"2023-02-08"},{"lineNumber":138,"author":{"gitId":"haoyangw"},"content":"        String startTime \u003d Event.getStartTimeOf(command);","lastModifiedDate":"2023-02-08"},{"lineNumber":139,"author":{"gitId":"haoyangw"},"content":"        String endTime \u003d Event.getEndTimeOf(command);","lastModifiedDate":"2023-02-08"},{"lineNumber":140,"author":{"gitId":"haoyangw"},"content":"        return new Event(description, startTime, endTime);","lastModifiedDate":"2023-02-04"},{"lineNumber":141,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":142,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":143,"author":{"gitId":"haoyangw"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":144,"author":{"gitId":"haoyangw"},"content":"     * Parses a String representation of an Event Object and re-creates an instance","lastModifiedDate":"2023-03-01"},{"lineNumber":145,"author":{"gitId":"haoyangw"},"content":"     *   of Event with the previously saved state.","lastModifiedDate":"2023-03-01"},{"lineNumber":146,"author":{"gitId":"haoyangw"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":147,"author":{"gitId":"haoyangw"},"content":"     * @param objectData String representation of an Event Object\u0027s state variables","lastModifiedDate":"2023-03-01"},{"lineNumber":148,"author":{"gitId":"haoyangw"},"content":"     * @return Instance of Event with the previously saved state","lastModifiedDate":"2023-03-01"},{"lineNumber":149,"author":{"gitId":"haoyangw"},"content":"     * @throws RicaSerializationException If the serialised Task is not an Event","lastModifiedDate":"2023-03-01"},{"lineNumber":150,"author":{"gitId":"haoyangw"},"content":"     *   or not all state variables were saved","lastModifiedDate":"2023-03-01"},{"lineNumber":151,"author":{"gitId":"haoyangw"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":152,"author":{"gitId":"haoyangw"},"content":"    public static Event deserializeObject(String objectData) throws RicaSerializationException {","lastModifiedDate":"2023-03-01"},{"lineNumber":153,"author":{"gitId":"haoyangw"},"content":"        String[] variables \u003d objectData.split(Task.DATA_STRING_SEPARATOR_REGEX);","lastModifiedDate":"2023-02-13"},{"lineNumber":154,"author":{"gitId":"haoyangw"},"content":"        if (variables.length \u003c Event.NUM_OF_SERIALIZED_DATA) {","lastModifiedDate":"2023-02-13"},{"lineNumber":155,"author":{"gitId":"haoyangw"},"content":"            throw new RicaSerializationException(Task.INCOMPLETE_SERIALIZED_OBJECT_STRING);","lastModifiedDate":"2023-02-13"},{"lineNumber":156,"author":{"gitId":"haoyangw"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":157,"author":{"gitId":"haoyangw"},"content":"        int FIRST_SAVED_DATA \u003d 0;","lastModifiedDate":"2023-03-02"},{"lineNumber":158,"author":{"gitId":"haoyangw"},"content":"        if (!variables[FIRST_SAVED_DATA].equals(Event.TYPE)) {","lastModifiedDate":"2023-03-02"},{"lineNumber":159,"author":{"gitId":"haoyangw"},"content":"            throw new RicaSerializationException(Task.WRONG_SERIALIZED_OBJECT_TYPE);","lastModifiedDate":"2023-02-13"},{"lineNumber":160,"author":{"gitId":"haoyangw"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":161,"author":{"gitId":"haoyangw"},"content":"        int SECOND_SAVED_DATA \u003d 1;","lastModifiedDate":"2023-03-02"},{"lineNumber":162,"author":{"gitId":"haoyangw"},"content":"        String description \u003d variables[SECOND_SAVED_DATA];","lastModifiedDate":"2023-03-02"},{"lineNumber":163,"author":{"gitId":"haoyangw"},"content":"        int THIRD_SAVED_DATA \u003d 2;","lastModifiedDate":"2023-03-02"},{"lineNumber":164,"author":{"gitId":"haoyangw"},"content":"        boolean isDone \u003d Boolean.parseBoolean(variables[THIRD_SAVED_DATA]);","lastModifiedDate":"2023-03-02"},{"lineNumber":165,"author":{"gitId":"haoyangw"},"content":"        int FORTH_SAVED_DATA \u003d 3;","lastModifiedDate":"2023-03-02"},{"lineNumber":166,"author":{"gitId":"haoyangw"},"content":"        String startTime \u003d variables[FORTH_SAVED_DATA];","lastModifiedDate":"2023-03-02"},{"lineNumber":167,"author":{"gitId":"haoyangw"},"content":"        int FIFTH_SAVED_DATA \u003d 4;","lastModifiedDate":"2023-03-02"},{"lineNumber":168,"author":{"gitId":"haoyangw"},"content":"        String endTime \u003d variables[FIFTH_SAVED_DATA];","lastModifiedDate":"2023-03-02"},{"lineNumber":169,"author":{"gitId":"haoyangw"},"content":"        return new Event(description, isDone, startTime, endTime);","lastModifiedDate":"2023-02-13"},{"lineNumber":170,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":171,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":172,"author":{"gitId":"haoyangw"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":173,"author":{"gitId":"haoyangw"},"content":"     * Generates a String representation of the current Event\u0027s state variables","lastModifiedDate":"2023-03-01"},{"lineNumber":174,"author":{"gitId":"haoyangw"},"content":"     *   to be written to persistent storage later.","lastModifiedDate":"2023-03-01"},{"lineNumber":175,"author":{"gitId":"haoyangw"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":176,"author":{"gitId":"haoyangw"},"content":"     * @return String representation of the current Event instance","lastModifiedDate":"2023-03-01"},{"lineNumber":177,"author":{"gitId":"haoyangw"},"content":"     * @see io.github.haoyangw.rica.storage.Serializable","lastModifiedDate":"2023-03-01"},{"lineNumber":178,"author":{"gitId":"haoyangw"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":179,"author":{"gitId":"haoyangw"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":180,"author":{"gitId":"haoyangw"},"content":"    public String serializeObject() {","lastModifiedDate":"2023-02-13"},{"lineNumber":181,"author":{"gitId":"haoyangw"},"content":"        String todoData \u003d super.serializeObject();","lastModifiedDate":"2023-02-13"},{"lineNumber":182,"author":{"gitId":"haoyangw"},"content":"        return todoData + Task.DATA_STRING_SEPARATOR + this.getStartTime()","lastModifiedDate":"2023-02-13"},{"lineNumber":183,"author":{"gitId":"haoyangw"},"content":"                + Task.DATA_STRING_SEPARATOR + this.getEndTime();","lastModifiedDate":"2023-02-13"},{"lineNumber":184,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":185,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":186,"author":{"gitId":"haoyangw"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":187,"author":{"gitId":"haoyangw"},"content":"     * Sets this Event Task as done/not done by the user","lastModifiedDate":"2023-03-01"},{"lineNumber":188,"author":{"gitId":"haoyangw"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":189,"author":{"gitId":"haoyangw"},"content":"     * @param isDone Whether this Event is now done","lastModifiedDate":"2023-03-01"},{"lineNumber":190,"author":{"gitId":"haoyangw"},"content":"     * @return Instance of Event with isDone state variable set accordingly","lastModifiedDate":"2023-03-01"},{"lineNumber":191,"author":{"gitId":"haoyangw"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":192,"author":{"gitId":"haoyangw"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":193,"author":{"gitId":"haoyangw"},"content":"    public Event setDone(boolean isDone) {","lastModifiedDate":"2023-02-13"},{"lineNumber":194,"author":{"gitId":"haoyangw"},"content":"        return new Event(super.getDescription(), isDone, this.getStartTime(),","lastModifiedDate":"2023-02-13"},{"lineNumber":195,"author":{"gitId":"haoyangw"},"content":"                this.getEndTime());","lastModifiedDate":"2023-02-13"},{"lineNumber":196,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":197,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":198,"author":{"gitId":"haoyangw"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":199,"author":{"gitId":"haoyangw"},"content":"     * Generates a user-friendly String representation of this Event instance","lastModifiedDate":"2023-03-01"},{"lineNumber":200,"author":{"gitId":"haoyangw"},"content":"     *   for the user to understand this Event\u0027s current state","lastModifiedDate":"2023-03-01"},{"lineNumber":201,"author":{"gitId":"haoyangw"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":202,"author":{"gitId":"haoyangw"},"content":"     * @return String representation of this Event instance\u0027s state","lastModifiedDate":"2023-03-01"},{"lineNumber":203,"author":{"gitId":"haoyangw"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":204,"author":{"gitId":"haoyangw"},"content":"    @Override","lastModifiedDate":"2023-02-04"},{"lineNumber":205,"author":{"gitId":"haoyangw"},"content":"    public String toString() {","lastModifiedDate":"2023-02-04"},{"lineNumber":206,"author":{"gitId":"haoyangw"},"content":"        return String.format(\"%s (from: %s to: %s)\", super.toString(),","lastModifiedDate":"2023-02-04"},{"lineNumber":207,"author":{"gitId":"haoyangw"},"content":"                this.getStartTime(), this.getEndTime());","lastModifiedDate":"2023-02-04"},{"lineNumber":208,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":209,"author":{"gitId":"haoyangw"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"haoyangw":209}},{"path":"src/main/java/io/github/haoyangw/rica/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haoyangw"},"content":"package io.github.haoyangw.rica.task;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"haoyangw"},"content":"import io.github.haoyangw.rica.exception.RicaSerializationException;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"haoyangw"},"content":"import io.github.haoyangw.rica.exception.RicaStorageException;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"haoyangw"},"content":"import io.github.haoyangw.rica.storage.Serializable;","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"haoyangw"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"haoyangw"},"content":" * Represents a Task for the user. Can be extended further to provide more specialised/","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"haoyangw"},"content":" *   specific Tasks created by the user.","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"haoyangw"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"haoyangw"},"content":"public class Task implements Serializable {","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"haoyangw"},"content":"    private static final String TYPE \u003d \"T\";","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"haoyangw"},"content":"    private static final int NUM_OF_SERIALIZED_DATA \u003d 2;","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"haoyangw"},"content":"    protected static final String INCOMPLETE_SERIALIZED_OBJECT_STRING \u003d \" Incomplete data found in my past memory... Am I getting memory loss?\";","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"haoyangw"},"content":"    protected static final String DATA_STRING_SEPARATOR \u003d \" | \";","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"haoyangw"},"content":"    protected static final String DATA_STRING_SEPARATOR_REGEX \u003d \"\\\\s\\\\|\\\\s\";","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"haoyangw"},"content":"    protected static final String UNKNOWN_SERIALIZED_OBJECT_TYPE \u003d \" Did you touch my memories? What Tasks am I finding saved within them LOL\";","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"haoyangw"},"content":"    protected static final String WRONG_SERIALIZED_OBJECT_TYPE \u003d \" Hmm this task from my past memory is... Not my type xD\";","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"haoyangw"},"content":"    protected final String description;","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"haoyangw"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"haoyangw"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"haoyangw"},"content":"    protected String getType() {","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"haoyangw"},"content":"        return Task.TYPE;","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"haoyangw"},"content":"    public String getDescription() {","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"haoyangw"},"content":"        return this.description;","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"haoyangw"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"haoyangw"},"content":"     * Parses a String representation of a Task and re-creates an instance","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"haoyangw"},"content":"     *   of corresponding Task(sub-type) with the previously saved state.","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"haoyangw"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"haoyangw"},"content":"     * @param objectData String representation containing values for a Task\u0027s state","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"haoyangw"},"content":"     *   variables","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"haoyangw"},"content":"     * @return Instance of Task with the previously saved state","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"haoyangw"},"content":"     * @throws RicaSerializationException If too few state variables were saved","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"haoyangw"},"content":"     *   within the String representation, which implies an invalid saved state","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"haoyangw"},"content":"     * @throws RicaStorageException If the String represents a Task that Rica doesn\u0027t","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"haoyangw"},"content":"     *   recognise","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"haoyangw"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"haoyangw"},"content":"    public static Task deserializeObject(String objectData) throws RicaSerializationException, RicaStorageException {","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"haoyangw"},"content":"        String[] variables \u003d objectData.split(Task.DATA_STRING_SEPARATOR_REGEX);","lastModifiedDate":"2023-02-13"},{"lineNumber":47,"author":{"gitId":"haoyangw"},"content":"        if (variables.length \u003c Task.NUM_OF_SERIALIZED_DATA) {","lastModifiedDate":"2023-02-13"},{"lineNumber":48,"author":{"gitId":"haoyangw"},"content":"            throw new RicaSerializationException(Task.INCOMPLETE_SERIALIZED_OBJECT_STRING);","lastModifiedDate":"2023-02-13"},{"lineNumber":49,"author":{"gitId":"haoyangw"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":50,"author":{"gitId":"haoyangw"},"content":"        int FIRST_PARAM \u003d 0;","lastModifiedDate":"2023-03-02"},{"lineNumber":51,"author":{"gitId":"haoyangw"},"content":"        String taskType \u003d variables[FIRST_PARAM];","lastModifiedDate":"2023-03-02"},{"lineNumber":52,"author":{"gitId":"haoyangw"},"content":"        switch (taskType) {","lastModifiedDate":"2023-02-13"},{"lineNumber":53,"author":{"gitId":"haoyangw"},"content":"        case Deadline.TYPE:","lastModifiedDate":"2023-02-13"},{"lineNumber":54,"author":{"gitId":"haoyangw"},"content":"            return Deadline.deserializeObject(objectData);","lastModifiedDate":"2023-02-13"},{"lineNumber":55,"author":{"gitId":"haoyangw"},"content":"        case Event.TYPE:","lastModifiedDate":"2023-02-13"},{"lineNumber":56,"author":{"gitId":"haoyangw"},"content":"            return Event.deserializeObject(objectData);","lastModifiedDate":"2023-02-13"},{"lineNumber":57,"author":{"gitId":"haoyangw"},"content":"        case Task.TYPE:","lastModifiedDate":"2023-02-13"},{"lineNumber":58,"author":{"gitId":"haoyangw"},"content":"            if (variables.length !\u003d Task.NUM_OF_SERIALIZED_DATA) {","lastModifiedDate":"2023-02-13"},{"lineNumber":59,"author":{"gitId":"haoyangw"},"content":"                return Todo.deserializeObject(objectData);","lastModifiedDate":"2023-02-13"},{"lineNumber":60,"author":{"gitId":"haoyangw"},"content":"            }","lastModifiedDate":"2023-02-13"},{"lineNumber":61,"author":{"gitId":"haoyangw"},"content":"            break;","lastModifiedDate":"2023-02-13"},{"lineNumber":62,"author":{"gitId":"haoyangw"},"content":"        default:","lastModifiedDate":"2023-02-13"},{"lineNumber":63,"author":{"gitId":"haoyangw"},"content":"            throw new RicaStorageException(Task.UNKNOWN_SERIALIZED_OBJECT_TYPE);","lastModifiedDate":"2023-02-13"},{"lineNumber":64,"author":{"gitId":"haoyangw"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":65,"author":{"gitId":"haoyangw"},"content":"        // We only reach this point when the number of variables match Task\u0027s, so","lastModifiedDate":"2023-02-13"},{"lineNumber":66,"author":{"gitId":"haoyangw"},"content":"        //   we\u0027re dealing with a serialized Task String","lastModifiedDate":"2023-02-13"},{"lineNumber":67,"author":{"gitId":"haoyangw"},"content":"        int SECOND_PARAM \u003d 1;","lastModifiedDate":"2023-03-02"},{"lineNumber":68,"author":{"gitId":"haoyangw"},"content":"        String description \u003d variables[SECOND_PARAM];","lastModifiedDate":"2023-03-02"},{"lineNumber":69,"author":{"gitId":"haoyangw"},"content":"        return new Task(description);","lastModifiedDate":"2023-02-13"},{"lineNumber":70,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":71,"author":{"gitId":"haoyangw"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":72,"author":{"gitId":"haoyangw"},"content":"     * Generates a user-friendly String representation of this Task instance","lastModifiedDate":"2023-03-01"},{"lineNumber":73,"author":{"gitId":"haoyangw"},"content":"     *   for the user to understand this Task\u0027s current state","lastModifiedDate":"2023-03-01"},{"lineNumber":74,"author":{"gitId":"haoyangw"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":75,"author":{"gitId":"haoyangw"},"content":"     * @return String representation of this Task instance\u0027s state","lastModifiedDate":"2023-03-01"},{"lineNumber":76,"author":{"gitId":"haoyangw"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":77,"author":{"gitId":"haoyangw"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":78,"author":{"gitId":"haoyangw"},"content":"    public String toString() {","lastModifiedDate":"2023-01-27"},{"lineNumber":79,"author":{"gitId":"haoyangw"},"content":"        return this.getDescription();","lastModifiedDate":"2023-02-03"},{"lineNumber":80,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":81,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":82,"author":{"gitId":"haoyangw"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":83,"author":{"gitId":"haoyangw"},"content":"     * Generates a String representation of this Task instance so that its state","lastModifiedDate":"2023-03-01"},{"lineNumber":84,"author":{"gitId":"haoyangw"},"content":"     *   may be preserved in persistent storage and restored later.","lastModifiedDate":"2023-03-01"},{"lineNumber":85,"author":{"gitId":"haoyangw"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":86,"author":{"gitId":"haoyangw"},"content":"     * @return String representation of this Task Object\u0027s state","lastModifiedDate":"2023-03-01"},{"lineNumber":87,"author":{"gitId":"haoyangw"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":88,"author":{"gitId":"haoyangw"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":89,"author":{"gitId":"haoyangw"},"content":"    public String serializeObject() {","lastModifiedDate":"2023-02-13"},{"lineNumber":90,"author":{"gitId":"haoyangw"},"content":"        return String.format(\"%s | %s\", this.getType(), this.getDescription());","lastModifiedDate":"2023-02-13"},{"lineNumber":91,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":92,"author":{"gitId":"haoyangw"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"haoyangw":92}},{"path":"src/main/java/io/github/haoyangw/rica/task/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haoyangw"},"content":"package io.github.haoyangw.rica.task;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"haoyangw"},"content":"import io.github.haoyangw.rica.exception.RicaSerializationException;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"haoyangw"},"content":"import io.github.haoyangw.rica.exception.RicaStorageException;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"haoyangw"},"content":"import io.github.haoyangw.rica.exception.RicaTaskException;","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"haoyangw"},"content":"import io.github.haoyangw.rica.ui.TextUi;","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"haoyangw"},"content":"import io.github.haoyangw.rica.storage.StorageManager;","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"haoyangw"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"haoyangw"},"content":"import java.util.List;","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"haoyangw"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"haoyangw"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"haoyangw"},"content":" * Manages a list of Tasks that Rica is keeping track of. Provides utility methods","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"haoyangw"},"content":" *   for other classes to modify Rica\u0027s recorded Tasks.","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"haoyangw"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"haoyangw"},"content":"public class TaskManager {","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"haoyangw"},"content":"    private static final String ADD_PHRASE \u003d \" New %s I\u0027ll remember: \";","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"haoyangw"},"content":"    private static final String BAD_TASK_INDEX_ERROR \u003d \" Invalid task number? Are you trying too hard to avoid work xP\";","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"haoyangw"},"content":"    private static final String DEADLINE_CMD \u003d \"deadline\";","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"haoyangw"},"content":"    private static final String DELETE_CMD \u003d \"delete\";","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"haoyangw"},"content":"    private static final String EVENT_CMD \u003d \"event\";","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"haoyangw"},"content":"    private static final String INVALID_TASK_INDEX_ERROR \u003d \" You alright? I can\u0027t mark a task that doesn\u0027t exist as done xD\";","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"haoyangw"},"content":"    private static final String NO_TASKS_TO_DELETE_ERROR \u003d \" Add a task first... Then ask me to delete one xD\";","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"haoyangw"},"content":"    private static final String NOT_A_TASK_INDEX_ERROR \u003d \" Fat fingers? That\u0027s not a task number LOL\";","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"haoyangw"},"content":"    private static final String SINGLE_TASK_ADDED_PHRASE \u003d \" You have %d task for now, all the best!\";","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"haoyangw"},"content":"    private static final String TASK_ADDED_PHRASE \u003d \" You have %d tasks for now, all the best!\";","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"haoyangw"},"content":"    private static final String TASK_REMAINING_PHRASE \u003d \" Wow, just 1 task left! Congratulations, come party with me when you\u0027re done with work!\";","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"haoyangw"},"content":"    private static final String TASK_REMOVED_PHRASE \u003d \" I have removed this task for you:\";","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"haoyangw"},"content":"    private static final String TASKS_REMAINING_PHRASE \u003d \" Let\u0027s see... You now have %d tasks left. Keep going!\";","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"haoyangw"},"content":"    private static final String TODO_CMD \u003d \"todo\";","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"haoyangw"},"content":"    private static final String WRONG_CMD_ERROR \u003d \" Hello wrong command for %s! Check again?\";","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"haoyangw"},"content":"    private static final String WRONG_TASK_TYPE \u003d \" Erm I don\u0027t think this task can be marked done xD\";","lastModifiedDate":"2023-02-09"},{"lineNumber":33,"author":{"gitId":"haoyangw"},"content":"    private final StorageManager storageManager;","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"haoyangw"},"content":"    private final TextUi textUi;","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"haoyangw"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"haoyangw"},"content":"    public TaskManager() {","lastModifiedDate":"2023-02-12"},{"lineNumber":38,"author":{"gitId":"haoyangw"},"content":"        storageManager \u003d new StorageManager();","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"haoyangw"},"content":"        textUi \u003d new TextUi();","lastModifiedDate":"2023-02-23"},{"lineNumber":40,"author":{"gitId":"haoyangw"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-12"},{"lineNumber":41,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":42,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":43,"author":{"gitId":"haoyangw"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"haoyangw"},"content":"     * Adds a new Task to Rica\u0027s list of remembered Tasks","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"haoyangw"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"haoyangw"},"content":"     * @param newTask New Task Object to be added to Rica\u0027s list of Tasks","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"haoyangw"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"haoyangw"},"content":"    private void addTask(Task newTask) {","lastModifiedDate":"2023-02-12"},{"lineNumber":49,"author":{"gitId":"haoyangw"},"content":"        if (newTask !\u003d null) {","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"haoyangw"},"content":"            this.getTasks().add(newTask);","lastModifiedDate":"2023-02-12"},{"lineNumber":51,"author":{"gitId":"haoyangw"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":53,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":54,"author":{"gitId":"haoyangw"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"haoyangw"},"content":"     * Creates the corresponding type of Task based on the given user command and","lastModifiedDate":"2023-03-01"},{"lineNumber":56,"author":{"gitId":"haoyangw"},"content":"     *   adds it to Rica\u0027s list of Tasks she remembers.","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"haoyangw"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":58,"author":{"gitId":"haoyangw"},"content":"     * @param typeOfTask String describing what type of Task to create","lastModifiedDate":"2023-03-01"},{"lineNumber":59,"author":{"gitId":"haoyangw"},"content":"     * @param command Full Task creation command that was issued by the user","lastModifiedDate":"2023-03-01"},{"lineNumber":60,"author":{"gitId":"haoyangw"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":61,"author":{"gitId":"haoyangw"},"content":"    private void createTask(String typeOfTask, String command) {","lastModifiedDate":"2023-02-12"},{"lineNumber":62,"author":{"gitId":"haoyangw"},"content":"        switch (typeOfTask) {","lastModifiedDate":"2023-02-08"},{"lineNumber":63,"author":{"gitId":"haoyangw"},"content":"        case TaskManager.TODO_CMD:","lastModifiedDate":"2023-02-08"},{"lineNumber":64,"author":{"gitId":"haoyangw"},"content":"            Todo newTodo \u003d Todo.create(command);","lastModifiedDate":"2023-02-08"},{"lineNumber":65,"author":{"gitId":"haoyangw"},"content":"            this.addTask(newTodo);","lastModifiedDate":"2023-02-12"},{"lineNumber":66,"author":{"gitId":"haoyangw"},"content":"            this.getTextUi().printlnWithIndent(String.format(TaskManager.ADD_PHRASE,","lastModifiedDate":"2023-02-23"},{"lineNumber":67,"author":{"gitId":"haoyangw"},"content":"                    TaskManager.TODO_CMD));","lastModifiedDate":"2023-02-08"},{"lineNumber":68,"author":{"gitId":"haoyangw"},"content":"            this.getTextUi().printlnWithIndent(\"   \" + newTodo.toString());","lastModifiedDate":"2023-02-23"},{"lineNumber":69,"author":{"gitId":"haoyangw"},"content":"            break;","lastModifiedDate":"2023-02-08"},{"lineNumber":70,"author":{"gitId":"haoyangw"},"content":"        case TaskManager.DEADLINE_CMD:","lastModifiedDate":"2023-02-08"},{"lineNumber":71,"author":{"gitId":"haoyangw"},"content":"            Deadline newDeadline \u003d Deadline.create(command);","lastModifiedDate":"2023-02-08"},{"lineNumber":72,"author":{"gitId":"haoyangw"},"content":"            this.addTask(newDeadline);","lastModifiedDate":"2023-02-12"},{"lineNumber":73,"author":{"gitId":"haoyangw"},"content":"            this.getTextUi().printlnWithIndent(String.format(TaskManager.ADD_PHRASE,","lastModifiedDate":"2023-02-23"},{"lineNumber":74,"author":{"gitId":"haoyangw"},"content":"                    TaskManager.DEADLINE_CMD));","lastModifiedDate":"2023-02-08"},{"lineNumber":75,"author":{"gitId":"haoyangw"},"content":"            this.getTextUi().printlnWithIndent(\"   \" + newDeadline.toString());","lastModifiedDate":"2023-02-23"},{"lineNumber":76,"author":{"gitId":"haoyangw"},"content":"            break;","lastModifiedDate":"2023-02-08"},{"lineNumber":77,"author":{"gitId":"haoyangw"},"content":"        case TaskManager.EVENT_CMD:","lastModifiedDate":"2023-02-08"},{"lineNumber":78,"author":{"gitId":"haoyangw"},"content":"            Event newEvent \u003d Event.create(command);","lastModifiedDate":"2023-02-08"},{"lineNumber":79,"author":{"gitId":"haoyangw"},"content":"            this.addTask(newEvent);","lastModifiedDate":"2023-02-12"},{"lineNumber":80,"author":{"gitId":"haoyangw"},"content":"            this.getTextUi().printlnWithIndent(String.format(TaskManager.ADD_PHRASE,","lastModifiedDate":"2023-02-23"},{"lineNumber":81,"author":{"gitId":"haoyangw"},"content":"                    TaskManager.EVENT_CMD));","lastModifiedDate":"2023-02-08"},{"lineNumber":82,"author":{"gitId":"haoyangw"},"content":"            this.getTextUi().printlnWithIndent(\"   \" + newEvent.toString());","lastModifiedDate":"2023-02-23"},{"lineNumber":83,"author":{"gitId":"haoyangw"},"content":"            break;","lastModifiedDate":"2023-02-08"},{"lineNumber":84,"author":{"gitId":"haoyangw"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":85,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":86,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":87,"author":{"gitId":"haoyangw"},"content":"    private StorageManager getStorageManager() {","lastModifiedDate":"2023-02-13"},{"lineNumber":88,"author":{"gitId":"haoyangw"},"content":"        return this.storageManager;","lastModifiedDate":"2023-02-13"},{"lineNumber":89,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":90,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":91,"author":{"gitId":"haoyangw"},"content":"    private Task getTask(int indexOfTask) {","lastModifiedDate":"2023-02-12"},{"lineNumber":92,"author":{"gitId":"haoyangw"},"content":"        boolean isNegativeIndex \u003d indexOfTask \u003c 0;","lastModifiedDate":"2023-02-07"},{"lineNumber":93,"author":{"gitId":"haoyangw"},"content":"        boolean isIndexTooLarge \u003d indexOfTask \u003e\u003d this.getTasks().size();","lastModifiedDate":"2023-02-12"},{"lineNumber":94,"author":{"gitId":"haoyangw"},"content":"        if (isNegativeIndex || isIndexTooLarge) {","lastModifiedDate":"2023-02-07"},{"lineNumber":95,"author":{"gitId":"haoyangw"},"content":"            return null;","lastModifiedDate":"2023-02-03"},{"lineNumber":96,"author":{"gitId":"haoyangw"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":97,"author":{"gitId":"haoyangw"},"content":"        return this.getTasks().get(indexOfTask);","lastModifiedDate":"2023-02-12"},{"lineNumber":98,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":99,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":100,"author":{"gitId":"haoyangw"},"content":"    private ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-02-12"},{"lineNumber":101,"author":{"gitId":"haoyangw"},"content":"        return this.tasks;","lastModifiedDate":"2023-02-12"},{"lineNumber":102,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":103,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":104,"author":{"gitId":"haoyangw"},"content":"    private TextUi getTextUi() {","lastModifiedDate":"2023-02-23"},{"lineNumber":105,"author":{"gitId":"haoyangw"},"content":"        return this.textUi;","lastModifiedDate":"2023-02-23"},{"lineNumber":106,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":107,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":108,"author":{"gitId":"haoyangw"},"content":"    private boolean hasAnyTasks() {","lastModifiedDate":"2023-02-12"},{"lineNumber":109,"author":{"gitId":"haoyangw"},"content":"        return !this.getTasks().isEmpty();","lastModifiedDate":"2023-02-12"},{"lineNumber":110,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":111,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":112,"author":{"gitId":"haoyangw"},"content":"    private void insertTask(int indexOfTask, Task newTask) {","lastModifiedDate":"2023-02-12"},{"lineNumber":113,"author":{"gitId":"haoyangw"},"content":"        if (newTask !\u003d null) {","lastModifiedDate":"2023-02-07"},{"lineNumber":114,"author":{"gitId":"haoyangw"},"content":"            this.getTasks().add(indexOfTask, newTask);","lastModifiedDate":"2023-02-12"},{"lineNumber":115,"author":{"gitId":"haoyangw"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":116,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":117,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":118,"author":{"gitId":"haoyangw"},"content":"    private Task rmTaskByIndex(int indexOfTask) throws RicaTaskException {","lastModifiedDate":"2023-03-02"},{"lineNumber":119,"author":{"gitId":"haoyangw"},"content":"        int FIRST_VALID_INDEX \u003d 0;","lastModifiedDate":"2023-03-02"},{"lineNumber":120,"author":{"gitId":"haoyangw"},"content":"        boolean isNegativeIndex \u003d indexOfTask \u003c FIRST_VALID_INDEX;","lastModifiedDate":"2023-03-02"},{"lineNumber":121,"author":{"gitId":"haoyangw"},"content":"        boolean isIndexTooLarge \u003d indexOfTask \u003e\u003d this.getTasks().size();","lastModifiedDate":"2023-02-12"},{"lineNumber":122,"author":{"gitId":"haoyangw"},"content":"        if (isNegativeIndex || isIndexTooLarge) {","lastModifiedDate":"2023-02-07"},{"lineNumber":123,"author":{"gitId":"haoyangw"},"content":"            throw new RicaTaskException(TaskManager.BAD_TASK_INDEX_ERROR);","lastModifiedDate":"2023-02-11"},{"lineNumber":124,"author":{"gitId":"haoyangw"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":125,"author":{"gitId":"haoyangw"},"content":"        return this.getTasks().remove(indexOfTask);","lastModifiedDate":"2023-02-13"},{"lineNumber":126,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":127,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":128,"author":{"gitId":"haoyangw"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":129,"author":{"gitId":"haoyangw"},"content":"     * Given a Task creation command issued by the user, create the correct type","lastModifiedDate":"2023-03-01"},{"lineNumber":130,"author":{"gitId":"haoyangw"},"content":"     *   of Task, add it to Rica\u0027s memory, and help her record the new list of Tasks","lastModifiedDate":"2023-03-01"},{"lineNumber":131,"author":{"gitId":"haoyangw"},"content":"     *   to persistent storage.","lastModifiedDate":"2023-03-01"},{"lineNumber":132,"author":{"gitId":"haoyangw"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":133,"author":{"gitId":"haoyangw"},"content":"     * @param command Task creation command issued by the user","lastModifiedDate":"2023-03-01"},{"lineNumber":134,"author":{"gitId":"haoyangw"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":135,"author":{"gitId":"haoyangw"},"content":"    public void createTaskFrom(String command) {","lastModifiedDate":"2023-02-08"},{"lineNumber":136,"author":{"gitId":"haoyangw"},"content":"        String[] parameters \u003d command.split(\" \");","lastModifiedDate":"2023-02-07"},{"lineNumber":137,"author":{"gitId":"haoyangw"},"content":"        int FIRST_PARAM \u003d 0;","lastModifiedDate":"2023-03-02"},{"lineNumber":138,"author":{"gitId":"haoyangw"},"content":"        String typeOfTask \u003d parameters[FIRST_PARAM];","lastModifiedDate":"2023-03-02"},{"lineNumber":139,"author":{"gitId":"haoyangw"},"content":"        this.createTask(typeOfTask, command);","lastModifiedDate":"2023-02-12"},{"lineNumber":140,"author":{"gitId":"haoyangw"},"content":"        this.getStorageManager().saveTasks(this.getTasks());","lastModifiedDate":"2023-02-13"},{"lineNumber":141,"author":{"gitId":"haoyangw"},"content":"        int howManyTasks \u003d this.getTasks().size();","lastModifiedDate":"2023-02-12"},{"lineNumber":142,"author":{"gitId":"haoyangw"},"content":"        int ONLY_ONE_TASK \u003d 1;","lastModifiedDate":"2023-03-02"},{"lineNumber":143,"author":{"gitId":"haoyangw"},"content":"        if (howManyTasks \u003e ONLY_ONE_TASK) {","lastModifiedDate":"2023-03-02"},{"lineNumber":144,"author":{"gitId":"haoyangw"},"content":"            this.getTextUi().printlnWithIndent(String.format(TaskManager.TASK_ADDED_PHRASE,","lastModifiedDate":"2023-02-23"},{"lineNumber":145,"author":{"gitId":"haoyangw"},"content":"                    this.getTasks().size()));","lastModifiedDate":"2023-02-12"},{"lineNumber":146,"author":{"gitId":"haoyangw"},"content":"        } else if (howManyTasks \u003d\u003d ONLY_ONE_TASK) {","lastModifiedDate":"2023-03-02"},{"lineNumber":147,"author":{"gitId":"haoyangw"},"content":"            this.getTextUi().printlnWithIndent(String.format(TaskManager.SINGLE_TASK_ADDED_PHRASE,","lastModifiedDate":"2023-02-23"},{"lineNumber":148,"author":{"gitId":"haoyangw"},"content":"                    this.getTasks().size()));","lastModifiedDate":"2023-02-12"},{"lineNumber":149,"author":{"gitId":"haoyangw"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":150,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":151,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":152,"author":{"gitId":"haoyangw"},"content":"    public List\u003cTask\u003e getMatchingTasks(String keyword) {","lastModifiedDate":"2023-02-28"},{"lineNumber":153,"author":{"gitId":"haoyangw"},"content":"        return this.getTasks().stream()","lastModifiedDate":"2023-02-28"},{"lineNumber":154,"author":{"gitId":"haoyangw"},"content":"                .filter(task -\u003e task.getDescription().contains(keyword))","lastModifiedDate":"2023-02-28"},{"lineNumber":155,"author":{"gitId":"haoyangw"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-02-28"},{"lineNumber":156,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":157,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":158,"author":{"gitId":"haoyangw"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":159,"author":{"gitId":"haoyangw"},"content":"     * Sets up TaskManager fully.","lastModifiedDate":"2023-03-02"},{"lineNumber":160,"author":{"gitId":"haoyangw"},"content":"     *","lastModifiedDate":"2023-03-02"},{"lineNumber":161,"author":{"gitId":"haoyangw"},"content":"     * Internally, this restores TaskManager\u0027s previously saved list of Tasks,","lastModifiedDate":"2023-03-02"},{"lineNumber":162,"author":{"gitId":"haoyangw"},"content":"     *   which is IO-heavy and prone to Exceptions. As such, only run this when","lastModifiedDate":"2023-03-02"},{"lineNumber":163,"author":{"gitId":"haoyangw"},"content":"     *   the application is ready.","lastModifiedDate":"2023-03-02"},{"lineNumber":164,"author":{"gitId":"haoyangw"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":165,"author":{"gitId":"haoyangw"},"content":"    public void initialise() {","lastModifiedDate":"2023-03-02"},{"lineNumber":166,"author":{"gitId":"haoyangw"},"content":"        try {","lastModifiedDate":"2023-03-02"},{"lineNumber":167,"author":{"gitId":"haoyangw"},"content":"            tasks \u003d storageManager.getSavedTasks();","lastModifiedDate":"2023-03-02"},{"lineNumber":168,"author":{"gitId":"haoyangw"},"content":"        } catch (RicaSerializationException | RicaStorageException exception) {","lastModifiedDate":"2023-03-03"},{"lineNumber":169,"author":{"gitId":"haoyangw"},"content":"            textUi.printImportantErrorMessage(exception);","lastModifiedDate":"2023-03-02"},{"lineNumber":170,"author":{"gitId":"haoyangw"},"content":"            textUi.printFooter();","lastModifiedDate":"2023-03-02"},{"lineNumber":171,"author":{"gitId":"haoyangw"},"content":"        }","lastModifiedDate":"2023-03-02"},{"lineNumber":172,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":173,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":174,"author":{"gitId":"haoyangw"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":175,"author":{"gitId":"haoyangw"},"content":"     * Mark a given task in the task list as done","lastModifiedDate":"2023-02-03"},{"lineNumber":176,"author":{"gitId":"haoyangw"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":177,"author":{"gitId":"haoyangw"},"content":"     * @param indexOfTask Index of given task in the task list","lastModifiedDate":"2023-02-03"},{"lineNumber":178,"author":{"gitId":"haoyangw"},"content":"     * @return rica.Task object representing the desired task being marked as done,","lastModifiedDate":"2023-02-10"},{"lineNumber":179,"author":{"gitId":"haoyangw"},"content":"     * null if not an instance of rica.Todo","lastModifiedDate":"2023-02-10"},{"lineNumber":180,"author":{"gitId":"haoyangw"},"content":"     * @throws RicaTaskException If an invalid Task index is given or a Task cannot","lastModifiedDate":"2023-03-01"},{"lineNumber":181,"author":{"gitId":"haoyangw"},"content":"     *   be marked done","lastModifiedDate":"2023-03-01"},{"lineNumber":182,"author":{"gitId":"haoyangw"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":183,"author":{"gitId":"haoyangw"},"content":"    public Todo markDone(int indexOfTask) throws RicaTaskException {","lastModifiedDate":"2023-02-12"},{"lineNumber":184,"author":{"gitId":"haoyangw"},"content":"        int FIRST_VALID_INDEX \u003d 0;","lastModifiedDate":"2023-03-02"},{"lineNumber":185,"author":{"gitId":"haoyangw"},"content":"        boolean isNegativeIndex \u003d indexOfTask \u003c FIRST_VALID_INDEX;","lastModifiedDate":"2023-03-02"},{"lineNumber":186,"author":{"gitId":"haoyangw"},"content":"        boolean isIndexTooLarge \u003d indexOfTask \u003e\u003d this.getTasks().size();","lastModifiedDate":"2023-02-12"},{"lineNumber":187,"author":{"gitId":"haoyangw"},"content":"        if (isNegativeIndex || isIndexTooLarge) {","lastModifiedDate":"2023-02-07"},{"lineNumber":188,"author":{"gitId":"haoyangw"},"content":"            throw new RicaTaskException(TaskManager.INVALID_TASK_INDEX_ERROR);","lastModifiedDate":"2023-02-09"},{"lineNumber":189,"author":{"gitId":"haoyangw"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":190,"author":{"gitId":"haoyangw"},"content":"        Task selectedTask \u003d this.getTask(indexOfTask);","lastModifiedDate":"2023-02-12"},{"lineNumber":191,"author":{"gitId":"haoyangw"},"content":"        boolean isTaskATodo \u003d selectedTask instanceof Todo;","lastModifiedDate":"2023-02-07"},{"lineNumber":192,"author":{"gitId":"haoyangw"},"content":"        if (!isTaskATodo) {","lastModifiedDate":"2023-02-07"},{"lineNumber":193,"author":{"gitId":"haoyangw"},"content":"            throw new RicaTaskException(TaskManager.WRONG_TASK_TYPE);","lastModifiedDate":"2023-02-09"},{"lineNumber":194,"author":{"gitId":"haoyangw"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":195,"author":{"gitId":"haoyangw"},"content":"        // At this point, rica.Task is definitely an instance of rica.Todo. Can cast it to rica.Todo safely","lastModifiedDate":"2023-02-10"},{"lineNumber":196,"author":{"gitId":"haoyangw"},"content":"        Todo selectedTodo \u003d (Todo) selectedTask;","lastModifiedDate":"2023-02-03"},{"lineNumber":197,"author":{"gitId":"haoyangw"},"content":"        if (selectedTodo.getIsDone()) {","lastModifiedDate":"2023-02-03"},{"lineNumber":198,"author":{"gitId":"haoyangw"},"content":"            this.getTextUi().printlnWithIndent(\" Take a break maybe? Alright marked as done my friend:\");","lastModifiedDate":"2023-02-23"},{"lineNumber":199,"author":{"gitId":"haoyangw"},"content":"            this.getTextUi().printlnWithIndent(\"    \" + selectedTodo);","lastModifiedDate":"2023-02-23"},{"lineNumber":200,"author":{"gitId":"haoyangw"},"content":"            return selectedTodo;","lastModifiedDate":"2023-02-03"},{"lineNumber":201,"author":{"gitId":"haoyangw"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":202,"author":{"gitId":"haoyangw"},"content":"        this.rmTaskByIndex(indexOfTask);","lastModifiedDate":"2023-03-02"},{"lineNumber":203,"author":{"gitId":"haoyangw"},"content":"        selectedTodo \u003d selectedTodo.setDone(true);","lastModifiedDate":"2023-02-03"},{"lineNumber":204,"author":{"gitId":"haoyangw"},"content":"        this.insertTask(indexOfTask, selectedTodo);","lastModifiedDate":"2023-02-12"},{"lineNumber":205,"author":{"gitId":"haoyangw"},"content":"        this.getStorageManager().saveTasks(this.getTasks());","lastModifiedDate":"2023-02-13"},{"lineNumber":206,"author":{"gitId":"haoyangw"},"content":"        this.getTextUi().printlnWithIndent(\" Shall remember that this task is done:\");","lastModifiedDate":"2023-02-23"},{"lineNumber":207,"author":{"gitId":"haoyangw"},"content":"        this.getTextUi().printlnWithIndent(\"    \" + selectedTodo);","lastModifiedDate":"2023-02-23"},{"lineNumber":208,"author":{"gitId":"haoyangw"},"content":"        return selectedTodo;","lastModifiedDate":"2023-02-03"},{"lineNumber":209,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":210,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":211,"author":{"gitId":"haoyangw"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":212,"author":{"gitId":"haoyangw"},"content":"     * Prints out the list of tasks added so far, or inform the user if no tasks have been added","lastModifiedDate":"2023-02-07"},{"lineNumber":213,"author":{"gitId":"haoyangw"},"content":"     * yet","lastModifiedDate":"2023-02-07"},{"lineNumber":214,"author":{"gitId":"haoyangw"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":215,"author":{"gitId":"haoyangw"},"content":"    public void printTasks() {","lastModifiedDate":"2023-02-12"},{"lineNumber":216,"author":{"gitId":"haoyangw"},"content":"        this.getTextUi().printTasks(this.getTasks());","lastModifiedDate":"2023-02-27"},{"lineNumber":217,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":218,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":219,"author":{"gitId":"haoyangw"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":220,"author":{"gitId":"haoyangw"},"content":"     * Parses a delete command issued by the user and removes the corresponding","lastModifiedDate":"2023-03-02"},{"lineNumber":221,"author":{"gitId":"haoyangw"},"content":"     *   Task from Rica\u0027s memory of all the user\u0027s Tasks.","lastModifiedDate":"2023-03-02"},{"lineNumber":222,"author":{"gitId":"haoyangw"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":223,"author":{"gitId":"haoyangw"},"content":"     * @param command Full delete command issued by the user","lastModifiedDate":"2023-03-02"},{"lineNumber":224,"author":{"gitId":"haoyangw"},"content":"     * @throws RicaTaskException If the wrong command keyword was used, no Tasks","lastModifiedDate":"2023-03-01"},{"lineNumber":225,"author":{"gitId":"haoyangw"},"content":"     *   exist, or a non-integer index was given within the command","lastModifiedDate":"2023-03-01"},{"lineNumber":226,"author":{"gitId":"haoyangw"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":227,"author":{"gitId":"haoyangw"},"content":"    public void deleteTaskSpecifiedBy(String command) throws RicaTaskException {","lastModifiedDate":"2023-03-03"},{"lineNumber":228,"author":{"gitId":"haoyangw"},"content":"        String[] parameters \u003d command.split(\" \");","lastModifiedDate":"2023-02-11"},{"lineNumber":229,"author":{"gitId":"haoyangw"},"content":"        int FIRST_PARAM \u003d 0;","lastModifiedDate":"2023-03-02"},{"lineNumber":230,"author":{"gitId":"haoyangw"},"content":"        if (!parameters[FIRST_PARAM].equals(TaskManager.DELETE_CMD)) {","lastModifiedDate":"2023-03-02"},{"lineNumber":231,"author":{"gitId":"haoyangw"},"content":"            String cmdType \u003d \"deleting a task\";","lastModifiedDate":"2023-02-11"},{"lineNumber":232,"author":{"gitId":"haoyangw"},"content":"            throw new RicaTaskException(String.format(TaskManager.WRONG_CMD_ERROR, cmdType));","lastModifiedDate":"2023-02-11"},{"lineNumber":233,"author":{"gitId":"haoyangw"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":234,"author":{"gitId":"haoyangw"},"content":"        if (!this.hasAnyTasks()) {","lastModifiedDate":"2023-02-13"},{"lineNumber":235,"author":{"gitId":"haoyangw"},"content":"            throw new RicaTaskException(TaskManager.NO_TASKS_TO_DELETE_ERROR);","lastModifiedDate":"2023-02-11"},{"lineNumber":236,"author":{"gitId":"haoyangw"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":237,"author":{"gitId":"haoyangw"},"content":"        int givenIndex;","lastModifiedDate":"2023-02-11"},{"lineNumber":238,"author":{"gitId":"haoyangw"},"content":"        int SECOND_PARAM \u003d 1;","lastModifiedDate":"2023-03-02"},{"lineNumber":239,"author":{"gitId":"haoyangw"},"content":"        try {","lastModifiedDate":"2023-02-11"},{"lineNumber":240,"author":{"gitId":"haoyangw"},"content":"            givenIndex \u003d Integer.parseInt(parameters[SECOND_PARAM]);","lastModifiedDate":"2023-03-02"},{"lineNumber":241,"author":{"gitId":"haoyangw"},"content":"        } catch (NumberFormatException exception) {","lastModifiedDate":"2023-02-11"},{"lineNumber":242,"author":{"gitId":"haoyangw"},"content":"            throw new RicaTaskException(TaskManager.NOT_A_TASK_INDEX_ERROR);","lastModifiedDate":"2023-02-11"},{"lineNumber":243,"author":{"gitId":"haoyangw"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":244,"author":{"gitId":"haoyangw"},"content":"        // givenIndex is 1-based, but rmTask() expects 0-based indexing, so subtract one","lastModifiedDate":"2023-02-11"},{"lineNumber":245,"author":{"gitId":"haoyangw"},"content":"        //   before passing to rmTask()","lastModifiedDate":"2023-02-11"},{"lineNumber":246,"author":{"gitId":"haoyangw"},"content":"        Task removedTask \u003d this.rmTaskByIndex(givenIndex - 1);","lastModifiedDate":"2023-03-02"},{"lineNumber":247,"author":{"gitId":"haoyangw"},"content":"        this.getStorageManager().saveTasks(this.getTasks());","lastModifiedDate":"2023-02-13"},{"lineNumber":248,"author":{"gitId":"haoyangw"},"content":"        this.getTextUi().printlnWithIndent(TaskManager.TASK_REMOVED_PHRASE);","lastModifiedDate":"2023-02-23"},{"lineNumber":249,"author":{"gitId":"haoyangw"},"content":"        this.getTextUi().printlnWithIndent(\"   \" + removedTask.toString());","lastModifiedDate":"2023-02-23"},{"lineNumber":250,"author":{"gitId":"haoyangw"},"content":"        int numTasksLeft \u003d this.getTasks().size();","lastModifiedDate":"2023-02-13"},{"lineNumber":251,"author":{"gitId":"haoyangw"},"content":"        if (numTasksLeft \u003d\u003d 1) {","lastModifiedDate":"2023-02-11"},{"lineNumber":252,"author":{"gitId":"haoyangw"},"content":"            this.getTextUi().printlnWithIndent(TaskManager.TASK_REMAINING_PHRASE);","lastModifiedDate":"2023-02-23"},{"lineNumber":253,"author":{"gitId":"haoyangw"},"content":"        } else {","lastModifiedDate":"2023-02-11"},{"lineNumber":254,"author":{"gitId":"haoyangw"},"content":"            this.getTextUi().printlnWithIndent(String.format(TaskManager.TASKS_REMAINING_PHRASE, numTasksLeft));","lastModifiedDate":"2023-02-23"},{"lineNumber":255,"author":{"gitId":"haoyangw"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":256,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":257,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":258,"author":{"gitId":"haoyangw"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":259,"author":{"gitId":"haoyangw"},"content":"     * Mark a given task in the task list as not done","lastModifiedDate":"2023-02-03"},{"lineNumber":260,"author":{"gitId":"haoyangw"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":261,"author":{"gitId":"haoyangw"},"content":"     * @param indexOfTask Index of desired task in the task list","lastModifiedDate":"2023-02-03"},{"lineNumber":262,"author":{"gitId":"haoyangw"},"content":"     * @return rica.Task object representing the desired task being marked as not done,","lastModifiedDate":"2023-02-10"},{"lineNumber":263,"author":{"gitId":"haoyangw"},"content":"     * null if not an instance of rica.Todo","lastModifiedDate":"2023-02-10"},{"lineNumber":264,"author":{"gitId":"haoyangw"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":265,"author":{"gitId":"haoyangw"},"content":"    public Todo unmarkDone(int indexOfTask) throws RicaTaskException {","lastModifiedDate":"2023-02-12"},{"lineNumber":266,"author":{"gitId":"haoyangw"},"content":"        int FIRST_VALID_INDEX \u003d 0;","lastModifiedDate":"2023-03-02"},{"lineNumber":267,"author":{"gitId":"haoyangw"},"content":"        boolean isIndexNegative \u003d indexOfTask \u003c FIRST_VALID_INDEX;","lastModifiedDate":"2023-03-02"},{"lineNumber":268,"author":{"gitId":"haoyangw"},"content":"        boolean isIndexTooLarge \u003d indexOfTask \u003e\u003d this.getTasks().size();","lastModifiedDate":"2023-02-12"},{"lineNumber":269,"author":{"gitId":"haoyangw"},"content":"        if (isIndexNegative || isIndexTooLarge) {","lastModifiedDate":"2023-02-07"},{"lineNumber":270,"author":{"gitId":"haoyangw"},"content":"            throw new RicaTaskException(TaskManager.INVALID_TASK_INDEX_ERROR);","lastModifiedDate":"2023-02-09"},{"lineNumber":271,"author":{"gitId":"haoyangw"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":272,"author":{"gitId":"haoyangw"},"content":"        Task selectedTask \u003d this.getTask(indexOfTask);","lastModifiedDate":"2023-02-12"},{"lineNumber":273,"author":{"gitId":"haoyangw"},"content":"        boolean isTaskATodo \u003d selectedTask instanceof Todo;","lastModifiedDate":"2023-02-07"},{"lineNumber":274,"author":{"gitId":"haoyangw"},"content":"        if (!isTaskATodo) {","lastModifiedDate":"2023-02-07"},{"lineNumber":275,"author":{"gitId":"haoyangw"},"content":"            throw new RicaTaskException(TaskManager.WRONG_TASK_TYPE);","lastModifiedDate":"2023-02-09"},{"lineNumber":276,"author":{"gitId":"haoyangw"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":277,"author":{"gitId":"haoyangw"},"content":"        Todo selectedTodo \u003d (Todo) selectedTask;","lastModifiedDate":"2023-02-03"},{"lineNumber":278,"author":{"gitId":"haoyangw"},"content":"        if (!selectedTodo.getIsDone()) {","lastModifiedDate":"2023-02-03"},{"lineNumber":279,"author":{"gitId":"haoyangw"},"content":"            this.getTextUi().printlnWithIndent(\" Getting a little ahead of yourself\"","lastModifiedDate":"2023-02-23"},{"lineNumber":280,"author":{"gitId":"haoyangw"},"content":"                    + \"are you xD It\u0027s not even done:\");","lastModifiedDate":"2023-02-13"},{"lineNumber":281,"author":{"gitId":"haoyangw"},"content":"            this.getTextUi().printlnWithIndent(\"    \" + selectedTodo);","lastModifiedDate":"2023-02-23"},{"lineNumber":282,"author":{"gitId":"haoyangw"},"content":"            return selectedTodo;","lastModifiedDate":"2023-02-03"},{"lineNumber":283,"author":{"gitId":"haoyangw"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":284,"author":{"gitId":"haoyangw"},"content":"        this.rmTaskByIndex(indexOfTask);","lastModifiedDate":"2023-03-02"},{"lineNumber":285,"author":{"gitId":"haoyangw"},"content":"        selectedTodo \u003d selectedTodo.setDone(false);","lastModifiedDate":"2023-02-03"},{"lineNumber":286,"author":{"gitId":"haoyangw"},"content":"        this.insertTask(indexOfTask, selectedTodo);","lastModifiedDate":"2023-02-12"},{"lineNumber":287,"author":{"gitId":"haoyangw"},"content":"        this.getStorageManager().saveTasks(this.getTasks());","lastModifiedDate":"2023-02-13"},{"lineNumber":288,"author":{"gitId":"haoyangw"},"content":"        this.getTextUi().printlnWithIndent(\" (Why??) Anyway, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-02-23"},{"lineNumber":289,"author":{"gitId":"haoyangw"},"content":"        this.getTextUi().printlnWithIndent(\"    \" + selectedTodo);","lastModifiedDate":"2023-02-23"},{"lineNumber":290,"author":{"gitId":"haoyangw"},"content":"        return selectedTodo;","lastModifiedDate":"2023-02-03"},{"lineNumber":291,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":292,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":293,"author":{"gitId":"haoyangw"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"haoyangw":293}},{"path":"src/main/java/io/github/haoyangw/rica/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haoyangw"},"content":"package io.github.haoyangw.rica.task;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"haoyangw"},"content":"import io.github.haoyangw.rica.exception.RicaSerializationException;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"haoyangw"},"content":"import io.github.haoyangw.rica.exception.RicaTaskException;","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"haoyangw"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"haoyangw"},"content":"    private static final String MISSING_DESCRIPTION_ERROR \u003d \" Remember to provide a description of the todo task you\u0027re adding y\u0027know!\";","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"haoyangw"},"content":"    private static final int NUM_OF_SERIALIZED_DATA \u003d 3;","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"haoyangw"},"content":"    protected static final String TYPE \u003d \"T\";","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"haoyangw"},"content":"    private final boolean isDone;","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"haoyangw"},"content":"    protected Todo(String description, boolean isDone) {","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"haoyangw"},"content":"        super(description);","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"haoyangw"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"haoyangw"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"haoyangw"},"content":"        this(description, false);","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"haoyangw"},"content":"    private static String getDescriptionOf(String command) {","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"haoyangw"},"content":"        String[] parameters \u003d command.split(\" \");","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"haoyangw"},"content":"        StringBuilder descriptionBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"haoyangw"},"content":"        for (int i \u003d 1; i \u003c parameters.length; i +\u003d 1) {","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"haoyangw"},"content":"            int FIRST_WORD_OF_DESCRIPTION \u003d 1;","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"haoyangw"},"content":"            if (i !\u003d FIRST_WORD_OF_DESCRIPTION) {","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"haoyangw"},"content":"                descriptionBuilder.append(\" \");","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"haoyangw"},"content":"            }","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"haoyangw"},"content":"            descriptionBuilder.append(parameters[i]);","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"haoyangw"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"haoyangw"},"content":"        return descriptionBuilder.toString();","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"haoyangw"},"content":"    protected boolean getIsDone() {","lastModifiedDate":"2023-02-07"},{"lineNumber":35,"author":{"gitId":"haoyangw"},"content":"        return this.isDone;","lastModifiedDate":"2023-02-07"},{"lineNumber":36,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":37,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":38,"author":{"gitId":"haoyangw"},"content":"    @Override","lastModifiedDate":"2023-02-11"},{"lineNumber":39,"author":{"gitId":"haoyangw"},"content":"    protected String getType() {","lastModifiedDate":"2023-02-07"},{"lineNumber":40,"author":{"gitId":"haoyangw"},"content":"        return Todo.TYPE;","lastModifiedDate":"2023-02-07"},{"lineNumber":41,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":42,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":43,"author":{"gitId":"haoyangw"},"content":"    public static Todo create(String command) throws RicaTaskException {","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"haoyangw"},"content":"        String description \u003d Todo.getDescriptionOf(command);","lastModifiedDate":"2023-02-08"},{"lineNumber":45,"author":{"gitId":"haoyangw"},"content":"        if (description.isBlank()) {","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"haoyangw"},"content":"            throw new RicaTaskException(Todo.MISSING_DESCRIPTION_ERROR);","lastModifiedDate":"2023-02-09"},{"lineNumber":47,"author":{"gitId":"haoyangw"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"haoyangw"},"content":"        return new Todo(description);","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"haoyangw"},"content":"    public static Todo deserializeObject(String objectData) {","lastModifiedDate":"2023-02-13"},{"lineNumber":52,"author":{"gitId":"haoyangw"},"content":"        String[] variables \u003d objectData.split(Task.DATA_STRING_SEPARATOR_REGEX);","lastModifiedDate":"2023-02-13"},{"lineNumber":53,"author":{"gitId":"haoyangw"},"content":"        if (variables.length \u003c Todo.NUM_OF_SERIALIZED_DATA) {","lastModifiedDate":"2023-02-13"},{"lineNumber":54,"author":{"gitId":"haoyangw"},"content":"            throw new RicaSerializationException(Task.INCOMPLETE_SERIALIZED_OBJECT_STRING);","lastModifiedDate":"2023-02-13"},{"lineNumber":55,"author":{"gitId":"haoyangw"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":56,"author":{"gitId":"haoyangw"},"content":"        if (!variables[0].equals(Todo.TYPE)) {","lastModifiedDate":"2023-02-13"},{"lineNumber":57,"author":{"gitId":"haoyangw"},"content":"            throw new RicaSerializationException(Task.WRONG_SERIALIZED_OBJECT_TYPE);","lastModifiedDate":"2023-02-13"},{"lineNumber":58,"author":{"gitId":"haoyangw"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":59,"author":{"gitId":"haoyangw"},"content":"        int SECOND_SAVED_DATA \u003d 1;","lastModifiedDate":"2023-03-02"},{"lineNumber":60,"author":{"gitId":"haoyangw"},"content":"        String description \u003d variables[SECOND_SAVED_DATA];","lastModifiedDate":"2023-03-02"},{"lineNumber":61,"author":{"gitId":"haoyangw"},"content":"        int THIRD_SAVED_DATA \u003d 2;","lastModifiedDate":"2023-03-02"},{"lineNumber":62,"author":{"gitId":"haoyangw"},"content":"        boolean isDone \u003d Boolean.parseBoolean(variables[THIRD_SAVED_DATA]);","lastModifiedDate":"2023-03-02"},{"lineNumber":63,"author":{"gitId":"haoyangw"},"content":"        return new Todo(description, isDone);","lastModifiedDate":"2023-02-13"},{"lineNumber":64,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":65,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":66,"author":{"gitId":"haoyangw"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":67,"author":{"gitId":"haoyangw"},"content":"    public String serializeObject() {","lastModifiedDate":"2023-02-13"},{"lineNumber":68,"author":{"gitId":"haoyangw"},"content":"        String taskData \u003d super.serializeObject();","lastModifiedDate":"2023-02-13"},{"lineNumber":69,"author":{"gitId":"haoyangw"},"content":"        return taskData + Task.DATA_STRING_SEPARATOR + this.getIsDone();","lastModifiedDate":"2023-02-13"},{"lineNumber":70,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":71,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":72,"author":{"gitId":"haoyangw"},"content":"    public Todo setDone(boolean isDone) {","lastModifiedDate":"2023-02-03"},{"lineNumber":73,"author":{"gitId":"haoyangw"},"content":"        return new Todo(super.getDescription(), isDone);","lastModifiedDate":"2023-02-13"},{"lineNumber":74,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":75,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":76,"author":{"gitId":"haoyangw"},"content":"    @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":77,"author":{"gitId":"haoyangw"},"content":"    public String toString() {","lastModifiedDate":"2023-02-03"},{"lineNumber":78,"author":{"gitId":"haoyangw"},"content":"        String boxContent \u003d this.getIsDone() ? \"X\" : \" \";","lastModifiedDate":"2023-02-03"},{"lineNumber":79,"author":{"gitId":"haoyangw"},"content":"        return String.format(\"[%s][%s] %s\", this.getType(), boxContent, super.toString());","lastModifiedDate":"2023-02-03"},{"lineNumber":80,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":81,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":82,"author":{"gitId":"haoyangw"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"haoyangw":82}},{"path":"src/main/java/io/github/haoyangw/rica/ui/TextUi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haoyangw"},"content":"package io.github.haoyangw.rica.ui;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"haoyangw"},"content":"import io.github.haoyangw.rica.exception.RicaException;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"haoyangw"},"content":"import io.github.haoyangw.rica.task.Task;","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"haoyangw"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"haoyangw"},"content":"import java.util.List;","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"haoyangw"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"haoyangw"},"content":"public class TextUi {","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"haoyangw"},"content":"    private final Scanner cmdLineIn;","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"haoyangw"},"content":"    private final PrintStream cmdLineOut;","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"haoyangw"},"content":"    private static final String BYE_PHRASE \u003d \" Leaving so soon? Come back anytime, I\u0027ll be happy to help!\";","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"haoyangw"},"content":"    private static final String IMPORTANT_MESSAGE_MARKER \u003d \"***\";","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"haoyangw"},"content":"    private static final String INDENT \u003d \"    \";","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"haoyangw"},"content":"    private static final String LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"haoyangw"},"content":"    public TextUi() {","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"haoyangw"},"content":"        this.cmdLineIn \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"haoyangw"},"content":"        this.cmdLineOut \u003d System.out;","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"haoyangw"},"content":"    public TextUi(Scanner cmdIn, PrintStream cmdOut) {","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"haoyangw"},"content":"        this.cmdLineIn \u003d cmdIn;","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"haoyangw"},"content":"        this.cmdLineOut \u003d cmdOut;","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"haoyangw"},"content":"    private Scanner getCmdLineIn() {","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"haoyangw"},"content":"        return this.cmdLineIn;","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"haoyangw"},"content":"    private PrintStream getCmdLineOut() {","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"haoyangw"},"content":"        return this.cmdLineOut;","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"haoyangw"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"haoyangw"},"content":"     * Prints a given runtime Exception on the user\u0027s screen using Rica\u0027s own output","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"haoyangw"},"content":"     *   format.","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"haoyangw"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"haoyangw"},"content":"     * @param exception Exception to inform the user about","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"haoyangw"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"haoyangw"},"content":"    public void printErrorMessage(RicaException exception) {","lastModifiedDate":"2023-02-23"},{"lineNumber":43,"author":{"gitId":"haoyangw"},"content":"        this.printlnWithIndent(exception.getMessage());","lastModifiedDate":"2023-02-23"},{"lineNumber":44,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"haoyangw"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"haoyangw"},"content":"     * Prints the footer found at the end of each of Rica\u0027s messages.","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"haoyangw"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"haoyangw"},"content":"    public void printFooter() {","lastModifiedDate":"2023-02-23"},{"lineNumber":50,"author":{"gitId":"haoyangw"},"content":"        this.printlnWithIndent(TextUi.LINE);","lastModifiedDate":"2023-02-23"},{"lineNumber":51,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":52,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":53,"author":{"gitId":"haoyangw"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"haoyangw"},"content":"     * Tells the user that Rica is sad to say goodbye :(","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"haoyangw"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":56,"author":{"gitId":"haoyangw"},"content":"    public void printGoodbyeMessage() {","lastModifiedDate":"2023-02-23"},{"lineNumber":57,"author":{"gitId":"haoyangw"},"content":"        this.printlnWithIndent(TextUi.BYE_PHRASE);","lastModifiedDate":"2023-02-23"},{"lineNumber":58,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":59,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":60,"author":{"gitId":"haoyangw"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":61,"author":{"gitId":"haoyangw"},"content":"     * Prints the header found at the beginning of each of Rica\u0027s messages.","lastModifiedDate":"2023-03-01"},{"lineNumber":62,"author":{"gitId":"haoyangw"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":63,"author":{"gitId":"haoyangw"},"content":"    public void printHeader() {","lastModifiedDate":"2023-02-23"},{"lineNumber":64,"author":{"gitId":"haoyangw"},"content":"        this.printlnWithIndent(TextUi.LINE);","lastModifiedDate":"2023-02-23"},{"lineNumber":65,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":66,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":67,"author":{"gitId":"haoyangw"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":68,"author":{"gitId":"haoyangw"},"content":"     * Prints a message that looks more important by wrapping the","lastModifiedDate":"2023-03-02"},{"lineNumber":69,"author":{"gitId":"haoyangw"},"content":"     *   message with \u0027***\u0027","lastModifiedDate":"2023-03-02"},{"lineNumber":70,"author":{"gitId":"haoyangw"},"content":"     *","lastModifiedDate":"2023-03-02"},{"lineNumber":71,"author":{"gitId":"haoyangw"},"content":"     * @param message Message we want to format to look more important on the user\u0027s","lastModifiedDate":"2023-03-02"},{"lineNumber":72,"author":{"gitId":"haoyangw"},"content":"     *   screen","lastModifiedDate":"2023-03-02"},{"lineNumber":73,"author":{"gitId":"haoyangw"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":74,"author":{"gitId":"haoyangw"},"content":"    public void printImportantMessage(String message) {","lastModifiedDate":"2023-03-02"},{"lineNumber":75,"author":{"gitId":"haoyangw"},"content":"        String SUBSTITUTE_FOR_MESSAGE \u003d \"%s\";","lastModifiedDate":"2023-03-02"},{"lineNumber":76,"author":{"gitId":"haoyangw"},"content":"        String messageFormat \u003d TextUi.IMPORTANT_MESSAGE_MARKER + TextUi.INDENT","lastModifiedDate":"2023-03-02"},{"lineNumber":77,"author":{"gitId":"haoyangw"},"content":"                + SUBSTITUTE_FOR_MESSAGE + TextUi.INDENT + TextUi.IMPORTANT_MESSAGE_MARKER;","lastModifiedDate":"2023-03-02"},{"lineNumber":78,"author":{"gitId":"haoyangw"},"content":"        this.getCmdLineOut().printf((messageFormat) + System.lineSeparator(), message);","lastModifiedDate":"2023-03-02"},{"lineNumber":79,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":80,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":81,"author":{"gitId":"haoyangw"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":82,"author":{"gitId":"haoyangw"},"content":"     * Prints an error message that looks more important by wrapping the","lastModifiedDate":"2023-03-02"},{"lineNumber":83,"author":{"gitId":"haoyangw"},"content":"     *   message with \u0027***\u0027","lastModifiedDate":"2023-03-02"},{"lineNumber":84,"author":{"gitId":"haoyangw"},"content":"     *","lastModifiedDate":"2023-03-02"},{"lineNumber":85,"author":{"gitId":"haoyangw"},"content":"     * @param exception Important Rica internal Exception to inform the user about","lastModifiedDate":"2023-03-02"},{"lineNumber":86,"author":{"gitId":"haoyangw"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":87,"author":{"gitId":"haoyangw"},"content":"    public void printImportantErrorMessage(RicaException exception) {","lastModifiedDate":"2023-03-02"},{"lineNumber":88,"author":{"gitId":"haoyangw"},"content":"        this.printImportantMessage(exception.getMessage());","lastModifiedDate":"2023-03-02"},{"lineNumber":89,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":90,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":91,"author":{"gitId":"haoyangw"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":92,"author":{"gitId":"haoyangw"},"content":"     * Prints a given message on the user\u0027s screen with Rica\u0027s own unique indentation.","lastModifiedDate":"2023-03-01"},{"lineNumber":93,"author":{"gitId":"haoyangw"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":94,"author":{"gitId":"haoyangw"},"content":"     * @param message Message to print on the user\u0027s screen","lastModifiedDate":"2023-03-01"},{"lineNumber":95,"author":{"gitId":"haoyangw"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":96,"author":{"gitId":"haoyangw"},"content":"    public void printlnWithIndent(String message) {","lastModifiedDate":"2023-02-23"},{"lineNumber":97,"author":{"gitId":"haoyangw"},"content":"        this.getCmdLineOut().print(TextUi.INDENT);","lastModifiedDate":"2023-02-23"},{"lineNumber":98,"author":{"gitId":"haoyangw"},"content":"        this.getCmdLineOut().println(message);","lastModifiedDate":"2023-02-23"},{"lineNumber":99,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":100,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":101,"author":{"gitId":"haoyangw"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":102,"author":{"gitId":"haoyangw"},"content":"     * Prints a list of Tasks remembered by Rica in Rica\u0027s unique output format.","lastModifiedDate":"2023-03-01"},{"lineNumber":103,"author":{"gitId":"haoyangw"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":104,"author":{"gitId":"haoyangw"},"content":"     * @param tasks List of Tasks to print on the user\u0027s screen","lastModifiedDate":"2023-03-01"},{"lineNumber":105,"author":{"gitId":"haoyangw"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":106,"author":{"gitId":"haoyangw"},"content":"    public void printTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-28"},{"lineNumber":107,"author":{"gitId":"haoyangw"},"content":"        this.printTasks(tasks, \" I think you have these tasks:\",","lastModifiedDate":"2023-02-28"},{"lineNumber":108,"author":{"gitId":"haoyangw"},"content":"                \" Hope I\u0027m not amnesiac, but I don\u0027t remember any tasks?\");","lastModifiedDate":"2023-02-28"},{"lineNumber":109,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":110,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":111,"author":{"gitId":"haoyangw"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":112,"author":{"gitId":"haoyangw"},"content":"     * Prints a list of Tasks remembered by Rica in Rica\u0027s unique output format","lastModifiedDate":"2023-03-01"},{"lineNumber":113,"author":{"gitId":"haoyangw"},"content":"     *   with caller-specified messages for when no Tasks are being tracked yet,","lastModifiedDate":"2023-03-01"},{"lineNumber":114,"author":{"gitId":"haoyangw"},"content":"     *   and when Rica is currently tracking a list of Tasks.","lastModifiedDate":"2023-03-01"},{"lineNumber":115,"author":{"gitId":"haoyangw"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":116,"author":{"gitId":"haoyangw"},"content":"     * @param tasks List of Tasks to print on the user\u0027s screen","lastModifiedDate":"2023-03-01"},{"lineNumber":117,"author":{"gitId":"haoyangw"},"content":"     * @param messageToUser Message shown to the user when list of Tasks contains","lastModifiedDate":"2023-03-01"},{"lineNumber":118,"author":{"gitId":"haoyangw"},"content":"     *   one or more Tasks","lastModifiedDate":"2023-03-01"},{"lineNumber":119,"author":{"gitId":"haoyangw"},"content":"     * @param noTasksMessageToUser Message shown to the user when list of Tasks","lastModifiedDate":"2023-03-01"},{"lineNumber":120,"author":{"gitId":"haoyangw"},"content":"     *   is empty","lastModifiedDate":"2023-03-01"},{"lineNumber":121,"author":{"gitId":"haoyangw"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":122,"author":{"gitId":"haoyangw"},"content":"    public void printTasks(List\u003cTask\u003e tasks, String messageToUser, String noTasksMessageToUser) {","lastModifiedDate":"2023-02-28"},{"lineNumber":123,"author":{"gitId":"haoyangw"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2023-02-23"},{"lineNumber":124,"author":{"gitId":"haoyangw"},"content":"            this.printlnWithIndent(noTasksMessageToUser);","lastModifiedDate":"2023-02-28"},{"lineNumber":125,"author":{"gitId":"haoyangw"},"content":"        } else {","lastModifiedDate":"2023-02-23"},{"lineNumber":126,"author":{"gitId":"haoyangw"},"content":"            this.printlnWithIndent(messageToUser);","lastModifiedDate":"2023-02-28"},{"lineNumber":127,"author":{"gitId":"haoyangw"},"content":"            for (int i \u003d 1; i \u003c\u003d tasks.size(); i +\u003d 1) {","lastModifiedDate":"2023-02-23"},{"lineNumber":128,"author":{"gitId":"haoyangw"},"content":"                this.printlnWithIndent(\" \" + i + \".\" + tasks.get(i - 1));","lastModifiedDate":"2023-02-23"},{"lineNumber":129,"author":{"gitId":"haoyangw"},"content":"            }","lastModifiedDate":"2023-02-23"},{"lineNumber":130,"author":{"gitId":"haoyangw"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":131,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":132,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":133,"author":{"gitId":"haoyangw"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":134,"author":{"gitId":"haoyangw"},"content":"     * Prints Rica\u0027s lively welcome message shown to the user every time Rica comes","lastModifiedDate":"2023-03-01"},{"lineNumber":135,"author":{"gitId":"haoyangw"},"content":"     *   back to life.","lastModifiedDate":"2023-03-01"},{"lineNumber":136,"author":{"gitId":"haoyangw"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":137,"author":{"gitId":"haoyangw"},"content":"    public void printWelcomeMessage() {","lastModifiedDate":"2023-02-23"},{"lineNumber":138,"author":{"gitId":"haoyangw"},"content":"        this.printHeader();","lastModifiedDate":"2023-02-23"},{"lineNumber":139,"author":{"gitId":"haoyangw"},"content":"        this.printlnWithIndent(\" Hello! I\u0027m\");","lastModifiedDate":"2023-03-03"},{"lineNumber":140,"author":{"gitId":"haoyangw"},"content":"        this.printlnWithIndent(\" .______              __          ______             ___          \");","lastModifiedDate":"2023-03-03"},{"lineNumber":141,"author":{"gitId":"haoyangw"},"content":"        this.printlnWithIndent(\" |   _  \\\\            |  |        /      |           /   \\\\         \");","lastModifiedDate":"2023-03-03"},{"lineNumber":142,"author":{"gitId":"haoyangw"},"content":"        this.printlnWithIndent(\" |  |_)  |           |  |       |  ,----\u0027          /  ^  \\\\        \");","lastModifiedDate":"2023-03-03"},{"lineNumber":143,"author":{"gitId":"haoyangw"},"content":"        this.printlnWithIndent(\" |      /            |  |       |  |              /  /_\\\\  \\\\       \");","lastModifiedDate":"2023-03-03"},{"lineNumber":144,"author":{"gitId":"haoyangw"},"content":"        this.printlnWithIndent(\" |  |\\\\  \\\\----.  __   |  |  __   |  `----.  __    /  _____  \\\\   __ \");","lastModifiedDate":"2023-03-03"},{"lineNumber":145,"author":{"gitId":"haoyangw"},"content":"        this.printlnWithIndent(\" | _| `._____| (__)  |__| (__)   \\\\______| (__)  /__/     \\\\__\\\\ (__)\");","lastModifiedDate":"2023-03-03"},{"lineNumber":146,"author":{"gitId":"haoyangw"},"content":"        this.printlnWithIndent(\" That\u0027s Really-Intelligent-Chat-Assistant for you!\");","lastModifiedDate":"2023-02-23"},{"lineNumber":147,"author":{"gitId":"haoyangw"},"content":"        this.printlnWithIndent(\" How may I be of assistance?\");","lastModifiedDate":"2023-02-23"},{"lineNumber":148,"author":{"gitId":"haoyangw"},"content":"        this.printFooter();","lastModifiedDate":"2023-02-23"},{"lineNumber":149,"author":{"gitId":"haoyangw"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":150,"author":{"gitId":"haoyangw"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":151,"author":{"gitId":"haoyangw"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"haoyangw":151}}]
