{"authorDailyContributionsMap":{"haoyangw":[{"date":"2023-01-19","commitResults":[{"hash":"90c0710ddfe13e70619e5d786495e26e880ee167","messageTitle":"Level 0: Duke shall greet the user and exit, for now","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":6}}}]},{"date":"2023-01-26","commitResults":[{"hash":"56d6bb3232b44c3458dbfdc81f63f3b210ef8139","messageTitle":"Implement increment Level-0: Read commands and reply","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":30,"deletions":6}}},{"hash":"139fd3ea242263ba57326e01fb6fd84a113b7a72","messageTitle":"Add some personality to (who is now) R.I.C.A","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":38,"deletions":36}}},{"hash":"b7576ed97b208fb0e9633343e44b552629601573","messageTitle":"Implement Level-2: Add and List functionality for R.I.C.A","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":33,"deletions":5}}}]},{"date":"2023-01-27","commitResults":[{"hash":"36fc0003bac3b6978194ccb4528d44017e7f98a3","messageTitle":"Implement a basic Task class that stores task status and description","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":36,"deletions":0}}},{"hash":"f746c22f9121ebeaf8db4842386a14046ab9d624","messageTitle":"Refactor Rica to use Task objects(basic) instead of Strings","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":11}}},{"hash":"0dbac2d4114421d2f2886d57dc8c9a67bcd1f11d","messageTitle":"Implement logic for marking tasks as done through Rica","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":35,"deletions":12}}},{"hash":"a4e18891853ae07aaf8ea4b01850af01511724bf","messageTitle":"Implement logic for marking tasks as not done while fixing a bug in parsing command as mark/unmark","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":19,"deletions":7}}},{"hash":"a4f84a832971953bf6bec43cb9aa4bb51f5b37f5","messageTitle":"Augment list command: Tell the user when no tasks have been added yet, otherwise list tasks","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":4}}},{"hash":"96b7b3b2de048b100bbd7b3619d7246fcf9a98cc","messageTitle":"Improve the reply when marking/unmarking tasks as done","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":4}}},{"hash":"9fb1a2f5bcbed65eb4be2d62aa503cd1cac04bcd","messageTitle":"Move reply for mark/unmark command to the corresponding helper function","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":6}}},{"hash":"fa2630dc1e00d412814eed97c555db9d7062f467","messageTitle":"Bounds checking: Check that task exists before trying to mark/unmark to prevent crash","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":0}}},{"hash":"441c54755e080ab25212c3a8858e6c09129b525c","messageTitle":"Sanity check: Don\u0027t mark/unmark task when it\u0027s already marked/unmarked, also inform the user about it","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":2}}},{"hash":"324fff25d5d5bcc940b82f93a2d177d22ccde277","messageTitle":"Add proper padding for mark/unmark reply that matches that of other commands for tasks","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"817c696250191102da59097ae2cd350837d4e293","messageTitle":"Another sanity check: If user spams whitespace/enter key don\u0027t end up adding a task with whitespace name/no name","messageBody":"","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":1}}}]},{"date":"2023-02-02","commitResults":[{"hash":"203c5982f24c5a5bc49453876c8a385e5b2169f6","messageTitle":"Add javadoc comments for all non-trivial methods in our classes","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":24,"deletions":0}}},{"hash":"c4977032b098d33fbf35dd85a8d8d749d675865b","messageTitle":"Rica.class: Remove unused overloaded addTask() method","messageBody":"","tags":["A-CodingStandard"],"fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":4}}}]},{"date":"2023-02-03","commitResults":[{"hash":"50f4e8d17e057cac8aafe9f9d698a5310f2dd3db","messageTitle":"Task.class: Fix non-final class variable name being written in caps instead of camelCase","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":4}}},{"hash":"b09e6e652003691d1d73ca9ea4be87f55023e7cd","messageTitle":"Rica.class: Fix indentatino for switch block","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":10}}},{"hash":"67d5d2f1144ef359247e9b57b48e4a5945e16f80","messageTitle":"Task.class: Follow coding style standards and use just one setDone() setter","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":8}}},{"hash":"dddf3e2b6272688dd2a546b73767430f32d394e8","messageTitle":"Add a new Todo class and move todo logic from Task to Todo","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":26,"deletions":17}}},{"hash":"e76c55ee50948dee81c33a19bb526c15c152311a","messageTitle":"Rica.class: Refactor to use Todo class instead of Task","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":8}}},{"hash":"dca2d79d0c50da118c592f8f4669255d2723bcd0","messageTitle":"Rica.class: Add a new command for adding todos","messageBody":"Also, rename our variables and methods now that we are using Todos instead of Tasks directly\n","fileTypesAndContributionMap":{"java":{"insertions":81,"deletions":75}}},{"hash":"ab5ef601e86edeaa50882f10eef64c35169f8146","messageTitle":"Todo.class: Add additional [T] to its toString() output","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":1}}},{"hash":"5cd9261ac63ab653afb4bd876e78deef5b4c7471","messageTitle":"Task.class: Make getDescription() publicly accessible","messageBody":"Not sensitive information anyway, in fact it is quite meaningful for other classes\n","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"715a52d2ec5a8d77d847733c88d5ce9b01e1eaed","messageTitle":"Move logic for creating new Todo to a factory method in Todo.class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":20,"deletions":13}}},{"hash":"6883a44f6af91fe1985324e4f8d493f1dc6a54ab","messageTitle":"New TaskManager.class: Manages tasks(add, mark, unmark)","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":140,"deletions":0}}},{"hash":"92c863676337c2933ff4b00aa7e85c89b8de25e4","messageTitle":"Rica.class: Refactor to use the new TaskManager.class","messageBody":"Call TaskManager\u0027s methods to perform task management so Rica.class is simpler.\n","fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":94}}},{"hash":"47cc7b81201de7e6e06f9dad30616ce2e589927e","messageTitle":"Rica.class: Fix warnings due to using Integer.valueOf() wrongly","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"8cbe3b3db51a66ac9926f660f039cee2b72dcaa1","messageTitle":"New Deadline.class: Todos that must be done before a date/time","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":59,"deletions":0}}},{"hash":"982962897da3332a1fc7af5c8dc9d89f6f99ceb1","messageTitle":"Update Rica.class and TaskManager.class: Support adding deadline tasks","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":5}}}]},{"date":"2023-02-04","commitResults":[{"hash":"288e97c17031d8df4cf67bfa5e96bd9a7c263ce3","messageTitle":"New Event.class: Support adding events with start/end date/time","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":82,"deletions":0}}},{"hash":"81130c1a75815009618458a9e004f90f5dd3111b","messageTitle":"Update Rica.class and TaskManager.class: Support event commands by using Event.class methods","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":19,"deletions":2}}},{"hash":"d97300afcc4a1951f77647ccb16f78996b7e77db","messageTitle":"Fix additional whitespace messing up formatting of task management replies","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":12}}},{"hash":"407aa056dc7e2d5250821c5c56b042e4129af2b2","messageTitle":"TaskManager.class: Fix refactoring misses and grammar issue","messageBody":"","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}}]},{"date":"2023-02-07","commitResults":[{"hash":"4c86b4e52dd764a1c1fb7eb1333b71c5cbf9f9e4","messageTitle":"TaskManager.class: Improve if conditions\u0027 readability","messageBody":"Store boolean conditions in variables with descriptive names so if conditions are easily understandable and shorter\n","fileTypesAndContributionMap":{"java":{"insertions":17,"deletions":6}}},{"hash":"18a68416e833af2fd54d59b5ce1486c03c1da6e4","messageTitle":"Code quality improvements","messageBody":"Set some rules for arranging variables/methods in all classes from now on\n\n1. Order of arranging: Variables first, followed by constructors, and then methods\n2. Within each of the above categories, arrange by their access modifier: private-\u003edefault-\u003eprotected-\u003epublic\n3. Within each of the access modifier categories, arrange names alphabetically\n","fileTypesAndContributionMap":{"java":{"insertions":120,"deletions":115}}}]},{"date":"2023-02-08","commitResults":[{"hash":"f33648825a6be3325e85fd2fd43e45b5808fa246","messageTitle":"Code quality improvements: Reduce method length","messageBody":"Abstract logic into separate methods more to reduce the length of each individual method\n\nMakes code more readable\n","tags":["A-CodeQuality"],"fileTypesAndContributionMap":{"java":{"insertions":96,"deletions":98}}}]},{"date":"2023-02-09","commitResults":[{"hash":"e68ef1472b61ca9532672075b73905f3434e67bf","messageTitle":"Add our own RuntimeException class","messageBody":"Have RicaException to represent all of Rica\u0027s internal exceptions and RicaTaskException(subclass of RicaException)\n  to represent Rica\u0027s task-related exceptions\n","fileTypesAndContributionMap":{"java":{"insertions":19,"deletions":0}}},{"hash":"9decba34fae60a6d6d111639f85c953fd68fcc1c","messageTitle":"Use RicaException and RicaTaskException to handle errors gracefully","messageBody":"Now Rica won\u0027t crash or return null references anymore when given invalid inputs\n","fileTypesAndContributionMap":{"java":{"insertions":78,"deletions":27}}}]},{"date":"2023-02-10","commitResults":[{"hash":"dc4a2a7f50e0cd51187e2d616e98740e4541de83","messageTitle":"Create two preliminary packages: exception and task","messageBody":"exception: For RicaException and its subclasses to categorise exception conditions in Rica\n\ntask: For Task and its subclasses to categorise Rica\u0027s various tasks\n","fileTypesAndContributionMap":{"java":{"insertions":33,"deletions":5}}}]}]},"authorFileTypeContributionMap":{"haoyangw":{"java":548,"md":0,"fxml":0,"sh":0,"bat":0,"gradle":0,"txt":0}},"authorContributionVariance":{"haoyangw":16661.523},"authorDisplayNameMap":{"haoyangw":"CS2113-T12-4 WANG..YANG"}}
