[{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholas132000"},"content":"package duke;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"nicholas132000"},"content":"public class Deadline extends Task{","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"nicholas132000"},"content":"    protected String by;","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"nicholas132000"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"nicholas132000"},"content":"        super(description);","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"nicholas132000"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"nicholas132000"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"nicholas132000"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"nicholas132000"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"nicholas132000"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"nicholas132000"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"nicholas132000"},"content":"    @Override","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"nicholas132000"},"content":"    public String getSymbol() {","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"nicholas132000"},"content":"        return \"D\";","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"nicholas132000"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"nicholas132000"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"nicholas132000":21}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholas132000"},"content":"package duke;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"nicholas132000"},"content":"        System.out.println(\"Hello from\\n\" + logo + \u0027\\n\u0027);","lastModifiedDate":"2023-01-14"},{"lineNumber":11,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":12,"author":{"gitId":"nicholas132000"},"content":"        System.out.println(\"Hello I\u0027m Duke!\\nWhat can I do for you?\\n\");","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"nicholas132000"},"content":"        Echo.Echo();","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"nicholas132000"},"content":"        System.exit(0);","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"nicholas132000":7,"-":9}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholas132000"},"content":"package duke;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"nicholas132000"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"nicholas132000"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"nicholas132000":5}},{"path":"src/main/java/duke/Echo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholas132000"},"content":"package duke;//import java.util.Scanner;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"nicholas132000"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"nicholas132000"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"nicholas132000"},"content":"import java.io.*;","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"nicholas132000"},"content":"public class Echo {","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"nicholas132000"},"content":"    public static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"nicholas132000"},"content":"    public static void Echo() {","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"nicholas132000"},"content":"        //loading up contents into program","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"nicholas132000"},"content":"        FileHandling.loadContents();","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"nicholas132000"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"nicholas132000"},"content":"        String readInput \u003d in.nextLine();","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"nicholas132000"},"content":"        String readInputAsArray[] \u003d readInput.split(\" \", 2);","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"nicholas132000"},"content":"        String command \u003d readInputAsArray[0];","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"nicholas132000"},"content":"        String task \u003d \" \";","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"nicholas132000"},"content":"        if (readInputAsArray.length \u003e 1) {","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"nicholas132000"},"content":"            task \u003d readInputAsArray[1];","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"nicholas132000"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"nicholas132000"},"content":"        while (!(command.equals(\"Bye\") || command.equals(\"bye\"))) {","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"nicholas132000"},"content":"            if (command.equals(\"list\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"nicholas132000"},"content":"                list_Input(tasks);","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"nicholas132000"},"content":"            } else if (command.equals(\"unmark\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"nicholas132000"},"content":"                try {","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"nicholas132000"},"content":"                    unmark_Input(tasks, task);","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"nicholas132000"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"nicholas132000"},"content":"                    System.out.println(\"â˜¹ OOPS!!! Which task do you want to unmark?\");","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"nicholas132000"},"content":"                } catch (IOException i) {","lastModifiedDate":"2023-02-15"},{"lineNumber":34,"author":{"gitId":"nicholas132000"},"content":"                    System.out.println(\"An error occurred with txt file\");","lastModifiedDate":"2023-02-15"},{"lineNumber":35,"author":{"gitId":"nicholas132000"},"content":"                }","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"nicholas132000"},"content":"            } else if (command.equals(\"mark\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"nicholas132000"},"content":"                try {","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"nicholas132000"},"content":"                    mark_Input(tasks, task);","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"nicholas132000"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-02-08"},{"lineNumber":40,"author":{"gitId":"nicholas132000"},"content":"                    System.out.println(\"â˜¹ OOPS!!! Which task do you want to mark?\");","lastModifiedDate":"2023-02-08"},{"lineNumber":41,"author":{"gitId":"nicholas132000"},"content":"                } catch (IOException i) {","lastModifiedDate":"2023-02-15"},{"lineNumber":42,"author":{"gitId":"nicholas132000"},"content":"                    System.out.println(\"An error occurred with txt file\");","lastModifiedDate":"2023-02-15"},{"lineNumber":43,"author":{"gitId":"nicholas132000"},"content":"                }","lastModifiedDate":"2023-02-08"},{"lineNumber":44,"author":{"gitId":"nicholas132000"},"content":"            } else if (command.equals(\"delete\")) {","lastModifiedDate":"2023-02-11"},{"lineNumber":45,"author":{"gitId":"nicholas132000"},"content":"                try {","lastModifiedDate":"2023-02-11"},{"lineNumber":46,"author":{"gitId":"nicholas132000"},"content":"                    delete(tasks, task);","lastModifiedDate":"2023-02-11"},{"lineNumber":47,"author":{"gitId":"nicholas132000"},"content":"                } catch (DukeException e){","lastModifiedDate":"2023-02-11"},{"lineNumber":48,"author":{"gitId":"nicholas132000"},"content":"                    System.out.println(\"â˜¹ OOPS!!! Which task do you want to delete?\");","lastModifiedDate":"2023-02-11"},{"lineNumber":49,"author":{"gitId":"nicholas132000"},"content":"                } catch (IOException i) {","lastModifiedDate":"2023-02-15"},{"lineNumber":50,"author":{"gitId":"nicholas132000"},"content":"                    System.out.println(\"An error occurred with txt file\");","lastModifiedDate":"2023-02-15"},{"lineNumber":51,"author":{"gitId":"nicholas132000"},"content":"                }","lastModifiedDate":"2023-02-11"},{"lineNumber":52,"author":{"gitId":"nicholas132000"},"content":"            } else if (command.equals(\"todo\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"nicholas132000"},"content":"                try {","lastModifiedDate":"2023-02-08"},{"lineNumber":54,"author":{"gitId":"nicholas132000"},"content":"                    todo_Input(tasks, task);","lastModifiedDate":"2023-02-15"},{"lineNumber":55,"author":{"gitId":"nicholas132000"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-02-08"},{"lineNumber":56,"author":{"gitId":"nicholas132000"},"content":"                    System.out.println(\"â˜¹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-02-08"},{"lineNumber":57,"author":{"gitId":"nicholas132000"},"content":"                } catch (IOException i) {","lastModifiedDate":"2023-02-15"},{"lineNumber":58,"author":{"gitId":"nicholas132000"},"content":"                    System.out.println(\"An error occurred with txt file\");","lastModifiedDate":"2023-02-15"},{"lineNumber":59,"author":{"gitId":"nicholas132000"},"content":"                }","lastModifiedDate":"2023-02-08"},{"lineNumber":60,"author":{"gitId":"nicholas132000"},"content":"            } else if (command.equals(\"deadline\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"nicholas132000"},"content":"                try {","lastModifiedDate":"2023-02-08"},{"lineNumber":62,"author":{"gitId":"nicholas132000"},"content":"                    deadline_Input(tasks, task);","lastModifiedDate":"2023-02-15"},{"lineNumber":63,"author":{"gitId":"nicholas132000"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-02-08"},{"lineNumber":64,"author":{"gitId":"nicholas132000"},"content":"                    System.out.println(\"â˜¹ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-02-08"},{"lineNumber":65,"author":{"gitId":"nicholas132000"},"content":"                } catch (IOException i) {","lastModifiedDate":"2023-02-15"},{"lineNumber":66,"author":{"gitId":"nicholas132000"},"content":"                    System.out.println(\"An error occurred with txt file\");","lastModifiedDate":"2023-02-15"},{"lineNumber":67,"author":{"gitId":"nicholas132000"},"content":"                }","lastModifiedDate":"2023-02-08"},{"lineNumber":68,"author":{"gitId":"nicholas132000"},"content":"            } else if (command.equals(\"event\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"nicholas132000"},"content":"                try {","lastModifiedDate":"2023-02-08"},{"lineNumber":70,"author":{"gitId":"nicholas132000"},"content":"                    event_Input(tasks, task);","lastModifiedDate":"2023-02-15"},{"lineNumber":71,"author":{"gitId":"nicholas132000"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-02-08"},{"lineNumber":72,"author":{"gitId":"nicholas132000"},"content":"                    System.out.println(\"â˜¹ OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2023-02-08"},{"lineNumber":73,"author":{"gitId":"nicholas132000"},"content":"                } catch (IOException i) {","lastModifiedDate":"2023-02-15"},{"lineNumber":74,"author":{"gitId":"nicholas132000"},"content":"                    System.out.println(\"An error occurred with txt file\");","lastModifiedDate":"2023-02-15"},{"lineNumber":75,"author":{"gitId":"nicholas132000"},"content":"                }","lastModifiedDate":"2023-02-08"},{"lineNumber":76,"author":{"gitId":"nicholas132000"},"content":"            } else {","lastModifiedDate":"2023-02-08"},{"lineNumber":77,"author":{"gitId":"nicholas132000"},"content":"                System.out.println(\"â˜¹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-02-08"},{"lineNumber":78,"author":{"gitId":"nicholas132000"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":79,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":80,"author":{"gitId":"nicholas132000"},"content":"            readInput \u003d in.nextLine();","lastModifiedDate":"2023-01-29"},{"lineNumber":81,"author":{"gitId":"nicholas132000"},"content":"            readInputAsArray \u003d readInput.split(\" \", 2);","lastModifiedDate":"2023-01-29"},{"lineNumber":82,"author":{"gitId":"nicholas132000"},"content":"            command \u003d readInputAsArray[0];","lastModifiedDate":"2023-01-29"},{"lineNumber":83,"author":{"gitId":"nicholas132000"},"content":"            task \u003d \" \";","lastModifiedDate":"2023-02-08"},{"lineNumber":84,"author":{"gitId":"nicholas132000"},"content":"            if (readInputAsArray.length \u003e 1) {","lastModifiedDate":"2023-01-29"},{"lineNumber":85,"author":{"gitId":"nicholas132000"},"content":"                task \u003d readInputAsArray[1];","lastModifiedDate":"2023-01-29"},{"lineNumber":86,"author":{"gitId":"nicholas132000"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":87,"author":{"gitId":"nicholas132000"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":88,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":89,"author":{"gitId":"nicholas132000"},"content":"        System.out.println(\"Bye. Hope to see you again!\");","lastModifiedDate":"2023-02-08"},{"lineNumber":90,"author":{"gitId":"nicholas132000"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":91,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":92,"author":{"gitId":"nicholas132000"},"content":"    private static void event_Input(ArrayList\u003cTask\u003e tasks, String task) throws DukeException, IOException {","lastModifiedDate":"2023-02-15"},{"lineNumber":93,"author":{"gitId":"nicholas132000"},"content":"        if (task \u003d\u003d \" \") {","lastModifiedDate":"2023-02-08"},{"lineNumber":94,"author":{"gitId":"nicholas132000"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-08"},{"lineNumber":95,"author":{"gitId":"nicholas132000"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":96,"author":{"gitId":"nicholas132000"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-29"},{"lineNumber":97,"author":{"gitId":"nicholas132000"},"content":"        String taskAsArray[] \u003d task.split(\"/\");","lastModifiedDate":"2023-01-29"},{"lineNumber":98,"author":{"gitId":"nicholas132000"},"content":"        Event obj \u003d new Event(taskAsArray[0], taskAsArray[1], taskAsArray[2]);","lastModifiedDate":"2023-02-15"},{"lineNumber":99,"author":{"gitId":"nicholas132000"},"content":"        tasks.add(obj); //.toString is automatically called;","lastModifiedDate":"2023-02-15"},{"lineNumber":100,"author":{"gitId":"nicholas132000"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-02-15"},{"lineNumber":101,"author":{"gitId":"nicholas132000"},"content":"        FileHandling.saveContents();","lastModifiedDate":"2023-02-15"},{"lineNumber":102,"author":{"gitId":"nicholas132000"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":103,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":104,"author":{"gitId":"nicholas132000"},"content":"    private static void deadline_Input(ArrayList\u003cTask\u003e tasks, String task) throws DukeException, IOException {","lastModifiedDate":"2023-02-15"},{"lineNumber":105,"author":{"gitId":"nicholas132000"},"content":"        if (task \u003d\u003d \" \") {","lastModifiedDate":"2023-02-08"},{"lineNumber":106,"author":{"gitId":"nicholas132000"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-08"},{"lineNumber":107,"author":{"gitId":"nicholas132000"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":108,"author":{"gitId":"nicholas132000"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-29"},{"lineNumber":109,"author":{"gitId":"nicholas132000"},"content":"        String taskAsArray[] \u003d task.split(\"/\");","lastModifiedDate":"2023-01-29"},{"lineNumber":110,"author":{"gitId":"nicholas132000"},"content":"        Deadline obj \u003d new Deadline(taskAsArray[0], taskAsArray[1]);","lastModifiedDate":"2023-02-15"},{"lineNumber":111,"author":{"gitId":"nicholas132000"},"content":"        tasks.add(obj);","lastModifiedDate":"2023-02-15"},{"lineNumber":112,"author":{"gitId":"nicholas132000"},"content":"        System.out.println(obj); //.toString is automatically called;","lastModifiedDate":"2023-02-15"},{"lineNumber":113,"author":{"gitId":"nicholas132000"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-02-15"},{"lineNumber":114,"author":{"gitId":"nicholas132000"},"content":"        FileHandling.saveContents();","lastModifiedDate":"2023-02-15"},{"lineNumber":115,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":116,"author":{"gitId":"nicholas132000"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":117,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":118,"author":{"gitId":"nicholas132000"},"content":"    private static void todo_Input(ArrayList\u003cTask\u003e tasks, String task) throws DukeException, IOException {","lastModifiedDate":"2023-02-15"},{"lineNumber":119,"author":{"gitId":"nicholas132000"},"content":"        if (task \u003d\u003d \" \") {","lastModifiedDate":"2023-02-08"},{"lineNumber":120,"author":{"gitId":"nicholas132000"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-08"},{"lineNumber":121,"author":{"gitId":"nicholas132000"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":122,"author":{"gitId":"nicholas132000"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-29"},{"lineNumber":123,"author":{"gitId":"nicholas132000"},"content":"        Todo obj \u003d new Todo(task);","lastModifiedDate":"2023-02-15"},{"lineNumber":124,"author":{"gitId":"nicholas132000"},"content":"        tasks.add(obj);","lastModifiedDate":"2023-02-15"},{"lineNumber":125,"author":{"gitId":"nicholas132000"},"content":"        System.out.println(obj); //.toString is automatically called;","lastModifiedDate":"2023-02-15"},{"lineNumber":126,"author":{"gitId":"nicholas132000"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-02-15"},{"lineNumber":127,"author":{"gitId":"nicholas132000"},"content":"        FileHandling.saveContents();","lastModifiedDate":"2023-02-15"},{"lineNumber":128,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":129,"author":{"gitId":"nicholas132000"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":130,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":131,"author":{"gitId":"nicholas132000"},"content":"    private static void mark_Input(ArrayList\u003cTask\u003e tasks, String task) throws DukeException, IOException {","lastModifiedDate":"2023-02-15"},{"lineNumber":132,"author":{"gitId":"nicholas132000"},"content":"        if (task \u003d\u003d \" \") {","lastModifiedDate":"2023-02-08"},{"lineNumber":133,"author":{"gitId":"nicholas132000"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-08"},{"lineNumber":134,"author":{"gitId":"nicholas132000"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":135,"author":{"gitId":"nicholas132000"},"content":"        int taskNoInt \u003d Integer.parseInt(task);","lastModifiedDate":"2023-01-29"},{"lineNumber":136,"author":{"gitId":"nicholas132000"},"content":"        tasks.get(taskNoInt - 1).markAsDone();","lastModifiedDate":"2023-02-11"},{"lineNumber":137,"author":{"gitId":"nicholas132000"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-01-29"},{"lineNumber":138,"author":{"gitId":"nicholas132000"},"content":"        System.out.println(tasks.get(taskNoInt - 1).toString());","lastModifiedDate":"2023-02-11"},{"lineNumber":139,"author":{"gitId":"nicholas132000"},"content":"        FileHandling.saveContents();","lastModifiedDate":"2023-02-15"},{"lineNumber":140,"author":{"gitId":"nicholas132000"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":141,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":142,"author":{"gitId":"nicholas132000"},"content":"    private static void unmark_Input(ArrayList\u003cTask\u003e tasks, String task) throws DukeException, IOException{","lastModifiedDate":"2023-02-15"},{"lineNumber":143,"author":{"gitId":"nicholas132000"},"content":"        if (task \u003d\u003d \" \") {","lastModifiedDate":"2023-02-08"},{"lineNumber":144,"author":{"gitId":"nicholas132000"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-08"},{"lineNumber":145,"author":{"gitId":"nicholas132000"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":146,"author":{"gitId":"nicholas132000"},"content":"        int taskNoInt \u003d Integer.parseInt(task);","lastModifiedDate":"2023-01-29"},{"lineNumber":147,"author":{"gitId":"nicholas132000"},"content":"        tasks.get(taskNoInt - 1).markAsUndone();","lastModifiedDate":"2023-02-11"},{"lineNumber":148,"author":{"gitId":"nicholas132000"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-01-29"},{"lineNumber":149,"author":{"gitId":"nicholas132000"},"content":"        System.out.println(tasks.get(taskNoInt - 1).toString());","lastModifiedDate":"2023-02-11"},{"lineNumber":150,"author":{"gitId":"nicholas132000"},"content":"        FileHandling.saveContents();","lastModifiedDate":"2023-02-15"},{"lineNumber":151,"author":{"gitId":"nicholas132000"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":152,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":153,"author":{"gitId":"nicholas132000"},"content":"    private static void delete(ArrayList\u003cTask\u003e tasks, String task) throws DukeException, IOException {","lastModifiedDate":"2023-02-15"},{"lineNumber":154,"author":{"gitId":"nicholas132000"},"content":"        if (task \u003d\u003d \" \") {","lastModifiedDate":"2023-02-11"},{"lineNumber":155,"author":{"gitId":"nicholas132000"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-11"},{"lineNumber":156,"author":{"gitId":"nicholas132000"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":157,"author":{"gitId":"nicholas132000"},"content":"        int taskNoInt \u003d Integer.parseInt(task);","lastModifiedDate":"2023-02-11"},{"lineNumber":158,"author":{"gitId":"nicholas132000"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task: \");","lastModifiedDate":"2023-02-11"},{"lineNumber":159,"author":{"gitId":"nicholas132000"},"content":"        System.out.println(tasks.get(taskNoInt - 1).toString());","lastModifiedDate":"2023-02-11"},{"lineNumber":160,"author":{"gitId":"nicholas132000"},"content":"        tasks.remove(taskNoInt - 1);","lastModifiedDate":"2023-02-11"},{"lineNumber":161,"author":{"gitId":"nicholas132000"},"content":"        System.out.println(\"Now you have \" + tasks.size() +\" tasks in the list.\");","lastModifiedDate":"2023-02-11"},{"lineNumber":162,"author":{"gitId":"nicholas132000"},"content":"        FileHandling.saveContents();","lastModifiedDate":"2023-02-15"},{"lineNumber":163,"author":{"gitId":"nicholas132000"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":164,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":165,"author":{"gitId":"nicholas132000"},"content":"    private static void list_Input(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-15"},{"lineNumber":166,"author":{"gitId":"nicholas132000"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-01-29"},{"lineNumber":167,"author":{"gitId":"nicholas132000"},"content":"        int index \u003d 1;","lastModifiedDate":"2023-01-29"},{"lineNumber":168,"author":{"gitId":"nicholas132000"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-02-11"},{"lineNumber":169,"author":{"gitId":"nicholas132000"},"content":"            System.out.println(index + \".\" + task.toString());","lastModifiedDate":"2023-02-11"},{"lineNumber":170,"author":{"gitId":"nicholas132000"},"content":"            ++index;","lastModifiedDate":"2023-01-29"},{"lineNumber":171,"author":{"gitId":"nicholas132000"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":172,"author":{"gitId":"nicholas132000"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":173,"author":{"gitId":"nicholas132000"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"nicholas132000":173}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholas132000"},"content":"package duke;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"nicholas132000"},"content":"public class Event extends Task{","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"nicholas132000"},"content":"    protected String start;","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"nicholas132000"},"content":"    protected String end;","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"nicholas132000"},"content":"    public Event(String description, String start, String end) {","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"nicholas132000"},"content":"        super(description);","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"nicholas132000"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"nicholas132000"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"nicholas132000"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"nicholas132000"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"nicholas132000"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"nicholas132000"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + start + \" to: \" + end + \")\";","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"nicholas132000"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"nicholas132000"},"content":"    @Override","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"nicholas132000"},"content":"    public String getSymbol() {","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"nicholas132000"},"content":"        return \"E\";","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"nicholas132000"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"nicholas132000"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"nicholas132000":21}},{"path":"src/main/java/duke/FileHandling.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholas132000"},"content":"package duke;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"nicholas132000"},"content":"import java.io.File;  // Import the File class","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"nicholas132000"},"content":"import java.io.IOException;  // Import the IOException class to handle errors","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"nicholas132000"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"nicholas132000"},"content":"import java.io.FileNotFoundException;  // Import this class to handle errors","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"nicholas132000"},"content":"import java.util.Scanner; // Import the Scanner class to read text files","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"nicholas132000"},"content":"public class FileHandling {","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"nicholas132000"},"content":"    public static void saveContents() {","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"nicholas132000"},"content":"        try {","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"nicholas132000"},"content":"            File fileObj \u003d new File(\"tasklist.txt\");","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"nicholas132000"},"content":"            if (fileObj.createNewFile()) {","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"nicholas132000"},"content":"                System.out.println(\"File created: \" + fileObj.getName());","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"nicholas132000"},"content":"            } else {","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"nicholas132000"},"content":"                System.out.println(\"File already exists.\");","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"nicholas132000"},"content":"            }","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"nicholas132000"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"nicholas132000"},"content":"            System.out.println(\"An error occurred.\");","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"nicholas132000"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"nicholas132000"},"content":"        try {","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"nicholas132000"},"content":"            FileWriter myWriter \u003d new FileWriter(\"tasklist.txt\");","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"nicholas132000"},"content":"            for (Task task : Echo.tasks) {","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"nicholas132000"},"content":"                if (task.getSymbol() \u003d\u003d \"T\") {","lastModifiedDate":"2023-02-15"},{"lineNumber":25,"author":{"gitId":"nicholas132000"},"content":"                    myWriter.write(task.getSymbol() + \"|\" + task.getStatusIcon() + \"|\" + task.description + \u0027\\n\u0027);","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"nicholas132000"},"content":"                } else if (task.getSymbol() \u003d\u003d \"D\") {","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"nicholas132000"},"content":"                    Deadline obj \u003d (Deadline) task;","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"nicholas132000"},"content":"                    myWriter.write(task.getSymbol() + \"|\" + task.getStatusIcon() + \"|\" + task.description + \"|\" + obj.by + \u0027\\n\u0027);","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"nicholas132000"},"content":"                } else if (task.getSymbol() \u003d\u003d \"E\") {","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"nicholas132000"},"content":"                    Event obj \u003d (Event) task;","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"nicholas132000"},"content":"                    myWriter.write(task.getSymbol() + \"|\" + task.getStatusIcon() + \"|\" + task.description + \"|\" + obj.start + \"|\" + obj.end + \u0027\\n\u0027);","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"nicholas132000"},"content":"                }","lastModifiedDate":"2023-02-15"},{"lineNumber":33,"author":{"gitId":"nicholas132000"},"content":"            }","lastModifiedDate":"2023-02-15"},{"lineNumber":34,"author":{"gitId":"nicholas132000"},"content":"            myWriter.close();","lastModifiedDate":"2023-02-15"},{"lineNumber":35,"author":{"gitId":"nicholas132000"},"content":"            System.out.println(\"Successfully wrote to the file.\");","lastModifiedDate":"2023-02-15"},{"lineNumber":36,"author":{"gitId":"nicholas132000"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":37,"author":{"gitId":"nicholas132000"},"content":"            System.out.println(\"An error occurred.\");","lastModifiedDate":"2023-02-15"},{"lineNumber":38,"author":{"gitId":"nicholas132000"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":39,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":40,"author":{"gitId":"nicholas132000"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":41,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":42,"author":{"gitId":"nicholas132000"},"content":"    public static void loadContents() {","lastModifiedDate":"2023-02-15"},{"lineNumber":43,"author":{"gitId":"nicholas132000"},"content":"        try {","lastModifiedDate":"2023-02-15"},{"lineNumber":44,"author":{"gitId":"nicholas132000"},"content":"            System.out.println(\"Loading contents...\");","lastModifiedDate":"2023-02-15"},{"lineNumber":45,"author":{"gitId":"nicholas132000"},"content":"            File myObj \u003d new File(\"tasklist.txt\");","lastModifiedDate":"2023-02-15"},{"lineNumber":46,"author":{"gitId":"nicholas132000"},"content":"            Scanner myReader \u003d new Scanner(myObj);","lastModifiedDate":"2023-02-15"},{"lineNumber":47,"author":{"gitId":"nicholas132000"},"content":"            while (myReader.hasNextLine()) {","lastModifiedDate":"2023-02-15"},{"lineNumber":48,"author":{"gitId":"nicholas132000"},"content":"                String data \u003d myReader.nextLine();","lastModifiedDate":"2023-02-15"},{"lineNumber":49,"author":{"gitId":"nicholas132000"},"content":"                String array[] \u003d data.split(\"|\");","lastModifiedDate":"2023-02-15"},{"lineNumber":50,"author":{"gitId":"nicholas132000"},"content":"                if (array[0].equals(\"T\")) {","lastModifiedDate":"2023-02-15"},{"lineNumber":51,"author":{"gitId":"nicholas132000"},"content":"                    Todo obj \u003d new Todo(array[2]);","lastModifiedDate":"2023-02-15"},{"lineNumber":52,"author":{"gitId":"nicholas132000"},"content":"                    if (array[1].equals(\"X\")) {","lastModifiedDate":"2023-02-15"},{"lineNumber":53,"author":{"gitId":"nicholas132000"},"content":"                        obj.markAsDone();","lastModifiedDate":"2023-02-15"},{"lineNumber":54,"author":{"gitId":"nicholas132000"},"content":"                    } else {","lastModifiedDate":"2023-02-15"},{"lineNumber":55,"author":{"gitId":"nicholas132000"},"content":"                        obj.markAsUndone();","lastModifiedDate":"2023-02-15"},{"lineNumber":56,"author":{"gitId":"nicholas132000"},"content":"                    }","lastModifiedDate":"2023-02-15"},{"lineNumber":57,"author":{"gitId":"nicholas132000"},"content":"                    Echo.tasks.add(obj);","lastModifiedDate":"2023-02-15"},{"lineNumber":58,"author":{"gitId":"nicholas132000"},"content":"                } else if (array[1].equals(\"X\")) {","lastModifiedDate":"2023-02-15"},{"lineNumber":59,"author":{"gitId":"nicholas132000"},"content":"                    Deadline obj \u003d new Deadline(array[2], array[3]);","lastModifiedDate":"2023-02-15"},{"lineNumber":60,"author":{"gitId":"nicholas132000"},"content":"                    if (array[1] \u003d\u003d \"X\") {","lastModifiedDate":"2023-02-15"},{"lineNumber":61,"author":{"gitId":"nicholas132000"},"content":"                        obj.markAsDone();","lastModifiedDate":"2023-02-15"},{"lineNumber":62,"author":{"gitId":"nicholas132000"},"content":"                    } else {","lastModifiedDate":"2023-02-15"},{"lineNumber":63,"author":{"gitId":"nicholas132000"},"content":"                        obj.markAsUndone();","lastModifiedDate":"2023-02-15"},{"lineNumber":64,"author":{"gitId":"nicholas132000"},"content":"                    }","lastModifiedDate":"2023-02-15"},{"lineNumber":65,"author":{"gitId":"nicholas132000"},"content":"                    Echo.tasks.add(obj);","lastModifiedDate":"2023-02-15"},{"lineNumber":66,"author":{"gitId":"nicholas132000"},"content":"                } else if (array[1].equals(\"X\")) {","lastModifiedDate":"2023-02-15"},{"lineNumber":67,"author":{"gitId":"nicholas132000"},"content":"                    Event obj \u003d new Event(array[2], array[3], array[4]);","lastModifiedDate":"2023-02-15"},{"lineNumber":68,"author":{"gitId":"nicholas132000"},"content":"                    if (array[1] \u003d\u003d \"X\") {","lastModifiedDate":"2023-02-15"},{"lineNumber":69,"author":{"gitId":"nicholas132000"},"content":"                        obj.markAsDone();","lastModifiedDate":"2023-02-15"},{"lineNumber":70,"author":{"gitId":"nicholas132000"},"content":"                    } else {","lastModifiedDate":"2023-02-15"},{"lineNumber":71,"author":{"gitId":"nicholas132000"},"content":"                        obj.markAsUndone();","lastModifiedDate":"2023-02-15"},{"lineNumber":72,"author":{"gitId":"nicholas132000"},"content":"                    }","lastModifiedDate":"2023-02-15"},{"lineNumber":73,"author":{"gitId":"nicholas132000"},"content":"                    Echo.tasks.add(obj);","lastModifiedDate":"2023-02-15"},{"lineNumber":74,"author":{"gitId":"nicholas132000"},"content":"                }","lastModifiedDate":"2023-02-15"},{"lineNumber":75,"author":{"gitId":"nicholas132000"},"content":"            }","lastModifiedDate":"2023-02-15"},{"lineNumber":76,"author":{"gitId":"nicholas132000"},"content":"            myReader.close();","lastModifiedDate":"2023-02-15"},{"lineNumber":77,"author":{"gitId":"nicholas132000"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":78,"author":{"gitId":"nicholas132000"},"content":"            System.out.println(\"No contents found...\");","lastModifiedDate":"2023-02-15"},{"lineNumber":79,"author":{"gitId":"nicholas132000"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":80,"author":{"gitId":"nicholas132000"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":81,"author":{"gitId":"nicholas132000"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"nicholas132000":81}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholas132000"},"content":"package duke;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"nicholas132000"},"content":"public class Task {","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"nicholas132000"},"content":"    protected String description;","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"nicholas132000"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"nicholas132000"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"nicholas132000"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"nicholas132000"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"nicholas132000"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"nicholas132000"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"nicholas132000"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"nicholas132000"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"nicholas132000"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"nicholas132000"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"nicholas132000"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"nicholas132000"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"nicholas132000"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"nicholas132000"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"nicholas132000"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"nicholas132000"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"nicholas132000"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + description;","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"nicholas132000"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"nicholas132000"},"content":"    public String getSymbol() {","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"nicholas132000"},"content":"        return \"T\";","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"nicholas132000"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"nicholas132000"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"nicholas132000":32}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholas132000"},"content":"package duke;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"nicholas132000"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"nicholas132000"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"nicholas132000"},"content":"        super(description);","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"nicholas132000"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"nicholas132000"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"nicholas132000"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"nicholas132000"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"nicholas132000"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"nicholas132000"},"content":"    @Override","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"nicholas132000"},"content":"    public String getSymbol() {","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"nicholas132000"},"content":"        return \"T\";","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"nicholas132000"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"nicholas132000"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"nicholas132000":18}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nicholas132000"},"content":"todo borrow book","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"nicholas132000"},"content":"list","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"nicholas132000"},"content":"deadline return book / Sunday","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"nicholas132000"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"nicholas132000"},"content":"bye","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"nicholas132000":9}}]
