[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"TJ-Hoo"},"content":"# Duke Task Manager","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"TJ-Hoo"},"content":"Duke is a task manager that helps users keep track of their daily tasks. Users can add, edit, delete, and search for tasks using the command-line interface. Duke uses a simple text file to store the tasks.","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"TJ-Hoo"},"content":"This guide will help you get started.","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"TJ-Hoo"},"content":"## Prerequisites","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"TJ-Hoo"},"content":"Before using Duke, please ensure that you have the following:","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"TJ-Hoo"},"content":"- Java 11 or later installed on your computer","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"TJ-Hoo"},"content":"- The Duke.jar file downloaded on your computer","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"TJ-Hoo"},"content":"## Getting Started","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"TJ-Hoo"},"content":"1. Download the Duke.jar file to your computer.","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"TJ-Hoo"},"content":"2. Open a terminal or command prompt and navigate to the directory where the Duke.jar file is located.","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"TJ-Hoo"},"content":"3. Run the following command to start Duke:","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"TJ-Hoo"},"content":"java -jar Duke.jar","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"TJ-Hoo"},"content":"4. If Duke is running properly, you should see a welcome message.","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"TJ-Hoo"},"content":"## Features","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"TJ-Hoo"},"content":"Duke currently supports the following features:","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"TJ-Hoo"},"content":"### Adding Tasks","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"TJ-Hoo"},"content":"To add a task, type one of the following commands followed by the task description:","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"TJ-Hoo"},"content":"- todo: adds a new todo task","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"TJ-Hoo"},"content":"- event: adds a new event task","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"TJ-Hoo"},"content":"- deadline: adds a new deadline task","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"TJ-Hoo"},"content":"For example:","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"TJ-Hoo"},"content":"todo borrow book","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"TJ-Hoo"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"TJ-Hoo"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"TJ-Hoo"},"content":"### Listing Tasks","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"TJ-Hoo"},"content":"To list all the tasks currently in Duke, type the command list.","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"TJ-Hoo"},"content":"### Marking Tasks","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"TJ-Hoo"},"content":"To mark a task as done, type the command mark followed by the task number. ","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"TJ-Hoo"},"content":"For example:","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"TJ-Hoo"},"content":"mark 2","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"TJ-Hoo"},"content":"### Unmarking Tasks","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"TJ-Hoo"},"content":"To unmark a task as done, type the command unmark followed by the task number. ","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"TJ-Hoo"},"content":"For example:","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"TJ-Hoo"},"content":"unmark 2","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"TJ-Hoo"},"content":"### Deleting Tasks","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"TJ-Hoo"},"content":"To delete a task, type the command delete followed by the task number. ","lastModifiedDate":"2023-02-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"TJ-Hoo"},"content":"For example:","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"TJ-Hoo"},"content":"delete 2","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"TJ-Hoo"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":53,"author":{"gitId":"TJ-Hoo"},"content":"### Finding Tasks","lastModifiedDate":"2023-02-26"},{"lineNumber":54,"author":{"gitId":"TJ-Hoo"},"content":"To find tasks containing a specific keyword, type the command find followed by the keyword. ","lastModifiedDate":"2023-02-26"},{"lineNumber":55,"author":{"gitId":"TJ-Hoo"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":56,"author":{"gitId":"TJ-Hoo"},"content":"For example:","lastModifiedDate":"2023-02-26"},{"lineNumber":57,"author":{"gitId":"TJ-Hoo"},"content":"find groceries","lastModifiedDate":"2023-02-26"},{"lineNumber":58,"author":{"gitId":"TJ-Hoo"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":59,"author":{"gitId":"TJ-Hoo"},"content":"### Exiting Duke","lastModifiedDate":"2023-02-26"},{"lineNumber":60,"author":{"gitId":"TJ-Hoo"},"content":"To exit Duke, type the command bye.","lastModifiedDate":"2023-02-26"},{"lineNumber":61,"author":{"gitId":"TJ-Hoo"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":62,"author":{"gitId":"TJ-Hoo"},"content":"## Notes","lastModifiedDate":"2023-02-26"},{"lineNumber":63,"author":{"gitId":"TJ-Hoo"},"content":"- All tasks added to Duke are automatically saved to a file named \"Duke.txt\" in the same directory as the Duke.jar file.","lastModifiedDate":"2023-02-26"},{"lineNumber":64,"author":{"gitId":"TJ-Hoo"},"content":"- If the Duke.txt file already exists, Duke will load the tasks from the file when it starts.","lastModifiedDate":"2023-02-26"},{"lineNumber":65,"author":{"gitId":"TJ-Hoo"},"content":"- If an error occurs while Duke is running, an error message will be displayed.","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"TJ-Hoo":52,"-":13}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TJ-Hoo"},"content":"/**","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"TJ-Hoo"},"content":" Represents a task with a deadline.","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"TJ-Hoo"},"content":" Inherits from the Task class.","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"TJ-Hoo"},"content":" */","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"TJ-Hoo"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"TJ-Hoo"},"content":"\tprotected String due;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"TJ-Hoo"},"content":"\t/**","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"TJ-Hoo"},"content":"\t Constructs a Deadline object with the specified information and deadline.","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"TJ-Hoo"},"content":"\t @param info the description of the task.","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"TJ-Hoo"},"content":"\t @param due the deadline of the task.","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"TJ-Hoo"},"content":"\t */","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"TJ-Hoo"},"content":"\tpublic Deadline(String info, String due) {","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"TJ-Hoo"},"content":"\t\tsuper(info);","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"TJ-Hoo"},"content":"\t\tthis.due \u003d due;","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"TJ-Hoo"},"content":"\t}","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"TJ-Hoo"},"content":"\t@Override","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"TJ-Hoo"},"content":"\tpublic String toString(){","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"TJ-Hoo"},"content":"\t\treturn \"[D]\" + super.toString() + \"(by: \" + due + \")\";","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"TJ-Hoo"},"content":"\t}","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"TJ-Hoo"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"TJ-Hoo":20}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TJ-Hoo"},"content":"/**","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"TJ-Hoo"},"content":" * The Duke class represents a chatbot that can respond to user input.","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"TJ-Hoo"},"content":" */","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"TJ-Hoo"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"TJ-Hoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"TJ-Hoo"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"TJ-Hoo"},"content":"        new Duke(\"DUKE/Duke.txt\");","lastModifiedDate":"2023-02-25"},{"lineNumber":10,"author":{"gitId":"TJ-Hoo"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":11,"author":{"gitId":"TJ-Hoo"},"content":"    private Memory memory;","lastModifiedDate":"2023-02-25"},{"lineNumber":12,"author":{"gitId":"TJ-Hoo"},"content":"    private IO io;","lastModifiedDate":"2023-02-25"},{"lineNumber":13,"author":{"gitId":"TJ-Hoo"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-02-25"},{"lineNumber":14,"author":{"gitId":"TJ-Hoo"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"TJ-Hoo"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"TJ-Hoo"},"content":"     * Constructor for Duke object.","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"TJ-Hoo"},"content":"     * Initializes a new Duke object and loads tasks from a file.","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"TJ-Hoo"},"content":"     * Prints a welcome message and loops for user input until the user types \"bye\".","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"TJ-Hoo"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"TJ-Hoo"},"content":"     * @param filepath Path to the file to load tasks from.","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"TJ-Hoo"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"TJ-Hoo"},"content":"    public Duke(String filepath) {","lastModifiedDate":"2023-02-25"},{"lineNumber":23,"author":{"gitId":"TJ-Hoo"},"content":"        memory \u003d new Memory(filepath);","lastModifiedDate":"2023-02-25"},{"lineNumber":24,"author":{"gitId":"TJ-Hoo"},"content":"        io \u003d new IO();","lastModifiedDate":"2023-02-25"},{"lineNumber":25,"author":{"gitId":"TJ-Hoo"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2023-02-25"},{"lineNumber":26,"author":{"gitId":"TJ-Hoo"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"TJ-Hoo"},"content":"        io.printWelcome();","lastModifiedDate":"2023-02-25"},{"lineNumber":28,"author":{"gitId":"TJ-Hoo"},"content":"        try {","lastModifiedDate":"2023-02-22"},{"lineNumber":29,"author":{"gitId":"TJ-Hoo"},"content":"            storeTasksInList(memory.loadFile());","lastModifiedDate":"2023-02-25"},{"lineNumber":30,"author":{"gitId":"TJ-Hoo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-25"},{"lineNumber":31,"author":{"gitId":"TJ-Hoo"},"content":"            io.showLoadingError();","lastModifiedDate":"2023-02-25"},{"lineNumber":32,"author":{"gitId":"TJ-Hoo"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":33,"author":{"gitId":"TJ-Hoo"},"content":"        while (true) {","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"TJ-Hoo"},"content":"            String userInput \u003d in.nextLine();","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"TJ-Hoo"},"content":"            processUserInput(userInput, true);","lastModifiedDate":"2023-02-25"},{"lineNumber":36,"author":{"gitId":"TJ-Hoo"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":37,"author":{"gitId":"TJ-Hoo"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"TJ-Hoo"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"TJ-Hoo"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"TJ-Hoo"},"content":"     * Loads a list of input commands to the TaskList.","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"TJ-Hoo"},"content":"     * Each input command is processed by the processUserInput method.","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"TJ-Hoo"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"TJ-Hoo"},"content":"     * @param inputCommands A list of input commands to load to the TaskList.","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"TJ-Hoo"},"content":"     * @throws IOException If there is an error reading the file.","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"TJ-Hoo"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"TJ-Hoo"},"content":"    public void storeTasksInList(ArrayList\u003cString\u003e inputCommands) throws IOException {","lastModifiedDate":"2023-02-25"},{"lineNumber":47,"author":{"gitId":"TJ-Hoo"},"content":"        for (String s : inputCommands) {","lastModifiedDate":"2023-02-22"},{"lineNumber":48,"author":{"gitId":"TJ-Hoo"},"content":"            processUserInput(s, false);","lastModifiedDate":"2023-02-25"},{"lineNumber":49,"author":{"gitId":"TJ-Hoo"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":50,"author":{"gitId":"TJ-Hoo"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":51,"author":{"gitId":"TJ-Hoo"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"TJ-Hoo"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":53,"author":{"gitId":"TJ-Hoo"},"content":"     * Splits user input into an action and a description array.","lastModifiedDate":"2023-02-26"},{"lineNumber":54,"author":{"gitId":"TJ-Hoo"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":55,"author":{"gitId":"TJ-Hoo"},"content":"     * @param userInput The user\u0027s input.","lastModifiedDate":"2023-02-26"},{"lineNumber":56,"author":{"gitId":"TJ-Hoo"},"content":"     * @return An array containing the action and description of the input.","lastModifiedDate":"2023-02-26"},{"lineNumber":57,"author":{"gitId":"TJ-Hoo"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":58,"author":{"gitId":"TJ-Hoo"},"content":"    public String[] splitActionAndDescription(String userInput) {","lastModifiedDate":"2023-02-25"},{"lineNumber":59,"author":{"gitId":"TJ-Hoo"},"content":"        String[] actionAndDescription \u003d userInput.split(\" \", 2);","lastModifiedDate":"2023-02-16"},{"lineNumber":60,"author":{"gitId":"TJ-Hoo"},"content":"        return actionAndDescription.length \u003d\u003d 2 ? actionAndDescription : new String[]{actionAndDescription[0], \"\"};","lastModifiedDate":"2023-02-16"},{"lineNumber":61,"author":{"gitId":"TJ-Hoo"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":62,"author":{"gitId":"TJ-Hoo"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":63,"author":{"gitId":"TJ-Hoo"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":64,"author":{"gitId":"TJ-Hoo"},"content":"     * Processes user input by executing the appropriate action.","lastModifiedDate":"2023-02-26"},{"lineNumber":65,"author":{"gitId":"TJ-Hoo"},"content":"     * Prints an error message if an invalid command is entered.","lastModifiedDate":"2023-02-26"},{"lineNumber":66,"author":{"gitId":"TJ-Hoo"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":67,"author":{"gitId":"TJ-Hoo"},"content":"     * @param userInput     The user\u0027s input.","lastModifiedDate":"2023-02-26"},{"lineNumber":68,"author":{"gitId":"TJ-Hoo"},"content":"     * @param fileDoesExist Whether the file exists or not.","lastModifiedDate":"2023-02-26"},{"lineNumber":69,"author":{"gitId":"TJ-Hoo"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":70,"author":{"gitId":"TJ-Hoo"},"content":"    private void processUserInput(String userInput, boolean fileDoesExist) {","lastModifiedDate":"2023-02-25"},{"lineNumber":71,"author":{"gitId":"TJ-Hoo"},"content":"        String[] actionAndDescription \u003d splitActionAndDescription(userInput);","lastModifiedDate":"2023-02-16"},{"lineNumber":72,"author":{"gitId":"TJ-Hoo"},"content":"        String action \u003d actionAndDescription[0];","lastModifiedDate":"2023-02-16"},{"lineNumber":73,"author":{"gitId":"TJ-Hoo"},"content":"        String description \u003d actionAndDescription[1];","lastModifiedDate":"2023-02-16"},{"lineNumber":74,"author":{"gitId":"TJ-Hoo"},"content":"        try {","lastModifiedDate":"2023-02-22"},{"lineNumber":75,"author":{"gitId":"TJ-Hoo"},"content":"            switch (action) {","lastModifiedDate":"2023-02-16"},{"lineNumber":76,"author":{"gitId":"TJ-Hoo"},"content":"                case \"bye\":","lastModifiedDate":"2023-02-16"},{"lineNumber":77,"author":{"gitId":"TJ-Hoo"},"content":"                    io.printBye();","lastModifiedDate":"2023-02-25"},{"lineNumber":78,"author":{"gitId":"TJ-Hoo"},"content":"                    break;","lastModifiedDate":"2023-02-01"},{"lineNumber":79,"author":{"gitId":"TJ-Hoo"},"content":"                case \"list\":","lastModifiedDate":"2023-02-16"},{"lineNumber":80,"author":{"gitId":"TJ-Hoo"},"content":"                    executeListAction(fileDoesExist);","lastModifiedDate":"2023-02-25"},{"lineNumber":81,"author":{"gitId":"TJ-Hoo"},"content":"                    break;","lastModifiedDate":"2023-02-16"},{"lineNumber":82,"author":{"gitId":"TJ-Hoo"},"content":"                case \"mark\":","lastModifiedDate":"2023-02-16"},{"lineNumber":83,"author":{"gitId":"TJ-Hoo"},"content":"                    executeMarkAction(description, fileDoesExist);","lastModifiedDate":"2023-02-25"},{"lineNumber":84,"author":{"gitId":"TJ-Hoo"},"content":"                        if (fileDoesExist) {","lastModifiedDate":"2023-02-22"},{"lineNumber":85,"author":{"gitId":"TJ-Hoo"},"content":"                            memory.writeToFile();","lastModifiedDate":"2023-02-25"},{"lineNumber":86,"author":{"gitId":"TJ-Hoo"},"content":"                        }","lastModifiedDate":"2023-02-22"},{"lineNumber":87,"author":{"gitId":"TJ-Hoo"},"content":"                    break;","lastModifiedDate":"2023-02-16"},{"lineNumber":88,"author":{"gitId":"TJ-Hoo"},"content":"            case \"unmark\":","lastModifiedDate":"2023-02-16"},{"lineNumber":89,"author":{"gitId":"TJ-Hoo"},"content":"                    executeUnmarkAction(description, fileDoesExist);","lastModifiedDate":"2023-02-25"},{"lineNumber":90,"author":{"gitId":"TJ-Hoo"},"content":"                        if (fileDoesExist) {","lastModifiedDate":"2023-02-22"},{"lineNumber":91,"author":{"gitId":"TJ-Hoo"},"content":"                            memory.writeToFile();","lastModifiedDate":"2023-02-25"},{"lineNumber":92,"author":{"gitId":"TJ-Hoo"},"content":"                    }","lastModifiedDate":"2023-02-22"},{"lineNumber":93,"author":{"gitId":"TJ-Hoo"},"content":"                    break;","lastModifiedDate":"2023-02-16"},{"lineNumber":94,"author":{"gitId":"TJ-Hoo"},"content":"            case \"todo\":","lastModifiedDate":"2023-02-16"},{"lineNumber":95,"author":{"gitId":"TJ-Hoo"},"content":"                    executeTodoAction(description, fileDoesExist);","lastModifiedDate":"2023-02-25"},{"lineNumber":96,"author":{"gitId":"TJ-Hoo"},"content":"                        if (fileDoesExist) {","lastModifiedDate":"2023-02-22"},{"lineNumber":97,"author":{"gitId":"TJ-Hoo"},"content":"                            memory.appendToFile(userInput);","lastModifiedDate":"2023-02-25"},{"lineNumber":98,"author":{"gitId":"TJ-Hoo"},"content":"                        }","lastModifiedDate":"2023-02-22"},{"lineNumber":99,"author":{"gitId":"TJ-Hoo"},"content":"                    break;","lastModifiedDate":"2023-02-16"},{"lineNumber":100,"author":{"gitId":"TJ-Hoo"},"content":"            case \"event\":","lastModifiedDate":"2023-02-16"},{"lineNumber":101,"author":{"gitId":"TJ-Hoo"},"content":"                    executeEventAction(description, fileDoesExist);","lastModifiedDate":"2023-02-25"},{"lineNumber":102,"author":{"gitId":"TJ-Hoo"},"content":"                        if (fileDoesExist) {","lastModifiedDate":"2023-02-22"},{"lineNumber":103,"author":{"gitId":"TJ-Hoo"},"content":"                            memory.appendToFile(userInput);","lastModifiedDate":"2023-02-25"},{"lineNumber":104,"author":{"gitId":"TJ-Hoo"},"content":"                        }","lastModifiedDate":"2023-02-22"},{"lineNumber":105,"author":{"gitId":"TJ-Hoo"},"content":"                    break;","lastModifiedDate":"2023-02-16"},{"lineNumber":106,"author":{"gitId":"TJ-Hoo"},"content":"            case \"deadline\":","lastModifiedDate":"2023-02-16"},{"lineNumber":107,"author":{"gitId":"TJ-Hoo"},"content":"                    executeDeadlineAction(description, fileDoesExist);","lastModifiedDate":"2023-02-25"},{"lineNumber":108,"author":{"gitId":"TJ-Hoo"},"content":"                        if (fileDoesExist) {","lastModifiedDate":"2023-02-22"},{"lineNumber":109,"author":{"gitId":"TJ-Hoo"},"content":"                            memory.appendToFile(userInput);","lastModifiedDate":"2023-02-25"},{"lineNumber":110,"author":{"gitId":"TJ-Hoo"},"content":"                        }","lastModifiedDate":"2023-02-22"},{"lineNumber":111,"author":{"gitId":"TJ-Hoo"},"content":"                    break;","lastModifiedDate":"2023-02-16"},{"lineNumber":112,"author":{"gitId":"TJ-Hoo"},"content":"            case \"delete\":","lastModifiedDate":"2023-02-22"},{"lineNumber":113,"author":{"gitId":"TJ-Hoo"},"content":"                    executeDeleteAction(description);","lastModifiedDate":"2023-02-25"},{"lineNumber":114,"author":{"gitId":"TJ-Hoo"},"content":"                    break;","lastModifiedDate":"2023-02-22"},{"lineNumber":115,"author":{"gitId":"TJ-Hoo"},"content":"            case \"find\":","lastModifiedDate":"2023-02-25"},{"lineNumber":116,"author":{"gitId":"TJ-Hoo"},"content":"                    executeFindAction(description);","lastModifiedDate":"2023-02-25"},{"lineNumber":117,"author":{"gitId":"TJ-Hoo"},"content":"                    break;","lastModifiedDate":"2023-02-25"},{"lineNumber":118,"author":{"gitId":"TJ-Hoo"},"content":"            default:","lastModifiedDate":"2023-02-16"},{"lineNumber":119,"author":{"gitId":"TJ-Hoo"},"content":"                    io.showInvalidCommand();","lastModifiedDate":"2023-02-25"},{"lineNumber":120,"author":{"gitId":"TJ-Hoo"},"content":"            }","lastModifiedDate":"2023-02-16"},{"lineNumber":121,"author":{"gitId":"TJ-Hoo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-22"},{"lineNumber":122,"author":{"gitId":"TJ-Hoo"},"content":"            io.showCannotEditFile();","lastModifiedDate":"2023-02-25"},{"lineNumber":123,"author":{"gitId":"TJ-Hoo"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":124,"author":{"gitId":"TJ-Hoo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":125,"author":{"gitId":"TJ-Hoo"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":126,"author":{"gitId":"TJ-Hoo"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":127,"author":{"gitId":"TJ-Hoo"},"content":"     * Executes the \"list\" action by printing the list of tasks to the user.","lastModifiedDate":"2023-02-26"},{"lineNumber":128,"author":{"gitId":"TJ-Hoo"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":129,"author":{"gitId":"TJ-Hoo"},"content":"     * @param fileDoesExist A boolean indicating if the file exists or not.","lastModifiedDate":"2023-02-26"},{"lineNumber":130,"author":{"gitId":"TJ-Hoo"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":131,"author":{"gitId":"TJ-Hoo"},"content":"    private void executeListAction(boolean fileDoesExist) {","lastModifiedDate":"2023-02-25"},{"lineNumber":132,"author":{"gitId":"TJ-Hoo"},"content":"        if (fileDoesExist) {","lastModifiedDate":"2023-02-22"},{"lineNumber":133,"author":{"gitId":"TJ-Hoo"},"content":"            io.printList(tasks.getTasks());","lastModifiedDate":"2023-02-25"},{"lineNumber":134,"author":{"gitId":"TJ-Hoo"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":135,"author":{"gitId":"TJ-Hoo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":136,"author":{"gitId":"TJ-Hoo"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":137,"author":{"gitId":"TJ-Hoo"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":138,"author":{"gitId":"TJ-Hoo"},"content":"     * Executes the \"mark\" action by marking the specified task as done and printing an acknowledgement message to the user.","lastModifiedDate":"2023-02-26"},{"lineNumber":139,"author":{"gitId":"TJ-Hoo"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":140,"author":{"gitId":"TJ-Hoo"},"content":"     * @param description   The task description provided by the user.","lastModifiedDate":"2023-02-26"},{"lineNumber":141,"author":{"gitId":"TJ-Hoo"},"content":"     * @param fileDoesExist A boolean indicating if the file exists or not.","lastModifiedDate":"2023-02-26"},{"lineNumber":142,"author":{"gitId":"TJ-Hoo"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":143,"author":{"gitId":"TJ-Hoo"},"content":"    private void executeMarkAction(String description, boolean fileDoesExist) {","lastModifiedDate":"2023-02-25"},{"lineNumber":144,"author":{"gitId":"TJ-Hoo"},"content":"        int index \u003d Integer.parseInt(description) - 1;","lastModifiedDate":"2023-02-25"},{"lineNumber":145,"author":{"gitId":"TJ-Hoo"},"content":"        tasks.markAtIndex(index);","lastModifiedDate":"2023-02-25"},{"lineNumber":146,"author":{"gitId":"TJ-Hoo"},"content":"        if (fileDoesExist) {","lastModifiedDate":"2023-02-22"},{"lineNumber":147,"author":{"gitId":"TJ-Hoo"},"content":"            io.printMarked(tasks.getTasks(), index);","lastModifiedDate":"2023-02-25"},{"lineNumber":148,"author":{"gitId":"TJ-Hoo"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":149,"author":{"gitId":"TJ-Hoo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":150,"author":{"gitId":"TJ-Hoo"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":151,"author":{"gitId":"TJ-Hoo"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":152,"author":{"gitId":"TJ-Hoo"},"content":"     * Executes the \"unmark\" action by marking the specified task as undone and printing an acknowledgement message to the user.","lastModifiedDate":"2023-02-26"},{"lineNumber":153,"author":{"gitId":"TJ-Hoo"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":154,"author":{"gitId":"TJ-Hoo"},"content":"     * @param description   The task description provided by the user.","lastModifiedDate":"2023-02-26"},{"lineNumber":155,"author":{"gitId":"TJ-Hoo"},"content":"     * @param fileDoesExist A boolean indicating if the file exists or not.","lastModifiedDate":"2023-02-26"},{"lineNumber":156,"author":{"gitId":"TJ-Hoo"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":157,"author":{"gitId":"TJ-Hoo"},"content":"    private void executeUnmarkAction(String description, boolean fileDoesExist) {","lastModifiedDate":"2023-02-25"},{"lineNumber":158,"author":{"gitId":"TJ-Hoo"},"content":"        int index \u003d Integer.parseInt(description) - 1;","lastModifiedDate":"2023-02-25"},{"lineNumber":159,"author":{"gitId":"TJ-Hoo"},"content":"        tasks.unmarkAtIndex(Integer.parseInt(description) - 1);","lastModifiedDate":"2023-02-25"},{"lineNumber":160,"author":{"gitId":"TJ-Hoo"},"content":"        if (fileDoesExist) {","lastModifiedDate":"2023-02-22"},{"lineNumber":161,"author":{"gitId":"TJ-Hoo"},"content":"            io.printUnmarked(tasks.getTasks(), index);","lastModifiedDate":"2023-02-25"},{"lineNumber":162,"author":{"gitId":"TJ-Hoo"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":163,"author":{"gitId":"TJ-Hoo"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":164,"author":{"gitId":"TJ-Hoo"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":165,"author":{"gitId":"TJ-Hoo"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":166,"author":{"gitId":"TJ-Hoo"},"content":"     * Executes the \"todo\" action by adding a new Todo task to the task list and printing an acknowledgement message to the user.","lastModifiedDate":"2023-02-26"},{"lineNumber":167,"author":{"gitId":"TJ-Hoo"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":168,"author":{"gitId":"TJ-Hoo"},"content":"     * @param description   The task description provided by the user.","lastModifiedDate":"2023-02-26"},{"lineNumber":169,"author":{"gitId":"TJ-Hoo"},"content":"     * @param fileDoesExist A boolean indicating if the file exists or not.","lastModifiedDate":"2023-02-26"},{"lineNumber":170,"author":{"gitId":"TJ-Hoo"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":171,"author":{"gitId":"TJ-Hoo"},"content":"    private void executeTodoAction(String description, boolean fileDoesExist) {","lastModifiedDate":"2023-02-25"},{"lineNumber":172,"author":{"gitId":"TJ-Hoo"},"content":"        try {","lastModifiedDate":"2023-02-16"},{"lineNumber":173,"author":{"gitId":"TJ-Hoo"},"content":"            tasks.addTodoToList(description);","lastModifiedDate":"2023-02-25"},{"lineNumber":174,"author":{"gitId":"TJ-Hoo"},"content":"            if (fileDoesExist) {","lastModifiedDate":"2023-02-22"},{"lineNumber":175,"author":{"gitId":"TJ-Hoo"},"content":"                io.printAcknowledgement(tasks.getTasks());","lastModifiedDate":"2023-02-25"},{"lineNumber":176,"author":{"gitId":"TJ-Hoo"},"content":"            }","lastModifiedDate":"2023-02-16"},{"lineNumber":177,"author":{"gitId":"TJ-Hoo"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-02-16"},{"lineNumber":178,"author":{"gitId":"TJ-Hoo"},"content":"            io.showInsufficientTodo();","lastModifiedDate":"2023-02-25"},{"lineNumber":179,"author":{"gitId":"TJ-Hoo"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":180,"author":{"gitId":"TJ-Hoo"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":181,"author":{"gitId":"TJ-Hoo"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":182,"author":{"gitId":"TJ-Hoo"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":183,"author":{"gitId":"TJ-Hoo"},"content":"     * Executes an event action if the file exists.","lastModifiedDate":"2023-02-26"},{"lineNumber":184,"author":{"gitId":"TJ-Hoo"},"content":"     * Parses the description into name, fromDate and toDate.","lastModifiedDate":"2023-02-26"},{"lineNumber":185,"author":{"gitId":"TJ-Hoo"},"content":"     * Adds the parsed task to the task list and prints acknowledgement if the file exists.","lastModifiedDate":"2023-02-26"},{"lineNumber":186,"author":{"gitId":"TJ-Hoo"},"content":"     * Otherwise, shows an error message.","lastModifiedDate":"2023-02-26"},{"lineNumber":187,"author":{"gitId":"TJ-Hoo"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":188,"author":{"gitId":"TJ-Hoo"},"content":"     * @param description   The description of the event task.","lastModifiedDate":"2023-02-26"},{"lineNumber":189,"author":{"gitId":"TJ-Hoo"},"content":"     * @param fileDoesExist Indicates whether the file exists.","lastModifiedDate":"2023-02-26"},{"lineNumber":190,"author":{"gitId":"TJ-Hoo"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":191,"author":{"gitId":"TJ-Hoo"},"content":"    private void executeEventAction(String description, boolean fileDoesExist) {","lastModifiedDate":"2023-02-25"},{"lineNumber":192,"author":{"gitId":"TJ-Hoo"},"content":"        if (fileDoesExist) {","lastModifiedDate":"2023-02-25"},{"lineNumber":193,"author":{"gitId":"TJ-Hoo"},"content":"            try {","lastModifiedDate":"2023-02-16"},{"lineNumber":194,"author":{"gitId":"TJ-Hoo"},"content":"                String[] indexArr \u003d splitDescriptionEvent(description);","lastModifiedDate":"2023-02-16"},{"lineNumber":195,"author":{"gitId":"TJ-Hoo"},"content":"                String name \u003d indexArr[0].trim();","lastModifiedDate":"2023-02-16"},{"lineNumber":196,"author":{"gitId":"TJ-Hoo"},"content":"                String fromDate \u003d indexArr[1].substring(5).trim();","lastModifiedDate":"2023-02-16"},{"lineNumber":197,"author":{"gitId":"TJ-Hoo"},"content":"                String toDate \u003d indexArr[2].substring(3).trim();","lastModifiedDate":"2023-02-16"},{"lineNumber":198,"author":{"gitId":"TJ-Hoo"},"content":"                tasks.addEventToList(name, fromDate, toDate);","lastModifiedDate":"2023-02-25"},{"lineNumber":199,"author":{"gitId":"TJ-Hoo"},"content":"                if (fileDoesExist) {","lastModifiedDate":"2023-02-22"},{"lineNumber":200,"author":{"gitId":"TJ-Hoo"},"content":"                    io.printAcknowledgement(tasks.getTasks());","lastModifiedDate":"2023-02-25"},{"lineNumber":201,"author":{"gitId":"TJ-Hoo"},"content":"                }","lastModifiedDate":"2023-02-22"},{"lineNumber":202,"author":{"gitId":"TJ-Hoo"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-02-16"},{"lineNumber":203,"author":{"gitId":"TJ-Hoo"},"content":"                io.showInsufficientEvent();","lastModifiedDate":"2023-02-25"},{"lineNumber":204,"author":{"gitId":"TJ-Hoo"},"content":"            }","lastModifiedDate":"2023-02-25"},{"lineNumber":205,"author":{"gitId":"TJ-Hoo"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":206,"author":{"gitId":"TJ-Hoo"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":207,"author":{"gitId":"TJ-Hoo"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":208,"author":{"gitId":"TJ-Hoo"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":209,"author":{"gitId":"TJ-Hoo"},"content":"     * Parses the description of an event task and returns an array containing the name,","lastModifiedDate":"2023-02-26"},{"lineNumber":210,"author":{"gitId":"TJ-Hoo"},"content":"     * fromDate and toDate.","lastModifiedDate":"2023-02-26"},{"lineNumber":211,"author":{"gitId":"TJ-Hoo"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":212,"author":{"gitId":"TJ-Hoo"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2023-02-26"},{"lineNumber":213,"author":{"gitId":"TJ-Hoo"},"content":"     * @return An array containing the name, fromDate and toDate.","lastModifiedDate":"2023-02-26"},{"lineNumber":214,"author":{"gitId":"TJ-Hoo"},"content":"     * @throws DukeException If there are insufficient arguments to parse the description.","lastModifiedDate":"2023-02-26"},{"lineNumber":215,"author":{"gitId":"TJ-Hoo"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":216,"author":{"gitId":"TJ-Hoo"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":217,"author":{"gitId":"TJ-Hoo"},"content":"    private static String[] splitDescriptionEvent(String description) throws DukeException {","lastModifiedDate":"2023-02-16"},{"lineNumber":218,"author":{"gitId":"TJ-Hoo"},"content":"        String[] indexArr \u003d description.split(\"/\", 3);","lastModifiedDate":"2023-02-16"},{"lineNumber":219,"author":{"gitId":"TJ-Hoo"},"content":"        if (indexArr.length \u003c 3) {","lastModifiedDate":"2023-02-16"},{"lineNumber":220,"author":{"gitId":"TJ-Hoo"},"content":"            throw new DukeException(new IllegalArgumentException());","lastModifiedDate":"2023-02-16"},{"lineNumber":221,"author":{"gitId":"TJ-Hoo"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":222,"author":{"gitId":"TJ-Hoo"},"content":"        return indexArr;","lastModifiedDate":"2023-02-16"},{"lineNumber":223,"author":{"gitId":"TJ-Hoo"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":224,"author":{"gitId":"TJ-Hoo"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":225,"author":{"gitId":"TJ-Hoo"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":226,"author":{"gitId":"TJ-Hoo"},"content":"     * Executes a deadline action.","lastModifiedDate":"2023-02-26"},{"lineNumber":227,"author":{"gitId":"TJ-Hoo"},"content":"     * Parses the description into name and byDate.","lastModifiedDate":"2023-02-26"},{"lineNumber":228,"author":{"gitId":"TJ-Hoo"},"content":"     * Adds the parsed task to the task list and prints acknowledgement if the file exists.","lastModifiedDate":"2023-02-26"},{"lineNumber":229,"author":{"gitId":"TJ-Hoo"},"content":"     * Otherwise, shows an error message.","lastModifiedDate":"2023-02-26"},{"lineNumber":230,"author":{"gitId":"TJ-Hoo"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":231,"author":{"gitId":"TJ-Hoo"},"content":"     * @param description   The description of the deadline task.","lastModifiedDate":"2023-02-26"},{"lineNumber":232,"author":{"gitId":"TJ-Hoo"},"content":"     * @param fileDoesExist Indicates whether the file exists.","lastModifiedDate":"2023-02-26"},{"lineNumber":233,"author":{"gitId":"TJ-Hoo"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":234,"author":{"gitId":"TJ-Hoo"},"content":"    private void executeDeadlineAction(String description, boolean fileDoesExist) {","lastModifiedDate":"2023-02-25"},{"lineNumber":235,"author":{"gitId":"TJ-Hoo"},"content":"        try {","lastModifiedDate":"2023-02-16"},{"lineNumber":236,"author":{"gitId":"TJ-Hoo"},"content":"            String[] indexArr \u003d splitDescriptionDeadline(description);","lastModifiedDate":"2023-02-16"},{"lineNumber":237,"author":{"gitId":"TJ-Hoo"},"content":"            String name \u003d indexArr[0].trim();","lastModifiedDate":"2023-02-16"},{"lineNumber":238,"author":{"gitId":"TJ-Hoo"},"content":"            String byDate \u003d indexArr[1].substring(3).trim();","lastModifiedDate":"2023-02-16"},{"lineNumber":239,"author":{"gitId":"TJ-Hoo"},"content":"            tasks.addDeadlineToList(name, byDate);","lastModifiedDate":"2023-02-25"},{"lineNumber":240,"author":{"gitId":"TJ-Hoo"},"content":"            if (fileDoesExist) {","lastModifiedDate":"2023-02-22"},{"lineNumber":241,"author":{"gitId":"TJ-Hoo"},"content":"                io.printAcknowledgement(tasks.getTasks());","lastModifiedDate":"2023-02-25"},{"lineNumber":242,"author":{"gitId":"TJ-Hoo"},"content":"            }","lastModifiedDate":"2023-02-22"},{"lineNumber":243,"author":{"gitId":"TJ-Hoo"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-16"},{"lineNumber":244,"author":{"gitId":"TJ-Hoo"},"content":"            io.showInsufficientDeadline();","lastModifiedDate":"2023-02-25"},{"lineNumber":245,"author":{"gitId":"TJ-Hoo"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":246,"author":{"gitId":"TJ-Hoo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":247,"author":{"gitId":"TJ-Hoo"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":248,"author":{"gitId":"TJ-Hoo"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":249,"author":{"gitId":"TJ-Hoo"},"content":"     * Parses the description of a deadline task and returns an array containing the name and byDate.","lastModifiedDate":"2023-02-26"},{"lineNumber":250,"author":{"gitId":"TJ-Hoo"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":251,"author":{"gitId":"TJ-Hoo"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2023-02-26"},{"lineNumber":252,"author":{"gitId":"TJ-Hoo"},"content":"     * @return An array containing the name and byDate.","lastModifiedDate":"2023-02-26"},{"lineNumber":253,"author":{"gitId":"TJ-Hoo"},"content":"     * @throws DukeException If there are insufficient arguments to parse the description.","lastModifiedDate":"2023-02-26"},{"lineNumber":254,"author":{"gitId":"TJ-Hoo"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":255,"author":{"gitId":"TJ-Hoo"},"content":"    private static String[] splitDescriptionDeadline(String description) throws DukeException {","lastModifiedDate":"2023-02-16"},{"lineNumber":256,"author":{"gitId":"TJ-Hoo"},"content":"        String[] indexArr \u003d description.split(\"/\", 2);","lastModifiedDate":"2023-02-16"},{"lineNumber":257,"author":{"gitId":"TJ-Hoo"},"content":"        if (indexArr.length \u003c 2) {","lastModifiedDate":"2023-02-16"},{"lineNumber":258,"author":{"gitId":"TJ-Hoo"},"content":"            throw new DukeException(new IllegalArgumentException());","lastModifiedDate":"2023-02-16"},{"lineNumber":259,"author":{"gitId":"TJ-Hoo"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":260,"author":{"gitId":"TJ-Hoo"},"content":"        return indexArr;","lastModifiedDate":"2023-02-16"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":262,"author":{"gitId":"TJ-Hoo"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":263,"author":{"gitId":"TJ-Hoo"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":264,"author":{"gitId":"TJ-Hoo"},"content":"     * Executes a delete action.","lastModifiedDate":"2023-02-26"},{"lineNumber":265,"author":{"gitId":"TJ-Hoo"},"content":"     * Deletes the task at the specified index and prints the deleted task and task list.","lastModifiedDate":"2023-02-26"},{"lineNumber":266,"author":{"gitId":"TJ-Hoo"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":267,"author":{"gitId":"TJ-Hoo"},"content":"     * @param description The index of the task to delete.","lastModifiedDate":"2023-02-26"},{"lineNumber":268,"author":{"gitId":"TJ-Hoo"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":269,"author":{"gitId":"TJ-Hoo"},"content":"    private void executeDeleteAction(String description) {","lastModifiedDate":"2023-02-25"},{"lineNumber":270,"author":{"gitId":"TJ-Hoo"},"content":"        Integer index \u003d Integer.parseInt(description) - 1;","lastModifiedDate":"2023-02-22"},{"lineNumber":271,"author":{"gitId":"TJ-Hoo"},"content":"        String deletedTask \u003d tasks.deleteTaskAtIndex(index);","lastModifiedDate":"2023-02-25"},{"lineNumber":272,"author":{"gitId":"TJ-Hoo"},"content":"        io.printDeleted(tasks.getTasks(), deletedTask);","lastModifiedDate":"2023-02-25"},{"lineNumber":273,"author":{"gitId":"TJ-Hoo"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":274,"author":{"gitId":"TJ-Hoo"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":275,"author":{"gitId":"TJ-Hoo"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":276,"author":{"gitId":"TJ-Hoo"},"content":"     * Executes a find action.","lastModifiedDate":"2023-02-26"},{"lineNumber":277,"author":{"gitId":"TJ-Hoo"},"content":"     * Finds tasks containing the specified keyword and prints them.","lastModifiedDate":"2023-02-26"},{"lineNumber":278,"author":{"gitId":"TJ-Hoo"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":279,"author":{"gitId":"TJ-Hoo"},"content":"     * @param description The keyword to search for.","lastModifiedDate":"2023-02-26"},{"lineNumber":280,"author":{"gitId":"TJ-Hoo"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":281,"author":{"gitId":"TJ-Hoo"},"content":"    private void executeFindAction(String description) {","lastModifiedDate":"2023-02-25"},{"lineNumber":282,"author":{"gitId":"TJ-Hoo"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d tasks.findTasks(description);","lastModifiedDate":"2023-02-25"},{"lineNumber":283,"author":{"gitId":"TJ-Hoo"},"content":"        io.printFind();","lastModifiedDate":"2023-02-25"},{"lineNumber":284,"author":{"gitId":"TJ-Hoo"},"content":"        io.printList(foundTasks);","lastModifiedDate":"2023-02-25"},{"lineNumber":285,"author":{"gitId":"TJ-Hoo"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"TJ-Hoo":282,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TJ-Hoo"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"TJ-Hoo"},"content":"\tpublic DukeException(Throwable cause) {","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"TJ-Hoo"},"content":"\t\tsuper(cause);","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"TJ-Hoo"},"content":"\t}","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"TJ-Hoo"},"content":"}","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"TJ-Hoo":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TJ-Hoo"},"content":"/**","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"TJ-Hoo"},"content":" Represents a task that is an event with a start time and end time.","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"TJ-Hoo"},"content":" Inherits from the Task class.","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"TJ-Hoo"},"content":" */","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"TJ-Hoo"},"content":"public class Event extends Task {","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"TJ-Hoo"},"content":"\tprotected String startTime;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"TJ-Hoo"},"content":"\tprotected String endTime;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"TJ-Hoo"},"content":"\t/**","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"TJ-Hoo"},"content":"\t Constructs an Event object with the specified information, start time and end time.","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"TJ-Hoo"},"content":"\t @param info the description of the event.","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"TJ-Hoo"},"content":"\t @param startTime the start time of the event.","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"TJ-Hoo"},"content":"\t @param endTime the end time of the event.","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"TJ-Hoo"},"content":"\t */","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"TJ-Hoo"},"content":"\tpublic Event(String info, String startTime, String endTime) {","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"TJ-Hoo"},"content":"\t\tsuper(info);","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"TJ-Hoo"},"content":"\t\tthis.startTime \u003d startTime;","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"TJ-Hoo"},"content":"\t\tthis.endTime \u003d endTime;","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"TJ-Hoo"},"content":"\t}","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"TJ-Hoo"},"content":"\t@Override","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"TJ-Hoo"},"content":"\tpublic String toString() {","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"TJ-Hoo"},"content":"\t\treturn \"[E]\" + super.toString() + \"(from: \"  + startTime + \" to: \" + endTime + \")\";","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"TJ-Hoo"},"content":"\t}","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"TJ-Hoo"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"TJ-Hoo":23}},{"path":"src/main/java/IO.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TJ-Hoo"},"content":"/**","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"TJ-Hoo"},"content":" Handles Input/Output operations for Duke.","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"TJ-Hoo"},"content":" */","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"TJ-Hoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-25"},{"lineNumber":5,"author":{"gitId":"TJ-Hoo"},"content":"public class IO {","lastModifiedDate":"2023-02-25"},{"lineNumber":6,"author":{"gitId":"TJ-Hoo"},"content":"\tpublic IO(){","lastModifiedDate":"2023-02-25"},{"lineNumber":7,"author":{"gitId":"TJ-Hoo"},"content":"\t}","lastModifiedDate":"2023-02-25"},{"lineNumber":8,"author":{"gitId":"TJ-Hoo"},"content":"\t/**","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"TJ-Hoo"},"content":"\t * Prints a welcome message.","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"TJ-Hoo"},"content":"\t */","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"TJ-Hoo"},"content":"\tpublic void printWelcome(){","lastModifiedDate":"2023-02-25"},{"lineNumber":12,"author":{"gitId":"TJ-Hoo"},"content":"\t\tSystem.out.println(\"Hello! I\u0027m Duke \\nWhat can I do for you?\");","lastModifiedDate":"2023-02-25"},{"lineNumber":13,"author":{"gitId":"TJ-Hoo"},"content":"\t}","lastModifiedDate":"2023-02-25"},{"lineNumber":14,"author":{"gitId":"TJ-Hoo"},"content":"\t/**","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"TJ-Hoo"},"content":"\t * Prints a goodbye message.","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"TJ-Hoo"},"content":"\t */","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"TJ-Hoo"},"content":"\tpublic void printBye(){","lastModifiedDate":"2023-02-25"},{"lineNumber":18,"author":{"gitId":"TJ-Hoo"},"content":"\t\tSystem.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-02-25"},{"lineNumber":19,"author":{"gitId":"TJ-Hoo"},"content":"\t}","lastModifiedDate":"2023-02-25"},{"lineNumber":20,"author":{"gitId":"TJ-Hoo"},"content":"\t/**","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"TJ-Hoo"},"content":"\t *Prints an acknowledgement message for adding a task to the list.","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"TJ-Hoo"},"content":"\t *@param \"tasks\" the current task list.","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"TJ-Hoo"},"content":"\t */","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"TJ-Hoo"},"content":"\tpublic void printAcknowledgement(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-25"},{"lineNumber":25,"author":{"gitId":"TJ-Hoo"},"content":"\t\tint lastIndexOfTasks \u003d tasks.size() - 1;","lastModifiedDate":"2023-02-25"},{"lineNumber":26,"author":{"gitId":"TJ-Hoo"},"content":"\t\tSystem.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-02-25"},{"lineNumber":27,"author":{"gitId":"TJ-Hoo"},"content":"\t\tSystem.out.println(tasks.get(lastIndexOfTasks).toString());","lastModifiedDate":"2023-02-25"},{"lineNumber":28,"author":{"gitId":"TJ-Hoo"},"content":"\t\tif (tasks.size() \u003d\u003d 1){","lastModifiedDate":"2023-02-25"},{"lineNumber":29,"author":{"gitId":"TJ-Hoo"},"content":"\t\t\tSystem.out.println(\"Now you have \" + tasks.size()+ \" task in the list.\");","lastModifiedDate":"2023-02-25"},{"lineNumber":30,"author":{"gitId":"TJ-Hoo"},"content":"\t\t} else {","lastModifiedDate":"2023-02-25"},{"lineNumber":31,"author":{"gitId":"TJ-Hoo"},"content":"\t\t\tSystem.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-02-25"},{"lineNumber":32,"author":{"gitId":"TJ-Hoo"},"content":"\t\t}","lastModifiedDate":"2023-02-25"},{"lineNumber":33,"author":{"gitId":"TJ-Hoo"},"content":"\t}","lastModifiedDate":"2023-02-25"},{"lineNumber":34,"author":{"gitId":"TJ-Hoo"},"content":"\t/**","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"TJ-Hoo"},"content":"\t * Prints the current task list.","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"TJ-Hoo"},"content":"\t *","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"TJ-Hoo"},"content":"\t * @param tasks the current task list.","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"TJ-Hoo"},"content":"\t */","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"TJ-Hoo"},"content":"\tpublic void printList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-25"},{"lineNumber":40,"author":{"gitId":"TJ-Hoo"},"content":"\t\tfor (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-02-25"},{"lineNumber":41,"author":{"gitId":"TJ-Hoo"},"content":"\t\t\tSystem.out.print(i + 1 + \".\");","lastModifiedDate":"2023-02-25"},{"lineNumber":42,"author":{"gitId":"TJ-Hoo"},"content":"\t\t\tSystem.out.println(tasks.get(i).toString());","lastModifiedDate":"2023-02-25"},{"lineNumber":43,"author":{"gitId":"TJ-Hoo"},"content":"\t\t}","lastModifiedDate":"2023-02-25"},{"lineNumber":44,"author":{"gitId":"TJ-Hoo"},"content":"\t}","lastModifiedDate":"2023-02-25"},{"lineNumber":45,"author":{"gitId":"TJ-Hoo"},"content":"\t/**","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"TJ-Hoo"},"content":"\t * Prints a message confirming that a task has been marked as completed.","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"TJ-Hoo"},"content":"\t *","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"TJ-Hoo"},"content":"\t * @param tasks the current task list.","lastModifiedDate":"2023-02-26"},{"lineNumber":49,"author":{"gitId":"TJ-Hoo"},"content":"\t * @param index the index of the completed task in the list.","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"TJ-Hoo"},"content":"\t */","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"TJ-Hoo"},"content":"\tpublic void printMarked(ArrayList\u003cTask\u003e tasks, Integer index) {","lastModifiedDate":"2023-02-25"},{"lineNumber":52,"author":{"gitId":"TJ-Hoo"},"content":"\t\tSystem.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-02-25"},{"lineNumber":53,"author":{"gitId":"TJ-Hoo"},"content":"\t\tSystem.out.println(tasks.get(index).toString());","lastModifiedDate":"2023-02-25"},{"lineNumber":54,"author":{"gitId":"TJ-Hoo"},"content":"\t}","lastModifiedDate":"2023-02-25"},{"lineNumber":55,"author":{"gitId":"TJ-Hoo"},"content":"\t/**","lastModifiedDate":"2023-02-26"},{"lineNumber":56,"author":{"gitId":"TJ-Hoo"},"content":"\t * Prints a message confirming that a task has been marked as incomplete.","lastModifiedDate":"2023-02-26"},{"lineNumber":57,"author":{"gitId":"TJ-Hoo"},"content":"\t *","lastModifiedDate":"2023-02-26"},{"lineNumber":58,"author":{"gitId":"TJ-Hoo"},"content":"\t * @param tasks the current task list.","lastModifiedDate":"2023-02-26"},{"lineNumber":59,"author":{"gitId":"TJ-Hoo"},"content":"\t * @param index the index of the incomplete task in the list.","lastModifiedDate":"2023-02-26"},{"lineNumber":60,"author":{"gitId":"TJ-Hoo"},"content":"\t */","lastModifiedDate":"2023-02-26"},{"lineNumber":61,"author":{"gitId":"TJ-Hoo"},"content":"\tpublic void printUnmarked(ArrayList\u003cTask\u003e tasks, Integer index) {","lastModifiedDate":"2023-02-25"},{"lineNumber":62,"author":{"gitId":"TJ-Hoo"},"content":"\t\tSystem.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-02-25"},{"lineNumber":63,"author":{"gitId":"TJ-Hoo"},"content":"\t\tSystem.out.println(tasks.get(index).toString());","lastModifiedDate":"2023-02-25"},{"lineNumber":64,"author":{"gitId":"TJ-Hoo"},"content":"\t}","lastModifiedDate":"2023-02-25"},{"lineNumber":65,"author":{"gitId":"TJ-Hoo"},"content":"\t/**","lastModifiedDate":"2023-02-26"},{"lineNumber":66,"author":{"gitId":"TJ-Hoo"},"content":"\t * Prints a message confirming that a task has been deleted from the list.","lastModifiedDate":"2023-02-26"},{"lineNumber":67,"author":{"gitId":"TJ-Hoo"},"content":"\t *","lastModifiedDate":"2023-02-26"},{"lineNumber":68,"author":{"gitId":"TJ-Hoo"},"content":"\t * @param tasks the current task list.","lastModifiedDate":"2023-02-26"},{"lineNumber":69,"author":{"gitId":"TJ-Hoo"},"content":"\t * @param deletedTask the deleted task.","lastModifiedDate":"2023-02-26"},{"lineNumber":70,"author":{"gitId":"TJ-Hoo"},"content":"\t */","lastModifiedDate":"2023-02-26"},{"lineNumber":71,"author":{"gitId":"TJ-Hoo"},"content":"\tpublic void printDeleted(ArrayList\u003cTask\u003e tasks, String deletedTask) {","lastModifiedDate":"2023-02-25"},{"lineNumber":72,"author":{"gitId":"TJ-Hoo"},"content":"\t\tSystem.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-02-25"},{"lineNumber":73,"author":{"gitId":"TJ-Hoo"},"content":"\t\tSystem.out.println(deletedTask);","lastModifiedDate":"2023-02-25"},{"lineNumber":74,"author":{"gitId":"TJ-Hoo"},"content":"\t\tif (tasks.size() \u003d\u003d 1) {","lastModifiedDate":"2023-02-25"},{"lineNumber":75,"author":{"gitId":"TJ-Hoo"},"content":"\t\t\tSystem.out.println(\"Now you have \" + tasks.size() + \" task in the list.\");","lastModifiedDate":"2023-02-25"},{"lineNumber":76,"author":{"gitId":"TJ-Hoo"},"content":"\t\t} else {","lastModifiedDate":"2023-02-25"},{"lineNumber":77,"author":{"gitId":"TJ-Hoo"},"content":"\t\t\tSystem.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-02-25"},{"lineNumber":78,"author":{"gitId":"TJ-Hoo"},"content":"\t\t}","lastModifiedDate":"2023-02-25"},{"lineNumber":79,"author":{"gitId":"TJ-Hoo"},"content":"\t}","lastModifiedDate":"2023-02-25"},{"lineNumber":80,"author":{"gitId":"TJ-Hoo"},"content":"\t/**","lastModifiedDate":"2023-02-26"},{"lineNumber":81,"author":{"gitId":"TJ-Hoo"},"content":"\t * Prints a message indicating that matching tasks were found.","lastModifiedDate":"2023-02-26"},{"lineNumber":82,"author":{"gitId":"TJ-Hoo"},"content":"\t */","lastModifiedDate":"2023-02-26"},{"lineNumber":83,"author":{"gitId":"TJ-Hoo"},"content":"\tpublic void printFind() {","lastModifiedDate":"2023-02-25"},{"lineNumber":84,"author":{"gitId":"TJ-Hoo"},"content":"\t\tSystem.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-02-25"},{"lineNumber":85,"author":{"gitId":"TJ-Hoo"},"content":"\t}","lastModifiedDate":"2023-02-25"},{"lineNumber":86,"author":{"gitId":"TJ-Hoo"},"content":"\t/**","lastModifiedDate":"2023-02-26"},{"lineNumber":87,"author":{"gitId":"TJ-Hoo"},"content":"\t * Prints an error message indicating that the program is unable to write or append to the file.","lastModifiedDate":"2023-02-26"},{"lineNumber":88,"author":{"gitId":"TJ-Hoo"},"content":"\t */","lastModifiedDate":"2023-02-26"},{"lineNumber":89,"author":{"gitId":"TJ-Hoo"},"content":"\tpublic void showCannotEditFile(){","lastModifiedDate":"2023-02-25"},{"lineNumber":90,"author":{"gitId":"TJ-Hoo"},"content":"\t\tSystem.out.println(\"Unable to write/append to file.\");","lastModifiedDate":"2023-02-25"},{"lineNumber":91,"author":{"gitId":"TJ-Hoo"},"content":"\t}","lastModifiedDate":"2023-02-25"},{"lineNumber":92,"author":{"gitId":"TJ-Hoo"},"content":"\t/**","lastModifiedDate":"2023-02-26"},{"lineNumber":93,"author":{"gitId":"TJ-Hoo"},"content":"\t * Prints an error message indicating that the program is unable to read from the file.","lastModifiedDate":"2023-02-26"},{"lineNumber":94,"author":{"gitId":"TJ-Hoo"},"content":"\t */","lastModifiedDate":"2023-02-26"},{"lineNumber":95,"author":{"gitId":"TJ-Hoo"},"content":"\tpublic void showLoadingError(){","lastModifiedDate":"2023-02-25"},{"lineNumber":96,"author":{"gitId":"TJ-Hoo"},"content":"\t\tSystem.out.println(\"Could not read file.\");","lastModifiedDate":"2023-02-25"},{"lineNumber":97,"author":{"gitId":"TJ-Hoo"},"content":"\t}","lastModifiedDate":"2023-02-25"},{"lineNumber":98,"author":{"gitId":"TJ-Hoo"},"content":"\t/**","lastModifiedDate":"2023-02-26"},{"lineNumber":99,"author":{"gitId":"TJ-Hoo"},"content":"\t * Prints an error message indicating that the user has entered an invalid command.","lastModifiedDate":"2023-02-26"},{"lineNumber":100,"author":{"gitId":"TJ-Hoo"},"content":"\t */","lastModifiedDate":"2023-02-26"},{"lineNumber":101,"author":{"gitId":"TJ-Hoo"},"content":"\tpublic void showInvalidCommand(){","lastModifiedDate":"2023-02-25"},{"lineNumber":102,"author":{"gitId":"TJ-Hoo"},"content":"\t\tSystem.out.println(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-02-25"},{"lineNumber":103,"author":{"gitId":"TJ-Hoo"},"content":"\t}","lastModifiedDate":"2023-02-25"},{"lineNumber":104,"author":{"gitId":"TJ-Hoo"},"content":"\t/**","lastModifiedDate":"2023-02-26"},{"lineNumber":105,"author":{"gitId":"TJ-Hoo"},"content":"\t * Prints an error message indicating that the user has not provided any description for a todo task.","lastModifiedDate":"2023-02-26"},{"lineNumber":106,"author":{"gitId":"TJ-Hoo"},"content":"\t */","lastModifiedDate":"2023-02-26"},{"lineNumber":107,"author":{"gitId":"TJ-Hoo"},"content":"\tpublic void showInsufficientTodo(){","lastModifiedDate":"2023-02-25"},{"lineNumber":108,"author":{"gitId":"TJ-Hoo"},"content":"\t\tSystem.out.println(\"Unable to add todo: No tasks given.\");","lastModifiedDate":"2023-02-25"},{"lineNumber":109,"author":{"gitId":"TJ-Hoo"},"content":"\t}","lastModifiedDate":"2023-02-25"},{"lineNumber":110,"author":{"gitId":"TJ-Hoo"},"content":"\t/**","lastModifiedDate":"2023-02-26"},{"lineNumber":111,"author":{"gitId":"TJ-Hoo"},"content":"\t * Prints an error message indicating that the user has not provided enough information to create an event task.","lastModifiedDate":"2023-02-26"},{"lineNumber":112,"author":{"gitId":"TJ-Hoo"},"content":"\t */","lastModifiedDate":"2023-02-26"},{"lineNumber":113,"author":{"gitId":"TJ-Hoo"},"content":"\tpublic void showInsufficientEvent(){","lastModifiedDate":"2023-02-25"},{"lineNumber":114,"author":{"gitId":"TJ-Hoo"},"content":"\t\tSystem.out.println(\"Not enough commands to execute \\\"event\\\"\");","lastModifiedDate":"2023-02-25"},{"lineNumber":115,"author":{"gitId":"TJ-Hoo"},"content":"\t}","lastModifiedDate":"2023-02-25"},{"lineNumber":116,"author":{"gitId":"TJ-Hoo"},"content":"\t/**","lastModifiedDate":"2023-02-26"},{"lineNumber":117,"author":{"gitId":"TJ-Hoo"},"content":"\t * Prints an error message indicating that the user has not provided enough information to create a deadline task.","lastModifiedDate":"2023-02-26"},{"lineNumber":118,"author":{"gitId":"TJ-Hoo"},"content":"\t */","lastModifiedDate":"2023-02-26"},{"lineNumber":119,"author":{"gitId":"TJ-Hoo"},"content":"\tpublic void showInsufficientDeadline(){","lastModifiedDate":"2023-02-25"},{"lineNumber":120,"author":{"gitId":"TJ-Hoo"},"content":"\t\tSystem.out.println(\"Not enough commands to execute \\\"deadline\\\"\");","lastModifiedDate":"2023-02-25"},{"lineNumber":121,"author":{"gitId":"TJ-Hoo"},"content":"\t}","lastModifiedDate":"2023-02-25"},{"lineNumber":122,"author":{"gitId":"TJ-Hoo"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":123,"author":{"gitId":"TJ-Hoo"},"content":"}","lastModifiedDate":"2023-02-25"}],"authorContributionMap":{"TJ-Hoo":123}},{"path":"src/main/java/Memory.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TJ-Hoo"},"content":"/**","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"TJ-Hoo"},"content":" * Memory is a class that saves the tasks in the hard disk automatically whenever the task list changes.","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"TJ-Hoo"},"content":" * And loads the data from the hard disk when Duke starts up.","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"TJ-Hoo"},"content":" */","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"TJ-Hoo"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"TJ-Hoo"},"content":"import java.io.File;","lastModifiedDate":"2023-02-25"},{"lineNumber":7,"author":{"gitId":"TJ-Hoo"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-25"},{"lineNumber":8,"author":{"gitId":"TJ-Hoo"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-25"},{"lineNumber":9,"author":{"gitId":"TJ-Hoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-25"},{"lineNumber":10,"author":{"gitId":"TJ-Hoo"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-25"},{"lineNumber":11,"author":{"gitId":"TJ-Hoo"},"content":"public class Memory {","lastModifiedDate":"2023-02-25"},{"lineNumber":12,"author":{"gitId":"TJ-Hoo"},"content":"\tprivate String filePath;","lastModifiedDate":"2023-02-25"},{"lineNumber":13,"author":{"gitId":"TJ-Hoo"},"content":"\tprivate ArrayList\u003cString\u003e fileContents \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-25"},{"lineNumber":14,"author":{"gitId":"TJ-Hoo"},"content":"\tprivate ArrayList\u003cString\u003e commandInput \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-25"},{"lineNumber":15,"author":{"gitId":"TJ-Hoo"},"content":"\tpublic Memory(String filePath) {","lastModifiedDate":"2023-02-25"},{"lineNumber":16,"author":{"gitId":"TJ-Hoo"},"content":"\t\tthis.filePath \u003d filePath;","lastModifiedDate":"2023-02-25"},{"lineNumber":17,"author":{"gitId":"TJ-Hoo"},"content":"\t}","lastModifiedDate":"2023-02-25"},{"lineNumber":18,"author":{"gitId":"TJ-Hoo"},"content":"\t/**","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"TJ-Hoo"},"content":"\t * Loads the contents of the file into an ArrayList of Strings.","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"TJ-Hoo"},"content":"\t *","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"TJ-Hoo"},"content":"\t * @return an ArrayList of Strings containing the contents of the file","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"TJ-Hoo"},"content":"\t * @throws IOException if there is an error reading from the file","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"TJ-Hoo"},"content":"\t */","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"TJ-Hoo"},"content":"\tpublic ArrayList\u003cString\u003e loadFile() throws IOException {","lastModifiedDate":"2023-02-25"},{"lineNumber":25,"author":{"gitId":"TJ-Hoo"},"content":"\t\tFile F \u003d new File(filePath);","lastModifiedDate":"2023-02-25"},{"lineNumber":26,"author":{"gitId":"TJ-Hoo"},"content":"\t\tif (!F.exists()) {","lastModifiedDate":"2023-02-25"},{"lineNumber":27,"author":{"gitId":"TJ-Hoo"},"content":"\t\t\tF \u003d new File(\"duke.txt\");","lastModifiedDate":"2023-02-25"},{"lineNumber":28,"author":{"gitId":"TJ-Hoo"},"content":"\t\t\tthis.filePath \u003d F.getPath();","lastModifiedDate":"2023-02-25"},{"lineNumber":29,"author":{"gitId":"TJ-Hoo"},"content":"\t\t}","lastModifiedDate":"2023-02-25"},{"lineNumber":30,"author":{"gitId":"TJ-Hoo"},"content":"\t\tScanner s \u003d new Scanner(F);","lastModifiedDate":"2023-02-25"},{"lineNumber":31,"author":{"gitId":"TJ-Hoo"},"content":"\t\twhile (s.hasNext()) {","lastModifiedDate":"2023-02-25"},{"lineNumber":32,"author":{"gitId":"TJ-Hoo"},"content":"\t\t\tfileContents.add(s.nextLine());","lastModifiedDate":"2023-02-25"},{"lineNumber":33,"author":{"gitId":"TJ-Hoo"},"content":"\t\t}","lastModifiedDate":"2023-02-25"},{"lineNumber":34,"author":{"gitId":"TJ-Hoo"},"content":"\t\treturn fileContents;","lastModifiedDate":"2023-02-25"},{"lineNumber":35,"author":{"gitId":"TJ-Hoo"},"content":"\t}","lastModifiedDate":"2023-02-25"},{"lineNumber":36,"author":{"gitId":"TJ-Hoo"},"content":"\t/**","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"TJ-Hoo"},"content":"\t * Writes the contents of the commandInput ArrayList to the file.","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"TJ-Hoo"},"content":"\t *","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"TJ-Hoo"},"content":"\t * @throws IOException if there is an error writing to the file","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"TJ-Hoo"},"content":"\t */","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"TJ-Hoo"},"content":"\tpublic void writeToFile() throws IOException {","lastModifiedDate":"2023-02-25"},{"lineNumber":42,"author":{"gitId":"TJ-Hoo"},"content":"\t\tFileWriter fw \u003d new FileWriter(this.filePath);","lastModifiedDate":"2023-02-25"},{"lineNumber":43,"author":{"gitId":"TJ-Hoo"},"content":"\t\tfor (String s : commandInput) {","lastModifiedDate":"2023-02-25"},{"lineNumber":44,"author":{"gitId":"TJ-Hoo"},"content":"\t\t\tfw.write(s);","lastModifiedDate":"2023-02-25"},{"lineNumber":45,"author":{"gitId":"TJ-Hoo"},"content":"\t\t\tfw.write(\u0027\\n\u0027);","lastModifiedDate":"2023-02-25"},{"lineNumber":46,"author":{"gitId":"TJ-Hoo"},"content":"\t\t}","lastModifiedDate":"2023-02-25"},{"lineNumber":47,"author":{"gitId":"TJ-Hoo"},"content":"\t\tfw.close();","lastModifiedDate":"2023-02-25"},{"lineNumber":48,"author":{"gitId":"TJ-Hoo"},"content":"\t}","lastModifiedDate":"2023-02-25"},{"lineNumber":49,"author":{"gitId":"TJ-Hoo"},"content":"\t/**","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"TJ-Hoo"},"content":"\t * Appends the specified userInput String to the file.","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"TJ-Hoo"},"content":"\t *","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"TJ-Hoo"},"content":"\t * @param userInput the String to append to the file","lastModifiedDate":"2023-02-26"},{"lineNumber":53,"author":{"gitId":"TJ-Hoo"},"content":"\t * @throws IOException if there is an error writing to the file","lastModifiedDate":"2023-02-26"},{"lineNumber":54,"author":{"gitId":"TJ-Hoo"},"content":"\t */","lastModifiedDate":"2023-02-26"},{"lineNumber":55,"author":{"gitId":"TJ-Hoo"},"content":"\tpublic void appendToFile(String userInput) throws IOException {","lastModifiedDate":"2023-02-25"},{"lineNumber":56,"author":{"gitId":"TJ-Hoo"},"content":"\t\tFileWriter fw \u003d new FileWriter(this.filePath, true);","lastModifiedDate":"2023-02-25"},{"lineNumber":57,"author":{"gitId":"TJ-Hoo"},"content":"\t\tfw.write(userInput);","lastModifiedDate":"2023-02-25"},{"lineNumber":58,"author":{"gitId":"TJ-Hoo"},"content":"\t\tfw.write(\u0027\\n\u0027);","lastModifiedDate":"2023-02-25"},{"lineNumber":59,"author":{"gitId":"TJ-Hoo"},"content":"\t\tfw.close();","lastModifiedDate":"2023-02-25"},{"lineNumber":60,"author":{"gitId":"TJ-Hoo"},"content":"\t}","lastModifiedDate":"2023-02-25"},{"lineNumber":61,"author":{"gitId":"TJ-Hoo"},"content":"}","lastModifiedDate":"2023-02-25"}],"authorContributionMap":{"TJ-Hoo":61}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TJ-Hoo"},"content":"/**","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"TJ-Hoo"},"content":" Represents a general task with a name and completion status.","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"TJ-Hoo"},"content":" */","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"TJ-Hoo"},"content":"public class Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"TJ-Hoo"},"content":"\tprotected String name;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"TJ-Hoo"},"content":"\tprotected boolean isCompleted;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"TJ-Hoo"},"content":"\t/**","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"TJ-Hoo"},"content":"\t Constructs a Task object with the specified name.","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"TJ-Hoo"},"content":"\t @param info the name of the task.","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"TJ-Hoo"},"content":"\t */","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"TJ-Hoo"},"content":"\tpublic Task(String info) {","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"TJ-Hoo"},"content":"\t\tthis.name \u003d info;","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"TJ-Hoo"},"content":"\t}","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"TJ-Hoo"},"content":"\tpublic String toString () {","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"TJ-Hoo"},"content":"\t\treturn(isCompleted?\"[X]\"+this.name:\"[ ]\"+this.name);","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"TJ-Hoo"},"content":"\t}","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"TJ-Hoo"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"TJ-Hoo":17}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TJ-Hoo"},"content":"/**","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"TJ-Hoo"},"content":" TaskList is a class that handles the manipulation of tasks in an ArrayList.","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"TJ-Hoo"},"content":" It contains methods to add, delete, mark as done, and find tasks.","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"TJ-Hoo"},"content":" */","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"TJ-Hoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-25"},{"lineNumber":6,"author":{"gitId":"TJ-Hoo"},"content":"public class TaskList {","lastModifiedDate":"2023-02-25"},{"lineNumber":7,"author":{"gitId":"TJ-Hoo"},"content":"\tArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-25"},{"lineNumber":8,"author":{"gitId":"TJ-Hoo"},"content":"\tpublic TaskList() {","lastModifiedDate":"2023-02-25"},{"lineNumber":9,"author":{"gitId":"TJ-Hoo"},"content":"\t}","lastModifiedDate":"2023-02-25"},{"lineNumber":10,"author":{"gitId":"TJ-Hoo"},"content":"\tpublic ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-02-25"},{"lineNumber":11,"author":{"gitId":"TJ-Hoo"},"content":"\t\treturn tasks;","lastModifiedDate":"2023-02-25"},{"lineNumber":12,"author":{"gitId":"TJ-Hoo"},"content":"\t}","lastModifiedDate":"2023-02-25"},{"lineNumber":13,"author":{"gitId":"TJ-Hoo"},"content":"\t/**","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"TJ-Hoo"},"content":"\t Marks the task at the given index as completed.","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"TJ-Hoo"},"content":"\t @param index The index of the task to be marked.","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"TJ-Hoo"},"content":"\t */","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"TJ-Hoo"},"content":"\tpublic void markAtIndex(Integer index) {","lastModifiedDate":"2023-02-25"},{"lineNumber":18,"author":{"gitId":"TJ-Hoo"},"content":"\t\ttasks.get(index).isCompleted \u003d true;","lastModifiedDate":"2023-02-25"},{"lineNumber":19,"author":{"gitId":"TJ-Hoo"},"content":"\t}","lastModifiedDate":"2023-02-25"},{"lineNumber":20,"author":{"gitId":"TJ-Hoo"},"content":"\t/**","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"TJ-Hoo"},"content":"\t Marks the task at the given index as incomplete.","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"TJ-Hoo"},"content":"\t @param index The index of the task to be unmarked.","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"TJ-Hoo"},"content":"\t */","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"TJ-Hoo"},"content":"\tpublic void unmarkAtIndex(Integer index) {","lastModifiedDate":"2023-02-25"},{"lineNumber":25,"author":{"gitId":"TJ-Hoo"},"content":"\t\ttasks.get(index).isCompleted \u003d false;","lastModifiedDate":"2023-02-25"},{"lineNumber":26,"author":{"gitId":"TJ-Hoo"},"content":"\t}","lastModifiedDate":"2023-02-25"},{"lineNumber":27,"author":{"gitId":"TJ-Hoo"},"content":"\t/**","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"TJ-Hoo"},"content":"\t Adds a Todo task to the list.","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"TJ-Hoo"},"content":"\t @param description The description of the Todo task.","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"TJ-Hoo"},"content":"\t @throws DukeException If description is an empty string.","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"TJ-Hoo"},"content":"\t */","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"TJ-Hoo"},"content":"\tpublic void addTodoToList(String description) throws DukeException {","lastModifiedDate":"2023-02-25"},{"lineNumber":33,"author":{"gitId":"TJ-Hoo"},"content":"\t\tif(description.equals(\"\")){","lastModifiedDate":"2023-02-25"},{"lineNumber":34,"author":{"gitId":"TJ-Hoo"},"content":"\t\t\tthrow new DukeException(new IllegalArgumentException());","lastModifiedDate":"2023-02-25"},{"lineNumber":35,"author":{"gitId":"TJ-Hoo"},"content":"\t\t}","lastModifiedDate":"2023-02-25"},{"lineNumber":36,"author":{"gitId":"TJ-Hoo"},"content":"\t\ttasks.add(new Todo(description));","lastModifiedDate":"2023-02-25"},{"lineNumber":37,"author":{"gitId":"TJ-Hoo"},"content":"\t}","lastModifiedDate":"2023-02-25"},{"lineNumber":38,"author":{"gitId":"TJ-Hoo"},"content":"\t/**","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"TJ-Hoo"},"content":"\t Adds a Deadline task to the list.","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"TJ-Hoo"},"content":"\t @param description The description of the Deadline task.","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"TJ-Hoo"},"content":"\t @param byDate The date and time by which the Deadline task should be completed.","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"TJ-Hoo"},"content":"\t */","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"TJ-Hoo"},"content":"\tpublic void addDeadlineToList(String description, String byDate) {","lastModifiedDate":"2023-02-25"},{"lineNumber":44,"author":{"gitId":"TJ-Hoo"},"content":"\t\ttasks.add(new Deadline(description, byDate));","lastModifiedDate":"2023-02-25"},{"lineNumber":45,"author":{"gitId":"TJ-Hoo"},"content":"\t}","lastModifiedDate":"2023-02-25"},{"lineNumber":46,"author":{"gitId":"TJ-Hoo"},"content":"\t/**","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"TJ-Hoo"},"content":"\t Adds an Event task to the list.","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"TJ-Hoo"},"content":"\t @param description The description of the Event task.","lastModifiedDate":"2023-02-26"},{"lineNumber":49,"author":{"gitId":"TJ-Hoo"},"content":"\t @param fromDate The date and time from which the Event task starts.","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"TJ-Hoo"},"content":"\t @param toDate The date and time at which the Event task ends.","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"TJ-Hoo"},"content":"\t */","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"TJ-Hoo"},"content":"\tpublic void addEventToList(String description, String fromDate, String toDate) {","lastModifiedDate":"2023-02-25"},{"lineNumber":53,"author":{"gitId":"TJ-Hoo"},"content":"\t\ttasks.add(new Event(description, fromDate, toDate));","lastModifiedDate":"2023-02-25"},{"lineNumber":54,"author":{"gitId":"TJ-Hoo"},"content":"\t}","lastModifiedDate":"2023-02-25"},{"lineNumber":55,"author":{"gitId":"TJ-Hoo"},"content":"\t/**","lastModifiedDate":"2023-02-26"},{"lineNumber":56,"author":{"gitId":"TJ-Hoo"},"content":"\t Deletes the task at the given index from the list.","lastModifiedDate":"2023-02-26"},{"lineNumber":57,"author":{"gitId":"TJ-Hoo"},"content":"\t @param index The index of the task to be deleted.","lastModifiedDate":"2023-02-26"},{"lineNumber":58,"author":{"gitId":"TJ-Hoo"},"content":"\t @return The name of the deleted task.","lastModifiedDate":"2023-02-26"},{"lineNumber":59,"author":{"gitId":"TJ-Hoo"},"content":"\t */","lastModifiedDate":"2023-02-26"},{"lineNumber":60,"author":{"gitId":"TJ-Hoo"},"content":"\tpublic String deleteTaskAtIndex(Integer index){","lastModifiedDate":"2023-02-25"},{"lineNumber":61,"author":{"gitId":"TJ-Hoo"},"content":"\t\tString nameOfToBeDeletedTask \u003d tasks.get(index).name;","lastModifiedDate":"2023-02-25"},{"lineNumber":62,"author":{"gitId":"TJ-Hoo"},"content":"\t\ttasks.remove((int)index);","lastModifiedDate":"2023-02-25"},{"lineNumber":63,"author":{"gitId":"TJ-Hoo"},"content":"\t\treturn nameOfToBeDeletedTask;","lastModifiedDate":"2023-02-25"},{"lineNumber":64,"author":{"gitId":"TJ-Hoo"},"content":"\t}","lastModifiedDate":"2023-02-25"},{"lineNumber":65,"author":{"gitId":"TJ-Hoo"},"content":"\t/**","lastModifiedDate":"2023-02-26"},{"lineNumber":66,"author":{"gitId":"TJ-Hoo"},"content":"\t Finds tasks in the list that match the given description.","lastModifiedDate":"2023-02-26"},{"lineNumber":67,"author":{"gitId":"TJ-Hoo"},"content":"\t @param description The description to search for in the tasks.","lastModifiedDate":"2023-02-26"},{"lineNumber":68,"author":{"gitId":"TJ-Hoo"},"content":"\t @return An ArrayList of tasks that match the description.","lastModifiedDate":"2023-02-26"},{"lineNumber":69,"author":{"gitId":"TJ-Hoo"},"content":"\t */","lastModifiedDate":"2023-02-26"},{"lineNumber":70,"author":{"gitId":"TJ-Hoo"},"content":"\tpublic ArrayList\u003cTask\u003e findTasks(String description){","lastModifiedDate":"2023-02-25"},{"lineNumber":71,"author":{"gitId":"TJ-Hoo"},"content":"\t\tArrayList\u003cTask\u003e matchedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-25"},{"lineNumber":72,"author":{"gitId":"TJ-Hoo"},"content":"\t\tfor(Task s:tasks){","lastModifiedDate":"2023-02-25"},{"lineNumber":73,"author":{"gitId":"TJ-Hoo"},"content":"\t\t\tif (s.name.contains(description)){","lastModifiedDate":"2023-02-25"},{"lineNumber":74,"author":{"gitId":"TJ-Hoo"},"content":"\t\t\t\tmatchedTasks.add(s);","lastModifiedDate":"2023-02-25"},{"lineNumber":75,"author":{"gitId":"TJ-Hoo"},"content":"\t\t\t}","lastModifiedDate":"2023-02-25"},{"lineNumber":76,"author":{"gitId":"TJ-Hoo"},"content":"\t\t}","lastModifiedDate":"2023-02-25"},{"lineNumber":77,"author":{"gitId":"TJ-Hoo"},"content":"\t\treturn matchedTasks;","lastModifiedDate":"2023-02-25"},{"lineNumber":78,"author":{"gitId":"TJ-Hoo"},"content":"\t}","lastModifiedDate":"2023-02-25"},{"lineNumber":79,"author":{"gitId":"TJ-Hoo"},"content":"}","lastModifiedDate":"2023-02-25"},{"lineNumber":80,"author":{"gitId":"TJ-Hoo"},"content":"","lastModifiedDate":"2023-02-25"}],"authorContributionMap":{"TJ-Hoo":80}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TJ-Hoo"},"content":"/**","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"TJ-Hoo"},"content":" Represents a task that is a \"todo item.","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"TJ-Hoo"},"content":" Inherits from the Task class.","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"TJ-Hoo"},"content":" */","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"TJ-Hoo"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"TJ-Hoo"},"content":"\t/**","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"TJ-Hoo"},"content":"\t Constructs a Todo object with the specified information.","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"TJ-Hoo"},"content":"\t @param info the description of the todo item.","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"TJ-Hoo"},"content":"\t */","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"TJ-Hoo"},"content":"\tpublic Todo (String info) {","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"TJ-Hoo"},"content":"\t\tsuper (info);","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"TJ-Hoo"},"content":"\t}","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"TJ-Hoo"},"content":"\tpublic String toString() {","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"TJ-Hoo"},"content":"\t\treturn \"[T]\" + super.toString();","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"TJ-Hoo"},"content":"\t}","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"TJ-Hoo"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"TJ-Hoo":16}}]
