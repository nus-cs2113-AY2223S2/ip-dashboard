[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"denzelcjy"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"denzelcjy"},"content":"import duke.Task;","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"denzelcjy"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"denzelcjy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"denzelcjy"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"denzelcjy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"denzelcjy"},"content":"    public static void startDuke() {","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"denzelcjy"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"denzelcjy"},"content":"        System.out.println(\"     Hello! I\u0027m Duke\");","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"denzelcjy"},"content":"        System.out.println(\"     What can I do for you?\");","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"denzelcjy"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"denzelcjy"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"denzelcjy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"denzelcjy"},"content":"    public static void endDuke() {","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"denzelcjy"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"denzelcjy"},"content":"        System.out.println(\"     Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"denzelcjy"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"denzelcjy"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"denzelcjy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"denzelcjy"},"content":"    public static void printErrorMessage(String errorMessage) {","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"denzelcjy"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"denzelcjy"},"content":"        System.out.println(errorMessage);","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"denzelcjy"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"denzelcjy"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"denzelcjy"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":34,"author":{"gitId":"denzelcjy"},"content":"        startDuke();","lastModifiedDate":"2023-01-21"},{"lineNumber":35,"author":{"gitId":"denzelcjy"},"content":"        Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-21"},{"lineNumber":36,"author":{"gitId":"denzelcjy"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"denzelcjy"},"content":"        while (input.hasNextLine()) {","lastModifiedDate":"2023-01-21"},{"lineNumber":38,"author":{"gitId":"denzelcjy"},"content":"            String[] nextInput \u003d input.nextLine().split(\" \", 2);","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"denzelcjy"},"content":"            try {","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"denzelcjy"},"content":"                if (nextInput[0].equals(\"bye\")) {","lastModifiedDate":"2023-01-21"},{"lineNumber":41,"author":{"gitId":"denzelcjy"},"content":"                    break;","lastModifiedDate":"2023-01-21"},{"lineNumber":42,"author":{"gitId":"denzelcjy"},"content":"                }","lastModifiedDate":"2023-01-21"},{"lineNumber":43,"author":{"gitId":"denzelcjy"},"content":"                if (nextInput[0].isEmpty()) { //settle for the case of empty inputs","lastModifiedDate":"2023-01-21"},{"lineNumber":44,"author":{"gitId":"denzelcjy"},"content":"                    continue;","lastModifiedDate":"2023-01-21"},{"lineNumber":45,"author":{"gitId":"denzelcjy"},"content":"                }","lastModifiedDate":"2023-01-21"},{"lineNumber":46,"author":{"gitId":"denzelcjy"},"content":"                if (nextInput[0].equals(\"list\")) { //want to print out the task list","lastModifiedDate":"2023-01-21"},{"lineNumber":47,"author":{"gitId":"denzelcjy"},"content":"                    Task.printTaskList(taskList);","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"denzelcjy"},"content":"                    continue;","lastModifiedDate":"2023-01-21"},{"lineNumber":49,"author":{"gitId":"denzelcjy"},"content":"                }","lastModifiedDate":"2023-01-21"},{"lineNumber":50,"author":{"gitId":"denzelcjy"},"content":"                if (nextInput[0].equals(\"mark\")) {","lastModifiedDate":"2023-01-21"},{"lineNumber":51,"author":{"gitId":"denzelcjy"},"content":"                    int taskNumber \u003d Integer.parseInt(nextInput[1]);","lastModifiedDate":"2023-01-21"},{"lineNumber":52,"author":{"gitId":"denzelcjy"},"content":"                    taskList.get(taskNumber - 1).markAsDone();","lastModifiedDate":"2023-01-21"},{"lineNumber":53,"author":{"gitId":"denzelcjy"},"content":"                    Task.printMarkedTask(taskNumber - 1, taskList);","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"denzelcjy"},"content":"                    continue;","lastModifiedDate":"2023-01-21"},{"lineNumber":55,"author":{"gitId":"denzelcjy"},"content":"                }","lastModifiedDate":"2023-01-21"},{"lineNumber":56,"author":{"gitId":"denzelcjy"},"content":"                if (nextInput[0].equals(\"unmark\")) {","lastModifiedDate":"2023-01-21"},{"lineNumber":57,"author":{"gitId":"denzelcjy"},"content":"                    int taskNumber \u003d Integer.parseInt(nextInput[1]);","lastModifiedDate":"2023-01-21"},{"lineNumber":58,"author":{"gitId":"denzelcjy"},"content":"                    taskList.get(taskNumber - 1).markAsNotDone();","lastModifiedDate":"2023-01-21"},{"lineNumber":59,"author":{"gitId":"denzelcjy"},"content":"                    Task.printUnmarkedTask(taskNumber - 1, taskList);","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"denzelcjy"},"content":"                    continue;","lastModifiedDate":"2023-01-21"},{"lineNumber":61,"author":{"gitId":"denzelcjy"},"content":"                }","lastModifiedDate":"2023-01-21"},{"lineNumber":62,"author":{"gitId":"denzelcjy"},"content":"                if (nextInput[0].equals(\"todo\")) {","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"denzelcjy"},"content":"                    Task.addTodoTask(nextInput[1], taskList);","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"denzelcjy"},"content":"                    continue;","lastModifiedDate":"2023-02-03"},{"lineNumber":65,"author":{"gitId":"denzelcjy"},"content":"                }","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"denzelcjy"},"content":"                if (nextInput[0].equals(\"deadline\")) {","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"denzelcjy"},"content":"                    Task.addDeadlineTask(nextInput[1], taskList);","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"denzelcjy"},"content":"                    continue;","lastModifiedDate":"2023-02-03"},{"lineNumber":69,"author":{"gitId":"denzelcjy"},"content":"                }","lastModifiedDate":"2023-01-27"},{"lineNumber":70,"author":{"gitId":"denzelcjy"},"content":"                if (nextInput[0].equals(\"event\")) {","lastModifiedDate":"2023-01-27"},{"lineNumber":71,"author":{"gitId":"denzelcjy"},"content":"                    Task.addEventTask(nextInput[1], taskList);","lastModifiedDate":"2023-01-27"},{"lineNumber":72,"author":{"gitId":"denzelcjy"},"content":"                    continue;","lastModifiedDate":"2023-02-03"},{"lineNumber":73,"author":{"gitId":"denzelcjy"},"content":"                }","lastModifiedDate":"2023-02-03"},{"lineNumber":74,"author":{"gitId":"denzelcjy"},"content":"                throw new DukeException(\"     ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-02-03"},{"lineNumber":75,"author":{"gitId":"denzelcjy"},"content":"            } catch (DukeException exception) {","lastModifiedDate":"2023-02-03"},{"lineNumber":76,"author":{"gitId":"denzelcjy"},"content":"                printErrorMessage(exception.getMessage());","lastModifiedDate":"2023-02-03"},{"lineNumber":77,"author":{"gitId":"denzelcjy"},"content":"            } catch (ArrayIndexOutOfBoundsException exception) {","lastModifiedDate":"2023-02-03"},{"lineNumber":78,"author":{"gitId":"denzelcjy"},"content":"                //for the case of no space after calling a command","lastModifiedDate":"2023-02-03"},{"lineNumber":79,"author":{"gitId":"denzelcjy"},"content":"                printErrorMessage(\"     ☹ OOPS!!! The description of a \" + nextInput[0] + \" cannot be empty.\");","lastModifiedDate":"2023-02-03"},{"lineNumber":80,"author":{"gitId":"denzelcjy"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":81,"author":{"gitId":"denzelcjy"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":82,"author":{"gitId":"denzelcjy"},"content":"        endDuke();","lastModifiedDate":"2023-01-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":84,"author":{"gitId":"denzelcjy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":86,"author":{"gitId":"denzelcjy"},"content":"","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"-":10,"denzelcjy":76}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"denzelcjy"},"content":"package duke;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"denzelcjy"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"denzelcjy"},"content":"    protected String by;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"denzelcjy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"denzelcjy"},"content":"    public Deadline(String details, String by) {","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"denzelcjy"},"content":"        super(details);","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"denzelcjy"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"denzelcjy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"denzelcjy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"denzelcjy"},"content":"    public String getBy() {","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"denzelcjy"},"content":"        return this.by;","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"denzelcjy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"denzelcjy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"denzelcjy"},"content":"    public void setBy(String by) {","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"denzelcjy"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"denzelcjy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"denzelcjy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"denzelcjy"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"denzelcjy"},"content":"    public String toString() {","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"denzelcjy"},"content":"        return \"[D]\" + super.toString() +   \" (by: \" + this.by + \")\";","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"denzelcjy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"denzelcjy"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"denzelcjy":22}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"denzelcjy"},"content":"package duke;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"denzelcjy"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"denzelcjy"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"denzelcjy"},"content":"    public DukeException (String errorMessage) {","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"denzelcjy"},"content":"        super(errorMessage);","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"denzelcjy"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"denzelcjy"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"denzelcjy":7}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"denzelcjy"},"content":"package duke;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"denzelcjy"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"denzelcjy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"denzelcjy"},"content":"    protected String from;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"denzelcjy"},"content":"    protected String to;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"denzelcjy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"denzelcjy"},"content":"    public Event(String details, String from, String to) {","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"denzelcjy"},"content":"        super(details);","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"denzelcjy"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"denzelcjy"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"denzelcjy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"denzelcjy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"denzelcjy"},"content":"    public String getFrom() {","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"denzelcjy"},"content":"        return this.from;","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"denzelcjy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"denzelcjy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"denzelcjy"},"content":"    public String getTo() {","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"denzelcjy"},"content":"        return this.to;","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"denzelcjy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"denzelcjy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"denzelcjy"},"content":"    public void setFrom(String from) {","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"denzelcjy"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"denzelcjy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"denzelcjy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"denzelcjy"},"content":"    public void setTo(String to) {","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"denzelcjy"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"denzelcjy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"denzelcjy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"denzelcjy"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"denzelcjy"},"content":"    public String toString() {","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"denzelcjy"},"content":"        return \"[E]\" + super.toString() +   \" (from: \" + this.from + \" to: \" + this.to + \")\";","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"denzelcjy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"denzelcjy"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"denzelcjy":33}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"denzelcjy"},"content":"package duke;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"denzelcjy"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"denzelcjy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"denzelcjy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"denzelcjy"},"content":"public class Task {","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"denzelcjy"},"content":"    protected String details;","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"denzelcjy"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"denzelcjy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"denzelcjy"},"content":"    public Task(String details) {","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"denzelcjy"},"content":"        this.details \u003d details;","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"denzelcjy"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"denzelcjy"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"denzelcjy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"denzelcjy"},"content":"    public String getDetails() {","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"denzelcjy"},"content":"        return this.details;","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"denzelcjy"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"denzelcjy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"denzelcjy"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"denzelcjy"},"content":"        if (isDone) {","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"denzelcjy"},"content":"            return \"X\";","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"denzelcjy"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"denzelcjy"},"content":"        return \" \";","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"denzelcjy"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"denzelcjy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":25,"author":{"gitId":"denzelcjy"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"denzelcjy"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"denzelcjy"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":28,"author":{"gitId":"denzelcjy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":29,"author":{"gitId":"denzelcjy"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2023-01-21"},{"lineNumber":30,"author":{"gitId":"denzelcjy"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-21"},{"lineNumber":31,"author":{"gitId":"denzelcjy"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":32,"author":{"gitId":"denzelcjy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"denzelcjy"},"content":"    @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"denzelcjy"},"content":"    public String toString() {","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"denzelcjy"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.details;","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"denzelcjy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"denzelcjy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"denzelcjy"},"content":"    public static void printAddedTask(Task addedTask, int numOfTasks) {","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"denzelcjy"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"denzelcjy"},"content":"        System.out.println(\"     Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"denzelcjy"},"content":"        System.out.println(\"       \" + addedTask);","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"denzelcjy"},"content":"        System.out.println(\"     Now you have \" + numOfTasks + \" tasks in the list.\");","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"denzelcjy"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"denzelcjy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"denzelcjy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"denzelcjy"},"content":"    public static void printTaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"denzelcjy"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"denzelcjy"},"content":"        System.out.println(\"     Here are the tasks in your list:\");","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"denzelcjy"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"denzelcjy"},"content":"            System.out.println(\"     \" + (i + 1) + \".\" + taskList.get(i));","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"denzelcjy"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"denzelcjy"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"denzelcjy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"denzelcjy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"denzelcjy"},"content":"    public static void printMarkedTask(int taskNumber, ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"denzelcjy"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"denzelcjy"},"content":"        System.out.println(\"     Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"denzelcjy"},"content":"        System.out.println(\"       \" + taskList.get(taskNumber));","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"denzelcjy"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"denzelcjy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"denzelcjy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"denzelcjy"},"content":"    public static void printUnmarkedTask(int taskNumber, ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"denzelcjy"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"denzelcjy"},"content":"        System.out.println(\"     OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"denzelcjy"},"content":"        System.out.println(\"       \" + taskList.get(taskNumber));","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"denzelcjy"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"denzelcjy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"denzelcjy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"denzelcjy"},"content":"    public static void printErrorMessage(String errorMessage) {","lastModifiedDate":"2023-02-03"},{"lineNumber":70,"author":{"gitId":"denzelcjy"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2023-02-03"},{"lineNumber":71,"author":{"gitId":"denzelcjy"},"content":"        System.out.println(errorMessage);","lastModifiedDate":"2023-02-03"},{"lineNumber":72,"author":{"gitId":"denzelcjy"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2023-02-03"},{"lineNumber":73,"author":{"gitId":"denzelcjy"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":74,"author":{"gitId":"denzelcjy"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":75,"author":{"gitId":"denzelcjy"},"content":"    public static void addTodoTask(String description, ArrayList\u003cTask\u003e taskList) throws DukeException {","lastModifiedDate":"2023-02-05"},{"lineNumber":76,"author":{"gitId":"denzelcjy"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2023-02-03"},{"lineNumber":77,"author":{"gitId":"denzelcjy"},"content":"            //for the case where user keys in a space after the command","lastModifiedDate":"2023-02-03"},{"lineNumber":78,"author":{"gitId":"denzelcjy"},"content":"            throw new DukeException(\"     ☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-02-03"},{"lineNumber":79,"author":{"gitId":"denzelcjy"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":80,"author":{"gitId":"denzelcjy"},"content":"        Todo newTodoTask \u003d new Todo(description);","lastModifiedDate":"2023-01-27"},{"lineNumber":81,"author":{"gitId":"denzelcjy"},"content":"        taskList.add(newTodoTask);","lastModifiedDate":"2023-01-27"},{"lineNumber":82,"author":{"gitId":"denzelcjy"},"content":"        Task.printAddedTask(newTodoTask, taskList.size());","lastModifiedDate":"2023-01-27"},{"lineNumber":83,"author":{"gitId":"denzelcjy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":84,"author":{"gitId":"denzelcjy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":85,"author":{"gitId":"denzelcjy"},"content":"    public static void addDeadlineTask(String description, ArrayList\u003cTask\u003e taskList) throws DukeException {","lastModifiedDate":"2023-02-05"},{"lineNumber":86,"author":{"gitId":"denzelcjy"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2023-02-03"},{"lineNumber":87,"author":{"gitId":"denzelcjy"},"content":"            //for the case where user keys in a space after the command","lastModifiedDate":"2023-02-03"},{"lineNumber":88,"author":{"gitId":"denzelcjy"},"content":"            throw new DukeException(\"     ☹ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-02-03"},{"lineNumber":89,"author":{"gitId":"denzelcjy"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":90,"author":{"gitId":"denzelcjy"},"content":"        int firstSlashIndex \u003d description.indexOf(\"/\");","lastModifiedDate":"2023-01-27"},{"lineNumber":91,"author":{"gitId":"denzelcjy"},"content":"        int detailsEndIndex \u003d firstSlashIndex - 1;","lastModifiedDate":"2023-02-03"},{"lineNumber":92,"author":{"gitId":"denzelcjy"},"content":"        String details \u003d description.substring(0, detailsEndIndex);","lastModifiedDate":"2023-02-03"},{"lineNumber":93,"author":{"gitId":"denzelcjy"},"content":"        int byStartIndex \u003d firstSlashIndex + 4;","lastModifiedDate":"2023-02-03"},{"lineNumber":94,"author":{"gitId":"denzelcjy"},"content":"        String by \u003d description.substring(byStartIndex);","lastModifiedDate":"2023-02-03"},{"lineNumber":95,"author":{"gitId":"denzelcjy"},"content":"        Deadline newDeadlineTask \u003d new Deadline(details, by);","lastModifiedDate":"2023-01-27"},{"lineNumber":96,"author":{"gitId":"denzelcjy"},"content":"        taskList.add(newDeadlineTask);","lastModifiedDate":"2023-01-27"},{"lineNumber":97,"author":{"gitId":"denzelcjy"},"content":"        Task.printAddedTask(newDeadlineTask, taskList.size());","lastModifiedDate":"2023-01-27"},{"lineNumber":98,"author":{"gitId":"denzelcjy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":99,"author":{"gitId":"denzelcjy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":100,"author":{"gitId":"denzelcjy"},"content":"    public static void addEventTask(String description, ArrayList\u003cTask\u003e taskList) throws DukeException {","lastModifiedDate":"2023-02-05"},{"lineNumber":101,"author":{"gitId":"denzelcjy"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2023-02-03"},{"lineNumber":102,"author":{"gitId":"denzelcjy"},"content":"            //for the case where user keys in a space after the command","lastModifiedDate":"2023-02-03"},{"lineNumber":103,"author":{"gitId":"denzelcjy"},"content":"            throw new DukeException(\"     ☹ OOPS!!! The description of a event cannot be empty.\");","lastModifiedDate":"2023-02-03"},{"lineNumber":104,"author":{"gitId":"denzelcjy"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":105,"author":{"gitId":"denzelcjy"},"content":"        int firstSlashIndex \u003d description.indexOf(\"/\");","lastModifiedDate":"2023-01-27"},{"lineNumber":106,"author":{"gitId":"denzelcjy"},"content":"        int secondSlashIndex \u003d description.indexOf(\"/\", firstSlashIndex + 1);","lastModifiedDate":"2023-01-27"},{"lineNumber":107,"author":{"gitId":"denzelcjy"},"content":"        int detailsEndIndex \u003d firstSlashIndex - 1;","lastModifiedDate":"2023-02-03"},{"lineNumber":108,"author":{"gitId":"denzelcjy"},"content":"        String details \u003d description.substring(0, detailsEndIndex);","lastModifiedDate":"2023-02-03"},{"lineNumber":109,"author":{"gitId":"denzelcjy"},"content":"        int fromStartIndex \u003d firstSlashIndex + 6;","lastModifiedDate":"2023-02-03"},{"lineNumber":110,"author":{"gitId":"denzelcjy"},"content":"        int fromEndIndex \u003d secondSlashIndex - 1;","lastModifiedDate":"2023-02-03"},{"lineNumber":111,"author":{"gitId":"denzelcjy"},"content":"        String from \u003d description.substring(fromStartIndex, fromEndIndex);","lastModifiedDate":"2023-02-03"},{"lineNumber":112,"author":{"gitId":"denzelcjy"},"content":"        int toStartIndex \u003d secondSlashIndex + 4;","lastModifiedDate":"2023-02-03"},{"lineNumber":113,"author":{"gitId":"denzelcjy"},"content":"        String to \u003d description.substring(toStartIndex);","lastModifiedDate":"2023-02-03"},{"lineNumber":114,"author":{"gitId":"denzelcjy"},"content":"        Event newEventTask \u003d new Event(details, from, to);","lastModifiedDate":"2023-01-27"},{"lineNumber":115,"author":{"gitId":"denzelcjy"},"content":"        taskList.add(newEventTask);","lastModifiedDate":"2023-01-27"},{"lineNumber":116,"author":{"gitId":"denzelcjy"},"content":"        Task.printAddedTask(newEventTask, taskList.size());","lastModifiedDate":"2023-01-27"},{"lineNumber":117,"author":{"gitId":"denzelcjy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":118,"author":{"gitId":"denzelcjy"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"denzelcjy":118}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"denzelcjy"},"content":"package duke;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"denzelcjy"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"denzelcjy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"denzelcjy"},"content":"    public Todo(String details) {","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"denzelcjy"},"content":"        super(details);","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"denzelcjy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"denzelcjy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"denzelcjy"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"denzelcjy"},"content":"    public String toString() {","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"denzelcjy"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"denzelcjy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"denzelcjy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"denzelcjy"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"denzelcjy":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"denzelcjy"},"content":"todo borrow book","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"denzelcjy"},"content":"list","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"denzelcjy"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"denzelcjy"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"denzelcjy"},"content":"mark 1","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"denzelcjy"},"content":"list","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"denzelcjy"},"content":"mark 2","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"denzelcjy"},"content":"list","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"denzelcjy"},"content":"unmark 1","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"denzelcjy"},"content":"list","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"denzelcjy"},"content":"mark 3","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"denzelcjy"},"content":"list","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"denzelcjy"},"content":"todo","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"denzelcjy"},"content":"deadline","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"denzelcjy"},"content":"event","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"denzelcjy"},"content":"todo","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"denzelcjy"},"content":"blah","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"denzelcjy"},"content":"mark","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"denzelcjy"},"content":"unmark","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"denzelcjy"},"content":"bye","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"denzelcjy":20}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"denzelcjy"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"denzelcjy":1}}]
