[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"3. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"ERJUNZE"},"content":"   ____________________________________________________________","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"ERJUNZE"},"content":"   Hello! I\u0027m Duke","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"ERJUNZE"},"content":"   What can I do for you?","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"ERJUNZE"},"content":"   ____________________________________________________________","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ERJUNZE":4,"-":18}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"ERJUNZE"},"content":"Duke is a chatbot that can help you to manage your tasks,","lastModifiedDate":"2023-02-21"},{"lineNumber":4,"author":{"gitId":"ERJUNZE"},"content":"which you can use via a command line interface.","lastModifiedDate":"2023-02-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"ERJUNZE"},"content":"### Add tasks","lastModifiedDate":"2023-02-21"},{"lineNumber":9,"author":{"gitId":"ERJUNZE"},"content":"There are currently 3 types of tasks you can add to your task list.","lastModifiedDate":"2023-02-21"},{"lineNumber":10,"author":{"gitId":"ERJUNZE"},"content":"- [todo tasks](#todo-add-a-todo-task) (indicated with `[T]`)","lastModifiedDate":"2023-02-21"},{"lineNumber":11,"author":{"gitId":"ERJUNZE"},"content":"- [deadline tasks](#deadline-add-a-deadline-task) (indicated with `[D]`)","lastModifiedDate":"2023-02-21"},{"lineNumber":12,"author":{"gitId":"ERJUNZE"},"content":"- [event tasks](#event-add-an-event-task) (indicated with `[E]`)","lastModifiedDate":"2023-02-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":14,"author":{"gitId":"ERJUNZE"},"content":"### List tasks","lastModifiedDate":"2023-02-21"},{"lineNumber":15,"author":{"gitId":"ERJUNZE"},"content":"You can [list](#list-list-all-tasks) all the tasks in your task list.","lastModifiedDate":"2023-02-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":17,"author":{"gitId":"ERJUNZE"},"content":"### Mark tasks","lastModifiedDate":"2023-02-21"},{"lineNumber":18,"author":{"gitId":"ERJUNZE"},"content":"You can either mark tasks as done or not done.","lastModifiedDate":"2023-02-21"},{"lineNumber":19,"author":{"gitId":"ERJUNZE"},"content":"Completed tasks are indicated with a `[X]`, whereas incomplete tasks are indicated with a `[ ]`.","lastModifiedDate":"2023-02-21"},{"lineNumber":20,"author":{"gitId":"ERJUNZE"},"content":"- [mark as done](#mark-mark-a-task-as-done)","lastModifiedDate":"2023-02-21"},{"lineNumber":21,"author":{"gitId":"ERJUNZE"},"content":"- [mark as not done](#unmark-mark-a-task-as-not-done)","lastModifiedDate":"2023-02-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":23,"author":{"gitId":"ERJUNZE"},"content":"### Delete tasks","lastModifiedDate":"2023-02-21"},{"lineNumber":24,"author":{"gitId":"ERJUNZE"},"content":"You can [delete](#delete-delete-a-task) tasks from your task list.","lastModifiedDate":"2023-02-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":26,"author":{"gitId":"ERJUNZE"},"content":"### Find tasks","lastModifiedDate":"2023-02-21"},{"lineNumber":27,"author":{"gitId":"ERJUNZE"},"content":"You can [find](#find-find-tasks-with-substring) tasks containing a particular string.","lastModifiedDate":"2023-02-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":29,"author":{"gitId":"ERJUNZE"},"content":"### Local save","lastModifiedDate":"2023-02-21"},{"lineNumber":30,"author":{"gitId":"ERJUNZE"},"content":"Your task list is automatically saved locally and loaded upon startup.","lastModifiedDate":"2023-02-21"},{"lineNumber":31,"author":{"gitId":"ERJUNZE"},"content":"If you want to transfer your saved tasks, simply copy and paste the `save.txt` file.","lastModifiedDate":"2023-02-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"## Usage ","lastModifiedDate":"2019-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":35,"author":{"gitId":"ERJUNZE"},"content":"### `todo` Add a todo task","lastModifiedDate":"2023-02-21"},{"lineNumber":36,"author":{"gitId":"ERJUNZE"},"content":"Adds a new todo task to your task list. A task description must be provided.","lastModifiedDate":"2023-02-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":38,"author":{"gitId":"ERJUNZE"},"content":"Format: `todo \u003cdescription\u003e`","lastModifiedDate":"2023-02-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":40,"author":{"gitId":"ERJUNZE"},"content":"Example:","lastModifiedDate":"2023-02-21"},{"lineNumber":41,"author":{"gitId":"ERJUNZE"},"content":"- `todo buy groceries` creates a todo task with the description `buy groceries`.","lastModifiedDate":"2023-02-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":43,"author":{"gitId":"ERJUNZE"},"content":"### `deadline` Add a deadline task","lastModifiedDate":"2023-02-21"},{"lineNumber":44,"author":{"gitId":"ERJUNZE"},"content":"Adds a new deadline task to your task list.","lastModifiedDate":"2023-02-21"},{"lineNumber":45,"author":{"gitId":"ERJUNZE"},"content":"A task description and the deadline to be completed by must be provided.","lastModifiedDate":"2023-02-21"},{"lineNumber":46,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":47,"author":{"gitId":"ERJUNZE"},"content":"Format: `deadline \u003cdescription\u003e /by \u003ctime\u003e`","lastModifiedDate":"2023-02-21"},{"lineNumber":48,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":49,"author":{"gitId":"ERJUNZE"},"content":"Example:","lastModifiedDate":"2023-02-21"},{"lineNumber":50,"author":{"gitId":"ERJUNZE"},"content":"- `deadline do math homework /by Friday 3pm` creates a deadline task","lastModifiedDate":"2023-02-21"},{"lineNumber":51,"author":{"gitId":"ERJUNZE"},"content":"  with the description `do math homework` and deadline `Friday 3pm`.","lastModifiedDate":"2023-02-21"},{"lineNumber":52,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":53,"author":{"gitId":"ERJUNZE"},"content":"### `event` Add an event task","lastModifiedDate":"2023-02-21"},{"lineNumber":54,"author":{"gitId":"ERJUNZE"},"content":"Adds a new event task to your task list.","lastModifiedDate":"2023-02-21"},{"lineNumber":55,"author":{"gitId":"ERJUNZE"},"content":"A task description, as well as the start and end times of the event must be provided.","lastModifiedDate":"2023-02-21"},{"lineNumber":56,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":57,"author":{"gitId":"ERJUNZE"},"content":"Format: `event \u003cdescription\u003e /from \u003cstart time\u003e /to \u003cend time\u003e`","lastModifiedDate":"2023-02-21"},{"lineNumber":58,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":59,"author":{"gitId":"ERJUNZE"},"content":"Example:","lastModifiedDate":"2023-02-21"},{"lineNumber":60,"author":{"gitId":"ERJUNZE"},"content":"- `event attend lecture /from tomorrow 12pm /to 2pm` creates an event task with the description `attend lecture`,","lastModifiedDate":"2023-02-21"},{"lineNumber":61,"author":{"gitId":"ERJUNZE"},"content":"  with start time `tomorrow 12pm` and end time `2pm`.","lastModifiedDate":"2023-02-21"},{"lineNumber":62,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":63,"author":{"gitId":"ERJUNZE"},"content":"### `list` List all tasks","lastModifiedDate":"2023-02-21"},{"lineNumber":64,"author":{"gitId":"ERJUNZE"},"content":"Displays all tasks currently in the task list, in the order they were added.","lastModifiedDate":"2023-02-21"},{"lineNumber":65,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":66,"author":{"gitId":"ERJUNZE"},"content":"Format: `list`","lastModifiedDate":"2023-02-21"},{"lineNumber":67,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":68,"author":{"gitId":"ERJUNZE"},"content":"### `mark` Mark a task as done","lastModifiedDate":"2023-02-21"},{"lineNumber":69,"author":{"gitId":"ERJUNZE"},"content":"Marks the task with the given index as done.","lastModifiedDate":"2023-02-21"},{"lineNumber":70,"author":{"gitId":"ERJUNZE"},"content":"The index must be an integer from 1 to the size of the task list.","lastModifiedDate":"2023-02-21"},{"lineNumber":71,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":72,"author":{"gitId":"ERJUNZE"},"content":"Format: `mark \u003cindex\u003e`","lastModifiedDate":"2023-02-21"},{"lineNumber":73,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":74,"author":{"gitId":"ERJUNZE"},"content":"Example:","lastModifiedDate":"2023-02-21"},{"lineNumber":75,"author":{"gitId":"ERJUNZE"},"content":"- `mark 2` marks the task at index 2 of the task list as done.","lastModifiedDate":"2023-02-21"},{"lineNumber":76,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":77,"author":{"gitId":"ERJUNZE"},"content":"### `unmark` Mark a task as not done.","lastModifiedDate":"2023-02-21"},{"lineNumber":78,"author":{"gitId":"ERJUNZE"},"content":"Marks the task with the given index as *not* done.","lastModifiedDate":"2023-02-21"},{"lineNumber":79,"author":{"gitId":"ERJUNZE"},"content":"The index must be an integer from 1 to the size of the task list.","lastModifiedDate":"2023-02-21"},{"lineNumber":80,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":81,"author":{"gitId":"ERJUNZE"},"content":"Format: `unmark \u003cindex\u003e`","lastModifiedDate":"2023-02-21"},{"lineNumber":82,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":83,"author":{"gitId":"ERJUNZE"},"content":"Example:","lastModifiedDate":"2023-02-21"},{"lineNumber":84,"author":{"gitId":"ERJUNZE"},"content":"- `unmark 3` marks the at index 3 of the task list as not done.","lastModifiedDate":"2023-02-21"},{"lineNumber":85,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":86,"author":{"gitId":"ERJUNZE"},"content":"### `delete` Delete a task","lastModifiedDate":"2023-02-21"},{"lineNumber":87,"author":{"gitId":"ERJUNZE"},"content":"Deletes the task at the given index.","lastModifiedDate":"2023-02-21"},{"lineNumber":88,"author":{"gitId":"ERJUNZE"},"content":"The index must be an integer from 1 to the size of the task list.","lastModifiedDate":"2023-02-21"},{"lineNumber":89,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":90,"author":{"gitId":"ERJUNZE"},"content":"Format: `delete \u003cindex\u003e`","lastModifiedDate":"2023-02-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":92,"author":{"gitId":"ERJUNZE"},"content":"Example:","lastModifiedDate":"2023-02-21"},{"lineNumber":93,"author":{"gitId":"ERJUNZE"},"content":"- `delete 1` deletes the task at index 1 of the task list.","lastModifiedDate":"2023-02-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":95,"author":{"gitId":"ERJUNZE"},"content":"### `find` Find tasks with substring","lastModifiedDate":"2023-02-21"},{"lineNumber":96,"author":{"gitId":"ERJUNZE"},"content":"Displays all tasks currently in the task list whose description contain the given substring.","lastModifiedDate":"2023-02-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":98,"author":{"gitId":"ERJUNZE"},"content":"Format: `find \u003csearch string\u003e`","lastModifiedDate":"2023-02-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":100,"author":{"gitId":"ERJUNZE"},"content":"Example:","lastModifiedDate":"2023-02-21"},{"lineNumber":101,"author":{"gitId":"ERJUNZE"},"content":"- `find eat` lists all tasks with `eat` in their description.","lastModifiedDate":"2023-02-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":103,"author":{"gitId":"ERJUNZE"},"content":"### `bye` Exit the program","lastModifiedDate":"2023-02-21"},{"lineNumber":104,"author":{"gitId":"ERJUNZE"},"content":"Closes Duke.","lastModifiedDate":"2023-02-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":106,"author":{"gitId":"ERJUNZE"},"content":"Format: `bye`","lastModifiedDate":"2023-02-21"}],"authorContributionMap":{"ERJUNZE":84,"-":22}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ERJUNZE"},"content":"package duke.command;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"ERJUNZE"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"ERJUNZE"},"content":"/**","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"ERJUNZE"},"content":" * Parent class for Command objects.","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"ERJUNZE"},"content":" */","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"ERJUNZE"},"content":"public abstract class Command {","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"ERJUNZE"},"content":"     * Executes the command.","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"ERJUNZE"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"ERJUNZE"},"content":"     * @param taskList The task list that the command is executed on.","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"ERJUNZE"},"content":"    public abstract void run(TaskList taskList);","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"ERJUNZE"},"content":"     * Returns whether a command should terminate the program.","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"ERJUNZE"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"ERJUNZE"},"content":"     * @return True for the exit command, false otherwise.","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"ERJUNZE"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"ERJUNZE"},"content":"        return false;","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"ERJUNZE"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"ERJUNZE":24}},{"path":"src/main/java/duke/command/DeadlineTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ERJUNZE"},"content":"package duke.command;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"ERJUNZE"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"ERJUNZE"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"ERJUNZE"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"ERJUNZE"},"content":"import duke.ui.Errors;","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"ERJUNZE"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"ERJUNZE"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"ERJUNZE"},"content":"/**","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"ERJUNZE"},"content":" * Command for adding a deadline task to the task list.","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"ERJUNZE"},"content":" */","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"ERJUNZE"},"content":"public class DeadlineTaskCommand extends Command {","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"ERJUNZE"},"content":"    private String description;","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"ERJUNZE"},"content":"    private String by;","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"ERJUNZE"},"content":"     * Constructs a command that will add a deadline task to the task list.","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"ERJUNZE"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"ERJUNZE"},"content":"     * @param args Array that should contain the task description and deadline at index 1.","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"ERJUNZE"},"content":"     * @throws DukeException If no description or deadline is provided for the deadline task.","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"ERJUNZE"},"content":"    public DeadlineTaskCommand(String[] args) throws DukeException {","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"ERJUNZE"},"content":"        if (args.length \u003c 2) {","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"ERJUNZE"},"content":"            throw new DukeException(Errors.MISSING_DESCRIPTION.MESSAGE);","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"ERJUNZE"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":29,"author":{"gitId":"ERJUNZE"},"content":"        HashMap\u003cString, String\u003e splitArgs \u003d Parser.parseArguments(args[1],","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"ERJUNZE"},"content":"                new String[]{args[0], Deadline.DELIMITER_BY});","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"ERJUNZE"},"content":"        if (splitArgs.get(args[0]).isEmpty()) {","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"ERJUNZE"},"content":"            throw new DukeException(Errors.MISSING_DESCRIPTION.MESSAGE);","lastModifiedDate":"2023-02-06"},{"lineNumber":33,"author":{"gitId":"ERJUNZE"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":34,"author":{"gitId":"ERJUNZE"},"content":"        if (!splitArgs.containsKey(Deadline.DELIMITER_BY) || splitArgs.get(Deadline.DELIMITER_BY).isEmpty()) {","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"ERJUNZE"},"content":"            throw new DukeException(Errors.MISSING_TIME.MESSAGE);","lastModifiedDate":"2023-02-06"},{"lineNumber":36,"author":{"gitId":"ERJUNZE"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":37,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":38,"author":{"gitId":"ERJUNZE"},"content":"        description \u003d splitArgs.get(args[0]);","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"ERJUNZE"},"content":"        by \u003d splitArgs.get(Deadline.DELIMITER_BY);","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":41,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":42,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"ERJUNZE"},"content":"     * Adds a deadline task with the description and deadline provided in the constructor to the task list.","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"ERJUNZE"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"ERJUNZE"},"content":"     * @param taskList The task list that the command is executed on.","lastModifiedDate":"2023-02-20"},{"lineNumber":46,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":47,"author":{"gitId":"ERJUNZE"},"content":"    @Override","lastModifiedDate":"2023-02-06"},{"lineNumber":48,"author":{"gitId":"ERJUNZE"},"content":"    public void run(TaskList taskList) {","lastModifiedDate":"2023-02-06"},{"lineNumber":49,"author":{"gitId":"ERJUNZE"},"content":"        String taskString \u003d taskList.addTask(new Deadline(description, by));","lastModifiedDate":"2023-02-06"},{"lineNumber":50,"author":{"gitId":"ERJUNZE"},"content":"        Ui.printAddTaskMessage(taskString, taskList);","lastModifiedDate":"2023-02-06"},{"lineNumber":51,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":52,"author":{"gitId":"ERJUNZE"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"ERJUNZE":52}},{"path":"src/main/java/duke/command/DeleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ERJUNZE"},"content":"package duke.command;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"ERJUNZE"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"ERJUNZE"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"ERJUNZE"},"content":"import duke.ui.Errors;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"ERJUNZE"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"ERJUNZE"},"content":"/**","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"ERJUNZE"},"content":" * Command for deleting a task from the task list.","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"ERJUNZE"},"content":" */","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"ERJUNZE"},"content":"public class DeleteTaskCommand extends Command {","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"ERJUNZE"},"content":"    private int index;","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"ERJUNZE"},"content":"     * Constructs a command that will delete the task at the given index from the task list.","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"ERJUNZE"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"ERJUNZE"},"content":"     * @param command Array that should contain the index of the task to be deleted at index 1.","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"ERJUNZE"},"content":"     * @param taskList The task list that the task is being deleted from,","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"ERJUNZE"},"content":"     *                 needed for checking if the given index is a valid task index.","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"ERJUNZE"},"content":"     * @throws DukeException If no task index is provided, or if the provided index is not a number,","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"ERJUNZE"},"content":"     *                       or if the provided index is not from 1 to the size of the task list.","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"ERJUNZE"},"content":"    public DeleteTaskCommand(String[] command, TaskList taskList) throws DukeException {","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"ERJUNZE"},"content":"        if (command.length \u003c 2) {","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"ERJUNZE"},"content":"            throw new DukeException(Errors.MISSING_INDEX.MESSAGE);","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"ERJUNZE"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"ERJUNZE"},"content":"        try {","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"ERJUNZE"},"content":"            index \u003d Integer.parseInt(command[1]) - 1;","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"ERJUNZE"},"content":"            if (index \u003c 0 || index \u003e\u003d taskList.size()) {","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"ERJUNZE"},"content":"                throw new DukeException(Errors.INVALID_INDEX.MESSAGE);","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"ERJUNZE"},"content":"            }","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"ERJUNZE"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"ERJUNZE"},"content":"            throw new DukeException(Errors.INVALID_INDEX.MESSAGE);","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"ERJUNZE"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":37,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":38,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"ERJUNZE"},"content":"     * Deletes the task with the index specified in the constructor from the task list.","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"ERJUNZE"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":41,"author":{"gitId":"ERJUNZE"},"content":"     * @param taskList The task list that the command is executed on.","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"ERJUNZE"},"content":"    public void run(TaskList taskList) {","lastModifiedDate":"2023-02-11"},{"lineNumber":44,"author":{"gitId":"ERJUNZE"},"content":"        String taskString \u003d taskList.deleteTask(index);","lastModifiedDate":"2023-02-11"},{"lineNumber":45,"author":{"gitId":"ERJUNZE"},"content":"        Ui.printDeleteTaskMessage(taskString, taskList);","lastModifiedDate":"2023-02-11"},{"lineNumber":46,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":47,"author":{"gitId":"ERJUNZE"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"ERJUNZE":47}},{"path":"src/main/java/duke/command/EventTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ERJUNZE"},"content":"package duke.command;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"ERJUNZE"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"ERJUNZE"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"ERJUNZE"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"ERJUNZE"},"content":"import duke.ui.Errors;","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"ERJUNZE"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"ERJUNZE"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"ERJUNZE"},"content":"/**","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"ERJUNZE"},"content":" * Command for adding an event task to the task list.","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"ERJUNZE"},"content":" */","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"ERJUNZE"},"content":"public class EventTaskCommand extends Command {","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"ERJUNZE"},"content":"    private String description;","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"ERJUNZE"},"content":"    private String from;","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"ERJUNZE"},"content":"    private String to;","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"ERJUNZE"},"content":"     * Constructs a command that will add an event task to the task list.","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"ERJUNZE"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"ERJUNZE"},"content":"     * @param args Array that should contain the task description and start and end times at index 1.","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"ERJUNZE"},"content":"     * @throws DukeException If no description, start time, or end time is provided for the event task.","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"ERJUNZE"},"content":"    public EventTaskCommand(String[] args) throws DukeException {","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"ERJUNZE"},"content":"        if (args.length \u003c 2) {","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"ERJUNZE"},"content":"            throw new DukeException(Errors.MISSING_DESCRIPTION.MESSAGE);","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"ERJUNZE"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":29,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"ERJUNZE"},"content":"        HashMap\u003cString, String\u003e parsedArgs \u003d Parser.parseArguments(args[1],","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"ERJUNZE"},"content":"                new String[]{args[0], Event.DELIMITER_FROM, Event.DELIMITER_TO});","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"ERJUNZE"},"content":"        if (parsedArgs.get(args[0]).isEmpty()) {","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"ERJUNZE"},"content":"            throw new DukeException(Errors.MISSING_DESCRIPTION.MESSAGE);","lastModifiedDate":"2023-02-06"},{"lineNumber":34,"author":{"gitId":"ERJUNZE"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":35,"author":{"gitId":"ERJUNZE"},"content":"        if (!parsedArgs.containsKey(Event.DELIMITER_FROM)","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"ERJUNZE"},"content":"                || !parsedArgs.containsKey(Event.DELIMITER_TO)","lastModifiedDate":"2023-02-20"},{"lineNumber":37,"author":{"gitId":"ERJUNZE"},"content":"                || parsedArgs.get(Event.DELIMITER_FROM).isEmpty()","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"ERJUNZE"},"content":"                || parsedArgs.get(Event.DELIMITER_TO).isEmpty()) {","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"ERJUNZE"},"content":"            throw new DukeException(Errors.MISSING_TIME.MESSAGE);","lastModifiedDate":"2023-02-06"},{"lineNumber":40,"author":{"gitId":"ERJUNZE"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":41,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":42,"author":{"gitId":"ERJUNZE"},"content":"        description \u003d parsedArgs.get(args[0]);","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"ERJUNZE"},"content":"        from \u003d parsedArgs.get(Event.DELIMITER_FROM);","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"ERJUNZE"},"content":"        to \u003d parsedArgs.get(Event.DELIMITER_TO);","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":46,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":47,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":48,"author":{"gitId":"ERJUNZE"},"content":"     * Adds an event task with the description and deadline provided in the constructor to the task list.","lastModifiedDate":"2023-02-20"},{"lineNumber":49,"author":{"gitId":"ERJUNZE"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":50,"author":{"gitId":"ERJUNZE"},"content":"     * @param taskList The task list that the command is executed on.","lastModifiedDate":"2023-02-20"},{"lineNumber":51,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":52,"author":{"gitId":"ERJUNZE"},"content":"    @Override","lastModifiedDate":"2023-02-06"},{"lineNumber":53,"author":{"gitId":"ERJUNZE"},"content":"    public void run(TaskList taskList) {","lastModifiedDate":"2023-02-06"},{"lineNumber":54,"author":{"gitId":"ERJUNZE"},"content":"        String taskString \u003d taskList.addTask(new Event(description, from, to));","lastModifiedDate":"2023-02-06"},{"lineNumber":55,"author":{"gitId":"ERJUNZE"},"content":"        Ui.printAddTaskMessage(taskString, taskList);","lastModifiedDate":"2023-02-06"},{"lineNumber":56,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":57,"author":{"gitId":"ERJUNZE"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"ERJUNZE":57}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ERJUNZE"},"content":"package duke.command;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"ERJUNZE"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"ERJUNZE"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"ERJUNZE"},"content":"/**","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"ERJUNZE"},"content":" * Command for terminating the program.","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"ERJUNZE"},"content":" */","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"ERJUNZE"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"ERJUNZE"},"content":"     * Displays the shutdown message.","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"ERJUNZE"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"ERJUNZE"},"content":"     * @param taskList The task list that the command is executed on.","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"ERJUNZE"},"content":"    @Override","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"ERJUNZE"},"content":"    public void run(TaskList taskList) {","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"ERJUNZE"},"content":"        Ui.printExitMessage();","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"ERJUNZE"},"content":"    @Override","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"ERJUNZE"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"ERJUNZE"},"content":"        return true;","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"ERJUNZE"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"ERJUNZE":24}},{"path":"src/main/java/duke/command/FindTasksCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ERJUNZE"},"content":"package duke.command;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":3,"author":{"gitId":"ERJUNZE"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"ERJUNZE"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"ERJUNZE"},"content":"import duke.ui.Errors;","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"ERJUNZE"},"content":"import duke.ui.Messages;","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"ERJUNZE"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"ERJUNZE"},"content":"/**","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"ERJUNZE"},"content":" * A command for finding tasks with a specific string in their description.","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"ERJUNZE"},"content":" */","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"ERJUNZE"},"content":"public class FindTasksCommand extends Command {","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"ERJUNZE"},"content":"    private String filter;","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"ERJUNZE"},"content":"     * Constructs a command that will display tasks containing the specified string when run.","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"ERJUNZE"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"ERJUNZE"},"content":"     * @param args Array that should contain the search string at index 1.","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"ERJUNZE"},"content":"     * @throws DukeException If no search string is given.","lastModifiedDate":"2023-02-19"},{"lineNumber":20,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":21,"author":{"gitId":"ERJUNZE"},"content":"    FindTasksCommand(String[] args) throws DukeException {","lastModifiedDate":"2023-02-19"},{"lineNumber":22,"author":{"gitId":"ERJUNZE"},"content":"        if (args.length \u003c 2) {","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"ERJUNZE"},"content":"            throw new DukeException(Errors.MISSING_FILTER.MESSAGE);","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"ERJUNZE"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"ERJUNZE"},"content":"        this.filter \u003d args[1];","lastModifiedDate":"2023-02-19"},{"lineNumber":27,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":29,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":30,"author":{"gitId":"ERJUNZE"},"content":"     * Displays a task list filtered based on the search string specified in the constructor.","lastModifiedDate":"2023-02-19"},{"lineNumber":31,"author":{"gitId":"ERJUNZE"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":32,"author":{"gitId":"ERJUNZE"},"content":"     * @param taskList The task list that will be searched.","lastModifiedDate":"2023-02-19"},{"lineNumber":33,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":34,"author":{"gitId":"ERJUNZE"},"content":"    @Override","lastModifiedDate":"2023-02-18"},{"lineNumber":35,"author":{"gitId":"ERJUNZE"},"content":"    public void run(TaskList taskList) {","lastModifiedDate":"2023-02-18"},{"lineNumber":36,"author":{"gitId":"ERJUNZE"},"content":"        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2023-02-19"},{"lineNumber":37,"author":{"gitId":"ERJUNZE"},"content":"            Ui.print(Messages.EMPTY_LIST.MESSAGE);","lastModifiedDate":"2023-02-19"},{"lineNumber":38,"author":{"gitId":"ERJUNZE"},"content":"        } else {","lastModifiedDate":"2023-02-19"},{"lineNumber":39,"author":{"gitId":"ERJUNZE"},"content":"            String taskListString \u003d taskList.toString(filter);","lastModifiedDate":"2023-02-19"},{"lineNumber":40,"author":{"gitId":"ERJUNZE"},"content":"            if (taskListString.isEmpty()) {","lastModifiedDate":"2023-02-19"},{"lineNumber":41,"author":{"gitId":"ERJUNZE"},"content":"                Ui.print(Messages.EMPTY_FIND.MESSAGE);","lastModifiedDate":"2023-02-19"},{"lineNumber":42,"author":{"gitId":"ERJUNZE"},"content":"                return;","lastModifiedDate":"2023-02-19"},{"lineNumber":43,"author":{"gitId":"ERJUNZE"},"content":"            }","lastModifiedDate":"2023-02-19"},{"lineNumber":44,"author":{"gitId":"ERJUNZE"},"content":"            Ui.print(Messages.FIND_TASKS.MESSAGE, taskListString);","lastModifiedDate":"2023-02-19"},{"lineNumber":45,"author":{"gitId":"ERJUNZE"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":46,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":47,"author":{"gitId":"ERJUNZE"},"content":"}","lastModifiedDate":"2023-02-18"}],"authorContributionMap":{"ERJUNZE":47}},{"path":"src/main/java/duke/command/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ERJUNZE"},"content":"package duke.command;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"ERJUNZE"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"ERJUNZE"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"ERJUNZE"},"content":"/**","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"ERJUNZE"},"content":" * Command generated and run when there is an error with parsing the command.","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"ERJUNZE"},"content":" */","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"ERJUNZE"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"ERJUNZE"},"content":"    private String errorMessage;","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"ERJUNZE"},"content":"    private String command;","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"ERJUNZE"},"content":"     * Constructs a command that will display an error message and the relevant help message.","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"ERJUNZE"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"ERJUNZE"},"content":"     * @param errorMessage Description of the error.","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"ERJUNZE"},"content":"     * @param command Type of command that caused the error, to identify which help message to display.","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"ERJUNZE"},"content":"    public InvalidCommand(String errorMessage, String command) {","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"ERJUNZE"},"content":"        this.errorMessage \u003d errorMessage;","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"ERJUNZE"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"ERJUNZE"},"content":"     * Displays the error and help messages provided in the constructor.","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"ERJUNZE"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"ERJUNZE"},"content":"     * @param taskList The task list that the command is executed on.","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"ERJUNZE"},"content":"    @Override","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"ERJUNZE"},"content":"    public void run(TaskList taskList) {","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"ERJUNZE"},"content":"        Ui.printError(errorMessage, command);","lastModifiedDate":"2023-02-06"},{"lineNumber":32,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":33,"author":{"gitId":"ERJUNZE"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"ERJUNZE":33}},{"path":"src/main/java/duke/command/ListTasksCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ERJUNZE"},"content":"package duke.command;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"ERJUNZE"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"ERJUNZE"},"content":"import duke.ui.Messages;","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"ERJUNZE"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"ERJUNZE"},"content":"/**","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"ERJUNZE"},"content":" * Command for displaying the task list.","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"ERJUNZE"},"content":" */","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"ERJUNZE"},"content":"public class ListTasksCommand extends Command {","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"ERJUNZE"},"content":"     * Displays the task list.","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"ERJUNZE"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"ERJUNZE"},"content":"     * @param taskList The task list that the command is executed on.","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"ERJUNZE"},"content":"    @Override","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"ERJUNZE"},"content":"    public void run(TaskList taskList) {","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"ERJUNZE"},"content":"        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"ERJUNZE"},"content":"            Ui.print(Messages.EMPTY_LIST.MESSAGE);","lastModifiedDate":"2023-02-19"},{"lineNumber":20,"author":{"gitId":"ERJUNZE"},"content":"        } else {","lastModifiedDate":"2023-02-19"},{"lineNumber":21,"author":{"gitId":"ERJUNZE"},"content":"            Ui.print(Messages.LIST_TASKS.MESSAGE, taskList.toString());","lastModifiedDate":"2023-02-19"},{"lineNumber":22,"author":{"gitId":"ERJUNZE"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"ERJUNZE"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"ERJUNZE":24}},{"path":"src/main/java/duke/command/MarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ERJUNZE"},"content":"package duke.command;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"ERJUNZE"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"ERJUNZE"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"ERJUNZE"},"content":"import duke.ui.Errors;","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"ERJUNZE"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"ERJUNZE"},"content":"/**","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"ERJUNZE"},"content":" * Command for changing a task\u0027s completion status.","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"ERJUNZE"},"content":" */","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"ERJUNZE"},"content":"public class MarkTaskCommand extends Command {","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"ERJUNZE"},"content":"    private int index;","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"ERJUNZE"},"content":"    private boolean isDone;","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"ERJUNZE"},"content":"     * Constructs a command that will set the completion","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"ERJUNZE"},"content":"     * status of the task at the given index of the task list.","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"ERJUNZE"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"ERJUNZE"},"content":"     * @param command Array that should contain the index of the task to be marked or unmarked at index 1.","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"ERJUNZE"},"content":"     * @param taskList The task list that the task being marked or unmarked is from,","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"ERJUNZE"},"content":"     *                 needed for checking if the given index is a valid task index.","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"ERJUNZE"},"content":"     * @throws DukeException If no task index is provided, or if the provided index is not a number,","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"ERJUNZE"},"content":"     *                       or if the provided index is not from 1 to the size of the task list.","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"ERJUNZE"},"content":"    public MarkTaskCommand(String[] command, TaskList taskList) throws DukeException {","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"ERJUNZE"},"content":"        if (command.length \u003c 2) {","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"ERJUNZE"},"content":"            throw new DukeException(Errors.MISSING_INDEX.MESSAGE);","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"ERJUNZE"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":29,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"ERJUNZE"},"content":"        try {","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"ERJUNZE"},"content":"            isDone \u003d command[0].equals(\"mark\");","lastModifiedDate":"2023-02-06"},{"lineNumber":32,"author":{"gitId":"ERJUNZE"},"content":"            index \u003d Integer.parseInt(command[1]) - 1;","lastModifiedDate":"2023-02-06"},{"lineNumber":33,"author":{"gitId":"ERJUNZE"},"content":"            if (index \u003c 0 || index \u003e\u003d taskList.size()) {","lastModifiedDate":"2023-02-06"},{"lineNumber":34,"author":{"gitId":"ERJUNZE"},"content":"                throw new DukeException(Errors.INVALID_INDEX.MESSAGE);","lastModifiedDate":"2023-02-06"},{"lineNumber":35,"author":{"gitId":"ERJUNZE"},"content":"            }","lastModifiedDate":"2023-02-06"},{"lineNumber":36,"author":{"gitId":"ERJUNZE"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-06"},{"lineNumber":37,"author":{"gitId":"ERJUNZE"},"content":"            throw new DukeException(Errors.INVALID_INDEX.MESSAGE);","lastModifiedDate":"2023-02-06"},{"lineNumber":38,"author":{"gitId":"ERJUNZE"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":39,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":40,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":41,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"ERJUNZE"},"content":"     * Sets the completion status of the task at the index specified","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"ERJUNZE"},"content":"     * in the constructor to either true or false depending on whether","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"ERJUNZE"},"content":"     * a \"mark\" or \"unmark\" command was provided in the constructor.","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"ERJUNZE"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":46,"author":{"gitId":"ERJUNZE"},"content":"     * @param taskList The task list that the command is executed on.","lastModifiedDate":"2023-02-20"},{"lineNumber":47,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":48,"author":{"gitId":"ERJUNZE"},"content":"    @Override","lastModifiedDate":"2023-02-06"},{"lineNumber":49,"author":{"gitId":"ERJUNZE"},"content":"    public void run(TaskList taskList) {","lastModifiedDate":"2023-02-06"},{"lineNumber":50,"author":{"gitId":"ERJUNZE"},"content":"        String taskString \u003d taskList.setDone(index, isDone);","lastModifiedDate":"2023-02-06"},{"lineNumber":51,"author":{"gitId":"ERJUNZE"},"content":"        Ui.printMarkTaskMessage(taskString, isDone);","lastModifiedDate":"2023-02-06"},{"lineNumber":52,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":53,"author":{"gitId":"ERJUNZE"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"ERJUNZE":53}},{"path":"src/main/java/duke/command/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ERJUNZE"},"content":"package duke.command;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"ERJUNZE"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"ERJUNZE"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"ERJUNZE"},"content":"import duke.ui.Errors;","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"ERJUNZE"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"ERJUNZE"},"content":"import java.util.StringJoiner;","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"ERJUNZE"},"content":"/**","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"ERJUNZE"},"content":" * Class containing a method for parsing the commands.","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"ERJUNZE"},"content":" */","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"ERJUNZE"},"content":"public abstract class Parser {","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"ERJUNZE"},"content":"     * Splits the initial command string into its arguments.","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"ERJUNZE"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"ERJUNZE"},"content":"     * @param command The initial command string.","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"ERJUNZE"},"content":"     * @param flags The flags of the arguments that the command string are expected to contain.","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"ERJUNZE"},"content":"     * @return Map of flags to arguments extracted from the command string.","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"ERJUNZE"},"content":"     * @throws DukeException If the command string contains multiple of the same flag.","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"ERJUNZE"},"content":"    public static HashMap\u003cString, String\u003e parseArguments(String command, String[] flags) throws DukeException {","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"ERJUNZE"},"content":"        HashMap\u003cString, String\u003e args \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"ERJUNZE"},"content":"        StringJoiner currentArg \u003d new StringJoiner(\" \");","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"ERJUNZE"},"content":"        String currentFlag \u003d flags[0];","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"ERJUNZE"},"content":"        String[] splitCommand \u003d command.split(\" \");","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"ERJUNZE"},"content":"        for (String string : splitCommand) {","lastModifiedDate":"2023-02-06"},{"lineNumber":29,"author":{"gitId":"ERJUNZE"},"content":"            boolean newFlag \u003d false;","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"ERJUNZE"},"content":"            for (String flag : flags) {","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"ERJUNZE"},"content":"                if (!string.equals(flag)) {","lastModifiedDate":"2023-02-06"},{"lineNumber":32,"author":{"gitId":"ERJUNZE"},"content":"                    continue;","lastModifiedDate":"2023-02-06"},{"lineNumber":33,"author":{"gitId":"ERJUNZE"},"content":"                }","lastModifiedDate":"2023-02-06"},{"lineNumber":34,"author":{"gitId":"ERJUNZE"},"content":"                if (args.containsKey(flag) || currentFlag.equals(flag)) {","lastModifiedDate":"2023-02-06"},{"lineNumber":35,"author":{"gitId":"ERJUNZE"},"content":"                    throw new DukeException(Errors.INVALID_FORMAT.MESSAGE);","lastModifiedDate":"2023-02-06"},{"lineNumber":36,"author":{"gitId":"ERJUNZE"},"content":"                }","lastModifiedDate":"2023-02-06"},{"lineNumber":37,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":38,"author":{"gitId":"ERJUNZE"},"content":"                args.put(currentFlag, currentArg.toString());","lastModifiedDate":"2023-02-06"},{"lineNumber":39,"author":{"gitId":"ERJUNZE"},"content":"                currentArg \u003d new StringJoiner(\" \");","lastModifiedDate":"2023-02-06"},{"lineNumber":40,"author":{"gitId":"ERJUNZE"},"content":"                currentFlag \u003d flag;","lastModifiedDate":"2023-02-06"},{"lineNumber":41,"author":{"gitId":"ERJUNZE"},"content":"                newFlag \u003d true;","lastModifiedDate":"2023-02-06"},{"lineNumber":42,"author":{"gitId":"ERJUNZE"},"content":"                break;","lastModifiedDate":"2023-02-06"},{"lineNumber":43,"author":{"gitId":"ERJUNZE"},"content":"            }","lastModifiedDate":"2023-02-06"},{"lineNumber":44,"author":{"gitId":"ERJUNZE"},"content":"            if (!newFlag) {","lastModifiedDate":"2023-02-06"},{"lineNumber":45,"author":{"gitId":"ERJUNZE"},"content":"                currentArg.add(string);","lastModifiedDate":"2023-02-06"},{"lineNumber":46,"author":{"gitId":"ERJUNZE"},"content":"            }","lastModifiedDate":"2023-02-06"},{"lineNumber":47,"author":{"gitId":"ERJUNZE"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":48,"author":{"gitId":"ERJUNZE"},"content":"        args.put(currentFlag, currentArg.toString());","lastModifiedDate":"2023-02-06"},{"lineNumber":49,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":50,"author":{"gitId":"ERJUNZE"},"content":"        return args;","lastModifiedDate":"2023-02-06"},{"lineNumber":51,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":52,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":53,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":54,"author":{"gitId":"ERJUNZE"},"content":"     * Parses the given command string into a command that can be executed.","lastModifiedDate":"2023-02-20"},{"lineNumber":55,"author":{"gitId":"ERJUNZE"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":56,"author":{"gitId":"ERJUNZE"},"content":"     * @param string The unparsed command string.","lastModifiedDate":"2023-02-20"},{"lineNumber":57,"author":{"gitId":"ERJUNZE"},"content":"     * @param taskList The task list that the parsed command will be executed on.","lastModifiedDate":"2023-02-20"},{"lineNumber":58,"author":{"gitId":"ERJUNZE"},"content":"     * @return A command that can be executed by calling the run() method.","lastModifiedDate":"2023-02-20"},{"lineNumber":59,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":60,"author":{"gitId":"ERJUNZE"},"content":"    public static Command parseCommand(String string, TaskList taskList) {","lastModifiedDate":"2023-02-06"},{"lineNumber":61,"author":{"gitId":"ERJUNZE"},"content":"        String[] command \u003d string.trim().replaceAll(\"\\\\s+\", \" \").split(\" \", 2);","lastModifiedDate":"2023-02-06"},{"lineNumber":62,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":63,"author":{"gitId":"ERJUNZE"},"content":"        try {","lastModifiedDate":"2023-02-06"},{"lineNumber":64,"author":{"gitId":"ERJUNZE"},"content":"            switch (command[0]) {","lastModifiedDate":"2023-02-06"},{"lineNumber":65,"author":{"gitId":"ERJUNZE"},"content":"            case \"todo\":","lastModifiedDate":"2023-02-06"},{"lineNumber":66,"author":{"gitId":"ERJUNZE"},"content":"                return new ToDoTaskCommand(command);","lastModifiedDate":"2023-02-06"},{"lineNumber":67,"author":{"gitId":"ERJUNZE"},"content":"            case \"deadline\":","lastModifiedDate":"2023-02-06"},{"lineNumber":68,"author":{"gitId":"ERJUNZE"},"content":"                return new DeadlineTaskCommand(command);","lastModifiedDate":"2023-02-06"},{"lineNumber":69,"author":{"gitId":"ERJUNZE"},"content":"            case \"event\":","lastModifiedDate":"2023-02-06"},{"lineNumber":70,"author":{"gitId":"ERJUNZE"},"content":"                return new EventTaskCommand(command);","lastModifiedDate":"2023-02-06"},{"lineNumber":71,"author":{"gitId":"ERJUNZE"},"content":"            case \"list\":","lastModifiedDate":"2023-02-06"},{"lineNumber":72,"author":{"gitId":"ERJUNZE"},"content":"                return new ListTasksCommand();","lastModifiedDate":"2023-02-06"},{"lineNumber":73,"author":{"gitId":"ERJUNZE"},"content":"            case \"mark\":","lastModifiedDate":"2023-02-06"},{"lineNumber":74,"author":{"gitId":"ERJUNZE"},"content":"                // Fallthrough","lastModifiedDate":"2023-02-06"},{"lineNumber":75,"author":{"gitId":"ERJUNZE"},"content":"            case \"unmark\":","lastModifiedDate":"2023-02-06"},{"lineNumber":76,"author":{"gitId":"ERJUNZE"},"content":"                return new MarkTaskCommand(command, taskList);","lastModifiedDate":"2023-02-06"},{"lineNumber":77,"author":{"gitId":"ERJUNZE"},"content":"            case \"delete\":","lastModifiedDate":"2023-02-11"},{"lineNumber":78,"author":{"gitId":"ERJUNZE"},"content":"                return new DeleteTaskCommand(command, taskList);","lastModifiedDate":"2023-02-11"},{"lineNumber":79,"author":{"gitId":"ERJUNZE"},"content":"            case \"find\":","lastModifiedDate":"2023-02-18"},{"lineNumber":80,"author":{"gitId":"ERJUNZE"},"content":"                return new FindTasksCommand(command);","lastModifiedDate":"2023-02-18"},{"lineNumber":81,"author":{"gitId":"ERJUNZE"},"content":"            case \"bye\":","lastModifiedDate":"2023-02-06"},{"lineNumber":82,"author":{"gitId":"ERJUNZE"},"content":"                return new ExitCommand();","lastModifiedDate":"2023-02-06"},{"lineNumber":83,"author":{"gitId":"ERJUNZE"},"content":"            default:","lastModifiedDate":"2023-02-06"},{"lineNumber":84,"author":{"gitId":"ERJUNZE"},"content":"                return new InvalidCommand(Errors.INVALID_COMMAND.MESSAGE, command[0]);","lastModifiedDate":"2023-02-06"},{"lineNumber":85,"author":{"gitId":"ERJUNZE"},"content":"            }","lastModifiedDate":"2023-02-06"},{"lineNumber":86,"author":{"gitId":"ERJUNZE"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-06"},{"lineNumber":87,"author":{"gitId":"ERJUNZE"},"content":"            return new InvalidCommand(e.getMessage(), command[0]);","lastModifiedDate":"2023-02-06"},{"lineNumber":88,"author":{"gitId":"ERJUNZE"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":89,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":90,"author":{"gitId":"ERJUNZE"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"ERJUNZE":90}},{"path":"src/main/java/duke/command/ToDoTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ERJUNZE"},"content":"package duke.command;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"ERJUNZE"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"ERJUNZE"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"ERJUNZE"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"ERJUNZE"},"content":"import duke.ui.Errors;","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"ERJUNZE"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"ERJUNZE"},"content":"/**","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"ERJUNZE"},"content":" * Command for adding a todo task to the task list.","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"ERJUNZE"},"content":" */","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"ERJUNZE"},"content":"public class ToDoTaskCommand extends Command {","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"ERJUNZE"},"content":"    private String description;","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"ERJUNZE"},"content":"     * Constructs a command that will add a todo task to the task list.","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"ERJUNZE"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"ERJUNZE"},"content":"     * @param args Array that should contain the task description at index 1.","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"ERJUNZE"},"content":"     * @throws DukeException If no description is provided for the todo task.","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"ERJUNZE"},"content":"    public ToDoTaskCommand(String[] args) throws DukeException {","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"ERJUNZE"},"content":"        if (args.length \u003c 2) {","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"ERJUNZE"},"content":"            throw new DukeException(Errors.MISSING_DESCRIPTION.MESSAGE);","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"ERJUNZE"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"ERJUNZE"},"content":"        description \u003d args[1];","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":29,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"ERJUNZE"},"content":"     * Adds a todo task with the description provided in the constructor to the task list.","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"ERJUNZE"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"ERJUNZE"},"content":"     * @param taskList The task list that the command is executed on.","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"ERJUNZE"},"content":"    @Override","lastModifiedDate":"2023-02-06"},{"lineNumber":35,"author":{"gitId":"ERJUNZE"},"content":"    public void run(TaskList taskList) {","lastModifiedDate":"2023-02-06"},{"lineNumber":36,"author":{"gitId":"ERJUNZE"},"content":"        String taskString \u003d taskList.addTask(new ToDo(description));","lastModifiedDate":"2023-02-06"},{"lineNumber":37,"author":{"gitId":"ERJUNZE"},"content":"        Ui.printAddTaskMessage(taskString, taskList);","lastModifiedDate":"2023-02-06"},{"lineNumber":38,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":39,"author":{"gitId":"ERJUNZE"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"ERJUNZE":39}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ERJUNZE"},"content":"package duke.exception;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"ERJUNZE"},"content":"/**","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"ERJUNZE"},"content":" * A class that represents all the errors that can occur while the program is running.","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"ERJUNZE"},"content":" */","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"ERJUNZE"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"ERJUNZE"},"content":"     * Constructs an Exception object with the given error message.","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"ERJUNZE"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"ERJUNZE"},"content":"     * @param description The error message.","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"ERJUNZE"},"content":"    public DukeException(String description) {","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"ERJUNZE"},"content":"        super(description);","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"ERJUNZE"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"ERJUNZE":15}},{"path":"src/main/java/duke/main/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ERJUNZE"},"content":"package duke.main;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"ERJUNZE"},"content":"import duke.command.Command;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"ERJUNZE"},"content":"import duke.command.Parser;","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"ERJUNZE"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"ERJUNZE"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"ERJUNZE"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"ERJUNZE"},"content":"/**","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"ERJUNZE"},"content":" * The main class. Reads in commands from the terminal, then parses and runs them.","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"ERJUNZE"},"content":" */","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"ERJUNZE"},"content":"     * Main method called when the program is run.","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"ERJUNZE"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"ERJUNZE"},"content":"     * @param args Not used, should be empty anyway.","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"ERJUNZE"},"content":"        TaskList taskList \u003d Storage.readTasksFromFile(Storage.SAVE_PATH);","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"ERJUNZE"},"content":"        // Try-with-resources to automatically close Scanner","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"ERJUNZE"},"content":"        try (Scanner in \u003d new Scanner(System.in)) {","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"ERJUNZE"},"content":"            Ui.printStartMessage();","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"ERJUNZE"},"content":"            boolean isRunning \u003d true;","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"ERJUNZE"},"content":"            while (isRunning) {","lastModifiedDate":"2023-01-21"},{"lineNumber":28,"author":{"gitId":"ERJUNZE"},"content":"                String str \u003d in.nextLine();","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"ERJUNZE"},"content":"                Command command \u003d Parser.parseCommand(str, taskList);","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"ERJUNZE"},"content":"                command.run(taskList);","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"ERJUNZE"},"content":"                isRunning \u003d !command.isExit();","lastModifiedDate":"2023-02-06"},{"lineNumber":32,"author":{"gitId":"ERJUNZE"},"content":"                Storage.saveTasksToFile(Storage.SAVE_PATH, taskList);","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"ERJUNZE"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"ERJUNZE"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"ERJUNZE":32,"-":4}},{"path":"src/main/java/duke/main/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ERJUNZE"},"content":"package duke.main;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"ERJUNZE"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"ERJUNZE"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"ERJUNZE"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"ERJUNZE"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"ERJUNZE"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"ERJUNZE"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"ERJUNZE"},"content":"import duke.ui.Errors;","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"ERJUNZE"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"ERJUNZE"},"content":"import java.io.File;","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"ERJUNZE"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"ERJUNZE"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"ERJUNZE"},"content":"import java.util.StringJoiner;","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"ERJUNZE"},"content":"/**","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"ERJUNZE"},"content":" * A class for saving the task list as a text file, and subsequently loading it.","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"ERJUNZE"},"content":" */","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"ERJUNZE"},"content":"public abstract class Storage {","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"ERJUNZE"},"content":"    public static final String DELIMITER \u003d \"\\u001D\";","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"ERJUNZE"},"content":"    public static final String SAVE_PATH \u003d \"save.txt\";","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"ERJUNZE"},"content":"     * Checks if the save string (which represents a task) is valid,","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"ERJUNZE"},"content":"     * which means it has the expected number of arguments,","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"ERJUNZE"},"content":"     * and the completion status is either a \"1\" or a \"0\".","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"ERJUNZE"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"ERJUNZE"},"content":"     * @param splitTasks The save string split by the delimiter character.","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"ERJUNZE"},"content":"     * @param expectedArgs The expected number of arguments, which differs depending on the type of task.","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"ERJUNZE"},"content":"     * @return True if the save string is invalid, false otherwise.","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"ERJUNZE"},"content":"    private static boolean isInvalidSaveString(String[] splitTasks, int expectedArgs) {","lastModifiedDate":"2023-02-18"},{"lineNumber":34,"author":{"gitId":"ERJUNZE"},"content":"        return splitTasks.length !\u003d expectedArgs || !(splitTasks[1].equals(\"1\") || splitTasks[1].equals(\"0\"));","lastModifiedDate":"2023-02-18"},{"lineNumber":35,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":37,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"ERJUNZE"},"content":"     * Converts the save string read from the save file to a Task object.","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"ERJUNZE"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"ERJUNZE"},"content":"     * @param taskString The save string read from the file.","lastModifiedDate":"2023-02-20"},{"lineNumber":41,"author":{"gitId":"ERJUNZE"},"content":"     * @return The task object represented by the string.","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"ERJUNZE"},"content":"     * @throws DukeException If the save string is invalid.","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"ERJUNZE"},"content":"    private static Task convertStringToTask(String taskString) throws DukeException {","lastModifiedDate":"2023-02-11"},{"lineNumber":45,"author":{"gitId":"ERJUNZE"},"content":"        String[] splitTasks \u003d taskString.split(DELIMITER);","lastModifiedDate":"2023-02-11"},{"lineNumber":46,"author":{"gitId":"ERJUNZE"},"content":"        Task task;","lastModifiedDate":"2023-02-11"},{"lineNumber":47,"author":{"gitId":"ERJUNZE"},"content":"        switch (splitTasks[0]) {","lastModifiedDate":"2023-02-11"},{"lineNumber":48,"author":{"gitId":"ERJUNZE"},"content":"        case \"T\":","lastModifiedDate":"2023-02-11"},{"lineNumber":49,"author":{"gitId":"ERJUNZE"},"content":"            if (isInvalidSaveString(splitTasks, 3)) {","lastModifiedDate":"2023-02-18"},{"lineNumber":50,"author":{"gitId":"ERJUNZE"},"content":"                throw new DukeException(Errors.INVALID_SAVE.MESSAGE);","lastModifiedDate":"2023-02-11"},{"lineNumber":51,"author":{"gitId":"ERJUNZE"},"content":"            }","lastModifiedDate":"2023-02-11"},{"lineNumber":52,"author":{"gitId":"ERJUNZE"},"content":"            task \u003d new ToDo(splitTasks[2]);","lastModifiedDate":"2023-02-11"},{"lineNumber":53,"author":{"gitId":"ERJUNZE"},"content":"            task.setDone(splitTasks[1].equals(\"1\"));","lastModifiedDate":"2023-02-11"},{"lineNumber":54,"author":{"gitId":"ERJUNZE"},"content":"            return task;","lastModifiedDate":"2023-02-11"},{"lineNumber":55,"author":{"gitId":"ERJUNZE"},"content":"        case \"D\":","lastModifiedDate":"2023-02-11"},{"lineNumber":56,"author":{"gitId":"ERJUNZE"},"content":"            if (isInvalidSaveString(splitTasks, 4)) {","lastModifiedDate":"2023-02-18"},{"lineNumber":57,"author":{"gitId":"ERJUNZE"},"content":"                throw new DukeException(Errors.INVALID_SAVE.MESSAGE);","lastModifiedDate":"2023-02-11"},{"lineNumber":58,"author":{"gitId":"ERJUNZE"},"content":"            }","lastModifiedDate":"2023-02-11"},{"lineNumber":59,"author":{"gitId":"ERJUNZE"},"content":"            task \u003d new Deadline(splitTasks[2], splitTasks[3]);","lastModifiedDate":"2023-02-11"},{"lineNumber":60,"author":{"gitId":"ERJUNZE"},"content":"            task.setDone(splitTasks[1].equals(\"1\"));","lastModifiedDate":"2023-02-11"},{"lineNumber":61,"author":{"gitId":"ERJUNZE"},"content":"            return task;","lastModifiedDate":"2023-02-11"},{"lineNumber":62,"author":{"gitId":"ERJUNZE"},"content":"        case \"E\":","lastModifiedDate":"2023-02-11"},{"lineNumber":63,"author":{"gitId":"ERJUNZE"},"content":"            if (isInvalidSaveString(splitTasks, 5)) {","lastModifiedDate":"2023-02-18"},{"lineNumber":64,"author":{"gitId":"ERJUNZE"},"content":"                throw new DukeException(Errors.INVALID_SAVE.MESSAGE);","lastModifiedDate":"2023-02-11"},{"lineNumber":65,"author":{"gitId":"ERJUNZE"},"content":"            }","lastModifiedDate":"2023-02-11"},{"lineNumber":66,"author":{"gitId":"ERJUNZE"},"content":"            task \u003d new Event(splitTasks[2], splitTasks[3], splitTasks[4]);","lastModifiedDate":"2023-02-11"},{"lineNumber":67,"author":{"gitId":"ERJUNZE"},"content":"            task.setDone(splitTasks[1].equals(\"1\"));","lastModifiedDate":"2023-02-11"},{"lineNumber":68,"author":{"gitId":"ERJUNZE"},"content":"            return task;","lastModifiedDate":"2023-02-11"},{"lineNumber":69,"author":{"gitId":"ERJUNZE"},"content":"        default:","lastModifiedDate":"2023-02-11"},{"lineNumber":70,"author":{"gitId":"ERJUNZE"},"content":"            throw new DukeException(Errors.INVALID_SAVE.MESSAGE);","lastModifiedDate":"2023-02-11"},{"lineNumber":71,"author":{"gitId":"ERJUNZE"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":72,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":73,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":74,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":75,"author":{"gitId":"ERJUNZE"},"content":"     * Reads in the task list from the save file.","lastModifiedDate":"2023-02-20"},{"lineNumber":76,"author":{"gitId":"ERJUNZE"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":77,"author":{"gitId":"ERJUNZE"},"content":"     * @param filePath The path of the save file.","lastModifiedDate":"2023-02-20"},{"lineNumber":78,"author":{"gitId":"ERJUNZE"},"content":"     * @return The task list that was saved in the file.","lastModifiedDate":"2023-02-20"},{"lineNumber":79,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":80,"author":{"gitId":"ERJUNZE"},"content":"    public static TaskList readTasksFromFile(String filePath) {","lastModifiedDate":"2023-02-11"},{"lineNumber":81,"author":{"gitId":"ERJUNZE"},"content":"        try (Scanner in \u003d new Scanner(new File(filePath))) {","lastModifiedDate":"2023-02-11"},{"lineNumber":82,"author":{"gitId":"ERJUNZE"},"content":"            TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-02-11"},{"lineNumber":83,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":84,"author":{"gitId":"ERJUNZE"},"content":"            while (in.hasNextLine()) {","lastModifiedDate":"2023-02-11"},{"lineNumber":85,"author":{"gitId":"ERJUNZE"},"content":"                String taskString \u003d in.nextLine();","lastModifiedDate":"2023-02-11"},{"lineNumber":86,"author":{"gitId":"ERJUNZE"},"content":"                taskList.addTask(convertStringToTask(taskString));","lastModifiedDate":"2023-02-11"},{"lineNumber":87,"author":{"gitId":"ERJUNZE"},"content":"            }","lastModifiedDate":"2023-02-11"},{"lineNumber":88,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":89,"author":{"gitId":"ERJUNZE"},"content":"            return taskList;","lastModifiedDate":"2023-02-11"},{"lineNumber":90,"author":{"gitId":"ERJUNZE"},"content":"        } catch (java.io.FileNotFoundException e) {","lastModifiedDate":"2023-02-11"},{"lineNumber":91,"author":{"gitId":"ERJUNZE"},"content":"            return new TaskList();","lastModifiedDate":"2023-02-11"},{"lineNumber":92,"author":{"gitId":"ERJUNZE"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-11"},{"lineNumber":93,"author":{"gitId":"ERJUNZE"},"content":"            Ui.printError(e.getMessage(), \"save\");","lastModifiedDate":"2023-02-11"},{"lineNumber":94,"author":{"gitId":"ERJUNZE"},"content":"            return new TaskList();","lastModifiedDate":"2023-02-11"},{"lineNumber":95,"author":{"gitId":"ERJUNZE"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":96,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":97,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":98,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":99,"author":{"gitId":"ERJUNZE"},"content":"     * Writes the current task list to the save file.","lastModifiedDate":"2023-02-20"},{"lineNumber":100,"author":{"gitId":"ERJUNZE"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":101,"author":{"gitId":"ERJUNZE"},"content":"     * @param filePath The path of the save file.","lastModifiedDate":"2023-02-20"},{"lineNumber":102,"author":{"gitId":"ERJUNZE"},"content":"     * @param taskList The task list being saved.","lastModifiedDate":"2023-02-20"},{"lineNumber":103,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":104,"author":{"gitId":"ERJUNZE"},"content":"    public static void saveTasksToFile(String filePath, TaskList taskList) {","lastModifiedDate":"2023-02-11"},{"lineNumber":105,"author":{"gitId":"ERJUNZE"},"content":"        try (FileWriter out \u003d new FileWriter(filePath)) {","lastModifiedDate":"2023-02-11"},{"lineNumber":106,"author":{"gitId":"ERJUNZE"},"content":"            out.write(taskList.toSaveString());","lastModifiedDate":"2023-02-20"},{"lineNumber":107,"author":{"gitId":"ERJUNZE"},"content":"        } catch (java.io.IOException e) {","lastModifiedDate":"2023-02-11"},{"lineNumber":108,"author":{"gitId":"ERJUNZE"},"content":"            Ui.printError(Errors.FAILED_SAVE.MESSAGE, \"save\");","lastModifiedDate":"2023-02-11"},{"lineNumber":109,"author":{"gitId":"ERJUNZE"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":110,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":111,"author":{"gitId":"ERJUNZE"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"ERJUNZE":111}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ERJUNZE"},"content":"package duke.task;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"ERJUNZE"},"content":"/**","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"ERJUNZE"},"content":" * Task object with an additional deadline time parameter.","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"ERJUNZE"},"content":" */","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"ERJUNZE"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"ERJUNZE"},"content":"    public static final String DELIMITER_BY \u003d \"/by\";","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"ERJUNZE"},"content":"    private String by;","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"ERJUNZE"},"content":"     * Constructs a deadline task with the given description and deadline.","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"ERJUNZE"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"ERJUNZE"},"content":"     * @param description Description of the deadline task.","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"ERJUNZE"},"content":"     * @param by Time that the task should be completed by.","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"ERJUNZE"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"ERJUNZE"},"content":"        super(description);","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"ERJUNZE"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":22,"author":{"gitId":"ERJUNZE"},"content":"     * Converts the deadline task into its string representation,","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"ERJUNZE"},"content":"     * which contains its task type, completion status,","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"ERJUNZE"},"content":"     * description, and the time it should be completed by.","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"ERJUNZE"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"ERJUNZE"},"content":"     * @return String representation of the deadline task.","lastModifiedDate":"2023-02-19"},{"lineNumber":27,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":28,"author":{"gitId":"ERJUNZE"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"ERJUNZE"},"content":"    public String toString() {","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"ERJUNZE"},"content":"        return \" [D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"ERJUNZE"},"content":"    @Override","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"ERJUNZE"},"content":"    public String toSaveString() {","lastModifiedDate":"2023-02-19"},{"lineNumber":35,"author":{"gitId":"ERJUNZE"},"content":"        return super.toSaveString(\"D\", isDone ? \"1\" : \"0\", description, by);","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":37,"author":{"gitId":"ERJUNZE"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"ERJUNZE":37}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ERJUNZE"},"content":"package duke.task;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"ERJUNZE"},"content":"/**","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"ERJUNZE"},"content":" * Task object with additional from and to time parameters.","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"ERJUNZE"},"content":" */","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"ERJUNZE"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"ERJUNZE"},"content":"    public static final String DELIMITER_FROM \u003d \"/from\";","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"ERJUNZE"},"content":"    public static final String DELIMITER_TO \u003d \"/to\";","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"ERJUNZE"},"content":"    private String from;","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"ERJUNZE"},"content":"    private String to;","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"ERJUNZE"},"content":"     * Constructs an event task with the given description and deadline.","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"ERJUNZE"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"ERJUNZE"},"content":"     * @param description Description of the deadline task.","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"ERJUNZE"},"content":"     * @param from Time that the event starts at.","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"ERJUNZE"},"content":"     * @param to Time that the event ends at.","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"ERJUNZE"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"ERJUNZE"},"content":"        super(description);","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"ERJUNZE"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"ERJUNZE"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"ERJUNZE"},"content":"     * Converts the event task into its string representation,","lastModifiedDate":"2023-02-19"},{"lineNumber":27,"author":{"gitId":"ERJUNZE"},"content":"     * which contains its task type, completion status,","lastModifiedDate":"2023-02-19"},{"lineNumber":28,"author":{"gitId":"ERJUNZE"},"content":"     * description, and its start and end times.","lastModifiedDate":"2023-02-19"},{"lineNumber":29,"author":{"gitId":"ERJUNZE"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":30,"author":{"gitId":"ERJUNZE"},"content":"     * @return String representation of the event task.","lastModifiedDate":"2023-02-19"},{"lineNumber":31,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":32,"author":{"gitId":"ERJUNZE"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"ERJUNZE"},"content":"    public String toString() {","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"ERJUNZE"},"content":"        return \" [E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":37,"author":{"gitId":"ERJUNZE"},"content":"    @Override","lastModifiedDate":"2023-02-11"},{"lineNumber":38,"author":{"gitId":"ERJUNZE"},"content":"    public String toSaveString() {","lastModifiedDate":"2023-02-19"},{"lineNumber":39,"author":{"gitId":"ERJUNZE"},"content":"        return super.toSaveString(\"E\", isDone ? \"1\" : \"0\", description, from, to);","lastModifiedDate":"2023-02-11"},{"lineNumber":40,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":41,"author":{"gitId":"ERJUNZE"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"ERJUNZE":41}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ERJUNZE"},"content":"package duke.task;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"ERJUNZE"},"content":"import duke.main.Storage;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"ERJUNZE"},"content":"import java.util.StringJoiner;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"ERJUNZE"},"content":"/**","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"ERJUNZE"},"content":" * Parent class for Task objects.","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"ERJUNZE"},"content":" */","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"ERJUNZE"},"content":"public abstract class Task {","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"ERJUNZE"},"content":"    protected String description;","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"ERJUNZE"},"content":"    protected boolean isDone \u003d false;","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"ERJUNZE"},"content":"     * Constructs a task with the given description.","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"ERJUNZE"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"ERJUNZE"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"ERJUNZE"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"ERJUNZE"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"ERJUNZE"},"content":"     * Sets the task\u0027s completion status.","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"ERJUNZE"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"ERJUNZE"},"content":"     * @param isDone Whether the task should be marked as completed.","lastModifiedDate":"2023-02-19"},{"lineNumber":27,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":28,"author":{"gitId":"ERJUNZE"},"content":"    public void setDone(boolean isDone) {","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"ERJUNZE"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":33,"author":{"gitId":"ERJUNZE"},"content":"     * Checks if the task description contains the specified string.","lastModifiedDate":"2023-02-19"},{"lineNumber":34,"author":{"gitId":"ERJUNZE"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":35,"author":{"gitId":"ERJUNZE"},"content":"     * @param filter The string that the task description will be searched for.","lastModifiedDate":"2023-02-19"},{"lineNumber":36,"author":{"gitId":"ERJUNZE"},"content":"     * @return True if the task description contains the search string, false otherwise.","lastModifiedDate":"2023-02-19"},{"lineNumber":37,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":38,"author":{"gitId":"ERJUNZE"},"content":"    public boolean containsFilter(String filter) {","lastModifiedDate":"2023-02-18"},{"lineNumber":39,"author":{"gitId":"ERJUNZE"},"content":"        return description.contains(filter);","lastModifiedDate":"2023-02-18"},{"lineNumber":40,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":41,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":42,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":43,"author":{"gitId":"ERJUNZE"},"content":"     * Converts the task into its string representation,","lastModifiedDate":"2023-02-19"},{"lineNumber":44,"author":{"gitId":"ERJUNZE"},"content":"     * which contains its completion status, description, and possibly other parameters.","lastModifiedDate":"2023-02-19"},{"lineNumber":45,"author":{"gitId":"ERJUNZE"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":46,"author":{"gitId":"ERJUNZE"},"content":"     * @return String representation of the task.","lastModifiedDate":"2023-02-19"},{"lineNumber":47,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":48,"author":{"gitId":"ERJUNZE"},"content":"    public String toString() {","lastModifiedDate":"2023-01-22"},{"lineNumber":49,"author":{"gitId":"ERJUNZE"},"content":"        return \"[\" + (isDone ? \"X\" : \" \") + \"] \" + description;","lastModifiedDate":"2023-01-22"},{"lineNumber":50,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":51,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":52,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":53,"author":{"gitId":"ERJUNZE"},"content":"     * Converts the task into its string representation for saving purposes,","lastModifiedDate":"2023-02-19"},{"lineNumber":54,"author":{"gitId":"ERJUNZE"},"content":"     * which contains delimiter characters for easier parsing when loading.","lastModifiedDate":"2023-02-19"},{"lineNumber":55,"author":{"gitId":"ERJUNZE"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":56,"author":{"gitId":"ERJUNZE"},"content":"     * @return String representation of the task meant for saving purposes only.","lastModifiedDate":"2023-02-19"},{"lineNumber":57,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":58,"author":{"gitId":"ERJUNZE"},"content":"    public abstract String toSaveString();","lastModifiedDate":"2023-02-19"},{"lineNumber":59,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":60,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":61,"author":{"gitId":"ERJUNZE"},"content":"     * Converts the given task parameters into a string representation for saving purposes.","lastModifiedDate":"2023-02-19"},{"lineNumber":62,"author":{"gitId":"ERJUNZE"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":63,"author":{"gitId":"ERJUNZE"},"content":"     * @param taskParameters The parameters of the task, such as its type and description.","lastModifiedDate":"2023-02-19"},{"lineNumber":64,"author":{"gitId":"ERJUNZE"},"content":"     * @return String representation of the task meant for saving purposes only.","lastModifiedDate":"2023-02-19"},{"lineNumber":65,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":66,"author":{"gitId":"ERJUNZE"},"content":"    public String toSaveString(String... taskParameters) {","lastModifiedDate":"2023-02-11"},{"lineNumber":67,"author":{"gitId":"ERJUNZE"},"content":"        StringJoiner saveString \u003d new StringJoiner(Storage.DELIMITER);","lastModifiedDate":"2023-02-11"},{"lineNumber":68,"author":{"gitId":"ERJUNZE"},"content":"        for (String string : taskParameters) {","lastModifiedDate":"2023-02-11"},{"lineNumber":69,"author":{"gitId":"ERJUNZE"},"content":"            saveString.add(string);","lastModifiedDate":"2023-02-11"},{"lineNumber":70,"author":{"gitId":"ERJUNZE"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":71,"author":{"gitId":"ERJUNZE"},"content":"        return saveString.toString();","lastModifiedDate":"2023-02-11"},{"lineNumber":72,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":73,"author":{"gitId":"ERJUNZE"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"ERJUNZE":73}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ERJUNZE"},"content":"package duke.task;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"ERJUNZE"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"ERJUNZE"},"content":"import java.util.StringJoiner;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"ERJUNZE"},"content":"/**","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"ERJUNZE"},"content":" * A list of Task objects representing the current list of tasks.","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"ERJUNZE"},"content":" */","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"ERJUNZE"},"content":"public class TaskList {","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"ERJUNZE"},"content":"    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"ERJUNZE"},"content":"     * Returns the number of tasks in this task list.","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"ERJUNZE"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"ERJUNZE"},"content":"     * @return The number of tasks in this task list.","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"ERJUNZE"},"content":"    public int size() {","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"ERJUNZE"},"content":"        return tasks.size();","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":22,"author":{"gitId":"ERJUNZE"},"content":"     * Returns the task at the given index of the task list.","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"ERJUNZE"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"ERJUNZE"},"content":"     * @param index The index of the task to return.","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"ERJUNZE"},"content":"     *              Must be between 1 and the size of the task list.","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"ERJUNZE"},"content":"     * @return The task at the given index of the task list.","lastModifiedDate":"2023-02-19"},{"lineNumber":27,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":28,"author":{"gitId":"ERJUNZE"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"ERJUNZE"},"content":"        return tasks.get(index);","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":33,"author":{"gitId":"ERJUNZE"},"content":"     * Appends the given task to the task list.","lastModifiedDate":"2023-02-19"},{"lineNumber":34,"author":{"gitId":"ERJUNZE"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":35,"author":{"gitId":"ERJUNZE"},"content":"     * @param task The task to be added to the task list.","lastModifiedDate":"2023-02-19"},{"lineNumber":36,"author":{"gitId":"ERJUNZE"},"content":"     * @return String representation of the task that was added.","lastModifiedDate":"2023-02-19"},{"lineNumber":37,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":38,"author":{"gitId":"ERJUNZE"},"content":"    public String addTask(Task task) {","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"ERJUNZE"},"content":"        tasks.add(task);","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"ERJUNZE"},"content":"        return task.toString();","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":44,"author":{"gitId":"ERJUNZE"},"content":"     * Sets the completion status of the task at the given index of the task list.","lastModifiedDate":"2023-02-19"},{"lineNumber":45,"author":{"gitId":"ERJUNZE"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":46,"author":{"gitId":"ERJUNZE"},"content":"     * @param index The index of the task whose completion status should be set.","lastModifiedDate":"2023-02-19"},{"lineNumber":47,"author":{"gitId":"ERJUNZE"},"content":"     *              Must be between 1 and the size of the task list.","lastModifiedDate":"2023-02-19"},{"lineNumber":48,"author":{"gitId":"ERJUNZE"},"content":"     * @param isDone Whether the task should be marked as completed.","lastModifiedDate":"2023-02-19"},{"lineNumber":49,"author":{"gitId":"ERJUNZE"},"content":"     * @return String representation of the task whose completion status was set.","lastModifiedDate":"2023-02-19"},{"lineNumber":50,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":51,"author":{"gitId":"ERJUNZE"},"content":"    public String setDone(int index, boolean isDone) {","lastModifiedDate":"2023-02-19"},{"lineNumber":52,"author":{"gitId":"ERJUNZE"},"content":"        tasks.get(index).setDone(isDone);","lastModifiedDate":"2023-02-19"},{"lineNumber":53,"author":{"gitId":"ERJUNZE"},"content":"        return tasks.get(index).toString();","lastModifiedDate":"2023-02-19"},{"lineNumber":54,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":56,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":57,"author":{"gitId":"ERJUNZE"},"content":"     * Deletes the task at the given index of the task list.","lastModifiedDate":"2023-02-19"},{"lineNumber":58,"author":{"gitId":"ERJUNZE"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":59,"author":{"gitId":"ERJUNZE"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2023-02-19"},{"lineNumber":60,"author":{"gitId":"ERJUNZE"},"content":"     *              Must be between 1 and the size of the task list.","lastModifiedDate":"2023-02-19"},{"lineNumber":61,"author":{"gitId":"ERJUNZE"},"content":"     * @return String representation of the task that was deleted.","lastModifiedDate":"2023-02-19"},{"lineNumber":62,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":63,"author":{"gitId":"ERJUNZE"},"content":"    public String deleteTask(int index) {","lastModifiedDate":"2023-02-19"},{"lineNumber":64,"author":{"gitId":"ERJUNZE"},"content":"        String taskString \u003d tasks.get(index).toString();","lastModifiedDate":"2023-02-19"},{"lineNumber":65,"author":{"gitId":"ERJUNZE"},"content":"        tasks.remove(index);","lastModifiedDate":"2023-02-19"},{"lineNumber":66,"author":{"gitId":"ERJUNZE"},"content":"        return taskString;","lastModifiedDate":"2023-02-11"},{"lineNumber":67,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":68,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":69,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":70,"author":{"gitId":"ERJUNZE"},"content":"     * Converts the task list into its string representation.","lastModifiedDate":"2023-02-19"},{"lineNumber":71,"author":{"gitId":"ERJUNZE"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":72,"author":{"gitId":"ERJUNZE"},"content":"     * @return String representation of the task list.","lastModifiedDate":"2023-02-19"},{"lineNumber":73,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":74,"author":{"gitId":"ERJUNZE"},"content":"    public String toString() {","lastModifiedDate":"2023-01-30"},{"lineNumber":75,"author":{"gitId":"ERJUNZE"},"content":"        StringJoiner taskListString \u003d new StringJoiner(System.lineSeparator());","lastModifiedDate":"2023-01-30"},{"lineNumber":76,"author":{"gitId":"ERJUNZE"},"content":"        for (int i \u003d 0; i \u003c size(); i++) {","lastModifiedDate":"2023-01-30"},{"lineNumber":77,"author":{"gitId":"ERJUNZE"},"content":"            taskListString.add((i + 1) + \".\" + getTask(i).toString());","lastModifiedDate":"2023-01-30"},{"lineNumber":78,"author":{"gitId":"ERJUNZE"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":79,"author":{"gitId":"ERJUNZE"},"content":"        return taskListString.toString();","lastModifiedDate":"2023-01-30"},{"lineNumber":80,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":81,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":82,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":83,"author":{"gitId":"ERJUNZE"},"content":"     * Filters the task list before converting it into its string representation.","lastModifiedDate":"2023-02-19"},{"lineNumber":84,"author":{"gitId":"ERJUNZE"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":85,"author":{"gitId":"ERJUNZE"},"content":"     * @param filter The string that task descriptions should contain to be filtered.","lastModifiedDate":"2023-02-19"},{"lineNumber":86,"author":{"gitId":"ERJUNZE"},"content":"     * @return A string representation of the filtered task list.","lastModifiedDate":"2023-02-19"},{"lineNumber":87,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":88,"author":{"gitId":"ERJUNZE"},"content":"    public String toString(String filter) {","lastModifiedDate":"2023-02-18"},{"lineNumber":89,"author":{"gitId":"ERJUNZE"},"content":"        StringJoiner taskListString \u003d new StringJoiner(System.lineSeparator());","lastModifiedDate":"2023-02-18"},{"lineNumber":90,"author":{"gitId":"ERJUNZE"},"content":"        for (int i \u003d 0, index \u003d 0; i \u003c size(); i++) {","lastModifiedDate":"2023-02-18"},{"lineNumber":91,"author":{"gitId":"ERJUNZE"},"content":"            if (getTask(i).containsFilter(filter)) {","lastModifiedDate":"2023-02-18"},{"lineNumber":92,"author":{"gitId":"ERJUNZE"},"content":"                taskListString.add((++index) + \".\" + getTask(i).toString());","lastModifiedDate":"2023-02-18"},{"lineNumber":93,"author":{"gitId":"ERJUNZE"},"content":"            }","lastModifiedDate":"2023-02-18"},{"lineNumber":94,"author":{"gitId":"ERJUNZE"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":95,"author":{"gitId":"ERJUNZE"},"content":"        return taskListString.toString();","lastModifiedDate":"2023-02-18"},{"lineNumber":96,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":97,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":98,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":99,"author":{"gitId":"ERJUNZE"},"content":"     * Converts the task list into its string representation for saving purposes,","lastModifiedDate":"2023-02-20"},{"lineNumber":100,"author":{"gitId":"ERJUNZE"},"content":"     * which contains delimiter characters for easier parsing when loading.","lastModifiedDate":"2023-02-20"},{"lineNumber":101,"author":{"gitId":"ERJUNZE"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":102,"author":{"gitId":"ERJUNZE"},"content":"     * @return String representation of the task list meant for saving purposes only.","lastModifiedDate":"2023-02-20"},{"lineNumber":103,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":104,"author":{"gitId":"ERJUNZE"},"content":"    public String toSaveString() {","lastModifiedDate":"2023-02-20"},{"lineNumber":105,"author":{"gitId":"ERJUNZE"},"content":"        StringJoiner taskListString \u003d new StringJoiner(System.lineSeparator());","lastModifiedDate":"2023-02-20"},{"lineNumber":106,"author":{"gitId":"ERJUNZE"},"content":"        for (int i \u003d 0; i \u003c size(); i++) {","lastModifiedDate":"2023-02-20"},{"lineNumber":107,"author":{"gitId":"ERJUNZE"},"content":"            taskListString.add(getTask(i).toSaveString());","lastModifiedDate":"2023-02-20"},{"lineNumber":108,"author":{"gitId":"ERJUNZE"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":109,"author":{"gitId":"ERJUNZE"},"content":"        return taskListString.toString();","lastModifiedDate":"2023-02-20"},{"lineNumber":110,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":111,"author":{"gitId":"ERJUNZE"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"ERJUNZE":111}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ERJUNZE"},"content":"package duke.task;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"ERJUNZE"},"content":"/**","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"ERJUNZE"},"content":" * Basic version of a Task object with no additional parameters.","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"ERJUNZE"},"content":" */","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"ERJUNZE"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"ERJUNZE"},"content":"     * Constructs a todo task with the given description.","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"ERJUNZE"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"ERJUNZE"},"content":"     * @param description Description of the todo task.","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"ERJUNZE"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"ERJUNZE"},"content":"        super(description);","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"ERJUNZE"},"content":"     * Converts the todo task into its string representation,","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"ERJUNZE"},"content":"     * which contains its task type, completion status, and description.","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"ERJUNZE"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":20,"author":{"gitId":"ERJUNZE"},"content":"     * @return String representation of the todo task.","lastModifiedDate":"2023-02-19"},{"lineNumber":21,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":22,"author":{"gitId":"ERJUNZE"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"ERJUNZE"},"content":"    public String toString() {","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"ERJUNZE"},"content":"        return \" [T]\" + super.toString();","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"ERJUNZE"},"content":"    @Override","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"ERJUNZE"},"content":"    public String toSaveString() {","lastModifiedDate":"2023-02-19"},{"lineNumber":29,"author":{"gitId":"ERJUNZE"},"content":"        return super.toSaveString(\"T\", isDone ? \"1\" : \"0\", description);","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"ERJUNZE"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"ERJUNZE":31}},{"path":"src/main/java/duke/ui/Errors.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ERJUNZE"},"content":"package duke.ui;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"ERJUNZE"},"content":"/**","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"ERJUNZE"},"content":" * Enum that holds all the error messages to be displayed.","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"ERJUNZE"},"content":" */","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"ERJUNZE"},"content":"public enum Errors {","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"ERJUNZE"},"content":"    INVALID_COMMAND(\"Oops... you need to provide a valid command.\"),","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"ERJUNZE"},"content":"    INVALID_FORMAT (\"Oops... you need to provide only one of each argument.\"),","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"ERJUNZE"},"content":"    INVALID_INDEX  (\"Oops... you need to provide a valid task index.\"),","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"ERJUNZE"},"content":"    INVALID_SAVE   (\"Oops... your saved task list is corrupted, a new task list will be created.\"),","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"ERJUNZE"},"content":"    MISSING_DESCRIPTION(\"Oops... you need to provide a description for your task.\"),","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"ERJUNZE"},"content":"    MISSING_INDEX      (\"Oops... you need to provide the index of a task.\"),","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"ERJUNZE"},"content":"    MISSING_TIME       (\"Oops... you need to provide the time(s) for this task.\"),","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"ERJUNZE"},"content":"    MISSING_FILTER     (\"Oops... you need to provide a string to search for.\"),","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"ERJUNZE"},"content":"    FAILED_SAVE(\"Oops... could not save your task list.\");","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"ERJUNZE"},"content":"    public final String MESSAGE;","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"ERJUNZE"},"content":"     * Constructs an enum that returns the requested message.","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"ERJUNZE"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"ERJUNZE"},"content":"     * @param message The message to be displayed.","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"ERJUNZE"},"content":"    Errors(String message) {","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"ERJUNZE"},"content":"        MESSAGE \u003d message;","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":29,"author":{"gitId":"ERJUNZE"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"ERJUNZE":29}},{"path":"src/main/java/duke/ui/Messages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ERJUNZE"},"content":"package duke.ui;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"ERJUNZE"},"content":"import duke.main.Storage;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"ERJUNZE"},"content":"/**","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"ERJUNZE"},"content":" * Enum that holds all the notification and help messages to be displayed.","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"ERJUNZE"},"content":" */","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"ERJUNZE"},"content":"public enum Messages {","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"ERJUNZE"},"content":"    LINE  (\"_\".repeat(72)),","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"ERJUNZE"},"content":"    START (\"Hello! I\u0027m Duke\" + System.lineSeparator() + \"What can I do for you?\"),","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"ERJUNZE"},"content":"    EXIT  (\"Bye. Hope to see you again soon!\"),","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"ERJUNZE"},"content":"    ADD_TASK   (\"Got it. I\u0027ve added this task:\"),","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"ERJUNZE"},"content":"    LIST_TASKS (\"Here are the tasks in your list:\"),","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"ERJUNZE"},"content":"    EMPTY_LIST (\"Your task list is currently empty.\"),","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"ERJUNZE"},"content":"    MARK_TASK  (\"Nice! I\u0027ve marked this task as done:\"),","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"ERJUNZE"},"content":"    UNMARK_TASK(\"OK, I\u0027ve marked this task as not done yet:\"),","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"ERJUNZE"},"content":"    TASK_COUNT (\"Now you have %d task%s in your list.\"),","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"ERJUNZE"},"content":"    DELETE_TASK(\"Noted. I\u0027ve removed this task:\"),","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"ERJUNZE"},"content":"    FIND_TASKS (\"Here are the matching tasks in your list:\"),","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"ERJUNZE"},"content":"    EMPTY_FIND (\"No matching tasks were found.\"),","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"ERJUNZE"},"content":"    TODO_HELP    (\"Usage: todo \u003cdescription\u003e\"),","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"ERJUNZE"},"content":"    DEADLINE_HELP(\"Usage: deadline \u003cdescription\u003e /by \u003ctime\u003e\"),","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"ERJUNZE"},"content":"    EVENT_HELP   (\"Usage: event \u003cdescription\u003e /from \u003ctime\u003e /by \u003ctime\u003e\"),","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"ERJUNZE"},"content":"    MARK_HELP    (\"Usage: mark \u003ctask index\u003e\"),","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"ERJUNZE"},"content":"    UNMARK_HELP  (\"Usage: unmark \u003ctask index\u003e\"),","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"ERJUNZE"},"content":"    DELETE_HELP  (\"Usage: delete \u003ctask index\u003e\"),","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"ERJUNZE"},"content":"    SAVE_HELP    (\"Check that you have read \u0026 write permissions for \"","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"ERJUNZE"},"content":"            + Storage.SAVE_PATH","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"ERJUNZE"},"content":"            + \" and do not modify it yourself.\"),","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"ERJUNZE"},"content":"    FIND_HELP    (\"Usage: find \u003csearch string\u003e\"),","lastModifiedDate":"2023-02-18"},{"lineNumber":33,"author":{"gitId":"ERJUNZE"},"content":"    GENERIC_HELP (\"Valid commands are: todo, deadline, event, list, mark, unmark, bye\");","lastModifiedDate":"2023-02-06"},{"lineNumber":34,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":35,"author":{"gitId":"ERJUNZE"},"content":"    public final String MESSAGE;","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":37,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"ERJUNZE"},"content":"     * Constructs an enum that returns the requested message.","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"ERJUNZE"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"ERJUNZE"},"content":"     * @param message The message to be displayed.","lastModifiedDate":"2023-02-20"},{"lineNumber":41,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"ERJUNZE"},"content":"    Messages(String message) {","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"ERJUNZE"},"content":"        MESSAGE \u003d message;","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":45,"author":{"gitId":"ERJUNZE"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"ERJUNZE":45}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ERJUNZE"},"content":"package duke.ui;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"ERJUNZE"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"ERJUNZE"},"content":"/**","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"ERJUNZE"},"content":" * Class containing methods to display various messages.","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"ERJUNZE"},"content":" */","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"ERJUNZE"},"content":"public abstract class Ui {","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"ERJUNZE"},"content":"     * Returns the string displayed when adding/deleting tasks, which includes the current task count.","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"ERJUNZE"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"ERJUNZE"},"content":"     * @param taskListSize The size of the task list.","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"ERJUNZE"},"content":"     * @return The string displayed when adding/deleting tasks.","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"ERJUNZE"},"content":"    private static String getTaskCountString(int taskListSize) {","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"ERJUNZE"},"content":"        return String.format(Messages.TASK_COUNT.MESSAGE, taskListSize, taskListSize \u003d\u003d 1 ? \"\" : \"s\");","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"ERJUNZE"},"content":"     * Prints out the given strings, each on a new line.","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"ERJUNZE"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"ERJUNZE"},"content":"     * @param strings The strings to be printed out, can be provided as multiple arguments or as an array.","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"ERJUNZE"},"content":"    public static void print(String... strings) {","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"ERJUNZE"},"content":"        System.out.println(Messages.LINE.MESSAGE);","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"ERJUNZE"},"content":"        for (String string : strings) {","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"ERJUNZE"},"content":"            System.out.println(string);","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"ERJUNZE"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"ERJUNZE"},"content":"        System.out.println(Messages.LINE.MESSAGE);","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"ERJUNZE"},"content":"     * Displays the startup message.","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"ERJUNZE"},"content":"    public static void printStartMessage() {","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"ERJUNZE"},"content":"        print(Messages.START.MESSAGE);","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"ERJUNZE"},"content":"     * Displays the shutdown message.","lastModifiedDate":"2023-02-20"},{"lineNumber":41,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"ERJUNZE"},"content":"    public static void printExitMessage() {","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"ERJUNZE"},"content":"        print(Messages.EXIT.MESSAGE);","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":47,"author":{"gitId":"ERJUNZE"},"content":"     * Displays the task added message, the task that was just added, and the updated task count.","lastModifiedDate":"2023-02-20"},{"lineNumber":48,"author":{"gitId":"ERJUNZE"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":49,"author":{"gitId":"ERJUNZE"},"content":"     * @param taskString The string representation of the task that was just added to the task list.","lastModifiedDate":"2023-02-20"},{"lineNumber":50,"author":{"gitId":"ERJUNZE"},"content":"     * @param taskList The task list that the task was added to, needed for the task count message.","lastModifiedDate":"2023-02-20"},{"lineNumber":51,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":52,"author":{"gitId":"ERJUNZE"},"content":"    public static void printAddTaskMessage(String taskString, TaskList taskList) {","lastModifiedDate":"2023-02-06"},{"lineNumber":53,"author":{"gitId":"ERJUNZE"},"content":"        Ui.print(Messages.ADD_TASK.MESSAGE, taskString, getTaskCountString(taskList.size()));","lastModifiedDate":"2023-02-06"},{"lineNumber":54,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":55,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":56,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":57,"author":{"gitId":"ERJUNZE"},"content":"     * Displays the task deleted message, the task that was just deleted, and the updated task count.","lastModifiedDate":"2023-02-20"},{"lineNumber":58,"author":{"gitId":"ERJUNZE"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":59,"author":{"gitId":"ERJUNZE"},"content":"     * @param taskString The string representation of the task that was just added to the task list.","lastModifiedDate":"2023-02-20"},{"lineNumber":60,"author":{"gitId":"ERJUNZE"},"content":"     * @param taskList The task list that the task was added to, needed for the task count message.","lastModifiedDate":"2023-02-20"},{"lineNumber":61,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":62,"author":{"gitId":"ERJUNZE"},"content":"    public static void printDeleteTaskMessage(String taskString, TaskList taskList) {","lastModifiedDate":"2023-02-11"},{"lineNumber":63,"author":{"gitId":"ERJUNZE"},"content":"        Ui.print(Messages.DELETE_TASK.MESSAGE, taskString, getTaskCountString(taskList.size()));","lastModifiedDate":"2023-02-11"},{"lineNumber":64,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":65,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":66,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":67,"author":{"gitId":"ERJUNZE"},"content":"     * Displays the task marked or unmarked message depending on whether it was marked as done or not.","lastModifiedDate":"2023-02-20"},{"lineNumber":68,"author":{"gitId":"ERJUNZE"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":69,"author":{"gitId":"ERJUNZE"},"content":"     * @param taskString The string representation of the task whose completion status was just changed.","lastModifiedDate":"2023-02-20"},{"lineNumber":70,"author":{"gitId":"ERJUNZE"},"content":"     * @param isDone Whether the task was marked as done or not.","lastModifiedDate":"2023-02-20"},{"lineNumber":71,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":72,"author":{"gitId":"ERJUNZE"},"content":"    public static void printMarkTaskMessage(String taskString, boolean isDone) {","lastModifiedDate":"2023-02-06"},{"lineNumber":73,"author":{"gitId":"ERJUNZE"},"content":"        Ui.print(isDone ? Messages.MARK_TASK.MESSAGE : Messages.UNMARK_TASK.MESSAGE, taskString);","lastModifiedDate":"2023-02-06"},{"lineNumber":74,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":75,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":76,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":77,"author":{"gitId":"ERJUNZE"},"content":"     * Displays the error message and relevant help message when an error occurs.","lastModifiedDate":"2023-02-20"},{"lineNumber":78,"author":{"gitId":"ERJUNZE"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":79,"author":{"gitId":"ERJUNZE"},"content":"     * @param errorMessage The error message to be displayed.","lastModifiedDate":"2023-02-20"},{"lineNumber":80,"author":{"gitId":"ERJUNZE"},"content":"     * @param command Type of command that caused the error, to identify which help message to display.","lastModifiedDate":"2023-02-20"},{"lineNumber":81,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":82,"author":{"gitId":"ERJUNZE"},"content":"    public static void printError(String errorMessage, String command) {","lastModifiedDate":"2023-02-06"},{"lineNumber":83,"author":{"gitId":"ERJUNZE"},"content":"        switch (command) {","lastModifiedDate":"2023-02-06"},{"lineNumber":84,"author":{"gitId":"ERJUNZE"},"content":"        case \"todo\":","lastModifiedDate":"2023-02-06"},{"lineNumber":85,"author":{"gitId":"ERJUNZE"},"content":"            print(errorMessage, Messages.TODO_HELP.MESSAGE);","lastModifiedDate":"2023-02-06"},{"lineNumber":86,"author":{"gitId":"ERJUNZE"},"content":"            return;","lastModifiedDate":"2023-02-06"},{"lineNumber":87,"author":{"gitId":"ERJUNZE"},"content":"        case \"deadline\":","lastModifiedDate":"2023-02-06"},{"lineNumber":88,"author":{"gitId":"ERJUNZE"},"content":"            print(errorMessage, Messages.DEADLINE_HELP.MESSAGE);","lastModifiedDate":"2023-02-06"},{"lineNumber":89,"author":{"gitId":"ERJUNZE"},"content":"            return;","lastModifiedDate":"2023-02-06"},{"lineNumber":90,"author":{"gitId":"ERJUNZE"},"content":"        case \"event\":","lastModifiedDate":"2023-02-06"},{"lineNumber":91,"author":{"gitId":"ERJUNZE"},"content":"            print(errorMessage, Messages.EVENT_HELP.MESSAGE);","lastModifiedDate":"2023-02-06"},{"lineNumber":92,"author":{"gitId":"ERJUNZE"},"content":"            return;","lastModifiedDate":"2023-02-06"},{"lineNumber":93,"author":{"gitId":"ERJUNZE"},"content":"        case \"mark\":","lastModifiedDate":"2023-02-06"},{"lineNumber":94,"author":{"gitId":"ERJUNZE"},"content":"            print(errorMessage, Messages.MARK_HELP.MESSAGE);","lastModifiedDate":"2023-02-06"},{"lineNumber":95,"author":{"gitId":"ERJUNZE"},"content":"            return;","lastModifiedDate":"2023-02-06"},{"lineNumber":96,"author":{"gitId":"ERJUNZE"},"content":"        case \"unmark\":","lastModifiedDate":"2023-02-06"},{"lineNumber":97,"author":{"gitId":"ERJUNZE"},"content":"            print(errorMessage, Messages.UNMARK_HELP.MESSAGE);","lastModifiedDate":"2023-02-06"},{"lineNumber":98,"author":{"gitId":"ERJUNZE"},"content":"            return;","lastModifiedDate":"2023-02-06"},{"lineNumber":99,"author":{"gitId":"ERJUNZE"},"content":"        case \"delete\":","lastModifiedDate":"2023-02-11"},{"lineNumber":100,"author":{"gitId":"ERJUNZE"},"content":"            print(errorMessage, Messages.DELETE_HELP.MESSAGE);","lastModifiedDate":"2023-02-11"},{"lineNumber":101,"author":{"gitId":"ERJUNZE"},"content":"            return;","lastModifiedDate":"2023-02-11"},{"lineNumber":102,"author":{"gitId":"ERJUNZE"},"content":"        case \"save\":","lastModifiedDate":"2023-02-11"},{"lineNumber":103,"author":{"gitId":"ERJUNZE"},"content":"            print(errorMessage, Messages.SAVE_HELP.MESSAGE);","lastModifiedDate":"2023-02-11"},{"lineNumber":104,"author":{"gitId":"ERJUNZE"},"content":"            return;","lastModifiedDate":"2023-02-11"},{"lineNumber":105,"author":{"gitId":"ERJUNZE"},"content":"        case \"find\":","lastModifiedDate":"2023-02-18"},{"lineNumber":106,"author":{"gitId":"ERJUNZE"},"content":"            print(errorMessage, Messages.FIND_HELP.MESSAGE);","lastModifiedDate":"2023-02-18"},{"lineNumber":107,"author":{"gitId":"ERJUNZE"},"content":"            return;","lastModifiedDate":"2023-02-18"},{"lineNumber":108,"author":{"gitId":"ERJUNZE"},"content":"        default:","lastModifiedDate":"2023-02-06"},{"lineNumber":109,"author":{"gitId":"ERJUNZE"},"content":"            print(errorMessage, Messages.GENERIC_HELP.MESSAGE);","lastModifiedDate":"2023-02-06"},{"lineNumber":110,"author":{"gitId":"ERJUNZE"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":111,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":112,"author":{"gitId":"ERJUNZE"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"ERJUNZE":112}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ERJUNZE"},"content":"todo read book","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"ERJUNZE"},"content":"deadline return book /by June 6th","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"ERJUNZE"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"ERJUNZE"},"content":"mark 1","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"ERJUNZE"},"content":"todo join sports club","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"ERJUNZE"},"content":"mark 4","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"ERJUNZE"},"content":"todo borrow book","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"ERJUNZE"},"content":"list","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"ERJUNZE"},"content":"delete 3","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"ERJUNZE"},"content":"bye","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"ERJUNZE":10}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"ERJUNZE"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\main\\*.java","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"ERJUNZE"},"content":"java -classpath ..\\bin duke.main.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"ERJUNZE"},"content":"REM delete save file to prevent inteference with future tests","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"ERJUNZE"},"content":"del \"save.txt\"","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":25,"author":{"gitId":"ERJUNZE"},"content":"REM keep terminal open so you can see the differences","lastModifiedDate":"2023-01-15"},{"lineNumber":26,"author":{"gitId":"ERJUNZE"},"content":"@pause","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"ERJUNZE":7,"-":19}}]
