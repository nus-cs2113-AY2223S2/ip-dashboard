[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linuspuah"},"content":"public class Deadline extends Task{","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"linuspuah"},"content":"    private String dueDate;","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"linuspuah"},"content":"    public Deadline(String inLine){","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"linuspuah"},"content":"        super(inLine);","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"linuspuah"},"content":"        int indexOfBy \u003d inLine.indexOf(\"/by\");","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"linuspuah"},"content":"        dueDate \u003d inLine.substring(indexOfBy + 3);","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"linuspuah"},"content":"        setTaskName(super.getTaskName() + \"(by: \" + getDueDate() +\")\");","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"linuspuah"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"linuspuah"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"linuspuah"},"content":"    public String getTaskIdentity() {","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"linuspuah"},"content":"        String todoSymbol \u003d \"[D]\";","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"linuspuah"},"content":"        return todoSymbol + super.getTaskIdentity();","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"linuspuah"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"linuspuah"},"content":"    public String getDueDate(){","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"linuspuah"},"content":"        return dueDate.trim();","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"linuspuah"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"linuspuah"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"linuspuah":17}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linuspuah"},"content":"public class Event extends Task{","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"linuspuah"},"content":"    private final String fromDate;","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"linuspuah"},"content":"    private final String toDate;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"linuspuah"},"content":"    public Event(String inLine){","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"linuspuah"},"content":"            super(inLine);","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"linuspuah"},"content":"            int indexOfFrom \u003d inLine.indexOf(\"/from\");","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"linuspuah"},"content":"            int indexOfTo \u003d  inLine.indexOf(\"/to\");","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"linuspuah"},"content":"            fromDate \u003d inLine.substring(indexOfFrom + 5, indexOfTo);","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"linuspuah"},"content":"            toDate \u003d inLine.substring(indexOfTo + 3);","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"linuspuah"},"content":"            setTaskName(getTaskName() + \" (from \" + getFromDate() + \" to \" + getToDate() + \")\");","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"linuspuah"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"linuspuah"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"linuspuah"},"content":"    public String getTaskIdentity() {","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"linuspuah"},"content":"        String eventSymbol \u003d \"[E]\";","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"linuspuah"},"content":"        return eventSymbol + super.getTaskIdentity();","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"linuspuah"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"linuspuah"},"content":"    public String getFromDate(){","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"linuspuah"},"content":"        return fromDate.trim();","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"linuspuah"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"linuspuah"},"content":"    public String getToDate(){","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"linuspuah"},"content":"        return toDate.trim();","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"linuspuah"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"linuspuah"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"linuspuah":23}},{"path":"src/main/java/Limey.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linuspuah"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"linuspuah"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"linuspuah"},"content":"public class Limey {","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"linuspuah"},"content":"    public static final int MAX_NUM_TASKS \u003d 100;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"linuspuah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"linuspuah"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"linuspuah"},"content":"        //initialise variables","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"linuspuah"},"content":"        Task[] tasks \u003d new Task[MAX_NUM_TASKS];","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"linuspuah"},"content":"        String inLine;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"linuspuah"},"content":"        String firstWord;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"linuspuah"},"content":"        String[] wordList;","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"linuspuah"},"content":"        int taskIndex;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"linuspuah"},"content":"        boolean isValidInt;","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"linuspuah"},"content":"        boolean isValidIndex;","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"linuspuah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"linuspuah"},"content":"        //start user interface","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"linuspuah"},"content":"        Speech.sayHi();","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"linuspuah"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"linuspuah"},"content":"        inLine \u003d in.nextLine().trim();","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"linuspuah"},"content":"        wordList \u003d Parser.splitInput(inLine);","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"linuspuah"},"content":"        firstWord \u003d Parser.getFirstWord(inLine);","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"linuspuah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"linuspuah"},"content":"        //loop until input \u0027bye\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"linuspuah"},"content":"        while (!firstWord.equals(\"bye\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"linuspuah"},"content":"            //switch case to decide what to do","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"linuspuah"},"content":"            switch (firstWord) {","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"linuspuah"},"content":"            case \"list\":","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"linuspuah"},"content":"                Speech.printTaskList(tasks, Task.numTasks);","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"linuspuah"},"content":"                break;","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"linuspuah"},"content":"            case \"mark\":","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"linuspuah"},"content":"                if (wordList.length \u003e 1) { //input has at least 2 space separated strings","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"linuspuah"},"content":"                    inLine \u003d wordList[1];","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"linuspuah"},"content":"                    isValidInt \u003d Parser.isParsable(inLine);","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"linuspuah"},"content":"                    if (!isValidInt) {","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"linuspuah"},"content":"                        Speech.invalidMessage();","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"linuspuah"},"content":"                        break;","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"linuspuah"},"content":"                    }","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"linuspuah"},"content":"                    taskIndex \u003d Integer.parseInt(inLine) - 1;","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"linuspuah"},"content":"                    isValidIndex \u003d (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c Task.numTasks);","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"linuspuah"},"content":"                    if (!isValidIndex) {","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"linuspuah"},"content":"                        Speech.invalidMessage();","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"linuspuah"},"content":"                        break;","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"linuspuah"},"content":"                    }","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"linuspuah"},"content":"                    tasks[taskIndex].setDone(true);","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"linuspuah"},"content":"                    Speech.printMarked(tasks[taskIndex]);","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"linuspuah"},"content":"                }","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"linuspuah"},"content":"                break;","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"linuspuah"},"content":"            case \"unmark\":","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"linuspuah"},"content":"                inLine \u003d wordList[1];","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"linuspuah"},"content":"                isValidInt \u003d Parser.isParsable(inLine);","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"linuspuah"},"content":"                if (!isValidInt) {","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"linuspuah"},"content":"                    Speech.invalidMessage();","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"linuspuah"},"content":"                    break;","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"linuspuah"},"content":"                }","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"linuspuah"},"content":"                taskIndex \u003d Integer.parseInt(inLine) - 1;","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"linuspuah"},"content":"                isValidIndex \u003d (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c Task.numTasks);","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"linuspuah"},"content":"                if (!isValidIndex) {","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"linuspuah"},"content":"                    Speech.invalidMessage();","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"linuspuah"},"content":"                    break;","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"linuspuah"},"content":"                }","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"linuspuah"},"content":"                tasks[taskIndex].setDone(false);","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"linuspuah"},"content":"                Speech.printUnmarked(tasks[taskIndex]);","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"linuspuah"},"content":"                break;","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"linuspuah"},"content":"            default:","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"linuspuah"},"content":"                makeNewTask(tasks, inLine, firstWord);","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"linuspuah"},"content":"                break;","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"linuspuah"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"linuspuah"},"content":"            //update new line for next iteration","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"linuspuah"},"content":"            inLine \u003d in.nextLine().trim();","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"linuspuah"},"content":"            wordList \u003d Parser.splitInput(inLine);","lastModifiedDate":"2023-01-31"},{"lineNumber":71,"author":{"gitId":"linuspuah"},"content":"            firstWord \u003d wordList[0];","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"linuspuah"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"linuspuah"},"content":"        Speech.sayBye();","lastModifiedDate":"2023-01-31"},{"lineNumber":74,"author":{"gitId":"linuspuah"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"linuspuah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":76,"author":{"gitId":"linuspuah"},"content":"    private static void makeNewTask(Task[] tasks, String inLine, String firstWord) {","lastModifiedDate":"2023-01-31"},{"lineNumber":77,"author":{"gitId":"linuspuah"},"content":"        Task taskIn;","lastModifiedDate":"2023-01-31"},{"lineNumber":78,"author":{"gitId":"linuspuah"},"content":"        switch (firstWord) {","lastModifiedDate":"2023-01-31"},{"lineNumber":79,"author":{"gitId":"linuspuah"},"content":"        case \"deadline\":","lastModifiedDate":"2023-01-31"},{"lineNumber":80,"author":{"gitId":"linuspuah"},"content":"            taskIn \u003d new Deadline(inLine);","lastModifiedDate":"2023-01-31"},{"lineNumber":81,"author":{"gitId":"linuspuah"},"content":"            break;","lastModifiedDate":"2023-01-31"},{"lineNumber":82,"author":{"gitId":"linuspuah"},"content":"        case \"event\":","lastModifiedDate":"2023-01-31"},{"lineNumber":83,"author":{"gitId":"linuspuah"},"content":"            taskIn \u003d new Event(inLine);","lastModifiedDate":"2023-01-31"},{"lineNumber":84,"author":{"gitId":"linuspuah"},"content":"            break;","lastModifiedDate":"2023-01-31"},{"lineNumber":85,"author":{"gitId":"linuspuah"},"content":"        case \"todo\": // currently default create a todo object","lastModifiedDate":"2023-01-31"},{"lineNumber":86,"author":{"gitId":"linuspuah"},"content":"            taskIn \u003d new Todo(inLine);","lastModifiedDate":"2023-01-31"},{"lineNumber":87,"author":{"gitId":"linuspuah"},"content":"            break;","lastModifiedDate":"2023-01-31"},{"lineNumber":88,"author":{"gitId":"linuspuah"},"content":"        default:","lastModifiedDate":"2023-01-31"},{"lineNumber":89,"author":{"gitId":"linuspuah"},"content":"            Speech.invalidMessage();","lastModifiedDate":"2023-01-31"},{"lineNumber":90,"author":{"gitId":"linuspuah"},"content":"            return;","lastModifiedDate":"2023-01-31"},{"lineNumber":91,"author":{"gitId":"linuspuah"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":92,"author":{"gitId":"linuspuah"},"content":"        tasks[Task.numTasks] \u003d taskIn;","lastModifiedDate":"2023-01-31"},{"lineNumber":93,"author":{"gitId":"linuspuah"},"content":"        Task.numTasks++;","lastModifiedDate":"2023-01-31"},{"lineNumber":94,"author":{"gitId":"linuspuah"},"content":"        Speech.printAdded(taskIn, Task.numTasks);","lastModifiedDate":"2023-01-31"},{"lineNumber":95,"author":{"gitId":"linuspuah"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":96,"author":{"gitId":"linuspuah"},"content":"}","lastModifiedDate":"2023-01-26"},{"lineNumber":97,"author":{"gitId":"linuspuah"},"content":"","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"linuspuah":97}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linuspuah"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"linuspuah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"linuspuah"},"content":"public class Parser {","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"linuspuah"},"content":"    public static String getFirstWord(String line) {","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"linuspuah"},"content":"        String firstWord;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"linuspuah"},"content":"        int firstSpace \u003d line.indexOf(\u0027 \u0027);","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"linuspuah"},"content":"        if (firstSpace !\u003d -1) {","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"linuspuah"},"content":"            firstWord \u003d line.substring(0, firstSpace).toLowerCase();","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"linuspuah"},"content":"        } else {","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"linuspuah"},"content":"            firstWord \u003d line.toLowerCase();","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"linuspuah"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"linuspuah"},"content":"        return firstWord;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"linuspuah"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"linuspuah"},"content":"    public static String[] splitInput(String inLine){","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"linuspuah"},"content":"        int nextSpace \u003d inLine.indexOf(\u0027 \u0027);","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"linuspuah"},"content":"        int numStrings \u003d 1;","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"linuspuah"},"content":"        String[] wordList \u003d new String[numStrings];","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"linuspuah"},"content":"        wordList[numStrings - 1] \u003d getFirstWord(inLine);","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"linuspuah"},"content":"        while(nextSpace!\u003d -1) {","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"linuspuah"},"content":"            numStrings++;","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"linuspuah"},"content":"            String[] copyWordList \u003d Arrays.copyOf(wordList, numStrings);","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"linuspuah"},"content":"            wordList \u003d copyWordList;","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"linuspuah"},"content":"            inLine \u003d inLine.substring(nextSpace + 1);","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"linuspuah"},"content":"            copyWordList[numStrings - 1] \u003d getFirstWord(inLine);","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"linuspuah"},"content":"            nextSpace \u003d inLine.indexOf(\u0027 \u0027);","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"linuspuah"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"linuspuah"},"content":"        return wordList;","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"linuspuah"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"linuspuah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"linuspuah"},"content":"    public static boolean isParsable(String input) {","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"linuspuah"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"linuspuah"},"content":"            Integer.parseInt(input);","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"linuspuah"},"content":"            return true;","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"linuspuah"},"content":"        } catch (final NumberFormatException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"linuspuah"},"content":"            return false;","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"linuspuah"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"linuspuah"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"linuspuah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"linuspuah"},"content":"    /*public static int findIndexOf(String[] wordList, String searchItem){","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"linuspuah"},"content":"        for (int index \u003d 0; index \u003c wordList.length; index++){","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"linuspuah"},"content":"            if (wordList[index].equals(searchItem)){","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"linuspuah"},"content":"                return index;","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"linuspuah"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"linuspuah"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"linuspuah"},"content":"        return -1;","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"linuspuah"},"content":"    }*/","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"linuspuah"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"linuspuah":47}},{"path":"src/main/java/Speech.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linuspuah"},"content":"public class Speech {","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"linuspuah"},"content":"    public static void sayHi(){","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"linuspuah"},"content":"        System.out.println(\"\\tHello! I am limey, What can I do for you?\");","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"linuspuah"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"linuspuah"},"content":"    public static void sayBye() {","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"linuspuah"},"content":"        System.out.println(\"\\tBye! Hope to see you again soon. :)\");","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"linuspuah"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"linuspuah"},"content":"    public static void printLine() {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"linuspuah"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"linuspuah"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"linuspuah"},"content":"    public static void printAdded(Task task, int numTasks){","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"linuspuah"},"content":"        printLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"linuspuah"},"content":"        System.out.println( \"\\t\"+\"added: \"+ task.getTaskName());","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"linuspuah"},"content":"        System.out.println(\"\\tTotal number of current tasks: \" + numTasks);","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"linuspuah"},"content":"        printLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"linuspuah"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"linuspuah"},"content":"    public static void printMarked(Task task){","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"linuspuah"},"content":"        printLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"linuspuah"},"content":"        System.out.println(\"\\t\"+\"I have just marked this task as done:\");","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"linuspuah"},"content":"        System.out.println(\"\\t\"+task.getTaskIdentity());","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"linuspuah"},"content":"        printLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"linuspuah"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"linuspuah"},"content":"    public static void invalidMessage(){","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"linuspuah"},"content":"        System.out.println(\"\\tSorry that was an invalid command.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"linuspuah"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"linuspuah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"linuspuah"},"content":"    public static void printUnmarked(Task task){","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"linuspuah"},"content":"        printLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"linuspuah"},"content":"        System.out.println(\"\\t\"+\"This task has been marked as not done yet:\");","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"linuspuah"},"content":"        System.out.println(\"\\t\"+task.getTaskIdentity());","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"linuspuah"},"content":"        printLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"linuspuah"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"linuspuah"},"content":"    public static void printTaskList(Task[] taskList, int numTasks){","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"linuspuah"},"content":"        printLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"linuspuah"},"content":"        for (int listNum \u003d 1; listNum \u003c\u003d numTasks; listNum++){","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"linuspuah"},"content":"            System.out.println(\"\\t\" + listNum + \".\" + taskList[listNum - 1].getTaskIdentity());","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"linuspuah"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"linuspuah"},"content":"        printLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"linuspuah"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"linuspuah"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"linuspuah"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"linuspuah":41}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linuspuah"},"content":"public class Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"linuspuah"},"content":"    private String taskName;","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"linuspuah"},"content":"    private boolean isDone \u003d false;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"linuspuah"},"content":"    public static int numTasks \u003d 0;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"linuspuah"},"content":"    public Task(String inLine) {","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"linuspuah"},"content":"        int firstSpace \u003d inLine.indexOf(\" \");","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"linuspuah"},"content":"        if (inLine.contains(\"/\")){","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"linuspuah"},"content":"            int firstSlash \u003d inLine.indexOf(\"/\");","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"linuspuah"},"content":"            this.taskName \u003d inLine.substring(firstSpace + 1, firstSlash);","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"linuspuah"},"content":"        } else {","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"linuspuah"},"content":"            this.taskName \u003d inLine.substring(firstSpace + 1);","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"linuspuah"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"linuspuah"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"linuspuah"},"content":"    public String getTaskName() {","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"linuspuah"},"content":"        return taskName;","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"linuspuah"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"linuspuah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"linuspuah"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"linuspuah"},"content":"     * Returns identity of the current task including the following","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"linuspuah"},"content":"     * - [X] or [ ] for marked or unmarked tasks","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"linuspuah"},"content":"     * - task name","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"linuspuah"},"content":"     * @return tasks identity.","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"linuspuah"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"linuspuah"},"content":"    public String getTaskIdentity(){","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"linuspuah"},"content":"        String taskIdentity;","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"linuspuah"},"content":"        if(isDone){","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"linuspuah"},"content":"            taskIdentity \u003d \"[X] \" + taskName;","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"linuspuah"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"linuspuah"},"content":"            taskIdentity \u003d\"[ ] \" + taskName;","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"linuspuah"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"linuspuah"},"content":"        return taskIdentity;","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"linuspuah"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"linuspuah"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"linuspuah"},"content":"    public void setTaskName(String taskName) {","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"linuspuah"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"linuspuah"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"linuspuah"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"linuspuah"},"content":"    public void setDone(boolean isDone) {","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"linuspuah"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"linuspuah"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"linuspuah"},"content":"}","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"linuspuah"},"content":"","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"linuspuah":42}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linuspuah"},"content":"public class Todo extends Task{","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"linuspuah"},"content":"    public Todo(String taskName){","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"linuspuah"},"content":"        super(taskName);","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"linuspuah"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"linuspuah"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"linuspuah"},"content":"    public String getTaskIdentity() {","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"linuspuah"},"content":"        String todoSymbol \u003d \"[T]\";","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"linuspuah"},"content":"        return todoSymbol + super.getTaskIdentity();","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"linuspuah"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"linuspuah"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"linuspuah":10}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"linuspuah"},"content":"todo borrow book","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"linuspuah"},"content":"todo join sports club","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"linuspuah"},"content":"mark 1","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"linuspuah"},"content":"list","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"linuspuah"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"linuspuah"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"linuspuah"},"content":"mark 4","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"linuspuah"},"content":"list","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"linuspuah"},"content":"mark 2","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"linuspuah"},"content":"list","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"linuspuah"},"content":"unmark 1","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"linuspuah"},"content":"list","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"linuspuah"},"content":"bye","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"linuspuah":13}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"linuspuah"},"content":"del ACTUAL.TXT","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"linuspuah"},"content":"java -classpath ..\\bin Limey \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"linuspuah":2,"-":19}}]
