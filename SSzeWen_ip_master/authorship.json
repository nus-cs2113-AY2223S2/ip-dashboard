[{"path":"src/main/java/duke/Database.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SSzeWen"},"content":"package duke;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"SSzeWen"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"SSzeWen"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"SSzeWen"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"SSzeWen"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"SSzeWen"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"SSzeWen"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"SSzeWen"},"content":"import java.io.File;","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"SSzeWen"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"SSzeWen"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"SSzeWen"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"SSzeWen"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"SSzeWen"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"SSzeWen"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"SSzeWen"},"content":"public class Database {","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"SSzeWen"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"SSzeWen"},"content":"    public static final int COMMAND_INDEX \u003d 0;","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"SSzeWen"},"content":"    public static final int TASK_DESCRIPTION_INDEX \u003d 2;","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"SSzeWen"},"content":"    public static final int TASK_DEADLINE_INDEX \u003d 3;","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"SSzeWen"},"content":"    public static final int TASK_FROM_INDEX \u003d 3;","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"SSzeWen"},"content":"    public static final int TASK_TO_INDEX \u003d 4;","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"SSzeWen"},"content":"    public static final int TASK_MARK_INDEX \u003d 1;","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"SSzeWen"},"content":"    public static final String DIRECTORY_NAME \u003d \"data\";","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"SSzeWen"},"content":"    public static final String FILE_PATH \u003d \"data/duke.txt\";","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"SSzeWen"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"SSzeWen"},"content":"    protected ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"SSzeWen"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"SSzeWen"},"content":"    protected ArrayList\u003cString\u003e databaseString;","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"SSzeWen"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"SSzeWen"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"SSzeWen"},"content":"    public Database() {","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"SSzeWen"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"SSzeWen"},"content":"        this.databaseString \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"SSzeWen"},"content":"        try {","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"SSzeWen"},"content":"            initialise();","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"SSzeWen"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":37,"author":{"gitId":"SSzeWen"},"content":"            System.out.println(\"failed to initialise database\");","lastModifiedDate":"2023-02-12"},{"lineNumber":38,"author":{"gitId":"SSzeWen"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":39,"author":{"gitId":"SSzeWen"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":40,"author":{"gitId":"SSzeWen"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":41,"author":{"gitId":"SSzeWen"},"content":"    public void saveAddTask(String information) throws IOException {","lastModifiedDate":"2023-02-12"},{"lineNumber":42,"author":{"gitId":"SSzeWen"},"content":"        FileWriter fw \u003d new FileWriter(FILE_PATH, true);","lastModifiedDate":"2023-02-12"},{"lineNumber":43,"author":{"gitId":"SSzeWen"},"content":"        fw.write(writeTask(information));","lastModifiedDate":"2023-02-12"},{"lineNumber":44,"author":{"gitId":"SSzeWen"},"content":"        fw.close();","lastModifiedDate":"2023-02-12"},{"lineNumber":45,"author":{"gitId":"SSzeWen"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":46,"author":{"gitId":"SSzeWen"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":47,"author":{"gitId":"SSzeWen"},"content":"    public void updateDatabaseTask() throws IOException {","lastModifiedDate":"2023-02-12"},{"lineNumber":48,"author":{"gitId":"SSzeWen"},"content":"        FileWriter fw \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2023-02-12"},{"lineNumber":49,"author":{"gitId":"SSzeWen"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); ++i) {","lastModifiedDate":"2023-02-12"},{"lineNumber":50,"author":{"gitId":"SSzeWen"},"content":"            fw.write(writeTask(tasks.get(i).getTaskString()));","lastModifiedDate":"2023-02-12"},{"lineNumber":51,"author":{"gitId":"SSzeWen"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":52,"author":{"gitId":"SSzeWen"},"content":"        fw.close();","lastModifiedDate":"2023-02-12"},{"lineNumber":53,"author":{"gitId":"SSzeWen"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":54,"author":{"gitId":"SSzeWen"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":55,"author":{"gitId":"SSzeWen"},"content":"    public static String writeTask(String information) {","lastModifiedDate":"2023-02-12"},{"lineNumber":56,"author":{"gitId":"SSzeWen"},"content":"        information +\u003d System.lineSeparator();","lastModifiedDate":"2023-02-12"},{"lineNumber":57,"author":{"gitId":"SSzeWen"},"content":"        return information;","lastModifiedDate":"2023-02-12"},{"lineNumber":58,"author":{"gitId":"SSzeWen"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":59,"author":{"gitId":"SSzeWen"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":60,"author":{"gitId":"SSzeWen"},"content":"    private void initialise() throws IOException {","lastModifiedDate":"2023-02-12"},{"lineNumber":61,"author":{"gitId":"SSzeWen"},"content":"        File savedData \u003d new File(FILE_PATH);","lastModifiedDate":"2023-02-12"},{"lineNumber":62,"author":{"gitId":"SSzeWen"},"content":"        if (savedData.exists()) {","lastModifiedDate":"2023-02-12"},{"lineNumber":63,"author":{"gitId":"SSzeWen"},"content":"            Scanner contents \u003d new Scanner(savedData);","lastModifiedDate":"2023-02-12"},{"lineNumber":64,"author":{"gitId":"SSzeWen"},"content":"            while (contents.hasNext()) {","lastModifiedDate":"2023-02-12"},{"lineNumber":65,"author":{"gitId":"SSzeWen"},"content":"                databaseString.add(contents.nextLine());","lastModifiedDate":"2023-02-12"},{"lineNumber":66,"author":{"gitId":"SSzeWen"},"content":"            }","lastModifiedDate":"2023-02-12"},{"lineNumber":67,"author":{"gitId":"SSzeWen"},"content":"            dataConversion();","lastModifiedDate":"2023-02-12"},{"lineNumber":68,"author":{"gitId":"SSzeWen"},"content":"        } else {","lastModifiedDate":"2023-02-12"},{"lineNumber":69,"author":{"gitId":"SSzeWen"},"content":"            File directory \u003d new File(DIRECTORY_NAME);","lastModifiedDate":"2023-02-16"},{"lineNumber":70,"author":{"gitId":"SSzeWen"},"content":"            directory.mkdirs();","lastModifiedDate":"2023-02-12"},{"lineNumber":71,"author":{"gitId":"SSzeWen"},"content":"            savedData.createNewFile();","lastModifiedDate":"2023-02-12"},{"lineNumber":72,"author":{"gitId":"SSzeWen"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":73,"author":{"gitId":"SSzeWen"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":74,"author":{"gitId":"SSzeWen"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":75,"author":{"gitId":"SSzeWen"},"content":"    private void dataConversion() {","lastModifiedDate":"2023-02-12"},{"lineNumber":76,"author":{"gitId":"SSzeWen"},"content":"        for (String data : databaseString) {","lastModifiedDate":"2023-02-12"},{"lineNumber":77,"author":{"gitId":"SSzeWen"},"content":"            String[] SplitTaskConstituents \u003d data.split(Task.COMMA_TASK_SEPARATOR);","lastModifiedDate":"2023-02-16"},{"lineNumber":78,"author":{"gitId":"SSzeWen"},"content":"            Task task \u003d null;","lastModifiedDate":"2023-02-12"},{"lineNumber":79,"author":{"gitId":"SSzeWen"},"content":"            boolean isCorrupted \u003d false;","lastModifiedDate":"2023-02-12"},{"lineNumber":80,"author":{"gitId":"SSzeWen"},"content":"            switch (SplitTaskConstituents[COMMAND_INDEX]) {","lastModifiedDate":"2023-02-16"},{"lineNumber":81,"author":{"gitId":"SSzeWen"},"content":"            case \"T\":","lastModifiedDate":"2023-02-12"},{"lineNumber":82,"author":{"gitId":"SSzeWen"},"content":"                task \u003d new Todo(SplitTaskConstituents[TASK_DESCRIPTION_INDEX]);","lastModifiedDate":"2023-02-16"},{"lineNumber":83,"author":{"gitId":"SSzeWen"},"content":"                break;","lastModifiedDate":"2023-02-12"},{"lineNumber":84,"author":{"gitId":"SSzeWen"},"content":"            case \"D\":","lastModifiedDate":"2023-02-12"},{"lineNumber":85,"author":{"gitId":"SSzeWen"},"content":"                task \u003d new Deadline(SplitTaskConstituents[TASK_DESCRIPTION_INDEX],","lastModifiedDate":"2023-02-16"},{"lineNumber":86,"author":{"gitId":"SSzeWen"},"content":"                        SplitTaskConstituents[TASK_DEADLINE_INDEX]);","lastModifiedDate":"2023-02-16"},{"lineNumber":87,"author":{"gitId":"SSzeWen"},"content":"                break;","lastModifiedDate":"2023-02-12"},{"lineNumber":88,"author":{"gitId":"SSzeWen"},"content":"            case \"E\":","lastModifiedDate":"2023-02-12"},{"lineNumber":89,"author":{"gitId":"SSzeWen"},"content":"                task \u003d new Event(SplitTaskConstituents[TASK_DESCRIPTION_INDEX], SplitTaskConstituents[TASK_FROM_INDEX],","lastModifiedDate":"2023-02-16"},{"lineNumber":90,"author":{"gitId":"SSzeWen"},"content":"                        SplitTaskConstituents[TASK_TO_INDEX]);","lastModifiedDate":"2023-02-16"},{"lineNumber":91,"author":{"gitId":"SSzeWen"},"content":"                break;","lastModifiedDate":"2023-02-12"},{"lineNumber":92,"author":{"gitId":"SSzeWen"},"content":"            default:","lastModifiedDate":"2023-02-12"},{"lineNumber":93,"author":{"gitId":"SSzeWen"},"content":"                isCorrupted \u003d true;","lastModifiedDate":"2023-02-12"},{"lineNumber":94,"author":{"gitId":"SSzeWen"},"content":"                break;","lastModifiedDate":"2023-02-16"},{"lineNumber":95,"author":{"gitId":"SSzeWen"},"content":"            }","lastModifiedDate":"2023-02-12"},{"lineNumber":96,"author":{"gitId":"SSzeWen"},"content":"            updateMarkings(SplitTaskConstituents, task, !isCorrupted);","lastModifiedDate":"2023-02-16"},{"lineNumber":97,"author":{"gitId":"SSzeWen"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":98,"author":{"gitId":"SSzeWen"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":99,"author":{"gitId":"SSzeWen"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":100,"author":{"gitId":"SSzeWen"},"content":"    private void updateMarkings(String[] information, Task task, boolean isNotCorrupted) {","lastModifiedDate":"2023-02-16"},{"lineNumber":101,"author":{"gitId":"SSzeWen"},"content":"        if (isNotCorrupted) {","lastModifiedDate":"2023-02-16"},{"lineNumber":102,"author":{"gitId":"SSzeWen"},"content":"            if (information[TASK_MARK_INDEX].equals(\"true\")) {","lastModifiedDate":"2023-02-16"},{"lineNumber":103,"author":{"gitId":"SSzeWen"},"content":"                task.setDone(\"mark\");","lastModifiedDate":"2023-02-12"},{"lineNumber":104,"author":{"gitId":"SSzeWen"},"content":"            } else if (information[TASK_MARK_INDEX].equals(\"false\")) {","lastModifiedDate":"2023-02-16"},{"lineNumber":105,"author":{"gitId":"SSzeWen"},"content":"                task.setDone(\"unmark\");","lastModifiedDate":"2023-02-12"},{"lineNumber":106,"author":{"gitId":"SSzeWen"},"content":"            }","lastModifiedDate":"2023-02-12"},{"lineNumber":107,"author":{"gitId":"SSzeWen"},"content":"            tasks.add(task);","lastModifiedDate":"2023-02-12"},{"lineNumber":108,"author":{"gitId":"SSzeWen"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":109,"author":{"gitId":"SSzeWen"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":110,"author":{"gitId":"SSzeWen"},"content":"}","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"SSzeWen":110}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SSzeWen"},"content":"package duke;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"SSzeWen"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"SSzeWen"},"content":"import duke.exception.EmptyCommandException;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"SSzeWen"},"content":"import duke.exception.IllegalCommandException;","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"SSzeWen"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"SSzeWen"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"SSzeWen"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"SSzeWen"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"SSzeWen"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"SSzeWen"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"SSzeWen"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"SSzeWen"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"SSzeWen"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"SSzeWen"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"SSzeWen"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"SSzeWen"},"content":"    public static final String GREET_MESSAGE \u003d \"Hello! I\u0027m Duke\\nWhat can I do for you?\";","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"SSzeWen"},"content":"    public static final String EXIT_MESSAGE \u003d \"Bye. Hope to see you again soon!\\n\";","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"SSzeWen"},"content":"    public static final String LINE \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"SSzeWen"},"content":"    public static final String MARK_MESSAGE \u003d \"Nice! I\u0027ve marked this task as done:\";","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"SSzeWen"},"content":"    public static final String UNMARK_MESSAGE \u003d \"OK, I\u0027ve marked this task as not done yet:\";","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"SSzeWen"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"SSzeWen"},"content":"    public static boolean isProgramRunning \u003d true;","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"SSzeWen"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"SSzeWen"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"SSzeWen"},"content":"    private static Database database \u003d null;","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"SSzeWen"},"content":"    private static ArrayList\u003cTask\u003e tasks \u003d null;","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"SSzeWen"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"SSzeWen"},"content":"        greeting();","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"SSzeWen"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"SSzeWen"},"content":"        database \u003d new Database();","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"SSzeWen"},"content":"        tasks \u003d database.tasks;","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"SSzeWen"},"content":"        while (isProgramRunning) {","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"SSzeWen"},"content":"            String command \u003d in.nextLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"SSzeWen"},"content":"            String firstWord \u003d command.split(\" \")[0];","lastModifiedDate":"2023-02-04"},{"lineNumber":37,"author":{"gitId":"SSzeWen"},"content":"            if (command.equals(\"bye\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"SSzeWen"},"content":"                exit();","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"SSzeWen"},"content":"            } else if (command.equals(\"list\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"SSzeWen"},"content":"                printList();","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"SSzeWen"},"content":"            } else if (firstWord.equals(\"mark\") || firstWord.equals(\"unmark\")) {","lastModifiedDate":"2023-02-04"},{"lineNumber":42,"author":{"gitId":"SSzeWen"},"content":"                MarkOrUnmarkHandler(command);","lastModifiedDate":"2023-02-04"},{"lineNumber":43,"author":{"gitId":"SSzeWen"},"content":"            } else if (firstWord.equals(\"todo\")) {","lastModifiedDate":"2023-02-04"},{"lineNumber":44,"author":{"gitId":"SSzeWen"},"content":"                todoTaskHandler(command);","lastModifiedDate":"2023-02-04"},{"lineNumber":45,"author":{"gitId":"SSzeWen"},"content":"            } else if (firstWord.equals(\"deadline\")) {","lastModifiedDate":"2023-02-04"},{"lineNumber":46,"author":{"gitId":"SSzeWen"},"content":"                deadlineTaskHandler(command);","lastModifiedDate":"2023-02-04"},{"lineNumber":47,"author":{"gitId":"SSzeWen"},"content":"            } else if (firstWord.equals(\"event\")) {","lastModifiedDate":"2023-02-04"},{"lineNumber":48,"author":{"gitId":"SSzeWen"},"content":"                eventTaskHandler(command);","lastModifiedDate":"2023-02-04"},{"lineNumber":49,"author":{"gitId":"SSzeWen"},"content":"            } else if (firstWord.equals(\"delete\")) {","lastModifiedDate":"2023-02-11"},{"lineNumber":50,"author":{"gitId":"SSzeWen"},"content":"                deleteTaskHandler(command);","lastModifiedDate":"2023-02-11"},{"lineNumber":51,"author":{"gitId":"SSzeWen"},"content":"            } else {","lastModifiedDate":"2023-02-12"},{"lineNumber":52,"author":{"gitId":"SSzeWen"},"content":"                illegalCommandMessage();","lastModifiedDate":"2023-02-04"},{"lineNumber":53,"author":{"gitId":"SSzeWen"},"content":"            }","lastModifiedDate":"2023-02-04"},{"lineNumber":54,"author":{"gitId":"SSzeWen"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":55,"author":{"gitId":"SSzeWen"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":56,"author":{"gitId":"SSzeWen"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":57,"author":{"gitId":"SSzeWen"},"content":"    private static void deleteTaskHandler(String command) {","lastModifiedDate":"2023-02-11"},{"lineNumber":58,"author":{"gitId":"SSzeWen"},"content":"        try {","lastModifiedDate":"2023-02-11"},{"lineNumber":59,"author":{"gitId":"SSzeWen"},"content":"            deleteTask(command);","lastModifiedDate":"2023-02-11"},{"lineNumber":60,"author":{"gitId":"SSzeWen"},"content":"        } catch (IllegalCommandException e) {","lastModifiedDate":"2023-02-11"},{"lineNumber":61,"author":{"gitId":"SSzeWen"},"content":"            illegalCommandMessage();","lastModifiedDate":"2023-02-11"},{"lineNumber":62,"author":{"gitId":"SSzeWen"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":63,"author":{"gitId":"SSzeWen"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":64,"author":{"gitId":"SSzeWen"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":65,"author":{"gitId":"SSzeWen"},"content":"    private static void deleteTask(String command) throws IllegalCommandException {","lastModifiedDate":"2023-02-16"},{"lineNumber":66,"author":{"gitId":"SSzeWen"},"content":"        String[] words \u003d command.trim().split(\" \");","lastModifiedDate":"2023-02-11"},{"lineNumber":67,"author":{"gitId":"SSzeWen"},"content":"        if (isInvalidString(words)) {","lastModifiedDate":"2023-02-11"},{"lineNumber":68,"author":{"gitId":"SSzeWen"},"content":"            throw new IllegalCommandException();","lastModifiedDate":"2023-02-11"},{"lineNumber":69,"author":{"gitId":"SSzeWen"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":70,"author":{"gitId":"SSzeWen"},"content":"        int deleteIndex \u003d getIndex(words[1]);","lastModifiedDate":"2023-02-11"},{"lineNumber":71,"author":{"gitId":"SSzeWen"},"content":"        if (!isValidIndex(deleteIndex)) {","lastModifiedDate":"2023-02-11"},{"lineNumber":72,"author":{"gitId":"SSzeWen"},"content":"            throw new IllegalCommandException();","lastModifiedDate":"2023-02-11"},{"lineNumber":73,"author":{"gitId":"SSzeWen"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":74,"author":{"gitId":"SSzeWen"},"content":"        deleteTaskMessage(deleteIndex);","lastModifiedDate":"2023-02-11"},{"lineNumber":75,"author":{"gitId":"SSzeWen"},"content":"        tasks.remove(deleteIndex);","lastModifiedDate":"2023-02-11"},{"lineNumber":76,"author":{"gitId":"SSzeWen"},"content":"        try {","lastModifiedDate":"2023-02-12"},{"lineNumber":77,"author":{"gitId":"SSzeWen"},"content":"            database.updateDatabaseTask();","lastModifiedDate":"2023-02-12"},{"lineNumber":78,"author":{"gitId":"SSzeWen"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":79,"author":{"gitId":"SSzeWen"},"content":"            System.out.println(\"Update database failure\");","lastModifiedDate":"2023-02-12"},{"lineNumber":80,"author":{"gitId":"SSzeWen"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":81,"author":{"gitId":"SSzeWen"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":82,"author":{"gitId":"SSzeWen"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":83,"author":{"gitId":"SSzeWen"},"content":"    private static void MarkOrUnmarkHandler(String command) {","lastModifiedDate":"2023-02-04"},{"lineNumber":84,"author":{"gitId":"SSzeWen"},"content":"        try {","lastModifiedDate":"2023-02-04"},{"lineNumber":85,"author":{"gitId":"SSzeWen"},"content":"            markAndUnmarkTask(command);","lastModifiedDate":"2023-02-04"},{"lineNumber":86,"author":{"gitId":"SSzeWen"},"content":"        } catch (IllegalCommandException e) {","lastModifiedDate":"2023-02-04"},{"lineNumber":87,"author":{"gitId":"SSzeWen"},"content":"            illegalCommandMessage();","lastModifiedDate":"2023-02-04"},{"lineNumber":88,"author":{"gitId":"SSzeWen"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":89,"author":{"gitId":"SSzeWen"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":90,"author":{"gitId":"SSzeWen"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":91,"author":{"gitId":"SSzeWen"},"content":"    private static void todoTaskHandler(String command) {","lastModifiedDate":"2023-02-04"},{"lineNumber":92,"author":{"gitId":"SSzeWen"},"content":"        try {","lastModifiedDate":"2023-02-04"},{"lineNumber":93,"author":{"gitId":"SSzeWen"},"content":"            initTodoTask(command);","lastModifiedDate":"2023-01-30"},{"lineNumber":94,"author":{"gitId":"SSzeWen"},"content":"        } catch (EmptyCommandException e) {","lastModifiedDate":"2023-02-04"},{"lineNumber":95,"author":{"gitId":"SSzeWen"},"content":"            emptyCommandMessage(\"todo\");","lastModifiedDate":"2023-02-04"},{"lineNumber":96,"author":{"gitId":"SSzeWen"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":97,"author":{"gitId":"SSzeWen"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":98,"author":{"gitId":"SSzeWen"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":99,"author":{"gitId":"SSzeWen"},"content":"    private static void eventTaskHandler(String command) {","lastModifiedDate":"2023-02-04"},{"lineNumber":100,"author":{"gitId":"SSzeWen"},"content":"        try {","lastModifiedDate":"2023-02-04"},{"lineNumber":101,"author":{"gitId":"SSzeWen"},"content":"            initEventTask(command);","lastModifiedDate":"2023-01-30"},{"lineNumber":102,"author":{"gitId":"SSzeWen"},"content":"        } catch (IllegalCommandException e) {","lastModifiedDate":"2023-02-04"},{"lineNumber":103,"author":{"gitId":"SSzeWen"},"content":"            illegalCommandMessage();","lastModifiedDate":"2023-02-04"},{"lineNumber":104,"author":{"gitId":"SSzeWen"},"content":"        } catch (EmptyCommandException e) {","lastModifiedDate":"2023-02-04"},{"lineNumber":105,"author":{"gitId":"SSzeWen"},"content":"            emptyCommandMessage(\"event\");","lastModifiedDate":"2023-02-04"},{"lineNumber":106,"author":{"gitId":"SSzeWen"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":107,"author":{"gitId":"SSzeWen"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":108,"author":{"gitId":"SSzeWen"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":109,"author":{"gitId":"SSzeWen"},"content":"    private static void deadlineTaskHandler(String command) {","lastModifiedDate":"2023-02-04"},{"lineNumber":110,"author":{"gitId":"SSzeWen"},"content":"        try {","lastModifiedDate":"2023-02-04"},{"lineNumber":111,"author":{"gitId":"SSzeWen"},"content":"            initDeadlineTask(command);","lastModifiedDate":"2023-02-04"},{"lineNumber":112,"author":{"gitId":"SSzeWen"},"content":"        } catch (EmptyCommandException e) {","lastModifiedDate":"2023-02-04"},{"lineNumber":113,"author":{"gitId":"SSzeWen"},"content":"            emptyCommandMessage(\"deadline\");","lastModifiedDate":"2023-02-04"},{"lineNumber":114,"author":{"gitId":"SSzeWen"},"content":"        } catch (IllegalCommandException e) {","lastModifiedDate":"2023-02-04"},{"lineNumber":115,"author":{"gitId":"SSzeWen"},"content":"            illegalCommandMessage();","lastModifiedDate":"2023-02-04"},{"lineNumber":116,"author":{"gitId":"SSzeWen"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":117,"author":{"gitId":"SSzeWen"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":118,"author":{"gitId":"SSzeWen"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":119,"author":{"gitId":"SSzeWen"},"content":"    private static void emptyCommandMessage(String task) {","lastModifiedDate":"2023-02-04"},{"lineNumber":120,"author":{"gitId":"SSzeWen"},"content":"        System.out.println(LINE + \" ☹ OOPS!!! The description of a \" + task + \" cannot be empty.\\n\" + LINE);","lastModifiedDate":"2023-02-04"},{"lineNumber":121,"author":{"gitId":"SSzeWen"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":122,"author":{"gitId":"SSzeWen"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":123,"author":{"gitId":"SSzeWen"},"content":"    private static void illegalCommandMessage() {","lastModifiedDate":"2023-02-04"},{"lineNumber":124,"author":{"gitId":"SSzeWen"},"content":"        System.out.println(LINE + \" ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\" + LINE);","lastModifiedDate":"2023-02-04"},{"lineNumber":125,"author":{"gitId":"SSzeWen"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":126,"author":{"gitId":"SSzeWen"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":127,"author":{"gitId":"SSzeWen"},"content":"    private static void initEventTask(String command) throws IllegalCommandException, EmptyCommandException {","lastModifiedDate":"2023-02-04"},{"lineNumber":128,"author":{"gitId":"SSzeWen"},"content":"        command \u003d command.replace(\"event\", \"\").trim();","lastModifiedDate":"2023-02-04"},{"lineNumber":129,"author":{"gitId":"SSzeWen"},"content":"        if (command.isEmpty()) {","lastModifiedDate":"2023-02-04"},{"lineNumber":130,"author":{"gitId":"SSzeWen"},"content":"            throw new EmptyCommandException();","lastModifiedDate":"2023-02-04"},{"lineNumber":131,"author":{"gitId":"SSzeWen"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":132,"author":{"gitId":"SSzeWen"},"content":"        String[] stringSplit \u003d command.split(\" /from \");","lastModifiedDate":"2023-01-30"},{"lineNumber":133,"author":{"gitId":"SSzeWen"},"content":"        if (isInvalidString(stringSplit)) {","lastModifiedDate":"2023-01-30"},{"lineNumber":134,"author":{"gitId":"SSzeWen"},"content":"            throw new IllegalCommandException();","lastModifiedDate":"2023-02-04"},{"lineNumber":135,"author":{"gitId":"SSzeWen"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":136,"author":{"gitId":"SSzeWen"},"content":"        String[] startToEndTime \u003d stringSplit[1].split(\" /to \");","lastModifiedDate":"2023-02-04"},{"lineNumber":137,"author":{"gitId":"SSzeWen"},"content":"        if (isInvalidString(startToEndTime)) {","lastModifiedDate":"2023-02-04"},{"lineNumber":138,"author":{"gitId":"SSzeWen"},"content":"            throw new IllegalCommandException();","lastModifiedDate":"2023-02-04"},{"lineNumber":139,"author":{"gitId":"SSzeWen"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":140,"author":{"gitId":"SSzeWen"},"content":"        Task currTask \u003d new Event(stringSplit[0], startToEndTime[0], startToEndTime[1]);","lastModifiedDate":"2023-02-12"},{"lineNumber":141,"author":{"gitId":"SSzeWen"},"content":"        addTaskBackgroundProcess(currTask);","lastModifiedDate":"2023-02-12"},{"lineNumber":142,"author":{"gitId":"SSzeWen"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":143,"author":{"gitId":"SSzeWen"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":144,"author":{"gitId":"SSzeWen"},"content":"    private static void addTaskBackgroundProcess(Task currTask) {","lastModifiedDate":"2023-02-12"},{"lineNumber":145,"author":{"gitId":"SSzeWen"},"content":"        tasks.add(currTask);","lastModifiedDate":"2023-02-12"},{"lineNumber":146,"author":{"gitId":"SSzeWen"},"content":"        addTaskToDatabase(currTask);","lastModifiedDate":"2023-02-12"},{"lineNumber":147,"author":{"gitId":"SSzeWen"},"content":"        addSpecialTaskMessage();","lastModifiedDate":"2023-01-30"},{"lineNumber":148,"author":{"gitId":"SSzeWen"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":149,"author":{"gitId":"SSzeWen"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":150,"author":{"gitId":"SSzeWen"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":151,"author":{"gitId":"SSzeWen"},"content":"    private static boolean isInvalidString(String[] stringSplit) {","lastModifiedDate":"2023-01-30"},{"lineNumber":152,"author":{"gitId":"SSzeWen"},"content":"        return stringSplit.length !\u003d 2;","lastModifiedDate":"2023-01-30"},{"lineNumber":153,"author":{"gitId":"SSzeWen"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":154,"author":{"gitId":"SSzeWen"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":155,"author":{"gitId":"SSzeWen"},"content":"    private static void initDeadlineTask(String command) throws EmptyCommandException, IllegalCommandException {","lastModifiedDate":"2023-02-04"},{"lineNumber":156,"author":{"gitId":"SSzeWen"},"content":"        command \u003d command.replace(\"deadline\", \"\").trim();","lastModifiedDate":"2023-02-04"},{"lineNumber":157,"author":{"gitId":"SSzeWen"},"content":"        if (command.isEmpty()) {","lastModifiedDate":"2023-02-04"},{"lineNumber":158,"author":{"gitId":"SSzeWen"},"content":"            throw new EmptyCommandException();","lastModifiedDate":"2023-02-04"},{"lineNumber":159,"author":{"gitId":"SSzeWen"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":160,"author":{"gitId":"SSzeWen"},"content":"        String[] stringSplit \u003d command.split(\" /by \");","lastModifiedDate":"2023-01-28"},{"lineNumber":161,"author":{"gitId":"SSzeWen"},"content":"        if (isInvalidString(stringSplit)) {","lastModifiedDate":"2023-01-30"},{"lineNumber":162,"author":{"gitId":"SSzeWen"},"content":"            throw new IllegalCommandException();","lastModifiedDate":"2023-02-04"},{"lineNumber":163,"author":{"gitId":"SSzeWen"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":164,"author":{"gitId":"SSzeWen"},"content":"        Task currTask \u003d new Deadline(stringSplit[0], stringSplit[1]);","lastModifiedDate":"2023-02-12"},{"lineNumber":165,"author":{"gitId":"SSzeWen"},"content":"        addTaskBackgroundProcess(currTask);","lastModifiedDate":"2023-02-12"},{"lineNumber":166,"author":{"gitId":"SSzeWen"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":167,"author":{"gitId":"SSzeWen"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":168,"author":{"gitId":"SSzeWen"},"content":"    private static void initTodoTask(String command) throws EmptyCommandException {","lastModifiedDate":"2023-02-04"},{"lineNumber":169,"author":{"gitId":"SSzeWen"},"content":"        String todo \u003d command.replace(\"todo\", \"\").trim();","lastModifiedDate":"2023-02-04"},{"lineNumber":170,"author":{"gitId":"SSzeWen"},"content":"        if (todo.isEmpty()) {","lastModifiedDate":"2023-02-04"},{"lineNumber":171,"author":{"gitId":"SSzeWen"},"content":"            throw new EmptyCommandException();","lastModifiedDate":"2023-02-04"},{"lineNumber":172,"author":{"gitId":"SSzeWen"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":173,"author":{"gitId":"SSzeWen"},"content":"        Task currTask \u003d new Todo(todo);","lastModifiedDate":"2023-02-12"},{"lineNumber":174,"author":{"gitId":"SSzeWen"},"content":"        addTaskBackgroundProcess(currTask);","lastModifiedDate":"2023-02-12"},{"lineNumber":175,"author":{"gitId":"SSzeWen"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":176,"author":{"gitId":"SSzeWen"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":177,"author":{"gitId":"SSzeWen"},"content":"    private static void addTaskToDatabase(Task currTask) {","lastModifiedDate":"2023-02-12"},{"lineNumber":178,"author":{"gitId":"SSzeWen"},"content":"        try {","lastModifiedDate":"2023-02-12"},{"lineNumber":179,"author":{"gitId":"SSzeWen"},"content":"            database.saveAddTask(currTask.getTaskString());","lastModifiedDate":"2023-02-12"},{"lineNumber":180,"author":{"gitId":"SSzeWen"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":181,"author":{"gitId":"SSzeWen"},"content":"            System.out.println(\"save failed\");","lastModifiedDate":"2023-02-12"},{"lineNumber":182,"author":{"gitId":"SSzeWen"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":183,"author":{"gitId":"SSzeWen"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":184,"author":{"gitId":"SSzeWen"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":185,"author":{"gitId":"SSzeWen"},"content":"    private static void addSpecialTaskMessage() {","lastModifiedDate":"2023-01-30"},{"lineNumber":186,"author":{"gitId":"SSzeWen"},"content":"        int lastElement \u003d tasks.size() - 1;","lastModifiedDate":"2023-02-11"},{"lineNumber":187,"author":{"gitId":"SSzeWen"},"content":"        System.out.println(LINE + tasks.get(lastElement).addTaskMessage() + \"Now you have \" + (lastElement + 1)","lastModifiedDate":"2023-02-11"},{"lineNumber":188,"author":{"gitId":"SSzeWen"},"content":"                + \" tasks in the list.\" + System.lineSeparator() + LINE);","lastModifiedDate":"2023-01-30"},{"lineNumber":189,"author":{"gitId":"SSzeWen"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":190,"author":{"gitId":"SSzeWen"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":191,"author":{"gitId":"SSzeWen"},"content":"    private static void deleteTaskMessage(int deleteIndex) {","lastModifiedDate":"2023-02-11"},{"lineNumber":192,"author":{"gitId":"SSzeWen"},"content":"        int lastElement \u003d tasks.size() - 1;","lastModifiedDate":"2023-02-11"},{"lineNumber":193,"author":{"gitId":"SSzeWen"},"content":"        System.out.println(LINE + tasks.get(deleteIndex).deleteTaskMessage() + \"Now you have \" + (tasks.size() - 1) +","lastModifiedDate":"2023-02-11"},{"lineNumber":194,"author":{"gitId":"SSzeWen"},"content":"                \" tasks in the list.\" + System.lineSeparator() + LINE);","lastModifiedDate":"2023-02-11"},{"lineNumber":195,"author":{"gitId":"SSzeWen"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":196,"author":{"gitId":"SSzeWen"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":197,"author":{"gitId":"SSzeWen"},"content":"    private static void markAndUnmarkTask(String command) throws IllegalCommandException {","lastModifiedDate":"2023-02-04"},{"lineNumber":198,"author":{"gitId":"SSzeWen"},"content":"        String[] words \u003d command.split(\" \");","lastModifiedDate":"2023-01-30"},{"lineNumber":199,"author":{"gitId":"SSzeWen"},"content":"        if (words.length !\u003d 2) {","lastModifiedDate":"2023-02-04"},{"lineNumber":200,"author":{"gitId":"SSzeWen"},"content":"            throw new IllegalCommandException();","lastModifiedDate":"2023-02-04"},{"lineNumber":201,"author":{"gitId":"SSzeWen"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":202,"author":{"gitId":"SSzeWen"},"content":"        int indexOfMarking \u003d getIndex(words[1]);","lastModifiedDate":"2023-02-04"},{"lineNumber":203,"author":{"gitId":"SSzeWen"},"content":"        if (!isValidIndex(indexOfMarking)) {","lastModifiedDate":"2023-02-11"},{"lineNumber":204,"author":{"gitId":"SSzeWen"},"content":"            throw new IllegalCommandException();","lastModifiedDate":"2023-02-04"},{"lineNumber":205,"author":{"gitId":"SSzeWen"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":206,"author":{"gitId":"SSzeWen"},"content":"        createMarkOrUnmark(command, words, indexOfMarking);","lastModifiedDate":"2023-02-04"},{"lineNumber":207,"author":{"gitId":"SSzeWen"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":208,"author":{"gitId":"SSzeWen"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":209,"author":{"gitId":"SSzeWen"},"content":"    private static void createMarkOrUnmark(String command, String[] words, int indexOfMarking) {","lastModifiedDate":"2023-01-30"},{"lineNumber":210,"author":{"gitId":"SSzeWen"},"content":"        tasks.get(indexOfMarking).setDone(words[0]);","lastModifiedDate":"2023-02-11"},{"lineNumber":211,"author":{"gitId":"SSzeWen"},"content":"        System.out.print(LINE);","lastModifiedDate":"2023-01-30"},{"lineNumber":212,"author":{"gitId":"SSzeWen"},"content":"        if (command.startsWith(\"mark \")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":213,"author":{"gitId":"SSzeWen"},"content":"            System.out.println(MARK_MESSAGE);","lastModifiedDate":"2023-01-30"},{"lineNumber":214,"author":{"gitId":"SSzeWen"},"content":"        } else {","lastModifiedDate":"2023-01-30"},{"lineNumber":215,"author":{"gitId":"SSzeWen"},"content":"            System.out.println(UNMARK_MESSAGE);","lastModifiedDate":"2023-01-30"},{"lineNumber":216,"author":{"gitId":"SSzeWen"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":217,"author":{"gitId":"SSzeWen"},"content":"        try {","lastModifiedDate":"2023-02-12"},{"lineNumber":218,"author":{"gitId":"SSzeWen"},"content":"            database.updateDatabaseTask();","lastModifiedDate":"2023-02-12"},{"lineNumber":219,"author":{"gitId":"SSzeWen"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":220,"author":{"gitId":"SSzeWen"},"content":"            System.out.println(\"Update database failure\");","lastModifiedDate":"2023-02-12"},{"lineNumber":221,"author":{"gitId":"SSzeWen"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":222,"author":{"gitId":"SSzeWen"},"content":"        System.out.println(\"  \" + tasks.get(indexOfMarking).toString() + System.lineSeparator() + LINE);","lastModifiedDate":"2023-02-11"},{"lineNumber":223,"author":{"gitId":"SSzeWen"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":224,"author":{"gitId":"SSzeWen"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":225,"author":{"gitId":"SSzeWen"},"content":"    private static boolean isValidIndex(int indexOfMarking) {","lastModifiedDate":"2023-02-11"},{"lineNumber":226,"author":{"gitId":"SSzeWen"},"content":"        if (indexOfMarking \u003c 0 || indexOfMarking \u003e (tasks.size() - 1)) {","lastModifiedDate":"2023-02-11"},{"lineNumber":227,"author":{"gitId":"SSzeWen"},"content":"            return false;","lastModifiedDate":"2023-01-30"},{"lineNumber":228,"author":{"gitId":"SSzeWen"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":229,"author":{"gitId":"SSzeWen"},"content":"        return true;","lastModifiedDate":"2023-01-30"},{"lineNumber":230,"author":{"gitId":"SSzeWen"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":231,"author":{"gitId":"SSzeWen"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":232,"author":{"gitId":"SSzeWen"},"content":"    private static void exit() {","lastModifiedDate":"2023-01-30"},{"lineNumber":233,"author":{"gitId":"SSzeWen"},"content":"        System.out.print(LINE + EXIT_MESSAGE + System.lineSeparator() + LINE); // Duke saying goodbye and closes program","lastModifiedDate":"2023-01-30"},{"lineNumber":234,"author":{"gitId":"SSzeWen"},"content":"        isProgramRunning \u003d false;","lastModifiedDate":"2023-01-30"},{"lineNumber":235,"author":{"gitId":"SSzeWen"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":236,"author":{"gitId":"SSzeWen"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":237,"author":{"gitId":"SSzeWen"},"content":"    private static void printList() {","lastModifiedDate":"2023-01-30"},{"lineNumber":238,"author":{"gitId":"SSzeWen"},"content":"        System.out.print(LINE);","lastModifiedDate":"2023-01-30"},{"lineNumber":239,"author":{"gitId":"SSzeWen"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); ++i) {","lastModifiedDate":"2023-02-11"},{"lineNumber":240,"author":{"gitId":"SSzeWen"},"content":"            System.out.println((i + 1) + \".\" + tasks.get(i).toString());","lastModifiedDate":"2023-02-11"},{"lineNumber":241,"author":{"gitId":"SSzeWen"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":242,"author":{"gitId":"SSzeWen"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-01-30"},{"lineNumber":243,"author":{"gitId":"SSzeWen"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":244,"author":{"gitId":"SSzeWen"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":245,"author":{"gitId":"SSzeWen"},"content":"    private static void greeting() {","lastModifiedDate":"2023-01-30"},{"lineNumber":246,"author":{"gitId":"SSzeWen"},"content":"        System.out.println(LINE + GREET_MESSAGE);","lastModifiedDate":"2023-01-30"},{"lineNumber":247,"author":{"gitId":"SSzeWen"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":248,"author":{"gitId":"SSzeWen"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":249,"author":{"gitId":"SSzeWen"},"content":"    private static int getIndex(String strNum) {","lastModifiedDate":"2023-02-04"},{"lineNumber":250,"author":{"gitId":"SSzeWen"},"content":"        // Referenced from https://www.baeldung.com/java-check-string-number","lastModifiedDate":"2023-01-30"},{"lineNumber":251,"author":{"gitId":"SSzeWen"},"content":"        int index \u003d 0;","lastModifiedDate":"2023-01-30"},{"lineNumber":252,"author":{"gitId":"SSzeWen"},"content":"        if (strNum \u003d\u003d null) {","lastModifiedDate":"2023-01-30"},{"lineNumber":253,"author":{"gitId":"SSzeWen"},"content":"            return -1;","lastModifiedDate":"2023-01-30"},{"lineNumber":254,"author":{"gitId":"SSzeWen"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":255,"author":{"gitId":"SSzeWen"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":256,"author":{"gitId":"SSzeWen"},"content":"            index \u003d Integer.parseInt(strNum);","lastModifiedDate":"2023-01-30"},{"lineNumber":257,"author":{"gitId":"SSzeWen"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2023-01-30"},{"lineNumber":258,"author":{"gitId":"SSzeWen"},"content":"            return -1;","lastModifiedDate":"2023-01-30"},{"lineNumber":259,"author":{"gitId":"SSzeWen"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":260,"author":{"gitId":"SSzeWen"},"content":"        index--;","lastModifiedDate":"2023-02-11"},{"lineNumber":261,"author":{"gitId":"SSzeWen"},"content":"        return index; // Returns 0-index of parsing Integer or -1 if string is not a number or empty","lastModifiedDate":"2023-02-11"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"SSzeWen":259,"-":4}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SSzeWen"},"content":"package duke.exception;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"SSzeWen"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"SSzeWen"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"SSzeWen"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"SSzeWen"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"SSzeWen":5}},{"path":"src/main/java/duke/exception/EmptyCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SSzeWen"},"content":"package duke.exception;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"SSzeWen"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"SSzeWen"},"content":"public class EmptyCommandException extends DukeException{","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"SSzeWen"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"SSzeWen":4}},{"path":"src/main/java/duke/exception/IllegalCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SSzeWen"},"content":"package duke.exception;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"SSzeWen"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"SSzeWen"},"content":"public class IllegalCommandException extends DukeException {","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"SSzeWen"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"SSzeWen":4}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SSzeWen"},"content":"package duke.task;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"SSzeWen"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"SSzeWen"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"SSzeWen"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"SSzeWen"},"content":"    protected String deadline;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"SSzeWen"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"SSzeWen"},"content":"    public Deadline(String description, String deadline) {","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"SSzeWen"},"content":"        super(description);","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"SSzeWen"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"SSzeWen"},"content":"        this.taskString \u003d saveTaskString();","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"SSzeWen"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"SSzeWen"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"SSzeWen"},"content":"    @Override","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"SSzeWen"},"content":"    public String toString() {","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"SSzeWen"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + deadline + \")\";","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"SSzeWen"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"SSzeWen"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"SSzeWen"},"content":"    @Override","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"SSzeWen"},"content":"    public String saveTaskString() {","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"SSzeWen"},"content":"        String saveString \u003d new String();","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"SSzeWen"},"content":"        saveString +\u003d \"D\" + COMMA_TASK_SEPARATOR + isDone + COMMA_TASK_SEPARATOR + description + COMMA_TASK_SEPARATOR","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"SSzeWen"},"content":"                + deadline;","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"SSzeWen"},"content":"        return saveString;","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"SSzeWen"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"SSzeWen"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"SSzeWen":25}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SSzeWen"},"content":"package duke.task;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"SSzeWen"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"SSzeWen"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"SSzeWen"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"SSzeWen"},"content":"    protected String eventFrom;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"SSzeWen"},"content":"    protected String eventTo;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"SSzeWen"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"SSzeWen"},"content":"    public Event(String description, String eventFrom, String eventTo) {","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"SSzeWen"},"content":"        super(description);","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"SSzeWen"},"content":"        this.eventFrom \u003d eventFrom;","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"SSzeWen"},"content":"        this.eventTo \u003d eventTo;","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"SSzeWen"},"content":"        this.taskString \u003d saveTaskString();","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"SSzeWen"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"SSzeWen"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"SSzeWen"},"content":"    @Override","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"SSzeWen"},"content":"    public String toString() {","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"SSzeWen"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + eventFrom + \" to: \" + eventTo + \")\";","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"SSzeWen"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"SSzeWen"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"SSzeWen"},"content":"    @Override","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"SSzeWen"},"content":"    public String saveTaskString() {","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"SSzeWen"},"content":"        String saveString \u003d new String();","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"SSzeWen"},"content":"        saveString +\u003d \"E\" + COMMA_TASK_SEPARATOR + isDone + COMMA_TASK_SEPARATOR + description + COMMA_TASK_SEPARATOR","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"SSzeWen"},"content":"                + eventFrom + COMMA_TASK_SEPARATOR + eventTo;","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"SSzeWen"},"content":"        return saveString;","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"SSzeWen"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"SSzeWen"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"SSzeWen":27}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SSzeWen"},"content":"package duke.task;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"SSzeWen"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"SSzeWen"},"content":"public abstract class Task {","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"SSzeWen"},"content":"    protected String description;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"SSzeWen"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"SSzeWen"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"SSzeWen"},"content":"    protected String taskString;","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"SSzeWen"},"content":"    public static final String COMMA_TASK_SEPARATOR \u003d \" , \";","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"SSzeWen"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"SSzeWen"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"SSzeWen"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"SSzeWen"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"SSzeWen"},"content":"        this.taskString \u003d saveTaskString();","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"SSzeWen"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"SSzeWen"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"SSzeWen"},"content":"    public String toString() {","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"SSzeWen"},"content":"        if (isDone) {","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"SSzeWen"},"content":"            return \"[X] \" + description;","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"SSzeWen"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"SSzeWen"},"content":"        return \"[ ] \" + description;","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"SSzeWen"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"SSzeWen"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"SSzeWen"},"content":"    public void setDone(String mark) {","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"SSzeWen"},"content":"        if (mark.equals(\"mark\")) {","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"SSzeWen"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"SSzeWen"},"content":"        } else {","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"SSzeWen"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"SSzeWen"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"SSzeWen"},"content":"        this.taskString \u003d saveTaskString();","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"SSzeWen"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"SSzeWen"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"SSzeWen"},"content":"    public abstract String saveTaskString();","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"SSzeWen"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"SSzeWen"},"content":"    public String addTaskMessage() {","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"SSzeWen"},"content":"        return \"Got it. I\u0027ve added this task:\\n  \" + this.toString() + System.lineSeparator();","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"SSzeWen"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"SSzeWen"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"SSzeWen"},"content":"    public String deleteTaskMessage() {","lastModifiedDate":"2023-02-11"},{"lineNumber":39,"author":{"gitId":"SSzeWen"},"content":"        return \"Noted. I\u0027ve removed this task:\\n  \" + this.toString() + System.lineSeparator();","lastModifiedDate":"2023-02-11"},{"lineNumber":40,"author":{"gitId":"SSzeWen"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":41,"author":{"gitId":"SSzeWen"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"SSzeWen"},"content":"    public String getTaskString() {","lastModifiedDate":"2023-02-12"},{"lineNumber":43,"author":{"gitId":"SSzeWen"},"content":"        return taskString;","lastModifiedDate":"2023-02-12"},{"lineNumber":44,"author":{"gitId":"SSzeWen"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":45,"author":{"gitId":"SSzeWen"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":46,"author":{"gitId":"SSzeWen"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"SSzeWen":46}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SSzeWen"},"content":"package duke.task;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"SSzeWen"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"SSzeWen"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"SSzeWen"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"SSzeWen"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"SSzeWen"},"content":"        super(description);","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"SSzeWen"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"SSzeWen"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"SSzeWen"},"content":"    @Override","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"SSzeWen"},"content":"    public String toString() {","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"SSzeWen"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"SSzeWen"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"SSzeWen"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"SSzeWen"},"content":"    @Override","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"SSzeWen"},"content":"    public String saveTaskString() {","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"SSzeWen"},"content":"        String saveString \u003d new String();","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"SSzeWen"},"content":"        saveString +\u003d \"T\" + COMMA_TASK_SEPARATOR + isDone + COMMA_TASK_SEPARATOR + description;","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"SSzeWen"},"content":"        return saveString;","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"SSzeWen"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"SSzeWen"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"SSzeWen":20}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"SSzeWen"},"content":"mark i am","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"SSzeWen"},"content":"mark 3","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"SSzeWen"},"content":"todo borrow book","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"SSzeWen"},"content":"list","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"SSzeWen"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"SSzeWen"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"SSzeWen"},"content":"mark 1","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"SSzeWen"},"content":"list","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"SSzeWen"},"content":"mark 2","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"SSzeWen"},"content":"unmark 1","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"SSzeWen"},"content":"list","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"SSzeWen"},"content":"deadline","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"SSzeWen"},"content":"todo","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"SSzeWen"},"content":"event","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"SSzeWen"},"content":"list","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"SSzeWen"},"content":"blah","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"SSzeWen"},"content":"delete 1","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"SSzeWen"},"content":"mark 2","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"SSzeWen"},"content":"unmark 1","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"SSzeWen"},"content":"list","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"SSzeWen"},"content":"bye","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"SSzeWen":21}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"SSzeWen"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\task\\*.java","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"SSzeWen"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"SSzeWen":2,"-":19}}]
