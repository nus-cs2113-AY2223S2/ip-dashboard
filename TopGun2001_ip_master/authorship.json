[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"TopGun2001"},"content":"# Rolex: The Task Manager  🗓 ✅","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"TopGun2001"},"content":"Rolex is a Task Manager developed using Java. It can support a wide range of operations which is mentioned in this user guide.","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"TopGun2001"},"content":"Given below are the operations Rolex can provide:","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"TopGun2001"},"content":"1. [Add Task](#add_task)","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"TopGun2001"},"content":"    1. [Todo](#todo) ","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"TopGun2001"},"content":"    2. [Event](#event)","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"TopGun2001"},"content":"    3. [Deadline](#deadline)    ","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"TopGun2001"},"content":"2. [Mark/Unmark Task](#mum_task)","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"TopGun2001"},"content":"    1. [Mark Task](#mtask)","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"TopGun2001"},"content":"    2. [Unmark Task](#untask)","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"TopGun2001"},"content":"3. [Delete Task](#dtask)","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"TopGun2001"},"content":"4. [List Task](#ltask)","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"TopGun2001"},"content":"5. [Find Task](#ftask)","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"TopGun2001"},"content":"6. [Exit](#bye)","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"TopGun2001"},"content":"--------------------------------------------------------------------","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"TopGun2001"},"content":"### NOTE:","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"TopGun2001"},"content":"* Users are required to enter inputs as mentioned in the ```Command``` section under each operation.","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"TopGun2001"},"content":"* Failure to comply to these rules will result in errors.","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"TopGun2001"},"content":"--------------------------------------------------------------------","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":23,"author":{"gitId":"TopGun2001"},"content":"# 1. Add Task \u003ca name \u003d \"add_task\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":25,"author":{"gitId":"TopGun2001"},"content":"There are 3 types of tasks you can add.","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":27,"author":{"gitId":"TopGun2001"},"content":"This is how you should add a task.","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"TopGun2001"},"content":"## 1.1. Todo \u003ca name \u003d \"todo\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"TopGun2001"},"content":"* Command: ```todo {description}```","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"TopGun2001"},"content":"* Example:","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":33,"author":{"gitId":"TopGun2001"},"content":"Input:","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"TopGun2001"},"content":"```","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"TopGun2001"},"content":"todo watch Real Madrid game","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"TopGun2001"},"content":"```","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"TopGun2001"},"content":"Output:","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"TopGun2001"},"content":"```","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"TopGun2001"},"content":"--------------------------------------------------","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"TopGun2001"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"TopGun2001"},"content":"[T][ ] watch Real Madrid game","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"TopGun2001"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"TopGun2001"},"content":"--------------------------------------------------","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"TopGun2001"},"content":"```","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"TopGun2001"},"content":"## 1.2. Event \u003ca name \u003d \"event\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"TopGun2001"},"content":"* Command: ```event {description} \\from {description} \\to {description}```","lastModifiedDate":"2023-02-26"},{"lineNumber":49,"author":{"gitId":"TopGun2001"},"content":"* Example:","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"TopGun2001"},"content":"Input:","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"TopGun2001"},"content":"```","lastModifiedDate":"2023-02-26"},{"lineNumber":53,"author":{"gitId":"TopGun2001"},"content":"event project meeting /from 6pm /to 9pm","lastModifiedDate":"2023-02-26"},{"lineNumber":54,"author":{"gitId":"TopGun2001"},"content":"```","lastModifiedDate":"2023-02-26"},{"lineNumber":55,"author":{"gitId":"TopGun2001"},"content":"Output:","lastModifiedDate":"2023-02-26"},{"lineNumber":56,"author":{"gitId":"TopGun2001"},"content":"```","lastModifiedDate":"2023-02-26"},{"lineNumber":57,"author":{"gitId":"TopGun2001"},"content":"--------------------------------------------------","lastModifiedDate":"2023-02-26"},{"lineNumber":58,"author":{"gitId":"TopGun2001"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-02-26"},{"lineNumber":59,"author":{"gitId":"TopGun2001"},"content":"[E][ ] project meeting (from: 6pm to: 9pm)","lastModifiedDate":"2023-02-26"},{"lineNumber":60,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":61,"author":{"gitId":"TopGun2001"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2023-02-26"},{"lineNumber":62,"author":{"gitId":"TopGun2001"},"content":"--------------------------------------------------","lastModifiedDate":"2023-02-26"},{"lineNumber":63,"author":{"gitId":"TopGun2001"},"content":"```","lastModifiedDate":"2023-02-26"},{"lineNumber":64,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":65,"author":{"gitId":"TopGun2001"},"content":"## 1.3. Deadline \u003ca name \u003d \"deadline\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-02-26"},{"lineNumber":66,"author":{"gitId":"TopGun2001"},"content":"* Command: ```deadline {description} \\by yyyy-mm-dd hhmm```","lastModifiedDate":"2023-02-26"},{"lineNumber":67,"author":{"gitId":"TopGun2001"},"content":"* Example:","lastModifiedDate":"2023-02-26"},{"lineNumber":68,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":69,"author":{"gitId":"TopGun2001"},"content":"Input:","lastModifiedDate":"2023-02-26"},{"lineNumber":70,"author":{"gitId":"TopGun2001"},"content":"```","lastModifiedDate":"2023-02-26"},{"lineNumber":71,"author":{"gitId":"TopGun2001"},"content":"deadline submit assignment \\by 2023-04-01 2359","lastModifiedDate":"2023-02-26"},{"lineNumber":72,"author":{"gitId":"TopGun2001"},"content":"```","lastModifiedDate":"2023-02-26"},{"lineNumber":73,"author":{"gitId":"TopGun2001"},"content":"Output:","lastModifiedDate":"2023-02-26"},{"lineNumber":74,"author":{"gitId":"TopGun2001"},"content":"```","lastModifiedDate":"2023-02-26"},{"lineNumber":75,"author":{"gitId":"TopGun2001"},"content":"--------------------------------------------------","lastModifiedDate":"2023-02-26"},{"lineNumber":76,"author":{"gitId":"TopGun2001"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-02-26"},{"lineNumber":77,"author":{"gitId":"TopGun2001"},"content":"[D][ ] submit assignment (by:1 APRIL 2023, SATURDAY, 11:59PM)","lastModifiedDate":"2023-02-26"},{"lineNumber":78,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":79,"author":{"gitId":"TopGun2001"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2023-02-26"},{"lineNumber":80,"author":{"gitId":"TopGun2001"},"content":"--------------------------------------------------","lastModifiedDate":"2023-02-26"},{"lineNumber":81,"author":{"gitId":"TopGun2001"},"content":"```","lastModifiedDate":"2023-02-26"},{"lineNumber":82,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":83,"author":{"gitId":"TopGun2001"},"content":"# 2. Mark/Unmark Task \u003ca name \u003d \"mum_task\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-02-26"},{"lineNumber":84,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":85,"author":{"gitId":"TopGun2001"},"content":"This is how you should mark or unmark tasks.","lastModifiedDate":"2023-02-26"},{"lineNumber":86,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":87,"author":{"gitId":"TopGun2001"},"content":"## 2.1. Mark Task \u003ca name\u003d\"mtask\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-02-26"},{"lineNumber":88,"author":{"gitId":"TopGun2001"},"content":"* Command: ```mark {task_index}```","lastModifiedDate":"2023-02-26"},{"lineNumber":89,"author":{"gitId":"TopGun2001"},"content":"* Example:","lastModifiedDate":"2023-02-26"},{"lineNumber":90,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":91,"author":{"gitId":"TopGun2001"},"content":"Input:","lastModifiedDate":"2023-02-26"},{"lineNumber":92,"author":{"gitId":"TopGun2001"},"content":"```","lastModifiedDate":"2023-02-26"},{"lineNumber":93,"author":{"gitId":"TopGun2001"},"content":"mark 1","lastModifiedDate":"2023-02-26"},{"lineNumber":94,"author":{"gitId":"TopGun2001"},"content":"```","lastModifiedDate":"2023-02-26"},{"lineNumber":95,"author":{"gitId":"TopGun2001"},"content":"Output:","lastModifiedDate":"2023-02-26"},{"lineNumber":96,"author":{"gitId":"TopGun2001"},"content":"```","lastModifiedDate":"2023-02-26"},{"lineNumber":97,"author":{"gitId":"TopGun2001"},"content":"--------------------------------------------------","lastModifiedDate":"2023-02-26"},{"lineNumber":98,"author":{"gitId":"TopGun2001"},"content":"Well Done. This task is marked as done:","lastModifiedDate":"2023-02-26"},{"lineNumber":99,"author":{"gitId":"TopGun2001"},"content":"[T][X] watch Real Madrid game","lastModifiedDate":"2023-02-26"},{"lineNumber":100,"author":{"gitId":"TopGun2001"},"content":"--------------------------------------------------","lastModifiedDate":"2023-02-26"},{"lineNumber":101,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":102,"author":{"gitId":"TopGun2001"},"content":"```","lastModifiedDate":"2023-02-26"},{"lineNumber":103,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":104,"author":{"gitId":"TopGun2001"},"content":"## 2.2. Unmark Task \u003ca name\u003d\"untask\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-02-26"},{"lineNumber":105,"author":{"gitId":"TopGun2001"},"content":"* Command: ```unmark {task_index}```","lastModifiedDate":"2023-02-26"},{"lineNumber":106,"author":{"gitId":"TopGun2001"},"content":"* Example:","lastModifiedDate":"2023-02-26"},{"lineNumber":107,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":108,"author":{"gitId":"TopGun2001"},"content":"Input:","lastModifiedDate":"2023-02-26"},{"lineNumber":109,"author":{"gitId":"TopGun2001"},"content":"```","lastModifiedDate":"2023-02-26"},{"lineNumber":110,"author":{"gitId":"TopGun2001"},"content":"unmark 1","lastModifiedDate":"2023-02-26"},{"lineNumber":111,"author":{"gitId":"TopGun2001"},"content":"```","lastModifiedDate":"2023-02-26"},{"lineNumber":112,"author":{"gitId":"TopGun2001"},"content":"Output:","lastModifiedDate":"2023-02-26"},{"lineNumber":113,"author":{"gitId":"TopGun2001"},"content":"```","lastModifiedDate":"2023-02-26"},{"lineNumber":114,"author":{"gitId":"TopGun2001"},"content":"--------------------------------------------------","lastModifiedDate":"2023-02-26"},{"lineNumber":115,"author":{"gitId":"TopGun2001"},"content":"Oh no, I\u0027ve unmarked this task as it is not done:","lastModifiedDate":"2023-02-26"},{"lineNumber":116,"author":{"gitId":"TopGun2001"},"content":"[T][ ] watch Real Madrid game","lastModifiedDate":"2023-02-26"},{"lineNumber":117,"author":{"gitId":"TopGun2001"},"content":"--------------------------------------------------","lastModifiedDate":"2023-02-26"},{"lineNumber":118,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":119,"author":{"gitId":"TopGun2001"},"content":"```","lastModifiedDate":"2023-02-26"},{"lineNumber":120,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":121,"author":{"gitId":"TopGun2001"},"content":"# 3. Delete Task \u003ca name \u003d \"dtask\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-02-26"},{"lineNumber":122,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":123,"author":{"gitId":"TopGun2001"},"content":"This is how you should delete a task.","lastModifiedDate":"2023-02-26"},{"lineNumber":124,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":125,"author":{"gitId":"TopGun2001"},"content":"* Command: ```delete {task_index}```","lastModifiedDate":"2023-02-26"},{"lineNumber":126,"author":{"gitId":"TopGun2001"},"content":"* Example:","lastModifiedDate":"2023-02-26"},{"lineNumber":127,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":128,"author":{"gitId":"TopGun2001"},"content":"Input:","lastModifiedDate":"2023-02-26"},{"lineNumber":129,"author":{"gitId":"TopGun2001"},"content":"```","lastModifiedDate":"2023-02-26"},{"lineNumber":130,"author":{"gitId":"TopGun2001"},"content":"delete 1","lastModifiedDate":"2023-02-26"},{"lineNumber":131,"author":{"gitId":"TopGun2001"},"content":"```","lastModifiedDate":"2023-02-26"},{"lineNumber":132,"author":{"gitId":"TopGun2001"},"content":"Output:","lastModifiedDate":"2023-02-26"},{"lineNumber":133,"author":{"gitId":"TopGun2001"},"content":"```","lastModifiedDate":"2023-02-26"},{"lineNumber":134,"author":{"gitId":"TopGun2001"},"content":"--------------------------------------------------","lastModifiedDate":"2023-02-26"},{"lineNumber":135,"author":{"gitId":"TopGun2001"},"content":"Noted. I\u0027ve removed this task.","lastModifiedDate":"2023-02-26"},{"lineNumber":136,"author":{"gitId":"TopGun2001"},"content":"[T][ ] watch Real Madrid game","lastModifiedDate":"2023-02-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":138,"author":{"gitId":"TopGun2001"},"content":"Now you have 0 tasks in the list.","lastModifiedDate":"2023-02-26"},{"lineNumber":139,"author":{"gitId":"TopGun2001"},"content":"--------------------------------------------------","lastModifiedDate":"2023-02-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":141,"author":{"gitId":"TopGun2001"},"content":"```","lastModifiedDate":"2023-02-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":143,"author":{"gitId":"TopGun2001"},"content":"# 4. List Task \u003ca name \u003d \"ltask\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-02-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":145,"author":{"gitId":"TopGun2001"},"content":"This is how you shoud list tasks.","lastModifiedDate":"2023-02-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":147,"author":{"gitId":"TopGun2001"},"content":"* Command: ```list```","lastModifiedDate":"2023-02-26"},{"lineNumber":148,"author":{"gitId":"TopGun2001"},"content":"* Example:","lastModifiedDate":"2023-02-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":150,"author":{"gitId":"TopGun2001"},"content":"Input:","lastModifiedDate":"2023-02-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":152,"author":{"gitId":"TopGun2001"},"content":"list","lastModifiedDate":"2023-02-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":154,"author":{"gitId":"TopGun2001"},"content":"Output:","lastModifiedDate":"2023-02-26"},{"lineNumber":155,"author":{"gitId":"TopGun2001"},"content":"```","lastModifiedDate":"2023-02-26"},{"lineNumber":156,"author":{"gitId":"TopGun2001"},"content":"--------------------------------------------------","lastModifiedDate":"2023-02-26"},{"lineNumber":157,"author":{"gitId":"TopGun2001"},"content":"Here are the tasks in your list:","lastModifiedDate":"2023-02-26"},{"lineNumber":158,"author":{"gitId":"TopGun2001"},"content":"1. [T][ ] watch Real Madrid game","lastModifiedDate":"2023-02-26"},{"lineNumber":159,"author":{"gitId":"TopGun2001"},"content":"2. [D][ ] submit work (by:5 APRIL 2023, WEDNESDAY, 02:56PM)","lastModifiedDate":"2023-02-26"},{"lineNumber":160,"author":{"gitId":"TopGun2001"},"content":"--------------------------------------------------","lastModifiedDate":"2023-02-26"},{"lineNumber":161,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":162,"author":{"gitId":"TopGun2001"},"content":"```","lastModifiedDate":"2023-02-26"},{"lineNumber":163,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":164,"author":{"gitId":"TopGun2001"},"content":"# 5. Find Task \u003ca name \u003d \"ftask\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-02-26"},{"lineNumber":165,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":166,"author":{"gitId":"TopGun2001"},"content":"This is how you should find a particular task.","lastModifiedDate":"2023-02-26"},{"lineNumber":167,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":168,"author":{"gitId":"TopGun2001"},"content":"* Command: ```find {keyword}```","lastModifiedDate":"2023-02-26"},{"lineNumber":169,"author":{"gitId":"TopGun2001"},"content":"* Example:","lastModifiedDate":"2023-02-26"},{"lineNumber":170,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":171,"author":{"gitId":"TopGun2001"},"content":"Input:","lastModifiedDate":"2023-02-26"},{"lineNumber":172,"author":{"gitId":"TopGun2001"},"content":"```","lastModifiedDate":"2023-02-26"},{"lineNumber":173,"author":{"gitId":"TopGun2001"},"content":"find game","lastModifiedDate":"2023-02-26"},{"lineNumber":174,"author":{"gitId":"TopGun2001"},"content":"```","lastModifiedDate":"2023-02-26"},{"lineNumber":175,"author":{"gitId":"TopGun2001"},"content":"Output:","lastModifiedDate":"2023-02-26"},{"lineNumber":176,"author":{"gitId":"TopGun2001"},"content":"```","lastModifiedDate":"2023-02-26"},{"lineNumber":177,"author":{"gitId":"TopGun2001"},"content":"--------------------------------------------------","lastModifiedDate":"2023-02-26"},{"lineNumber":178,"author":{"gitId":"TopGun2001"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2023-02-26"},{"lineNumber":179,"author":{"gitId":"TopGun2001"},"content":"2. [T][ ] watch Real Madrid game","lastModifiedDate":"2023-02-26"},{"lineNumber":180,"author":{"gitId":"TopGun2001"},"content":"--------------------------------------------------","lastModifiedDate":"2023-02-26"},{"lineNumber":181,"author":{"gitId":"TopGun2001"},"content":"```","lastModifiedDate":"2023-02-26"},{"lineNumber":182,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":183,"author":{"gitId":"TopGun2001"},"content":"# 6. Exit \u003ca name \u003d \"bye\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-02-26"},{"lineNumber":184,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":185,"author":{"gitId":"TopGun2001"},"content":"This is how you should exit.","lastModifiedDate":"2023-02-26"},{"lineNumber":186,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":187,"author":{"gitId":"TopGun2001"},"content":"Input:","lastModifiedDate":"2023-02-26"},{"lineNumber":188,"author":{"gitId":"TopGun2001"},"content":"```","lastModifiedDate":"2023-02-26"},{"lineNumber":189,"author":{"gitId":"TopGun2001"},"content":"bye","lastModifiedDate":"2023-02-26"},{"lineNumber":190,"author":{"gitId":"TopGun2001"},"content":"```","lastModifiedDate":"2023-02-26"},{"lineNumber":191,"author":{"gitId":"TopGun2001"},"content":"Output:","lastModifiedDate":"2023-02-26"},{"lineNumber":192,"author":{"gitId":"TopGun2001"},"content":"```","lastModifiedDate":"2023-02-26"},{"lineNumber":193,"author":{"gitId":"TopGun2001"},"content":"--------------------------------------------------","lastModifiedDate":"2023-02-26"},{"lineNumber":194,"author":{"gitId":"TopGun2001"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2023-02-26"},{"lineNumber":195,"author":{"gitId":"TopGun2001"},"content":"--------------------------------------------------","lastModifiedDate":"2023-02-26"},{"lineNumber":196,"author":{"gitId":"TopGun2001"},"content":"```","lastModifiedDate":"2023-02-26"},{"lineNumber":197,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":198,"author":{"gitId":"TopGun2001"},"content":"--------------------------------------------------------------------------------","lastModifiedDate":"2023-02-26"},{"lineNumber":199,"author":{"gitId":"TopGun2001"},"content":"Hope you have a good time using Rolex. 😁","lastModifiedDate":"2023-02-26"},{"lineNumber":200,"author":{"gitId":"TopGun2001"},"content":"--------------------------------------------------------------------------------","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"-":15,"TopGun2001":185}},{"path":"src/main/java/Commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TopGun2001"},"content":"package Commands;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"TopGun2001"},"content":"import Ui.Ui;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"TopGun2001"},"content":"import Parser.Parser;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"TopGun2001"},"content":"import Tasks.Deadline;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"TopGun2001"},"content":"import Tasks.Event;","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"TopGun2001"},"content":"import Tasks.Task;","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"TopGun2001"},"content":"import Tasks.Todo;","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"TopGun2001"},"content":"import Exception.RolexException;","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"TopGun2001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"TopGun2001"},"content":"public class Command {","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"TopGun2001"},"content":"    public static ArrayList\u003cTask\u003e task \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"TopGun2001"},"content":"    public static void getTaskList(ArrayList\u003cTask\u003e currentList) {","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"TopGun2001"},"content":"        task \u003d currentList;","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"TopGun2001"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"TopGun2001"},"content":"    public static ArrayList\u003cTask\u003e giveTaskList(){","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"TopGun2001"},"content":"        return task;","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"TopGun2001"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"TopGun2001"},"content":"    /***","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"TopGun2001"},"content":"     * This method takes in the user input and extracts the information from","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"TopGun2001"},"content":"     * task \u0027TODO\u0027.","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"TopGun2001"},"content":"     * It then creates an object of class type Todo.","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"TopGun2001"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"TopGun2001"},"content":"     * @param userInput: the input from user","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"TopGun2001"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"TopGun2001"},"content":"    public static void inputIsTodo(String userInput) {","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"TopGun2001"},"content":"        if (userInput.startsWith(\"todo\") \u0026\u0026 userInput.length() \u003c\u003d 5) {","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"TopGun2001"},"content":"            RolexException.detectError(userInput);","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"TopGun2001"},"content":"        } else {","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"TopGun2001"},"content":"            String todoName \u003d Parser.taskName(userInput, 5);","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"TopGun2001"},"content":"            Task.addPrintTask(new Todo(todoName), task);","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"TopGun2001"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"TopGun2001"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"TopGun2001"},"content":"    /***","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"TopGun2001"},"content":"     * This method takes in the user input and extracts the information from","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"TopGun2001"},"content":"     * task \u0027DEADLINE\u0027.","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"TopGun2001"},"content":"     * It then creates an object of class type Deadline.","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"TopGun2001"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"TopGun2001"},"content":"     * @param userInput: the input from user","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"TopGun2001"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":49,"author":{"gitId":"TopGun2001"},"content":"    public static void inputIsDeadline(String userInput) {","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"TopGun2001"},"content":"        int indexOfBy \u003d Parser.indexOfSubstring(userInput, \"/by\");","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"TopGun2001"},"content":"        if (indexOfBy \u003d\u003d -1) {","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"TopGun2001"},"content":"            RolexException.detectError(userInput);","lastModifiedDate":"2023-02-26"},{"lineNumber":53,"author":{"gitId":"TopGun2001"},"content":"        } else {","lastModifiedDate":"2023-02-26"},{"lineNumber":54,"author":{"gitId":"TopGun2001"},"content":"            String deadlineName \u003d Parser.taskName(userInput, 9, indexOfBy - 1);","lastModifiedDate":"2023-02-26"},{"lineNumber":55,"author":{"gitId":"TopGun2001"},"content":"            String by \u003d Parser.taskName(userInput, indexOfBy + 4);","lastModifiedDate":"2023-02-26"},{"lineNumber":56,"author":{"gitId":"TopGun2001"},"content":"            by \u003d Parser.deadlineDate(by);","lastModifiedDate":"2023-02-26"},{"lineNumber":57,"author":{"gitId":"TopGun2001"},"content":"            Task.addPrintTask(new Deadline(deadlineName, by), task);","lastModifiedDate":"2023-02-26"},{"lineNumber":58,"author":{"gitId":"TopGun2001"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":59,"author":{"gitId":"TopGun2001"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":60,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":61,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":62,"author":{"gitId":"TopGun2001"},"content":"    /***","lastModifiedDate":"2023-02-26"},{"lineNumber":63,"author":{"gitId":"TopGun2001"},"content":"     * This method takes in the user input and extracts the information from","lastModifiedDate":"2023-02-26"},{"lineNumber":64,"author":{"gitId":"TopGun2001"},"content":"     * task \u0027EVENT\u0027.","lastModifiedDate":"2023-02-26"},{"lineNumber":65,"author":{"gitId":"TopGun2001"},"content":"     * It then creates an object of class type Event.","lastModifiedDate":"2023-02-26"},{"lineNumber":66,"author":{"gitId":"TopGun2001"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":67,"author":{"gitId":"TopGun2001"},"content":"     * @param userInput: the input from user","lastModifiedDate":"2023-02-26"},{"lineNumber":68,"author":{"gitId":"TopGun2001"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":69,"author":{"gitId":"TopGun2001"},"content":"    public static void inputIsEvent(String userInput) {","lastModifiedDate":"2023-02-26"},{"lineNumber":70,"author":{"gitId":"TopGun2001"},"content":"        int indexOfFrom \u003d Parser.indexOfSubstring(userInput, \"/from\");","lastModifiedDate":"2023-02-26"},{"lineNumber":71,"author":{"gitId":"TopGun2001"},"content":"        int indexOfTo \u003d Parser.indexOfSubstring(userInput, \"/to\");","lastModifiedDate":"2023-02-26"},{"lineNumber":72,"author":{"gitId":"TopGun2001"},"content":"        if (indexOfFrom \u003d\u003d -1 || indexOfTo \u003d\u003d -1) {","lastModifiedDate":"2023-02-26"},{"lineNumber":73,"author":{"gitId":"TopGun2001"},"content":"            RolexException.detectError(userInput);","lastModifiedDate":"2023-02-26"},{"lineNumber":74,"author":{"gitId":"TopGun2001"},"content":"        } else {","lastModifiedDate":"2023-02-26"},{"lineNumber":75,"author":{"gitId":"TopGun2001"},"content":"            String eventName \u003d Parser.taskName(userInput, 6, indexOfFrom - 1);","lastModifiedDate":"2023-02-26"},{"lineNumber":76,"author":{"gitId":"TopGun2001"},"content":"            String startTime \u003d Parser.taskName(userInput, indexOfFrom + 6, indexOfTo - 1);","lastModifiedDate":"2023-02-26"},{"lineNumber":77,"author":{"gitId":"TopGun2001"},"content":"            String endTime \u003d Parser.taskName(userInput, indexOfTo + 4);","lastModifiedDate":"2023-02-26"},{"lineNumber":78,"author":{"gitId":"TopGun2001"},"content":"            Task.addPrintTask(new Event(eventName, startTime, endTime), task);","lastModifiedDate":"2023-02-26"},{"lineNumber":79,"author":{"gitId":"TopGun2001"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":80,"author":{"gitId":"TopGun2001"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":81,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":82,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":83,"author":{"gitId":"TopGun2001"},"content":"    /***","lastModifiedDate":"2023-02-26"},{"lineNumber":84,"author":{"gitId":"TopGun2001"},"content":"     * This method is designed to list all the tasks entered by the user","lastModifiedDate":"2023-02-26"},{"lineNumber":85,"author":{"gitId":"TopGun2001"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":86,"author":{"gitId":"TopGun2001"},"content":"    public static void inputIsList() {","lastModifiedDate":"2023-02-26"},{"lineNumber":87,"author":{"gitId":"TopGun2001"},"content":"        if (task.size() \u003e\u003d 1) {","lastModifiedDate":"2023-02-26"},{"lineNumber":88,"author":{"gitId":"TopGun2001"},"content":"            Ui.printLines();","lastModifiedDate":"2023-02-26"},{"lineNumber":89,"author":{"gitId":"TopGun2001"},"content":"            int indexNum \u003d 1;","lastModifiedDate":"2023-02-26"},{"lineNumber":90,"author":{"gitId":"TopGun2001"},"content":"            System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-02-26"},{"lineNumber":91,"author":{"gitId":"TopGun2001"},"content":"            for (Task value : task) {","lastModifiedDate":"2023-02-26"},{"lineNumber":92,"author":{"gitId":"TopGun2001"},"content":"                System.out.println(indexNum + \". \" + value);","lastModifiedDate":"2023-02-26"},{"lineNumber":93,"author":{"gitId":"TopGun2001"},"content":"                indexNum++;","lastModifiedDate":"2023-02-26"},{"lineNumber":94,"author":{"gitId":"TopGun2001"},"content":"            }","lastModifiedDate":"2023-02-26"},{"lineNumber":95,"author":{"gitId":"TopGun2001"},"content":"            Ui.printLines();","lastModifiedDate":"2023-02-26"},{"lineNumber":96,"author":{"gitId":"TopGun2001"},"content":"        } else {","lastModifiedDate":"2023-02-26"},{"lineNumber":97,"author":{"gitId":"TopGun2001"},"content":"            RolexException.detectError(\"list\");","lastModifiedDate":"2023-02-26"},{"lineNumber":98,"author":{"gitId":"TopGun2001"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":99,"author":{"gitId":"TopGun2001"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":100,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":101,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":102,"author":{"gitId":"TopGun2001"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":103,"author":{"gitId":"TopGun2001"},"content":"     * This method is designed to display all the tasks that match to a","lastModifiedDate":"2023-02-26"},{"lineNumber":104,"author":{"gitId":"TopGun2001"},"content":"     * particular keyword entered by the user.","lastModifiedDate":"2023-02-26"},{"lineNumber":105,"author":{"gitId":"TopGun2001"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":106,"author":{"gitId":"TopGun2001"},"content":"     * @param userInput: the input entered by user","lastModifiedDate":"2023-02-26"},{"lineNumber":107,"author":{"gitId":"TopGun2001"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":108,"author":{"gitId":"TopGun2001"},"content":"    public static void inputIsFind(String userInput){","lastModifiedDate":"2023-02-26"},{"lineNumber":109,"author":{"gitId":"TopGun2001"},"content":"        if(userInput.startsWith(\"find\") \u0026\u0026 userInput.length() \u003c\u003d 5) {","lastModifiedDate":"2023-02-26"},{"lineNumber":110,"author":{"gitId":"TopGun2001"},"content":"            RolexException.detectError(userInput);","lastModifiedDate":"2023-02-26"},{"lineNumber":111,"author":{"gitId":"TopGun2001"},"content":"        } else if(task.size() \u003e\u003d 1){","lastModifiedDate":"2023-02-26"},{"lineNumber":112,"author":{"gitId":"TopGun2001"},"content":"            Ui.printLines();","lastModifiedDate":"2023-02-26"},{"lineNumber":113,"author":{"gitId":"TopGun2001"},"content":"            int indexNum \u003d 1;","lastModifiedDate":"2023-02-26"},{"lineNumber":114,"author":{"gitId":"TopGun2001"},"content":"            int flag \u003d 0;","lastModifiedDate":"2023-02-26"},{"lineNumber":115,"author":{"gitId":"TopGun2001"},"content":"            String keyword \u003d Parser.taskName(userInput,5);","lastModifiedDate":"2023-02-26"},{"lineNumber":116,"author":{"gitId":"TopGun2001"},"content":"            for(Task value: task){","lastModifiedDate":"2023-02-26"},{"lineNumber":117,"author":{"gitId":"TopGun2001"},"content":"                if(value.giveTaskName().contains(keyword)){","lastModifiedDate":"2023-02-26"},{"lineNumber":118,"author":{"gitId":"TopGun2001"},"content":"                    flag +\u003d 1;","lastModifiedDate":"2023-02-26"},{"lineNumber":119,"author":{"gitId":"TopGun2001"},"content":"                    if(indexNum \u003d\u003d 1){","lastModifiedDate":"2023-02-26"},{"lineNumber":120,"author":{"gitId":"TopGun2001"},"content":"                        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-02-26"},{"lineNumber":121,"author":{"gitId":"TopGun2001"},"content":"                        indexNum +\u003d 1;","lastModifiedDate":"2023-02-26"},{"lineNumber":122,"author":{"gitId":"TopGun2001"},"content":"                    }","lastModifiedDate":"2023-02-26"},{"lineNumber":123,"author":{"gitId":"TopGun2001"},"content":"                        System.out.println(indexNum + \". \" + value);","lastModifiedDate":"2023-02-26"},{"lineNumber":124,"author":{"gitId":"TopGun2001"},"content":"                }","lastModifiedDate":"2023-02-26"},{"lineNumber":125,"author":{"gitId":"TopGun2001"},"content":"            }","lastModifiedDate":"2023-02-26"},{"lineNumber":126,"author":{"gitId":"TopGun2001"},"content":"            Ui.printLines();","lastModifiedDate":"2023-02-26"},{"lineNumber":127,"author":{"gitId":"TopGun2001"},"content":"            if(flag\u003d\u003d0){","lastModifiedDate":"2023-02-26"},{"lineNumber":128,"author":{"gitId":"TopGun2001"},"content":"                System.out.println(\"No such tasks with matching keyword: \" + keyword + \" !\");","lastModifiedDate":"2023-02-26"},{"lineNumber":129,"author":{"gitId":"TopGun2001"},"content":"            }","lastModifiedDate":"2023-02-26"},{"lineNumber":130,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":131,"author":{"gitId":"TopGun2001"},"content":"        } else{","lastModifiedDate":"2023-02-26"},{"lineNumber":132,"author":{"gitId":"TopGun2001"},"content":"            Ui.printLines();","lastModifiedDate":"2023-02-26"},{"lineNumber":133,"author":{"gitId":"TopGun2001"},"content":"            System.out.println(\"There are no tasks for me to list!☹\");","lastModifiedDate":"2023-02-26"},{"lineNumber":134,"author":{"gitId":"TopGun2001"},"content":"            Ui.printLines();","lastModifiedDate":"2023-02-26"},{"lineNumber":135,"author":{"gitId":"TopGun2001"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":136,"author":{"gitId":"TopGun2001"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":137,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":138,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":139,"author":{"gitId":"TopGun2001"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":140,"author":{"gitId":"TopGun2001"},"content":"     * This method is designed to mark a task.","lastModifiedDate":"2023-02-26"},{"lineNumber":141,"author":{"gitId":"TopGun2001"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":142,"author":{"gitId":"TopGun2001"},"content":"     * @param userInput: input entered by user","lastModifiedDate":"2023-02-26"},{"lineNumber":143,"author":{"gitId":"TopGun2001"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":144,"author":{"gitId":"TopGun2001"},"content":"    public static void inputIsMark(String userInput) {","lastModifiedDate":"2023-02-26"},{"lineNumber":145,"author":{"gitId":"TopGun2001"},"content":"        int index \u003d Parser.taskIndex(userInput, 5);","lastModifiedDate":"2023-02-26"},{"lineNumber":146,"author":{"gitId":"TopGun2001"},"content":"        if (index \u003e 0 \u0026\u0026 index \u003c\u003d task.size()) {","lastModifiedDate":"2023-02-26"},{"lineNumber":147,"author":{"gitId":"TopGun2001"},"content":"            task.get(index - 1).markTask();","lastModifiedDate":"2023-02-26"},{"lineNumber":148,"author":{"gitId":"TopGun2001"},"content":"        } else {","lastModifiedDate":"2023-02-26"},{"lineNumber":149,"author":{"gitId":"TopGun2001"},"content":"            RolexException.detectError(userInput);","lastModifiedDate":"2023-02-26"},{"lineNumber":150,"author":{"gitId":"TopGun2001"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":151,"author":{"gitId":"TopGun2001"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":152,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":153,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":154,"author":{"gitId":"TopGun2001"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":155,"author":{"gitId":"TopGun2001"},"content":"     * This method is designed to unmark a task.","lastModifiedDate":"2023-02-26"},{"lineNumber":156,"author":{"gitId":"TopGun2001"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":157,"author":{"gitId":"TopGun2001"},"content":"     * @param userInput: input entered by user","lastModifiedDate":"2023-02-26"},{"lineNumber":158,"author":{"gitId":"TopGun2001"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":159,"author":{"gitId":"TopGun2001"},"content":"    public static void inputIsUnmark(String userInput) {","lastModifiedDate":"2023-02-26"},{"lineNumber":160,"author":{"gitId":"TopGun2001"},"content":"        int index \u003d Parser.taskIndex(userInput, 7);","lastModifiedDate":"2023-02-26"},{"lineNumber":161,"author":{"gitId":"TopGun2001"},"content":"        if (index \u003e 0 \u0026\u0026 index \u003c\u003d task.size()) {","lastModifiedDate":"2023-02-26"},{"lineNumber":162,"author":{"gitId":"TopGun2001"},"content":"            task.get(index-1).unMarkTask();","lastModifiedDate":"2023-02-26"},{"lineNumber":163,"author":{"gitId":"TopGun2001"},"content":"        } else {","lastModifiedDate":"2023-02-26"},{"lineNumber":164,"author":{"gitId":"TopGun2001"},"content":"            RolexException.detectError(userInput);","lastModifiedDate":"2023-02-26"},{"lineNumber":165,"author":{"gitId":"TopGun2001"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":166,"author":{"gitId":"TopGun2001"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":167,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":168,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":169,"author":{"gitId":"TopGun2001"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":170,"author":{"gitId":"TopGun2001"},"content":"     * This method is designed to delete a task.","lastModifiedDate":"2023-02-26"},{"lineNumber":171,"author":{"gitId":"TopGun2001"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":172,"author":{"gitId":"TopGun2001"},"content":"     * @param userInput: input entered by user","lastModifiedDate":"2023-02-26"},{"lineNumber":173,"author":{"gitId":"TopGun2001"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":174,"author":{"gitId":"TopGun2001"},"content":"    public static void inputIsDelete(String userInput) {","lastModifiedDate":"2023-02-26"},{"lineNumber":175,"author":{"gitId":"TopGun2001"},"content":"        if (userInput.equalsIgnoreCase(\"delete\")) {","lastModifiedDate":"2023-02-26"},{"lineNumber":176,"author":{"gitId":"TopGun2001"},"content":"            RolexException.detectError(userInput);","lastModifiedDate":"2023-02-26"},{"lineNumber":177,"author":{"gitId":"TopGun2001"},"content":"        } else {","lastModifiedDate":"2023-02-26"},{"lineNumber":178,"author":{"gitId":"TopGun2001"},"content":"            int index \u003d Parser.taskIndex(userInput, 7);","lastModifiedDate":"2023-02-26"},{"lineNumber":179,"author":{"gitId":"TopGun2001"},"content":"            if (index \u003d\u003d -1) {","lastModifiedDate":"2023-02-26"},{"lineNumber":180,"author":{"gitId":"TopGun2001"},"content":"                RolexException.detectError(userInput);","lastModifiedDate":"2023-02-26"},{"lineNumber":181,"author":{"gitId":"TopGun2001"},"content":"            } else if (task.size()\u003e0 \u0026\u0026 index\u003c\u003dtask.size() \u0026\u0026 index\u003e\u003d1) {","lastModifiedDate":"2023-02-26"},{"lineNumber":182,"author":{"gitId":"TopGun2001"},"content":"                task.get(index-1).deleteTask(index, task.size());","lastModifiedDate":"2023-02-26"},{"lineNumber":183,"author":{"gitId":"TopGun2001"},"content":"                task.remove(index-1);","lastModifiedDate":"2023-02-26"},{"lineNumber":184,"author":{"gitId":"TopGun2001"},"content":"            } else {","lastModifiedDate":"2023-02-26"},{"lineNumber":185,"author":{"gitId":"TopGun2001"},"content":"                Ui.printInvalidNumber();","lastModifiedDate":"2023-02-26"},{"lineNumber":186,"author":{"gitId":"TopGun2001"},"content":"            }","lastModifiedDate":"2023-02-26"},{"lineNumber":187,"author":{"gitId":"TopGun2001"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":188,"author":{"gitId":"TopGun2001"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":189,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":190,"author":{"gitId":"TopGun2001"},"content":"}","lastModifiedDate":"2023-02-26"},{"lineNumber":191,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"TopGun2001":191}},{"path":"src/main/java/Exception/RolexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TopGun2001"},"content":"package Exception;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"TopGun2001"},"content":"import Ui.Ui;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"TopGun2001"},"content":"public class RolexException {","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"TopGun2001"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"TopGun2001"},"content":"     * This method takes in the user input and detects the respective error to be displayed","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"TopGun2001"},"content":"     * on the terminal.","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"TopGun2001"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"TopGun2001"},"content":"     * @param userInput: input entered by user","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"TopGun2001"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"TopGun2001"},"content":"    public static void detectError(String userInput){","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"TopGun2001"},"content":"        Ui.printLines();","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"TopGun2001"},"content":"        if(userInput.startsWith(\"todo\")){","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"TopGun2001"},"content":"            runTodoError();","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"TopGun2001"},"content":"        } else if(userInput.startsWith(\"event\")){","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"TopGun2001"},"content":"            runEventError();","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"TopGun2001"},"content":"        } else if (userInput.startsWith(\"deadline\")){","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"TopGun2001"},"content":"            runDeadlineError();","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"TopGun2001"},"content":"        } else if (userInput.startsWith(\"mark\")){","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"TopGun2001"},"content":"            runMarkError();","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"TopGun2001"},"content":"        } else if (userInput.startsWith(\"unmark\")){","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"TopGun2001"},"content":"            runUnmarkError();","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"TopGun2001"},"content":"        } else if(userInput.startsWith(\"list\")){","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"TopGun2001"},"content":"            runListError();","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"TopGun2001"},"content":"        } else if(userInput.startsWith(\"bye\")){","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"TopGun2001"},"content":"            return;","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"TopGun2001"},"content":"        } else if(userInput.startsWith(\"find\")){","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"TopGun2001"},"content":"            runFindError();","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"TopGun2001"},"content":"        } else{","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"TopGun2001"},"content":"            System.out.println(\"OOPS!! I cannot understand the input!☹ \");","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"TopGun2001"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"TopGun2001"},"content":"        Ui.printLines();","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"TopGun2001"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"TopGun2001"},"content":"    private static void runFindError() {","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"TopGun2001"},"content":"        System.out.println(\"OOPS!! The description of find cannot be empty!☹\");","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"TopGun2001"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"TopGun2001"},"content":"    public static void runListError(){","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"TopGun2001"},"content":"        System.out.println(\"OOPS!! There are no tasks for me to list!☹\");","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"TopGun2001"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"TopGun2001"},"content":"    public static void runTodoError(){","lastModifiedDate":"2023-02-08"},{"lineNumber":46,"author":{"gitId":"TopGun2001"},"content":"        System.out.println(\"OOPS!! The description of todo cannot be empty!☹\");","lastModifiedDate":"2023-02-08"},{"lineNumber":47,"author":{"gitId":"TopGun2001"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":48,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":49,"author":{"gitId":"TopGun2001"},"content":"    public static void runEventError(){","lastModifiedDate":"2023-02-08"},{"lineNumber":50,"author":{"gitId":"TopGun2001"},"content":"        System.out.println(\"OOPS!! The description of event cannot be empty!☹\");","lastModifiedDate":"2023-02-08"},{"lineNumber":51,"author":{"gitId":"TopGun2001"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":52,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":53,"author":{"gitId":"TopGun2001"},"content":"    public static void runDeadlineError(){","lastModifiedDate":"2023-02-08"},{"lineNumber":54,"author":{"gitId":"TopGun2001"},"content":"        System.out.println(\"OOPS!! The description of deadline cannot be empty!☹\");","lastModifiedDate":"2023-02-08"},{"lineNumber":55,"author":{"gitId":"TopGun2001"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":56,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":57,"author":{"gitId":"TopGun2001"},"content":"    public static void runMarkError(){","lastModifiedDate":"2023-02-08"},{"lineNumber":58,"author":{"gitId":"TopGun2001"},"content":"        System.out.println(\"OOPS!! I don\u0027t know what to mark!☹\");","lastModifiedDate":"2023-02-08"},{"lineNumber":59,"author":{"gitId":"TopGun2001"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":60,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":61,"author":{"gitId":"TopGun2001"},"content":"    public static void runUnmarkError(){","lastModifiedDate":"2023-02-08"},{"lineNumber":62,"author":{"gitId":"TopGun2001"},"content":"        System.out.println(\"OOPS!! I don\u0027t know what to unmark!☹\");","lastModifiedDate":"2023-02-08"},{"lineNumber":63,"author":{"gitId":"TopGun2001"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":64,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":65,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":66,"author":{"gitId":"TopGun2001"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"TopGun2001":66}},{"path":"src/main/java/Parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TopGun2001"},"content":"package Parser;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"TopGun2001"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"TopGun2001"},"content":"public class Parser {","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"TopGun2001"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"TopGun2001"},"content":"     * This is the first overloading method with method name taskName. It takes in the start index only","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"TopGun2001"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"TopGun2001"},"content":"     * @param userInput: input entered by user.","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"TopGun2001"},"content":"     * @param startIndex: substring to start from.","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"TopGun2001"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"TopGun2001"},"content":"     * @return substring of user input","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"TopGun2001"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"TopGun2001"},"content":"    public static String taskName(String userInput, int startIndex){","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"TopGun2001"},"content":"        return userInput.substring(startIndex);","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"TopGun2001"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"TopGun2001"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"TopGun2001"},"content":"     * This is the first overloading method with method name taskName. It takes in the start index","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"TopGun2001"},"content":"     * and end index.","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"TopGun2001"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"TopGun2001"},"content":"     * @param userInput: input entered by user.","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"TopGun2001"},"content":"     * @param startIndex: substring to start from.","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"TopGun2001"},"content":"     * @param endIndex: substring to end at.","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"TopGun2001"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"TopGun2001"},"content":"     * @return substring of user input","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"TopGun2001"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"TopGun2001"},"content":"    public static String taskName(String userInput, int startIndex, int endIndex){","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"TopGun2001"},"content":"        return userInput.substring(startIndex, endIndex);","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"TopGun2001"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"TopGun2001"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"TopGun2001"},"content":"     * This method is designed to extract the date and time for an object of","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"TopGun2001"},"content":"     * class \u0027DEADLINE\u0027 and display according to a certain format as show under @return.","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"TopGun2001"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"TopGun2001"},"content":"     * @param userInput: input entered by user.","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"TopGun2001"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"TopGun2001"},"content":"     * @return date and time in the following format: day + month + year + dayOfWeek + time(hh:mm)","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"TopGun2001"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"TopGun2001"},"content":"    public static String deadlineDate(String userInput){","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"TopGun2001"},"content":"        int indexOfSpace \u003d userInput.indexOf(\" \");","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"TopGun2001"},"content":"        String time \u003d userInput.substring(indexOfSpace+1);","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"TopGun2001"},"content":"        String hh \u003d time.substring(0,2);","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"TopGun2001"},"content":"        String mm \u003d time.substring(2);","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"TopGun2001"},"content":"        String code;","lastModifiedDate":"2023-02-26"},{"lineNumber":49,"author":{"gitId":"TopGun2001"},"content":"        int x \u003d Integer.parseInt(hh);","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"TopGun2001"},"content":"        if(x \u003c 12){","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"TopGun2001"},"content":"            code \u003d \"AM\";","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"TopGun2001"},"content":"        } else if(x \u003d\u003d 12){","lastModifiedDate":"2023-02-26"},{"lineNumber":53,"author":{"gitId":"TopGun2001"},"content":"            code \u003d \"PM\";","lastModifiedDate":"2023-02-26"},{"lineNumber":54,"author":{"gitId":"TopGun2001"},"content":"        } else{","lastModifiedDate":"2023-02-26"},{"lineNumber":55,"author":{"gitId":"TopGun2001"},"content":"            x \u003d x-12;","lastModifiedDate":"2023-02-26"},{"lineNumber":56,"author":{"gitId":"TopGun2001"},"content":"            hh \u003d String.valueOf(x);","lastModifiedDate":"2023-02-26"},{"lineNumber":57,"author":{"gitId":"TopGun2001"},"content":"            if(x\u003c10){","lastModifiedDate":"2023-02-26"},{"lineNumber":58,"author":{"gitId":"TopGun2001"},"content":"                hh \u003d \"0\" + x;","lastModifiedDate":"2023-02-26"},{"lineNumber":59,"author":{"gitId":"TopGun2001"},"content":"            }","lastModifiedDate":"2023-02-26"},{"lineNumber":60,"author":{"gitId":"TopGun2001"},"content":"            code \u003d \"PM\";","lastModifiedDate":"2023-02-26"},{"lineNumber":61,"author":{"gitId":"TopGun2001"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":62,"author":{"gitId":"TopGun2001"},"content":"        time \u003d hh + \":\" + mm + code;","lastModifiedDate":"2023-02-26"},{"lineNumber":63,"author":{"gitId":"TopGun2001"},"content":"        LocalDate d1 \u003d LocalDate.parse(userInput.substring(0,indexOfSpace));","lastModifiedDate":"2023-02-26"},{"lineNumber":64,"author":{"gitId":"TopGun2001"},"content":"        return d1.getDayOfMonth() + \" \" + d1.getMonth() + \" \" + d1.getYear() + \", \" + d1.getDayOfWeek() + \", \" + time;","lastModifiedDate":"2023-02-26"},{"lineNumber":65,"author":{"gitId":"TopGun2001"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":66,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":67,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":68,"author":{"gitId":"TopGun2001"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":69,"author":{"gitId":"TopGun2001"},"content":"     * This method is designed to return the task index for various operations like","lastModifiedDate":"2023-02-26"},{"lineNumber":70,"author":{"gitId":"TopGun2001"},"content":"     * mark, unmark, delete.","lastModifiedDate":"2023-02-26"},{"lineNumber":71,"author":{"gitId":"TopGun2001"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":72,"author":{"gitId":"TopGun2001"},"content":"     * @param userInput: input entered by user","lastModifiedDate":"2023-02-26"},{"lineNumber":73,"author":{"gitId":"TopGun2001"},"content":"     * @param index: index of task to do operation","lastModifiedDate":"2023-02-26"},{"lineNumber":74,"author":{"gitId":"TopGun2001"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":75,"author":{"gitId":"TopGun2001"},"content":"     * @return task index","lastModifiedDate":"2023-02-26"},{"lineNumber":76,"author":{"gitId":"TopGun2001"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":77,"author":{"gitId":"TopGun2001"},"content":"    public static int taskIndex(String userInput, int index) {","lastModifiedDate":"2023-02-26"},{"lineNumber":78,"author":{"gitId":"TopGun2001"},"content":"        return Integer.parseInt(userInput.substring(index));","lastModifiedDate":"2023-02-26"},{"lineNumber":79,"author":{"gitId":"TopGun2001"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":80,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":81,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":82,"author":{"gitId":"TopGun2001"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":83,"author":{"gitId":"TopGun2001"},"content":"     * This method is designed to extract the index of a substring from","lastModifiedDate":"2023-02-26"},{"lineNumber":84,"author":{"gitId":"TopGun2001"},"content":"     * an original string.","lastModifiedDate":"2023-02-26"},{"lineNumber":85,"author":{"gitId":"TopGun2001"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":86,"author":{"gitId":"TopGun2001"},"content":"     * @param userInput: input entered by user","lastModifiedDate":"2023-02-26"},{"lineNumber":87,"author":{"gitId":"TopGun2001"},"content":"     * @param subString: substring\u0027s index to be found","lastModifiedDate":"2023-02-26"},{"lineNumber":88,"author":{"gitId":"TopGun2001"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":89,"author":{"gitId":"TopGun2001"},"content":"     * @return index of substring from original string","lastModifiedDate":"2023-02-26"},{"lineNumber":90,"author":{"gitId":"TopGun2001"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":91,"author":{"gitId":"TopGun2001"},"content":"    public static int indexOfSubstring(String userInput, String subString){","lastModifiedDate":"2023-02-26"},{"lineNumber":92,"author":{"gitId":"TopGun2001"},"content":"        return userInput.indexOf(subString);","lastModifiedDate":"2023-02-26"},{"lineNumber":93,"author":{"gitId":"TopGun2001"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":94,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":95,"author":{"gitId":"TopGun2001"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"TopGun2001":95}},{"path":"src/main/java/Rolex.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TopGun2001"},"content":"import Commands.Command;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"TopGun2001"},"content":"import Storage.Storage;","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"TopGun2001"},"content":"import Ui.Ui;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"TopGun2001"},"content":"import Tasks.Task;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"TopGun2001"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"TopGun2001"},"content":"public class Rolex {","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"TopGun2001"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"TopGun2001"},"content":"        String userInput;","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"TopGun2001"},"content":"        Ui.rolexGreetsUser();","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"TopGun2001"},"content":"        Command.getTaskList(Storage.createFile());","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"TopGun2001"},"content":"        do{","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"TopGun2001"},"content":"            userInput \u003d Ui.takeUserInput();","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"TopGun2001"},"content":"            Task.processCommand(userInput);","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"TopGun2001"},"content":"        } while(!userInput.equalsIgnoreCase(\"bye\"));","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"TopGun2001"},"content":"        Storage.fileWrite(Command.giveTaskList());","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"TopGun2001"},"content":"        Ui.rolexSaysBye();","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"TopGun2001"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"TopGun2001"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"TopGun2001":24}},{"path":"src/main/java/Storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TopGun2001"},"content":"package Storage;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"TopGun2001"},"content":"import Tasks.Task;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"TopGun2001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"TopGun2001"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"TopGun2001"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"TopGun2001"},"content":"import java.io.File;","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"TopGun2001"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"TopGun2001"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"TopGun2001"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"TopGun2001"},"content":"public class Storage {","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"TopGun2001"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"TopGun2001"},"content":"     * This method is designed to write the contents of the task list to the file","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"TopGun2001"},"content":"     * at the end of the program before rolexSaysBye() is executed.","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"TopGun2001"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"TopGun2001"},"content":"     * @param task1: the ArrayList containing the task list","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"TopGun2001"},"content":"     * @throws IOException: throw exception if there are issues in writing to file","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"TopGun2001"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"TopGun2001"},"content":"    public static void fileWrite(ArrayList\u003cTask\u003e task1) throws IOException {","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"TopGun2001"},"content":"        BufferedWriter writer \u003d new BufferedWriter(new FileWriter(\"Rolex.txt\"));","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"TopGun2001"},"content":"        for (Task x : task1) {","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"TopGun2001"},"content":"            writer.write(x.giveTaskName() + \";\" + x.giveTaskStatus() + \";\" + x.giveTaskSign() + \"\\n\");","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"TopGun2001"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"TopGun2001"},"content":"        writer.close();","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"TopGun2001"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"TopGun2001"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"TopGun2001"},"content":"     * This method is designed to access of the saved file on the local system","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"TopGun2001"},"content":"     * before taking in user input for adding new tasks.","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"TopGun2001"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"TopGun2001"},"content":"     * @param fileName: name of the file stored in local system.","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"TopGun2001"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"TopGun2001"},"content":"     * @return taskList: the ArrayList containing the tasks.","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"TopGun2001"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"TopGun2001"},"content":"     * @throws IOException: throw exception if there are issues in accessing the file","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"TopGun2001"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"TopGun2001"},"content":"    public static ArrayList\u003cTask\u003e fileAccess(File fileName) throws IOException {","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"TopGun2001"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"TopGun2001"},"content":"        FileReader fileReader \u003d new FileReader(fileName);","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"TopGun2001"},"content":"        BufferedReader bufferedReader \u003d new BufferedReader(fileReader);","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"TopGun2001"},"content":"        String input;","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"TopGun2001"},"content":"        while((input \u003d bufferedReader.readLine())!\u003dnull){","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"TopGun2001"},"content":"            String[] line \u003d input.split(\";\");","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"TopGun2001"},"content":"            Task r \u003d new Task(line[0], Boolean.parseBoolean(line[1]), line[2]);","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"TopGun2001"},"content":"            taskList.add(r);","lastModifiedDate":"2023-02-26"},{"lineNumber":49,"author":{"gitId":"TopGun2001"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"TopGun2001"},"content":"        bufferedReader.close();","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"TopGun2001"},"content":"        return taskList;","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"TopGun2001"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":53,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":54,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":55,"author":{"gitId":"TopGun2001"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":56,"author":{"gitId":"TopGun2001"},"content":"     * This method is designed to create a new file to save the contents of","lastModifiedDate":"2023-02-26"},{"lineNumber":57,"author":{"gitId":"TopGun2001"},"content":"     * tasks in the local system.","lastModifiedDate":"2023-02-26"},{"lineNumber":58,"author":{"gitId":"TopGun2001"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":59,"author":{"gitId":"TopGun2001"},"content":"     * @return an ArrayList","lastModifiedDate":"2023-02-26"},{"lineNumber":60,"author":{"gitId":"TopGun2001"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":61,"author":{"gitId":"TopGun2001"},"content":"     * @throws IOException: throw exception if there are issues in creating the file","lastModifiedDate":"2023-02-26"},{"lineNumber":62,"author":{"gitId":"TopGun2001"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":63,"author":{"gitId":"TopGun2001"},"content":"    public static ArrayList\u003cTask\u003e createFile() throws IOException {","lastModifiedDate":"2023-02-26"},{"lineNumber":64,"author":{"gitId":"TopGun2001"},"content":"        File fileName \u003d new File(\"rolex.txt\");","lastModifiedDate":"2023-02-26"},{"lineNumber":65,"author":{"gitId":"TopGun2001"},"content":"        if(fileName.exists()){","lastModifiedDate":"2023-02-26"},{"lineNumber":66,"author":{"gitId":"TopGun2001"},"content":"            return fileAccess(fileName);","lastModifiedDate":"2023-02-26"},{"lineNumber":67,"author":{"gitId":"TopGun2001"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":68,"author":{"gitId":"TopGun2001"},"content":"        return new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-26"},{"lineNumber":69,"author":{"gitId":"TopGun2001"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":70,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":71,"author":{"gitId":"TopGun2001"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"TopGun2001":71}},{"path":"src/main/java/Tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TopGun2001"},"content":"package Tasks;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"TopGun2001"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"TopGun2001"},"content":"    protected String by;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"TopGun2001"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"TopGun2001"},"content":"     * This is the constructor of an object of class Deadline. It also","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"TopGun2001"},"content":"     * calls the default constructor of the class it has inherited (Task).","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"TopGun2001"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"TopGun2001"},"content":"     * @param taskName: name of the task","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"TopGun2001"},"content":"     * @param by: description of the task","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"TopGun2001"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"TopGun2001"},"content":"    public Deadline(String taskName, String by) {","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"TopGun2001"},"content":"        super(taskName+\" (by:\" + by + \")\", false, \"[D]\");","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"TopGun2001"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"TopGun2001"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"TopGun2001"},"content":"    public String toString(){","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"TopGun2001"},"content":"        return super.toString();","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"TopGun2001"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"TopGun2001"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"TopGun2001":23}},{"path":"src/main/java/Tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TopGun2001"},"content":"package Tasks;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"TopGun2001"},"content":"public class Event extends Task {","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"TopGun2001"},"content":"    protected String startTime;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"TopGun2001"},"content":"    ","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"TopGun2001"},"content":"    protected String endTime;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"TopGun2001"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"TopGun2001"},"content":"     * This is the constructor of an object of class Event. It also","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"TopGun2001"},"content":"     * calls the default constructor of the class it has inherited (Task).","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"TopGun2001"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"TopGun2001"},"content":"     * @param taskName: name of the task","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"TopGun2001"},"content":"     * @param startTime: start time of the task","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"TopGun2001"},"content":"     * @param endTime: end time of the task","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"TopGun2001"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"TopGun2001"},"content":"    public Event(String taskName, String startTime, String endTime){","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"TopGun2001"},"content":"        super(taskName+ \" (from: \" + startTime + \" to: \" + endTime + \")\", false, \"[E]\");","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"TopGun2001"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"TopGun2001"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"TopGun2001"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"TopGun2001"},"content":"    public String toString(){","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"TopGun2001"},"content":"        return super.toString();","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"TopGun2001"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"TopGun2001"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"TopGun2001":28}},{"path":"src/main/java/Tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TopGun2001"},"content":"package Tasks;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"TopGun2001"},"content":"import Ui.Ui;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"TopGun2001"},"content":"import Commands.Command;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"TopGun2001"},"content":"import Exception.RolexException;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"TopGun2001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"TopGun2001"},"content":"public class Task {","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"TopGun2001"},"content":"    protected String taskSign;","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"TopGun2001"},"content":"    protected String taskName;","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"TopGun2001"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"TopGun2001"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"TopGun2001"},"content":"     * This is the default constructor of the class.","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"TopGun2001"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"TopGun2001"},"content":"     * @param taskName: name of task","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"TopGun2001"},"content":"     * @param test: status of task","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"TopGun2001"},"content":"     * @param taskSign: sign of task(eg: [T], [D], [E])","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"TopGun2001"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"TopGun2001"},"content":"    public Task(String taskName, boolean test, String taskSign){","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"TopGun2001"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"TopGun2001"},"content":"        this.taskSign \u003d taskSign;","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"TopGun2001"},"content":"        this.isDone \u003d test;","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"TopGun2001"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"TopGun2001"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"TopGun2001"},"content":"     * This method is designed to delete a task when given its index number in","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"TopGun2001"},"content":"     * the task list.","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"TopGun2001"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"TopGun2001"},"content":"     * @param indexToDelete: index number of task in task list","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"TopGun2001"},"content":"     * @param taskSize: size of task list(ArrayList)","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"TopGun2001"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"TopGun2001"},"content":"    public void deleteTask(int indexToDelete, int taskSize){","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"TopGun2001"},"content":"        Ui.printLines();","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"TopGun2001"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task.\");","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"TopGun2001"},"content":"        System.out.println(this);","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"TopGun2001"},"content":"        System.out.println(\"\\nNow you have \" + (taskSize-1) + \" tasks in the list.\");","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"TopGun2001"},"content":"        Ui.printLines();","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"TopGun2001"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"TopGun2001"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"TopGun2001"},"content":"     * This method is designed to process the user input and call the respective","lastModifiedDate":"2023-02-26"},{"lineNumber":49,"author":{"gitId":"TopGun2001"},"content":"     * methods from other classes.","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"TopGun2001"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"TopGun2001"},"content":"     * @param userInput: input entered by user","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"TopGun2001"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":53,"author":{"gitId":"TopGun2001"},"content":"    public static void processCommand(String userInput){","lastModifiedDate":"2023-02-26"},{"lineNumber":54,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":55,"author":{"gitId":"TopGun2001"},"content":"        if(userInput.startsWith(\"list\")){","lastModifiedDate":"2023-02-26"},{"lineNumber":56,"author":{"gitId":"TopGun2001"},"content":"            Command.inputIsList();","lastModifiedDate":"2023-02-26"},{"lineNumber":57,"author":{"gitId":"TopGun2001"},"content":"        } else if(userInput.startsWith(\"mark\")){","lastModifiedDate":"2023-02-26"},{"lineNumber":58,"author":{"gitId":"TopGun2001"},"content":"            Command.inputIsMark(userInput);","lastModifiedDate":"2023-02-26"},{"lineNumber":59,"author":{"gitId":"TopGun2001"},"content":"        } else if(userInput.startsWith(\"unmark\")){","lastModifiedDate":"2023-02-26"},{"lineNumber":60,"author":{"gitId":"TopGun2001"},"content":"            Command.inputIsUnmark(userInput);","lastModifiedDate":"2023-02-26"},{"lineNumber":61,"author":{"gitId":"TopGun2001"},"content":"        } else if(userInput.startsWith(\"todo\")){","lastModifiedDate":"2023-02-26"},{"lineNumber":62,"author":{"gitId":"TopGun2001"},"content":"            Command.inputIsTodo(userInput);","lastModifiedDate":"2023-02-26"},{"lineNumber":63,"author":{"gitId":"TopGun2001"},"content":"        } else if(userInput.startsWith(\"deadline\")){","lastModifiedDate":"2023-02-26"},{"lineNumber":64,"author":{"gitId":"TopGun2001"},"content":"            Command.inputIsDeadline(userInput);","lastModifiedDate":"2023-02-26"},{"lineNumber":65,"author":{"gitId":"TopGun2001"},"content":"        } else if(userInput.startsWith(\"event\")){","lastModifiedDate":"2023-02-26"},{"lineNumber":66,"author":{"gitId":"TopGun2001"},"content":"            Command.inputIsEvent(userInput);","lastModifiedDate":"2023-02-26"},{"lineNumber":67,"author":{"gitId":"TopGun2001"},"content":"        } else if(userInput.startsWith(\"delete\")) {","lastModifiedDate":"2023-02-26"},{"lineNumber":68,"author":{"gitId":"TopGun2001"},"content":"            Command.inputIsDelete(userInput);","lastModifiedDate":"2023-02-26"},{"lineNumber":69,"author":{"gitId":"TopGun2001"},"content":"        } else if(userInput.startsWith(\"find\")){","lastModifiedDate":"2023-02-26"},{"lineNumber":70,"author":{"gitId":"TopGun2001"},"content":"            Command.inputIsFind(userInput);","lastModifiedDate":"2023-02-26"},{"lineNumber":71,"author":{"gitId":"TopGun2001"},"content":"        } else{","lastModifiedDate":"2023-02-26"},{"lineNumber":72,"author":{"gitId":"TopGun2001"},"content":"            RolexException.detectError(userInput);","lastModifiedDate":"2023-02-26"},{"lineNumber":73,"author":{"gitId":"TopGun2001"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":74,"author":{"gitId":"TopGun2001"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":75,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":76,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":77,"author":{"gitId":"TopGun2001"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":78,"author":{"gitId":"TopGun2001"},"content":"     * This in-class method is designed to mark a task.","lastModifiedDate":"2023-02-26"},{"lineNumber":79,"author":{"gitId":"TopGun2001"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":80,"author":{"gitId":"TopGun2001"},"content":"    public void markTask(){","lastModifiedDate":"2023-02-26"},{"lineNumber":81,"author":{"gitId":"TopGun2001"},"content":"        Ui.printLines();","lastModifiedDate":"2023-02-26"},{"lineNumber":82,"author":{"gitId":"TopGun2001"},"content":"        if(this.isDone){","lastModifiedDate":"2023-02-26"},{"lineNumber":83,"author":{"gitId":"TopGun2001"},"content":"            System.out.println(\"Task is already marked.\");","lastModifiedDate":"2023-02-26"},{"lineNumber":84,"author":{"gitId":"TopGun2001"},"content":"        } else{","lastModifiedDate":"2023-02-26"},{"lineNumber":85,"author":{"gitId":"TopGun2001"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2023-02-26"},{"lineNumber":86,"author":{"gitId":"TopGun2001"},"content":"            System.out.println(\"Well Done. This task is marked as done:\");","lastModifiedDate":"2023-02-26"},{"lineNumber":87,"author":{"gitId":"TopGun2001"},"content":"            System.out.println(this);","lastModifiedDate":"2023-02-26"},{"lineNumber":88,"author":{"gitId":"TopGun2001"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":89,"author":{"gitId":"TopGun2001"},"content":"        Ui.printLines();","lastModifiedDate":"2023-02-26"},{"lineNumber":90,"author":{"gitId":"TopGun2001"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":91,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":92,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":93,"author":{"gitId":"TopGun2001"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":94,"author":{"gitId":"TopGun2001"},"content":"     * This in-class method is designed to mark a task.","lastModifiedDate":"2023-02-26"},{"lineNumber":95,"author":{"gitId":"TopGun2001"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":96,"author":{"gitId":"TopGun2001"},"content":"    public void unMarkTask(){","lastModifiedDate":"2023-02-26"},{"lineNumber":97,"author":{"gitId":"TopGun2001"},"content":"        Ui.printLines();","lastModifiedDate":"2023-02-26"},{"lineNumber":98,"author":{"gitId":"TopGun2001"},"content":"        if(this.isDone){","lastModifiedDate":"2023-02-26"},{"lineNumber":99,"author":{"gitId":"TopGun2001"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2023-02-26"},{"lineNumber":100,"author":{"gitId":"TopGun2001"},"content":"            System.out.println(\"Oh no, I\u0027ve unmarked this task as it is not done:\");","lastModifiedDate":"2023-02-26"},{"lineNumber":101,"author":{"gitId":"TopGun2001"},"content":"            System.out.println(this);","lastModifiedDate":"2023-02-26"},{"lineNumber":102,"author":{"gitId":"TopGun2001"},"content":"        } else{","lastModifiedDate":"2023-02-26"},{"lineNumber":103,"author":{"gitId":"TopGun2001"},"content":"            System.out.println(\"Task is already unmarked.\");","lastModifiedDate":"2023-02-26"},{"lineNumber":104,"author":{"gitId":"TopGun2001"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":105,"author":{"gitId":"TopGun2001"},"content":"        Ui.printLines();","lastModifiedDate":"2023-02-26"},{"lineNumber":106,"author":{"gitId":"TopGun2001"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":107,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":108,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":109,"author":{"gitId":"TopGun2001"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":110,"author":{"gitId":"TopGun2001"},"content":"     * This in-class method is designed add a new task and display","lastModifiedDate":"2023-02-26"},{"lineNumber":111,"author":{"gitId":"TopGun2001"},"content":"     * confirmation message.","lastModifiedDate":"2023-02-26"},{"lineNumber":112,"author":{"gitId":"TopGun2001"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":113,"author":{"gitId":"TopGun2001"},"content":"    public static void addPrintTask(Task newTask, ArrayList\u003cTask\u003e task) {","lastModifiedDate":"2023-02-26"},{"lineNumber":114,"author":{"gitId":"TopGun2001"},"content":"        Ui.printLines();","lastModifiedDate":"2023-02-26"},{"lineNumber":115,"author":{"gitId":"TopGun2001"},"content":"        task.add(newTask);","lastModifiedDate":"2023-02-26"},{"lineNumber":116,"author":{"gitId":"TopGun2001"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-02-26"},{"lineNumber":117,"author":{"gitId":"TopGun2001"},"content":"        System.out.println(task.get(task.size() - 1));","lastModifiedDate":"2023-02-26"},{"lineNumber":118,"author":{"gitId":"TopGun2001"},"content":"        System.out.println(\"\\nNow you have \" + task.size() + \" tasks in the list.\");","lastModifiedDate":"2023-02-26"},{"lineNumber":119,"author":{"gitId":"TopGun2001"},"content":"        Ui.printLines();","lastModifiedDate":"2023-02-26"},{"lineNumber":120,"author":{"gitId":"TopGun2001"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":121,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":122,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":123,"author":{"gitId":"TopGun2001"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":124,"author":{"gitId":"TopGun2001"},"content":"     * This is a getter for getting task sign.","lastModifiedDate":"2023-02-26"},{"lineNumber":125,"author":{"gitId":"TopGun2001"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":126,"author":{"gitId":"TopGun2001"},"content":"     * @return task sign","lastModifiedDate":"2023-02-26"},{"lineNumber":127,"author":{"gitId":"TopGun2001"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":128,"author":{"gitId":"TopGun2001"},"content":"    public String giveTaskSign(){","lastModifiedDate":"2023-02-26"},{"lineNumber":129,"author":{"gitId":"TopGun2001"},"content":"        return this.taskSign;","lastModifiedDate":"2023-02-26"},{"lineNumber":130,"author":{"gitId":"TopGun2001"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":131,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":132,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":133,"author":{"gitId":"TopGun2001"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":134,"author":{"gitId":"TopGun2001"},"content":"     * This is a getter for getting task name.","lastModifiedDate":"2023-02-26"},{"lineNumber":135,"author":{"gitId":"TopGun2001"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":136,"author":{"gitId":"TopGun2001"},"content":"     * @return task name","lastModifiedDate":"2023-02-26"},{"lineNumber":137,"author":{"gitId":"TopGun2001"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":138,"author":{"gitId":"TopGun2001"},"content":"    public String giveTaskName(){","lastModifiedDate":"2023-02-26"},{"lineNumber":139,"author":{"gitId":"TopGun2001"},"content":"        return this.taskName;","lastModifiedDate":"2023-02-26"},{"lineNumber":140,"author":{"gitId":"TopGun2001"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":141,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":142,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":143,"author":{"gitId":"TopGun2001"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":144,"author":{"gitId":"TopGun2001"},"content":"     * This is a getter for getting task status.","lastModifiedDate":"2023-02-26"},{"lineNumber":145,"author":{"gitId":"TopGun2001"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":146,"author":{"gitId":"TopGun2001"},"content":"     * @return task status","lastModifiedDate":"2023-02-26"},{"lineNumber":147,"author":{"gitId":"TopGun2001"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":148,"author":{"gitId":"TopGun2001"},"content":"    public boolean giveTaskStatus(){","lastModifiedDate":"2023-02-26"},{"lineNumber":149,"author":{"gitId":"TopGun2001"},"content":"        return this.isDone;","lastModifiedDate":"2023-02-26"},{"lineNumber":150,"author":{"gitId":"TopGun2001"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":151,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":152,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":153,"author":{"gitId":"TopGun2001"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":154,"author":{"gitId":"TopGun2001"},"content":"     * This in-class method is designed to check if a task is marked","lastModifiedDate":"2023-02-26"},{"lineNumber":155,"author":{"gitId":"TopGun2001"},"content":"     * or unmarked.","lastModifiedDate":"2023-02-26"},{"lineNumber":156,"author":{"gitId":"TopGun2001"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":157,"author":{"gitId":"TopGun2001"},"content":"     * @return \"X\" if true, \" \" if false","lastModifiedDate":"2023-02-26"},{"lineNumber":158,"author":{"gitId":"TopGun2001"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":159,"author":{"gitId":"TopGun2001"},"content":"    public String taskStatus(){","lastModifiedDate":"2023-02-26"},{"lineNumber":160,"author":{"gitId":"TopGun2001"},"content":"        return (this.giveTaskStatus() ? \"X\" : \" \");","lastModifiedDate":"2023-02-26"},{"lineNumber":161,"author":{"gitId":"TopGun2001"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":162,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":163,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":164,"author":{"gitId":"TopGun2001"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":165,"author":{"gitId":"TopGun2001"},"content":"     * This is an override method with 3 overrides from 3 different subclasses: Todo, Event, Deadline","lastModifiedDate":"2023-02-26"},{"lineNumber":166,"author":{"gitId":"TopGun2001"},"content":"     * The purpose of this method is to display the contents of the task.","lastModifiedDate":"2023-02-26"},{"lineNumber":167,"author":{"gitId":"TopGun2001"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":168,"author":{"gitId":"TopGun2001"},"content":"     * @return task sign + task status + task name as a string","lastModifiedDate":"2023-02-26"},{"lineNumber":169,"author":{"gitId":"TopGun2001"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":170,"author":{"gitId":"TopGun2001"},"content":"    public String toString(){","lastModifiedDate":"2023-02-26"},{"lineNumber":171,"author":{"gitId":"TopGun2001"},"content":"        return this.giveTaskSign() + \"[\" + this.taskStatus() + \"] \" + this.giveTaskName();","lastModifiedDate":"2023-02-26"},{"lineNumber":172,"author":{"gitId":"TopGun2001"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":173,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":174,"author":{"gitId":"TopGun2001"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"TopGun2001":174}},{"path":"src/main/java/Tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TopGun2001"},"content":"package Tasks;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"TopGun2001"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"TopGun2001"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"TopGun2001"},"content":"     * This is the constructor of an object of class Todo. It also","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"TopGun2001"},"content":"     * calls the default constructor of the class it has inherited (Task).","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"TopGun2001"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"TopGun2001"},"content":"     * @param taskName: name of the task","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"TopGun2001"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"TopGun2001"},"content":"    public Todo(String taskName) {","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"TopGun2001"},"content":"        super(taskName, false, \"[T]\");","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"TopGun2001"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"TopGun2001"},"content":"    public String toString() {","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"TopGun2001"},"content":"        return super.toString();","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"TopGun2001"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"TopGun2001"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"TopGun2001":19}},{"path":"src/main/java/Ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TopGun2001"},"content":"package Ui;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"TopGun2001"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"TopGun2001"},"content":"public class Ui {","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"TopGun2001"},"content":"    public static void printLines(){","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"TopGun2001"},"content":"        System.out.println(\"--------------------------------------------------\");","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"TopGun2001"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"TopGun2001"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"TopGun2001"},"content":"     * This function takes in the user input and returns the next line.","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"TopGun2001"},"content":"     * @return user input","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"TopGun2001"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"TopGun2001"},"content":"    public static String takeUserInput() {","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"TopGun2001"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"TopGun2001"},"content":"        return in.nextLine();","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"TopGun2001"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"TopGun2001"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"TopGun2001"},"content":"     * Rolex greets user at the start of the program.","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"TopGun2001"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"TopGun2001"},"content":"    public static void rolexGreetsUser() {","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"TopGun2001"},"content":"        printLines();","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"TopGun2001"},"content":"        System.out.println(\"Hello! I\u0027m ROLEX\");","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"TopGun2001"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"TopGun2001"},"content":"        printLines();","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"TopGun2001"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"TopGun2001"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"TopGun2001"},"content":"     * Rolex says bye to the user at the end of the program. If there are any tasks,","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"TopGun2001"},"content":"     * it gets saved into the text file.","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"TopGun2001"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"TopGun2001"},"content":"    public static void rolexSaysBye() {","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"TopGun2001"},"content":"        printLines();","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"TopGun2001"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"TopGun2001"},"content":"        printLines();","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"TopGun2001"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"TopGun2001"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"TopGun2001"},"content":"     * This method is designed to display error message.","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"TopGun2001"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"TopGun2001"},"content":"    public static void printInvalidNumber(){","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"TopGun2001"},"content":"        printLines();","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"TopGun2001"},"content":"        System.out.println(\"Invalid index. Please enter valid index number!\");","lastModifiedDate":"2023-02-26"},{"lineNumber":49,"author":{"gitId":"TopGun2001"},"content":"        printLines();","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"TopGun2001"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"TopGun2001"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"TopGun2001":52}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"TopGun2001"},"content":"todo borrow book","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"TopGun2001"},"content":"list","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"TopGun2001"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"TopGun2001"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"TopGun2001":4}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"TopGun2001"},"content":"java -classpath ..\\bin Exception.Rolex \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"TopGun2001":1}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"TopGun2001"},"content":"java -classpath ../bin Rolex \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":37,"TopGun2001":1}}]
