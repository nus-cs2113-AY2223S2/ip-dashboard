[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"briantjs00"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"briantjs00"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"briantjs00"},"content":"import commands.Event;","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"briantjs00"},"content":"import commands.Task;","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"briantjs00"},"content":"import commands.Deadline;","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"briantjs00"},"content":"import commands.Todo;","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"briantjs00"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"briantjs00"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"briantjs00"},"content":"    private static final String LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"briantjs00"},"content":"    private static final String errorMessage \u003d \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"briantjs00"},"content":"    private static final String todoError \u003d \"☹ OOPS!!! The description of a todo cannot be empty.\";","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"briantjs00"},"content":"    private static ArrayList\u003cTask\u003e list \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"briantjs00"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"briantjs00"},"content":"    public static void greet() {","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"briantjs00"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"briantjs00"},"content":"        System.out.println(\"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\");","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"briantjs00"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"briantjs00"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"briantjs00"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"briantjs00"},"content":"    public static void bye() {","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"briantjs00"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"briantjs00"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"briantjs00"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"briantjs00"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"briantjs00"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"briantjs00"},"content":"    public static void printList() {","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"briantjs00"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"briantjs00"},"content":"        int numTask \u003d list.size();","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"briantjs00"},"content":"        if (numTask \u003d\u003d 0) {","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"briantjs00"},"content":"            System.out.println(\"No task added yet\");","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"briantjs00"},"content":"            System.out.println(LINE);","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"briantjs00"},"content":"        } else {","lastModifiedDate":"2023-02-15"},{"lineNumber":34,"author":{"gitId":"briantjs00"},"content":"            System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"briantjs00"},"content":"            for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"briantjs00"},"content":"                System.out.println((i+1) + \".\" + list.get(i).toString());","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"briantjs00"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"briantjs00"},"content":"            System.out.println(LINE);","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"briantjs00"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"briantjs00"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"briantjs00"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"briantjs00"},"content":"    public static void markTask(int index) {","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"briantjs00"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"briantjs00"},"content":"        list.get(index).markDone();","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"briantjs00"},"content":"        System.out.println(\"Awesome! I\u0027ve mark this task as done:\");","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"briantjs00"},"content":"        System.out.println(\"[\" + list.get(index).getStatusIcon() + \"] \" + list.get(index).description);","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"briantjs00"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"briantjs00"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":49,"author":{"gitId":"briantjs00"},"content":"    public static void unmarkTask(int index) {","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"briantjs00"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"briantjs00"},"content":"        list.get(index).markUndone();","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"briantjs00"},"content":"        System.out.println(\"What!?!? OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"briantjs00"},"content":"        System.out.println(\"[\" + list.get(index).getStatusIcon() + \"] \" + list.get(index).description);","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"briantjs00"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"briantjs00"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"briantjs00"},"content":"    public static void deleteTask(int index) {","lastModifiedDate":"2023-02-15"},{"lineNumber":57,"author":{"gitId":"briantjs00"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-02-15"},{"lineNumber":58,"author":{"gitId":"briantjs00"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-02-15"},{"lineNumber":59,"author":{"gitId":"briantjs00"},"content":"        System.out.println(\"  \" + list.get(index).toString());","lastModifiedDate":"2023-02-15"},{"lineNumber":60,"author":{"gitId":"briantjs00"},"content":"        list.remove(index);","lastModifiedDate":"2023-02-15"},{"lineNumber":61,"author":{"gitId":"briantjs00"},"content":"        int size \u003d list.size();","lastModifiedDate":"2023-02-15"},{"lineNumber":62,"author":{"gitId":"briantjs00"},"content":"        System.out.println(\"Now you have \" + size + \" tasks in the list\");","lastModifiedDate":"2023-02-15"},{"lineNumber":63,"author":{"gitId":"briantjs00"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":64,"author":{"gitId":"briantjs00"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":65,"author":{"gitId":"briantjs00"},"content":"    public static void addTodo(String input) throws DukeException {","lastModifiedDate":"2023-02-15"},{"lineNumber":66,"author":{"gitId":"briantjs00"},"content":"        try {","lastModifiedDate":"2023-02-15"},{"lineNumber":67,"author":{"gitId":"briantjs00"},"content":"            Todo task \u003d new Todo(input);","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"briantjs00"},"content":"            list.add(task);","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"briantjs00"},"content":"            if (task.description.split(\" \").length \u003c 2) {","lastModifiedDate":"2023-02-15"},{"lineNumber":70,"author":{"gitId":"briantjs00"},"content":"                throw new DukeException(todoError);","lastModifiedDate":"2023-02-15"},{"lineNumber":71,"author":{"gitId":"briantjs00"},"content":"            } else {","lastModifiedDate":"2023-02-15"},{"lineNumber":72,"author":{"gitId":"briantjs00"},"content":"                System.out.println(LINE);","lastModifiedDate":"2023-02-01"},{"lineNumber":73,"author":{"gitId":"briantjs00"},"content":"                System.out.println(\"Roger! The Todo task has been added: \\n    \" + task.toString());","lastModifiedDate":"2023-02-01"},{"lineNumber":74,"author":{"gitId":"briantjs00"},"content":"                System.out.println(\"Now you have \" + list.size() + \" in the list\");","lastModifiedDate":"2023-02-01"},{"lineNumber":75,"author":{"gitId":"briantjs00"},"content":"                System.out.println(LINE);","lastModifiedDate":"2023-02-01"},{"lineNumber":76,"author":{"gitId":"briantjs00"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":77,"author":{"gitId":"briantjs00"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":78,"author":{"gitId":"briantjs00"},"content":"            printError(e);","lastModifiedDate":"2023-02-15"},{"lineNumber":79,"author":{"gitId":"briantjs00"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":80,"author":{"gitId":"briantjs00"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":81,"author":{"gitId":"briantjs00"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":82,"author":{"gitId":"briantjs00"},"content":"    public static void addDeadline(String input) {","lastModifiedDate":"2023-02-01"},{"lineNumber":83,"author":{"gitId":"briantjs00"},"content":"        Deadline task \u003d new Deadline(input);","lastModifiedDate":"2023-02-01"},{"lineNumber":84,"author":{"gitId":"briantjs00"},"content":"        list.add(task);","lastModifiedDate":"2023-02-01"},{"lineNumber":85,"author":{"gitId":"briantjs00"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-02-01"},{"lineNumber":86,"author":{"gitId":"briantjs00"},"content":"        System.out.println(\"Roger! The Deadline task has been added: \\n    \" + task.toString());","lastModifiedDate":"2023-02-01"},{"lineNumber":87,"author":{"gitId":"briantjs00"},"content":"        System.out.println(\"Now you have \" + list.size() + \" in the list\");","lastModifiedDate":"2023-02-01"},{"lineNumber":88,"author":{"gitId":"briantjs00"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-02-01"},{"lineNumber":89,"author":{"gitId":"briantjs00"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":90,"author":{"gitId":"briantjs00"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":91,"author":{"gitId":"briantjs00"},"content":"    public static void addEvent(String input) {","lastModifiedDate":"2023-02-01"},{"lineNumber":92,"author":{"gitId":"briantjs00"},"content":"        Event task \u003d new Event(input);","lastModifiedDate":"2023-02-01"},{"lineNumber":93,"author":{"gitId":"briantjs00"},"content":"        list.add(task);","lastModifiedDate":"2023-02-01"},{"lineNumber":94,"author":{"gitId":"briantjs00"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-02-01"},{"lineNumber":95,"author":{"gitId":"briantjs00"},"content":"        System.out.println(\"Roger! The Deadline task has been added: \\n    \" + task.toString());","lastModifiedDate":"2023-02-01"},{"lineNumber":96,"author":{"gitId":"briantjs00"},"content":"        System.out.println(\"Now you have \" + list.size() + \" in the list\");","lastModifiedDate":"2023-02-01"},{"lineNumber":97,"author":{"gitId":"briantjs00"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-02-01"},{"lineNumber":98,"author":{"gitId":"briantjs00"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":99,"author":{"gitId":"briantjs00"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":100,"author":{"gitId":"briantjs00"},"content":"    private static void runCommand(String input, String command) throws DukeException {","lastModifiedDate":"2023-02-15"},{"lineNumber":101,"author":{"gitId":"briantjs00"},"content":"        if (command.equalsIgnoreCase(\"todo\")) {","lastModifiedDate":"2023-02-15"},{"lineNumber":102,"author":{"gitId":"briantjs00"},"content":"            addTodo(input);","lastModifiedDate":"2023-02-15"},{"lineNumber":103,"author":{"gitId":"briantjs00"},"content":"        } else if (command.equalsIgnoreCase(\"deadline\")) {","lastModifiedDate":"2023-02-15"},{"lineNumber":104,"author":{"gitId":"briantjs00"},"content":"            addDeadline(input);","lastModifiedDate":"2023-02-15"},{"lineNumber":105,"author":{"gitId":"briantjs00"},"content":"        } else if (command.equalsIgnoreCase(\"event\")) {","lastModifiedDate":"2023-02-15"},{"lineNumber":106,"author":{"gitId":"briantjs00"},"content":"            addEvent(input);","lastModifiedDate":"2023-02-15"},{"lineNumber":107,"author":{"gitId":"briantjs00"},"content":"        } else if (command.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2023-02-15"},{"lineNumber":108,"author":{"gitId":"briantjs00"},"content":"            printList();","lastModifiedDate":"2023-02-15"},{"lineNumber":109,"author":{"gitId":"briantjs00"},"content":"        } else if (command.equalsIgnoreCase(\"mark\")) {","lastModifiedDate":"2023-02-15"},{"lineNumber":110,"author":{"gitId":"briantjs00"},"content":"            int taskIdx \u003d Integer.parseInt(input.split(\" \")[1]) - 1;","lastModifiedDate":"2023-02-15"},{"lineNumber":111,"author":{"gitId":"briantjs00"},"content":"            markTask(taskIdx);","lastModifiedDate":"2023-02-15"},{"lineNumber":112,"author":{"gitId":"briantjs00"},"content":"        } else if (command.equalsIgnoreCase(\"unmark\")) {","lastModifiedDate":"2023-02-15"},{"lineNumber":113,"author":{"gitId":"briantjs00"},"content":"            int taskIdx \u003d Integer.parseInt(input.split(\" \")[1]) - 1;","lastModifiedDate":"2023-02-15"},{"lineNumber":114,"author":{"gitId":"briantjs00"},"content":"            unmarkTask(taskIdx);","lastModifiedDate":"2023-02-15"},{"lineNumber":115,"author":{"gitId":"briantjs00"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":116,"author":{"gitId":"briantjs00"},"content":"        else if (command.equalsIgnoreCase(\"delete\")) {","lastModifiedDate":"2023-02-15"},{"lineNumber":117,"author":{"gitId":"briantjs00"},"content":"            int taskIdx \u003d Integer.parseInt(input.split(\" \")[1]) - 1;","lastModifiedDate":"2023-02-15"},{"lineNumber":118,"author":{"gitId":"briantjs00"},"content":"            deleteTask(taskIdx);","lastModifiedDate":"2023-02-15"},{"lineNumber":119,"author":{"gitId":"briantjs00"},"content":"        } else {","lastModifiedDate":"2023-02-15"},{"lineNumber":120,"author":{"gitId":"briantjs00"},"content":"            throw new DukeException(errorMessage);","lastModifiedDate":"2023-02-15"},{"lineNumber":121,"author":{"gitId":"briantjs00"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":122,"author":{"gitId":"briantjs00"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":123,"author":{"gitId":"briantjs00"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":124,"author":{"gitId":"briantjs00"},"content":"    private static void printError(DukeException e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":125,"author":{"gitId":"briantjs00"},"content":"        System.out.println(LINE + \"\\n\" + e.getMessage() + LINE);","lastModifiedDate":"2023-02-15"},{"lineNumber":126,"author":{"gitId":"briantjs00"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":133,"author":{"gitId":"briantjs00"},"content":"        System.out.println(logo);","lastModifiedDate":"2023-02-01"},{"lineNumber":134,"author":{"gitId":"briantjs00"},"content":"        greet();","lastModifiedDate":"2023-01-30"},{"lineNumber":135,"author":{"gitId":"briantjs00"},"content":"        String input, command;","lastModifiedDate":"2023-02-01"},{"lineNumber":136,"author":{"gitId":"briantjs00"},"content":"        int inputCounter \u003d 0;","lastModifiedDate":"2023-01-30"},{"lineNumber":137,"author":{"gitId":"briantjs00"},"content":"        while (true) {","lastModifiedDate":"2023-01-30"},{"lineNumber":138,"author":{"gitId":"briantjs00"},"content":"            Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-30"},{"lineNumber":139,"author":{"gitId":"briantjs00"},"content":"            input \u003d in.nextLine();","lastModifiedDate":"2023-01-30"},{"lineNumber":140,"author":{"gitId":"briantjs00"},"content":"            command \u003d input.split(\" \")[0];","lastModifiedDate":"2023-02-01"},{"lineNumber":141,"author":{"gitId":"briantjs00"},"content":"            if (command.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2023-02-01"},{"lineNumber":142,"author":{"gitId":"briantjs00"},"content":"                bye();","lastModifiedDate":"2023-01-30"},{"lineNumber":143,"author":{"gitId":"briantjs00"},"content":"                break;","lastModifiedDate":"2023-01-30"},{"lineNumber":144,"author":{"gitId":"briantjs00"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":145,"author":{"gitId":"briantjs00"},"content":"            try {","lastModifiedDate":"2023-02-15"},{"lineNumber":146,"author":{"gitId":"briantjs00"},"content":"                runCommand(input, command);","lastModifiedDate":"2023-02-15"},{"lineNumber":147,"author":{"gitId":"briantjs00"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":148,"author":{"gitId":"briantjs00"},"content":"                printError(e);","lastModifiedDate":"2023-02-15"},{"lineNumber":149,"author":{"gitId":"briantjs00"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":150,"author":{"gitId":"briantjs00"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":151,"author":{"gitId":"briantjs00"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":9,"briantjs00":144}},{"path":"src/main/java/Exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"briantjs00"},"content":"package exceptions;","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"briantjs00"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"briantjs00"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"briantjs00"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"briantjs00"},"content":"        super(errorMessage);","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"briantjs00"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"briantjs00"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"briantjs00":7}},{"path":"src/main/java/commands/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"briantjs00"},"content":"package commands;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"briantjs00"},"content":"public class Deadline extends Task{","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"briantjs00"},"content":"    public Deadline(String description) {","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"briantjs00"},"content":"        super(description);","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"briantjs00"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"briantjs00"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"briantjs00"},"content":"    private String date \u003d this.description.split(\"/by\")[1];","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"briantjs00"},"content":"    private String task \u003d this.description.split(\"/by\")[0].split(\" \",2)[1];","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"briantjs00"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"briantjs00"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"briantjs00"},"content":"    public String toString() {","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"briantjs00"},"content":"        return (\"[D]\" + super.toString() + task + \"(by:\" + date + \")\");","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"briantjs00"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"briantjs00"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"briantjs00":14}},{"path":"src/main/java/commands/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"briantjs00"},"content":"package commands;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"briantjs00"},"content":"public class Event extends Task {","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"briantjs00"},"content":"    public Event(String description) {","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"briantjs00"},"content":"        super(description);","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"briantjs00"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"briantjs00"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"briantjs00"},"content":"    private String startEvent \u003d this.description.split(\"/from\")[1].split(\"/\")[0];","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"briantjs00"},"content":"    private String endEvent \u003d this.description.split(\"/from\")[1].split(\"/to\")[1];","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"briantjs00"},"content":"    private String task \u003d this.description.split(\"/from\")[0].split(\" \",2)[1];","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"briantjs00"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"briantjs00"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"briantjs00"},"content":"    public String toString() {","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"briantjs00"},"content":"        return (\"[E]\" + super.toString() + task + \"(from:\" + startEvent + \"to:\" + endEvent+ \")\");","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"briantjs00"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"briantjs00"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"briantjs00":15}},{"path":"src/main/java/commands/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"briantjs00"},"content":"package commands;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"briantjs00"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"briantjs00"},"content":"public class Task {","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"briantjs00"},"content":"    public String description;","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"briantjs00"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"briantjs00"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"briantjs00"},"content":"    public Task(String description) {","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"briantjs00"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"briantjs00"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"briantjs00"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"briantjs00"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"briantjs00"},"content":"    public void markDone() {","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"briantjs00"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"briantjs00"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"briantjs00"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"briantjs00"},"content":"    public void markUndone() {","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"briantjs00"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"briantjs00"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"briantjs00"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"briantjs00"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"briantjs00"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"briantjs00"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"briantjs00"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"briantjs00"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"briantjs00"},"content":"    public String toString() {","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"briantjs00"},"content":"        return (\"[\" + this.getStatusIcon() + \"] \");","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"briantjs00"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"briantjs00"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"briantjs00":28}},{"path":"src/main/java/commands/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"briantjs00"},"content":"package commands;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"briantjs00"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"briantjs00"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"briantjs00"},"content":"        super(description);","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"briantjs00"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"briantjs00"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"briantjs00"},"content":"    public String toString() {","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"briantjs00"},"content":"        return (\"[T]\" + super.toString() + this.description.split(\" \",2)[1]);","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"briantjs00"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"briantjs00"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"briantjs00":10}}]
