[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"Arif-Khalid"},"content":"Duke is a useful tool to keep track of a variety of tasks, helping you to plan your day and boost your productivity.  ","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"Arif-Khalid"},"content":"It leverages optimised CLI performance to bring to you all the best features of any task manager in a small but powerful package!","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"Arif-Khalid"},"content":"### Stores a list of tasks","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"Arif-Khalid"},"content":"Input tasks through a CLI which are stored locally on your hard drive across instances of the program","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"Arif-Khalid"},"content":"### Mark tasks as done/not done","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"Arif-Khalid"},"content":"Mark specific tasks as done or not done","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"Arif-Khalid"},"content":"### Store dates related to tasks","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"Arif-Khalid"},"content":"Store an event or deadline with specific dates tied to the task","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"Arif-Khalid"},"content":"### Find tasks of a specific keyword","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":22,"author":{"gitId":"Arif-Khalid"},"content":"Find all tasks in the list which contains the name passed into the program","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":24,"author":{"gitId":"Arif-Khalid"},"content":"### View all your tasks","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":26,"author":{"gitId":"Arif-Khalid"},"content":"View all completed and uncompleted tasks","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"Arif-Khalid"},"content":"### Delete a task","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"Arif-Khalid"},"content":"Delete a task from the list","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":34,"author":{"gitId":"Arif-Khalid"},"content":"### `todo` - Adds a todo task to the list","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"Arif-Khalid"},"content":"A todo task is one that has no associated date parameters.  ","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"Arif-Khalid"},"content":"Adds a named todo task to the task list, stored on your local device","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"Arif-Khalid"},"content":"Example of usage: ","lastModifiedDate":"2023-02-23"},{"lineNumber":40,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"Arif-Khalid"},"content":"`todo study for CS2113`","lastModifiedDate":"2023-02-23"},{"lineNumber":42,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":43,"author":{"gitId":"Arif-Khalid"},"content":"Expected outcome:","lastModifiedDate":"2023-02-23"},{"lineNumber":44,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"Arif-Khalid"},"content":"A todo task of name \"study for CS2113\" is added to the task list","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":47,"author":{"gitId":"Arif-Khalid"},"content":"```","lastModifiedDate":"2023-02-23"},{"lineNumber":48,"author":{"gitId":"Arif-Khalid"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-02-23"},{"lineNumber":49,"author":{"gitId":"Arif-Khalid"},"content":"  [T][ ] study for CS2113","lastModifiedDate":"2023-02-23"},{"lineNumber":50,"author":{"gitId":"Arif-Khalid"},"content":"Now you have 1 task in the list","lastModifiedDate":"2023-02-23"},{"lineNumber":51,"author":{"gitId":"Arif-Khalid"},"content":"```","lastModifiedDate":"2023-02-23"},{"lineNumber":52,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":53,"author":{"gitId":"Arif-Khalid"},"content":"### `deadline` - Adds a deadline task to the list","lastModifiedDate":"2023-02-23"},{"lineNumber":54,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":55,"author":{"gitId":"Arif-Khalid"},"content":"A deadline task is one that has a due by date parameter associated with it  ","lastModifiedDate":"2023-02-23"},{"lineNumber":56,"author":{"gitId":"Arif-Khalid"},"content":"Adds a named deadline task to the task list, stored on your local device  ","lastModifiedDate":"2023-02-23"},{"lineNumber":57,"author":{"gitId":"Arif-Khalid"},"content":"Date parameter is indicated in the form `/by yyyy-mm-dd`","lastModifiedDate":"2023-02-23"},{"lineNumber":58,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":59,"author":{"gitId":"Arif-Khalid"},"content":"Example of usage: ","lastModifiedDate":"2023-02-23"},{"lineNumber":60,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":61,"author":{"gitId":"Arif-Khalid"},"content":"`deadline RSVP to wedding /by 2023-03-13`","lastModifiedDate":"2023-02-23"},{"lineNumber":62,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":63,"author":{"gitId":"Arif-Khalid"},"content":"Expected outcome:","lastModifiedDate":"2023-02-23"},{"lineNumber":64,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":65,"author":{"gitId":"Arif-Khalid"},"content":"A deadline task of name \"RSVP to wedding\" is added to the task list  ","lastModifiedDate":"2023-02-23"},{"lineNumber":66,"author":{"gitId":"Arif-Khalid"},"content":"An associated date of Mar 13 2023 is stored","lastModifiedDate":"2023-02-23"},{"lineNumber":67,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":68,"author":{"gitId":"Arif-Khalid"},"content":"```","lastModifiedDate":"2023-02-23"},{"lineNumber":69,"author":{"gitId":"Arif-Khalid"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-02-23"},{"lineNumber":70,"author":{"gitId":"Arif-Khalid"},"content":"  [D][ ] RSVP to wedding (by: Mar 13 2023)","lastModifiedDate":"2023-02-23"},{"lineNumber":71,"author":{"gitId":"Arif-Khalid"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2023-02-23"},{"lineNumber":72,"author":{"gitId":"Arif-Khalid"},"content":"```","lastModifiedDate":"2023-02-23"},{"lineNumber":73,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":74,"author":{"gitId":"Arif-Khalid"},"content":"### `event` - Adds an event task to the list","lastModifiedDate":"2023-02-23"},{"lineNumber":75,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":76,"author":{"gitId":"Arif-Khalid"},"content":"An event task is one that has a from and to date parameter associated with it  ","lastModifiedDate":"2023-02-23"},{"lineNumber":77,"author":{"gitId":"Arif-Khalid"},"content":"Adds a named event task to the task list, stored on your local device  ","lastModifiedDate":"2023-02-23"},{"lineNumber":78,"author":{"gitId":"Arif-Khalid"},"content":"Date parameter is indicated in the form `/from yyyy-mm-dd /to yyyy-mm-dd`","lastModifiedDate":"2023-02-23"},{"lineNumber":79,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":80,"author":{"gitId":"Arif-Khalid"},"content":"Example of usage: ","lastModifiedDate":"2023-02-23"},{"lineNumber":81,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":82,"author":{"gitId":"Arif-Khalid"},"content":"`event Ops Manning /from 2023-01-26 /to 2023-02-09`","lastModifiedDate":"2023-02-23"},{"lineNumber":83,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":84,"author":{"gitId":"Arif-Khalid"},"content":"Expected outcome:","lastModifiedDate":"2023-02-23"},{"lineNumber":85,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":86,"author":{"gitId":"Arif-Khalid"},"content":"An event task of name \"Ops Manning\" is added to the task list  ","lastModifiedDate":"2023-02-23"},{"lineNumber":87,"author":{"gitId":"Arif-Khalid"},"content":"An associated date of Jan 26 2023 and Feb 9 2023 is stored as the from and to date respectively","lastModifiedDate":"2023-02-23"},{"lineNumber":88,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":89,"author":{"gitId":"Arif-Khalid"},"content":"```","lastModifiedDate":"2023-02-23"},{"lineNumber":90,"author":{"gitId":"Arif-Khalid"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-02-23"},{"lineNumber":91,"author":{"gitId":"Arif-Khalid"},"content":"  [E][ ] Ops Manning (from: Jan 26 2023 to: Feb 9 2023)","lastModifiedDate":"2023-02-23"},{"lineNumber":92,"author":{"gitId":"Arif-Khalid"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2023-02-23"},{"lineNumber":93,"author":{"gitId":"Arif-Khalid"},"content":"```","lastModifiedDate":"2023-02-23"},{"lineNumber":94,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":95,"author":{"gitId":"Arif-Khalid"},"content":"### `list` - Prints all the tasks to the user","lastModifiedDate":"2023-02-23"},{"lineNumber":96,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":97,"author":{"gitId":"Arif-Khalid"},"content":"Shows all the tasks currently stored in the programme along with completion status and associated parameters","lastModifiedDate":"2023-02-23"},{"lineNumber":98,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":99,"author":{"gitId":"Arif-Khalid"},"content":"Example of usage: ","lastModifiedDate":"2023-02-23"},{"lineNumber":100,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":101,"author":{"gitId":"Arif-Khalid"},"content":"`list`","lastModifiedDate":"2023-02-23"},{"lineNumber":102,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":103,"author":{"gitId":"Arif-Khalid"},"content":"Expected outcome:","lastModifiedDate":"2023-02-23"},{"lineNumber":104,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":105,"author":{"gitId":"Arif-Khalid"},"content":"All tasks, with associated parameters and completion status are displayed to the user","lastModifiedDate":"2023-02-23"},{"lineNumber":106,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":107,"author":{"gitId":"Arif-Khalid"},"content":"```","lastModifiedDate":"2023-02-23"},{"lineNumber":108,"author":{"gitId":"Arif-Khalid"},"content":"Here are the tasks in your list:","lastModifiedDate":"2023-02-23"},{"lineNumber":109,"author":{"gitId":"Arif-Khalid"},"content":"1.[T][ ] study for CS2113","lastModifiedDate":"2023-02-23"},{"lineNumber":110,"author":{"gitId":"Arif-Khalid"},"content":"2.[D][ ] RSVP to wedding (by: Mar 13 2023)","lastModifiedDate":"2023-02-23"},{"lineNumber":111,"author":{"gitId":"Arif-Khalid"},"content":"3.[E][ ] Ops Manning (from: Jan 26 2023 to: Feb 9 2023)","lastModifiedDate":"2023-02-23"},{"lineNumber":112,"author":{"gitId":"Arif-Khalid"},"content":"```","lastModifiedDate":"2023-02-23"},{"lineNumber":113,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":114,"author":{"gitId":"Arif-Khalid"},"content":"### `mark` - Marks a specific task as done","lastModifiedDate":"2023-02-23"},{"lineNumber":115,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":116,"author":{"gitId":"Arif-Khalid"},"content":"The task indicated is marked as done in the task list and the change is stored on your local device","lastModifiedDate":"2023-02-23"},{"lineNumber":117,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":118,"author":{"gitId":"Arif-Khalid"},"content":"Example of usage: ","lastModifiedDate":"2023-02-23"},{"lineNumber":119,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":120,"author":{"gitId":"Arif-Khalid"},"content":"`mark 2`","lastModifiedDate":"2023-02-23"},{"lineNumber":121,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":122,"author":{"gitId":"Arif-Khalid"},"content":"Expected outcome:","lastModifiedDate":"2023-02-23"},{"lineNumber":123,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":124,"author":{"gitId":"Arif-Khalid"},"content":"The task of number 2, following 1-based indexing, is marked as done","lastModifiedDate":"2023-02-23"},{"lineNumber":125,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":126,"author":{"gitId":"Arif-Khalid"},"content":"```","lastModifiedDate":"2023-02-23"},{"lineNumber":127,"author":{"gitId":"Arif-Khalid"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2023-02-23"},{"lineNumber":128,"author":{"gitId":"Arif-Khalid"},"content":"[D][X] RSVP to wedding (by: Mar 13 2023)","lastModifiedDate":"2023-02-23"},{"lineNumber":129,"author":{"gitId":"Arif-Khalid"},"content":"```","lastModifiedDate":"2023-02-23"},{"lineNumber":130,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":131,"author":{"gitId":"Arif-Khalid"},"content":"### `unmark` - Marks a specific task as not done","lastModifiedDate":"2023-02-23"},{"lineNumber":132,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":133,"author":{"gitId":"Arif-Khalid"},"content":"The task indicated is marked as not done in the task list and the change is stored on your local device","lastModifiedDate":"2023-02-23"},{"lineNumber":134,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":135,"author":{"gitId":"Arif-Khalid"},"content":"Example of usage: ","lastModifiedDate":"2023-02-23"},{"lineNumber":136,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":137,"author":{"gitId":"Arif-Khalid"},"content":"`unmark 2`","lastModifiedDate":"2023-02-23"},{"lineNumber":138,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":139,"author":{"gitId":"Arif-Khalid"},"content":"Expected outcome:","lastModifiedDate":"2023-02-23"},{"lineNumber":140,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":141,"author":{"gitId":"Arif-Khalid"},"content":"The task of number 2, following 1-based indexing, is marked as not done","lastModifiedDate":"2023-02-23"},{"lineNumber":142,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":143,"author":{"gitId":"Arif-Khalid"},"content":"```","lastModifiedDate":"2023-02-23"},{"lineNumber":144,"author":{"gitId":"Arif-Khalid"},"content":"OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2023-02-23"},{"lineNumber":145,"author":{"gitId":"Arif-Khalid"},"content":"[D][ ] RSVP to wedding (by: Mar 13 2023)","lastModifiedDate":"2023-02-23"},{"lineNumber":146,"author":{"gitId":"Arif-Khalid"},"content":"```","lastModifiedDate":"2023-02-23"},{"lineNumber":147,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":148,"author":{"gitId":"Arif-Khalid"},"content":"### `delete` - Deletes a specific task","lastModifiedDate":"2023-02-23"},{"lineNumber":149,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":150,"author":{"gitId":"Arif-Khalid"},"content":"The task indicated is deleted from the task list and the change is stored on your local device","lastModifiedDate":"2023-02-23"},{"lineNumber":151,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":152,"author":{"gitId":"Arif-Khalid"},"content":"Example of usage: ","lastModifiedDate":"2023-02-23"},{"lineNumber":153,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":154,"author":{"gitId":"Arif-Khalid"},"content":"`delete 1`","lastModifiedDate":"2023-02-23"},{"lineNumber":155,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":156,"author":{"gitId":"Arif-Khalid"},"content":"Expected outcome:","lastModifiedDate":"2023-02-23"},{"lineNumber":157,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":158,"author":{"gitId":"Arif-Khalid"},"content":"The task of number 1, following 1-based indexing, is deleted","lastModifiedDate":"2023-02-23"},{"lineNumber":159,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":160,"author":{"gitId":"Arif-Khalid"},"content":"```","lastModifiedDate":"2023-02-23"},{"lineNumber":161,"author":{"gitId":"Arif-Khalid"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2023-02-23"},{"lineNumber":162,"author":{"gitId":"Arif-Khalid"},"content":"  [T][ ] study for CS2113","lastModifiedDate":"2023-02-23"},{"lineNumber":163,"author":{"gitId":"Arif-Khalid"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2023-02-23"},{"lineNumber":164,"author":{"gitId":"Arif-Khalid"},"content":"```","lastModifiedDate":"2023-02-23"},{"lineNumber":165,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":166,"author":{"gitId":"Arif-Khalid"},"content":"### `find` - Finds and shows all tasks in the list containing a specific keyword in their name","lastModifiedDate":"2023-02-23"},{"lineNumber":167,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":168,"author":{"gitId":"Arif-Khalid"},"content":"The list of tasks with names containing the keyword passed in is shown to the user","lastModifiedDate":"2023-02-23"},{"lineNumber":169,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":170,"author":{"gitId":"Arif-Khalid"},"content":"Example of usage: ","lastModifiedDate":"2023-02-23"},{"lineNumber":171,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":172,"author":{"gitId":"Arif-Khalid"},"content":"`find wedding`","lastModifiedDate":"2023-02-23"},{"lineNumber":173,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":174,"author":{"gitId":"Arif-Khalid"},"content":"Expected outcome:","lastModifiedDate":"2023-02-23"},{"lineNumber":175,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":176,"author":{"gitId":"Arif-Khalid"},"content":"The tasks with \"wedding\" in their name are displayed","lastModifiedDate":"2023-02-23"},{"lineNumber":177,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":178,"author":{"gitId":"Arif-Khalid"},"content":"```","lastModifiedDate":"2023-02-23"},{"lineNumber":179,"author":{"gitId":"Arif-Khalid"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2023-02-23"},{"lineNumber":180,"author":{"gitId":"Arif-Khalid"},"content":"1.[D][ ] RSVP to wedding (by: Mar 13 2023)","lastModifiedDate":"2023-02-23"},{"lineNumber":181,"author":{"gitId":"Arif-Khalid"},"content":"```","lastModifiedDate":"2023-02-23"},{"lineNumber":182,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":183,"author":{"gitId":"Arif-Khalid"},"content":"### `bye` - Ends the program","lastModifiedDate":"2023-02-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":185,"author":{"gitId":"Arif-Khalid"},"content":"Closes the program, task list created is stored on your local device","lastModifiedDate":"2023-02-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2019-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":189,"author":{"gitId":"Arif-Khalid"},"content":"`bye`","lastModifiedDate":"2023-02-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":193,"author":{"gitId":"Arif-Khalid"},"content":"The program closes","lastModifiedDate":"2023-02-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":195,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":196,"author":{"gitId":"Arif-Khalid"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2023-02-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"Arif-Khalid":177,"-":20}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Arif-Khalid"},"content":"package duke;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"Arif-Khalid"},"content":"import duke.command.Command;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Arif-Khalid"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"Arif-Khalid"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Arif-Khalid"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"Arif-Khalid"},"content":"import duke.task.*;","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"Arif-Khalid"},"content":"import duke.ui.UI;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"Arif-Khalid"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"Arif-Khalid"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"Arif-Khalid"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"Arif-Khalid"},"content":"import java.io.File;","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"Arif-Khalid"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"Arif-Khalid"},"content":"        TaskList taskList;","lastModifiedDate":"2023-02-22"},{"lineNumber":18,"author":{"gitId":"Arif-Khalid"},"content":"        final File taskDataDirectory \u003d new File(\"data\");","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"Arif-Khalid"},"content":"        final File taskDataFile \u003d new File(\"data/task-data.txt\");","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"Arif-Khalid"},"content":"        if(!taskDataDirectory.exists()){","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"Arif-Khalid"},"content":"            try{","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"Arif-Khalid"},"content":"                taskDataDirectory.mkdir();","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"Arif-Khalid"},"content":"            }catch (SecurityException e){","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"Arif-Khalid"},"content":"                UI.printToUser(\"An error occurred while creating the data directory: \" + e.getMessage());","lastModifiedDate":"2023-02-22"},{"lineNumber":25,"author":{"gitId":"Arif-Khalid"},"content":"                return;","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"Arif-Khalid"},"content":"            }","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"Arif-Khalid"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"Arif-Khalid"},"content":"        try{","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"Arif-Khalid"},"content":"            ArrayList\u003cTask\u003e tasks \u003d Storage.retrieveTaskData(taskDataFile);","lastModifiedDate":"2023-02-22"},{"lineNumber":30,"author":{"gitId":"Arif-Khalid"},"content":"            taskList \u003d new TaskList(tasks);","lastModifiedDate":"2023-02-22"},{"lineNumber":31,"author":{"gitId":"Arif-Khalid"},"content":"        }catch (Exception e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"Arif-Khalid"},"content":"            UI.printToUser(\"An error occurred while retrieving task data: \" + e.getMessage());","lastModifiedDate":"2023-02-22"},{"lineNumber":33,"author":{"gitId":"Arif-Khalid"},"content":"            return;","lastModifiedDate":"2023-02-15"},{"lineNumber":34,"author":{"gitId":"Arif-Khalid"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":35,"author":{"gitId":"Arif-Khalid"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"Arif-Khalid"},"content":"        UI.printGreeting();","lastModifiedDate":"2023-02-22"},{"lineNumber":37,"author":{"gitId":"Arif-Khalid"},"content":"        boolean isProgramRunning \u003d true;","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"Arif-Khalid"},"content":"        while(isProgramRunning)","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"Arif-Khalid"},"content":"        {","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"Arif-Khalid"},"content":"            String userInput \u003d UI.getUserInput();","lastModifiedDate":"2023-02-22"},{"lineNumber":41,"author":{"gitId":"Arif-Khalid"},"content":"            Command command;","lastModifiedDate":"2023-02-08"},{"lineNumber":42,"author":{"gitId":"Arif-Khalid"},"content":"            try{","lastModifiedDate":"2023-02-08"},{"lineNumber":43,"author":{"gitId":"Arif-Khalid"},"content":"                command \u003d Parser.parseCommand(userInput);","lastModifiedDate":"2023-02-08"},{"lineNumber":44,"author":{"gitId":"Arif-Khalid"},"content":"                switch(command.getCommandType()){","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"Arif-Khalid"},"content":"                case ADD_TODO_COMMAND:","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"Arif-Khalid"},"content":"                    taskList.addNewTask(command.getAdditionalParameters(), TaskType.TODO);","lastModifiedDate":"2023-02-22"},{"lineNumber":47,"author":{"gitId":"Arif-Khalid"},"content":"                    Storage.storeTaskData(taskDataFile, taskList.getTaskArrayList());","lastModifiedDate":"2023-02-22"},{"lineNumber":48,"author":{"gitId":"Arif-Khalid"},"content":"                    break;","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"Arif-Khalid"},"content":"                case ADD_DEADLINE_COMMAND:","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"Arif-Khalid"},"content":"                    taskList.addNewTask(command.getAdditionalParameters(), TaskType.DEADLINE);","lastModifiedDate":"2023-02-22"},{"lineNumber":51,"author":{"gitId":"Arif-Khalid"},"content":"                    Storage.storeTaskData(taskDataFile, taskList.getTaskArrayList());","lastModifiedDate":"2023-02-22"},{"lineNumber":52,"author":{"gitId":"Arif-Khalid"},"content":"                    break;","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"Arif-Khalid"},"content":"                case ADD_EVENT_COMMAND:","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"Arif-Khalid"},"content":"                    taskList.addNewTask(command.getAdditionalParameters(), TaskType.EVENT);","lastModifiedDate":"2023-02-22"},{"lineNumber":55,"author":{"gitId":"Arif-Khalid"},"content":"                    Storage.storeTaskData(taskDataFile, taskList.getTaskArrayList());","lastModifiedDate":"2023-02-22"},{"lineNumber":56,"author":{"gitId":"Arif-Khalid"},"content":"                    break;","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"Arif-Khalid"},"content":"                case LIST_TASKS_COMMAND:","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"Arif-Khalid"},"content":"                    UI.printTaskList(taskList.getTaskArrayList(),","lastModifiedDate":"2023-02-23"},{"lineNumber":59,"author":{"gitId":"Arif-Khalid"},"content":"                            \"Here are the tasks in your list:\");","lastModifiedDate":"2023-02-23"},{"lineNumber":60,"author":{"gitId":"Arif-Khalid"},"content":"                    break;","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"Arif-Khalid"},"content":"                case MARK_TASK_COMMAND:","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"Arif-Khalid"},"content":"                    taskList.changeTaskStatus(command.getAdditionalParameters(), true);","lastModifiedDate":"2023-02-22"},{"lineNumber":63,"author":{"gitId":"Arif-Khalid"},"content":"                    Storage.storeTaskData(taskDataFile, taskList.getTaskArrayList());","lastModifiedDate":"2023-02-22"},{"lineNumber":64,"author":{"gitId":"Arif-Khalid"},"content":"                    break;","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"Arif-Khalid"},"content":"                case UNMARK_TASK_COMMAND:","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"Arif-Khalid"},"content":"                    taskList.changeTaskStatus(command.getAdditionalParameters(), false);","lastModifiedDate":"2023-02-22"},{"lineNumber":67,"author":{"gitId":"Arif-Khalid"},"content":"                    Storage.storeTaskData(taskDataFile, taskList.getTaskArrayList());","lastModifiedDate":"2023-02-22"},{"lineNumber":68,"author":{"gitId":"Arif-Khalid"},"content":"                    break;","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"Arif-Khalid"},"content":"                case DELETE_TASK_COMMAND:","lastModifiedDate":"2023-02-15"},{"lineNumber":70,"author":{"gitId":"Arif-Khalid"},"content":"                    taskList.deleteTask(command.getAdditionalParameters());","lastModifiedDate":"2023-02-22"},{"lineNumber":71,"author":{"gitId":"Arif-Khalid"},"content":"                    Storage.storeTaskData(taskDataFile, taskList.getTaskArrayList());","lastModifiedDate":"2023-02-22"},{"lineNumber":72,"author":{"gitId":"Arif-Khalid"},"content":"                    break;","lastModifiedDate":"2023-02-15"},{"lineNumber":73,"author":{"gitId":"Arif-Khalid"},"content":"                case FIND_TASK_COMMAND:","lastModifiedDate":"2023-02-23"},{"lineNumber":74,"author":{"gitId":"Arif-Khalid"},"content":"                    UI.printTaskList(taskList.tasksWithKeyword(command.getAdditionalParameters()[0]),","lastModifiedDate":"2023-02-23"},{"lineNumber":75,"author":{"gitId":"Arif-Khalid"},"content":"                            \"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-02-23"},{"lineNumber":76,"author":{"gitId":"Arif-Khalid"},"content":"                    break;","lastModifiedDate":"2023-02-23"},{"lineNumber":77,"author":{"gitId":"Arif-Khalid"},"content":"                case END_PROGRAM_COMMAND:","lastModifiedDate":"2023-02-01"},{"lineNumber":78,"author":{"gitId":"Arif-Khalid"},"content":"                    UI.printFarewell();","lastModifiedDate":"2023-02-22"},{"lineNumber":79,"author":{"gitId":"Arif-Khalid"},"content":"                    isProgramRunning \u003d false;","lastModifiedDate":"2023-02-01"},{"lineNumber":80,"author":{"gitId":"Arif-Khalid"},"content":"                    break;","lastModifiedDate":"2023-02-01"},{"lineNumber":81,"author":{"gitId":"Arif-Khalid"},"content":"                case UNKNOWN_COMMAND:","lastModifiedDate":"2023-02-01"},{"lineNumber":82,"author":{"gitId":"Arif-Khalid"},"content":"                default:","lastModifiedDate":"2023-02-03"},{"lineNumber":83,"author":{"gitId":"Arif-Khalid"},"content":"                    UI.printToUser(\"Unknown task or task parameters received. Please try again.\");","lastModifiedDate":"2023-02-22"},{"lineNumber":84,"author":{"gitId":"Arif-Khalid"},"content":"                    break;","lastModifiedDate":"2023-02-01"},{"lineNumber":85,"author":{"gitId":"Arif-Khalid"},"content":"                }","lastModifiedDate":"2023-01-25"},{"lineNumber":86,"author":{"gitId":"Arif-Khalid"},"content":"            }catch (DukeException e){","lastModifiedDate":"2023-02-08"},{"lineNumber":87,"author":{"gitId":"Arif-Khalid"},"content":"                UI.printToUser(e.getMessage());","lastModifiedDate":"2023-02-22"},{"lineNumber":88,"author":{"gitId":"Arif-Khalid"},"content":"            }catch (IOException e){","lastModifiedDate":"2023-02-15"},{"lineNumber":89,"author":{"gitId":"Arif-Khalid"},"content":"                UI.printToUser(\"An error occurred while storing your task data: \" + e.getMessage());","lastModifiedDate":"2023-02-22"},{"lineNumber":90,"author":{"gitId":"Arif-Khalid"},"content":"                UI.printToUser(\"Your data will not be saved\");","lastModifiedDate":"2023-02-22"},{"lineNumber":91,"author":{"gitId":"Arif-Khalid"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":92,"author":{"gitId":"Arif-Khalid"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":93,"author":{"gitId":"Arif-Khalid"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Arif-Khalid":92,"-":2}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Arif-Khalid"},"content":"package duke.command;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"Arif-Khalid"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"Arif-Khalid"},"content":" * Class representing a command after it is parsed by the parser","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"Arif-Khalid"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"Arif-Khalid"},"content":"public class Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"Arif-Khalid"},"content":"    private CommandType commandType;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"Arif-Khalid"},"content":"    private String[] additionalParameters;","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"Arif-Khalid"},"content":"    public Command(CommandType commandType, String[] additionalParameters){","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Arif-Khalid"},"content":"        this.commandType \u003d commandType;","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"Arif-Khalid"},"content":"        this.additionalParameters \u003d additionalParameters;","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"Arif-Khalid"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"Arif-Khalid"},"content":"    public CommandType getCommandType() {","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"Arif-Khalid"},"content":"        return commandType;","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"Arif-Khalid"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"Arif-Khalid"},"content":"    public String[] getAdditionalParameters() {","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"Arif-Khalid"},"content":"        return additionalParameters;","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"Arif-Khalid"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"Arif-Khalid"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"Arif-Khalid":23}},{"path":"src/main/java/duke/command/CommandInputs.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Arif-Khalid"},"content":"package duke.command;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"Arif-Khalid"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Arif-Khalid"},"content":" * Class representing the commands typed by the user and understood by the program","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"Arif-Khalid"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Arif-Khalid"},"content":"public class CommandInputs {","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"Arif-Khalid"},"content":"    public static final String ADD_TODO_COMMAND_INPUT \u003d \"todo\";","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"Arif-Khalid"},"content":"    public static final String ADD_DEADLINE_COMMAND_INPUT \u003d \"deadline\";","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"Arif-Khalid"},"content":"    public static final String ADD_DEADLINE_BY_COMMAND_INPUT \u003d \"/by\";","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"Arif-Khalid"},"content":"    public static final String ADD_EVENT_COMMAND_INPUT \u003d \"event\";","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"Arif-Khalid"},"content":"    public static final String ADD_EVENT_FROM_COMMAND_INPUT \u003d \"/from\";","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"Arif-Khalid"},"content":"    public static final String ADD_EVENT_TO_COMMAND_INPUT \u003d \"/to\";","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"Arif-Khalid"},"content":"    public static final String LIST_TASKS_COMMAND_INPUT \u003d \"list\";","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"Arif-Khalid"},"content":"    public static final String MARK_COMMAND_INPUT \u003d \"mark\";","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"Arif-Khalid"},"content":"    public static final String UNMARK_COMMAND_INPUT \u003d \"unmark\";","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"Arif-Khalid"},"content":"    public static final String DELETE_COMMAND_INPUT \u003d \"delete\";","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"Arif-Khalid"},"content":"    public static final String FIND_COMMAND_INPUT \u003d \"find\";","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"Arif-Khalid"},"content":"    public static final String END_PROGRAM_COMMAND_INPUT \u003d \"bye\";","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"Arif-Khalid"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"Arif-Khalid":19}},{"path":"src/main/java/duke/command/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Arif-Khalid"},"content":"package duke.command;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"Arif-Khalid"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Arif-Khalid"},"content":" * Enum representing the command type of the parsed command","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"Arif-Khalid"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Arif-Khalid"},"content":"public enum CommandType {","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"Arif-Khalid"},"content":"    ADD_TODO_COMMAND,","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"Arif-Khalid"},"content":"    ADD_DEADLINE_COMMAND,","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"Arif-Khalid"},"content":"    ADD_EVENT_COMMAND,","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"Arif-Khalid"},"content":"    LIST_TASKS_COMMAND,","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"Arif-Khalid"},"content":"    MARK_TASK_COMMAND,","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"Arif-Khalid"},"content":"    UNMARK_TASK_COMMAND,","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"Arif-Khalid"},"content":"    END_PROGRAM_COMMAND,","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"Arif-Khalid"},"content":"    DELETE_TASK_COMMAND,","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"Arif-Khalid"},"content":"    FIND_TASK_COMMAND,","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"Arif-Khalid"},"content":"    UNKNOWN_COMMAND","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"Arif-Khalid"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"Arif-Khalid":17}},{"path":"src/main/java/duke/exception/DeadlineParameterException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Arif-Khalid"},"content":"package duke.exception;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"Arif-Khalid"},"content":"import duke.command.CommandInputs;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"Arif-Khalid"},"content":"public class DeadlineParameterException extends TaskParameterException {","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"Arif-Khalid"},"content":"    public DeadlineParameterException(){","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"Arif-Khalid"},"content":"        super(CommandInputs.ADD_DEADLINE_COMMAND_INPUT, \"Please input the dates in the format /by \u003cdate\u003e\");","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"Arif-Khalid"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"Arif-Khalid"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"Arif-Khalid":9}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Arif-Khalid"},"content":"package duke.exception;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"Arif-Khalid"},"content":"public abstract class DukeException extends Exception{","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"Arif-Khalid"},"content":"    DukeException(String message){","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"Arif-Khalid"},"content":"        super(message);","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"Arif-Khalid"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"Arif-Khalid"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"Arif-Khalid":7}},{"path":"src/main/java/duke/exception/EventParameterException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Arif-Khalid"},"content":"package duke.exception;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"Arif-Khalid"},"content":"import duke.command.CommandInputs;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"Arif-Khalid"},"content":"public class EventParameterException extends TaskParameterException{","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"Arif-Khalid"},"content":"    public EventParameterException(){","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"Arif-Khalid"},"content":"        super(CommandInputs.ADD_EVENT_COMMAND_INPUT,\"Please input the dates in the format /from \u003cdate\u003e /to \u003cdate\u003e\");","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"Arif-Khalid"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"Arif-Khalid"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"Arif-Khalid":9}},{"path":"src/main/java/duke/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Arif-Khalid"},"content":"package duke.exception;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"Arif-Khalid"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"Arif-Khalid"},"content":"public class InvalidCommandException extends DukeException {","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Arif-Khalid"},"content":"    public InvalidCommandException(){","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"Arif-Khalid"},"content":"        super(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"Arif-Khalid"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Arif-Khalid"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"Arif-Khalid":9}},{"path":"src/main/java/duke/exception/TaskDateFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Arif-Khalid"},"content":"package duke.exception;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"Arif-Khalid"},"content":"import duke.exception.TaskParameterException;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"Arif-Khalid"},"content":"public class TaskDateFormatException extends TaskParameterException {","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"Arif-Khalid"},"content":"    public TaskDateFormatException(String taskName){","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"Arif-Khalid"},"content":"        super(taskName, \"Please input the date in the format yyyy-mm-dd.\");","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"Arif-Khalid"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"Arif-Khalid"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"Arif-Khalid":9}},{"path":"src/main/java/duke/exception/TaskDateOrderException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Arif-Khalid"},"content":"package duke.exception;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"Arif-Khalid"},"content":"import duke.exception.TaskParameterException;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"Arif-Khalid"},"content":"public class TaskDateOrderException extends TaskParameterException {","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"Arif-Khalid"},"content":"    public TaskDateOrderException(String taskName){","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"Arif-Khalid"},"content":"        super(taskName, \"You have inputted the dates in an impossible order.\");","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"Arif-Khalid"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"Arif-Khalid"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"Arif-Khalid":9}},{"path":"src/main/java/duke/exception/TaskNameException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Arif-Khalid"},"content":"package duke.exception;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"Arif-Khalid"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"Arif-Khalid"},"content":"public class TaskNameException extends DukeException {","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Arif-Khalid"},"content":"    public TaskNameException(String taskName){","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"Arif-Khalid"},"content":"        super(\"OOPS!!! The description of a \" + taskName + \" cannot be empty.\");","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"Arif-Khalid"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Arif-Khalid"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"Arif-Khalid":9}},{"path":"src/main/java/duke/exception/TaskNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Arif-Khalid"},"content":"package duke.exception;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"Arif-Khalid"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"Arif-Khalid"},"content":"public class TaskNumberException extends DukeException {","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Arif-Khalid"},"content":"    public TaskNumberException(){","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"Arif-Khalid"},"content":"        super(\"OOPS!!! Please input a single valid task number.\");","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"Arif-Khalid"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Arif-Khalid"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"Arif-Khalid":9}},{"path":"src/main/java/duke/exception/TaskParameterException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Arif-Khalid"},"content":"package duke.exception;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"Arif-Khalid"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"Arif-Khalid"},"content":"public class TaskParameterException extends DukeException {","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Arif-Khalid"},"content":"    public TaskParameterException(String taskName, String additionalMessage){","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"Arif-Khalid"},"content":"        super(\"OOPS!!! There is an invalid input of the parameters for \" + taskName + \".\\n\" +","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"Arif-Khalid"},"content":"                additionalMessage);","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Arif-Khalid"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Arif-Khalid"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"Arif-Khalid":10}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Arif-Khalid"},"content":"package duke.parser;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"Arif-Khalid"},"content":"import duke.command.Command;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Arif-Khalid"},"content":"import duke.command.CommandInputs;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"Arif-Khalid"},"content":"import duke.command.CommandType;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Arif-Khalid"},"content":"import duke.exception.*;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"Arif-Khalid"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"Arif-Khalid"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"Arif-Khalid"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"Arif-Khalid"},"content":" * Class that parses user input into commands","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"Arif-Khalid"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"Arif-Khalid"},"content":"public class Parser {","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"Arif-Khalid"},"content":"    public static final DateTimeFormatter storedDateFormat \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"Arif-Khalid"},"content":"    public static final DateTimeFormatter inputDateFormat \u003d DateTimeFormatter.ISO_LOCAL_DATE;","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"Arif-Khalid"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"Arif-Khalid"},"content":"     * Returns the parsed command from the user input","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"Arif-Khalid"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"Arif-Khalid"},"content":"     * @param userInput The user\u0027s input","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"Arif-Khalid"},"content":"     * @return Parsed command","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"Arif-Khalid"},"content":"     * @throws DukeException if the user input is invalid","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"Arif-Khalid"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"Arif-Khalid"},"content":"    public static Command parseCommand(String userInput) throws DukeException{","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"Arif-Khalid"},"content":"        String firstWordOfInput \u003d userInput.split(\" \")[0];","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"Arif-Khalid"},"content":"        CommandType commandType;","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"Arif-Khalid"},"content":"        String[] additionalParameters \u003d null;","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"Arif-Khalid"},"content":"        switch (firstWordOfInput) {","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"Arif-Khalid"},"content":"        case CommandInputs.ADD_TODO_COMMAND_INPUT:","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"Arif-Khalid"},"content":"            commandType \u003d CommandType.ADD_TODO_COMMAND;","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"Arif-Khalid"},"content":"            additionalParameters \u003d getTaskNameParameter(userInput, CommandInputs.ADD_TODO_COMMAND_INPUT);","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"Arif-Khalid"},"content":"            break;","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"Arif-Khalid"},"content":"        case CommandInputs.ADD_DEADLINE_COMMAND_INPUT:","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"Arif-Khalid"},"content":"            commandType \u003d CommandType.ADD_DEADLINE_COMMAND;","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"Arif-Khalid"},"content":"            additionalParameters \u003d getDeadlineAdditionalParameters(userInput);","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"Arif-Khalid"},"content":"            break;","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"Arif-Khalid"},"content":"        case CommandInputs.ADD_EVENT_COMMAND_INPUT:","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"Arif-Khalid"},"content":"            commandType \u003d CommandType.ADD_EVENT_COMMAND;","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"Arif-Khalid"},"content":"            additionalParameters \u003d getEventAdditionalParameters(userInput);","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"Arif-Khalid"},"content":"            break;","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"Arif-Khalid"},"content":"        case CommandInputs.LIST_TASKS_COMMAND_INPUT:","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"Arif-Khalid"},"content":"            commandType \u003d CommandType.LIST_TASKS_COMMAND;","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"Arif-Khalid"},"content":"            break;","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"Arif-Khalid"},"content":"        case CommandInputs.MARK_COMMAND_INPUT:","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"Arif-Khalid"},"content":"            commandType \u003d CommandType.MARK_TASK_COMMAND;","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"Arif-Khalid"},"content":"            additionalParameters \u003d getTaskNumbers(userInput);","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"Arif-Khalid"},"content":"            break;","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"Arif-Khalid"},"content":"        case CommandInputs.UNMARK_COMMAND_INPUT:","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"Arif-Khalid"},"content":"            commandType \u003d CommandType.UNMARK_TASK_COMMAND;","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"Arif-Khalid"},"content":"            additionalParameters \u003d getTaskNumbers(userInput);","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"Arif-Khalid"},"content":"            break;","lastModifiedDate":"2023-02-15"},{"lineNumber":54,"author":{"gitId":"Arif-Khalid"},"content":"        case CommandInputs.DELETE_COMMAND_INPUT:","lastModifiedDate":"2023-02-15"},{"lineNumber":55,"author":{"gitId":"Arif-Khalid"},"content":"            commandType \u003d CommandType.DELETE_TASK_COMMAND;","lastModifiedDate":"2023-02-15"},{"lineNumber":56,"author":{"gitId":"Arif-Khalid"},"content":"            additionalParameters \u003d getTaskNumbers(userInput);","lastModifiedDate":"2023-02-15"},{"lineNumber":57,"author":{"gitId":"Arif-Khalid"},"content":"            break;","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"Arif-Khalid"},"content":"        case CommandInputs.FIND_COMMAND_INPUT:","lastModifiedDate":"2023-02-23"},{"lineNumber":59,"author":{"gitId":"Arif-Khalid"},"content":"            commandType \u003d CommandType.FIND_TASK_COMMAND;","lastModifiedDate":"2023-02-23"},{"lineNumber":60,"author":{"gitId":"Arif-Khalid"},"content":"            additionalParameters \u003d getTaskNameParameter(userInput, CommandInputs.FIND_COMMAND_INPUT);","lastModifiedDate":"2023-02-23"},{"lineNumber":61,"author":{"gitId":"Arif-Khalid"},"content":"            break;","lastModifiedDate":"2023-02-23"},{"lineNumber":62,"author":{"gitId":"Arif-Khalid"},"content":"        case CommandInputs.END_PROGRAM_COMMAND_INPUT:","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"Arif-Khalid"},"content":"            commandType \u003d CommandType.END_PROGRAM_COMMAND;","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"Arif-Khalid"},"content":"            break;","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"Arif-Khalid"},"content":"        default:","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"Arif-Khalid"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2023-02-08"},{"lineNumber":67,"author":{"gitId":"Arif-Khalid"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"Arif-Khalid"},"content":"        return new Command(commandType,additionalParameters);","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"Arif-Khalid"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":71,"author":{"gitId":"Arif-Khalid"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":72,"author":{"gitId":"Arif-Khalid"},"content":"     * Returns the string array of task numbers parsed from user input","lastModifiedDate":"2023-02-23"},{"lineNumber":73,"author":{"gitId":"Arif-Khalid"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":74,"author":{"gitId":"Arif-Khalid"},"content":"     * @param userInput The user\u0027s input","lastModifiedDate":"2023-02-23"},{"lineNumber":75,"author":{"gitId":"Arif-Khalid"},"content":"     * @return Task numbers stored as a string array","lastModifiedDate":"2023-02-23"},{"lineNumber":76,"author":{"gitId":"Arif-Khalid"},"content":"     * @throws DukeException if the task numbers are invalid","lastModifiedDate":"2023-02-23"},{"lineNumber":77,"author":{"gitId":"Arif-Khalid"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":78,"author":{"gitId":"Arif-Khalid"},"content":"    private static String[] getTaskNumbers(String userInput) throws DukeException{","lastModifiedDate":"2023-02-23"},{"lineNumber":79,"author":{"gitId":"Arif-Khalid"},"content":"        userInput \u003d userInput.trim();","lastModifiedDate":"2023-02-01"},{"lineNumber":80,"author":{"gitId":"Arif-Khalid"},"content":"        int indexOfFirstSpace \u003d userInput.indexOf(\" \");","lastModifiedDate":"2023-02-01"},{"lineNumber":81,"author":{"gitId":"Arif-Khalid"},"content":"        if(indexOfFirstSpace \u003d\u003d -1 || indexOfFirstSpace \u003d\u003d userInput.length() - 1){","lastModifiedDate":"2023-02-03"},{"lineNumber":82,"author":{"gitId":"Arif-Khalid"},"content":"            throw new TaskNumberException();","lastModifiedDate":"2023-02-08"},{"lineNumber":83,"author":{"gitId":"Arif-Khalid"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":84,"author":{"gitId":"Arif-Khalid"},"content":"        String[] taskNumbers \u003d userInput.substring(indexOfFirstSpace).trim().split(\" \");","lastModifiedDate":"2023-02-08"},{"lineNumber":85,"author":{"gitId":"Arif-Khalid"},"content":"        if(taskNumbers.length !\u003d 1){","lastModifiedDate":"2023-02-08"},{"lineNumber":86,"author":{"gitId":"Arif-Khalid"},"content":"            throw new TaskNumberException();","lastModifiedDate":"2023-02-08"},{"lineNumber":87,"author":{"gitId":"Arif-Khalid"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":88,"author":{"gitId":"Arif-Khalid"},"content":"        return taskNumbers;","lastModifiedDate":"2023-02-08"},{"lineNumber":89,"author":{"gitId":"Arif-Khalid"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":90,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":91,"author":{"gitId":"Arif-Khalid"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":92,"author":{"gitId":"Arif-Khalid"},"content":"     * Returns the additional parameters for a todo task parsed from user input","lastModifiedDate":"2023-02-23"},{"lineNumber":93,"author":{"gitId":"Arif-Khalid"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":94,"author":{"gitId":"Arif-Khalid"},"content":"     * @param userInput The user\u0027s input","lastModifiedDate":"2023-02-23"},{"lineNumber":95,"author":{"gitId":"Arif-Khalid"},"content":"     * @return additional parameters for todo class","lastModifiedDate":"2023-02-23"},{"lineNumber":96,"author":{"gitId":"Arif-Khalid"},"content":"     * @throws DukeException if the parameters are invalid","lastModifiedDate":"2023-02-23"},{"lineNumber":97,"author":{"gitId":"Arif-Khalid"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":98,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":99,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":100,"author":{"gitId":"Arif-Khalid"},"content":"    private static String[] getTaskNameParameter(String userInput, String commandName) throws DukeException{","lastModifiedDate":"2023-02-23"},{"lineNumber":101,"author":{"gitId":"Arif-Khalid"},"content":"        String[] additionalParameters \u003d new String[1];","lastModifiedDate":"2023-02-01"},{"lineNumber":102,"author":{"gitId":"Arif-Khalid"},"content":"        int indexOfFirstSpace \u003d userInput.indexOf(\" \");","lastModifiedDate":"2023-02-01"},{"lineNumber":103,"author":{"gitId":"Arif-Khalid"},"content":"        if(indexOfFirstSpace \u003d\u003d -1){","lastModifiedDate":"2023-02-01"},{"lineNumber":104,"author":{"gitId":"Arif-Khalid"},"content":"            throw new TaskNameException(commandName);","lastModifiedDate":"2023-02-23"},{"lineNumber":105,"author":{"gitId":"Arif-Khalid"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":106,"author":{"gitId":"Arif-Khalid"},"content":"        String name \u003d userInput.substring(indexOfFirstSpace).trim();","lastModifiedDate":"2023-02-01"},{"lineNumber":107,"author":{"gitId":"Arif-Khalid"},"content":"        if(!isNameValid(name)){","lastModifiedDate":"2023-02-01"},{"lineNumber":108,"author":{"gitId":"Arif-Khalid"},"content":"            throw new TaskNameException(commandName);","lastModifiedDate":"2023-02-23"},{"lineNumber":109,"author":{"gitId":"Arif-Khalid"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":110,"author":{"gitId":"Arif-Khalid"},"content":"        additionalParameters[0] \u003d name;","lastModifiedDate":"2023-02-01"},{"lineNumber":111,"author":{"gitId":"Arif-Khalid"},"content":"        return additionalParameters;","lastModifiedDate":"2023-02-01"},{"lineNumber":112,"author":{"gitId":"Arif-Khalid"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":113,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":114,"author":{"gitId":"Arif-Khalid"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":115,"author":{"gitId":"Arif-Khalid"},"content":"     * Returns the additional parameters for a deadline task parsed from user input","lastModifiedDate":"2023-02-23"},{"lineNumber":116,"author":{"gitId":"Arif-Khalid"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":117,"author":{"gitId":"Arif-Khalid"},"content":"     * @param userInput The user\u0027s input","lastModifiedDate":"2023-02-23"},{"lineNumber":118,"author":{"gitId":"Arif-Khalid"},"content":"     * @return additional parameters for deadline task","lastModifiedDate":"2023-02-23"},{"lineNumber":119,"author":{"gitId":"Arif-Khalid"},"content":"     * @throws DukeException if the parameters are invalid","lastModifiedDate":"2023-02-23"},{"lineNumber":120,"author":{"gitId":"Arif-Khalid"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":121,"author":{"gitId":"Arif-Khalid"},"content":"    private static String[] getDeadlineAdditionalParameters(String userInput) throws DukeException{","lastModifiedDate":"2023-02-23"},{"lineNumber":122,"author":{"gitId":"Arif-Khalid"},"content":"        int indexOfFirstSpace \u003d userInput.indexOf(\" \");","lastModifiedDate":"2023-02-01"},{"lineNumber":123,"author":{"gitId":"Arif-Khalid"},"content":"        int indexOfBy \u003d  userInput.indexOf(CommandInputs.ADD_DEADLINE_BY_COMMAND_INPUT);","lastModifiedDate":"2023-02-01"},{"lineNumber":124,"author":{"gitId":"Arif-Khalid"},"content":"        if(indexOfFirstSpace \u003d\u003d -1){","lastModifiedDate":"2023-02-08"},{"lineNumber":125,"author":{"gitId":"Arif-Khalid"},"content":"            throw new TaskNameException(CommandInputs.ADD_DEADLINE_COMMAND_INPUT);","lastModifiedDate":"2023-02-08"},{"lineNumber":126,"author":{"gitId":"Arif-Khalid"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":127,"author":{"gitId":"Arif-Khalid"},"content":"        if(indexOfBy \u003d\u003d -1 || indexOfBy \u003c indexOfFirstSpace){","lastModifiedDate":"2023-02-08"},{"lineNumber":128,"author":{"gitId":"Arif-Khalid"},"content":"            throw new DeadlineParameterException();","lastModifiedDate":"2023-02-23"},{"lineNumber":129,"author":{"gitId":"Arif-Khalid"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":130,"author":{"gitId":"Arif-Khalid"},"content":"        String name \u003d userInput.substring(indexOfFirstSpace,indexOfBy).trim();","lastModifiedDate":"2023-02-01"},{"lineNumber":131,"author":{"gitId":"Arif-Khalid"},"content":"        String by \u003d userInput.substring(indexOfBy + CommandInputs.ADD_DEADLINE_BY_COMMAND_INPUT.length()).trim();","lastModifiedDate":"2023-02-01"},{"lineNumber":132,"author":{"gitId":"Arif-Khalid"},"content":"        String[] additionalParameters \u003d new String[2];","lastModifiedDate":"2023-02-01"},{"lineNumber":133,"author":{"gitId":"Arif-Khalid"},"content":"        if(!isNameValid(name)){","lastModifiedDate":"2023-02-08"},{"lineNumber":134,"author":{"gitId":"Arif-Khalid"},"content":"            throw new TaskNameException(CommandInputs.ADD_DEADLINE_COMMAND_INPUT);","lastModifiedDate":"2023-02-08"},{"lineNumber":135,"author":{"gitId":"Arif-Khalid"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":136,"author":{"gitId":"Arif-Khalid"},"content":"        if(!isDateValid(by)){","lastModifiedDate":"2023-02-08"},{"lineNumber":137,"author":{"gitId":"Arif-Khalid"},"content":"            throw new TaskDateFormatException(CommandInputs.ADD_DEADLINE_COMMAND_INPUT);","lastModifiedDate":"2023-02-23"},{"lineNumber":138,"author":{"gitId":"Arif-Khalid"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":139,"author":{"gitId":"Arif-Khalid"},"content":"        // Parse with same formatter as when stored, since the same function is used to parse stored data as user input","lastModifiedDate":"2023-02-23"},{"lineNumber":140,"author":{"gitId":"Arif-Khalid"},"content":"        LocalDate byLocalDate \u003d LocalDate.parse(by, inputDateFormat);","lastModifiedDate":"2023-02-23"},{"lineNumber":141,"author":{"gitId":"Arif-Khalid"},"content":"        additionalParameters[0] \u003d name;","lastModifiedDate":"2023-02-01"},{"lineNumber":142,"author":{"gitId":"Arif-Khalid"},"content":"        additionalParameters[1] \u003d byLocalDate.format(storedDateFormat);","lastModifiedDate":"2023-02-23"},{"lineNumber":143,"author":{"gitId":"Arif-Khalid"},"content":"        return additionalParameters;","lastModifiedDate":"2023-02-01"},{"lineNumber":144,"author":{"gitId":"Arif-Khalid"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":145,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":146,"author":{"gitId":"Arif-Khalid"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":147,"author":{"gitId":"Arif-Khalid"},"content":"     * Returns the additional parameters for an event task parsed from user input","lastModifiedDate":"2023-02-23"},{"lineNumber":148,"author":{"gitId":"Arif-Khalid"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":149,"author":{"gitId":"Arif-Khalid"},"content":"     * @param userInput The user\u0027s input","lastModifiedDate":"2023-02-23"},{"lineNumber":150,"author":{"gitId":"Arif-Khalid"},"content":"     * @return additional parameters for an event task","lastModifiedDate":"2023-02-23"},{"lineNumber":151,"author":{"gitId":"Arif-Khalid"},"content":"     * @throws DukeException if the parameters are invalid","lastModifiedDate":"2023-02-23"},{"lineNumber":152,"author":{"gitId":"Arif-Khalid"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":153,"author":{"gitId":"Arif-Khalid"},"content":"    private static String[] getEventAdditionalParameters(String userInput) throws DukeException{","lastModifiedDate":"2023-02-23"},{"lineNumber":154,"author":{"gitId":"Arif-Khalid"},"content":"        int indexOfFirstSpace \u003d userInput.indexOf(\" \");","lastModifiedDate":"2023-02-01"},{"lineNumber":155,"author":{"gitId":"Arif-Khalid"},"content":"        int indexOfFrom \u003d userInput.indexOf(CommandInputs.ADD_EVENT_FROM_COMMAND_INPUT);","lastModifiedDate":"2023-02-01"},{"lineNumber":156,"author":{"gitId":"Arif-Khalid"},"content":"        int indexOfTo \u003d userInput.indexOf(CommandInputs.ADD_EVENT_TO_COMMAND_INPUT);","lastModifiedDate":"2023-02-01"},{"lineNumber":157,"author":{"gitId":"Arif-Khalid"},"content":"        if(indexOfFirstSpace \u003d\u003d -1){","lastModifiedDate":"2023-02-08"},{"lineNumber":158,"author":{"gitId":"Arif-Khalid"},"content":"            throw new TaskNameException(CommandInputs.ADD_EVENT_COMMAND_INPUT);","lastModifiedDate":"2023-02-08"},{"lineNumber":159,"author":{"gitId":"Arif-Khalid"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":160,"author":{"gitId":"Arif-Khalid"},"content":"        if(indexOfFrom \u003d\u003d -1 || indexOfTo \u003d\u003d -1 || indexOfFrom \u003c indexOfFirstSpace || indexOfTo \u003c indexOfFirstSpace){","lastModifiedDate":"2023-02-08"},{"lineNumber":161,"author":{"gitId":"Arif-Khalid"},"content":"            throw new EventParameterException();","lastModifiedDate":"2023-02-23"},{"lineNumber":162,"author":{"gitId":"Arif-Khalid"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":163,"author":{"gitId":"Arif-Khalid"},"content":"        String[] additionalParameters \u003d new String[3];","lastModifiedDate":"2023-02-03"},{"lineNumber":164,"author":{"gitId":"Arif-Khalid"},"content":"        String name;","lastModifiedDate":"2023-02-01"},{"lineNumber":165,"author":{"gitId":"Arif-Khalid"},"content":"        String from;","lastModifiedDate":"2023-02-01"},{"lineNumber":166,"author":{"gitId":"Arif-Khalid"},"content":"        String to;","lastModifiedDate":"2023-02-01"},{"lineNumber":167,"author":{"gitId":"Arif-Khalid"},"content":"        if(indexOfFrom \u003c indexOfTo){","lastModifiedDate":"2023-02-01"},{"lineNumber":168,"author":{"gitId":"Arif-Khalid"},"content":"            name \u003d userInput.substring(indexOfFirstSpace,indexOfFrom).trim();","lastModifiedDate":"2023-02-01"},{"lineNumber":169,"author":{"gitId":"Arif-Khalid"},"content":"            from \u003d userInput.substring(indexOfFrom + CommandInputs.ADD_EVENT_FROM_COMMAND_INPUT.length(), indexOfTo).trim();","lastModifiedDate":"2023-02-01"},{"lineNumber":170,"author":{"gitId":"Arif-Khalid"},"content":"            to \u003d userInput.substring(indexOfTo + CommandInputs.ADD_EVENT_TO_COMMAND_INPUT.length()).trim();","lastModifiedDate":"2023-02-01"},{"lineNumber":171,"author":{"gitId":"Arif-Khalid"},"content":"        }else{","lastModifiedDate":"2023-02-03"},{"lineNumber":172,"author":{"gitId":"Arif-Khalid"},"content":"            name \u003d userInput.substring(indexOfFirstSpace,indexOfTo).trim();","lastModifiedDate":"2023-02-01"},{"lineNumber":173,"author":{"gitId":"Arif-Khalid"},"content":"            from \u003d userInput.substring(indexOfFrom + CommandInputs.ADD_EVENT_FROM_COMMAND_INPUT.length()).trim();","lastModifiedDate":"2023-02-01"},{"lineNumber":174,"author":{"gitId":"Arif-Khalid"},"content":"            to \u003d userInput.substring(indexOfTo + CommandInputs.ADD_EVENT_TO_COMMAND_INPUT.length(), indexOfFrom).trim();","lastModifiedDate":"2023-02-01"},{"lineNumber":175,"author":{"gitId":"Arif-Khalid"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":176,"author":{"gitId":"Arif-Khalid"},"content":"        if(!isNameValid(name)){","lastModifiedDate":"2023-02-08"},{"lineNumber":177,"author":{"gitId":"Arif-Khalid"},"content":"            throw new TaskNameException(CommandInputs.ADD_EVENT_COMMAND_INPUT);","lastModifiedDate":"2023-02-08"},{"lineNumber":178,"author":{"gitId":"Arif-Khalid"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":179,"author":{"gitId":"Arif-Khalid"},"content":"        if(!isDateValid(from) || !isNameValid(to)){","lastModifiedDate":"2023-02-08"},{"lineNumber":180,"author":{"gitId":"Arif-Khalid"},"content":"            throw new TaskDateFormatException(CommandInputs.ADD_EVENT_COMMAND_INPUT);","lastModifiedDate":"2023-02-23"},{"lineNumber":181,"author":{"gitId":"Arif-Khalid"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":182,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":183,"author":{"gitId":"Arif-Khalid"},"content":"        // Parse with the same formatter as when stored, since same function is used to parse stored data as user input","lastModifiedDate":"2023-02-23"},{"lineNumber":184,"author":{"gitId":"Arif-Khalid"},"content":"        LocalDate fromLocalDate \u003d LocalDate.parse(from, inputDateFormat);","lastModifiedDate":"2023-02-23"},{"lineNumber":185,"author":{"gitId":"Arif-Khalid"},"content":"        LocalDate toLocalDate \u003d LocalDate.parse(to, inputDateFormat);","lastModifiedDate":"2023-02-23"},{"lineNumber":186,"author":{"gitId":"Arif-Khalid"},"content":"        if(toLocalDate.isBefore(fromLocalDate)){","lastModifiedDate":"2023-02-23"},{"lineNumber":187,"author":{"gitId":"Arif-Khalid"},"content":"            throw new TaskDateOrderException(CommandInputs.ADD_EVENT_COMMAND_INPUT);","lastModifiedDate":"2023-02-23"},{"lineNumber":188,"author":{"gitId":"Arif-Khalid"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":189,"author":{"gitId":"Arif-Khalid"},"content":"        additionalParameters[0] \u003d name;","lastModifiedDate":"2023-02-03"},{"lineNumber":190,"author":{"gitId":"Arif-Khalid"},"content":"        additionalParameters[1] \u003d fromLocalDate.format(storedDateFormat);","lastModifiedDate":"2023-02-23"},{"lineNumber":191,"author":{"gitId":"Arif-Khalid"},"content":"        additionalParameters[2] \u003d toLocalDate.format(storedDateFormat);","lastModifiedDate":"2023-02-23"},{"lineNumber":192,"author":{"gitId":"Arif-Khalid"},"content":"        return additionalParameters;","lastModifiedDate":"2023-02-03"},{"lineNumber":193,"author":{"gitId":"Arif-Khalid"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":194,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":195,"author":{"gitId":"Arif-Khalid"},"content":"    private static boolean isNameValid(String name){","lastModifiedDate":"2023-02-23"},{"lineNumber":196,"author":{"gitId":"Arif-Khalid"},"content":"        return !name.isEmpty();","lastModifiedDate":"2023-02-01"},{"lineNumber":197,"author":{"gitId":"Arif-Khalid"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":198,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":199,"author":{"gitId":"Arif-Khalid"},"content":"    private static boolean isDateValid(String date){","lastModifiedDate":"2023-02-23"},{"lineNumber":200,"author":{"gitId":"Arif-Khalid"},"content":"        if(date.isEmpty()){","lastModifiedDate":"2023-02-23"},{"lineNumber":201,"author":{"gitId":"Arif-Khalid"},"content":"            return false;","lastModifiedDate":"2023-02-23"},{"lineNumber":202,"author":{"gitId":"Arif-Khalid"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":203,"author":{"gitId":"Arif-Khalid"},"content":"        try{","lastModifiedDate":"2023-02-23"},{"lineNumber":204,"author":{"gitId":"Arif-Khalid"},"content":"            String[] dateParameters \u003d date.split(\"-\");","lastModifiedDate":"2023-02-23"},{"lineNumber":205,"author":{"gitId":"Arif-Khalid"},"content":"            // Check if date can be parsed","lastModifiedDate":"2023-02-23"},{"lineNumber":206,"author":{"gitId":"Arif-Khalid"},"content":"            LocalDate.parse(date, inputDateFormat);","lastModifiedDate":"2023-02-23"},{"lineNumber":207,"author":{"gitId":"Arif-Khalid"},"content":"        }catch (Exception e){","lastModifiedDate":"2023-02-23"},{"lineNumber":208,"author":{"gitId":"Arif-Khalid"},"content":"            return false;","lastModifiedDate":"2023-02-23"},{"lineNumber":209,"author":{"gitId":"Arif-Khalid"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":210,"author":{"gitId":"Arif-Khalid"},"content":"        return true;","lastModifiedDate":"2023-02-23"},{"lineNumber":211,"author":{"gitId":"Arif-Khalid"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":212,"author":{"gitId":"Arif-Khalid"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"Arif-Khalid":212}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Arif-Khalid"},"content":"package duke.storage;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"Arif-Khalid"},"content":"import java.io.File;","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"Arif-Khalid"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"Arif-Khalid"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"Arif-Khalid"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"Arif-Khalid"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"Arif-Khalid"},"content":"import duke.command.CommandInputs;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Arif-Khalid"},"content":"import duke.task.*;","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"Arif-Khalid"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"Arif-Khalid"},"content":" * Class that handles storing and retrieving task data from local storage","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"Arif-Khalid"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"Arif-Khalid"},"content":"public class Storage {","lastModifiedDate":"2023-02-22"},{"lineNumber":16,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"Arif-Khalid"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"Arif-Khalid"},"content":"     * Stores task data into the task data file","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"Arif-Khalid"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"Arif-Khalid"},"content":"     * @param taskDataFile The data file in which to store task data","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"Arif-Khalid"},"content":"     * @param tasks The array list of tasks","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"Arif-Khalid"},"content":"     * @throws IOException if there was an error initialising the file or storing the data in the file","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"Arif-Khalid"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"Arif-Khalid"},"content":"    public static void storeTaskData(File taskDataFile, ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2023-02-15"},{"lineNumber":25,"author":{"gitId":"Arif-Khalid"},"content":"        FileWriter fileWriter \u003d new FileWriter(taskDataFile);","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"Arif-Khalid"},"content":"        if(!taskDataFile.exists()){","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"Arif-Khalid"},"content":"            taskDataFile.createNewFile();","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"Arif-Khalid"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"Arif-Khalid"},"content":"        for(Task task : tasks){","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"Arif-Khalid"},"content":"            switch (task.getTaskType()){","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"Arif-Khalid"},"content":"            case TODO:","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"Arif-Khalid"},"content":"                fileWriter.write(encodeTaskNameAndStatus(task, CommandInputs.ADD_TODO_COMMAND_INPUT) + System.lineSeparator());","lastModifiedDate":"2023-02-15"},{"lineNumber":33,"author":{"gitId":"Arif-Khalid"},"content":"                break;","lastModifiedDate":"2023-02-15"},{"lineNumber":34,"author":{"gitId":"Arif-Khalid"},"content":"            case DEADLINE:","lastModifiedDate":"2023-02-15"},{"lineNumber":35,"author":{"gitId":"Arif-Khalid"},"content":"                fileWriter.write(encodeDeadlineData((Deadline)task) + System.lineSeparator());","lastModifiedDate":"2023-02-15"},{"lineNumber":36,"author":{"gitId":"Arif-Khalid"},"content":"                break;","lastModifiedDate":"2023-02-15"},{"lineNumber":37,"author":{"gitId":"Arif-Khalid"},"content":"            case EVENT:","lastModifiedDate":"2023-02-15"},{"lineNumber":38,"author":{"gitId":"Arif-Khalid"},"content":"                fileWriter.write(encodeEventData((Event)task) + System.lineSeparator());","lastModifiedDate":"2023-02-15"},{"lineNumber":39,"author":{"gitId":"Arif-Khalid"},"content":"                break;","lastModifiedDate":"2023-02-15"},{"lineNumber":40,"author":{"gitId":"Arif-Khalid"},"content":"            default:","lastModifiedDate":"2023-02-15"},{"lineNumber":41,"author":{"gitId":"Arif-Khalid"},"content":"                // throw some error","lastModifiedDate":"2023-02-15"},{"lineNumber":42,"author":{"gitId":"Arif-Khalid"},"content":"                break;","lastModifiedDate":"2023-02-15"},{"lineNumber":43,"author":{"gitId":"Arif-Khalid"},"content":"            }","lastModifiedDate":"2023-02-15"},{"lineNumber":44,"author":{"gitId":"Arif-Khalid"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":45,"author":{"gitId":"Arif-Khalid"},"content":"        fileWriter.close();","lastModifiedDate":"2023-02-15"},{"lineNumber":46,"author":{"gitId":"Arif-Khalid"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":47,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":48,"author":{"gitId":"Arif-Khalid"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":49,"author":{"gitId":"Arif-Khalid"},"content":"     * Retrieves task data into an array list of task","lastModifiedDate":"2023-02-23"},{"lineNumber":50,"author":{"gitId":"Arif-Khalid"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":51,"author":{"gitId":"Arif-Khalid"},"content":"     * @param taskDataFile The task data file to retrieve data from","lastModifiedDate":"2023-02-23"},{"lineNumber":52,"author":{"gitId":"Arif-Khalid"},"content":"     * @return An array list of tasks","lastModifiedDate":"2023-02-23"},{"lineNumber":53,"author":{"gitId":"Arif-Khalid"},"content":"     * @throws Exception if there was an error creating or retrieving data from the task data file","lastModifiedDate":"2023-02-23"},{"lineNumber":54,"author":{"gitId":"Arif-Khalid"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":55,"author":{"gitId":"Arif-Khalid"},"content":"    public static ArrayList\u003cTask\u003e retrieveTaskData(File taskDataFile) throws Exception{","lastModifiedDate":"2023-02-15"},{"lineNumber":56,"author":{"gitId":"Arif-Khalid"},"content":"        if(!taskDataFile.exists()){","lastModifiedDate":"2023-02-15"},{"lineNumber":57,"author":{"gitId":"Arif-Khalid"},"content":"            taskDataFile.createNewFile();","lastModifiedDate":"2023-02-15"},{"lineNumber":58,"author":{"gitId":"Arif-Khalid"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":59,"author":{"gitId":"Arif-Khalid"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-15"},{"lineNumber":60,"author":{"gitId":"Arif-Khalid"},"content":"        Scanner scanner \u003d new Scanner(taskDataFile);","lastModifiedDate":"2023-02-15"},{"lineNumber":61,"author":{"gitId":"Arif-Khalid"},"content":"        while(scanner.hasNext()){","lastModifiedDate":"2023-02-15"},{"lineNumber":62,"author":{"gitId":"Arif-Khalid"},"content":"            Task newTask \u003d decodeTask(scanner.nextLine());","lastModifiedDate":"2023-02-15"},{"lineNumber":63,"author":{"gitId":"Arif-Khalid"},"content":"            tasks.add(newTask);","lastModifiedDate":"2023-02-15"},{"lineNumber":64,"author":{"gitId":"Arif-Khalid"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":65,"author":{"gitId":"Arif-Khalid"},"content":"        return tasks;","lastModifiedDate":"2023-02-15"},{"lineNumber":66,"author":{"gitId":"Arif-Khalid"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":67,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":68,"author":{"gitId":"Arif-Khalid"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":69,"author":{"gitId":"Arif-Khalid"},"content":"     * Decodes the task data stored as a string into an appropriate task object","lastModifiedDate":"2023-02-23"},{"lineNumber":70,"author":{"gitId":"Arif-Khalid"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":71,"author":{"gitId":"Arif-Khalid"},"content":"     * @param encodedTask The task data as a string","lastModifiedDate":"2023-02-23"},{"lineNumber":72,"author":{"gitId":"Arif-Khalid"},"content":"     * @return The appropriate decoded task object","lastModifiedDate":"2023-02-23"},{"lineNumber":73,"author":{"gitId":"Arif-Khalid"},"content":"     * @throws Exception if encoded task is invalid","lastModifiedDate":"2023-02-23"},{"lineNumber":74,"author":{"gitId":"Arif-Khalid"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":75,"author":{"gitId":"Arif-Khalid"},"content":"    private static Task decodeTask(String encodedTask) throws Exception{","lastModifiedDate":"2023-02-23"},{"lineNumber":76,"author":{"gitId":"Arif-Khalid"},"content":"        String[] taskParameters \u003d encodedTask.split(\"`\");","lastModifiedDate":"2023-02-15"},{"lineNumber":77,"author":{"gitId":"Arif-Khalid"},"content":"        String taskType \u003d taskParameters[0];","lastModifiedDate":"2023-02-15"},{"lineNumber":78,"author":{"gitId":"Arif-Khalid"},"content":"        boolean isDone \u003d taskParameters[1].equals(\"1\");","lastModifiedDate":"2023-02-15"},{"lineNumber":79,"author":{"gitId":"Arif-Khalid"},"content":"        String taskName \u003d taskParameters[2];","lastModifiedDate":"2023-02-15"},{"lineNumber":80,"author":{"gitId":"Arif-Khalid"},"content":"        Task decodedTask;","lastModifiedDate":"2023-02-15"},{"lineNumber":81,"author":{"gitId":"Arif-Khalid"},"content":"        switch(taskType){","lastModifiedDate":"2023-02-15"},{"lineNumber":82,"author":{"gitId":"Arif-Khalid"},"content":"        case CommandInputs.ADD_TODO_COMMAND_INPUT:","lastModifiedDate":"2023-02-15"},{"lineNumber":83,"author":{"gitId":"Arif-Khalid"},"content":"            decodedTask \u003d new ToDo(taskName);","lastModifiedDate":"2023-02-15"},{"lineNumber":84,"author":{"gitId":"Arif-Khalid"},"content":"            decodedTask.setDone(isDone);","lastModifiedDate":"2023-02-15"},{"lineNumber":85,"author":{"gitId":"Arif-Khalid"},"content":"            break;","lastModifiedDate":"2023-02-15"},{"lineNumber":86,"author":{"gitId":"Arif-Khalid"},"content":"        case CommandInputs.ADD_DEADLINE_COMMAND_INPUT:","lastModifiedDate":"2023-02-15"},{"lineNumber":87,"author":{"gitId":"Arif-Khalid"},"content":"            String by \u003d taskParameters[3];","lastModifiedDate":"2023-02-15"},{"lineNumber":88,"author":{"gitId":"Arif-Khalid"},"content":"            decodedTask \u003d new Deadline(taskName, by);","lastModifiedDate":"2023-02-15"},{"lineNumber":89,"author":{"gitId":"Arif-Khalid"},"content":"            decodedTask.setDone(isDone);","lastModifiedDate":"2023-02-15"},{"lineNumber":90,"author":{"gitId":"Arif-Khalid"},"content":"            break;","lastModifiedDate":"2023-02-15"},{"lineNumber":91,"author":{"gitId":"Arif-Khalid"},"content":"        case CommandInputs.ADD_EVENT_COMMAND_INPUT:","lastModifiedDate":"2023-02-15"},{"lineNumber":92,"author":{"gitId":"Arif-Khalid"},"content":"            String from \u003d taskParameters[3];","lastModifiedDate":"2023-02-15"},{"lineNumber":93,"author":{"gitId":"Arif-Khalid"},"content":"            String to \u003d taskParameters[4];","lastModifiedDate":"2023-02-15"},{"lineNumber":94,"author":{"gitId":"Arif-Khalid"},"content":"            decodedTask \u003d new Event(taskName, from, to);","lastModifiedDate":"2023-02-15"},{"lineNumber":95,"author":{"gitId":"Arif-Khalid"},"content":"            decodedTask.setDone(isDone);","lastModifiedDate":"2023-02-15"},{"lineNumber":96,"author":{"gitId":"Arif-Khalid"},"content":"            break;","lastModifiedDate":"2023-02-15"},{"lineNumber":97,"author":{"gitId":"Arif-Khalid"},"content":"        default:","lastModifiedDate":"2023-02-15"},{"lineNumber":98,"author":{"gitId":"Arif-Khalid"},"content":"            throw new Exception(\"Task type unidentifiable\");","lastModifiedDate":"2023-02-15"},{"lineNumber":99,"author":{"gitId":"Arif-Khalid"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":100,"author":{"gitId":"Arif-Khalid"},"content":"        return decodedTask;","lastModifiedDate":"2023-02-15"},{"lineNumber":101,"author":{"gitId":"Arif-Khalid"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":102,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":103,"author":{"gitId":"Arif-Khalid"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":104,"author":{"gitId":"Arif-Khalid"},"content":"     * Encodes a task object\u0027s name and status into a string for storage","lastModifiedDate":"2023-02-23"},{"lineNumber":105,"author":{"gitId":"Arif-Khalid"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":106,"author":{"gitId":"Arif-Khalid"},"content":"     * @param task The task to be encoded","lastModifiedDate":"2023-02-23"},{"lineNumber":107,"author":{"gitId":"Arif-Khalid"},"content":"     * @param taskTypeAsString The type of the task as a string","lastModifiedDate":"2023-02-23"},{"lineNumber":108,"author":{"gitId":"Arif-Khalid"},"content":"     * @return A string representing the task\u0027s name and status","lastModifiedDate":"2023-02-23"},{"lineNumber":109,"author":{"gitId":"Arif-Khalid"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":110,"author":{"gitId":"Arif-Khalid"},"content":"    private static String encodeTaskNameAndStatus(Task task, String taskTypeAsString){","lastModifiedDate":"2023-02-15"},{"lineNumber":111,"author":{"gitId":"Arif-Khalid"},"content":"        String encodedOutput \u003d taskTypeAsString;","lastModifiedDate":"2023-02-15"},{"lineNumber":112,"author":{"gitId":"Arif-Khalid"},"content":"        if(task.isDone()) {","lastModifiedDate":"2023-02-15"},{"lineNumber":113,"author":{"gitId":"Arif-Khalid"},"content":"            encodedOutput \u003d encodedOutput.concat(\"`1`\");","lastModifiedDate":"2023-02-15"},{"lineNumber":114,"author":{"gitId":"Arif-Khalid"},"content":"        }else{","lastModifiedDate":"2023-02-15"},{"lineNumber":115,"author":{"gitId":"Arif-Khalid"},"content":"            encodedOutput \u003d encodedOutput.concat(\"`0`\");","lastModifiedDate":"2023-02-15"},{"lineNumber":116,"author":{"gitId":"Arif-Khalid"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":117,"author":{"gitId":"Arif-Khalid"},"content":"        encodedOutput \u003d encodedOutput.concat(task.getTaskName());","lastModifiedDate":"2023-02-15"},{"lineNumber":118,"author":{"gitId":"Arif-Khalid"},"content":"        return encodedOutput;","lastModifiedDate":"2023-02-15"},{"lineNumber":119,"author":{"gitId":"Arif-Khalid"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":120,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":121,"author":{"gitId":"Arif-Khalid"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":122,"author":{"gitId":"Arif-Khalid"},"content":"     * Encodes a deadline type task into a string","lastModifiedDate":"2023-02-23"},{"lineNumber":123,"author":{"gitId":"Arif-Khalid"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":124,"author":{"gitId":"Arif-Khalid"},"content":"     * @param deadlineTask The deadline task object to be encoded","lastModifiedDate":"2023-02-23"},{"lineNumber":125,"author":{"gitId":"Arif-Khalid"},"content":"     * @return A string representing the encoded task","lastModifiedDate":"2023-02-23"},{"lineNumber":126,"author":{"gitId":"Arif-Khalid"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":127,"author":{"gitId":"Arif-Khalid"},"content":"    private static String encodeDeadlineData(Deadline deadlineTask){","lastModifiedDate":"2023-02-15"},{"lineNumber":128,"author":{"gitId":"Arif-Khalid"},"content":"        String encodedTask \u003d encodeTaskNameAndStatus(deadlineTask, CommandInputs.ADD_DEADLINE_COMMAND_INPUT);","lastModifiedDate":"2023-02-15"},{"lineNumber":129,"author":{"gitId":"Arif-Khalid"},"content":"        encodedTask \u003d encodedTask.concat(\"`\" + deadlineTask.getDoBy());","lastModifiedDate":"2023-02-15"},{"lineNumber":130,"author":{"gitId":"Arif-Khalid"},"content":"        return encodedTask;","lastModifiedDate":"2023-02-15"},{"lineNumber":131,"author":{"gitId":"Arif-Khalid"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":132,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":133,"author":{"gitId":"Arif-Khalid"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":134,"author":{"gitId":"Arif-Khalid"},"content":"     * Encodes an event type task into a string","lastModifiedDate":"2023-02-23"},{"lineNumber":135,"author":{"gitId":"Arif-Khalid"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":136,"author":{"gitId":"Arif-Khalid"},"content":"     * @param eventTask The event task object to be encoded","lastModifiedDate":"2023-02-23"},{"lineNumber":137,"author":{"gitId":"Arif-Khalid"},"content":"     * @return A string representing the encoded task","lastModifiedDate":"2023-02-23"},{"lineNumber":138,"author":{"gitId":"Arif-Khalid"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":139,"author":{"gitId":"Arif-Khalid"},"content":"    private static String encodeEventData(Event eventTask){","lastModifiedDate":"2023-02-15"},{"lineNumber":140,"author":{"gitId":"Arif-Khalid"},"content":"        String encodedTask \u003d encodeTaskNameAndStatus(eventTask, CommandInputs.ADD_EVENT_COMMAND_INPUT);","lastModifiedDate":"2023-02-15"},{"lineNumber":141,"author":{"gitId":"Arif-Khalid"},"content":"        encodedTask \u003d encodedTask.concat(\"`\"+ eventTask.getFrom() + \"`\" + eventTask.getTo());","lastModifiedDate":"2023-02-15"},{"lineNumber":142,"author":{"gitId":"Arif-Khalid"},"content":"        return encodedTask;","lastModifiedDate":"2023-02-15"},{"lineNumber":143,"author":{"gitId":"Arif-Khalid"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":144,"author":{"gitId":"Arif-Khalid"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"Arif-Khalid":144}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Arif-Khalid"},"content":"package duke.task;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"Arif-Khalid"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"Arif-Khalid"},"content":" * Task type that includes a by time","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"Arif-Khalid"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"Arif-Khalid"},"content":"public class Deadline extends Task{","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"Arif-Khalid"},"content":"    private String doBy;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"Arif-Khalid"},"content":"    public Deadline(String name, String doBy){","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"Arif-Khalid"},"content":"        super(name, TaskType.DEADLINE);","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"Arif-Khalid"},"content":"        this.doBy \u003d doBy;","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"Arif-Khalid"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"Arif-Khalid"},"content":"    public String getDoBy(){","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"Arif-Khalid"},"content":"        return doBy;","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"Arif-Khalid"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"Arif-Khalid"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"Arif-Khalid"},"content":"    public String toString(){","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"Arif-Khalid"},"content":"        return super.getTaskPrefixWithName() + \" (by: \" + doBy + \")\";","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"Arif-Khalid"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"Arif-Khalid"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"Arif-Khalid":21}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Arif-Khalid"},"content":"package duke.task;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"Arif-Khalid"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"Arif-Khalid"},"content":" * Task type that includes from time and to time","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"Arif-Khalid"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"Arif-Khalid"},"content":"public class Event extends Task{","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"Arif-Khalid"},"content":"    private String from;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"Arif-Khalid"},"content":"    private String to;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"Arif-Khalid"},"content":"    public Event(String name, String from, String to){","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"Arif-Khalid"},"content":"        super(name, TaskType.EVENT);","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"Arif-Khalid"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"Arif-Khalid"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"Arif-Khalid"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"Arif-Khalid"},"content":"    public String getFrom(){","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"Arif-Khalid"},"content":"        return from;","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"Arif-Khalid"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"Arif-Khalid"},"content":"    public String getTo(){","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"Arif-Khalid"},"content":"        return to;","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"Arif-Khalid"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"Arif-Khalid"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"Arif-Khalid"},"content":"    public String toString(){","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"Arif-Khalid"},"content":"        return super.getTaskPrefixWithName() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"Arif-Khalid"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"Arif-Khalid"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"Arif-Khalid":27}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Arif-Khalid"},"content":"package duke.task;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"Arif-Khalid"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"Arif-Khalid"},"content":" * The parent class of all the tasks","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"Arif-Khalid"},"content":" * Initialises and stores name and completion status of the task","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"Arif-Khalid"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"Arif-Khalid"},"content":"public class Task {","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"Arif-Khalid"},"content":"    private boolean isDone;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"Arif-Khalid"},"content":"    private String name;","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"Arif-Khalid"},"content":"    private TaskType taskType;","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"Arif-Khalid"},"content":"    Task(String name, TaskType taskType) {","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"Arif-Khalid"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"Arif-Khalid"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"Arif-Khalid"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"Arif-Khalid"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"Arif-Khalid"},"content":"    public void setDone(boolean isDone){","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"Arif-Khalid"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"Arif-Khalid"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"Arif-Khalid"},"content":"    public boolean isDone(){","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"Arif-Khalid"},"content":"        return isDone;","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"Arif-Khalid"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"Arif-Khalid"},"content":"    public TaskType getTaskType(){","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"Arif-Khalid"},"content":"        return taskType;","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"Arif-Khalid"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"Arif-Khalid"},"content":"    public String getTaskName(){","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"Arif-Khalid"},"content":"        return name;","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"Arif-Khalid"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":33,"author":{"gitId":"Arif-Khalid"},"content":"    public String getTaskPrefixWithName(){","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"Arif-Khalid"},"content":"        String isDoneCheck;","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"Arif-Khalid"},"content":"        if(isDone){","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"Arif-Khalid"},"content":"            isDoneCheck \u003d \"X\";","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"Arif-Khalid"},"content":"        } else{","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"Arif-Khalid"},"content":"            isDoneCheck \u003d \" \";","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"Arif-Khalid"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"Arif-Khalid"},"content":"        String taskTypeChar \u003d null;","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"Arif-Khalid"},"content":"        switch(taskType){","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"Arif-Khalid"},"content":"        case TODO:","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"Arif-Khalid"},"content":"            taskTypeChar \u003d \"T\";","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"Arif-Khalid"},"content":"            break;","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"Arif-Khalid"},"content":"        case DEADLINE:","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"Arif-Khalid"},"content":"            taskTypeChar \u003d \"D\";","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"Arif-Khalid"},"content":"            break;","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"Arif-Khalid"},"content":"        case EVENT:","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"Arif-Khalid"},"content":"            taskTypeChar \u003d \"E\";","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"Arif-Khalid"},"content":"            break;","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"Arif-Khalid"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"Arif-Khalid"},"content":"        return \"[\" + taskTypeChar + \"][\" + isDoneCheck + \"] \" + name;","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"Arif-Khalid"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"Arif-Khalid"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"Arif-Khalid":54}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Arif-Khalid"},"content":"package duke.task;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":3,"author":{"gitId":"Arif-Khalid"},"content":"import duke.ui.UI;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Arif-Khalid"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"Arif-Khalid"},"content":"import duke.exception.TaskNumberException;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":7,"author":{"gitId":"Arif-Khalid"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-22"},{"lineNumber":8,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":9,"author":{"gitId":"Arif-Khalid"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"Arif-Khalid"},"content":" * Class that stores tasks and handles operations performed on tasks","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"Arif-Khalid"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"Arif-Khalid"},"content":"public class TaskList {","lastModifiedDate":"2023-02-22"},{"lineNumber":13,"author":{"gitId":"Arif-Khalid"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-02-22"},{"lineNumber":14,"author":{"gitId":"Arif-Khalid"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks){","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"Arif-Khalid"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-02-22"},{"lineNumber":16,"author":{"gitId":"Arif-Khalid"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":17,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":18,"author":{"gitId":"Arif-Khalid"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"Arif-Khalid"},"content":"     * Adds a new task to the task list","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"Arif-Khalid"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"Arif-Khalid"},"content":"     * @param taskParameters The parameters for the task","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"Arif-Khalid"},"content":"     * @param taskType The type of the task","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"Arif-Khalid"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"Arif-Khalid"},"content":"    public void addNewTask(String[] taskParameters, TaskType taskType) {","lastModifiedDate":"2023-02-22"},{"lineNumber":25,"author":{"gitId":"Arif-Khalid"},"content":"        Task newTask;","lastModifiedDate":"2023-02-22"},{"lineNumber":26,"author":{"gitId":"Arif-Khalid"},"content":"        switch (taskType) {","lastModifiedDate":"2023-02-22"},{"lineNumber":27,"author":{"gitId":"Arif-Khalid"},"content":"        case TODO:","lastModifiedDate":"2023-02-22"},{"lineNumber":28,"author":{"gitId":"Arif-Khalid"},"content":"            newTask \u003d new ToDo(taskParameters[0]);","lastModifiedDate":"2023-02-22"},{"lineNumber":29,"author":{"gitId":"Arif-Khalid"},"content":"            break;","lastModifiedDate":"2023-02-22"},{"lineNumber":30,"author":{"gitId":"Arif-Khalid"},"content":"        case DEADLINE:","lastModifiedDate":"2023-02-22"},{"lineNumber":31,"author":{"gitId":"Arif-Khalid"},"content":"            newTask \u003d new Deadline(taskParameters[0], taskParameters[1]);","lastModifiedDate":"2023-02-22"},{"lineNumber":32,"author":{"gitId":"Arif-Khalid"},"content":"            break;","lastModifiedDate":"2023-02-22"},{"lineNumber":33,"author":{"gitId":"Arif-Khalid"},"content":"        case EVENT:","lastModifiedDate":"2023-02-22"},{"lineNumber":34,"author":{"gitId":"Arif-Khalid"},"content":"            newTask \u003d new Event(taskParameters[0], taskParameters[1], taskParameters[2]);","lastModifiedDate":"2023-02-22"},{"lineNumber":35,"author":{"gitId":"Arif-Khalid"},"content":"            break;","lastModifiedDate":"2023-02-22"},{"lineNumber":36,"author":{"gitId":"Arif-Khalid"},"content":"        default:","lastModifiedDate":"2023-02-22"},{"lineNumber":37,"author":{"gitId":"Arif-Khalid"},"content":"            // No task type specified, there is some bug in the code if instruction reaches this point,","lastModifiedDate":"2023-02-22"},{"lineNumber":38,"author":{"gitId":"Arif-Khalid"},"content":"            // simply do not add anything to the tasks","lastModifiedDate":"2023-02-22"},{"lineNumber":39,"author":{"gitId":"Arif-Khalid"},"content":"            UI.printToUser(\"Error in addNewTask method, no task type specified\");","lastModifiedDate":"2023-02-22"},{"lineNumber":40,"author":{"gitId":"Arif-Khalid"},"content":"            return;","lastModifiedDate":"2023-02-22"},{"lineNumber":41,"author":{"gitId":"Arif-Khalid"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":42,"author":{"gitId":"Arif-Khalid"},"content":"        tasks.add(newTask);","lastModifiedDate":"2023-02-22"},{"lineNumber":43,"author":{"gitId":"Arif-Khalid"},"content":"        // Print a singular form of task if there is only one task in the list","lastModifiedDate":"2023-02-23"},{"lineNumber":44,"author":{"gitId":"Arif-Khalid"},"content":"        String taskString \u003d \"tasks\";","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"Arif-Khalid"},"content":"        if(tasks.size() \u003d\u003d 1){","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"Arif-Khalid"},"content":"            taskString \u003d \"task\";","lastModifiedDate":"2023-02-23"},{"lineNumber":47,"author":{"gitId":"Arif-Khalid"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":48,"author":{"gitId":"Arif-Khalid"},"content":"        UI.printToUser(\"Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2023-02-22"},{"lineNumber":49,"author":{"gitId":"Arif-Khalid"},"content":"                \"  \" + newTask + \"\\n\" +","lastModifiedDate":"2023-02-22"},{"lineNumber":50,"author":{"gitId":"Arif-Khalid"},"content":"                \"Now you have \" + tasks.size() + \" \" + taskString + \" in the list.\");","lastModifiedDate":"2023-02-23"},{"lineNumber":51,"author":{"gitId":"Arif-Khalid"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":52,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":53,"author":{"gitId":"Arif-Khalid"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":54,"author":{"gitId":"Arif-Khalid"},"content":"     * Gets the task index from the string of task numbers received from parser","lastModifiedDate":"2023-02-23"},{"lineNumber":55,"author":{"gitId":"Arif-Khalid"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":56,"author":{"gitId":"Arif-Khalid"},"content":"     * @param taskNumbers String array received from parser representing task numbers","lastModifiedDate":"2023-02-23"},{"lineNumber":57,"author":{"gitId":"Arif-Khalid"},"content":"     * @param totalTasks Total tasks in the list","lastModifiedDate":"2023-02-23"},{"lineNumber":58,"author":{"gitId":"Arif-Khalid"},"content":"     * @return The 0-based index of the task indicated by user","lastModifiedDate":"2023-02-23"},{"lineNumber":59,"author":{"gitId":"Arif-Khalid"},"content":"     * @throws DukeException if the task number is invalid","lastModifiedDate":"2023-02-23"},{"lineNumber":60,"author":{"gitId":"Arif-Khalid"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":61,"author":{"gitId":"Arif-Khalid"},"content":"    private int getTaskIndex(String[] taskNumbers, int totalTasks) throws DukeException{","lastModifiedDate":"2023-02-23"},{"lineNumber":62,"author":{"gitId":"Arif-Khalid"},"content":"        // From parser, in the current implementation, taskNumbers.length is always equal to 1","lastModifiedDate":"2023-02-22"},{"lineNumber":63,"author":{"gitId":"Arif-Khalid"},"content":"        int taskIndex;","lastModifiedDate":"2023-02-22"},{"lineNumber":64,"author":{"gitId":"Arif-Khalid"},"content":"        try {","lastModifiedDate":"2023-02-22"},{"lineNumber":65,"author":{"gitId":"Arif-Khalid"},"content":"            taskIndex \u003d Integer.parseInt(taskNumbers[0]);","lastModifiedDate":"2023-02-22"},{"lineNumber":66,"author":{"gitId":"Arif-Khalid"},"content":"        } catch (Exception e){","lastModifiedDate":"2023-02-22"},{"lineNumber":67,"author":{"gitId":"Arif-Khalid"},"content":"            throw new TaskNumberException();","lastModifiedDate":"2023-02-22"},{"lineNumber":68,"author":{"gitId":"Arif-Khalid"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":69,"author":{"gitId":"Arif-Khalid"},"content":"        if(taskIndex \u003c\u003d 0 || taskIndex \u003e totalTasks){","lastModifiedDate":"2023-02-22"},{"lineNumber":70,"author":{"gitId":"Arif-Khalid"},"content":"            throw new TaskNumberException();","lastModifiedDate":"2023-02-22"},{"lineNumber":71,"author":{"gitId":"Arif-Khalid"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":72,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":73,"author":{"gitId":"Arif-Khalid"},"content":"        // Minus one from task index since the array tasks is 0-based","lastModifiedDate":"2023-02-22"},{"lineNumber":74,"author":{"gitId":"Arif-Khalid"},"content":"        taskIndex -\u003d 1;","lastModifiedDate":"2023-02-22"},{"lineNumber":75,"author":{"gitId":"Arif-Khalid"},"content":"        return taskIndex;","lastModifiedDate":"2023-02-22"},{"lineNumber":76,"author":{"gitId":"Arif-Khalid"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":77,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":78,"author":{"gitId":"Arif-Khalid"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":79,"author":{"gitId":"Arif-Khalid"},"content":"     * Changes the task status of a task","lastModifiedDate":"2023-02-23"},{"lineNumber":80,"author":{"gitId":"Arif-Khalid"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":81,"author":{"gitId":"Arif-Khalid"},"content":"     * @param taskNumbers String array representing the 1-based task number to change the status of","lastModifiedDate":"2023-02-23"},{"lineNumber":82,"author":{"gitId":"Arif-Khalid"},"content":"     * @param isDone Boolean representing what to set the status of the task to be","lastModifiedDate":"2023-02-23"},{"lineNumber":83,"author":{"gitId":"Arif-Khalid"},"content":"     * @throws DukeException if task number is invalid","lastModifiedDate":"2023-02-23"},{"lineNumber":84,"author":{"gitId":"Arif-Khalid"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":85,"author":{"gitId":"Arif-Khalid"},"content":"    public void changeTaskStatus(String[] taskNumbers, boolean isDone) throws DukeException{","lastModifiedDate":"2023-02-22"},{"lineNumber":86,"author":{"gitId":"Arif-Khalid"},"content":"        // From parser, taskNumbers.length is always equal to 1","lastModifiedDate":"2023-02-22"},{"lineNumber":87,"author":{"gitId":"Arif-Khalid"},"content":"        int taskIndex \u003d getTaskIndex(taskNumbers, tasks.size());","lastModifiedDate":"2023-02-22"},{"lineNumber":88,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":89,"author":{"gitId":"Arif-Khalid"},"content":"        if(isDone){","lastModifiedDate":"2023-02-22"},{"lineNumber":90,"author":{"gitId":"Arif-Khalid"},"content":"            if(tasks.get(taskIndex).isDone()){","lastModifiedDate":"2023-02-22"},{"lineNumber":91,"author":{"gitId":"Arif-Khalid"},"content":"                UI.printToUser(\"This task is already marked done:\\n\"","lastModifiedDate":"2023-02-22"},{"lineNumber":92,"author":{"gitId":"Arif-Khalid"},"content":"                        + tasks.get(taskIndex).toString());","lastModifiedDate":"2023-02-22"},{"lineNumber":93,"author":{"gitId":"Arif-Khalid"},"content":"            } else{","lastModifiedDate":"2023-02-22"},{"lineNumber":94,"author":{"gitId":"Arif-Khalid"},"content":"                tasks.get(taskIndex).setDone(true);","lastModifiedDate":"2023-02-22"},{"lineNumber":95,"author":{"gitId":"Arif-Khalid"},"content":"                UI.printToUser(\"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2023-02-22"},{"lineNumber":96,"author":{"gitId":"Arif-Khalid"},"content":"                        + tasks.get(taskIndex).toString());","lastModifiedDate":"2023-02-22"},{"lineNumber":97,"author":{"gitId":"Arif-Khalid"},"content":"            }","lastModifiedDate":"2023-02-22"},{"lineNumber":98,"author":{"gitId":"Arif-Khalid"},"content":"        }else{","lastModifiedDate":"2023-02-22"},{"lineNumber":99,"author":{"gitId":"Arif-Khalid"},"content":"            if(!tasks.get(taskIndex).isDone()){","lastModifiedDate":"2023-02-22"},{"lineNumber":100,"author":{"gitId":"Arif-Khalid"},"content":"                UI.printToUser(\"This task is already marked as not done:\\n\"","lastModifiedDate":"2023-02-22"},{"lineNumber":101,"author":{"gitId":"Arif-Khalid"},"content":"                        + tasks.get(taskIndex).toString());","lastModifiedDate":"2023-02-22"},{"lineNumber":102,"author":{"gitId":"Arif-Khalid"},"content":"            } else{","lastModifiedDate":"2023-02-22"},{"lineNumber":103,"author":{"gitId":"Arif-Khalid"},"content":"                tasks.get(taskIndex).setDone(false);","lastModifiedDate":"2023-02-22"},{"lineNumber":104,"author":{"gitId":"Arif-Khalid"},"content":"                UI.printToUser(\"OK, I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2023-02-22"},{"lineNumber":105,"author":{"gitId":"Arif-Khalid"},"content":"                        + tasks.get(taskIndex).toString());","lastModifiedDate":"2023-02-22"},{"lineNumber":106,"author":{"gitId":"Arif-Khalid"},"content":"            }","lastModifiedDate":"2023-02-22"},{"lineNumber":107,"author":{"gitId":"Arif-Khalid"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":108,"author":{"gitId":"Arif-Khalid"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":109,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":110,"author":{"gitId":"Arif-Khalid"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":111,"author":{"gitId":"Arif-Khalid"},"content":"     * Deletes a task","lastModifiedDate":"2023-02-23"},{"lineNumber":112,"author":{"gitId":"Arif-Khalid"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":113,"author":{"gitId":"Arif-Khalid"},"content":"     * @param taskNumbers String array representing the 1-based task number to delete","lastModifiedDate":"2023-02-23"},{"lineNumber":114,"author":{"gitId":"Arif-Khalid"},"content":"     * @throws DukeException if task number is invalid","lastModifiedDate":"2023-02-23"},{"lineNumber":115,"author":{"gitId":"Arif-Khalid"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":116,"author":{"gitId":"Arif-Khalid"},"content":"    public void deleteTask(String[] taskNumbers) throws DukeException{","lastModifiedDate":"2023-02-22"},{"lineNumber":117,"author":{"gitId":"Arif-Khalid"},"content":"        int taskIndex \u003d getTaskIndex(taskNumbers, tasks.size());","lastModifiedDate":"2023-02-22"},{"lineNumber":118,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":119,"author":{"gitId":"Arif-Khalid"},"content":"        Task taskToRemove \u003d tasks.get(taskIndex);","lastModifiedDate":"2023-02-22"},{"lineNumber":120,"author":{"gitId":"Arif-Khalid"},"content":"        tasks.remove(taskIndex);","lastModifiedDate":"2023-02-22"},{"lineNumber":121,"author":{"gitId":"Arif-Khalid"},"content":"        // Print a singular form of task if there is only one task in the list","lastModifiedDate":"2023-02-23"},{"lineNumber":122,"author":{"gitId":"Arif-Khalid"},"content":"        String taskString \u003d \"tasks\";","lastModifiedDate":"2023-02-23"},{"lineNumber":123,"author":{"gitId":"Arif-Khalid"},"content":"        if(tasks.size() \u003d\u003d 1){","lastModifiedDate":"2023-02-23"},{"lineNumber":124,"author":{"gitId":"Arif-Khalid"},"content":"            taskString \u003d \"task\";","lastModifiedDate":"2023-02-23"},{"lineNumber":125,"author":{"gitId":"Arif-Khalid"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":126,"author":{"gitId":"Arif-Khalid"},"content":"        String successMessage \u003d \"Noted. I\u0027ve removed this task:\\n\" +","lastModifiedDate":"2023-02-22"},{"lineNumber":127,"author":{"gitId":"Arif-Khalid"},"content":"                \"  \" + taskToRemove + \"\\n\" +","lastModifiedDate":"2023-02-22"},{"lineNumber":128,"author":{"gitId":"Arif-Khalid"},"content":"                \"Now you have \" + tasks.size() + \" \" + taskString + \" in the list.\" ;","lastModifiedDate":"2023-02-23"},{"lineNumber":129,"author":{"gitId":"Arif-Khalid"},"content":"        UI.printToUser(successMessage);","lastModifiedDate":"2023-02-22"},{"lineNumber":130,"author":{"gitId":"Arif-Khalid"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":131,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":132,"author":{"gitId":"Arif-Khalid"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":133,"author":{"gitId":"Arif-Khalid"},"content":"     * Searches through the list of tasks and returns an array list of tasks containing the keyword passed in","lastModifiedDate":"2023-02-23"},{"lineNumber":134,"author":{"gitId":"Arif-Khalid"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":135,"author":{"gitId":"Arif-Khalid"},"content":"     * @param keyWord The keyword to search for","lastModifiedDate":"2023-02-23"},{"lineNumber":136,"author":{"gitId":"Arif-Khalid"},"content":"     * @return An array list of tasks with the keyword in their name","lastModifiedDate":"2023-02-23"},{"lineNumber":137,"author":{"gitId":"Arif-Khalid"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":138,"author":{"gitId":"Arif-Khalid"},"content":"    public ArrayList\u003cTask\u003e tasksWithKeyword(String keyWord){","lastModifiedDate":"2023-02-23"},{"lineNumber":139,"author":{"gitId":"Arif-Khalid"},"content":"        ArrayList\u003cTask\u003e selectedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-23"},{"lineNumber":140,"author":{"gitId":"Arif-Khalid"},"content":"        for(Task task : tasks) {","lastModifiedDate":"2023-02-23"},{"lineNumber":141,"author":{"gitId":"Arif-Khalid"},"content":"            if (task.getTaskName().contains(keyWord)) {","lastModifiedDate":"2023-02-23"},{"lineNumber":142,"author":{"gitId":"Arif-Khalid"},"content":"                selectedTasks.add(task);","lastModifiedDate":"2023-02-23"},{"lineNumber":143,"author":{"gitId":"Arif-Khalid"},"content":"            }","lastModifiedDate":"2023-02-23"},{"lineNumber":144,"author":{"gitId":"Arif-Khalid"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":145,"author":{"gitId":"Arif-Khalid"},"content":"        return selectedTasks;","lastModifiedDate":"2023-02-23"},{"lineNumber":146,"author":{"gitId":"Arif-Khalid"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":147,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":148,"author":{"gitId":"Arif-Khalid"},"content":"    public ArrayList\u003cTask\u003e getTaskArrayList() {","lastModifiedDate":"2023-02-23"},{"lineNumber":149,"author":{"gitId":"Arif-Khalid"},"content":"        return tasks;","lastModifiedDate":"2023-02-23"},{"lineNumber":150,"author":{"gitId":"Arif-Khalid"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":151,"author":{"gitId":"Arif-Khalid"},"content":"}","lastModifiedDate":"2023-02-22"}],"authorContributionMap":{"Arif-Khalid":151}},{"path":"src/main/java/duke/task/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Arif-Khalid"},"content":"package duke.task;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"Arif-Khalid"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Arif-Khalid"},"content":" * Enum representing the types of tasks that can be stored","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"Arif-Khalid"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Arif-Khalid"},"content":"public enum TaskType {","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"Arif-Khalid"},"content":"    TODO,","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"Arif-Khalid"},"content":"    DEADLINE,","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"Arif-Khalid"},"content":"    EVENT","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"Arif-Khalid"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"Arif-Khalid":10}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Arif-Khalid"},"content":"package duke.task;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"Arif-Khalid"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"Arif-Khalid"},"content":" * Represents a task that only has a name associated with it","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"Arif-Khalid"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"Arif-Khalid"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"Arif-Khalid"},"content":"    public ToDo(String name){","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"Arif-Khalid"},"content":"        super(name, TaskType.TODO);","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"Arif-Khalid"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"Arif-Khalid"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"Arif-Khalid"},"content":"    public String toString() {","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"Arif-Khalid"},"content":"        return super.getTaskPrefixWithName();","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"Arif-Khalid"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"Arif-Khalid"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"Arif-Khalid":14}},{"path":"src/main/java/duke/ui/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Arif-Khalid"},"content":"package duke.ui;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":3,"author":{"gitId":"Arif-Khalid"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"Arif-Khalid"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"Arif-Khalid"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-22"},{"lineNumber":7,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":8,"author":{"gitId":"Arif-Khalid"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"Arif-Khalid"},"content":" * Class that handles interaction with the user","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"Arif-Khalid"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"Arif-Khalid"},"content":"public class UI {","lastModifiedDate":"2023-02-22"},{"lineNumber":12,"author":{"gitId":"Arif-Khalid"},"content":"    public static void printGreeting(){","lastModifiedDate":"2023-02-22"},{"lineNumber":13,"author":{"gitId":"Arif-Khalid"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");","lastModifiedDate":"2023-02-22"},{"lineNumber":14,"author":{"gitId":"Arif-Khalid"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-02-22"},{"lineNumber":15,"author":{"gitId":"Arif-Khalid"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":16,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":17,"author":{"gitId":"Arif-Khalid"},"content":"    public static void printFarewell(){","lastModifiedDate":"2023-02-22"},{"lineNumber":18,"author":{"gitId":"Arif-Khalid"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-02-22"},{"lineNumber":19,"author":{"gitId":"Arif-Khalid"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":20,"author":{"gitId":"Arif-Khalid"},"content":"    public static String getUserInput(){","lastModifiedDate":"2023-02-22"},{"lineNumber":21,"author":{"gitId":"Arif-Khalid"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-22"},{"lineNumber":22,"author":{"gitId":"Arif-Khalid"},"content":"        return in.nextLine();","lastModifiedDate":"2023-02-22"},{"lineNumber":23,"author":{"gitId":"Arif-Khalid"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":24,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":25,"author":{"gitId":"Arif-Khalid"},"content":"    public static void printToUser(String message){","lastModifiedDate":"2023-02-22"},{"lineNumber":26,"author":{"gitId":"Arif-Khalid"},"content":"        System.out.println(message);","lastModifiedDate":"2023-02-22"},{"lineNumber":27,"author":{"gitId":"Arif-Khalid"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":28,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"Arif-Khalid"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"Arif-Khalid"},"content":"     * Formats and prints the list of tasks passed in to the user","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"Arif-Khalid"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"Arif-Khalid"},"content":"     * @param tasks The list of tasks to print","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"Arif-Khalid"},"content":"     * @param header The header to print before the list of tasks","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"Arif-Khalid"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"Arif-Khalid"},"content":"    public static void printTaskList(ArrayList\u003cTask\u003e tasks, String header){","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"Arif-Khalid"},"content":"        String stringToPrint \u003d \"\";","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"Arif-Khalid"},"content":"        stringToPrint \u003d stringToPrint.concat(header);","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"Arif-Khalid"},"content":"        for(int i \u003d 0; i \u003c tasks.size(); ++i) {","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"Arif-Khalid"},"content":"            stringToPrint \u003d stringToPrint.concat(\"\\n\" + Integer.toString(i + 1) + \".\" + tasks.get(i).toString());","lastModifiedDate":"2023-02-23"},{"lineNumber":40,"author":{"gitId":"Arif-Khalid"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"Arif-Khalid"},"content":"        System.out.println(stringToPrint);","lastModifiedDate":"2023-02-23"},{"lineNumber":42,"author":{"gitId":"Arif-Khalid"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":43,"author":{"gitId":"Arif-Khalid"},"content":"}","lastModifiedDate":"2023-02-22"}],"authorContributionMap":{"Arif-Khalid":43}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Arif-Khalid"},"content":"todo borrow book","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"Arif-Khalid"},"content":"deadline return book /by 4pm","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"Arif-Khalid"},"content":"deadline file taxes /by Sunday","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"Arif-Khalid"},"content":"event NOC interview /from Friday 11.30am /to Friday 12pm","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"Arif-Khalid"},"content":"list","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"Arif-Khalid"},"content":"mark 3","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"Arif-Khalid"},"content":"unmark 3","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"Arif-Khalid"},"content":"list","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"Arif-Khalid"},"content":"mark 2","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"Arif-Khalid"},"content":"mark 1","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"Arif-Khalid"},"content":"list","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"Arif-Khalid"},"content":"bye","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"Arif-Khalid":12}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"Arif-Khalid"},"content":"REM javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Arif-Khalid"},"content":"java -classpath ..\\src\\main\\java Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Arif-Khalid":2,"-":19}}]
