[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"wuzhzn"},"content":"## Table of Contents","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"wuzhzn"},"content":"1. Execution Setup","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"wuzhzn"},"content":"2. Features","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"wuzhzn"},"content":"## Execution Setup","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"wuzhzn"},"content":"1. Ensure you have the latest version of Java (11 or above)","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"wuzhzn"},"content":"2. Download the latest copy of the duke.jar file","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"wuzhzn"},"content":"3. Move the .jar file to the folder where you want to run the program","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"wuzhzn"},"content":"4. Open the command terminal and navigate to the directory of that same folder which you save your .jar file at","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"wuzhzn"},"content":"5. Use the following command to run the programme: java -jar duke.jar","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"wuzhzn"},"content":"`\u003e\u003e\u003e java -jar ip.jar`","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"wuzhzn"},"content":"    ","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"wuzhzn"},"content":"6. If successful, you will see the following welcome message on the command terminal:","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"wuzhzn"},"content":"![img.png](img.png)","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"wuzhzn"},"content":"1. Greetings ","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"wuzhzn"},"content":"2. Add a todo Task","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"wuzhzn"},"content":"3. Add a deadline Task","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"wuzhzn"},"content":"4. Add an event Task","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"wuzhzn"},"content":"5. List tasks","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"wuzhzn"},"content":"6. Mark tasks as done/undone","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"wuzhzn"},"content":"7. Delete tasks","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"wuzhzn"},"content":"8. Find tasks","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"wuzhzn"},"content":"9. Terminate the programme","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":38,"author":{"gitId":"wuzhzn"},"content":"## Usage of Commands and Examples","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":40,"author":{"gitId":"wuzhzn"},"content":"### `todo` - Adds a todo task to the tasklist","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":42,"author":{"gitId":"wuzhzn"},"content":"Adds a todo task to the tasklist and displays the number of tasks currently in the tasklist.","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"wuzhzn"},"content":"`todo return book`","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"wuzhzn"},"content":"Expected outcome:","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"wuzhzn"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"wuzhzn"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"wuzhzn"},"content":" [T][] return book","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"wuzhzn"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"wuzhzn"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"wuzhzn"},"content":"### `deadline` - Adds a deadline task to the tasklist","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":57,"author":{"gitId":"wuzhzn"},"content":"Adds a deadline task to the tasklist and displays the number of tasks currently in the tasklist.","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":62,"author":{"gitId":"wuzhzn"},"content":"`deadline return book /by Friday`","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":66,"author":{"gitId":"wuzhzn"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"wuzhzn"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"wuzhzn"},"content":" [D][] return book (by: Friday)","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"wuzhzn"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"wuzhzn"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"wuzhzn"},"content":"### `event` - Adds a event task to the tasklist","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"wuzhzn"},"content":"Adds an event task to the tasklist and displays the number of tasks currently in the tasklist.","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":76,"author":{"gitId":"wuzhzn"},"content":"Example of usage:","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"wuzhzn"},"content":"`event attend birthday party /from 6pm /to 10pm`","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":80,"author":{"gitId":"wuzhzn"},"content":"Expected outcome:","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":82,"author":{"gitId":"wuzhzn"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":83,"author":{"gitId":"wuzhzn"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-03-03"},{"lineNumber":84,"author":{"gitId":"wuzhzn"},"content":" [E][] attend birthday part (from: 6pm to: 10pm)","lastModifiedDate":"2023-03-03"},{"lineNumber":85,"author":{"gitId":"wuzhzn"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2023-03-03"},{"lineNumber":86,"author":{"gitId":"wuzhzn"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":87,"author":{"gitId":"wuzhzn"},"content":"### `list` - Shows all current stored tasks","lastModifiedDate":"2023-03-03"},{"lineNumber":88,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":89,"author":{"gitId":"wuzhzn"},"content":"Shows all tasks currently stored in the tasklist.","lastModifiedDate":"2023-03-03"},{"lineNumber":90,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":91,"author":{"gitId":"wuzhzn"},"content":"Example of usage:","lastModifiedDate":"2023-03-03"},{"lineNumber":92,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":93,"author":{"gitId":"wuzhzn"},"content":"`list`","lastModifiedDate":"2023-03-03"},{"lineNumber":94,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":95,"author":{"gitId":"wuzhzn"},"content":"Expected outcome:","lastModifiedDate":"2023-03-03"},{"lineNumber":96,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":97,"author":{"gitId":"wuzhzn"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":98,"author":{"gitId":"wuzhzn"},"content":"Here are the tasks in your list:","lastModifiedDate":"2023-03-03"},{"lineNumber":99,"author":{"gitId":"wuzhzn"},"content":"1.[T][] return book","lastModifiedDate":"2023-03-03"},{"lineNumber":100,"author":{"gitId":"wuzhzn"},"content":"2.[D][] return book (by: Friday)","lastModifiedDate":"2023-03-03"},{"lineNumber":101,"author":{"gitId":"wuzhzn"},"content":"3.[E][] attend birthday part (from: 6pm to: 10pm)","lastModifiedDate":"2023-03-03"},{"lineNumber":102,"author":{"gitId":"wuzhzn"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":103,"author":{"gitId":"wuzhzn"},"content":"### `mark` - Marks a specific task as done in the tasklist","lastModifiedDate":"2023-03-03"},{"lineNumber":104,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":105,"author":{"gitId":"wuzhzn"},"content":"Mark the status of a specific task as done, and updates a status icon to [X] that represents it being marked.","lastModifiedDate":"2023-03-03"},{"lineNumber":106,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":107,"author":{"gitId":"wuzhzn"},"content":"Example of usage:","lastModifiedDate":"2023-03-03"},{"lineNumber":108,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":109,"author":{"gitId":"wuzhzn"},"content":"`mark 1`","lastModifiedDate":"2023-03-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":111,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2023-03-03"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":113,"author":{"gitId":"wuzhzn"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":114,"author":{"gitId":"wuzhzn"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2023-03-03"},{"lineNumber":115,"author":{"gitId":"wuzhzn"},"content":"  [X] return book","lastModifiedDate":"2023-03-03"},{"lineNumber":116,"author":{"gitId":"wuzhzn"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":117,"author":{"gitId":"wuzhzn"},"content":"### `unmark` - Unmarks a specific task as undone in the tasklist","lastModifiedDate":"2023-03-03"},{"lineNumber":118,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":119,"author":{"gitId":"wuzhzn"},"content":"Unmark the status of a specific task as undone, and updates a status icon to [] that represents it being marked.","lastModifiedDate":"2023-03-03"},{"lineNumber":120,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":121,"author":{"gitId":"wuzhzn"},"content":"Example of usage:","lastModifiedDate":"2023-03-03"},{"lineNumber":122,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":123,"author":{"gitId":"wuzhzn"},"content":"`unmark 1`","lastModifiedDate":"2023-03-03"},{"lineNumber":124,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":125,"author":{"gitId":"wuzhzn"},"content":"Expected outcome:","lastModifiedDate":"2023-03-03"},{"lineNumber":126,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":127,"author":{"gitId":"wuzhzn"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":128,"author":{"gitId":"wuzhzn"},"content":"OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2023-03-03"},{"lineNumber":129,"author":{"gitId":"wuzhzn"},"content":"  [] return book","lastModifiedDate":"2023-03-03"},{"lineNumber":130,"author":{"gitId":"wuzhzn"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":131,"author":{"gitId":"wuzhzn"},"content":"### `delete` - Deletes a specific task from the tasklist","lastModifiedDate":"2023-03-03"},{"lineNumber":132,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":133,"author":{"gitId":"wuzhzn"},"content":"Deletes a specified task from the tasklist and displays the number of tasks remaining in the tasklist.","lastModifiedDate":"2023-03-03"},{"lineNumber":134,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":135,"author":{"gitId":"wuzhzn"},"content":"Example of usage:","lastModifiedDate":"2023-03-03"},{"lineNumber":136,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":137,"author":{"gitId":"wuzhzn"},"content":"`delete 2`","lastModifiedDate":"2023-03-03"},{"lineNumber":138,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":139,"author":{"gitId":"wuzhzn"},"content":"Expected outcome:","lastModifiedDate":"2023-03-03"},{"lineNumber":140,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":141,"author":{"gitId":"wuzhzn"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":142,"author":{"gitId":"wuzhzn"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2023-03-03"},{"lineNumber":143,"author":{"gitId":"wuzhzn"},"content":" [E][] attend birthday part (from: 6pm to: 10pm)","lastModifiedDate":"2023-03-03"},{"lineNumber":144,"author":{"gitId":"wuzhzn"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2023-03-03"},{"lineNumber":145,"author":{"gitId":"wuzhzn"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":146,"author":{"gitId":"wuzhzn"},"content":"### `find` - Finds all relevant tasks in the tasklist which contain the keyword","lastModifiedDate":"2023-03-03"},{"lineNumber":147,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":148,"author":{"gitId":"wuzhzn"},"content":"Finds all the relevant tasks in the tasklist that contains the keyword given by the user and displays it to the user alongside its index in the tasklist.","lastModifiedDate":"2023-03-03"},{"lineNumber":149,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":150,"author":{"gitId":"wuzhzn"},"content":"Example of usage:","lastModifiedDate":"2023-03-03"},{"lineNumber":151,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":152,"author":{"gitId":"wuzhzn"},"content":"`find birthday`","lastModifiedDate":"2023-03-03"},{"lineNumber":153,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":154,"author":{"gitId":"wuzhzn"},"content":"Expected outcome:","lastModifiedDate":"2023-03-03"},{"lineNumber":155,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":156,"author":{"gitId":"wuzhzn"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":157,"author":{"gitId":"wuzhzn"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":158,"author":{"gitId":"wuzhzn"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2023-03-03"},{"lineNumber":159,"author":{"gitId":"wuzhzn"},"content":"2.[E][] attend birthday part (from: 6pm to: 10pm)","lastModifiedDate":"2023-03-03"},{"lineNumber":160,"author":{"gitId":"wuzhzn"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":161,"author":{"gitId":"wuzhzn"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":162,"author":{"gitId":"wuzhzn"},"content":"### `bye` - Terminates the programme","lastModifiedDate":"2023-03-03"},{"lineNumber":163,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":164,"author":{"gitId":"wuzhzn"},"content":"Terminates the program and outputs an exit message to the user.","lastModifiedDate":"2023-03-03"},{"lineNumber":165,"author":{"gitId":"wuzhzn"},"content":"The tasklist would have been updated alongside the commands for the user to use once they rerun the programme.","lastModifiedDate":"2023-03-03"},{"lineNumber":166,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":167,"author":{"gitId":"wuzhzn"},"content":"Example of usage:","lastModifiedDate":"2023-03-03"},{"lineNumber":168,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":169,"author":{"gitId":"wuzhzn"},"content":"`bye`","lastModifiedDate":"2023-03-03"},{"lineNumber":170,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":171,"author":{"gitId":"wuzhzn"},"content":"Expected outcome:","lastModifiedDate":"2023-03-03"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":173,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":174,"author":{"gitId":"wuzhzn"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2023-03-03"},{"lineNumber":175,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"wuzhzn":145,"-":30}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wuzhzn"},"content":"package duke;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"wuzhzn"},"content":"import duke.command.Command;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"wuzhzn"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"wuzhzn"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"wuzhzn"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"wuzhzn"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"wuzhzn"},"content":"import duke.ui.UI;","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"wuzhzn"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"wuzhzn"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"wuzhzn"},"content":" * Main class to manage all operations","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"wuzhzn"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"wuzhzn"},"content":"    private static TaskList tasks;","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"wuzhzn"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"wuzhzn"},"content":"     * Initialise the storage, load the data from the text file and executes the program","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"wuzhzn"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"wuzhzn"},"content":"    public Duke(){","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"wuzhzn"},"content":"        tasks \u003d new TaskList(Storage.storageInit());","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"wuzhzn"},"content":"        String input;","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"wuzhzn"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"wuzhzn"},"content":"        UI.showWelcomeMessage();","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"wuzhzn"},"content":"        do {","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"wuzhzn"},"content":"            input \u003d in.nextLine();","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"wuzhzn"},"content":"            if (DukeException.hasError(input)) {","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"wuzhzn"},"content":"                continue;","lastModifiedDate":"2023-02-10"},{"lineNumber":31,"author":{"gitId":"wuzhzn"},"content":"            }","lastModifiedDate":"2023-02-10"},{"lineNumber":32,"author":{"gitId":"wuzhzn"},"content":"            run(input);","lastModifiedDate":"2023-02-15"},{"lineNumber":33,"author":{"gitId":"wuzhzn"},"content":"        } while (!input.equals(\"bye\"));","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"wuzhzn"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"wuzhzn"},"content":"    private static void run(String input) {","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"wuzhzn"},"content":"        try {","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"wuzhzn"},"content":"            Command command \u003d Parser.parse(input);","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"wuzhzn"},"content":"            command.execute(tasks);","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"wuzhzn"},"content":"        } catch (NumberFormatException err){","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"wuzhzn"},"content":"            System.out.println(\"Number expected after command\");","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"wuzhzn"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"wuzhzn"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"wuzhzn"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"wuzhzn"},"content":"     * Command to start the program","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"wuzhzn"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"wuzhzn"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"wuzhzn"},"content":"        new Duke();","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"wuzhzn"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"wuzhzn":47,"-":2}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wuzhzn"},"content":"package duke.command;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"wuzhzn"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"wuzhzn"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"wuzhzn"},"content":"import duke.ui.UI;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"wuzhzn"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"wuzhzn"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"wuzhzn"},"content":"import duke.task.Event;","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"wuzhzn"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"wuzhzn"},"content":"import java.util.List;","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"wuzhzn"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"wuzhzn"},"content":" * Command when adding a new task to tasklist","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"wuzhzn"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"wuzhzn"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"wuzhzn"},"content":"    protected String taskField;","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"wuzhzn"},"content":"    public AddCommand(String commandType, String taskField) {","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"wuzhzn"},"content":"        super(commandType);","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"wuzhzn"},"content":"        this.taskField \u003d taskField;","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"wuzhzn"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"wuzhzn"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"wuzhzn"},"content":"     * Adds a new task into the tasklist according to task type","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"wuzhzn"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"wuzhzn"},"content":"     * @param tasks tasklist which contains all the tasks","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"wuzhzn"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"wuzhzn"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"wuzhzn"},"content":"    public void execute(TaskList tasks) {","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"wuzhzn"},"content":"        switch (commandType) {","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"wuzhzn"},"content":"            case \"todo\":","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"wuzhzn"},"content":"                Todo todo \u003d new Todo(taskField, \"T\");","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"wuzhzn"},"content":"                tasks.addToList(todo);","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"wuzhzn"},"content":"                UI.printAddedTask(todo, tasks);","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"wuzhzn"},"content":"                break;","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"wuzhzn"},"content":"            case \"deadline\":","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"wuzhzn"},"content":"                List\u003cString\u003e parsedDeadline \u003d Parser.parseDeadline(taskField);","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"wuzhzn"},"content":"                Deadline deadline \u003d new Deadline(parsedDeadline.get(0), \"D\", parsedDeadline.get(1));","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"wuzhzn"},"content":"                tasks.addToList(deadline);","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"wuzhzn"},"content":"                UI.printAddedTask(deadline, tasks);","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"wuzhzn"},"content":"                break;","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"wuzhzn"},"content":"            case \"event\":","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"wuzhzn"},"content":"                List\u003cString\u003e parsedEvent \u003d Parser.parseEvent(taskField);","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"wuzhzn"},"content":"                Event event \u003d new Event(parsedEvent.get(0), \"E\", parsedEvent.get(1), parsedEvent.get(2));","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"wuzhzn"},"content":"                tasks.addToList(event);","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"wuzhzn"},"content":"                UI.printAddedTask(event, tasks);","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"wuzhzn"},"content":"                break;","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"wuzhzn"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"wuzhzn"},"content":"        Storage.updateFile(tasks);","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"wuzhzn"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"wuzhzn"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"wuzhzn":53}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wuzhzn"},"content":"package duke.command;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"wuzhzn"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"wuzhzn"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"wuzhzn"},"content":" * Abstract class to manage all commands","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"wuzhzn"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"wuzhzn"},"content":"public abstract class Command {","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"wuzhzn"},"content":"    protected String commandType;","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"wuzhzn"},"content":"    public Command(String commandType) {","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"wuzhzn"},"content":"        this.commandType \u003d commandType;","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"wuzhzn"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"wuzhzn"},"content":"    public abstract void execute(TaskList tasks);","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"wuzhzn"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"wuzhzn":16}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wuzhzn"},"content":"package duke.command;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"wuzhzn"},"content":"import duke.exception.EmptyListError;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"wuzhzn"},"content":"import duke.task.Task;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"wuzhzn"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"wuzhzn"},"content":"import duke.ui.UI;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"wuzhzn"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"wuzhzn"},"content":" * Command when dealing with searching using a keyword","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"wuzhzn"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"wuzhzn"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"wuzhzn"},"content":"    protected String keyword;","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"wuzhzn"},"content":"    public FindCommand(String commandType, String keyword) {","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"wuzhzn"},"content":"        super(commandType);","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"wuzhzn"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"wuzhzn"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"wuzhzn"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"wuzhzn"},"content":"     * Executes the find command","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"wuzhzn"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"wuzhzn"},"content":"     * @param tasks tasklist which contains all the tasks","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"wuzhzn"},"content":"     * @throws EmptyListError if error occurred due to empty list","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"wuzhzn"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"wuzhzn"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"wuzhzn"},"content":"    public void execute(TaskList tasks) {","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"wuzhzn"},"content":"        try {","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"wuzhzn"},"content":"            tasks.findInList(keyword);","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"wuzhzn"},"content":"        } catch (EmptyListError err){","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"wuzhzn"},"content":"            System.out.println(\"There is nothing inside the list\");","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"wuzhzn"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"wuzhzn"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"wuzhzn"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"wuzhzn":35}},{"path":"src/main/java/duke/command/IndexCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wuzhzn"},"content":"package duke.command;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"wuzhzn"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"wuzhzn"},"content":"import duke.exception.EmptyListError;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"wuzhzn"},"content":"import duke.exception.InvalidIndexError;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"wuzhzn"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"wuzhzn"},"content":"import duke.ui.UI;","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"wuzhzn"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"wuzhzn"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"wuzhzn"},"content":" * Command when dealing with tasks that requires task index","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"wuzhzn"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"wuzhzn"},"content":"public class IndexCommand extends Command {","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"wuzhzn"},"content":"    protected int taskNum;","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"wuzhzn"},"content":"    public IndexCommand(String commandType, int taskNum){","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"wuzhzn"},"content":"        super(commandType);","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"wuzhzn"},"content":"        this.taskNum \u003d taskNum;","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"wuzhzn"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"wuzhzn"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"wuzhzn"},"content":"     * Executes the command according to command type","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"wuzhzn"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"wuzhzn"},"content":"     * @param tasks tasklist which contains all the tasks","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"wuzhzn"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"wuzhzn"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"wuzhzn"},"content":"    public void execute(TaskList tasks) {","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"wuzhzn"},"content":"        try {","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"wuzhzn"},"content":"            DukeException.catchIndexCommandError(taskNum, tasks);","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"wuzhzn"},"content":"            switch (commandType){","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"wuzhzn"},"content":"                case \"mark\":","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"wuzhzn"},"content":"                    tasks.mark(taskNum);","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"wuzhzn"},"content":"                    System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"wuzhzn"},"content":"                    UI.printMarkMessage(tasks, taskNum);","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"wuzhzn"},"content":"                    break;","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"wuzhzn"},"content":"                case \"unmark\":","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"wuzhzn"},"content":"                    tasks.unmark(taskNum);","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"wuzhzn"},"content":"                    System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"wuzhzn"},"content":"                    UI.printMarkMessage(tasks, taskNum);","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"wuzhzn"},"content":"                    break;","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"wuzhzn"},"content":"                case \"delete\":","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"wuzhzn"},"content":"                    System.out.println(\"Noted. I\u0027ve removed this task:\\n \" + tasks.getString(taskNum));","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"wuzhzn"},"content":"                    tasks.removeTask(taskNum);","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"wuzhzn"},"content":"                    UI.printDeleteMessage(tasks, taskNum);","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"wuzhzn"},"content":"                    break;","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"wuzhzn"},"content":"            }","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"wuzhzn"},"content":"            Storage.updateFile(tasks);","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"wuzhzn"},"content":"        } catch (InvalidIndexError e) {","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"wuzhzn"},"content":"            System.out.println(\"Invalid Index provided\");","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"wuzhzn"},"content":"        } catch (EmptyListError e) {","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"wuzhzn"},"content":"            System.out.println(\"There are no tasks in your list\");","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"wuzhzn"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"wuzhzn"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"wuzhzn"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"wuzhzn":54}},{"path":"src/main/java/duke/command/SingleWordCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wuzhzn"},"content":"package duke.command;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"wuzhzn"},"content":"import duke.exception.EmptyListError;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"wuzhzn"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"wuzhzn"},"content":"import duke.ui.UI;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"wuzhzn"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"wuzhzn"},"content":" * Command that has only one string input","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"wuzhzn"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"wuzhzn"},"content":"public class SingleWordCommand extends Command {","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"wuzhzn"},"content":"    public SingleWordCommand(String commandType){","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"wuzhzn"},"content":"        super(commandType);","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"wuzhzn"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"wuzhzn"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"wuzhzn"},"content":"     * Executes the command according to command type","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"wuzhzn"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"wuzhzn"},"content":"     * @param tasks tasklist which contains all the tasks","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"wuzhzn"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"wuzhzn"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"wuzhzn"},"content":"    public void execute(TaskList tasks){","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"wuzhzn"},"content":"        switch (commandType){","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"wuzhzn"},"content":"            case \"list\":","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"wuzhzn"},"content":"                try {","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"wuzhzn"},"content":"                    tasks.printList();","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"wuzhzn"},"content":"                } catch (EmptyListError err){","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"wuzhzn"},"content":"                    System.out.println(\"There is nothing inside the list\");","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"wuzhzn"},"content":"                }","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"wuzhzn"},"content":"                break;","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"wuzhzn"},"content":"            case \"bye\":","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"wuzhzn"},"content":"                UI.showByeMessage();","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"wuzhzn"},"content":"                break;","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"wuzhzn"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"wuzhzn"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"wuzhzn"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"wuzhzn":37}},{"path":"src/main/java/duke/constants/textImage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wuzhzn"},"content":"package duke.constants;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"wuzhzn"},"content":"public class textImage {","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"wuzhzn"},"content":"    public static final String WELCOME_TEXT_IMAGE \u003d \"        ___\\n\" +","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"wuzhzn"},"content":"            \"      _/ ..\\\\\\n\" +","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"wuzhzn"},"content":"            \"     ( \\\\  0/__\\n\" +","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"wuzhzn"},"content":"            \"      \\\\    \\\\__)\\n\" +","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"wuzhzn"},"content":"            \"      /     \\\\\\n\" +","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"wuzhzn"},"content":"            \"     /      _\\\\\\n\" +","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"wuzhzn"},"content":"            \"    `\\\"\\\"\\\"\\\"\\\"``\";","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"wuzhzn"},"content":"    public static final String HORIZONTAL_LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"wuzhzn"},"content":"}","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"wuzhzn":15}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wuzhzn"},"content":"package duke.exception;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"wuzhzn"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"wuzhzn"},"content":"import duke.ui.UI;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"wuzhzn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"wuzhzn"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"wuzhzn"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"wuzhzn"},"content":" * Exception handler class that catches error","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"wuzhzn"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"wuzhzn"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"wuzhzn"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"wuzhzn"},"content":"     * Tries to catch error in the user input","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"wuzhzn"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"wuzhzn"},"content":"     * @param input input that might contain error","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"wuzhzn"},"content":"     * @return boolean of whether there is an error","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"wuzhzn"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"wuzhzn"},"content":"    public static boolean hasError(String input) {","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"wuzhzn"},"content":"        try {","lastModifiedDate":"2023-02-10"},{"lineNumber":22,"author":{"gitId":"wuzhzn"},"content":"            catchError(input);","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"wuzhzn"},"content":"        } catch (UnknownInputFieldError err) {","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"wuzhzn"},"content":"            return true;","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"wuzhzn"},"content":"        } catch (EmptyTaskDescription err) {","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"wuzhzn"},"content":"            return true;","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"wuzhzn"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"wuzhzn"},"content":"        return false;","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"wuzhzn"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":31,"author":{"gitId":"wuzhzn"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"wuzhzn"},"content":"     * Executes the command according to command type","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"wuzhzn"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"wuzhzn"},"content":"     * @param input input that might contain error","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"wuzhzn"},"content":"     * @throws UnknownInputFieldError if error occurred due to unknown user input","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"wuzhzn"},"content":"     * @throws EmptyTaskDescription if error occurred due to lack of task detail","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"wuzhzn"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"wuzhzn"},"content":"    private static void catchError(String input) throws UnknownInputFieldError, EmptyTaskDescription {","lastModifiedDate":"2023-02-10"},{"lineNumber":39,"author":{"gitId":"wuzhzn"},"content":"        String[] inputWords \u003d input.split(\" \");","lastModifiedDate":"2023-02-10"},{"lineNumber":40,"author":{"gitId":"wuzhzn"},"content":"        String command \u003d inputWords[0];","lastModifiedDate":"2023-02-15"},{"lineNumber":41,"author":{"gitId":"wuzhzn"},"content":"        String[] commandArray \u003d {\"todo\", \"deadline\", \"event\", \"list\", \"mark\", \"unmark\", \"delete\", \"bye\", \"find\"};","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"wuzhzn"},"content":"        ArrayList\u003cString\u003e commandList \u003d new ArrayList\u003c\u003e(Arrays.asList(commandArray));","lastModifiedDate":"2023-02-15"},{"lineNumber":43,"author":{"gitId":"wuzhzn"},"content":"        if (!commandList.contains(command)) {","lastModifiedDate":"2023-02-15"},{"lineNumber":44,"author":{"gitId":"wuzhzn"},"content":"            System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"wuzhzn"},"content":"            throw new UnknownInputFieldError();","lastModifiedDate":"2023-02-10"},{"lineNumber":46,"author":{"gitId":"wuzhzn"},"content":"        } else if (command.equals(\"list\") | command.equals(\"bye\")) {","lastModifiedDate":"2023-02-15"},{"lineNumber":47,"author":{"gitId":"wuzhzn"},"content":"        } else if (inputWords.length \u003d\u003d 1) {","lastModifiedDate":"2023-02-10"},{"lineNumber":48,"author":{"gitId":"wuzhzn"},"content":"            System.out.println(\"☹ OOPS!!! The description of a \" + command + \" cannot be empty\");","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"wuzhzn"},"content":"            throw new EmptyTaskDescription();","lastModifiedDate":"2023-02-10"},{"lineNumber":50,"author":{"gitId":"wuzhzn"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":51,"author":{"gitId":"wuzhzn"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":52,"author":{"gitId":"wuzhzn"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"wuzhzn"},"content":"     * Try to catch invalid index provided by user","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"wuzhzn"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"wuzhzn"},"content":"     * @param index input of the task that might be wrongly given","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"wuzhzn"},"content":"     * @throws InvalidIndexError if error occurred due to invalid index provided by user","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"wuzhzn"},"content":"     * @throws EmptyListError if error occurred due to empty list in the tasklist","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"wuzhzn"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"wuzhzn"},"content":"    public static void catchIndexCommandError(int index, TaskList tasks) throws InvalidIndexError, EmptyListError {","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"wuzhzn"},"content":"        if (index \u003c 0 | index \u003e tasks.sizeOfList()){","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"wuzhzn"},"content":"            throw new InvalidIndexError();","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"wuzhzn"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"wuzhzn"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"wuzhzn"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"wuzhzn":64}},{"path":"src/main/java/duke/exception/EmptyListError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wuzhzn"},"content":"package duke.exception;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"wuzhzn"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"wuzhzn"},"content":" * Error occurs when there is an empty list in the","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"wuzhzn"},"content":" * task-list","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"wuzhzn"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"wuzhzn"},"content":"public class EmptyListError extends Exception {","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"wuzhzn"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"wuzhzn":8}},{"path":"src/main/java/duke/exception/EmptyTaskDescription.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wuzhzn"},"content":"package duke.exception;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"wuzhzn"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"wuzhzn"},"content":" * Error occurs when there is no task description given by user","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"wuzhzn"},"content":" * for commands that requires it","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"wuzhzn"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"wuzhzn"},"content":"public class EmptyTaskDescription extends Exception {","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"wuzhzn"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"wuzhzn":8}},{"path":"src/main/java/duke/exception/InvalidIndexError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wuzhzn"},"content":"package duke.exception;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"wuzhzn"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"wuzhzn"},"content":" * Error occurs when there is an invalid index provided by the user","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"wuzhzn"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"wuzhzn"},"content":"public class InvalidIndexError extends Exception{","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"wuzhzn"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"wuzhzn":7}},{"path":"src/main/java/duke/exception/UnknownInputFieldError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wuzhzn"},"content":"package duke.exception;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"wuzhzn"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"wuzhzn"},"content":" * Error occurs when there is an unknown user input that is not a commmand","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"wuzhzn"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"wuzhzn"},"content":"public class UnknownInputFieldError extends Exception {","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"wuzhzn"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"wuzhzn":7}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wuzhzn"},"content":"package duke.parser;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"wuzhzn"},"content":"import duke.command.*;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"wuzhzn"},"content":"import duke.exception.InvalidIndexError;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"wuzhzn"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"wuzhzn"},"content":"import duke.task.Event;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"wuzhzn"},"content":"import duke.task.Task;","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"wuzhzn"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"wuzhzn"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"wuzhzn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"wuzhzn"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"wuzhzn"},"content":"import java.util.List;","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"wuzhzn"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"wuzhzn"},"content":" * Parser that handles the user inputs","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"wuzhzn"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"wuzhzn"},"content":"public interface Parser {","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"wuzhzn"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"wuzhzn"},"content":"     * Handles the various command type and parse accordingly","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"wuzhzn"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"wuzhzn"},"content":"     * @param input the information that requires parsing","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"wuzhzn"},"content":"     * @return command type that would represent what to execute","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"wuzhzn"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"wuzhzn"},"content":"    public static Command parse(String input) throws NumberFormatException{","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"wuzhzn"},"content":"        String[] inputWords \u003d input.split(\" \");","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"wuzhzn"},"content":"        String command \u003d inputWords[0];","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"wuzhzn"},"content":"        String taskField \u003d input.replaceFirst(command, \"\").trim();","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"wuzhzn"},"content":"        List\u003cString\u003e addCommands \u003d Arrays.asList(\"todo\", \"deadline\", \"event\");","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"wuzhzn"},"content":"        List\u003cString\u003e indexCommands \u003d Arrays.asList(\"mark\", \"unmark\", \"delete\");","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"wuzhzn"},"content":"        if (addCommands.contains(command)){","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"wuzhzn"},"content":"            AddCommand addCommand \u003d new AddCommand(command, taskField);","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"wuzhzn"},"content":"            return addCommand;","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"wuzhzn"},"content":"        } else if (indexCommands.contains(command)) {","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"wuzhzn"},"content":"            int taskNum \u003d Integer.parseInt(inputWords[1]) - 1;","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"wuzhzn"},"content":"            IndexCommand indexCommand \u003d new IndexCommand(command, taskNum);","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"wuzhzn"},"content":"            return indexCommand;","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"wuzhzn"},"content":"        } else if (command.equals(\"find\")){","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"wuzhzn"},"content":"            String keyword \u003d inputWords[1];","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"wuzhzn"},"content":"            FindCommand findCommand \u003d new FindCommand(command, keyword);","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"wuzhzn"},"content":"            return findCommand;","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"wuzhzn"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"wuzhzn"},"content":"        SingleWordCommand singleWordCommand \u003d new SingleWordCommand(command);","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"wuzhzn"},"content":"        return singleWordCommand;","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"wuzhzn"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"wuzhzn"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"wuzhzn"},"content":"     * Handles the deadline task and parse accordingly","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"wuzhzn"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"wuzhzn"},"content":"     * @param taskField the information that requires parsing","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"wuzhzn"},"content":"     * @return list of string that contains the details of the deadline task","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"wuzhzn"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"wuzhzn"},"content":"    public static List\u003cString\u003e parseDeadline(String taskField){","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"wuzhzn"},"content":"        taskField \u003d taskField.replaceFirst(\"deadline\", \"\").trim();","lastModifiedDate":"2023-03-01"},{"lineNumber":56,"author":{"gitId":"wuzhzn"},"content":"        int indexOfSlash \u003d taskField.indexOf(\"/\");","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"wuzhzn"},"content":"        String taskName \u003d taskField.substring(0, indexOfSlash - 1);","lastModifiedDate":"2023-03-01"},{"lineNumber":58,"author":{"gitId":"wuzhzn"},"content":"        String by \u003d taskField.substring(indexOfSlash + 4);","lastModifiedDate":"2023-03-01"},{"lineNumber":59,"author":{"gitId":"wuzhzn"},"content":"        List\u003cString\u003e taskFieldList \u003d Arrays.asList(taskName, by);","lastModifiedDate":"2023-03-01"},{"lineNumber":60,"author":{"gitId":"wuzhzn"},"content":"        return taskFieldList;","lastModifiedDate":"2023-03-01"},{"lineNumber":61,"author":{"gitId":"wuzhzn"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":62,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":63,"author":{"gitId":"wuzhzn"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":64,"author":{"gitId":"wuzhzn"},"content":"     * Handles the event task and parse accordingly","lastModifiedDate":"2023-03-01"},{"lineNumber":65,"author":{"gitId":"wuzhzn"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":66,"author":{"gitId":"wuzhzn"},"content":"     * @param taskField the information that requires parsing","lastModifiedDate":"2023-03-01"},{"lineNumber":67,"author":{"gitId":"wuzhzn"},"content":"     * @return list of string that contains the details of the event task","lastModifiedDate":"2023-03-01"},{"lineNumber":68,"author":{"gitId":"wuzhzn"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":69,"author":{"gitId":"wuzhzn"},"content":"    public static List\u003cString\u003e parseEvent(String taskField){","lastModifiedDate":"2023-03-01"},{"lineNumber":70,"author":{"gitId":"wuzhzn"},"content":"        taskField \u003d taskField.replaceFirst(\"event\", \"\").trim();","lastModifiedDate":"2023-03-01"},{"lineNumber":71,"author":{"gitId":"wuzhzn"},"content":"        int indexOfSlash \u003d taskField.indexOf(\"/\");","lastModifiedDate":"2023-03-01"},{"lineNumber":72,"author":{"gitId":"wuzhzn"},"content":"        int lastIndexOfSlash \u003d taskField.lastIndexOf(\"/\");","lastModifiedDate":"2023-03-01"},{"lineNumber":73,"author":{"gitId":"wuzhzn"},"content":"        String taskName \u003d taskField.substring(0, indexOfSlash - 1);","lastModifiedDate":"2023-03-01"},{"lineNumber":74,"author":{"gitId":"wuzhzn"},"content":"        String start \u003d taskField.substring(indexOfSlash + 6, lastIndexOfSlash - 1);","lastModifiedDate":"2023-03-01"},{"lineNumber":75,"author":{"gitId":"wuzhzn"},"content":"        String end \u003d taskField.substring(lastIndexOfSlash + 4);","lastModifiedDate":"2023-03-01"},{"lineNumber":76,"author":{"gitId":"wuzhzn"},"content":"        List\u003cString\u003e taskFieldList \u003d Arrays.asList(taskName, start, end);","lastModifiedDate":"2023-03-01"},{"lineNumber":77,"author":{"gitId":"wuzhzn"},"content":"        return taskFieldList;","lastModifiedDate":"2023-03-01"},{"lineNumber":78,"author":{"gitId":"wuzhzn"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":79,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":80,"author":{"gitId":"wuzhzn"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":81,"author":{"gitId":"wuzhzn"},"content":"     * Parses the text file line","lastModifiedDate":"2023-03-01"},{"lineNumber":82,"author":{"gitId":"wuzhzn"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":83,"author":{"gitId":"wuzhzn"},"content":"     * @param textLine the line of information to be parsed into task details","lastModifiedDate":"2023-03-01"},{"lineNumber":84,"author":{"gitId":"wuzhzn"},"content":"     * @return a task object with all its details","lastModifiedDate":"2023-03-01"},{"lineNumber":85,"author":{"gitId":"wuzhzn"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":86,"author":{"gitId":"wuzhzn"},"content":"    public static Task parseTextFile(String textLine){","lastModifiedDate":"2023-03-01"},{"lineNumber":87,"author":{"gitId":"wuzhzn"},"content":"        String[] textLineArray \u003d textLine.split(\" \");","lastModifiedDate":"2023-03-01"},{"lineNumber":88,"author":{"gitId":"wuzhzn"},"content":"        switch (textLineArray[0]) {","lastModifiedDate":"2023-03-01"},{"lineNumber":89,"author":{"gitId":"wuzhzn"},"content":"            case \"T\":","lastModifiedDate":"2023-03-01"},{"lineNumber":90,"author":{"gitId":"wuzhzn"},"content":"                String taskName \u003d textLine.substring(8);","lastModifiedDate":"2023-03-01"},{"lineNumber":91,"author":{"gitId":"wuzhzn"},"content":"                Todo todo \u003d new Todo(taskName, \"T\");","lastModifiedDate":"2023-03-01"},{"lineNumber":92,"author":{"gitId":"wuzhzn"},"content":"                if (textLineArray[2].equals(\"1\")) {","lastModifiedDate":"2023-03-01"},{"lineNumber":93,"author":{"gitId":"wuzhzn"},"content":"                    todo.markAsDone();","lastModifiedDate":"2023-03-01"},{"lineNumber":94,"author":{"gitId":"wuzhzn"},"content":"                }","lastModifiedDate":"2023-03-01"},{"lineNumber":95,"author":{"gitId":"wuzhzn"},"content":"                return todo;","lastModifiedDate":"2023-03-01"},{"lineNumber":96,"author":{"gitId":"wuzhzn"},"content":"            case \"D\":","lastModifiedDate":"2023-03-01"},{"lineNumber":97,"author":{"gitId":"wuzhzn"},"content":"                textLine \u003d textLine.substring(8);","lastModifiedDate":"2023-03-01"},{"lineNumber":98,"author":{"gitId":"wuzhzn"},"content":"                int indexOfBoundary \u003d textLine.indexOf(\"|\");","lastModifiedDate":"2023-03-01"},{"lineNumber":99,"author":{"gitId":"wuzhzn"},"content":"                taskName \u003d textLine.substring(0, indexOfBoundary - 1);","lastModifiedDate":"2023-03-01"},{"lineNumber":100,"author":{"gitId":"wuzhzn"},"content":"                String by \u003d textLine.substring(indexOfBoundary + 2);","lastModifiedDate":"2023-03-01"},{"lineNumber":101,"author":{"gitId":"wuzhzn"},"content":"                Deadline deadline \u003d new Deadline(taskName, \"D\", by);","lastModifiedDate":"2023-03-01"},{"lineNumber":102,"author":{"gitId":"wuzhzn"},"content":"                if (textLineArray[2].equals(\"1\")) {","lastModifiedDate":"2023-03-01"},{"lineNumber":103,"author":{"gitId":"wuzhzn"},"content":"                    deadline.markAsDone();","lastModifiedDate":"2023-03-01"},{"lineNumber":104,"author":{"gitId":"wuzhzn"},"content":"                }","lastModifiedDate":"2023-03-01"},{"lineNumber":105,"author":{"gitId":"wuzhzn"},"content":"                return deadline;","lastModifiedDate":"2023-03-01"},{"lineNumber":106,"author":{"gitId":"wuzhzn"},"content":"            case \"E\":","lastModifiedDate":"2023-03-01"},{"lineNumber":107,"author":{"gitId":"wuzhzn"},"content":"                textLine \u003d textLine.substring(8);","lastModifiedDate":"2023-03-01"},{"lineNumber":108,"author":{"gitId":"wuzhzn"},"content":"                indexOfBoundary \u003d textLine.indexOf(\"|\");","lastModifiedDate":"2023-03-01"},{"lineNumber":109,"author":{"gitId":"wuzhzn"},"content":"                int lastIndexOfBoundary \u003d textLine.lastIndexOf(\"|\");","lastModifiedDate":"2023-03-01"},{"lineNumber":110,"author":{"gitId":"wuzhzn"},"content":"                taskName \u003d textLine.substring(0, indexOfBoundary - 1);","lastModifiedDate":"2023-03-01"},{"lineNumber":111,"author":{"gitId":"wuzhzn"},"content":"                String from \u003d textLine.substring(indexOfBoundary + 2, lastIndexOfBoundary - 1);","lastModifiedDate":"2023-03-01"},{"lineNumber":112,"author":{"gitId":"wuzhzn"},"content":"                String to \u003d textLine.substring(lastIndexOfBoundary + 2);","lastModifiedDate":"2023-03-01"},{"lineNumber":113,"author":{"gitId":"wuzhzn"},"content":"                Event event \u003d new Event(taskName, \"E\", from, to);","lastModifiedDate":"2023-03-01"},{"lineNumber":114,"author":{"gitId":"wuzhzn"},"content":"                if (textLineArray[2].equals(\"1\")) {","lastModifiedDate":"2023-03-01"},{"lineNumber":115,"author":{"gitId":"wuzhzn"},"content":"                    event.markAsDone();","lastModifiedDate":"2023-03-01"},{"lineNumber":116,"author":{"gitId":"wuzhzn"},"content":"                }","lastModifiedDate":"2023-03-01"},{"lineNumber":117,"author":{"gitId":"wuzhzn"},"content":"                return event;","lastModifiedDate":"2023-03-01"},{"lineNumber":118,"author":{"gitId":"wuzhzn"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":119,"author":{"gitId":"wuzhzn"},"content":"        return null;","lastModifiedDate":"2023-03-01"},{"lineNumber":120,"author":{"gitId":"wuzhzn"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":121,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":122,"author":{"gitId":"wuzhzn"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"wuzhzn":122}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wuzhzn"},"content":"package duke.storage;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"wuzhzn"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"wuzhzn"},"content":"import duke.task.Task;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"wuzhzn"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"wuzhzn"},"content":"import java.io.File;","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"wuzhzn"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"wuzhzn"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"wuzhzn"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"wuzhzn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"wuzhzn"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"wuzhzn"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"wuzhzn"},"content":" * Format of tasks in txt file:","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"wuzhzn"},"content":" * For todo task:","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"wuzhzn"},"content":" * T | (status) | task-description","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"wuzhzn"},"content":" * For deadline task:","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"wuzhzn"},"content":" * D | (status) | task-description | by","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"wuzhzn"},"content":" * For event task:","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"wuzhzn"},"content":" * E | (status) | task-description | start | end","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"wuzhzn"},"content":" *","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"wuzhzn"},"content":" * where status can be marked or unmarked (1 / 0 )","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"wuzhzn"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"wuzhzn"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"wuzhzn"},"content":" * Storage that handles the data from text file","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"wuzhzn"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"wuzhzn"},"content":"public class Storage {","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"wuzhzn"},"content":"    private static final String dirPath \u003d \"data\";","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"wuzhzn"},"content":"    private static final String filePath \u003d \"data/duke.txt\";","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"wuzhzn"},"content":"    private static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"wuzhzn"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"wuzhzn"},"content":"     * Check for file access and load the data from the text file","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"wuzhzn"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"wuzhzn"},"content":"     * @return the task list saved on the file","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"wuzhzn"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"wuzhzn"},"content":"    public static ArrayList\u003cTask\u003e storageInit() {","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"wuzhzn"},"content":"        try {","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"wuzhzn"},"content":"            checkFileAccess();","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"wuzhzn"},"content":"            load();","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"wuzhzn"},"content":"        } catch (FileNotFoundException err) {","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"wuzhzn"},"content":"            System.out.println(\"File not Found\");","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"wuzhzn"},"content":"        } catch (IOException err) {","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"wuzhzn"},"content":"            System.out.println(\"Something went wrong: \" + err.getMessage());","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"wuzhzn"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"wuzhzn"},"content":"        return tasks;","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"wuzhzn"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"wuzhzn"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"wuzhzn"},"content":"     * Updates tasklist with data from existing save file if it exists","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"wuzhzn"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"wuzhzn"},"content":"     * @throws FileNotFoundException if unable to access the text file","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"wuzhzn"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":56,"author":{"gitId":"wuzhzn"},"content":"    public static void load() throws FileNotFoundException {","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"wuzhzn"},"content":"        File file \u003d new File(filePath); // create a File for the given file path","lastModifiedDate":"2023-02-15"},{"lineNumber":58,"author":{"gitId":"wuzhzn"},"content":"        Scanner s \u003d new Scanner(file); // create a Scanner using the File as the source","lastModifiedDate":"2023-02-15"},{"lineNumber":59,"author":{"gitId":"wuzhzn"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2023-02-13"},{"lineNumber":60,"author":{"gitId":"wuzhzn"},"content":"            String textLine \u003d s.nextLine();","lastModifiedDate":"2023-02-13"},{"lineNumber":61,"author":{"gitId":"wuzhzn"},"content":"            tasks.add(Parser.parseTextFile(textLine));","lastModifiedDate":"2023-03-01"},{"lineNumber":62,"author":{"gitId":"wuzhzn"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":63,"author":{"gitId":"wuzhzn"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":64,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":65,"author":{"gitId":"wuzhzn"},"content":"    public static void writeToFile(String textToAdd) throws IOException {","lastModifiedDate":"2023-02-15"},{"lineNumber":66,"author":{"gitId":"wuzhzn"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2023-02-14"},{"lineNumber":67,"author":{"gitId":"wuzhzn"},"content":"        fw.write(textToAdd);","lastModifiedDate":"2023-02-14"},{"lineNumber":68,"author":{"gitId":"wuzhzn"},"content":"        fw.close();","lastModifiedDate":"2023-02-14"},{"lineNumber":69,"author":{"gitId":"wuzhzn"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":70,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":71,"author":{"gitId":"wuzhzn"},"content":"    public static void appendToFile(String textToAppend) throws IOException {","lastModifiedDate":"2023-02-15"},{"lineNumber":72,"author":{"gitId":"wuzhzn"},"content":"        FileWriter fw \u003d new FileWriter(filePath, true);","lastModifiedDate":"2023-02-28"},{"lineNumber":73,"author":{"gitId":"wuzhzn"},"content":"        fw.write(textToAppend);","lastModifiedDate":"2023-02-14"},{"lineNumber":74,"author":{"gitId":"wuzhzn"},"content":"        fw.close();","lastModifiedDate":"2023-02-14"},{"lineNumber":75,"author":{"gitId":"wuzhzn"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":76,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":77,"author":{"gitId":"wuzhzn"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":78,"author":{"gitId":"wuzhzn"},"content":"     * Creates a new directory and text file if it does not exist","lastModifiedDate":"2023-03-01"},{"lineNumber":79,"author":{"gitId":"wuzhzn"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":80,"author":{"gitId":"wuzhzn"},"content":"     * @throws IOException if error occurs during file creation/access checking","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"wuzhzn"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":82,"author":{"gitId":"wuzhzn"},"content":"    public static void checkFileAccess() throws IOException {","lastModifiedDate":"2023-02-15"},{"lineNumber":83,"author":{"gitId":"wuzhzn"},"content":"        File dir \u003d new File(dirPath);","lastModifiedDate":"2023-02-15"},{"lineNumber":84,"author":{"gitId":"wuzhzn"},"content":"        if (!dir.exists()) {","lastModifiedDate":"2023-02-15"},{"lineNumber":85,"author":{"gitId":"wuzhzn"},"content":"            dir.mkdir();","lastModifiedDate":"2023-02-15"},{"lineNumber":86,"author":{"gitId":"wuzhzn"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":87,"author":{"gitId":"wuzhzn"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2023-02-15"},{"lineNumber":88,"author":{"gitId":"wuzhzn"},"content":"        if (!f.exists()) {","lastModifiedDate":"2023-02-15"},{"lineNumber":89,"author":{"gitId":"wuzhzn"},"content":"            f.createNewFile();","lastModifiedDate":"2023-02-15"},{"lineNumber":90,"author":{"gitId":"wuzhzn"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":91,"author":{"gitId":"wuzhzn"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":92,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":93,"author":{"gitId":"wuzhzn"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":94,"author":{"gitId":"wuzhzn"},"content":"     * Updates the text file with data from the tasklist","lastModifiedDate":"2023-03-01"},{"lineNumber":95,"author":{"gitId":"wuzhzn"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":96,"author":{"gitId":"wuzhzn"},"content":"     * @param tasks the task-list that contains all the tasks","lastModifiedDate":"2023-03-01"},{"lineNumber":97,"author":{"gitId":"wuzhzn"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":98,"author":{"gitId":"wuzhzn"},"content":"    public static void updateFile(TaskList tasks) {","lastModifiedDate":"2023-03-01"},{"lineNumber":99,"author":{"gitId":"wuzhzn"},"content":"        ArrayList\u003cTask\u003e tasksList \u003d tasks.returnTasks();","lastModifiedDate":"2023-03-01"},{"lineNumber":100,"author":{"gitId":"wuzhzn"},"content":"        try {","lastModifiedDate":"2023-03-01"},{"lineNumber":101,"author":{"gitId":"wuzhzn"},"content":"            writeToFile(\"\");","lastModifiedDate":"2023-03-01"},{"lineNumber":102,"author":{"gitId":"wuzhzn"},"content":"            for (Task task : tasksList) {","lastModifiedDate":"2023-03-03"},{"lineNumber":103,"author":{"gitId":"wuzhzn"},"content":"                appendToFile(task.textToSave() + System.lineSeparator());","lastModifiedDate":"2023-03-03"},{"lineNumber":104,"author":{"gitId":"wuzhzn"},"content":"            }","lastModifiedDate":"2023-03-01"},{"lineNumber":105,"author":{"gitId":"wuzhzn"},"content":"        } catch (IOException err) {","lastModifiedDate":"2023-03-01"},{"lineNumber":106,"author":{"gitId":"wuzhzn"},"content":"            System.out.println(\"Something went wrong: \" + err.getMessage());","lastModifiedDate":"2023-03-01"},{"lineNumber":107,"author":{"gitId":"wuzhzn"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":108,"author":{"gitId":"wuzhzn"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":109,"author":{"gitId":"wuzhzn"},"content":"}","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"wuzhzn":109}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wuzhzn"},"content":"package duke.task;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"wuzhzn"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"wuzhzn"},"content":" * Represents a deadline Task","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"wuzhzn"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"wuzhzn"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"wuzhzn"},"content":"    protected String by;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"wuzhzn"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"wuzhzn"},"content":"     * Constructor for a deadline task","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"wuzhzn"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"wuzhzn"},"content":"     * @param description the description of the deadline task","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"wuzhzn"},"content":"     * @param taskType the type of task","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"wuzhzn"},"content":"     * @param by the timing which the task is due","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"wuzhzn"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"wuzhzn"},"content":"    public Deadline(String description, String taskType, String by) {","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"wuzhzn"},"content":"        super(description, taskType);","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"wuzhzn"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"wuzhzn"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"wuzhzn"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"wuzhzn"},"content":"     * Output the deadline task and its details","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"wuzhzn"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"wuzhzn"},"content":"     * @return the type, status, description and timing which the task is due","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"wuzhzn"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"wuzhzn"},"content":"    @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"wuzhzn"},"content":"    public String toString() {","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"wuzhzn"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"wuzhzn"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"wuzhzn"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"wuzhzn"},"content":"     * Represents the details of the deadline task to be saved on the text file","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"wuzhzn"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"wuzhzn"},"content":"     * @return the type, status, description and timing which the task is due","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"wuzhzn"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"wuzhzn"},"content":"    @Override","lastModifiedDate":"2023-02-14"},{"lineNumber":36,"author":{"gitId":"wuzhzn"},"content":"    public String textToSave() {","lastModifiedDate":"2023-02-14"},{"lineNumber":37,"author":{"gitId":"wuzhzn"},"content":"        return \"D | \" + (super.isDone ? 1 : 0) + \" | \" + super.description + \" | \" + by;","lastModifiedDate":"2023-02-14"},{"lineNumber":38,"author":{"gitId":"wuzhzn"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":39,"author":{"gitId":"wuzhzn"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"wuzhzn":39}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wuzhzn"},"content":"package duke.task;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"wuzhzn"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"wuzhzn"},"content":" * Represents a event Task","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"wuzhzn"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"wuzhzn"},"content":"public class Event extends Task {","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"wuzhzn"},"content":"    protected String start;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"wuzhzn"},"content":"    protected String end;","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"wuzhzn"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"wuzhzn"},"content":"     * Constructor for an event task","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"wuzhzn"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"wuzhzn"},"content":"     * @param description the description of the event task","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"wuzhzn"},"content":"     * @param taskType the type of task","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"wuzhzn"},"content":"     * @param start the start timing of the event task","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"wuzhzn"},"content":"     * @param end the end timing of the event task","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"wuzhzn"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"wuzhzn"},"content":"    public Event(String description, String taskType, String start, String end) {","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"wuzhzn"},"content":"        super(description, taskType);","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"wuzhzn"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"wuzhzn"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"wuzhzn"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"wuzhzn"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"wuzhzn"},"content":"     * Output the event task and its details","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"wuzhzn"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"wuzhzn"},"content":"     * @return the type, status, description and the period of the event task","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"wuzhzn"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"wuzhzn"},"content":"    @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"wuzhzn"},"content":"    public String toString() {","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"wuzhzn"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + start + \" to: \" + end + \")\";","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"wuzhzn"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":34,"author":{"gitId":"wuzhzn"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"wuzhzn"},"content":"     * Represents the details of the event task to be saved on the text file","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"wuzhzn"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"wuzhzn"},"content":"     * @return the type, status, description and period of the event task","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"wuzhzn"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"wuzhzn"},"content":"    @Override","lastModifiedDate":"2023-02-14"},{"lineNumber":40,"author":{"gitId":"wuzhzn"},"content":"    public String textToSave() {","lastModifiedDate":"2023-02-14"},{"lineNumber":41,"author":{"gitId":"wuzhzn"},"content":"        return \"E | \" + (super.isDone ? 1 : 0) + \" | \" + super.description + \" | \" + start + \" | \" + end;","lastModifiedDate":"2023-02-14"},{"lineNumber":42,"author":{"gitId":"wuzhzn"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":43,"author":{"gitId":"wuzhzn"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"wuzhzn":43}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wuzhzn"},"content":"package duke.task;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"wuzhzn"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"wuzhzn"},"content":" * Represents a general task. All task objects have their specific types , status","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"wuzhzn"},"content":" * and their task descriptions","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"wuzhzn"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"wuzhzn"},"content":"public abstract class Task {","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"wuzhzn"},"content":"    public String description;","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"wuzhzn"},"content":"    protected String taskType;","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"wuzhzn"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"wuzhzn"},"content":"    public Task(String description, String taskType) {","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"wuzhzn"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"wuzhzn"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"wuzhzn"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"wuzhzn"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"wuzhzn"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"wuzhzn"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"wuzhzn"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"wuzhzn"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"wuzhzn"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"wuzhzn"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"wuzhzn"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"wuzhzn"},"content":"     * Getter function of the status icon","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"wuzhzn"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"wuzhzn"},"content":"     * @return \"[X]\" if it is done and \"[]\" if it is not done","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"wuzhzn"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"wuzhzn"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"wuzhzn"},"content":"        return (isDone ? \"[X]\" : \"[]\");","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"wuzhzn"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":37,"author":{"gitId":"wuzhzn"},"content":"    public String toString() {","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"wuzhzn"},"content":"        return getStatusIcon() + \" \" + description;","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"wuzhzn"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":42,"author":{"gitId":"wuzhzn"},"content":"    public String textToSave() {","lastModifiedDate":"2023-02-14"},{"lineNumber":43,"author":{"gitId":"wuzhzn"},"content":"        return \"\";","lastModifiedDate":"2023-02-14"},{"lineNumber":44,"author":{"gitId":"wuzhzn"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":45,"author":{"gitId":"wuzhzn"},"content":"}","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"wuzhzn":47}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wuzhzn"},"content":"package duke.task;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"wuzhzn"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"wuzhzn"},"content":" * Represents a todo Task","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"wuzhzn"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"wuzhzn"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"wuzhzn"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"wuzhzn"},"content":"     * Constructor for a todo task","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"wuzhzn"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"wuzhzn"},"content":"     * @param description the description of the todo task","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"wuzhzn"},"content":"     * @param taskType the type of task","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"wuzhzn"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"wuzhzn"},"content":"    public Todo(String description, String taskType) {","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"wuzhzn"},"content":"        super(description, taskType);","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"wuzhzn"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"wuzhzn"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"wuzhzn"},"content":"     * Output the todo task and its details","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"wuzhzn"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"wuzhzn"},"content":"     * @return the type, status, description of the todo task","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"wuzhzn"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"wuzhzn"},"content":"    @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"wuzhzn"},"content":"    public String toString() {","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"wuzhzn"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"wuzhzn"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":29,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"wuzhzn"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"wuzhzn"},"content":"     * Represents the details of the todo task to be saved on the text file","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"wuzhzn"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"wuzhzn"},"content":"     * @return the type, status, description of the todo task","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"wuzhzn"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"wuzhzn"},"content":"    @Override","lastModifiedDate":"2023-02-14"},{"lineNumber":36,"author":{"gitId":"wuzhzn"},"content":"    public String textToSave() {","lastModifiedDate":"2023-02-14"},{"lineNumber":37,"author":{"gitId":"wuzhzn"},"content":"        return \"T | \" + (super.isDone ? 1 : 0) + \" | \" + super.description;","lastModifiedDate":"2023-02-14"},{"lineNumber":38,"author":{"gitId":"wuzhzn"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":39,"author":{"gitId":"wuzhzn"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"wuzhzn":39}},{"path":"src/main/java/duke/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wuzhzn"},"content":"package duke.tasklist;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"wuzhzn"},"content":"import duke.exception.EmptyListError;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"wuzhzn"},"content":"import duke.exception.InvalidIndexError;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"wuzhzn"},"content":"import duke.task.Task;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"wuzhzn"},"content":"import duke.ui.UI;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"wuzhzn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"wuzhzn"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"wuzhzn"},"content":" * Array List that keep tracks of all the tasks","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"wuzhzn"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"wuzhzn"},"content":"public class TaskList {","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"wuzhzn"},"content":"    private ArrayList\u003cTask\u003e tasksList;","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"wuzhzn"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasksList) {","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"wuzhzn"},"content":"        this.tasksList \u003d tasksList;","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"wuzhzn"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"wuzhzn"},"content":"    public void addToList(Task task) {","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"wuzhzn"},"content":"        tasksList.add(task);","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"wuzhzn"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"wuzhzn"},"content":"    public int sizeOfList() throws EmptyListError {","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"wuzhzn"},"content":"        if (tasksList.isEmpty()){","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"wuzhzn"},"content":"            throw new EmptyListError();","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"wuzhzn"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"wuzhzn"},"content":"        return tasksList.size();","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"wuzhzn"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"wuzhzn"},"content":"    public void mark(int index) {","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"wuzhzn"},"content":"        tasksList.get(index).markAsDone();","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"wuzhzn"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"wuzhzn"},"content":"    public void unmark(int index){","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"wuzhzn"},"content":"        tasksList.get(index).markAsUndone();","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"wuzhzn"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"wuzhzn"},"content":"    public String getStatus(int index){","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"wuzhzn"},"content":"        return tasksList.get(index).getStatusIcon();","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"wuzhzn"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"wuzhzn"},"content":"    public String getDescription(int index){","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"wuzhzn"},"content":"        return tasksList.get(index).description;","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"wuzhzn"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"wuzhzn"},"content":"    public void removeTask(int index){","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"wuzhzn"},"content":"        tasksList.remove(index);","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"wuzhzn"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"wuzhzn"},"content":"    public String getString(int index) throws EmptyListError{","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"wuzhzn"},"content":"        if (tasksList.isEmpty()){","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"wuzhzn"},"content":"            throw new EmptyListError();","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"wuzhzn"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"wuzhzn"},"content":"        return tasksList.get(index).toString();","lastModifiedDate":"2023-02-28"},{"lineNumber":56,"author":{"gitId":"wuzhzn"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":57,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":58,"author":{"gitId":"wuzhzn"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":59,"author":{"gitId":"wuzhzn"},"content":"     * Prints the current task-list","lastModifiedDate":"2023-03-01"},{"lineNumber":60,"author":{"gitId":"wuzhzn"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":61,"author":{"gitId":"wuzhzn"},"content":"     * @throws EmptyListError if error occurred due to having an empty list","lastModifiedDate":"2023-03-01"},{"lineNumber":62,"author":{"gitId":"wuzhzn"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":63,"author":{"gitId":"wuzhzn"},"content":"    public void printList() throws EmptyListError {","lastModifiedDate":"2023-02-28"},{"lineNumber":64,"author":{"gitId":"wuzhzn"},"content":"        if (tasksList.isEmpty()) {","lastModifiedDate":"2023-02-28"},{"lineNumber":65,"author":{"gitId":"wuzhzn"},"content":"            throw new EmptyListError();","lastModifiedDate":"2023-02-28"},{"lineNumber":66,"author":{"gitId":"wuzhzn"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":67,"author":{"gitId":"wuzhzn"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-03-01"},{"lineNumber":68,"author":{"gitId":"wuzhzn"},"content":"        UI.printList(returnTasks());","lastModifiedDate":"2023-03-01"},{"lineNumber":69,"author":{"gitId":"wuzhzn"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":70,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":71,"author":{"gitId":"wuzhzn"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":72,"author":{"gitId":"wuzhzn"},"content":"     * Prints the list of tasks based on a keyword","lastModifiedDate":"2023-03-01"},{"lineNumber":73,"author":{"gitId":"wuzhzn"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":74,"author":{"gitId":"wuzhzn"},"content":"     * @param keyword the word that user use to search amongst the tasks","lastModifiedDate":"2023-03-01"},{"lineNumber":75,"author":{"gitId":"wuzhzn"},"content":"     * @throws EmptyListError if error occurred due to having an empty list","lastModifiedDate":"2023-03-01"},{"lineNumber":76,"author":{"gitId":"wuzhzn"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":77,"author":{"gitId":"wuzhzn"},"content":"    public void findInList(String keyword) throws EmptyListError{","lastModifiedDate":"2023-03-01"},{"lineNumber":78,"author":{"gitId":"wuzhzn"},"content":"        if (tasksList.isEmpty()) {","lastModifiedDate":"2023-03-01"},{"lineNumber":79,"author":{"gitId":"wuzhzn"},"content":"            throw new EmptyListError();","lastModifiedDate":"2023-03-01"},{"lineNumber":80,"author":{"gitId":"wuzhzn"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":81,"author":{"gitId":"wuzhzn"},"content":"        UI.printFindInList(tasksList, keyword);","lastModifiedDate":"2023-03-01"},{"lineNumber":82,"author":{"gitId":"wuzhzn"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":83,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":84,"author":{"gitId":"wuzhzn"},"content":"    public ArrayList\u003cTask\u003e returnTasks(){","lastModifiedDate":"2023-02-28"},{"lineNumber":85,"author":{"gitId":"wuzhzn"},"content":"        return tasksList;","lastModifiedDate":"2023-02-28"},{"lineNumber":86,"author":{"gitId":"wuzhzn"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":87,"author":{"gitId":"wuzhzn"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"wuzhzn":87}},{"path":"src/main/java/duke/ui/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wuzhzn"},"content":"package duke.ui;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"wuzhzn"},"content":"import duke.constants.textImage;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"wuzhzn"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"wuzhzn"},"content":"import duke.exception.EmptyListError;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"wuzhzn"},"content":"import duke.task.Task;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"wuzhzn"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"wuzhzn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"wuzhzn"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"wuzhzn"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"wuzhzn"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"wuzhzn"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"wuzhzn"},"content":" * UI which deals with interactions with the user","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"wuzhzn"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"wuzhzn"},"content":"public interface UI {","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"wuzhzn"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"wuzhzn"},"content":"     * Prints the task that had been added recently, and the updated number","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"wuzhzn"},"content":"     * of tasks in the current task-list","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"wuzhzn"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"wuzhzn"},"content":"     * @param task the newly added task","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"wuzhzn"},"content":"     * @param tasks the current task-list","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"wuzhzn"},"content":"     * @throws EmptyListError if error occurred due to empty list","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"wuzhzn"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"wuzhzn"},"content":"    public static void printAddedTask(Task task, TaskList tasks){","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"wuzhzn"},"content":"        try {","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"wuzhzn"},"content":"            System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"wuzhzn"},"content":"            System.out.println(\" \" + task);","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"wuzhzn"},"content":"            System.out.println(\"Now you have \" + tasks.sizeOfList() + \" tasks in the list.\");","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"wuzhzn"},"content":"        } catch (EmptyListError err){","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"wuzhzn"},"content":"            System.out.println(\"The task-list is empty\");","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"wuzhzn"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"wuzhzn"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":36,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":37,"author":{"gitId":"wuzhzn"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"wuzhzn"},"content":"     * Prints all tasks stored in the task-list","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"wuzhzn"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"wuzhzn"},"content":"     * @param tasks the current task-list","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"wuzhzn"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"wuzhzn"},"content":"    public static void printList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"wuzhzn"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"wuzhzn"},"content":"            System.out.println((i + 1) + \".\" + tasks.get(i).toString());    }","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"wuzhzn"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"wuzhzn"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"wuzhzn"},"content":"     * Prints the status of task (marked as done or unmarked)","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"wuzhzn"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"wuzhzn"},"content":"     * @param tasks the current task-list","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"wuzhzn"},"content":"     * @param taskNum the index of the task to be marked/unmarked","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"wuzhzn"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"wuzhzn"},"content":"    public static void printMarkMessage(TaskList tasks, int taskNum) {","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"wuzhzn"},"content":"        System.out.println(\"  \" + tasks.getStatus(taskNum) + \" \" + tasks.getDescription(taskNum));","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"wuzhzn"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":56,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"wuzhzn"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":58,"author":{"gitId":"wuzhzn"},"content":"     * Prints the list of tasks that has the keyword","lastModifiedDate":"2023-03-01"},{"lineNumber":59,"author":{"gitId":"wuzhzn"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":60,"author":{"gitId":"wuzhzn"},"content":"     * @param tasks the current task-list","lastModifiedDate":"2023-03-01"},{"lineNumber":61,"author":{"gitId":"wuzhzn"},"content":"     * @param keyword the word that user use to search amongst the tasks","lastModifiedDate":"2023-03-01"},{"lineNumber":62,"author":{"gitId":"wuzhzn"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":63,"author":{"gitId":"wuzhzn"},"content":"    public static void printFindInList(ArrayList\u003cTask\u003e tasks, String keyword){","lastModifiedDate":"2023-03-01"},{"lineNumber":64,"author":{"gitId":"wuzhzn"},"content":"        int index \u003d 1;","lastModifiedDate":"2023-03-01"},{"lineNumber":65,"author":{"gitId":"wuzhzn"},"content":"        HashMap\u003cInteger, Task\u003e mapList \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-01"},{"lineNumber":66,"author":{"gitId":"wuzhzn"},"content":"        System.out.println(textImage.HORIZONTAL_LINE);","lastModifiedDate":"2023-03-01"},{"lineNumber":67,"author":{"gitId":"wuzhzn"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-03-01"},{"lineNumber":68,"author":{"gitId":"wuzhzn"},"content":"            if (task.description.contains(keyword)) {","lastModifiedDate":"2023-03-01"},{"lineNumber":69,"author":{"gitId":"wuzhzn"},"content":"                mapList.put(index, task);","lastModifiedDate":"2023-03-01"},{"lineNumber":70,"author":{"gitId":"wuzhzn"},"content":"            }","lastModifiedDate":"2023-03-01"},{"lineNumber":71,"author":{"gitId":"wuzhzn"},"content":"            index++;","lastModifiedDate":"2023-03-01"},{"lineNumber":72,"author":{"gitId":"wuzhzn"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":73,"author":{"gitId":"wuzhzn"},"content":"        if (mapList.isEmpty()){","lastModifiedDate":"2023-03-01"},{"lineNumber":74,"author":{"gitId":"wuzhzn"},"content":"            System.out.println(\"No matching tasks in your list\");","lastModifiedDate":"2023-03-01"},{"lineNumber":75,"author":{"gitId":"wuzhzn"},"content":"        } else {","lastModifiedDate":"2023-03-01"},{"lineNumber":76,"author":{"gitId":"wuzhzn"},"content":"            System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-03-01"},{"lineNumber":77,"author":{"gitId":"wuzhzn"},"content":"            for (Map.Entry\u003cInteger, Task\u003e entry : mapList.entrySet()) {","lastModifiedDate":"2023-03-01"},{"lineNumber":78,"author":{"gitId":"wuzhzn"},"content":"                System.out.println(entry.getKey() + \".\" + entry.getValue());","lastModifiedDate":"2023-03-01"},{"lineNumber":79,"author":{"gitId":"wuzhzn"},"content":"            }","lastModifiedDate":"2023-03-01"},{"lineNumber":80,"author":{"gitId":"wuzhzn"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":81,"author":{"gitId":"wuzhzn"},"content":"        System.out.println(textImage.HORIZONTAL_LINE);","lastModifiedDate":"2023-03-01"},{"lineNumber":82,"author":{"gitId":"wuzhzn"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":83,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":84,"author":{"gitId":"wuzhzn"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":85,"author":{"gitId":"wuzhzn"},"content":"     * Prints the task that had been deleted recently and the updated number","lastModifiedDate":"2023-03-01"},{"lineNumber":86,"author":{"gitId":"wuzhzn"},"content":"     * of tasks in the current task-list","lastModifiedDate":"2023-03-01"},{"lineNumber":87,"author":{"gitId":"wuzhzn"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":88,"author":{"gitId":"wuzhzn"},"content":"     * @param tasks the current task-list","lastModifiedDate":"2023-03-01"},{"lineNumber":89,"author":{"gitId":"wuzhzn"},"content":"     * @param taskNum the index of the task that has been deleted","lastModifiedDate":"2023-03-01"},{"lineNumber":90,"author":{"gitId":"wuzhzn"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":91,"author":{"gitId":"wuzhzn"},"content":"    public static void printDeleteMessage(TaskList tasks, int taskNum) {","lastModifiedDate":"2023-03-01"},{"lineNumber":92,"author":{"gitId":"wuzhzn"},"content":"        try{","lastModifiedDate":"2023-03-03"},{"lineNumber":93,"author":{"gitId":"wuzhzn"},"content":"            System.out.println(\"Now you have \" + tasks.sizeOfList() + \" tasks in the list.\");","lastModifiedDate":"2023-03-01"},{"lineNumber":94,"author":{"gitId":"wuzhzn"},"content":"        } catch (EmptyListError err){","lastModifiedDate":"2023-03-03"},{"lineNumber":95,"author":{"gitId":"wuzhzn"},"content":"            System.out.println(\"There are no tasks in the your list now\");","lastModifiedDate":"2023-03-03"},{"lineNumber":96,"author":{"gitId":"wuzhzn"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":97,"author":{"gitId":"wuzhzn"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":98,"author":{"gitId":"wuzhzn"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":99,"author":{"gitId":"wuzhzn"},"content":"     * Print welcome message when the user runs program","lastModifiedDate":"2023-03-01"},{"lineNumber":100,"author":{"gitId":"wuzhzn"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":101,"author":{"gitId":"wuzhzn"},"content":"    public static void showWelcomeMessage() {","lastModifiedDate":"2023-02-03"},{"lineNumber":102,"author":{"gitId":"wuzhzn"},"content":"        System.out.println(textImage.WELCOME_TEXT_IMAGE);","lastModifiedDate":"2023-03-01"},{"lineNumber":103,"author":{"gitId":"wuzhzn"},"content":"        System.out.println(textImage.HORIZONTAL_LINE);","lastModifiedDate":"2023-03-01"},{"lineNumber":104,"author":{"gitId":"wuzhzn"},"content":"        System.out.println(\"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\");","lastModifiedDate":"2023-02-03"},{"lineNumber":105,"author":{"gitId":"wuzhzn"},"content":"        System.out.println(textImage.HORIZONTAL_LINE);","lastModifiedDate":"2023-03-01"},{"lineNumber":106,"author":{"gitId":"wuzhzn"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":107,"author":{"gitId":"wuzhzn"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":108,"author":{"gitId":"wuzhzn"},"content":"     * Print exit message when user terminates the program","lastModifiedDate":"2023-03-01"},{"lineNumber":109,"author":{"gitId":"wuzhzn"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":110,"author":{"gitId":"wuzhzn"},"content":"    public static void showByeMessage() {","lastModifiedDate":"2023-02-03"},{"lineNumber":111,"author":{"gitId":"wuzhzn"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-02-03"},{"lineNumber":112,"author":{"gitId":"wuzhzn"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":113,"author":{"gitId":"wuzhzn"},"content":"}","lastModifiedDate":"2023-02-09"},{"lineNumber":114,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":115,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":116,"author":{"gitId":"wuzhzn"},"content":"","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"wuzhzn":116}}]
