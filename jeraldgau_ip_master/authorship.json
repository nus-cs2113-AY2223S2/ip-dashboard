[{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeraldgau"},"content":"package duke;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"jeraldgau"},"content":"import duke.exception.IllegalDeadlineException;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"jeraldgau"},"content":"import duke.exception.IllegalEventException;","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"jeraldgau"},"content":"import duke.exception.IllegalTodoException;","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"jeraldgau"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"jeraldgau"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"jeraldgau"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"jeraldgau"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"jeraldgau"},"content":"import java.io.File;","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"jeraldgau"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"jeraldgau"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"jeraldgau"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"jeraldgau"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"jeraldgau"},"content":"    private static final String SAVEPATH \u003d \"data/savedata.txt\";","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"jeraldgau"},"content":"    private static final String SAVEFOLDER \u003d \"data\";","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"jeraldgau"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"jeraldgau"},"content":"     * Returns boolean value of true if input String is an integer,","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"jeraldgau"},"content":"     * else returns boolean value of false","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"jeraldgau"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"jeraldgau"},"content":"     * @param word String input to check if it is an integer","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"jeraldgau"},"content":"     * @return true if input String is an integer, otherwise false","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"jeraldgau"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"jeraldgau"},"content":"    public static boolean isNumeric(String word) {","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"jeraldgau"},"content":"        int valueToConvert;","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"jeraldgau"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"jeraldgau"},"content":"            valueToConvert \u003d Integer.parseInt(word);","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"jeraldgau"},"content":"            return true;","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"jeraldgau"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"jeraldgau"},"content":"            System.out.println(\"Incorrect input, please enter an integer.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"jeraldgau"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"jeraldgau"},"content":"        return false;","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":41,"author":{"gitId":"jeraldgau"},"content":"        greetingMessage();","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"jeraldgau"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-15"},{"lineNumber":44,"author":{"gitId":"jeraldgau"},"content":"        tryLoad(tasks);","lastModifiedDate":"2023-02-15"},{"lineNumber":45,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":46,"author":{"gitId":"jeraldgau"},"content":"        String line;","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"jeraldgau"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-22"},{"lineNumber":48,"author":{"gitId":"jeraldgau"},"content":"        line \u003d in.nextLine();","lastModifiedDate":"2023-01-22"},{"lineNumber":49,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"jeraldgau"},"content":"        while (!line.equals(\"bye\")) { // Exits the program if input is \"bye\"","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"jeraldgau"},"content":"            String[] words \u003d line.split(\" \");","lastModifiedDate":"2023-01-22"},{"lineNumber":52,"author":{"gitId":"jeraldgau"},"content":"            if (line.isBlank()) {","lastModifiedDate":"2023-02-15"},{"lineNumber":53,"author":{"gitId":"jeraldgau"},"content":"                emptyCommandMessage();","lastModifiedDate":"2023-02-15"},{"lineNumber":54,"author":{"gitId":"jeraldgau"},"content":"            } else if (line.equals(\"list\")) {","lastModifiedDate":"2023-02-15"},{"lineNumber":55,"author":{"gitId":"jeraldgau"},"content":"                // List out all the tasks added","lastModifiedDate":"2023-01-22"},{"lineNumber":56,"author":{"gitId":"jeraldgau"},"content":"                list(tasks);","lastModifiedDate":"2023-02-15"},{"lineNumber":57,"author":{"gitId":"jeraldgau"},"content":"            } else if (words[0].equals(\"unmark\") \u0026\u0026 (words.length \u003d\u003d 2) \u0026\u0026 (isNumeric(words[1]))) {","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"jeraldgau"},"content":"                // Mark a task as not done","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"jeraldgau"},"content":"                unmarkTask(tasks, words);","lastModifiedDate":"2023-02-15"},{"lineNumber":60,"author":{"gitId":"jeraldgau"},"content":"                trySave(tasks);","lastModifiedDate":"2023-02-15"},{"lineNumber":61,"author":{"gitId":"jeraldgau"},"content":"            } else if (words[0].equals(\"mark\") \u0026\u0026 (words.length \u003d\u003d 2) \u0026\u0026 (isNumeric(words[1]))) {","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"jeraldgau"},"content":"                // Mark a task as done","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"jeraldgau"},"content":"                markTask(tasks, words);","lastModifiedDate":"2023-02-15"},{"lineNumber":64,"author":{"gitId":"jeraldgau"},"content":"                trySave(tasks);","lastModifiedDate":"2023-02-15"},{"lineNumber":65,"author":{"gitId":"jeraldgau"},"content":"            } else if (words[0].equals(\"delete\") \u0026\u0026 (words.length \u003d\u003d 2) \u0026\u0026 (isNumeric(words[1]))) {","lastModifiedDate":"2023-02-15"},{"lineNumber":66,"author":{"gitId":"jeraldgau"},"content":"                // Delete a task","lastModifiedDate":"2023-02-15"},{"lineNumber":67,"author":{"gitId":"jeraldgau"},"content":"                deleteTask(tasks, words);","lastModifiedDate":"2023-02-15"},{"lineNumber":68,"author":{"gitId":"jeraldgau"},"content":"                trySave(tasks);","lastModifiedDate":"2023-02-15"},{"lineNumber":69,"author":{"gitId":"jeraldgau"},"content":"            } else {","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"jeraldgau"},"content":"                // Adding a task to the list","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"jeraldgau"},"content":"                addTask(line, tasks);","lastModifiedDate":"2023-02-15"},{"lineNumber":72,"author":{"gitId":"jeraldgau"},"content":"                Task.incrementCount();","lastModifiedDate":"2023-02-15"},{"lineNumber":73,"author":{"gitId":"jeraldgau"},"content":"                trySave(tasks);","lastModifiedDate":"2023-02-15"},{"lineNumber":74,"author":{"gitId":"jeraldgau"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":75,"author":{"gitId":"jeraldgau"},"content":"            line \u003d in.nextLine();","lastModifiedDate":"2023-01-28"},{"lineNumber":76,"author":{"gitId":"jeraldgau"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":77,"author":{"gitId":"jeraldgau"},"content":"        // Exiting the program","lastModifiedDate":"2023-01-28"},{"lineNumber":78,"author":{"gitId":"jeraldgau"},"content":"        exitMessage();","lastModifiedDate":"2023-01-28"},{"lineNumber":79,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":80,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":81,"author":{"gitId":"jeraldgau"},"content":"    private static void addTask(String line, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-15"},{"lineNumber":82,"author":{"gitId":"jeraldgau"},"content":"        if (line.contains(\"/by\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":83,"author":{"gitId":"jeraldgau"},"content":"            // Adding a Deadline","lastModifiedDate":"2023-01-29"},{"lineNumber":84,"author":{"gitId":"jeraldgau"},"content":"            try {","lastModifiedDate":"2023-02-06"},{"lineNumber":85,"author":{"gitId":"jeraldgau"},"content":"                addDeadline(line, tasks);","lastModifiedDate":"2023-02-15"},{"lineNumber":86,"author":{"gitId":"jeraldgau"},"content":"            } catch (IllegalDeadlineException e) {","lastModifiedDate":"2023-02-06"},{"lineNumber":87,"author":{"gitId":"jeraldgau"},"content":"                deadlineErrorMessage();","lastModifiedDate":"2023-02-06"},{"lineNumber":88,"author":{"gitId":"jeraldgau"},"content":"            }","lastModifiedDate":"2023-02-06"},{"lineNumber":89,"author":{"gitId":"jeraldgau"},"content":"        } else if (line.contains(\"/from\") || line.contains(\"/to\")) {","lastModifiedDate":"2023-02-06"},{"lineNumber":90,"author":{"gitId":"jeraldgau"},"content":"            // Adding an Event","lastModifiedDate":"2023-01-29"},{"lineNumber":91,"author":{"gitId":"jeraldgau"},"content":"            try {","lastModifiedDate":"2023-02-06"},{"lineNumber":92,"author":{"gitId":"jeraldgau"},"content":"                addEvent(line, tasks);","lastModifiedDate":"2023-02-15"},{"lineNumber":93,"author":{"gitId":"jeraldgau"},"content":"            } catch (IllegalEventException e) {","lastModifiedDate":"2023-02-06"},{"lineNumber":94,"author":{"gitId":"jeraldgau"},"content":"                eventErrorMessage();","lastModifiedDate":"2023-02-06"},{"lineNumber":95,"author":{"gitId":"jeraldgau"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-06"},{"lineNumber":96,"author":{"gitId":"jeraldgau"},"content":"                eventErrorMessage();","lastModifiedDate":"2023-02-06"},{"lineNumber":97,"author":{"gitId":"jeraldgau"},"content":"            }","lastModifiedDate":"2023-02-06"},{"lineNumber":98,"author":{"gitId":"jeraldgau"},"content":"        } else {","lastModifiedDate":"2023-02-15"},{"lineNumber":99,"author":{"gitId":"jeraldgau"},"content":"            // Adding a _Todo_","lastModifiedDate":"2023-02-06"},{"lineNumber":100,"author":{"gitId":"jeraldgau"},"content":"            try {","lastModifiedDate":"2023-02-06"},{"lineNumber":101,"author":{"gitId":"jeraldgau"},"content":"                addTodo(line, tasks);","lastModifiedDate":"2023-02-15"},{"lineNumber":102,"author":{"gitId":"jeraldgau"},"content":"            } catch (IllegalTodoException e) {","lastModifiedDate":"2023-02-06"},{"lineNumber":103,"author":{"gitId":"jeraldgau"},"content":"                todoErrorMessage();","lastModifiedDate":"2023-02-06"},{"lineNumber":104,"author":{"gitId":"jeraldgau"},"content":"            }","lastModifiedDate":"2023-02-06"},{"lineNumber":105,"author":{"gitId":"jeraldgau"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":106,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":107,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":108,"author":{"gitId":"jeraldgau"},"content":"    private static void addTodo(String line, ArrayList\u003cTask\u003e tasks) throws IllegalTodoException {","lastModifiedDate":"2023-02-15"},{"lineNumber":109,"author":{"gitId":"jeraldgau"},"content":"        if (line.isBlank()) {","lastModifiedDate":"2023-02-06"},{"lineNumber":110,"author":{"gitId":"jeraldgau"},"content":"            throw new IllegalTodoException();","lastModifiedDate":"2023-02-06"},{"lineNumber":111,"author":{"gitId":"jeraldgau"},"content":"        } else {","lastModifiedDate":"2023-02-06"},{"lineNumber":112,"author":{"gitId":"jeraldgau"},"content":"            Todo currTodo \u003d new Todo(line);","lastModifiedDate":"2023-02-15"},{"lineNumber":113,"author":{"gitId":"jeraldgau"},"content":"            tasks.add(currTodo);","lastModifiedDate":"2023-02-15"},{"lineNumber":114,"author":{"gitId":"jeraldgau"},"content":"            addedTaskMessage(currTodo);","lastModifiedDate":"2023-02-15"},{"lineNumber":115,"author":{"gitId":"jeraldgau"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":116,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":117,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":118,"author":{"gitId":"jeraldgau"},"content":"    private static void addEvent(String line, ArrayList\u003cTask\u003e tasks) throws IllegalEventException {","lastModifiedDate":"2023-02-15"},{"lineNumber":119,"author":{"gitId":"jeraldgau"},"content":"        String description \u003d line.substring(0, line.indexOf(\"/from\")).trim();","lastModifiedDate":"2023-01-29"},{"lineNumber":120,"author":{"gitId":"jeraldgau"},"content":"        String start \u003d line.substring(line.indexOf(\"/from\") + 5, line.indexOf(\"/to\")).trim();","lastModifiedDate":"2023-01-29"},{"lineNumber":121,"author":{"gitId":"jeraldgau"},"content":"        String end \u003d line.substring(line.indexOf(\"/to\") + 3).trim();","lastModifiedDate":"2023-01-29"},{"lineNumber":122,"author":{"gitId":"jeraldgau"},"content":"        if (description.isBlank() || start.isBlank() || end.isBlank()) {","lastModifiedDate":"2023-02-06"},{"lineNumber":123,"author":{"gitId":"jeraldgau"},"content":"            throw new IllegalEventException();","lastModifiedDate":"2023-02-06"},{"lineNumber":124,"author":{"gitId":"jeraldgau"},"content":"        } else {","lastModifiedDate":"2023-02-06"},{"lineNumber":125,"author":{"gitId":"jeraldgau"},"content":"            Event currEvent \u003d new Event(description, start, end);","lastModifiedDate":"2023-02-15"},{"lineNumber":126,"author":{"gitId":"jeraldgau"},"content":"            tasks.add(currEvent);","lastModifiedDate":"2023-02-15"},{"lineNumber":127,"author":{"gitId":"jeraldgau"},"content":"            addedTaskMessage(currEvent);","lastModifiedDate":"2023-02-15"},{"lineNumber":128,"author":{"gitId":"jeraldgau"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":129,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":130,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":131,"author":{"gitId":"jeraldgau"},"content":"    private static void addDeadline(String line, ArrayList\u003cTask\u003e tasks) throws IllegalDeadlineException {","lastModifiedDate":"2023-02-15"},{"lineNumber":132,"author":{"gitId":"jeraldgau"},"content":"        String description \u003d line.substring(0, line.indexOf(\"/by\")).trim();","lastModifiedDate":"2023-02-06"},{"lineNumber":133,"author":{"gitId":"jeraldgau"},"content":"        String deadline \u003d line.substring(line.indexOf(\"/by\") + 3).trim();","lastModifiedDate":"2023-02-06"},{"lineNumber":134,"author":{"gitId":"jeraldgau"},"content":"        //System.out.println(description.isBlank());","lastModifiedDate":"2023-02-06"},{"lineNumber":135,"author":{"gitId":"jeraldgau"},"content":"        if (description.isBlank() || deadline.isBlank()) {","lastModifiedDate":"2023-02-06"},{"lineNumber":136,"author":{"gitId":"jeraldgau"},"content":"            throw new IllegalDeadlineException();","lastModifiedDate":"2023-02-06"},{"lineNumber":137,"author":{"gitId":"jeraldgau"},"content":"        } else {","lastModifiedDate":"2023-01-29"},{"lineNumber":138,"author":{"gitId":"jeraldgau"},"content":"            Deadline currDeadline \u003d new Deadline(description, deadline);","lastModifiedDate":"2023-02-15"},{"lineNumber":139,"author":{"gitId":"jeraldgau"},"content":"            tasks.add(currDeadline);","lastModifiedDate":"2023-02-15"},{"lineNumber":140,"author":{"gitId":"jeraldgau"},"content":"            addedTaskMessage(currDeadline);","lastModifiedDate":"2023-02-15"},{"lineNumber":141,"author":{"gitId":"jeraldgau"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":142,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":143,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":144,"author":{"gitId":"jeraldgau"},"content":"    private static void list(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-15"},{"lineNumber":145,"author":{"gitId":"jeraldgau"},"content":"        int taskCount \u003d Task.getTaskCount();","lastModifiedDate":"2023-02-15"},{"lineNumber":146,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-02-05"},{"lineNumber":147,"author":{"gitId":"jeraldgau"},"content":"        System.out.println(\"\\t Here are the tasks in your list:\");","lastModifiedDate":"2023-02-15"},{"lineNumber":148,"author":{"gitId":"jeraldgau"},"content":"        for (int i \u003d 0; i \u003c taskCount; i++) {","lastModifiedDate":"2023-02-15"},{"lineNumber":149,"author":{"gitId":"jeraldgau"},"content":"            System.out.println(\"\\t \" + (i + 1) + \".\" + tasks.get(i));","lastModifiedDate":"2023-02-15"},{"lineNumber":150,"author":{"gitId":"jeraldgau"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":151,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-02-05"},{"lineNumber":152,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":153,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":154,"author":{"gitId":"jeraldgau"},"content":"    private static void markTask(ArrayList\u003cTask\u003e tasks, String[] words) {","lastModifiedDate":"2023-02-15"},{"lineNumber":155,"author":{"gitId":"jeraldgau"},"content":"        int taskNumber \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2023-01-22"},{"lineNumber":156,"author":{"gitId":"jeraldgau"},"content":"        int taskCount \u003d Task.getTaskCount();","lastModifiedDate":"2023-02-15"},{"lineNumber":157,"author":{"gitId":"jeraldgau"},"content":"        if (taskNumber \u003e taskCount) {","lastModifiedDate":"2023-01-25"},{"lineNumber":158,"author":{"gitId":"jeraldgau"},"content":"            // Input task number exceeds the number of tasks in the list","lastModifiedDate":"2023-01-25"},{"lineNumber":159,"author":{"gitId":"jeraldgau"},"content":"            exceedTaskNumberMessage(taskNumber);","lastModifiedDate":"2023-02-15"},{"lineNumber":160,"author":{"gitId":"jeraldgau"},"content":"        } else {","lastModifiedDate":"2023-01-25"},{"lineNumber":161,"author":{"gitId":"jeraldgau"},"content":"            tasks.get(taskNumber - 1).markAsDone();","lastModifiedDate":"2023-02-15"},{"lineNumber":162,"author":{"gitId":"jeraldgau"},"content":"            // Printing out marked as done message","lastModifiedDate":"2023-01-28"},{"lineNumber":163,"author":{"gitId":"jeraldgau"},"content":"            borderLine();","lastModifiedDate":"2023-02-05"},{"lineNumber":164,"author":{"gitId":"jeraldgau"},"content":"            System.out.println(\"\\t Understood. I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-01-28"},{"lineNumber":165,"author":{"gitId":"jeraldgau"},"content":"            System.out.println(\"\\t \" + tasks.get(taskNumber - 1));","lastModifiedDate":"2023-02-15"},{"lineNumber":166,"author":{"gitId":"jeraldgau"},"content":"            borderLine();","lastModifiedDate":"2023-02-05"},{"lineNumber":167,"author":{"gitId":"jeraldgau"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":168,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":169,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":170,"author":{"gitId":"jeraldgau"},"content":"    private static void unmarkTask(ArrayList\u003cTask\u003e tasks, String[] words) {","lastModifiedDate":"2023-02-15"},{"lineNumber":171,"author":{"gitId":"jeraldgau"},"content":"        int taskNumber \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2023-01-22"},{"lineNumber":172,"author":{"gitId":"jeraldgau"},"content":"        int taskCount \u003d Task.getTaskCount();","lastModifiedDate":"2023-02-15"},{"lineNumber":173,"author":{"gitId":"jeraldgau"},"content":"        if (taskNumber \u003e taskCount) {","lastModifiedDate":"2023-01-25"},{"lineNumber":174,"author":{"gitId":"jeraldgau"},"content":"            // Input task number exceeds the number of tasks in the list","lastModifiedDate":"2023-01-25"},{"lineNumber":175,"author":{"gitId":"jeraldgau"},"content":"            exceedTaskNumberMessage(taskNumber);","lastModifiedDate":"2023-02-15"},{"lineNumber":176,"author":{"gitId":"jeraldgau"},"content":"        } else {","lastModifiedDate":"2023-01-25"},{"lineNumber":177,"author":{"gitId":"jeraldgau"},"content":"            tasks.get(taskNumber - 1).markAsNotDone();","lastModifiedDate":"2023-02-15"},{"lineNumber":178,"author":{"gitId":"jeraldgau"},"content":"            // Printing out marked as not done message","lastModifiedDate":"2023-01-28"},{"lineNumber":179,"author":{"gitId":"jeraldgau"},"content":"            borderLine();","lastModifiedDate":"2023-02-05"},{"lineNumber":180,"author":{"gitId":"jeraldgau"},"content":"            System.out.println(\"\\t Understood. I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-01-28"},{"lineNumber":181,"author":{"gitId":"jeraldgau"},"content":"            System.out.println(\"\\t \" + tasks.get(taskNumber - 1));","lastModifiedDate":"2023-02-15"},{"lineNumber":182,"author":{"gitId":"jeraldgau"},"content":"            borderLine();","lastModifiedDate":"2023-02-15"},{"lineNumber":183,"author":{"gitId":"jeraldgau"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":184,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":185,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":186,"author":{"gitId":"jeraldgau"},"content":"    private static void deleteTask(ArrayList\u003cTask\u003e tasks, String[] words) {","lastModifiedDate":"2023-02-15"},{"lineNumber":187,"author":{"gitId":"jeraldgau"},"content":"        int taskNumber \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2023-02-15"},{"lineNumber":188,"author":{"gitId":"jeraldgau"},"content":"        int taskCount \u003d Task.getTaskCount();","lastModifiedDate":"2023-02-15"},{"lineNumber":189,"author":{"gitId":"jeraldgau"},"content":"        if (taskNumber \u003e taskCount) {","lastModifiedDate":"2023-02-15"},{"lineNumber":190,"author":{"gitId":"jeraldgau"},"content":"            // Input task number exceeds the number of tasks in the list","lastModifiedDate":"2023-02-15"},{"lineNumber":191,"author":{"gitId":"jeraldgau"},"content":"            exceedTaskNumberMessage(taskNumber);","lastModifiedDate":"2023-02-15"},{"lineNumber":192,"author":{"gitId":"jeraldgau"},"content":"        } else {","lastModifiedDate":"2023-02-15"},{"lineNumber":193,"author":{"gitId":"jeraldgau"},"content":"            Task taskToDelete \u003d tasks.get(taskNumber - 1);","lastModifiedDate":"2023-02-15"},{"lineNumber":194,"author":{"gitId":"jeraldgau"},"content":"            tasks.remove(taskNumber - 1);","lastModifiedDate":"2023-02-15"},{"lineNumber":195,"author":{"gitId":"jeraldgau"},"content":"            Task.decrementCount();","lastModifiedDate":"2023-02-15"},{"lineNumber":196,"author":{"gitId":"jeraldgau"},"content":"            deleteTaskMessage(taskToDelete);","lastModifiedDate":"2023-02-15"},{"lineNumber":197,"author":{"gitId":"jeraldgau"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":198,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":199,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":200,"author":{"gitId":"jeraldgau"},"content":"    private static void loadTask(String line, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-15"},{"lineNumber":201,"author":{"gitId":"jeraldgau"},"content":"        if (line.contains(\"/by\")) {","lastModifiedDate":"2023-02-15"},{"lineNumber":202,"author":{"gitId":"jeraldgau"},"content":"            loadDeadline(line, tasks);","lastModifiedDate":"2023-02-15"},{"lineNumber":203,"author":{"gitId":"jeraldgau"},"content":"        } else if (line.contains(\"/from\") || line.contains(\"/to\")) {","lastModifiedDate":"2023-02-15"},{"lineNumber":204,"author":{"gitId":"jeraldgau"},"content":"            loadEvent(line, tasks);","lastModifiedDate":"2023-02-15"},{"lineNumber":205,"author":{"gitId":"jeraldgau"},"content":"        } else {","lastModifiedDate":"2023-02-06"},{"lineNumber":206,"author":{"gitId":"jeraldgau"},"content":"            loadTodo(line, tasks);","lastModifiedDate":"2023-02-15"},{"lineNumber":207,"author":{"gitId":"jeraldgau"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":208,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":209,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":210,"author":{"gitId":"jeraldgau"},"content":"    private static void loadTodo(String line, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-15"},{"lineNumber":211,"author":{"gitId":"jeraldgau"},"content":"        Todo currTodo \u003d new Todo(line);","lastModifiedDate":"2023-02-15"},{"lineNumber":212,"author":{"gitId":"jeraldgau"},"content":"        tasks.add(currTodo);","lastModifiedDate":"2023-02-15"},{"lineNumber":213,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":214,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":215,"author":{"gitId":"jeraldgau"},"content":"    private static void loadEvent(String line, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-15"},{"lineNumber":216,"author":{"gitId":"jeraldgau"},"content":"        String description \u003d line.substring(0, line.indexOf(\"/from\")).trim();","lastModifiedDate":"2023-02-15"},{"lineNumber":217,"author":{"gitId":"jeraldgau"},"content":"        String start \u003d line.substring(line.indexOf(\"/from\") + 5, line.indexOf(\"/to\")).trim();","lastModifiedDate":"2023-02-15"},{"lineNumber":218,"author":{"gitId":"jeraldgau"},"content":"        String end \u003d line.substring(line.indexOf(\"/to\") + 3).trim();","lastModifiedDate":"2023-02-15"},{"lineNumber":219,"author":{"gitId":"jeraldgau"},"content":"        Event currEvent \u003d new Event(description, start, end);","lastModifiedDate":"2023-02-15"},{"lineNumber":220,"author":{"gitId":"jeraldgau"},"content":"        tasks.add(currEvent);","lastModifiedDate":"2023-02-15"},{"lineNumber":221,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":222,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":223,"author":{"gitId":"jeraldgau"},"content":"    private static void loadDeadline(String line, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-15"},{"lineNumber":224,"author":{"gitId":"jeraldgau"},"content":"        String description \u003d line.substring(0, line.indexOf(\"/by\")).trim();","lastModifiedDate":"2023-02-15"},{"lineNumber":225,"author":{"gitId":"jeraldgau"},"content":"        String deadline \u003d line.substring(line.indexOf(\"/by\") + 3).trim();","lastModifiedDate":"2023-02-15"},{"lineNumber":226,"author":{"gitId":"jeraldgau"},"content":"        Deadline currDeadline \u003d new Deadline(description, deadline);","lastModifiedDate":"2023-02-15"},{"lineNumber":227,"author":{"gitId":"jeraldgau"},"content":"        tasks.add(currDeadline);","lastModifiedDate":"2023-02-15"},{"lineNumber":228,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":229,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":230,"author":{"gitId":"jeraldgau"},"content":"    private static void loadTaskStatus(ArrayList\u003cTask\u003e tasks, String doneStatus) {","lastModifiedDate":"2023-02-15"},{"lineNumber":231,"author":{"gitId":"jeraldgau"},"content":"        int taskNumber \u003d Task.getTaskCount();","lastModifiedDate":"2023-02-15"},{"lineNumber":232,"author":{"gitId":"jeraldgau"},"content":"        if (doneStatus.equals(\"1\")) {","lastModifiedDate":"2023-02-15"},{"lineNumber":233,"author":{"gitId":"jeraldgau"},"content":"            tasks.get(taskNumber).markAsDone();","lastModifiedDate":"2023-02-15"},{"lineNumber":234,"author":{"gitId":"jeraldgau"},"content":"        } else {","lastModifiedDate":"2023-02-15"},{"lineNumber":235,"author":{"gitId":"jeraldgau"},"content":"            tasks.get(taskNumber).markAsNotDone();","lastModifiedDate":"2023-02-15"},{"lineNumber":236,"author":{"gitId":"jeraldgau"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":237,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":238,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":239,"author":{"gitId":"jeraldgau"},"content":"    private static void save(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2023-02-15"},{"lineNumber":240,"author":{"gitId":"jeraldgau"},"content":"        File f \u003d new File(SAVEPATH);","lastModifiedDate":"2023-02-15"},{"lineNumber":241,"author":{"gitId":"jeraldgau"},"content":"        if (f.exists()) {","lastModifiedDate":"2023-02-15"},{"lineNumber":242,"author":{"gitId":"jeraldgau"},"content":"            f.delete();","lastModifiedDate":"2023-02-15"},{"lineNumber":243,"author":{"gitId":"jeraldgau"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":244,"author":{"gitId":"jeraldgau"},"content":"        f.createNewFile();","lastModifiedDate":"2023-02-15"},{"lineNumber":245,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":246,"author":{"gitId":"jeraldgau"},"content":"        FileWriter fw \u003d new FileWriter(SAVEPATH);","lastModifiedDate":"2023-02-15"},{"lineNumber":247,"author":{"gitId":"jeraldgau"},"content":"        for (Task currTask : tasks) {","lastModifiedDate":"2023-02-15"},{"lineNumber":248,"author":{"gitId":"jeraldgau"},"content":"            fw.write(currTask.toSaveString());","lastModifiedDate":"2023-02-15"},{"lineNumber":249,"author":{"gitId":"jeraldgau"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":250,"author":{"gitId":"jeraldgau"},"content":"        fw.close();","lastModifiedDate":"2023-02-15"},{"lineNumber":251,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":252,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":253,"author":{"gitId":"jeraldgau"},"content":"    private static void trySave(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-15"},{"lineNumber":254,"author":{"gitId":"jeraldgau"},"content":"        try {","lastModifiedDate":"2023-02-15"},{"lineNumber":255,"author":{"gitId":"jeraldgau"},"content":"            save(tasks);","lastModifiedDate":"2023-02-15"},{"lineNumber":256,"author":{"gitId":"jeraldgau"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":257,"author":{"gitId":"jeraldgau"},"content":"            System.out.println(\"Saving error.\");","lastModifiedDate":"2023-02-15"},{"lineNumber":258,"author":{"gitId":"jeraldgau"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":259,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":260,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":261,"author":{"gitId":"jeraldgau"},"content":"    private static void load(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2023-02-15"},{"lineNumber":262,"author":{"gitId":"jeraldgau"},"content":"        File folder \u003d new File(SAVEFOLDER);","lastModifiedDate":"2023-02-15"},{"lineNumber":263,"author":{"gitId":"jeraldgau"},"content":"        if (!folder.exists()) {","lastModifiedDate":"2023-02-15"},{"lineNumber":264,"author":{"gitId":"jeraldgau"},"content":"            new File(SAVEFOLDER).mkdir();","lastModifiedDate":"2023-02-15"},{"lineNumber":265,"author":{"gitId":"jeraldgau"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":266,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":267,"author":{"gitId":"jeraldgau"},"content":"        File f \u003d new File(SAVEPATH);","lastModifiedDate":"2023-02-15"},{"lineNumber":268,"author":{"gitId":"jeraldgau"},"content":"        if (!f.exists()) {","lastModifiedDate":"2023-02-15"},{"lineNumber":269,"author":{"gitId":"jeraldgau"},"content":"            f.createNewFile();","lastModifiedDate":"2023-02-15"},{"lineNumber":270,"author":{"gitId":"jeraldgau"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":271,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":272,"author":{"gitId":"jeraldgau"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2023-02-15"},{"lineNumber":273,"author":{"gitId":"jeraldgau"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2023-02-15"},{"lineNumber":274,"author":{"gitId":"jeraldgau"},"content":"            String line \u003d s.nextLine();","lastModifiedDate":"2023-02-15"},{"lineNumber":275,"author":{"gitId":"jeraldgau"},"content":"            String[] formattedInput \u003d line.split(\" \");","lastModifiedDate":"2023-02-15"},{"lineNumber":276,"author":{"gitId":"jeraldgau"},"content":"            String doneStatus \u003d formattedInput[0];","lastModifiedDate":"2023-02-15"},{"lineNumber":277,"author":{"gitId":"jeraldgau"},"content":"            String command \u003d \"\";","lastModifiedDate":"2023-02-15"},{"lineNumber":278,"author":{"gitId":"jeraldgau"},"content":"            for (int i \u003d 1; i \u003c formattedInput.length; i++) {","lastModifiedDate":"2023-02-15"},{"lineNumber":279,"author":{"gitId":"jeraldgau"},"content":"                command +\u003d formattedInput[i];","lastModifiedDate":"2023-02-15"},{"lineNumber":280,"author":{"gitId":"jeraldgau"},"content":"                command +\u003d \" \";","lastModifiedDate":"2023-02-15"},{"lineNumber":281,"author":{"gitId":"jeraldgau"},"content":"            }","lastModifiedDate":"2023-02-15"},{"lineNumber":282,"author":{"gitId":"jeraldgau"},"content":"            loadTask(command, tasks);","lastModifiedDate":"2023-02-15"},{"lineNumber":283,"author":{"gitId":"jeraldgau"},"content":"            loadTaskStatus(tasks, doneStatus);","lastModifiedDate":"2023-02-15"},{"lineNumber":284,"author":{"gitId":"jeraldgau"},"content":"            Task.incrementCount();","lastModifiedDate":"2023-02-15"},{"lineNumber":285,"author":{"gitId":"jeraldgau"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":286,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":287,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":288,"author":{"gitId":"jeraldgau"},"content":"    private static void tryLoad(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-15"},{"lineNumber":289,"author":{"gitId":"jeraldgau"},"content":"        try {","lastModifiedDate":"2023-02-15"},{"lineNumber":290,"author":{"gitId":"jeraldgau"},"content":"            load(tasks);","lastModifiedDate":"2023-02-15"},{"lineNumber":291,"author":{"gitId":"jeraldgau"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":292,"author":{"gitId":"jeraldgau"},"content":"            System.out.println(\"Error loading save file.\");","lastModifiedDate":"2023-02-15"},{"lineNumber":293,"author":{"gitId":"jeraldgau"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":294,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":295,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":296,"author":{"gitId":"jeraldgau"},"content":"    private static void borderLine() {","lastModifiedDate":"2023-02-05"},{"lineNumber":297,"author":{"gitId":"jeraldgau"},"content":"        System.out.println(\"\\t____________________________________________________________\");","lastModifiedDate":"2023-01-28"},{"lineNumber":298,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":299,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":300,"author":{"gitId":"jeraldgau"},"content":"    private static void emptyCommandMessage() {","lastModifiedDate":"2023-02-15"},{"lineNumber":301,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-02-15"},{"lineNumber":302,"author":{"gitId":"jeraldgau"},"content":"        System.out.println(\"\\t Please enter a non-empty command.\");","lastModifiedDate":"2023-02-15"},{"lineNumber":303,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-02-15"},{"lineNumber":304,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":305,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":306,"author":{"gitId":"jeraldgau"},"content":"    private static void addedTaskMessage(Task currentTask) {","lastModifiedDate":"2023-02-15"},{"lineNumber":307,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-02-15"},{"lineNumber":308,"author":{"gitId":"jeraldgau"},"content":"        System.out.println(\"\\t Alright, I have added this task: \\n\\t\\t\" + currentTask);","lastModifiedDate":"2023-02-15"},{"lineNumber":309,"author":{"gitId":"jeraldgau"},"content":"        System.out.println(\"\\t You now have \" + (Task.getTaskCount() + 1) + \" tasks in your list.\");","lastModifiedDate":"2023-02-15"},{"lineNumber":310,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-02-15"},{"lineNumber":311,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":312,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":313,"author":{"gitId":"jeraldgau"},"content":"    private static void deleteTaskMessage(Task taskToDelete) {","lastModifiedDate":"2023-02-15"},{"lineNumber":314,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-02-15"},{"lineNumber":315,"author":{"gitId":"jeraldgau"},"content":"        System.out.println(\"\\t Understood. I have removed this task:\");","lastModifiedDate":"2023-02-15"},{"lineNumber":316,"author":{"gitId":"jeraldgau"},"content":"        System.out.println(\"\\t\\t\" + taskToDelete);","lastModifiedDate":"2023-02-15"},{"lineNumber":317,"author":{"gitId":"jeraldgau"},"content":"        System.out.println(\"\\t You now have \" + Task.getTaskCount() + \" tasks in your list.\");","lastModifiedDate":"2023-02-15"},{"lineNumber":318,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-02-15"},{"lineNumber":319,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":320,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":321,"author":{"gitId":"jeraldgau"},"content":"    private static void exceedTaskNumberMessage(int taskNumber) {","lastModifiedDate":"2023-02-15"},{"lineNumber":322,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-02-15"},{"lineNumber":323,"author":{"gitId":"jeraldgau"},"content":"        System.out.println(\"\\t Task \" + taskNumber + \" does not exist.\");","lastModifiedDate":"2023-02-15"},{"lineNumber":324,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-02-15"},{"lineNumber":325,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":326,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":327,"author":{"gitId":"jeraldgau"},"content":"    private static void todoErrorMessage() {","lastModifiedDate":"2023-02-15"},{"lineNumber":328,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-02-15"},{"lineNumber":329,"author":{"gitId":"jeraldgau"},"content":"        System.out.println(\"\\t Error. Please enter a valid description.\");","lastModifiedDate":"2023-02-15"},{"lineNumber":330,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-02-15"},{"lineNumber":331,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":332,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":333,"author":{"gitId":"jeraldgau"},"content":"    private static void eventErrorMessage() {","lastModifiedDate":"2023-02-15"},{"lineNumber":334,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-02-15"},{"lineNumber":335,"author":{"gitId":"jeraldgau"},"content":"        System.out.println(\"\\t Error. Please enter a valid description, start time and end time\");","lastModifiedDate":"2023-02-15"},{"lineNumber":336,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-02-15"},{"lineNumber":337,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":338,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":339,"author":{"gitId":"jeraldgau"},"content":"    private static void deadlineErrorMessage() {","lastModifiedDate":"2023-02-15"},{"lineNumber":340,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-02-15"},{"lineNumber":341,"author":{"gitId":"jeraldgau"},"content":"        System.out.println(\"\\t Error. Please enter a valid description and deadline.\");","lastModifiedDate":"2023-02-15"},{"lineNumber":342,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-02-15"},{"lineNumber":343,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":344,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":345,"author":{"gitId":"jeraldgau"},"content":"    private static void exitMessage() {","lastModifiedDate":"2023-02-05"},{"lineNumber":346,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-02-05"},{"lineNumber":347,"author":{"gitId":"jeraldgau"},"content":"        System.out.println(\"\\t Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-28"},{"lineNumber":348,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-02-05"},{"lineNumber":349,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":350,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":351,"author":{"gitId":"jeraldgau"},"content":"    private static void greetingMessage() {","lastModifiedDate":"2023-01-28"},{"lineNumber":352,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-02-05"},{"lineNumber":353,"author":{"gitId":"jeraldgau"},"content":"        System.out.println(\"\\t Hello! I\u0027m Vivy.\");","lastModifiedDate":"2023-01-28"},{"lineNumber":354,"author":{"gitId":"jeraldgau"},"content":"        System.out.println(\"\\t Here are some commands you can give me:\");","lastModifiedDate":"2023-01-28"},{"lineNumber":355,"author":{"gitId":"jeraldgau"},"content":"        System.out.println(\"\\t - list: I\u0027ll list out all the tasks you have recorded.\");","lastModifiedDate":"2023-01-28"},{"lineNumber":356,"author":{"gitId":"jeraldgau"},"content":"        System.out.println(\"\\t - mark \u003ctask_number\u003e: I\u0027ll mark that task as done.\");","lastModifiedDate":"2023-01-28"},{"lineNumber":357,"author":{"gitId":"jeraldgau"},"content":"        System.out.println(\"\\t - unmark \u003ctask_number\u003e: I\u0027ll mark that task as undone.\");","lastModifiedDate":"2023-01-28"},{"lineNumber":358,"author":{"gitId":"jeraldgau"},"content":"        System.out.println(\"\\t - delete \u003ctask_number\u003e: I\u0027ll delete that task from your list.\");","lastModifiedDate":"2023-02-15"},{"lineNumber":359,"author":{"gitId":"jeraldgau"},"content":"        System.out.println(\"\\t - bye: I will shut down my program.\");","lastModifiedDate":"2023-01-28"},{"lineNumber":360,"author":{"gitId":"jeraldgau"},"content":"        System.out.println(\"\\t - Anything else will be recorded as a task. \\n\");","lastModifiedDate":"2023-01-28"},{"lineNumber":361,"author":{"gitId":"jeraldgau"},"content":"        System.out.println(\"\\t Format for tasks:\");","lastModifiedDate":"2023-01-29"},{"lineNumber":362,"author":{"gitId":"jeraldgau"},"content":"        System.out.println(\"\\t   Deadlines: \u003cdescription\u003e /by \u003cdeadline\u003e\");","lastModifiedDate":"2023-01-29"},{"lineNumber":363,"author":{"gitId":"jeraldgau"},"content":"        System.out.println(\"\\t              (eg. Eat bread /by Thursday)\");","lastModifiedDate":"2023-01-29"},{"lineNumber":364,"author":{"gitId":"jeraldgau"},"content":"        System.out.println(\"\\t      Events: \u003cdescription\u003e /from \u003cstart date/time\u003e /to \u003cend date/time\u003e\");","lastModifiedDate":"2023-01-29"},{"lineNumber":365,"author":{"gitId":"jeraldgau"},"content":"        System.out.println(\"\\t              (eg. Meeting /from March 3 8pm /to 9pm)\");","lastModifiedDate":"2023-01-29"},{"lineNumber":366,"author":{"gitId":"jeraldgau"},"content":"        System.out.println(\"\\t        Todo: \u003cdescription\u003e\");","lastModifiedDate":"2023-01-29"},{"lineNumber":367,"author":{"gitId":"jeraldgau"},"content":"        System.out.println(\"\\t              (eg. Water the plants)\");","lastModifiedDate":"2023-01-29"},{"lineNumber":368,"author":{"gitId":"jeraldgau"},"content":"        System.out.println(\"\\t What can I do for you?\");","lastModifiedDate":"2023-01-28"},{"lineNumber":369,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-02-05"},{"lineNumber":370,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"jeraldgau":367,"-":4}},{"path":"src/main/java/duke/exception/IllegalDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeraldgau"},"content":"package duke.exception;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"jeraldgau"},"content":"public class IllegalDeadlineException extends Exception {","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"jeraldgau"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"jeraldgau":5}},{"path":"src/main/java/duke/exception/IllegalEventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeraldgau"},"content":"package duke.exception;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"jeraldgau"},"content":"public class IllegalEventException extends Exception {","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"jeraldgau"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"jeraldgau":5}},{"path":"src/main/java/duke/exception/IllegalTodoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeraldgau"},"content":"package duke.exception;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"jeraldgau"},"content":"public class IllegalTodoException extends Exception {","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"jeraldgau"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"jeraldgau":5}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeraldgau"},"content":"package duke.task;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"jeraldgau"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"jeraldgau"},"content":"    private String by;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"jeraldgau"},"content":"    public Deadline(String description, String deadline) {","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"jeraldgau"},"content":"        super(description);","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"jeraldgau"},"content":"        by \u003d deadline;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"jeraldgau"},"content":"    public void setDeadline(String deadline) {","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"jeraldgau"},"content":"        by \u003d deadline;","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"jeraldgau"},"content":"    public String getDeadline() {","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"jeraldgau"},"content":"        return by;","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"jeraldgau"},"content":"    @Override","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"jeraldgau"},"content":"    public String toSaveString() {","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"jeraldgau"},"content":"        return super.toSaveString() + \" /by \" + getDeadline() + System.lineSeparator();","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"jeraldgau"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"jeraldgau"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"jeraldgau"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"jeraldgau"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"jeraldgau":28}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeraldgau"},"content":"package duke.task;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"jeraldgau"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"jeraldgau"},"content":"    private String start; // Start date/time","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"jeraldgau"},"content":"    private String end;   // End date/time","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"jeraldgau"},"content":"    public Event(String description, String start, String end) {","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"jeraldgau"},"content":"        super(description);","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"jeraldgau"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"jeraldgau"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"jeraldgau"},"content":"    public String getStart() {","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"jeraldgau"},"content":"        return start;","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"jeraldgau"},"content":"    public void setStart(String start) {","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"jeraldgau"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"jeraldgau"},"content":"    public String getEnd() {","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"jeraldgau"},"content":"        return end;","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"jeraldgau"},"content":"    public void setEnd(String end) {","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"jeraldgau"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"jeraldgau"},"content":"    @Override","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"jeraldgau"},"content":"    public String toSaveString() {","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"jeraldgau"},"content":"        return super.toSaveString() + \" /from \" + getStart() + \" /to \" + getEnd() + System.lineSeparator();","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":33,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":34,"author":{"gitId":"jeraldgau"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"jeraldgau"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"jeraldgau"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + start","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"jeraldgau"},"content":"                + \" to: \" + end + \")\";","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"jeraldgau"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"jeraldgau":39}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeraldgau"},"content":"package duke.task;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"jeraldgau"},"content":"public class Task {","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"jeraldgau"},"content":"    private String description;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"jeraldgau"},"content":"    private boolean isDone;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"jeraldgau"},"content":"    private static int taskCount \u003d 0;","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"jeraldgau"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"jeraldgau"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"jeraldgau"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"jeraldgau"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"jeraldgau"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"jeraldgau"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"jeraldgau"},"content":"        return this.description;","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"jeraldgau"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"jeraldgau"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"jeraldgau"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"jeraldgau"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"jeraldgau"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"jeraldgau"},"content":"        if(isDone) {","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"jeraldgau"},"content":"            // Mark done task with X","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"jeraldgau"},"content":"            return \"X\";","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"jeraldgau"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"jeraldgau"},"content":"        return \" \";","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"jeraldgau"},"content":"    public static void incrementCount() {","lastModifiedDate":"2023-02-15"},{"lineNumber":39,"author":{"gitId":"jeraldgau"},"content":"        taskCount++;","lastModifiedDate":"2023-02-15"},{"lineNumber":40,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":41,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":42,"author":{"gitId":"jeraldgau"},"content":"    public static void decrementCount() {","lastModifiedDate":"2023-02-15"},{"lineNumber":43,"author":{"gitId":"jeraldgau"},"content":"        taskCount--;","lastModifiedDate":"2023-02-15"},{"lineNumber":44,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":45,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":46,"author":{"gitId":"jeraldgau"},"content":"    public static int getTaskCount() {","lastModifiedDate":"2023-02-15"},{"lineNumber":47,"author":{"gitId":"jeraldgau"},"content":"        return taskCount;","lastModifiedDate":"2023-02-15"},{"lineNumber":48,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":49,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":50,"author":{"gitId":"jeraldgau"},"content":"    public String getDoneConditionString() {","lastModifiedDate":"2023-02-15"},{"lineNumber":51,"author":{"gitId":"jeraldgau"},"content":"        if (isDone) {","lastModifiedDate":"2023-02-15"},{"lineNumber":52,"author":{"gitId":"jeraldgau"},"content":"            return \"1\";","lastModifiedDate":"2023-02-15"},{"lineNumber":53,"author":{"gitId":"jeraldgau"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":54,"author":{"gitId":"jeraldgau"},"content":"        return \"0\";","lastModifiedDate":"2023-02-15"},{"lineNumber":55,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":56,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":57,"author":{"gitId":"jeraldgau"},"content":"    public String toSaveString() {","lastModifiedDate":"2023-02-15"},{"lineNumber":58,"author":{"gitId":"jeraldgau"},"content":"        return getDoneConditionString() + \" \" + getDescription();","lastModifiedDate":"2023-02-15"},{"lineNumber":59,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":60,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":61,"author":{"gitId":"jeraldgau"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"jeraldgau"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"jeraldgau"},"content":"        return \"[\" + getStatusIcon() + \"] \" + getDescription();","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"jeraldgau"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"jeraldgau":65}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeraldgau"},"content":"package duke.task;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"jeraldgau"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"jeraldgau"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"jeraldgau"},"content":"        super(description);","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"jeraldgau"},"content":"    @Override","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"jeraldgau"},"content":"    public String toSaveString() {","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"jeraldgau"},"content":"        return super.toSaveString() + System.lineSeparator();","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"jeraldgau"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"jeraldgau"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"jeraldgau"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"jeraldgau"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"jeraldgau":18}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jeraldgau"},"content":"eat bread","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"jeraldgau"},"content":"lunch appointment /from Jan 7 12pm /to 2pm","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"jeraldgau"},"content":"assignment submission /by Thursday","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"jeraldgau"},"content":"list","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"jeraldgau"},"content":"mark 1","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"jeraldgau"},"content":"mark 3","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"jeraldgau"},"content":"list","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"jeraldgau"},"content":"unmark 3","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"jeraldgau"},"content":"list","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"jeraldgau"},"content":"bye","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"jeraldgau":10}}]
