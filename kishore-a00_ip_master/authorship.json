[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"kishore-a00"},"content":"# Duke User Guide","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"kishore-a00"},"content":"## Key things to take note:","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"kishore-a00"},"content":"Write the commands in lower case eg. `todo`","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"kishore-a00"},"content":"Ensure you have Java 11 on your computer","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"kishore-a00"},"content":"Duke is your personal assistant who helps you keep track of tasks.","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"kishore-a00"},"content":"Duke supports storing 3 types of tasks: `todo`, `deadline` and `event`","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"kishore-a00"},"content":"Once you are done with a task you can `mark` it or `unmark` a previously marked task","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"kishore-a00"},"content":"You can `list` all the marked and unmarked tasks that you have","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"kishore-a00"},"content":"Duke has a `find` feature to allow you to look for tasks in your list","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"kishore-a00"},"content":"You can `delete` a task once you no longer want it in your list","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":24,"author":{"gitId":"kishore-a00"},"content":"Best of all, after saying `bye`, Duke still remembers your tasks","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":26,"author":{"gitId":"kishore-a00"},"content":"Duke supports the following commands: `todo`, `deadline`, `event`, `list`, `mark`, `unmark`, `find`, `delete` and `bye`.","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":31,"author":{"gitId":"kishore-a00"},"content":"### Create a ToDo: `todo`","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"kishore-a00"},"content":"Creates and stores a todo type of task","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"kishore-a00"},"content":"Usage: `todo TASK_DESCRIPTION`","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"kishore-a00"},"content":"Example: `todo Buy apples`","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"kishore-a00"},"content":"Expexted output:","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"kishore-a00"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"kishore-a00"},"content":"________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"kishore-a00"},"content":"Sure, I\u0027ve added this task: ","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"kishore-a00"},"content":"[T] [ ] Buy apples","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"kishore-a00"},"content":"You have 1 task!","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"kishore-a00"},"content":"________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"kishore-a00"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"kishore-a00"},"content":"### Create a Deadline: `deadline`","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"kishore-a00"},"content":"Create and stores a deadline type of task","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"kishore-a00"},"content":"Usage: `deadline TASK_DESCRIPTION /by DUE_DATE`","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"kishore-a00"},"content":"Example: `deadline CS2113 Homework /by tomorrow`","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"kishore-a00"},"content":"Expected output:","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"kishore-a00"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"kishore-a00"},"content":"________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"kishore-a00"},"content":"Sure, I\u0027ve added this task: ","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"kishore-a00"},"content":"[D] [ ] CS2113 Homework (by: tomorrow)","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"kishore-a00"},"content":"You currently have 2 tasks in the list.","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"kishore-a00"},"content":"________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"kishore-a00"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"kishore-a00"},"content":"### Create an Event: `event`","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"kishore-a00"},"content":"Creates and stores an event type of task","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"kishore-a00"},"content":"Usage: `event TASK_DESCRIPTION /from START_DATE /to END_DATE`","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"kishore-a00"},"content":"Example: `event Birthday Party /from Tuesday /to Sunday`","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"kishore-a00"},"content":"Expected output:","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"kishore-a00"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"kishore-a00"},"content":"________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":76,"author":{"gitId":"kishore-a00"},"content":"Sure, I\u0027ve added this task: ","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"kishore-a00"},"content":"[E] [ ] Birthday Party (from: Tuesday to: Sunday)","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"kishore-a00"},"content":"You currently have 3 tasks in the list.","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"kishore-a00"},"content":"________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":80,"author":{"gitId":"kishore-a00"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":82,"author":{"gitId":"kishore-a00"},"content":"### List all tasks: `list`","lastModifiedDate":"2023-03-03"},{"lineNumber":83,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":84,"author":{"gitId":"kishore-a00"},"content":"List all the tasks you have added","lastModifiedDate":"2023-03-03"},{"lineNumber":85,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":86,"author":{"gitId":"kishore-a00"},"content":"Usage: `list`","lastModifiedDate":"2023-03-03"},{"lineNumber":87,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":88,"author":{"gitId":"kishore-a00"},"content":"Example: `list`","lastModifiedDate":"2023-03-03"},{"lineNumber":89,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":90,"author":{"gitId":"kishore-a00"},"content":"Expected output:","lastModifiedDate":"2023-03-03"},{"lineNumber":91,"author":{"gitId":"kishore-a00"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":92,"author":{"gitId":"kishore-a00"},"content":"________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":93,"author":{"gitId":"kishore-a00"},"content":"Here are the tasks in your list:","lastModifiedDate":"2023-03-03"},{"lineNumber":94,"author":{"gitId":"kishore-a00"},"content":"1. [T] [ ] Buy apples","lastModifiedDate":"2023-03-03"},{"lineNumber":95,"author":{"gitId":"kishore-a00"},"content":"2. [D] [ ] CS2113 Homework (by: tomorrow)","lastModifiedDate":"2023-03-03"},{"lineNumber":96,"author":{"gitId":"kishore-a00"},"content":"3. [E] [ ] Birthday Party (from: Tuesday to: Sunday)","lastModifiedDate":"2023-03-03"},{"lineNumber":97,"author":{"gitId":"kishore-a00"},"content":"________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":98,"author":{"gitId":"kishore-a00"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":99,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":100,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":101,"author":{"gitId":"kishore-a00"},"content":"### Mark a task: `mark`","lastModifiedDate":"2023-03-03"},{"lineNumber":102,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":103,"author":{"gitId":"kishore-a00"},"content":"Mark an unmarked task","lastModifiedDate":"2023-03-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":105,"author":{"gitId":"kishore-a00"},"content":"Usage: `mark TASK_INDEX`","lastModifiedDate":"2023-03-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":107,"author":{"gitId":"kishore-a00"},"content":"Example: `mark 3`","lastModifiedDate":"2023-03-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":109,"author":{"gitId":"kishore-a00"},"content":"Expected output:","lastModifiedDate":"2023-03-03"},{"lineNumber":110,"author":{"gitId":"kishore-a00"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":111,"author":{"gitId":"kishore-a00"},"content":"________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":112,"author":{"gitId":"kishore-a00"},"content":"Great! I\u0027ve marked it as done!","lastModifiedDate":"2023-03-03"},{"lineNumber":113,"author":{"gitId":"kishore-a00"},"content":"[X] Birthday Party","lastModifiedDate":"2023-03-03"},{"lineNumber":114,"author":{"gitId":"kishore-a00"},"content":"________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":115,"author":{"gitId":"kishore-a00"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":116,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":117,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":118,"author":{"gitId":"kishore-a00"},"content":"### Unmark a task: `unmark`","lastModifiedDate":"2023-03-03"},{"lineNumber":119,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":120,"author":{"gitId":"kishore-a00"},"content":"Unmark a marked task","lastModifiedDate":"2023-03-03"},{"lineNumber":121,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":122,"author":{"gitId":"kishore-a00"},"content":"Usage: `unmark TASK_INDEX`","lastModifiedDate":"2023-03-03"},{"lineNumber":123,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":124,"author":{"gitId":"kishore-a00"},"content":"Example: `unmark 3`","lastModifiedDate":"2023-03-03"},{"lineNumber":125,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":126,"author":{"gitId":"kishore-a00"},"content":"Expected output:","lastModifiedDate":"2023-03-03"},{"lineNumber":127,"author":{"gitId":"kishore-a00"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":128,"author":{"gitId":"kishore-a00"},"content":"________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":129,"author":{"gitId":"kishore-a00"},"content":"Alright, I\u0027ve marked the task as undone.","lastModifiedDate":"2023-03-03"},{"lineNumber":130,"author":{"gitId":"kishore-a00"},"content":"[ ] Birthday Party","lastModifiedDate":"2023-03-03"},{"lineNumber":131,"author":{"gitId":"kishore-a00"},"content":"________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":132,"author":{"gitId":"kishore-a00"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":133,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":134,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":135,"author":{"gitId":"kishore-a00"},"content":"### Find tasks: `find`","lastModifiedDate":"2023-03-03"},{"lineNumber":136,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":137,"author":{"gitId":"kishore-a00"},"content":"Find tasks based on a letter, word or phrase","lastModifiedDate":"2023-03-03"},{"lineNumber":138,"author":{"gitId":"kishore-a00"},"content":"Note that the statement after the find function is case sensitive.","lastModifiedDate":"2023-03-03"},{"lineNumber":139,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":140,"author":{"gitId":"kishore-a00"},"content":"Usage: `find STATEMENT`","lastModifiedDate":"2023-03-03"},{"lineNumber":141,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":142,"author":{"gitId":"kishore-a00"},"content":"Example: `find B`","lastModifiedDate":"2023-03-03"},{"lineNumber":143,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":144,"author":{"gitId":"kishore-a00"},"content":"Expected output:","lastModifiedDate":"2023-03-03"},{"lineNumber":145,"author":{"gitId":"kishore-a00"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":146,"author":{"gitId":"kishore-a00"},"content":"________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":147,"author":{"gitId":"kishore-a00"},"content":"Here are the matching tasks I found: ","lastModifiedDate":"2023-03-03"},{"lineNumber":148,"author":{"gitId":"kishore-a00"},"content":"1. [T] [ ] Buy apples","lastModifiedDate":"2023-03-03"},{"lineNumber":149,"author":{"gitId":"kishore-a00"},"content":"2. [E] [ ] Birthday Party (from: Tuesday to: Sunday)","lastModifiedDate":"2023-03-03"},{"lineNumber":150,"author":{"gitId":"kishore-a00"},"content":"________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":151,"author":{"gitId":"kishore-a00"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":152,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":153,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":154,"author":{"gitId":"kishore-a00"},"content":"### Delete task: `delete`","lastModifiedDate":"2023-03-03"},{"lineNumber":155,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":156,"author":{"gitId":"kishore-a00"},"content":"Delete a task based on its corresponding index","lastModifiedDate":"2023-03-03"},{"lineNumber":157,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":158,"author":{"gitId":"kishore-a00"},"content":"Usage: `delete INDEX`","lastModifiedDate":"2023-03-03"},{"lineNumber":159,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":160,"author":{"gitId":"kishore-a00"},"content":"Example: `delete 3`","lastModifiedDate":"2023-03-03"},{"lineNumber":161,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":162,"author":{"gitId":"kishore-a00"},"content":"Expected output:","lastModifiedDate":"2023-03-03"},{"lineNumber":163,"author":{"gitId":"kishore-a00"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":164,"author":{"gitId":"kishore-a00"},"content":"________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":165,"author":{"gitId":"kishore-a00"},"content":"Alright, I have removed this task: ","lastModifiedDate":"2023-03-03"},{"lineNumber":166,"author":{"gitId":"kishore-a00"},"content":"[E] [ ] Birthday Party (from: Tuesday to: Sunday)","lastModifiedDate":"2023-03-03"},{"lineNumber":167,"author":{"gitId":"kishore-a00"},"content":"You currently have 2 tasks in the list.","lastModifiedDate":"2023-03-03"},{"lineNumber":168,"author":{"gitId":"kishore-a00"},"content":"________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":169,"author":{"gitId":"kishore-a00"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":172,"author":{"gitId":"kishore-a00"},"content":"### Save and exit: `bye`","lastModifiedDate":"2023-03-03"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":174,"author":{"gitId":"kishore-a00"},"content":"Save all tasks and exit Duke","lastModifiedDate":"2023-03-03"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":176,"author":{"gitId":"kishore-a00"},"content":"Usage: `bye`","lastModifiedDate":"2023-03-03"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":178,"author":{"gitId":"kishore-a00"},"content":"Example: `bye`","lastModifiedDate":"2023-03-03"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":180,"author":{"gitId":"kishore-a00"},"content":"Expected output:","lastModifiedDate":"2023-03-03"},{"lineNumber":181,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":182,"author":{"gitId":"kishore-a00"},"content":"I have saved your tasks.","lastModifiedDate":"2023-03-03"},{"lineNumber":183,"author":{"gitId":"kishore-a00"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2023-03-03"},{"lineNumber":184,"author":{"gitId":"kishore-a00"},"content":"________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":185,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":186,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":187,"author":{"gitId":"kishore-a00"},"content":"## Running Duke for the first time vs subsequent times","lastModifiedDate":"2023-03-03"},{"lineNumber":188,"author":{"gitId":"kishore-a00"},"content":"### Running Duke for the first time:","lastModifiedDate":"2023-03-03"},{"lineNumber":189,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":190,"author":{"gitId":"kishore-a00"},"content":"As there is no saved text file to load the tasks from. Duke will only create the text file after the command `find` or `bye` is used.","lastModifiedDate":"2023-03-03"},{"lineNumber":191,"author":{"gitId":"kishore-a00"},"content":"Expected output:","lastModifiedDate":"2023-03-03"},{"lineNumber":192,"author":{"gitId":"kishore-a00"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":193,"author":{"gitId":"kishore-a00"},"content":"________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":194,"author":{"gitId":"kishore-a00"},"content":"Hello! I\u0027m Duke","lastModifiedDate":"2023-03-03"},{"lineNumber":195,"author":{"gitId":"kishore-a00"},"content":"________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":196,"author":{"gitId":"kishore-a00"},"content":"Please wait, I am attempting to retrieve your saved tasks...","lastModifiedDate":"2023-03-03"},{"lineNumber":197,"author":{"gitId":"kishore-a00"},"content":"Hmm.. I can\u0027t seem to locate a saved file...","lastModifiedDate":"2023-03-03"},{"lineNumber":198,"author":{"gitId":"kishore-a00"},"content":"No worries, I have just created a new file for you:D","lastModifiedDate":"2023-03-03"},{"lineNumber":199,"author":{"gitId":"kishore-a00"},"content":"Add your first task!","lastModifiedDate":"2023-03-03"},{"lineNumber":200,"author":{"gitId":"kishore-a00"},"content":"________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":201,"author":{"gitId":"kishore-a00"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":203,"author":{"gitId":"kishore-a00"},"content":"### Running Duke again:","lastModifiedDate":"2023-03-03"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":205,"author":{"gitId":"kishore-a00"},"content":"The saved tasks will be loaded the moment you open Duke again.","lastModifiedDate":"2023-03-03"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":207,"author":{"gitId":"kishore-a00"},"content":"Expected output:","lastModifiedDate":"2023-03-03"},{"lineNumber":208,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":209,"author":{"gitId":"kishore-a00"},"content":"________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":210,"author":{"gitId":"kishore-a00"},"content":"Hello! I\u0027m Duke","lastModifiedDate":"2023-03-03"},{"lineNumber":211,"author":{"gitId":"kishore-a00"},"content":"________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":212,"author":{"gitId":"kishore-a00"},"content":"Please wait, I am attempting to retrieve your saved tasks...","lastModifiedDate":"2023-03-03"},{"lineNumber":213,"author":{"gitId":"kishore-a00"},"content":"________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":214,"author":{"gitId":"kishore-a00"},"content":"________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":215,"author":{"gitId":"kishore-a00"},"content":"Here are the tasks in your list:","lastModifiedDate":"2023-03-03"},{"lineNumber":216,"author":{"gitId":"kishore-a00"},"content":"1. [T] [ ] Buy apples","lastModifiedDate":"2023-03-03"},{"lineNumber":217,"author":{"gitId":"kishore-a00"},"content":"2. [D] [ ] CS2113 Homework (by: tomorrow)","lastModifiedDate":"2023-03-03"},{"lineNumber":218,"author":{"gitId":"kishore-a00"},"content":"________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":219,"author":{"gitId":"kishore-a00"},"content":"________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":220,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"kishore-a00":191,"-":29}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kishore-a00"},"content":"package duke;","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"kishore-a00"},"content":"import duke.storage.ReadFromFile;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"kishore-a00"},"content":"import duke.storage.SaveToFile;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"kishore-a00"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"kishore-a00"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"kishore-a00"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"kishore-a00"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"kishore-a00"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"kishore-a00"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"kishore-a00"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"kishore-a00"},"content":"import java.io.File;","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"kishore-a00"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"kishore-a00"},"content":"    final static String FILE_PATH \u003d \"savedTasks.txt\";","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"kishore-a00"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"kishore-a00"},"content":"     * Reads inputs from user and performs the corresponding actions.","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"kishore-a00"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"kishore-a00"},"content":"     * @param args user input","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"kishore-a00"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"kishore-a00"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"kishore-a00"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"kishore-a00"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"kishore-a00"},"content":"        ui.showWelcomeMessage();","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"kishore-a00"},"content":"        ui.showSavedTasksRetrievalMessage();","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"kishore-a00"},"content":"        try {","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"kishore-a00"},"content":"            printFileContents(FILE_PATH, tasks);","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"kishore-a00"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":34,"author":{"gitId":"kishore-a00"},"content":"            ui.showFileNotFoundMessage();","lastModifiedDate":"2023-03-02"},{"lineNumber":35,"author":{"gitId":"kishore-a00"},"content":"            ui.showNewFileCreationMessage();","lastModifiedDate":"2023-03-02"},{"lineNumber":36,"author":{"gitId":"kishore-a00"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":37,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"kishore-a00"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-02-07"},{"lineNumber":39,"author":{"gitId":"kishore-a00"},"content":"        while (!isExit) {","lastModifiedDate":"2023-02-07"},{"lineNumber":40,"author":{"gitId":"kishore-a00"},"content":"            String messageFromUser;","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"kishore-a00"},"content":"            messageFromUser \u003d in.nextLine();","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"kishore-a00"},"content":"            try {","lastModifiedDate":"2023-02-08"},{"lineNumber":43,"author":{"gitId":"kishore-a00"},"content":"                isExit \u003d isExitCommandGiven(messageFromUser);","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"kishore-a00"},"content":"                handleMessageFromUser(messageFromUser, tasks);","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"kishore-a00"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-08"},{"lineNumber":46,"author":{"gitId":"kishore-a00"},"content":"                ui.showMissingAttributesMessage();","lastModifiedDate":"2023-03-02"},{"lineNumber":47,"author":{"gitId":"kishore-a00"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-02-08"},{"lineNumber":48,"author":{"gitId":"kishore-a00"},"content":"                ui.showIncorrectCommandWarning();","lastModifiedDate":"2023-03-02"},{"lineNumber":49,"author":{"gitId":"kishore-a00"},"content":"            } catch (FileNotFoundException e) {","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"kishore-a00"},"content":"                ui.showFileNotFoundMessage();","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"kishore-a00"},"content":"                ui.showNewFileCreationMessage();","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"kishore-a00"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"kishore-a00"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"kishore-a00"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":55,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":56,"author":{"gitId":"kishore-a00"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"kishore-a00"},"content":"     * Returns true if the message from user contains the keywords todo, deadline or event.","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"kishore-a00"},"content":"     * This function checks if the user has mentioned any of the 3 keywords todo, deadline or event","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"kishore-a00"},"content":"     * to differentiate task creation actions from other actions.","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"kishore-a00"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"kishore-a00"},"content":"     * @param messageFromUser This is the user input","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"kishore-a00"},"content":"     * @return true if the message from user contains the keywords todo, deadline or event","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"kishore-a00"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"kishore-a00"},"content":"    public static boolean hasTaskKeyword(String messageFromUser) {","lastModifiedDate":"2023-02-07"},{"lineNumber":65,"author":{"gitId":"kishore-a00"},"content":"        boolean isToDo \u003d messageFromUser.startsWith(\"todo\");","lastModifiedDate":"2023-02-07"},{"lineNumber":66,"author":{"gitId":"kishore-a00"},"content":"        boolean isDeadline \u003d messageFromUser.startsWith(\"deadline\");","lastModifiedDate":"2023-02-07"},{"lineNumber":67,"author":{"gitId":"kishore-a00"},"content":"        boolean isEvent \u003d messageFromUser.startsWith(\"event\");","lastModifiedDate":"2023-02-07"},{"lineNumber":68,"author":{"gitId":"kishore-a00"},"content":"        return (isToDo || isDeadline || isEvent);","lastModifiedDate":"2023-02-07"},{"lineNumber":69,"author":{"gitId":"kishore-a00"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":70,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":71,"author":{"gitId":"kishore-a00"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"kishore-a00"},"content":"     * This function creates a ToDo, Deadline or Event Object based on the type of task the user specified.","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"kishore-a00"},"content":"     * This object is then stored in the parent class object, Task as an ArrayList of Task is used to store","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"kishore-a00"},"content":"     * these objects.","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"kishore-a00"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":76,"author":{"gitId":"kishore-a00"},"content":"     * @param messageFromUser This is the user input","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"kishore-a00"},"content":"     * @return Task object","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"kishore-a00"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"kishore-a00"},"content":"    public static Task handleTaskCreation(String messageFromUser) {","lastModifiedDate":"2023-02-07"},{"lineNumber":80,"author":{"gitId":"kishore-a00"},"content":"        Task newTask;","lastModifiedDate":"2023-02-07"},{"lineNumber":81,"author":{"gitId":"kishore-a00"},"content":"        if (messageFromUser.startsWith(\"todo\")) {","lastModifiedDate":"2023-02-07"},{"lineNumber":82,"author":{"gitId":"kishore-a00"},"content":"            newTask \u003d createToDo(messageFromUser);","lastModifiedDate":"2023-02-07"},{"lineNumber":83,"author":{"gitId":"kishore-a00"},"content":"        } else if (messageFromUser.startsWith(\"deadline\")) {","lastModifiedDate":"2023-02-07"},{"lineNumber":84,"author":{"gitId":"kishore-a00"},"content":"            newTask \u003d createDeadline(messageFromUser);","lastModifiedDate":"2023-02-07"},{"lineNumber":85,"author":{"gitId":"kishore-a00"},"content":"        } else {","lastModifiedDate":"2023-01-30"},{"lineNumber":86,"author":{"gitId":"kishore-a00"},"content":"            newTask \u003d createEvent(messageFromUser);","lastModifiedDate":"2023-02-07"},{"lineNumber":87,"author":{"gitId":"kishore-a00"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":88,"author":{"gitId":"kishore-a00"},"content":"        return newTask;","lastModifiedDate":"2023-02-07"},{"lineNumber":89,"author":{"gitId":"kishore-a00"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":90,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":91,"author":{"gitId":"kishore-a00"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":92,"author":{"gitId":"kishore-a00"},"content":"     * Adds Task object to ArrayList of Tasks and prints out that the object has been successfully added as well as","lastModifiedDate":"2023-03-03"},{"lineNumber":93,"author":{"gitId":"kishore-a00"},"content":"     * the number of tasks in the ArrayList.","lastModifiedDate":"2023-03-03"},{"lineNumber":94,"author":{"gitId":"kishore-a00"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":95,"author":{"gitId":"kishore-a00"},"content":"     * @param newTask Task object to be added to ArrayList","lastModifiedDate":"2023-03-03"},{"lineNumber":96,"author":{"gitId":"kishore-a00"},"content":"     * @param tasks   ArrayList to store Task objects","lastModifiedDate":"2023-03-03"},{"lineNumber":97,"author":{"gitId":"kishore-a00"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":98,"author":{"gitId":"kishore-a00"},"content":"    public static void addToList(Task newTask, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-15"},{"lineNumber":99,"author":{"gitId":"kishore-a00"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-02"},{"lineNumber":100,"author":{"gitId":"kishore-a00"},"content":"        ui.horizontalLine();","lastModifiedDate":"2023-03-02"},{"lineNumber":101,"author":{"gitId":"kishore-a00"},"content":"        ui.showTaskAddedMessage();","lastModifiedDate":"2023-03-02"},{"lineNumber":102,"author":{"gitId":"kishore-a00"},"content":"        displayTask(newTask);","lastModifiedDate":"2023-02-07"},{"lineNumber":103,"author":{"gitId":"kishore-a00"},"content":"        tasks.add(newTask);","lastModifiedDate":"2023-02-15"},{"lineNumber":104,"author":{"gitId":"kishore-a00"},"content":"        ui.printNumberOfTasks(tasks.size());","lastModifiedDate":"2023-03-03"},{"lineNumber":105,"author":{"gitId":"kishore-a00"},"content":"        ui.horizontalLine();","lastModifiedDate":"2023-03-02"},{"lineNumber":106,"author":{"gitId":"kishore-a00"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":107,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":108,"author":{"gitId":"kishore-a00"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":109,"author":{"gitId":"kishore-a00"},"content":"     * Deletes the object at the specific index in the ArrayList as specified by the user.","lastModifiedDate":"2023-03-03"},{"lineNumber":110,"author":{"gitId":"kishore-a00"},"content":"     * Since the ArrayList has 0 based indexing, the 1 based index specified by the user will be decremented by 1.","lastModifiedDate":"2023-03-03"},{"lineNumber":111,"author":{"gitId":"kishore-a00"},"content":"     * Task that was deleted will be shown to the user.","lastModifiedDate":"2023-03-03"},{"lineNumber":112,"author":{"gitId":"kishore-a00"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":113,"author":{"gitId":"kishore-a00"},"content":"     * @param messageFromUser This is the user input","lastModifiedDate":"2023-03-03"},{"lineNumber":114,"author":{"gitId":"kishore-a00"},"content":"     * @param tasks           ArrayList to store Task objects","lastModifiedDate":"2023-03-03"},{"lineNumber":115,"author":{"gitId":"kishore-a00"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":116,"author":{"gitId":"kishore-a00"},"content":"    public static void deleteFromList(String messageFromUser, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-15"},{"lineNumber":117,"author":{"gitId":"kishore-a00"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-02"},{"lineNumber":118,"author":{"gitId":"kishore-a00"},"content":"        ui.horizontalLine();","lastModifiedDate":"2023-03-02"},{"lineNumber":119,"author":{"gitId":"kishore-a00"},"content":"        // messageFromUser is in the format delete INDEX","lastModifiedDate":"2023-02-15"},{"lineNumber":120,"author":{"gitId":"kishore-a00"},"content":"        String[] splitMessage \u003d messageFromUser.split(\" \");","lastModifiedDate":"2023-02-15"},{"lineNumber":121,"author":{"gitId":"kishore-a00"},"content":"        int indexToDelete \u003d Integer.parseInt(splitMessage[1]);","lastModifiedDate":"2023-02-15"},{"lineNumber":122,"author":{"gitId":"kishore-a00"},"content":"        // Decrement 1 as ArrayList is index 0 based","lastModifiedDate":"2023-02-15"},{"lineNumber":123,"author":{"gitId":"kishore-a00"},"content":"        indexToDelete--;","lastModifiedDate":"2023-02-15"},{"lineNumber":124,"author":{"gitId":"kishore-a00"},"content":"        Task taskToDelete \u003d tasks.get(indexToDelete);","lastModifiedDate":"2023-02-15"},{"lineNumber":125,"author":{"gitId":"kishore-a00"},"content":"        tasks.remove(indexToDelete);","lastModifiedDate":"2023-02-15"},{"lineNumber":126,"author":{"gitId":"kishore-a00"},"content":"        ui.showTaskRemovedMessage();","lastModifiedDate":"2023-03-02"},{"lineNumber":127,"author":{"gitId":"kishore-a00"},"content":"        displayTask(taskToDelete);","lastModifiedDate":"2023-02-15"},{"lineNumber":128,"author":{"gitId":"kishore-a00"},"content":"        ui.printNumberOfTasks(tasks.size());","lastModifiedDate":"2023-03-03"},{"lineNumber":129,"author":{"gitId":"kishore-a00"},"content":"        ui.horizontalLine();","lastModifiedDate":"2023-03-02"},{"lineNumber":130,"author":{"gitId":"kishore-a00"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":131,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":132,"author":{"gitId":"kishore-a00"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":133,"author":{"gitId":"kishore-a00"},"content":"     * Changes the task status of the task in the ArrayList as specified by the user.","lastModifiedDate":"2023-03-03"},{"lineNumber":134,"author":{"gitId":"kishore-a00"},"content":"     * Only marking an undone task as done or a done task as unmarked is allowed.","lastModifiedDate":"2023-03-03"},{"lineNumber":135,"author":{"gitId":"kishore-a00"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":136,"author":{"gitId":"kishore-a00"},"content":"     * @param sentence User input","lastModifiedDate":"2023-03-03"},{"lineNumber":137,"author":{"gitId":"kishore-a00"},"content":"     * @param tasks    ArrayList to store Task objects","lastModifiedDate":"2023-03-03"},{"lineNumber":138,"author":{"gitId":"kishore-a00"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":139,"author":{"gitId":"kishore-a00"},"content":"    public static void changeTaskStatus(String sentence, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-15"},{"lineNumber":140,"author":{"gitId":"kishore-a00"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-02"},{"lineNumber":141,"author":{"gitId":"kishore-a00"},"content":"        String[] words \u003d sentence.split(\" \");","lastModifiedDate":"2023-02-07"},{"lineNumber":142,"author":{"gitId":"kishore-a00"},"content":"        int taskNumber \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2023-02-07"},{"lineNumber":143,"author":{"gitId":"kishore-a00"},"content":"        // Decrement 1 as ArrayList is index 0 based","lastModifiedDate":"2023-02-15"},{"lineNumber":144,"author":{"gitId":"kishore-a00"},"content":"        taskNumber--;","lastModifiedDate":"2023-02-15"},{"lineNumber":145,"author":{"gitId":"kishore-a00"},"content":"        Task currentTask \u003d tasks.get(taskNumber);","lastModifiedDate":"2023-02-15"},{"lineNumber":146,"author":{"gitId":"kishore-a00"},"content":"        if (words[0].trim().equals(\"mark\")) {","lastModifiedDate":"2023-02-07"},{"lineNumber":147,"author":{"gitId":"kishore-a00"},"content":"            currentTask.markTaskAsDone();","lastModifiedDate":"2023-03-03"},{"lineNumber":148,"author":{"gitId":"kishore-a00"},"content":"        } else {","lastModifiedDate":"2023-02-07"},{"lineNumber":149,"author":{"gitId":"kishore-a00"},"content":"            currentTask.markTaskAsUndone();","lastModifiedDate":"2023-03-03"},{"lineNumber":150,"author":{"gitId":"kishore-a00"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":151,"author":{"gitId":"kishore-a00"},"content":"        ui.horizontalLine();","lastModifiedDate":"2023-03-02"},{"lineNumber":152,"author":{"gitId":"kishore-a00"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":153,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":154,"author":{"gitId":"kishore-a00"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":155,"author":{"gitId":"kishore-a00"},"content":"     * Displays all the tasks in the ArrayList to the user by iterating through the entire ArrayList.","lastModifiedDate":"2023-03-03"},{"lineNumber":156,"author":{"gitId":"kishore-a00"},"content":"     * If there are no tasks in the ArrayList, a corresponding message will be printed.","lastModifiedDate":"2023-03-03"},{"lineNumber":157,"author":{"gitId":"kishore-a00"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":158,"author":{"gitId":"kishore-a00"},"content":"     * @param tasks ArrayList to store Task objects","lastModifiedDate":"2023-03-03"},{"lineNumber":159,"author":{"gitId":"kishore-a00"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":160,"author":{"gitId":"kishore-a00"},"content":"    public static void displayList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-15"},{"lineNumber":161,"author":{"gitId":"kishore-a00"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-02"},{"lineNumber":162,"author":{"gitId":"kishore-a00"},"content":"        int totalNumberOfTasks \u003d tasks.size();","lastModifiedDate":"2023-02-15"},{"lineNumber":163,"author":{"gitId":"kishore-a00"},"content":"        if (totalNumberOfTasks \u003e 0) {","lastModifiedDate":"2023-01-30"},{"lineNumber":164,"author":{"gitId":"kishore-a00"},"content":"            ui.showDisplayListHeaderMessage();","lastModifiedDate":"2023-03-02"},{"lineNumber":165,"author":{"gitId":"kishore-a00"},"content":"            iterateThroughListAndDisplayTasks(tasks);","lastModifiedDate":"2023-03-03"},{"lineNumber":166,"author":{"gitId":"kishore-a00"},"content":"        } else {","lastModifiedDate":"2023-03-03"},{"lineNumber":167,"author":{"gitId":"kishore-a00"},"content":"            ui.showNoTasksToDisplayMessage();","lastModifiedDate":"2023-03-03"},{"lineNumber":168,"author":{"gitId":"kishore-a00"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":169,"author":{"gitId":"kishore-a00"},"content":"        ui.horizontalLine();","lastModifiedDate":"2023-03-03"},{"lineNumber":170,"author":{"gitId":"kishore-a00"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":171,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":172,"author":{"gitId":"kishore-a00"},"content":"    public static void iterateThroughListAndDisplayTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-03-03"},{"lineNumber":173,"author":{"gitId":"kishore-a00"},"content":"        int totalNumberOfTasks \u003d tasks.size();","lastModifiedDate":"2023-03-03"},{"lineNumber":174,"author":{"gitId":"kishore-a00"},"content":"        for (int index \u003d 0; index \u003c totalNumberOfTasks; index +\u003d 1) {","lastModifiedDate":"2023-02-15"},{"lineNumber":175,"author":{"gitId":"kishore-a00"},"content":"            Task currentTask \u003d tasks.get(index);","lastModifiedDate":"2023-02-15"},{"lineNumber":176,"author":{"gitId":"kishore-a00"},"content":"            System.out.print(index + 1 + \". \");","lastModifiedDate":"2023-02-15"},{"lineNumber":177,"author":{"gitId":"kishore-a00"},"content":"            displayTask(currentTask);","lastModifiedDate":"2023-02-06"},{"lineNumber":178,"author":{"gitId":"kishore-a00"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":179,"author":{"gitId":"kishore-a00"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":180,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":181,"author":{"gitId":"kishore-a00"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":182,"author":{"gitId":"kishore-a00"},"content":"     * Displays each specific task based on whether it is a ToDo, Deadline or Event type of task.","lastModifiedDate":"2023-03-03"},{"lineNumber":183,"author":{"gitId":"kishore-a00"},"content":"     * The information of the corresponding task will be formatted and displayed correctly.","lastModifiedDate":"2023-03-03"},{"lineNumber":184,"author":{"gitId":"kishore-a00"},"content":"     * The tasks will be displayed as follows:","lastModifiedDate":"2023-03-03"},{"lineNumber":185,"author":{"gitId":"kishore-a00"},"content":"     * ToDo: [T] [{STATUS}] {TODO MESSAGE}","lastModifiedDate":"2023-03-03"},{"lineNumber":186,"author":{"gitId":"kishore-a00"},"content":"     * Deadline: [D] [{STATUS}] {Deadline message (by: {DUE_DATE})}","lastModifiedDate":"2023-03-03"},{"lineNumber":187,"author":{"gitId":"kishore-a00"},"content":"     * Event: [E] [{STATUS}] {Event message (from: {START} to: {END})}","lastModifiedDate":"2023-03-03"},{"lineNumber":188,"author":{"gitId":"kishore-a00"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":189,"author":{"gitId":"kishore-a00"},"content":"     * @param currentTask Single task selected from ArrayList of Task objects to be displayed","lastModifiedDate":"2023-03-03"},{"lineNumber":190,"author":{"gitId":"kishore-a00"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":191,"author":{"gitId":"kishore-a00"},"content":"    public static void displayTask(Task currentTask) {","lastModifiedDate":"2023-02-07"},{"lineNumber":192,"author":{"gitId":"kishore-a00"},"content":"        // Check task type","lastModifiedDate":"2023-02-07"},{"lineNumber":193,"author":{"gitId":"kishore-a00"},"content":"        String taskType \u003d currentTask.getTaskType();","lastModifiedDate":"2023-02-07"},{"lineNumber":194,"author":{"gitId":"kishore-a00"},"content":"        System.out.print(taskType + \" \");","lastModifiedDate":"2023-02-07"},{"lineNumber":195,"author":{"gitId":"kishore-a00"},"content":"        System.out.print(currentTask.getStatus());","lastModifiedDate":"2023-02-07"},{"lineNumber":196,"author":{"gitId":"kishore-a00"},"content":"        System.out.print(currentTask.getTaskInfo());","lastModifiedDate":"2023-02-07"},{"lineNumber":197,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":198,"author":{"gitId":"kishore-a00"},"content":"        switch (taskType) {","lastModifiedDate":"2023-02-07"},{"lineNumber":199,"author":{"gitId":"kishore-a00"},"content":"        case \"[T]\":","lastModifiedDate":"2023-02-07"},{"lineNumber":200,"author":{"gitId":"kishore-a00"},"content":"            System.out.println();","lastModifiedDate":"2023-02-07"},{"lineNumber":201,"author":{"gitId":"kishore-a00"},"content":"            break;","lastModifiedDate":"2023-02-07"},{"lineNumber":202,"author":{"gitId":"kishore-a00"},"content":"        case \"[D]\":","lastModifiedDate":"2023-02-07"},{"lineNumber":203,"author":{"gitId":"kishore-a00"},"content":"            Deadline currentDeadline \u003d (Deadline) currentTask;","lastModifiedDate":"2023-02-07"},{"lineNumber":204,"author":{"gitId":"kishore-a00"},"content":"            String due \u003d currentDeadline.getDueInfo();","lastModifiedDate":"2023-02-07"},{"lineNumber":205,"author":{"gitId":"kishore-a00"},"content":"            System.out.print(\"(by:\" + due + \")\");","lastModifiedDate":"2023-02-07"},{"lineNumber":206,"author":{"gitId":"kishore-a00"},"content":"            System.out.println();","lastModifiedDate":"2023-02-07"},{"lineNumber":207,"author":{"gitId":"kishore-a00"},"content":"            break;","lastModifiedDate":"2023-02-07"},{"lineNumber":208,"author":{"gitId":"kishore-a00"},"content":"        case \"[E]\":","lastModifiedDate":"2023-02-07"},{"lineNumber":209,"author":{"gitId":"kishore-a00"},"content":"            Event currentEvent \u003d (Event) currentTask;","lastModifiedDate":"2023-02-07"},{"lineNumber":210,"author":{"gitId":"kishore-a00"},"content":"            String eventStart \u003d currentEvent.getEventStartInfo();","lastModifiedDate":"2023-02-07"},{"lineNumber":211,"author":{"gitId":"kishore-a00"},"content":"            String eventEnd \u003d currentEvent.getEventEndInfo();","lastModifiedDate":"2023-02-07"},{"lineNumber":212,"author":{"gitId":"kishore-a00"},"content":"            System.out.print(\"(from:\" + eventStart + \"to:\" + eventEnd + \")\");","lastModifiedDate":"2023-02-07"},{"lineNumber":213,"author":{"gitId":"kishore-a00"},"content":"            System.out.println();","lastModifiedDate":"2023-02-07"},{"lineNumber":214,"author":{"gitId":"kishore-a00"},"content":"            break;","lastModifiedDate":"2023-02-07"},{"lineNumber":215,"author":{"gitId":"kishore-a00"},"content":"        default:","lastModifiedDate":"2023-02-07"},{"lineNumber":216,"author":{"gitId":"kishore-a00"},"content":"            System.out.println(\"Unknown task type error!\");","lastModifiedDate":"2023-02-08"},{"lineNumber":217,"author":{"gitId":"kishore-a00"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":218,"author":{"gitId":"kishore-a00"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":219,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":220,"author":{"gitId":"kishore-a00"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":221,"author":{"gitId":"kishore-a00"},"content":"     * Creates and returns a new ToDo object containing the message the user specified.","lastModifiedDate":"2023-03-03"},{"lineNumber":222,"author":{"gitId":"kishore-a00"},"content":"     * The input to this function has to be of the form:","lastModifiedDate":"2023-03-03"},{"lineNumber":223,"author":{"gitId":"kishore-a00"},"content":"     * todo MESSAGE","lastModifiedDate":"2023-03-03"},{"lineNumber":224,"author":{"gitId":"kishore-a00"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":225,"author":{"gitId":"kishore-a00"},"content":"     * @param messageFromUser This is the user input","lastModifiedDate":"2023-03-03"},{"lineNumber":226,"author":{"gitId":"kishore-a00"},"content":"     * @return ToDo object","lastModifiedDate":"2023-03-03"},{"lineNumber":227,"author":{"gitId":"kishore-a00"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":228,"author":{"gitId":"kishore-a00"},"content":"    public static ToDo createToDo(String messageFromUser) {","lastModifiedDate":"2023-02-06"},{"lineNumber":229,"author":{"gitId":"kishore-a00"},"content":"        // Remove the word \"todo\" from message","lastModifiedDate":"2023-02-06"},{"lineNumber":230,"author":{"gitId":"kishore-a00"},"content":"        String[] messageComponents \u003d messageFromUser.split(\" \", 2);","lastModifiedDate":"2023-02-08"},{"lineNumber":231,"author":{"gitId":"kishore-a00"},"content":"        // Add space in front of todo task for formatting","lastModifiedDate":"2023-03-03"},{"lineNumber":232,"author":{"gitId":"kishore-a00"},"content":"        messageComponents[1] \u003d \" \" + messageComponents[1];","lastModifiedDate":"2023-03-03"},{"lineNumber":233,"author":{"gitId":"kishore-a00"},"content":"        return new ToDo(messageComponents[1]);","lastModifiedDate":"2023-03-03"},{"lineNumber":234,"author":{"gitId":"kishore-a00"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":235,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":236,"author":{"gitId":"kishore-a00"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":237,"author":{"gitId":"kishore-a00"},"content":"     * Creates and returns a new Deadline object containing the message and due date the user specified.","lastModifiedDate":"2023-03-03"},{"lineNumber":238,"author":{"gitId":"kishore-a00"},"content":"     * The input to this function has to be of the form:","lastModifiedDate":"2023-03-03"},{"lineNumber":239,"author":{"gitId":"kishore-a00"},"content":"     * deadline MESSAGE /by DUE_DATE","lastModifiedDate":"2023-03-03"},{"lineNumber":240,"author":{"gitId":"kishore-a00"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":241,"author":{"gitId":"kishore-a00"},"content":"     * @param messageFromUser This is the user input","lastModifiedDate":"2023-03-03"},{"lineNumber":242,"author":{"gitId":"kishore-a00"},"content":"     * @return Deadline object","lastModifiedDate":"2023-03-03"},{"lineNumber":243,"author":{"gitId":"kishore-a00"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":244,"author":{"gitId":"kishore-a00"},"content":"    public static Deadline createDeadline(String messageFromUser) {","lastModifiedDate":"2023-02-06"},{"lineNumber":245,"author":{"gitId":"kishore-a00"},"content":"        // Remove the word \"deadline\" from message","lastModifiedDate":"2023-02-06"},{"lineNumber":246,"author":{"gitId":"kishore-a00"},"content":"        messageFromUser \u003d messageFromUser.substring(8);","lastModifiedDate":"2023-02-06"},{"lineNumber":247,"author":{"gitId":"kishore-a00"},"content":"        String[] messageComponents \u003d messageFromUser.split(\"/by\", 2);","lastModifiedDate":"2023-02-06"},{"lineNumber":248,"author":{"gitId":"kishore-a00"},"content":"        return new Deadline(messageComponents[0], messageComponents[1]);","lastModifiedDate":"2023-03-03"},{"lineNumber":249,"author":{"gitId":"kishore-a00"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":250,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":251,"author":{"gitId":"kishore-a00"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":252,"author":{"gitId":"kishore-a00"},"content":"     * Creates and returns a new Event object containing the message, start and end information the user specified.","lastModifiedDate":"2023-03-03"},{"lineNumber":253,"author":{"gitId":"kishore-a00"},"content":"     * The input to this function has to be of the form:","lastModifiedDate":"2023-03-03"},{"lineNumber":254,"author":{"gitId":"kishore-a00"},"content":"     * event MESSAGE /from START /to END","lastModifiedDate":"2023-03-03"},{"lineNumber":255,"author":{"gitId":"kishore-a00"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":256,"author":{"gitId":"kishore-a00"},"content":"     * @param messageFromUser This is the user input","lastModifiedDate":"2023-03-03"},{"lineNumber":257,"author":{"gitId":"kishore-a00"},"content":"     * @return Event object","lastModifiedDate":"2023-03-03"},{"lineNumber":258,"author":{"gitId":"kishore-a00"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":259,"author":{"gitId":"kishore-a00"},"content":"    public static Event createEvent(String messageFromUser) {","lastModifiedDate":"2023-02-06"},{"lineNumber":260,"author":{"gitId":"kishore-a00"},"content":"        // Remove the word \"event\" from message","lastModifiedDate":"2023-02-06"},{"lineNumber":261,"author":{"gitId":"kishore-a00"},"content":"        messageFromUser \u003d messageFromUser.substring(5);","lastModifiedDate":"2023-02-06"},{"lineNumber":262,"author":{"gitId":"kishore-a00"},"content":"        // Event has 3 aspects message /from startDate /to endDate","lastModifiedDate":"2023-02-06"},{"lineNumber":263,"author":{"gitId":"kishore-a00"},"content":"        String[] messageComponents \u003d messageFromUser.split(\"/from\", 2);","lastModifiedDate":"2023-02-06"},{"lineNumber":264,"author":{"gitId":"kishore-a00"},"content":"        String[] timeComponents \u003d messageComponents[1].split(\"/to\", 2);","lastModifiedDate":"2023-02-06"},{"lineNumber":265,"author":{"gitId":"kishore-a00"},"content":"        return new Event(messageComponents[0], timeComponents[0], timeComponents[1]);","lastModifiedDate":"2023-03-03"},{"lineNumber":266,"author":{"gitId":"kishore-a00"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":267,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":268,"author":{"gitId":"kishore-a00"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":269,"author":{"gitId":"kishore-a00"},"content":"     * This function saves all tasks in the ArrayList to the file savedTasks and displays the goodbye message.","lastModifiedDate":"2023-03-03"},{"lineNumber":270,"author":{"gitId":"kishore-a00"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":271,"author":{"gitId":"kishore-a00"},"content":"     * @param tasks    ArrayList to store Task objects","lastModifiedDate":"2023-03-03"},{"lineNumber":272,"author":{"gitId":"kishore-a00"},"content":"     * @param filePath Location of the text file that is used to store the tasks","lastModifiedDate":"2023-03-03"},{"lineNumber":273,"author":{"gitId":"kishore-a00"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":274,"author":{"gitId":"kishore-a00"},"content":"    public static void saveAndExit(ArrayList\u003cTask\u003e tasks, String filePath) {","lastModifiedDate":"2023-03-03"},{"lineNumber":275,"author":{"gitId":"kishore-a00"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-02"},{"lineNumber":276,"author":{"gitId":"kishore-a00"},"content":"        SaveToFile saveToFile \u003d new SaveToFile();","lastModifiedDate":"2023-03-03"},{"lineNumber":277,"author":{"gitId":"kishore-a00"},"content":"        saveToFile.initialiseWritingToFile(tasks, filePath);","lastModifiedDate":"2023-03-03"},{"lineNumber":278,"author":{"gitId":"kishore-a00"},"content":"        ui.showGoodbyeMessage();","lastModifiedDate":"2023-03-02"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":280,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":281,"author":{"gitId":"kishore-a00"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":282,"author":{"gitId":"kishore-a00"},"content":"     * Prints all the tasks stored in the savedTasks text file to the user and copies the tasks to the ArrayList","lastModifiedDate":"2023-03-03"},{"lineNumber":283,"author":{"gitId":"kishore-a00"},"content":"     * so that the user can manipulate the tasks later on.","lastModifiedDate":"2023-03-03"},{"lineNumber":284,"author":{"gitId":"kishore-a00"},"content":"     * If there are no tasks in the savedTasks text file, then a message saying there is no tasks to display","lastModifiedDate":"2023-03-03"},{"lineNumber":285,"author":{"gitId":"kishore-a00"},"content":"     * will be printed.","lastModifiedDate":"2023-03-03"},{"lineNumber":286,"author":{"gitId":"kishore-a00"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":287,"author":{"gitId":"kishore-a00"},"content":"     * @param filePath Location of the text file that is used to store the tasks","lastModifiedDate":"2023-03-03"},{"lineNumber":288,"author":{"gitId":"kishore-a00"},"content":"     * @param tasks    ArrayList to store Task objects","lastModifiedDate":"2023-03-03"},{"lineNumber":289,"author":{"gitId":"kishore-a00"},"content":"     * @throws FileNotFoundException if there is no savedTasks file.","lastModifiedDate":"2023-03-03"},{"lineNumber":290,"author":{"gitId":"kishore-a00"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":291,"author":{"gitId":"kishore-a00"},"content":"    private static void printFileContents(String filePath, ArrayList\u003cTask\u003e tasks) throws FileNotFoundException {","lastModifiedDate":"2023-03-01"},{"lineNumber":292,"author":{"gitId":"kishore-a00"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-02"},{"lineNumber":293,"author":{"gitId":"kishore-a00"},"content":"        ReadFromFile readFromFile \u003d new ReadFromFile();","lastModifiedDate":"2023-03-03"},{"lineNumber":294,"author":{"gitId":"kishore-a00"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2023-02-28"},{"lineNumber":295,"author":{"gitId":"kishore-a00"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2023-02-28"},{"lineNumber":296,"author":{"gitId":"kishore-a00"},"content":"        if (s.hasNext()) {","lastModifiedDate":"2023-02-28"},{"lineNumber":297,"author":{"gitId":"kishore-a00"},"content":"            ui.horizontalLine();","lastModifiedDate":"2023-03-02"},{"lineNumber":298,"author":{"gitId":"kishore-a00"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2023-02-15"},{"lineNumber":299,"author":{"gitId":"kishore-a00"},"content":"                String lineInFile \u003d s.nextLine();","lastModifiedDate":"2023-03-01"},{"lineNumber":300,"author":{"gitId":"kishore-a00"},"content":"                readFromFile.copyToArrayList(lineInFile, tasks);","lastModifiedDate":"2023-03-03"},{"lineNumber":301,"author":{"gitId":"kishore-a00"},"content":"            }","lastModifiedDate":"2023-02-15"},{"lineNumber":302,"author":{"gitId":"kishore-a00"},"content":"            displayList(tasks);","lastModifiedDate":"2023-03-01"},{"lineNumber":303,"author":{"gitId":"kishore-a00"},"content":"            ui.horizontalLine();","lastModifiedDate":"2023-03-02"},{"lineNumber":304,"author":{"gitId":"kishore-a00"},"content":"        } else {","lastModifiedDate":"2023-02-28"},{"lineNumber":305,"author":{"gitId":"kishore-a00"},"content":"            ui.showNoTasksToDisplayMessage();","lastModifiedDate":"2023-03-02"},{"lineNumber":306,"author":{"gitId":"kishore-a00"},"content":"            ui.horizontalLine();","lastModifiedDate":"2023-03-02"},{"lineNumber":307,"author":{"gitId":"kishore-a00"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":308,"author":{"gitId":"kishore-a00"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":309,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":310,"author":{"gitId":"kishore-a00"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":311,"author":{"gitId":"kishore-a00"},"content":"     * Returns a boolean based on whether the user has given the exit command \"bye\".","lastModifiedDate":"2023-03-03"},{"lineNumber":312,"author":{"gitId":"kishore-a00"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":313,"author":{"gitId":"kishore-a00"},"content":"     * @param messageFromUser User input","lastModifiedDate":"2023-03-03"},{"lineNumber":314,"author":{"gitId":"kishore-a00"},"content":"     * @return true is user inputs \"bye\".","lastModifiedDate":"2023-03-03"},{"lineNumber":315,"author":{"gitId":"kishore-a00"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":316,"author":{"gitId":"kishore-a00"},"content":"    public static boolean isExitCommandGiven(String messageFromUser) {","lastModifiedDate":"2023-03-03"},{"lineNumber":317,"author":{"gitId":"kishore-a00"},"content":"        if (messageFromUser.equals(\"bye\")) {","lastModifiedDate":"2023-03-03"},{"lineNumber":318,"author":{"gitId":"kishore-a00"},"content":"            return true;","lastModifiedDate":"2023-03-03"},{"lineNumber":319,"author":{"gitId":"kishore-a00"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":320,"author":{"gitId":"kishore-a00"},"content":"        return false;","lastModifiedDate":"2023-03-03"},{"lineNumber":321,"author":{"gitId":"kishore-a00"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":322,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":323,"author":{"gitId":"kishore-a00"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":324,"author":{"gitId":"kishore-a00"},"content":"     * Calls the relevant methods based on the action the user specifies.","lastModifiedDate":"2023-03-03"},{"lineNumber":325,"author":{"gitId":"kishore-a00"},"content":"     * \"todo\", \"deadline\", \"event\", \"mark\", \"unmark\", \"list\", \"bye\", \"delete\" are the keywords that the user has to","lastModifiedDate":"2023-03-03"},{"lineNumber":326,"author":{"gitId":"kishore-a00"},"content":"     * input. If any other keyword is given, an exception is thrown.","lastModifiedDate":"2023-03-03"},{"lineNumber":327,"author":{"gitId":"kishore-a00"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":328,"author":{"gitId":"kishore-a00"},"content":"     * @param messageFromUser User input","lastModifiedDate":"2023-03-03"},{"lineNumber":329,"author":{"gitId":"kishore-a00"},"content":"     * @param tasks           ArrayList to store Task objects","lastModifiedDate":"2023-03-03"},{"lineNumber":330,"author":{"gitId":"kishore-a00"},"content":"     * @throws DukeException if user inputs a keyword that is incorrect.","lastModifiedDate":"2023-03-03"},{"lineNumber":331,"author":{"gitId":"kishore-a00"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":332,"author":{"gitId":"kishore-a00"},"content":"    public static void handleMessageFromUser(String messageFromUser, ArrayList\u003cTask\u003e tasks) throws DukeException, FileNotFoundException {","lastModifiedDate":"2023-03-03"},{"lineNumber":333,"author":{"gitId":"kishore-a00"},"content":"        if (hasTaskKeyword(messageFromUser)) {","lastModifiedDate":"2023-03-03"},{"lineNumber":334,"author":{"gitId":"kishore-a00"},"content":"            Task newTask \u003d handleTaskCreation(messageFromUser);","lastModifiedDate":"2023-03-03"},{"lineNumber":335,"author":{"gitId":"kishore-a00"},"content":"            addToList(newTask, tasks);","lastModifiedDate":"2023-03-03"},{"lineNumber":336,"author":{"gitId":"kishore-a00"},"content":"        } else if (messageFromUser.startsWith(\"mark\") || messageFromUser.startsWith(\"unmark\")) {","lastModifiedDate":"2023-03-03"},{"lineNumber":337,"author":{"gitId":"kishore-a00"},"content":"            changeTaskStatus(messageFromUser, tasks);","lastModifiedDate":"2023-03-03"},{"lineNumber":338,"author":{"gitId":"kishore-a00"},"content":"        } else if (messageFromUser.equals(\"list\")) {","lastModifiedDate":"2023-03-03"},{"lineNumber":339,"author":{"gitId":"kishore-a00"},"content":"            displayList(tasks);","lastModifiedDate":"2023-03-03"},{"lineNumber":340,"author":{"gitId":"kishore-a00"},"content":"        } else if (messageFromUser.equals(\"bye\")) {","lastModifiedDate":"2023-03-03"},{"lineNumber":341,"author":{"gitId":"kishore-a00"},"content":"            saveAndExit(tasks, FILE_PATH);","lastModifiedDate":"2023-03-03"},{"lineNumber":342,"author":{"gitId":"kishore-a00"},"content":"        } else if (messageFromUser.startsWith(\"delete\")) {","lastModifiedDate":"2023-03-03"},{"lineNumber":343,"author":{"gitId":"kishore-a00"},"content":"            deleteFromList(messageFromUser, tasks);","lastModifiedDate":"2023-03-03"},{"lineNumber":344,"author":{"gitId":"kishore-a00"},"content":"        } else if (messageFromUser.startsWith(\"find\")) {","lastModifiedDate":"2023-03-03"},{"lineNumber":345,"author":{"gitId":"kishore-a00"},"content":"            findTask(messageFromUser, tasks, FILE_PATH);","lastModifiedDate":"2023-03-03"},{"lineNumber":346,"author":{"gitId":"kishore-a00"},"content":"        } else {","lastModifiedDate":"2023-03-03"},{"lineNumber":347,"author":{"gitId":"kishore-a00"},"content":"            throw new DukeException();","lastModifiedDate":"2023-03-03"},{"lineNumber":348,"author":{"gitId":"kishore-a00"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":349,"author":{"gitId":"kishore-a00"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":350,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":351,"author":{"gitId":"kishore-a00"},"content":"    public static void findTask(String messageFromUser, ArrayList\u003cTask\u003e tasks, String filePath) throws FileNotFoundException {","lastModifiedDate":"2023-03-03"},{"lineNumber":352,"author":{"gitId":"kishore-a00"},"content":"        String[] messageComponents \u003d messageFromUser.split(\" \", 2);","lastModifiedDate":"2023-03-03"},{"lineNumber":353,"author":{"gitId":"kishore-a00"},"content":"        ArrayList\u003cTask\u003e similarTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-03"},{"lineNumber":354,"author":{"gitId":"kishore-a00"},"content":"        SaveToFile saveToFile \u003d new SaveToFile();","lastModifiedDate":"2023-03-03"},{"lineNumber":355,"author":{"gitId":"kishore-a00"},"content":"        saveToFile.initialiseWritingToFile(tasks, filePath);","lastModifiedDate":"2023-03-03"},{"lineNumber":356,"author":{"gitId":"kishore-a00"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2023-03-03"},{"lineNumber":357,"author":{"gitId":"kishore-a00"},"content":"        ReadFromFile readFromFile \u003d new ReadFromFile();","lastModifiedDate":"2023-03-03"},{"lineNumber":358,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":359,"author":{"gitId":"kishore-a00"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2023-03-03"},{"lineNumber":360,"author":{"gitId":"kishore-a00"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2023-03-03"},{"lineNumber":361,"author":{"gitId":"kishore-a00"},"content":"            String lineInFile \u003d s.nextLine();","lastModifiedDate":"2023-03-03"},{"lineNumber":362,"author":{"gitId":"kishore-a00"},"content":"            if (lineInFile.contains(messageComponents[1])) {","lastModifiedDate":"2023-03-03"},{"lineNumber":363,"author":{"gitId":"kishore-a00"},"content":"                readFromFile.copyToArrayList(lineInFile, similarTasks);","lastModifiedDate":"2023-03-03"},{"lineNumber":364,"author":{"gitId":"kishore-a00"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":365,"author":{"gitId":"kishore-a00"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":366,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":367,"author":{"gitId":"kishore-a00"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-03"},{"lineNumber":368,"author":{"gitId":"kishore-a00"},"content":"        if (similarTasks.size() \u003e 0) {","lastModifiedDate":"2023-03-03"},{"lineNumber":369,"author":{"gitId":"kishore-a00"},"content":"            ui.horizontalLine();","lastModifiedDate":"2023-03-03"},{"lineNumber":370,"author":{"gitId":"kishore-a00"},"content":"            ui.showMessageForSimilarTasksFound();","lastModifiedDate":"2023-03-03"},{"lineNumber":371,"author":{"gitId":"kishore-a00"},"content":"            iterateThroughListAndDisplayTasks(similarTasks);","lastModifiedDate":"2023-03-03"},{"lineNumber":372,"author":{"gitId":"kishore-a00"},"content":"            ui.horizontalLine();","lastModifiedDate":"2023-03-03"},{"lineNumber":373,"author":{"gitId":"kishore-a00"},"content":"        } else {","lastModifiedDate":"2023-03-03"},{"lineNumber":374,"author":{"gitId":"kishore-a00"},"content":"            ui.horizontalLine();","lastModifiedDate":"2023-03-03"},{"lineNumber":375,"author":{"gitId":"kishore-a00"},"content":"            ui.showMessageForNoSimilarTasksFound();","lastModifiedDate":"2023-03-03"},{"lineNumber":376,"author":{"gitId":"kishore-a00"},"content":"            ui.horizontalLine();","lastModifiedDate":"2023-03-03"},{"lineNumber":377,"author":{"gitId":"kishore-a00"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":378,"author":{"gitId":"kishore-a00"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":379,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":380,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"kishore-a00":376,"-":4}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kishore-a00"},"content":"package duke;","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"kishore-a00"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"kishore-a00"},"content":" * This class is an Exception class that will be raised if a user inputs an incorrect keyword.","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"kishore-a00"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"kishore-a00"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"kishore-a00"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"kishore-a00":8}},{"path":"src/main/java/duke/storage/ReadFromFile.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kishore-a00"},"content":"package duke.storage;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"kishore-a00"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"kishore-a00"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"kishore-a00"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"kishore-a00"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"kishore-a00"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"kishore-a00"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"kishore-a00"},"content":" * This class reads all the tasks stored in the text file and copies it over to the ArrayList.","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"kishore-a00"},"content":" * This is so that the user can easily manipulate the existing tasks or create new ones.","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"kishore-a00"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"kishore-a00"},"content":"public class ReadFromFile {","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"kishore-a00"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"kishore-a00"},"content":"     * This function determines the whether the task from a line in the text file is a ToDo, Deadline or Event and","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"kishore-a00"},"content":"     * calls the corresponding function to format the task accordingly.","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"kishore-a00"},"content":"     * Case S is added to ignore the first line of the text file as it contains \"Saved tasks\" as its first line","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"kishore-a00"},"content":"     * during the initialisation phase.","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"kishore-a00"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"kishore-a00"},"content":"     * @param line  String from text file","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"kishore-a00"},"content":"     * @param tasks ArrayList of tasks to store the task objects","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"kishore-a00"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"kishore-a00"},"content":"    public void copyToArrayList(String line, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"kishore-a00"},"content":"        switch (line.substring(0, 1)) {","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"kishore-a00"},"content":"        case \"T\":","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"kishore-a00"},"content":"            copyTodoToArrayList(line.substring(2), tasks);","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"kishore-a00"},"content":"            break;","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"kishore-a00"},"content":"        case \"D\":","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"kishore-a00"},"content":"            copyDeadlineToArrayList(line.substring(2), tasks);","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"kishore-a00"},"content":"            break;","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"kishore-a00"},"content":"        case \"E\":","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"kishore-a00"},"content":"            copyEventToArrayList(line.substring(2), tasks);","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"kishore-a00"},"content":"            break;","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"kishore-a00"},"content":"        case \"S\":","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"kishore-a00"},"content":"            // First line is: \"Saved data\" text","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"kishore-a00"},"content":"            // To ignore the first line (initialisation step)","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"kishore-a00"},"content":"            break;","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"kishore-a00"},"content":"        default:","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"kishore-a00"},"content":"            System.out.println(\"Unknown task type detected...\");","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"kishore-a00"},"content":"            System.out.println(\"Skipping task...\");","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"kishore-a00"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"kishore-a00"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"kishore-a00"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"kishore-a00"},"content":"     * Formats task of type ToDo so that it can be added to ArrayList.","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"kishore-a00"},"content":"     * Checks and updates the task status accordingly based on whether it was marked as done in the text file.","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"kishore-a00"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"kishore-a00"},"content":"     * @param taskInfo Task description","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"kishore-a00"},"content":"     * @param tasks    ArrayList that stores task objects","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"kishore-a00"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"kishore-a00"},"content":"    private void copyTodoToArrayList(String taskInfo, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"kishore-a00"},"content":"        // Parse line to split task status and task info","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"kishore-a00"},"content":"        String[] messageComponents \u003d taskInfo.split(\"/\", 2);","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"kishore-a00"},"content":"        // Create new todo with task info","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"kishore-a00"},"content":"        ToDo newToDo \u003d new ToDo(messageComponents[1]);","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"kishore-a00"},"content":"        // Store todo in list of tasks","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"kishore-a00"},"content":"        tasks.add(newToDo);","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"kishore-a00"},"content":"        // Convert to 0 based indexing","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"kishore-a00"},"content":"        int currentTaskIndex \u003d tasks.size() - 1;","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"kishore-a00"},"content":"        // Mark task as done if task status was stored as 1","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"kishore-a00"},"content":"        if (messageComponents[0].equals(\"1\")) {","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"kishore-a00"},"content":"            Task currentTask \u003d tasks.get(currentTaskIndex);","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"kishore-a00"},"content":"            currentTask.copyCompletedTask();","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"kishore-a00"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"kishore-a00"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"kishore-a00"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"kishore-a00"},"content":"     * Formats tasks of type deadline so that it can be stored in ArrayList.","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"kishore-a00"},"content":"     * Checks and updates the task status accordingly based on whether it was marked as done in the text file.","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"kishore-a00"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"kishore-a00"},"content":"     * @param taskInfo Task description","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"kishore-a00"},"content":"     * @param tasks    ArrayList that stores task objects","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"kishore-a00"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":76,"author":{"gitId":"kishore-a00"},"content":"    private void copyDeadlineToArrayList(String taskInfo, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"kishore-a00"},"content":"        String[] messageComponents \u003d taskInfo.split(\"/\", 3);","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"kishore-a00"},"content":"        Deadline newDeadline \u003d new Deadline(messageComponents[1], messageComponents[2]);","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"kishore-a00"},"content":"        tasks.add(newDeadline);","lastModifiedDate":"2023-03-03"},{"lineNumber":80,"author":{"gitId":"kishore-a00"},"content":"        // Convert to 0 based indexing","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"kishore-a00"},"content":"        int currentTaskIndex \u003d tasks.size() - 1;","lastModifiedDate":"2023-03-03"},{"lineNumber":82,"author":{"gitId":"kishore-a00"},"content":"        if (messageComponents[0].equals(\"1\")) {","lastModifiedDate":"2023-03-03"},{"lineNumber":83,"author":{"gitId":"kishore-a00"},"content":"            Task currentTask \u003d tasks.get(currentTaskIndex);","lastModifiedDate":"2023-03-03"},{"lineNumber":84,"author":{"gitId":"kishore-a00"},"content":"            currentTask.copyCompletedTask();","lastModifiedDate":"2023-03-03"},{"lineNumber":85,"author":{"gitId":"kishore-a00"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":86,"author":{"gitId":"kishore-a00"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":87,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":88,"author":{"gitId":"kishore-a00"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":89,"author":{"gitId":"kishore-a00"},"content":"     * Formats tasks of type event so that it can be stored in ArrayList.","lastModifiedDate":"2023-03-03"},{"lineNumber":90,"author":{"gitId":"kishore-a00"},"content":"     * Checks and updates the task status accordingly based on whether it was marked as done in the text file.","lastModifiedDate":"2023-03-03"},{"lineNumber":91,"author":{"gitId":"kishore-a00"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":92,"author":{"gitId":"kishore-a00"},"content":"     * @param taskInfo Task description","lastModifiedDate":"2023-03-03"},{"lineNumber":93,"author":{"gitId":"kishore-a00"},"content":"     * @param tasks    ArrayList that stores task objects","lastModifiedDate":"2023-03-03"},{"lineNumber":94,"author":{"gitId":"kishore-a00"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":95,"author":{"gitId":"kishore-a00"},"content":"    private void copyEventToArrayList(String taskInfo, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-03-03"},{"lineNumber":96,"author":{"gitId":"kishore-a00"},"content":"        String[] messageComponents \u003d taskInfo.split(\"/\", 4);","lastModifiedDate":"2023-03-03"},{"lineNumber":97,"author":{"gitId":"kishore-a00"},"content":"        Event newEvent \u003d new Event(messageComponents[1], messageComponents[2], messageComponents[3]);","lastModifiedDate":"2023-03-03"},{"lineNumber":98,"author":{"gitId":"kishore-a00"},"content":"        tasks.add(newEvent);","lastModifiedDate":"2023-03-03"},{"lineNumber":99,"author":{"gitId":"kishore-a00"},"content":"        // Convert to 0 based indexing","lastModifiedDate":"2023-03-03"},{"lineNumber":100,"author":{"gitId":"kishore-a00"},"content":"        int currentTaskIndex \u003d tasks.size() - 1;","lastModifiedDate":"2023-03-03"},{"lineNumber":101,"author":{"gitId":"kishore-a00"},"content":"        if (messageComponents[0].equals(\"1\")) {","lastModifiedDate":"2023-03-03"},{"lineNumber":102,"author":{"gitId":"kishore-a00"},"content":"            Task currentTask \u003d tasks.get(currentTaskIndex);","lastModifiedDate":"2023-03-03"},{"lineNumber":103,"author":{"gitId":"kishore-a00"},"content":"            currentTask.copyCompletedTask();","lastModifiedDate":"2023-03-03"},{"lineNumber":104,"author":{"gitId":"kishore-a00"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":105,"author":{"gitId":"kishore-a00"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":106,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":107,"author":{"gitId":"kishore-a00"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"kishore-a00":107}},{"path":"src/main/java/duke/storage/SaveToFile.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kishore-a00"},"content":"package duke.storage;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"kishore-a00"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"kishore-a00"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"kishore-a00"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"kishore-a00"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"kishore-a00"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"kishore-a00"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"kishore-a00"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"kishore-a00"},"content":" * This class contains the methods needed for the tasks stored in the ArrayList to be copied over to the text file","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"kishore-a00"},"content":" * so that when the user exits the programme, the tasks are still saved.","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"kishore-a00"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"kishore-a00"},"content":"public class SaveToFile {","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"kishore-a00"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"kishore-a00"},"content":"     * Overwrites all the tasks in the existing file specified by filePath. If there is no existing file, a new file","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"kishore-a00"},"content":"     * is created.","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"kishore-a00"},"content":"     * This is done by writing \"Saved tasks: \" followed by a newline.","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"kishore-a00"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"kishore-a00"},"content":"     * @param tasks    ArrayList to store Task objects","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"kishore-a00"},"content":"     * @param filePath Location of the text file that is used to store the tasks","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"kishore-a00"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"kishore-a00"},"content":"    public void initialiseWritingToFile(ArrayList\u003cTask\u003e tasks, String filePath) {","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"kishore-a00"},"content":"        try {","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"kishore-a00"},"content":"            FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"kishore-a00"},"content":"            fw.write(\"Saved tasks: \" + System.lineSeparator());","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"kishore-a00"},"content":"            fw.close();","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"kishore-a00"},"content":"            FileWriter fwAppend \u003d new FileWriter(filePath, true);","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"kishore-a00"},"content":"            writeTasksToFile(fwAppend, tasks);","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"kishore-a00"},"content":"            fwAppend.close();","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"kishore-a00"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"kishore-a00"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"kishore-a00"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"kishore-a00"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"kishore-a00"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"kishore-a00"},"content":"     * Iterates through the ArrayList and determines the task type, status as well as the task information.","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"kishore-a00"},"content":"     * Passes these arguments to writeSpecificTaskToFile method.","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"kishore-a00"},"content":"     * taskType refers to either ToDo, Deadline or Event.","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"kishore-a00"},"content":"     * taskStatus refers to whether the task is completed or not.","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"kishore-a00"},"content":"     * isTaskDone is an integer to represent whether a task is completed or incomplete","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"kishore-a00"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"kishore-a00"},"content":"     * @param fwAppend object to allow writing to file","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"kishore-a00"},"content":"     * @param tasks    ArrayList to store Task objects","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"kishore-a00"},"content":"     * @throws IOException if file is not found","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"kishore-a00"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"kishore-a00"},"content":"    private void writeTasksToFile(FileWriter fwAppend, ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"kishore-a00"},"content":"        int totalNumberOfTasks \u003d tasks.size();","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"kishore-a00"},"content":"        for (int index \u003d 0; index \u003c totalNumberOfTasks; index +\u003d 1) {","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"kishore-a00"},"content":"            Task currentTask \u003d tasks.get(index);","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"kishore-a00"},"content":"            String taskType \u003d currentTask.getTaskType().substring(1, 2);","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"kishore-a00"},"content":"            String taskStatus \u003d currentTask.getStatus();","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"kishore-a00"},"content":"            int isTaskDone \u003d taskStatus.substring(1, 2).equals(\"X\") ? 1 : 0;","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"kishore-a00"},"content":"            String taskInfo \u003d currentTask.getTaskInfo();","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"kishore-a00"},"content":"            writeSpecificTaskToFile(fwAppend, taskType, currentTask, isTaskDone, taskInfo);","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"kishore-a00"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"kishore-a00"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"kishore-a00"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"kishore-a00"},"content":"     * Based on the specific task type, this function formats the task info.","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"kishore-a00"},"content":"     * Since todo, deadline and event task types have different parameters this function formats the task info","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"kishore-a00"},"content":"     * according to their respective parameters to the text file for storage.","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"kishore-a00"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"kishore-a00"},"content":"     * @param fwAppend    object to allow lines to be appended to a text file","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"kishore-a00"},"content":"     * @param taskType    Todo, deadline or event","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"kishore-a00"},"content":"     * @param currentTask Task from the ArrayList at a specified index","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"kishore-a00"},"content":"     * @param isTaskDone  Indicates whether the task is completed or not","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"kishore-a00"},"content":"     * @param taskInfo    Task description","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"kishore-a00"},"content":"     * @throws IOException If fwAppend.write encounters an error","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"kishore-a00"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"kishore-a00"},"content":"    private void writeSpecificTaskToFile(FileWriter fwAppend, String taskType, Task currentTask,","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"kishore-a00"},"content":"                                         int isTaskDone, String taskInfo) throws IOException {","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"kishore-a00"},"content":"        switch (taskType) {","lastModifiedDate":"2023-03-03"},{"lineNumber":76,"author":{"gitId":"kishore-a00"},"content":"        case \"T\":","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"kishore-a00"},"content":"            fwAppend.write(taskType + \"/\" + isTaskDone + \"/\" + taskInfo + System.lineSeparator());","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"kishore-a00"},"content":"            break;","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"kishore-a00"},"content":"        case \"D\":","lastModifiedDate":"2023-03-03"},{"lineNumber":80,"author":{"gitId":"kishore-a00"},"content":"            Deadline currentDeadline \u003d (Deadline) currentTask;","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"kishore-a00"},"content":"            String dueInfo \u003d currentDeadline.getDueInfo();","lastModifiedDate":"2023-03-03"},{"lineNumber":82,"author":{"gitId":"kishore-a00"},"content":"            String deadlineDetails \u003d taskInfo + \"/\" + dueInfo;","lastModifiedDate":"2023-03-03"},{"lineNumber":83,"author":{"gitId":"kishore-a00"},"content":"            fwAppend.write(taskType + \"/\" + isTaskDone + \"/\" + deadlineDetails + System.lineSeparator());","lastModifiedDate":"2023-03-03"},{"lineNumber":84,"author":{"gitId":"kishore-a00"},"content":"            break;","lastModifiedDate":"2023-03-03"},{"lineNumber":85,"author":{"gitId":"kishore-a00"},"content":"        case \"E\":","lastModifiedDate":"2023-03-03"},{"lineNumber":86,"author":{"gitId":"kishore-a00"},"content":"            Event currentEvent \u003d (Event) currentTask;","lastModifiedDate":"2023-03-03"},{"lineNumber":87,"author":{"gitId":"kishore-a00"},"content":"            String eventStart \u003d currentEvent.getEventStartInfo();","lastModifiedDate":"2023-03-03"},{"lineNumber":88,"author":{"gitId":"kishore-a00"},"content":"            String eventEnd \u003d currentEvent.getEventEndInfo();","lastModifiedDate":"2023-03-03"},{"lineNumber":89,"author":{"gitId":"kishore-a00"},"content":"            String eventDetails \u003d taskInfo + \"/\" + eventStart + \"/\" + eventEnd;","lastModifiedDate":"2023-03-03"},{"lineNumber":90,"author":{"gitId":"kishore-a00"},"content":"            fwAppend.write(taskType + \"/\" + isTaskDone + \"/\" + eventDetails + System.lineSeparator());","lastModifiedDate":"2023-03-03"},{"lineNumber":91,"author":{"gitId":"kishore-a00"},"content":"            break;","lastModifiedDate":"2023-03-03"},{"lineNumber":92,"author":{"gitId":"kishore-a00"},"content":"        default:","lastModifiedDate":"2023-03-03"},{"lineNumber":93,"author":{"gitId":"kishore-a00"},"content":"            System.out.println(\"Unknown task type error!\");","lastModifiedDate":"2023-03-03"},{"lineNumber":94,"author":{"gitId":"kishore-a00"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":95,"author":{"gitId":"kishore-a00"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":96,"author":{"gitId":"kishore-a00"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"kishore-a00":96}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kishore-a00"},"content":"package duke.tasks;","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"kishore-a00"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"kishore-a00"},"content":" * This class inherits from Task class.","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"kishore-a00"},"content":" * Deadlines contain a description as well as a due date.","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"kishore-a00"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"kishore-a00"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"kishore-a00"},"content":"    private String dueInfo;","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"kishore-a00"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"kishore-a00"},"content":"     * Creates a deadline object.","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"kishore-a00"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"kishore-a00"},"content":"     * @param description Task information","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"kishore-a00"},"content":"     * @param dueInfo     Task due information","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"kishore-a00"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"kishore-a00"},"content":"    public Deadline(String description, String dueInfo) {","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"kishore-a00"},"content":"        super(description, \"D\");","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"kishore-a00"},"content":"        setDueInfo(dueInfo);","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"kishore-a00"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"kishore-a00"},"content":"    public String getDueInfo() {","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"kishore-a00"},"content":"        return dueInfo;","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"kishore-a00"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"kishore-a00"},"content":"    public void setDueInfo(String dueInfo) {","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"kishore-a00"},"content":"        this.dueInfo \u003d dueInfo;","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"kishore-a00"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":30,"author":{"gitId":"kishore-a00"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"kishore-a00":30}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kishore-a00"},"content":"package duke.tasks;","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"kishore-a00"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"kishore-a00"},"content":" * This class inherits from Task class.","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"kishore-a00"},"content":" * Events contain a description, a start date and an end date.","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"kishore-a00"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"kishore-a00"},"content":"public class Event extends Task {","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"kishore-a00"},"content":"    private String eventStartInfo;","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"kishore-a00"},"content":"    private String eventEndInfo;","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"kishore-a00"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"kishore-a00"},"content":"     * Creates Event object","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"kishore-a00"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"kishore-a00"},"content":"     * @param description    Event description","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"kishore-a00"},"content":"     * @param eventStartInfo Event start information","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"kishore-a00"},"content":"     * @param eventEndInfo   Event end information","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"kishore-a00"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"kishore-a00"},"content":"    public Event(String description, String eventStartInfo, String eventEndInfo) {","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"kishore-a00"},"content":"        super(description, \"E\");","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"kishore-a00"},"content":"        setEventStartInfo(eventStartInfo);","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"kishore-a00"},"content":"        setEventEndInfo(eventEndInfo);","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"kishore-a00"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"kishore-a00"},"content":"    public String getEventStartInfo() {","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"kishore-a00"},"content":"        return eventStartInfo;","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"kishore-a00"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"kishore-a00"},"content":"    public void setEventStartInfo(String eventStartInfo) {","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"kishore-a00"},"content":"        this.eventStartInfo \u003d eventStartInfo;","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"kishore-a00"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":31,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":32,"author":{"gitId":"kishore-a00"},"content":"    public String getEventEndInfo() {","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"kishore-a00"},"content":"        return eventEndInfo;","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"kishore-a00"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":35,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":36,"author":{"gitId":"kishore-a00"},"content":"    public void setEventEndInfo(String eventEndInfo) {","lastModifiedDate":"2023-02-07"},{"lineNumber":37,"author":{"gitId":"kishore-a00"},"content":"        this.eventEndInfo \u003d eventEndInfo;","lastModifiedDate":"2023-02-07"},{"lineNumber":38,"author":{"gitId":"kishore-a00"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":39,"author":{"gitId":"kishore-a00"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"kishore-a00":39}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kishore-a00"},"content":"package duke.tasks;","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"kishore-a00"},"content":"public class Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"kishore-a00"},"content":"    private String taskInfo;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"kishore-a00"},"content":"    private boolean isDone;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"kishore-a00"},"content":"    private String taskType \u003d \" \";","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"kishore-a00"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"kishore-a00"},"content":"     * Initialises a Task object.","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"kishore-a00"},"content":"     * Sets the initial value of the task as undone.","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"kishore-a00"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"kishore-a00"},"content":"     * @param taskInfo Description of task","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"kishore-a00"},"content":"     * @param taskType Specifies the type of task","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"kishore-a00"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"kishore-a00"},"content":"    public Task(String taskInfo, String taskType) {","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"kishore-a00"},"content":"        setTaskInfo(taskInfo);","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"kishore-a00"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"kishore-a00"},"content":"        setTaskType(taskType);","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"kishore-a00"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"kishore-a00"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"kishore-a00"},"content":"     * Checks is a task is marked as done. If it is, it informs the user that the task was already marked as done.","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"kishore-a00"},"content":"     * If the task was not marked as done, it marks the task as done and informs the user.","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"kishore-a00"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"kishore-a00"},"content":"    public void markTaskAsDone() {","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"kishore-a00"},"content":"        if (isDone) {","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"kishore-a00"},"content":"            System.out.println(\"Task was already marked as done!\");","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"kishore-a00"},"content":"        } else {","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"kishore-a00"},"content":"            isDone \u003d true;","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"kishore-a00"},"content":"            System.out.println(\"Great! I\u0027ve marked it as done!\");","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"kishore-a00"},"content":"            System.out.println(this.getStatus() + this.taskInfo);","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"kishore-a00"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"kishore-a00"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"kishore-a00"},"content":"    public void copyCompletedTask() {","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"kishore-a00"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"kishore-a00"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"kishore-a00"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"kishore-a00"},"content":"     * Checks is a task is not marked as done. If it is marked as done, it sets the task to be undone and informs","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"kishore-a00"},"content":"     * the user.","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"kishore-a00"},"content":"     * If it is not marked as done, it informs the user that the task was not marked as done before.","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"kishore-a00"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"kishore-a00"},"content":"    public void markTaskAsUndone() {","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"kishore-a00"},"content":"        if (!isDone) {","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"kishore-a00"},"content":"            System.out.println(\"Task was already marked as undone!\");","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"kishore-a00"},"content":"        } else {","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"kishore-a00"},"content":"            isDone \u003d false;","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"kishore-a00"},"content":"            System.out.println(\"Alright, I\u0027ve marked the task as undone.\");","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"kishore-a00"},"content":"            System.out.println(this.getStatus() + this.taskInfo);","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"kishore-a00"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"kishore-a00"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":54,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"kishore-a00"},"content":"    public String getStatus() {","lastModifiedDate":"2023-01-30"},{"lineNumber":56,"author":{"gitId":"kishore-a00"},"content":"        if (isDone) {","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"kishore-a00"},"content":"            return \"[X]\";","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"kishore-a00"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":59,"author":{"gitId":"kishore-a00"},"content":"        return \"[ ]\";","lastModifiedDate":"2023-01-30"},{"lineNumber":60,"author":{"gitId":"kishore-a00"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"kishore-a00"},"content":"    public String getTaskInfo() {","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"kishore-a00"},"content":"        return taskInfo;","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"kishore-a00"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"kishore-a00"},"content":"    public void setTaskInfo(String taskInfo) {","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"kishore-a00"},"content":"        this.taskInfo \u003d taskInfo;","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"kishore-a00"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"kishore-a00"},"content":"    public void setTaskType(String taskType) {","lastModifiedDate":"2023-02-06"},{"lineNumber":71,"author":{"gitId":"kishore-a00"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2023-02-06"},{"lineNumber":72,"author":{"gitId":"kishore-a00"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":73,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":74,"author":{"gitId":"kishore-a00"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-02-06"},{"lineNumber":75,"author":{"gitId":"kishore-a00"},"content":"        return String.format(\"[%s]\", taskType);","lastModifiedDate":"2023-02-06"},{"lineNumber":76,"author":{"gitId":"kishore-a00"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":77,"author":{"gitId":"kishore-a00"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"kishore-a00":77}},{"path":"src/main/java/duke/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kishore-a00"},"content":"package duke.tasks;","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"kishore-a00"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"kishore-a00"},"content":" * This class inherits from Task class.","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"kishore-a00"},"content":" * ToDos only contain a description.","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"kishore-a00"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"kishore-a00"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"kishore-a00"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"kishore-a00"},"content":"     * Creates a todo object.","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"kishore-a00"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"kishore-a00"},"content":"     * @param description Task information","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"kishore-a00"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"kishore-a00"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"kishore-a00"},"content":"        super(description, \"T\");","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"kishore-a00"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"kishore-a00"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"kishore-a00":16}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kishore-a00"},"content":"package duke.ui;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"kishore-a00"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"kishore-a00"},"content":" * List of trivial methods that contains a message to be printed to the user.","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"kishore-a00"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"kishore-a00"},"content":"public class Ui {","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"kishore-a00"},"content":"    public void showWelcomeMessage() {","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"kishore-a00"},"content":"        horizontalLine();","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"kishore-a00"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"kishore-a00"},"content":"        horizontalLine();","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"kishore-a00"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"kishore-a00"},"content":"    public void showGoodbyeMessage() {","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"kishore-a00"},"content":"        System.out.println(\"I have saved your tasks.\");","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"kishore-a00"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"kishore-a00"},"content":"        horizontalLine();","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"kishore-a00"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"kishore-a00"},"content":"    public void showSavedTasksRetrievalMessage() {","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"kishore-a00"},"content":"        System.out.println(\"Please wait, I am attempting to retrieve your saved tasks...\");","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"kishore-a00"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"kishore-a00"},"content":"    public void showFileNotFoundMessage() {","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"kishore-a00"},"content":"        System.out.println(\"Hmm.. I can\u0027t seem to locate a saved file...\");","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"kishore-a00"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"kishore-a00"},"content":"    public void showNewFileCreationMessage() {","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"kishore-a00"},"content":"        System.out.println(\"No worries, let me create a new file :D\");","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"kishore-a00"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":33,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":34,"author":{"gitId":"kishore-a00"},"content":"    public void showIncorrectCommandWarning() {","lastModifiedDate":"2023-03-02"},{"lineNumber":35,"author":{"gitId":"kishore-a00"},"content":"        System.out.println(\"I\u0027m sorry, but I don\u0027t know what that means\");","lastModifiedDate":"2023-03-02"},{"lineNumber":36,"author":{"gitId":"kishore-a00"},"content":"        horizontalLine();","lastModifiedDate":"2023-03-02"},{"lineNumber":37,"author":{"gitId":"kishore-a00"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":38,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":39,"author":{"gitId":"kishore-a00"},"content":"    public void showMissingAttributesMessage() {","lastModifiedDate":"2023-03-02"},{"lineNumber":40,"author":{"gitId":"kishore-a00"},"content":"        System.out.println(\"Hmm... some details appear to be missing. Please try again.\");","lastModifiedDate":"2023-03-02"},{"lineNumber":41,"author":{"gitId":"kishore-a00"},"content":"        horizontalLine();","lastModifiedDate":"2023-03-02"},{"lineNumber":42,"author":{"gitId":"kishore-a00"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":43,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":44,"author":{"gitId":"kishore-a00"},"content":"    public void showTaskAddedMessage() {","lastModifiedDate":"2023-03-02"},{"lineNumber":45,"author":{"gitId":"kishore-a00"},"content":"        System.out.println(\"Sure, I\u0027ve added this task: \");","lastModifiedDate":"2023-03-02"},{"lineNumber":46,"author":{"gitId":"kishore-a00"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":47,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":48,"author":{"gitId":"kishore-a00"},"content":"    public void showTaskRemovedMessage() {","lastModifiedDate":"2023-03-02"},{"lineNumber":49,"author":{"gitId":"kishore-a00"},"content":"        System.out.println(\"Alright, I have removed this task: \");","lastModifiedDate":"2023-03-02"},{"lineNumber":50,"author":{"gitId":"kishore-a00"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":51,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":52,"author":{"gitId":"kishore-a00"},"content":"    public void showDisplayListHeaderMessage() {","lastModifiedDate":"2023-03-02"},{"lineNumber":53,"author":{"gitId":"kishore-a00"},"content":"        System.out.println(\"Here are the tasks in your list: \");","lastModifiedDate":"2023-03-02"},{"lineNumber":54,"author":{"gitId":"kishore-a00"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":55,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":56,"author":{"gitId":"kishore-a00"},"content":"    public void showNoTasksToDisplayMessage() {","lastModifiedDate":"2023-03-02"},{"lineNumber":57,"author":{"gitId":"kishore-a00"},"content":"        System.out.println(\"There are no tasks to display.\");","lastModifiedDate":"2023-03-02"},{"lineNumber":58,"author":{"gitId":"kishore-a00"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":59,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":60,"author":{"gitId":"kishore-a00"},"content":"    public void printNumberOfTasks(int currentIndex) {","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"kishore-a00"},"content":"        if (currentIndex \u003d\u003d 1) {","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"kishore-a00"},"content":"            System.out.println(\"You have 1 task!\");","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"kishore-a00"},"content":"        } else {","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"kishore-a00"},"content":"            System.out.println(\"You currently have \" + currentIndex + \" tasks in the list.\");","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"kishore-a00"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"kishore-a00"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"kishore-a00"},"content":"    public void showMessageForSimilarTasksFound() {","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"kishore-a00"},"content":"        System.out.println(\"Here are the matching tasks I found: \");","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"kishore-a00"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"kishore-a00"},"content":"    public void showMessageForNoSimilarTasksFound() {","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"kishore-a00"},"content":"        System.out.println(\"I couldn\u0027t find any matching tasks :/ \");","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"kishore-a00"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"kishore-a00"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":76,"author":{"gitId":"kishore-a00"},"content":"    public void horizontalLine() {","lastModifiedDate":"2023-03-02"},{"lineNumber":77,"author":{"gitId":"kishore-a00"},"content":"        System.out.println(\"________________________________________\");","lastModifiedDate":"2023-03-02"},{"lineNumber":78,"author":{"gitId":"kishore-a00"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":79,"author":{"gitId":"kishore-a00"},"content":"}","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"kishore-a00":79}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kishore-a00"},"content":"deadline maths homework /by tuesday","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"kishore-a00"},"content":"event birthday party /from Friday 10am /to 2pm","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"kishore-a00"},"content":"mark 1","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"kishore-a00"},"content":"list","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"kishore-a00"},"content":"unmark 1","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"kishore-a00"},"content":"list","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"kishore-a00"},"content":"something","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"kishore-a00"},"content":"bye","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"kishore-a00":8}}]
