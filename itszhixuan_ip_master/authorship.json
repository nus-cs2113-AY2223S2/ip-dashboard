[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itszhixuan"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"itszhixuan"},"content":"    /***","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"itszhixuan"},"content":"     * Due date of the task.","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"itszhixuan"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"itszhixuan"},"content":"    protected String by;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"itszhixuan"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"itszhixuan"},"content":"    /***","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"itszhixuan"},"content":"     * Functions in the Deadline class.","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"itszhixuan"},"content":"     * @param description Name of the task.","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"itszhixuan"},"content":"     * @param by Due date of the task.","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"itszhixuan"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"itszhixuan"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"itszhixuan"},"content":"        super(description);","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"itszhixuan"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"itszhixuan"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"itszhixuan"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"itszhixuan"},"content":"    /***","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"itszhixuan"},"content":"     * The string output when class is called.","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"itszhixuan"},"content":"     * @return Status and due date.","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"itszhixuan"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"itszhixuan"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"itszhixuan"},"content":"    public String toString() {","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"itszhixuan"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"itszhixuan"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"itszhixuan"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"itszhixuan":25}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itszhixuan"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"itszhixuan"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"itszhixuan"},"content":"    /***","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"itszhixuan"},"content":"     * MAX_TASK_NUM shows the maximum number of tasks it can store","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"itszhixuan"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"itszhixuan"},"content":"    public static final int MAX_TASK_NUM \u003d 100;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"itszhixuan"},"content":"    /***","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"itszhixuan"},"content":"     * Ensures that a fixed line formatting is made.","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"itszhixuan"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"itszhixuan"},"content":"    public static final String LINE_FORMATTING \u003d","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"itszhixuan"},"content":"            \"____________________________________________________________\\n\";","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"itszhixuan"},"content":"    /***","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"itszhixuan"},"content":"     * The fixed number of spaces when processing commands involving \"by\" in","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"itszhixuan"},"content":"     * the input.","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"itszhixuan"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"itszhixuan"},"content":"    public static final int REMOVE_BY_NUM \u003d 4;","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"itszhixuan"},"content":"    /***","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"itszhixuan"},"content":"     * The fixed number of spaces when processing commands involving \"todo\" in","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"itszhixuan"},"content":"     * the input.","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"itszhixuan"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"itszhixuan"},"content":"    public static final int REMOVE_TODO_NUM \u003d 5;","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"itszhixuan"},"content":"    /***","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"itszhixuan"},"content":"     * The fixed number of spaces when processing commands involving \"event\" in","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"itszhixuan"},"content":"     * the input.","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"itszhixuan"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"itszhixuan"},"content":"    public static final int REMOVE_EVENT_NUM \u003d 6;","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"itszhixuan"},"content":"    /***","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"itszhixuan"},"content":"     * The fixed number of spaces when processing commands involving \"from\" in","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"itszhixuan"},"content":"     * the input.","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"itszhixuan"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"itszhixuan"},"content":"    public static final int REMOVE_FROM_NUM \u003d 6;","lastModifiedDate":"2023-02-04"},{"lineNumber":33,"author":{"gitId":"itszhixuan"},"content":"    /***","lastModifiedDate":"2023-02-04"},{"lineNumber":34,"author":{"gitId":"itszhixuan"},"content":"     * The fixed number of spaces when processing commands involving \"to\" in","lastModifiedDate":"2023-02-04"},{"lineNumber":35,"author":{"gitId":"itszhixuan"},"content":"     * the input.","lastModifiedDate":"2023-02-04"},{"lineNumber":36,"author":{"gitId":"itszhixuan"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":37,"author":{"gitId":"itszhixuan"},"content":"    public static final int REMOVE_TO_NUM \u003d 4;","lastModifiedDate":"2023-02-04"},{"lineNumber":38,"author":{"gitId":"itszhixuan"},"content":"    /***","lastModifiedDate":"2023-02-04"},{"lineNumber":39,"author":{"gitId":"itszhixuan"},"content":"     * The fixed number of spaces when processing commands involving \"unmark\" in","lastModifiedDate":"2023-02-04"},{"lineNumber":40,"author":{"gitId":"itszhixuan"},"content":"     * the input.","lastModifiedDate":"2023-02-04"},{"lineNumber":41,"author":{"gitId":"itszhixuan"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":42,"author":{"gitId":"itszhixuan"},"content":"    public static final int REMOVE_UNMARK_NUM \u003d 7;","lastModifiedDate":"2023-02-04"},{"lineNumber":43,"author":{"gitId":"itszhixuan"},"content":"    /***","lastModifiedDate":"2023-02-04"},{"lineNumber":44,"author":{"gitId":"itszhixuan"},"content":"     * The fixed number of spaces when processing commands involving \"mark\" in","lastModifiedDate":"2023-02-04"},{"lineNumber":45,"author":{"gitId":"itszhixuan"},"content":"     * the input.","lastModifiedDate":"2023-02-04"},{"lineNumber":46,"author":{"gitId":"itszhixuan"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":47,"author":{"gitId":"itszhixuan"},"content":"    public static final int REMOVE_MARK_NUM \u003d 5;","lastModifiedDate":"2023-02-04"},{"lineNumber":48,"author":{"gitId":"itszhixuan"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":49,"author":{"gitId":"itszhixuan"},"content":"    /***","lastModifiedDate":"2023-02-04"},{"lineNumber":50,"author":{"gitId":"itszhixuan"},"content":"     * Main function greets the user and runs processInputs().","lastModifiedDate":"2023-02-04"},{"lineNumber":51,"author":{"gitId":"itszhixuan"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":53,"author":{"gitId":"itszhixuan"},"content":"        showGreetings();","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"itszhixuan"},"content":"        processInputs();","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"itszhixuan"},"content":"        showGoodbye();","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"itszhixuan"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"itszhixuan"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"itszhixuan"},"content":"    /***","lastModifiedDate":"2023-02-04"},{"lineNumber":59,"author":{"gitId":"itszhixuan"},"content":"     * Processes the inputs by the user and run commands accordingly.","lastModifiedDate":"2023-02-04"},{"lineNumber":60,"author":{"gitId":"itszhixuan"},"content":"     * If the command is not recognised, user is prompted to try again.","lastModifiedDate":"2023-02-04"},{"lineNumber":61,"author":{"gitId":"itszhixuan"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":62,"author":{"gitId":"itszhixuan"},"content":"    private static void processInputs() {","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"itszhixuan"},"content":"        Scanner in \u003d new Scanner (System.in);","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"itszhixuan"},"content":"        Task[] storedValues \u003d new Task[MAX_TASK_NUM];","lastModifiedDate":"2023-02-04"},{"lineNumber":65,"author":{"gitId":"itszhixuan"},"content":"        int taskNum \u003d 0;","lastModifiedDate":"2023-02-04"},{"lineNumber":66,"author":{"gitId":"itszhixuan"},"content":"        String line \u003d in.nextLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"itszhixuan"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":68,"author":{"gitId":"itszhixuan"},"content":"        while (!line.equals(\"bye\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"itszhixuan"},"content":"            if (line.equals(\"list\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"itszhixuan"},"content":"                printList(storedValues, taskNum);","lastModifiedDate":"2023-02-04"},{"lineNumber":71,"author":{"gitId":"itszhixuan"},"content":"            } else if (line.startsWith(\"mark \")) {","lastModifiedDate":"2023-01-27"},{"lineNumber":72,"author":{"gitId":"itszhixuan"},"content":"                markItem(storedValues, line);","lastModifiedDate":"2023-02-04"},{"lineNumber":73,"author":{"gitId":"itszhixuan"},"content":"            } else if (line.startsWith(\"unmark \")) {","lastModifiedDate":"2023-01-27"},{"lineNumber":74,"author":{"gitId":"itszhixuan"},"content":"                unmarkItem(storedValues, line);","lastModifiedDate":"2023-02-04"},{"lineNumber":75,"author":{"gitId":"itszhixuan"},"content":"            } else if (line.startsWith(\"deadline\")) {","lastModifiedDate":"2023-02-01"},{"lineNumber":76,"author":{"gitId":"itszhixuan"},"content":"                taskNum \u003d processDeadline(storedValues, taskNum, line);","lastModifiedDate":"2023-02-04"},{"lineNumber":77,"author":{"gitId":"itszhixuan"},"content":"            } else if (line.startsWith(\"todo\")) {","lastModifiedDate":"2023-02-01"},{"lineNumber":78,"author":{"gitId":"itszhixuan"},"content":"                taskNum \u003d processToDo(storedValues, taskNum, line);","lastModifiedDate":"2023-02-04"},{"lineNumber":79,"author":{"gitId":"itszhixuan"},"content":"            } else if (line.startsWith(\"event\")) {","lastModifiedDate":"2023-02-01"},{"lineNumber":80,"author":{"gitId":"itszhixuan"},"content":"                taskNum \u003d processEvent(storedValues, taskNum, line);","lastModifiedDate":"2023-02-04"},{"lineNumber":81,"author":{"gitId":"itszhixuan"},"content":"            } else {","lastModifiedDate":"2023-02-04"},{"lineNumber":82,"author":{"gitId":"itszhixuan"},"content":"                // Commands that are not listed above","lastModifiedDate":"2023-02-04"},{"lineNumber":83,"author":{"gitId":"itszhixuan"},"content":"                System.out.println(\"Invalid command, try again! \\n\");","lastModifiedDate":"2023-02-04"},{"lineNumber":84,"author":{"gitId":"itszhixuan"},"content":"            }","lastModifiedDate":"2023-02-04"},{"lineNumber":85,"author":{"gitId":"itszhixuan"},"content":"            line \u003d in.nextLine();","lastModifiedDate":"2023-02-04"},{"lineNumber":86,"author":{"gitId":"itszhixuan"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":87,"author":{"gitId":"itszhixuan"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":88,"author":{"gitId":"itszhixuan"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":89,"author":{"gitId":"itszhixuan"},"content":"    /***","lastModifiedDate":"2023-02-04"},{"lineNumber":90,"author":{"gitId":"itszhixuan"},"content":"     * Prior to adding events to the list, processEvent separates the important details","lastModifiedDate":"2023-02-04"},{"lineNumber":91,"author":{"gitId":"itszhixuan"},"content":"     * within the input for further data storage.","lastModifiedDate":"2023-02-04"},{"lineNumber":92,"author":{"gitId":"itszhixuan"},"content":"     * @param storedValues List of tasks from user inputs.","lastModifiedDate":"2023-02-04"},{"lineNumber":93,"author":{"gitId":"itszhixuan"},"content":"     * @param taskNum The existing position in the list.","lastModifiedDate":"2023-02-04"},{"lineNumber":94,"author":{"gitId":"itszhixuan"},"content":"     * @param line User input to be processed.","lastModifiedDate":"2023-02-04"},{"lineNumber":95,"author":{"gitId":"itszhixuan"},"content":"     * @return Updated position in the list.","lastModifiedDate":"2023-02-04"},{"lineNumber":96,"author":{"gitId":"itszhixuan"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":97,"author":{"gitId":"itszhixuan"},"content":"    private static int processEvent(Task[] storedValues, int taskNum, String line) {","lastModifiedDate":"2023-02-04"},{"lineNumber":98,"author":{"gitId":"itszhixuan"},"content":"        int firstForwardSlash \u003d line.indexOf(\u0027/\u0027);","lastModifiedDate":"2023-02-01"},{"lineNumber":99,"author":{"gitId":"itszhixuan"},"content":"        String taskName \u003d line.substring(REMOVE_EVENT_NUM,firstForwardSlash-1);","lastModifiedDate":"2023-02-04"},{"lineNumber":100,"author":{"gitId":"itszhixuan"},"content":"        String duration \u003d line.substring(firstForwardSlash+REMOVE_FROM_NUM);","lastModifiedDate":"2023-02-04"},{"lineNumber":101,"author":{"gitId":"itszhixuan"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":102,"author":{"gitId":"itszhixuan"},"content":"        int secondForwardSlash \u003d duration.indexOf(\u0027/\u0027);","lastModifiedDate":"2023-02-01"},{"lineNumber":103,"author":{"gitId":"itszhixuan"},"content":"        String startingTime \u003d duration.substring(0,secondForwardSlash-1);","lastModifiedDate":"2023-02-01"},{"lineNumber":104,"author":{"gitId":"itszhixuan"},"content":"        String endingTime \u003d duration.substring(secondForwardSlash+REMOVE_TO_NUM);","lastModifiedDate":"2023-02-04"},{"lineNumber":105,"author":{"gitId":"itszhixuan"},"content":"        Event eventInput \u003d new Event(taskName, startingTime, endingTime);","lastModifiedDate":"2023-02-01"},{"lineNumber":106,"author":{"gitId":"itszhixuan"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":107,"author":{"gitId":"itszhixuan"},"content":"        taskNum \u003d addTask(storedValues, taskNum, eventInput);","lastModifiedDate":"2023-02-04"},{"lineNumber":108,"author":{"gitId":"itszhixuan"},"content":"        return taskNum;","lastModifiedDate":"2023-02-04"},{"lineNumber":109,"author":{"gitId":"itszhixuan"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":110,"author":{"gitId":"itszhixuan"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":111,"author":{"gitId":"itszhixuan"},"content":"    /***","lastModifiedDate":"2023-02-04"},{"lineNumber":112,"author":{"gitId":"itszhixuan"},"content":"     * Prior to adding events with command toDo to the list, processtoDo separates the","lastModifiedDate":"2023-02-04"},{"lineNumber":113,"author":{"gitId":"itszhixuan"},"content":"     * important details within the input for data storage.","lastModifiedDate":"2023-02-04"},{"lineNumber":114,"author":{"gitId":"itszhixuan"},"content":"     * @param storedValues List of tasks from user inputs.","lastModifiedDate":"2023-02-04"},{"lineNumber":115,"author":{"gitId":"itszhixuan"},"content":"     * @param taskNum The existing position in the list.","lastModifiedDate":"2023-02-04"},{"lineNumber":116,"author":{"gitId":"itszhixuan"},"content":"     * @param line User input to be processed.","lastModifiedDate":"2023-02-04"},{"lineNumber":117,"author":{"gitId":"itszhixuan"},"content":"     * @return Updated position in the list.","lastModifiedDate":"2023-02-04"},{"lineNumber":118,"author":{"gitId":"itszhixuan"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":119,"author":{"gitId":"itszhixuan"},"content":"    private static int processToDo(Task[] storedValues, int taskNum, String line) {","lastModifiedDate":"2023-02-04"},{"lineNumber":120,"author":{"gitId":"itszhixuan"},"content":"        String removeCommand \u003d line.substring(REMOVE_TODO_NUM);","lastModifiedDate":"2023-02-04"},{"lineNumber":121,"author":{"gitId":"itszhixuan"},"content":"        Todo todoInput\u003d new Todo(removeCommand);","lastModifiedDate":"2023-02-04"},{"lineNumber":122,"author":{"gitId":"itszhixuan"},"content":"        taskNum \u003d addTask(storedValues, taskNum, todoInput);","lastModifiedDate":"2023-02-04"},{"lineNumber":123,"author":{"gitId":"itszhixuan"},"content":"        return taskNum;","lastModifiedDate":"2023-02-04"},{"lineNumber":124,"author":{"gitId":"itszhixuan"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":125,"author":{"gitId":"itszhixuan"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":126,"author":{"gitId":"itszhixuan"},"content":"    /***","lastModifiedDate":"2023-02-04"},{"lineNumber":127,"author":{"gitId":"itszhixuan"},"content":"     * Prior to adding events with command deadline to the list, processDeadline separates the","lastModifiedDate":"2023-02-04"},{"lineNumber":128,"author":{"gitId":"itszhixuan"},"content":"     * important details within the input for data storage.","lastModifiedDate":"2023-02-04"},{"lineNumber":129,"author":{"gitId":"itszhixuan"},"content":"     * @param storedValues List of tasks from user inputs.","lastModifiedDate":"2023-02-04"},{"lineNumber":130,"author":{"gitId":"itszhixuan"},"content":"     * @param taskNum The existing position in the list.","lastModifiedDate":"2023-02-04"},{"lineNumber":131,"author":{"gitId":"itszhixuan"},"content":"     * @param line User input to be processed.","lastModifiedDate":"2023-02-04"},{"lineNumber":132,"author":{"gitId":"itszhixuan"},"content":"     * @return Updated position in the list.","lastModifiedDate":"2023-02-04"},{"lineNumber":133,"author":{"gitId":"itszhixuan"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":134,"author":{"gitId":"itszhixuan"},"content":"    private static int processDeadline(Task[] storedValues, int taskNum, String line) {","lastModifiedDate":"2023-02-04"},{"lineNumber":135,"author":{"gitId":"itszhixuan"},"content":"        int forwardSlash \u003d line.indexOf(\u0027/\u0027);","lastModifiedDate":"2023-02-04"},{"lineNumber":136,"author":{"gitId":"itszhixuan"},"content":"        int endOfTask \u003d forwardSlash - 1;","lastModifiedDate":"2023-02-04"},{"lineNumber":137,"author":{"gitId":"itszhixuan"},"content":"        int dates \u003d forwardSlash + REMOVE_BY_NUM;","lastModifiedDate":"2023-02-04"},{"lineNumber":138,"author":{"gitId":"itszhixuan"},"content":"        Deadline deadlineInput \u003d new Deadline(line.substring(9,endOfTask), line.substring(dates));","lastModifiedDate":"2023-02-04"},{"lineNumber":139,"author":{"gitId":"itszhixuan"},"content":"        taskNum \u003d addTask(storedValues, taskNum, deadlineInput);","lastModifiedDate":"2023-02-04"},{"lineNumber":140,"author":{"gitId":"itszhixuan"},"content":"        return taskNum;","lastModifiedDate":"2023-02-04"},{"lineNumber":141,"author":{"gitId":"itszhixuan"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":142,"author":{"gitId":"itszhixuan"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":143,"author":{"gitId":"itszhixuan"},"content":"    /***","lastModifiedDate":"2023-02-04"},{"lineNumber":144,"author":{"gitId":"itszhixuan"},"content":"     * Adds processed user inputs into the list of stored values.","lastModifiedDate":"2023-02-04"},{"lineNumber":145,"author":{"gitId":"itszhixuan"},"content":"     * @param storedValues List of tasks from user inputs.","lastModifiedDate":"2023-02-04"},{"lineNumber":146,"author":{"gitId":"itszhixuan"},"content":"     * @param taskNum The existing position in the list.","lastModifiedDate":"2023-02-04"},{"lineNumber":147,"author":{"gitId":"itszhixuan"},"content":"     * @param line User input to be processed.","lastModifiedDate":"2023-02-04"},{"lineNumber":148,"author":{"gitId":"itszhixuan"},"content":"     * @return Updated position in the list.","lastModifiedDate":"2023-02-04"},{"lineNumber":149,"author":{"gitId":"itszhixuan"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":150,"author":{"gitId":"itszhixuan"},"content":"    private static int addTask(Task[] storedValues, int taskNum, Task line) {","lastModifiedDate":"2023-02-04"},{"lineNumber":151,"author":{"gitId":"itszhixuan"},"content":"        formattingLine();","lastModifiedDate":"2023-01-28"},{"lineNumber":152,"author":{"gitId":"itszhixuan"},"content":"        System.out.println(\"Got it. I\u0027ve added this task: \\n\" + line.toString() + \"\\n\"+","lastModifiedDate":"2023-02-01"},{"lineNumber":153,"author":{"gitId":"itszhixuan"},"content":"                \"Now you have \" + (taskNum + 1) + \" tasks in the list.\\n\");","lastModifiedDate":"2023-02-04"},{"lineNumber":154,"author":{"gitId":"itszhixuan"},"content":"        formattingLine();","lastModifiedDate":"2023-01-28"},{"lineNumber":155,"author":{"gitId":"itszhixuan"},"content":"        // Store value in line into list","lastModifiedDate":"2023-02-04"},{"lineNumber":156,"author":{"gitId":"itszhixuan"},"content":"        Task newInput \u003d line;","lastModifiedDate":"2023-02-01"},{"lineNumber":157,"author":{"gitId":"itszhixuan"},"content":"        storedValues[taskNum] \u003d newInput;","lastModifiedDate":"2023-02-04"},{"lineNumber":158,"author":{"gitId":"itszhixuan"},"content":"        taskNum +\u003d 1;","lastModifiedDate":"2023-02-04"},{"lineNumber":159,"author":{"gitId":"itszhixuan"},"content":"        return taskNum;","lastModifiedDate":"2023-02-04"},{"lineNumber":160,"author":{"gitId":"itszhixuan"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":161,"author":{"gitId":"itszhixuan"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":162,"author":{"gitId":"itszhixuan"},"content":"    /***","lastModifiedDate":"2023-02-04"},{"lineNumber":163,"author":{"gitId":"itszhixuan"},"content":"     * Unmarks the task in the list when called.","lastModifiedDate":"2023-02-04"},{"lineNumber":164,"author":{"gitId":"itszhixuan"},"content":"     * @param storedValues List of tasks from user inputs","lastModifiedDate":"2023-02-04"},{"lineNumber":165,"author":{"gitId":"itszhixuan"},"content":"     * @param line User input to be processed.","lastModifiedDate":"2023-02-04"},{"lineNumber":166,"author":{"gitId":"itszhixuan"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":167,"author":{"gitId":"itszhixuan"},"content":"    private static void unmarkItem(Task[] storedValues, String line) {","lastModifiedDate":"2023-02-04"},{"lineNumber":168,"author":{"gitId":"itszhixuan"},"content":"        int length \u003d line.length();","lastModifiedDate":"2023-01-28"},{"lineNumber":169,"author":{"gitId":"itszhixuan"},"content":"        String itemToMark \u003d line.substring(REMOVE_UNMARK_NUM, length);","lastModifiedDate":"2023-02-04"},{"lineNumber":170,"author":{"gitId":"itszhixuan"},"content":"        int numToMark \u003d Integer.parseInt(itemToMark);","lastModifiedDate":"2023-01-28"},{"lineNumber":171,"author":{"gitId":"itszhixuan"},"content":"        // Unmark the item","lastModifiedDate":"2023-02-04"},{"lineNumber":172,"author":{"gitId":"itszhixuan"},"content":"        storedValues[numToMark-1].unmarkAsDone();","lastModifiedDate":"2023-02-04"},{"lineNumber":173,"author":{"gitId":"itszhixuan"},"content":"        formattingLine();","lastModifiedDate":"2023-01-28"},{"lineNumber":174,"author":{"gitId":"itszhixuan"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet: \\n\" +","lastModifiedDate":"2023-01-28"},{"lineNumber":175,"author":{"gitId":"itszhixuan"},"content":"                storedValues[numToMark-1].toString() + \"\\n\");","lastModifiedDate":"2023-02-04"},{"lineNumber":176,"author":{"gitId":"itszhixuan"},"content":"        formattingLine();","lastModifiedDate":"2023-01-28"},{"lineNumber":177,"author":{"gitId":"itszhixuan"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":178,"author":{"gitId":"itszhixuan"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":179,"author":{"gitId":"itszhixuan"},"content":"    /***","lastModifiedDate":"2023-02-04"},{"lineNumber":180,"author":{"gitId":"itszhixuan"},"content":"     * Marks the task in the list when called.","lastModifiedDate":"2023-02-04"},{"lineNumber":181,"author":{"gitId":"itszhixuan"},"content":"     * @param storedValues List of tasks from user inputs.","lastModifiedDate":"2023-02-04"},{"lineNumber":182,"author":{"gitId":"itszhixuan"},"content":"     * @param line User input to be processed.","lastModifiedDate":"2023-02-04"},{"lineNumber":183,"author":{"gitId":"itszhixuan"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":184,"author":{"gitId":"itszhixuan"},"content":"    private static void markItem(Task[] storedValues, String line) {","lastModifiedDate":"2023-02-04"},{"lineNumber":185,"author":{"gitId":"itszhixuan"},"content":"        int length \u003d line.length();","lastModifiedDate":"2023-01-28"},{"lineNumber":186,"author":{"gitId":"itszhixuan"},"content":"        String itemToMark \u003d line.substring(REMOVE_MARK_NUM, length);","lastModifiedDate":"2023-02-04"},{"lineNumber":187,"author":{"gitId":"itszhixuan"},"content":"        int numToMark \u003d Integer.parseInt(itemToMark);","lastModifiedDate":"2023-01-28"},{"lineNumber":188,"author":{"gitId":"itszhixuan"},"content":"        // Mark the item as complete","lastModifiedDate":"2023-02-04"},{"lineNumber":189,"author":{"gitId":"itszhixuan"},"content":"        storedValues[numToMark-1].markAsDone();","lastModifiedDate":"2023-02-04"},{"lineNumber":190,"author":{"gitId":"itszhixuan"},"content":"        formattingLine();","lastModifiedDate":"2023-01-28"},{"lineNumber":191,"author":{"gitId":"itszhixuan"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done: \\n\"","lastModifiedDate":"2023-02-01"},{"lineNumber":192,"author":{"gitId":"itszhixuan"},"content":"                + storedValues[numToMark-1].toString() + \"\\n\");","lastModifiedDate":"2023-02-04"},{"lineNumber":193,"author":{"gitId":"itszhixuan"},"content":"        formattingLine();","lastModifiedDate":"2023-01-28"},{"lineNumber":194,"author":{"gitId":"itszhixuan"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":195,"author":{"gitId":"itszhixuan"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":196,"author":{"gitId":"itszhixuan"},"content":"    /***","lastModifiedDate":"2023-02-04"},{"lineNumber":197,"author":{"gitId":"itszhixuan"},"content":"     * Print all items within the list of stored tasks.","lastModifiedDate":"2023-02-04"},{"lineNumber":198,"author":{"gitId":"itszhixuan"},"content":"     * @param storedValues List of tasks from user inputs.","lastModifiedDate":"2023-02-04"},{"lineNumber":199,"author":{"gitId":"itszhixuan"},"content":"     * @param taskNum The existing position in the list.","lastModifiedDate":"2023-02-04"},{"lineNumber":200,"author":{"gitId":"itszhixuan"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":201,"author":{"gitId":"itszhixuan"},"content":"    private static void printList(Task[] storedValues, int taskNum) {","lastModifiedDate":"2023-02-04"},{"lineNumber":202,"author":{"gitId":"itszhixuan"},"content":"        int currValue \u003d 0;","lastModifiedDate":"2023-01-28"},{"lineNumber":203,"author":{"gitId":"itszhixuan"},"content":"        Task[] existingValues \u003d Arrays.copyOf(storedValues, taskNum);","lastModifiedDate":"2023-02-04"},{"lineNumber":204,"author":{"gitId":"itszhixuan"},"content":"        formattingLine();","lastModifiedDate":"2023-01-28"},{"lineNumber":205,"author":{"gitId":"itszhixuan"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-02-01"},{"lineNumber":206,"author":{"gitId":"itszhixuan"},"content":"        for (Task value : existingValues) {","lastModifiedDate":"2023-01-28"},{"lineNumber":207,"author":{"gitId":"itszhixuan"},"content":"            System.out.println((currValue+1) + \".\" + value.toString());","lastModifiedDate":"2023-02-01"},{"lineNumber":208,"author":{"gitId":"itszhixuan"},"content":"            currValue +\u003d 1;","lastModifiedDate":"2023-01-28"},{"lineNumber":209,"author":{"gitId":"itszhixuan"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":210,"author":{"gitId":"itszhixuan"},"content":"        formattingLine();","lastModifiedDate":"2023-01-28"},{"lineNumber":211,"author":{"gitId":"itszhixuan"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":212,"author":{"gitId":"itszhixuan"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":213,"author":{"gitId":"itszhixuan"},"content":"    /***","lastModifiedDate":"2023-02-04"},{"lineNumber":214,"author":{"gitId":"itszhixuan"},"content":"     * Outputs the goodbye formatting and message to the user when bye","lastModifiedDate":"2023-02-04"},{"lineNumber":215,"author":{"gitId":"itszhixuan"},"content":"     * command is called.","lastModifiedDate":"2023-02-04"},{"lineNumber":216,"author":{"gitId":"itszhixuan"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":217,"author":{"gitId":"itszhixuan"},"content":"    private static void showGoodbye() {","lastModifiedDate":"2023-01-28"},{"lineNumber":218,"author":{"gitId":"itszhixuan"},"content":"        String bye \u003d \"Bye. Hope to see you again soon!\\n\";","lastModifiedDate":"2023-02-04"},{"lineNumber":219,"author":{"gitId":"itszhixuan"},"content":"        formattingLine();","lastModifiedDate":"2023-02-04"},{"lineNumber":220,"author":{"gitId":"itszhixuan"},"content":"        System.out.println(bye);","lastModifiedDate":"2023-01-26"},{"lineNumber":221,"author":{"gitId":"itszhixuan"},"content":"        formattingLine();","lastModifiedDate":"2023-02-04"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":223,"author":{"gitId":"itszhixuan"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":224,"author":{"gitId":"itszhixuan"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":225,"author":{"gitId":"itszhixuan"},"content":"     * Shows the formatted greetings to the user when called.","lastModifiedDate":"2023-02-04"},{"lineNumber":226,"author":{"gitId":"itszhixuan"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":227,"author":{"gitId":"itszhixuan"},"content":"    private static void showGreetings() {","lastModifiedDate":"2023-01-28"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-01-28"},{"lineNumber":229,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-01-28"},{"lineNumber":230,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-01-28"},{"lineNumber":231,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-01-28"},{"lineNumber":232,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-01-28"},{"lineNumber":233,"author":{"gitId":"itszhixuan"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":234,"author":{"gitId":"itszhixuan"},"content":"        String hello \u003d \" Hello! I\u0027m Duke\\n\" +","lastModifiedDate":"2023-02-04"},{"lineNumber":235,"author":{"gitId":"itszhixuan"},"content":"                \" What can I do for you?\\n\";","lastModifiedDate":"2023-02-04"},{"lineNumber":236,"author":{"gitId":"itszhixuan"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2023-01-28"},{"lineNumber":238,"author":{"gitId":"itszhixuan"},"content":"        formattingLine();","lastModifiedDate":"2023-02-04"},{"lineNumber":239,"author":{"gitId":"itszhixuan"},"content":"        System.out.println(hello);","lastModifiedDate":"2023-01-28"},{"lineNumber":240,"author":{"gitId":"itszhixuan"},"content":"        formattingLine();","lastModifiedDate":"2023-02-04"},{"lineNumber":241,"author":{"gitId":"itszhixuan"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":242,"author":{"gitId":"itszhixuan"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":243,"author":{"gitId":"itszhixuan"},"content":"    /***","lastModifiedDate":"2023-02-04"},{"lineNumber":244,"author":{"gitId":"itszhixuan"},"content":"     * Prints the fixed formatting line when called.","lastModifiedDate":"2023-02-04"},{"lineNumber":245,"author":{"gitId":"itszhixuan"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":246,"author":{"gitId":"itszhixuan"},"content":"    private static void formattingLine() {","lastModifiedDate":"2023-01-28"},{"lineNumber":247,"author":{"gitId":"itszhixuan"},"content":"        System.out.println(LINE_FORMATTING);","lastModifiedDate":"2023-02-04"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":249,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"itszhixuan":238,"-":11}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itszhixuan"},"content":"public class Event extends Task{","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"itszhixuan"},"content":"    /***","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"itszhixuan"},"content":"     * The starting time of the event.","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"itszhixuan"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"itszhixuan"},"content":"    protected String by;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"itszhixuan"},"content":"    /***","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"itszhixuan"},"content":"     * The ending time of the event.","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"itszhixuan"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"itszhixuan"},"content":"    protected String to;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"itszhixuan"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"itszhixuan"},"content":"    /***","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"itszhixuan"},"content":"     * Functions in the Event class.","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"itszhixuan"},"content":"     * @param description Name of the task.","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"itszhixuan"},"content":"     * @param by Starting time of the event.","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"itszhixuan"},"content":"     * @param to Ending time of the event.","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"itszhixuan"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"itszhixuan"},"content":"    public Event(String description,String by, String to) {","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"itszhixuan"},"content":"        super(description);","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"itszhixuan"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"itszhixuan"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"itszhixuan"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"itszhixuan"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"itszhixuan"},"content":"    /***","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"itszhixuan"},"content":"     * The string output when class is called.","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"itszhixuan"},"content":"     * @return Status, starting time and ending time.","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"itszhixuan"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"itszhixuan"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"itszhixuan"},"content":"    public String toString() {","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"itszhixuan"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + by + \" to: \" + to + \")\";","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"itszhixuan"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"itszhixuan"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"itszhixuan":31}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itszhixuan"},"content":"public class Task {","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"itszhixuan"},"content":"    /***","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"itszhixuan"},"content":"     * The description of the task.","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"itszhixuan"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"itszhixuan"},"content":"    protected String description;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"itszhixuan"},"content":"    /***","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"itszhixuan"},"content":"     * The completion status of the task.","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"itszhixuan"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"itszhixuan"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"itszhixuan"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"itszhixuan"},"content":"    /***","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"itszhixuan"},"content":"     * Functions in the Task class","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"itszhixuan"},"content":"     * @param description Name of the task.","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"itszhixuan"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"itszhixuan"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"itszhixuan"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"itszhixuan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"itszhixuan"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"itszhixuan"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"itszhixuan"},"content":"    /***","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"itszhixuan"},"content":"     * Gets the current status of the task within the list.","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"itszhixuan"},"content":"     * @return isDone.","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"itszhixuan"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"itszhixuan"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"itszhixuan"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"itszhixuan"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"itszhixuan"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"itszhixuan"},"content":"    /***","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"itszhixuan"},"content":"     * Marks the specified item as done.","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"itszhixuan"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"itszhixuan"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"itszhixuan"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"itszhixuan"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"itszhixuan"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"itszhixuan"},"content":"    /***","lastModifiedDate":"2023-02-04"},{"lineNumber":36,"author":{"gitId":"itszhixuan"},"content":"     * Unmarks the specified item as done.","lastModifiedDate":"2023-02-04"},{"lineNumber":37,"author":{"gitId":"itszhixuan"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":38,"author":{"gitId":"itszhixuan"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"itszhixuan"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"itszhixuan"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"itszhixuan"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":42,"author":{"gitId":"itszhixuan"},"content":"    /***","lastModifiedDate":"2023-02-04"},{"lineNumber":43,"author":{"gitId":"itszhixuan"},"content":"     * The string output when class is called.","lastModifiedDate":"2023-02-04"},{"lineNumber":44,"author":{"gitId":"itszhixuan"},"content":"     * @return Status and description.","lastModifiedDate":"2023-02-04"},{"lineNumber":45,"author":{"gitId":"itszhixuan"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":46,"author":{"gitId":"itszhixuan"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"itszhixuan"},"content":"    public String toString() {","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"itszhixuan"},"content":"        return \"[\" + getStatusIcon()+ \"] \" + description;","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"itszhixuan"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"itszhixuan"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"itszhixuan":50}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itszhixuan"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"itszhixuan"},"content":"    /***","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"itszhixuan"},"content":"     * Functions in the Todo class.","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"itszhixuan"},"content":"     * @param description Name of the task.","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"itszhixuan"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"itszhixuan"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"itszhixuan"},"content":"        super(description);","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"itszhixuan"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"itszhixuan"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"itszhixuan"},"content":"    /***","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"itszhixuan"},"content":"     * The string output when class is called.","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"itszhixuan"},"content":"     * @return Status and description.","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"itszhixuan"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"itszhixuan"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"itszhixuan"},"content":"    public String toString() {","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"itszhixuan"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"itszhixuan"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"itszhixuan"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"itszhixuan":18}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"itszhixuan"},"content":"todo add task","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"itszhixuan"},"content":"list","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"itszhixuan"},"content":"bye","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"itszhixuan":3}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"itszhixuan"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"itszhixuan":1,"-":33}}]
