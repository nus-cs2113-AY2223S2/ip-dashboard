[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"MingEn82"},"content":"T | 1 | test","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"MingEn82":1}},{"path":"src/main/java/Command/Greetings.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MingEn82"},"content":"package Command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"public class Greetings {","lastModifiedDate":"2023-01-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    public static void introduction() {","lastModifiedDate":"2023-01-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"        System.out.println(\"------------------------------------------------------------\");","lastModifiedDate":"2023-01-12"},{"lineNumber":5,"author":{"gitId":"MingEn82"},"content":"        System.out.println(\"Hello! I\u0027m Duke. Hope you are having a wonderful day\");","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-01-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"        System.out.println(\"------------------------------------------------------------\\n\");","lastModifiedDate":"2023-01-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static void goodbye() {","lastModifiedDate":"2023-01-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        System.out.println(\"\\t------------------------------------------------------------\");","lastModifiedDate":"2023-01-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        System.out.println(\"\\tBye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        System.out.println(\"\\t------------------------------------------------------------\");","lastModifiedDate":"2023-01-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-01-12"}],"authorContributionMap":{"MingEn82":2,"-":13}},{"path":"src/main/java/Command/TaskPrinter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MingEn82"},"content":"package Command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"MingEn82"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"MingEn82"},"content":"import Entities.Task;","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"MingEn82"},"content":"public class TaskPrinter {","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"MingEn82"},"content":"    public static String taskAddedMessage(Task t, int numTasks) {","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"MingEn82"},"content":"        return ","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"MingEn82"},"content":"            \"\\t----------------------------------------------------\\n\" + ","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"MingEn82"},"content":"            \"\\tGot it. I have added this task to the list!\\n\" + ","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"MingEn82"},"content":"            \"\\t   \" + t.toString() + \"\\n\" + ","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"MingEn82"},"content":"            \"\\tNow you have \" + numTasks + ","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"MingEn82"},"content":"            \" task\" + (numTasks \u003e 1 ? \"s\" : \"\") + ","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"MingEn82"},"content":"            \" in the list.\\n\" + ","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"MingEn82"},"content":"            \"\\t----------------------------------------------------\\n\\n\"","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"MingEn82"},"content":"        ;","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"MingEn82"},"content":"    public static String tasksToStringMessage(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"MingEn82"},"content":"        String output \u003d \"\\t----------------------------------------------------\\n\";","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"MingEn82"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"MingEn82"},"content":"            output +\u003d \"\\t No tasks found!\\n\";","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"MingEn82"},"content":"        } else {","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"MingEn82"},"content":"            output +\u003d \"\\t Here are the tasks in your list:\\n\";","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"MingEn82"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"MingEn82"},"content":"                output +\u003d \"\\t\" + (i + 1) + \".\" + tasks.get(i).toString() + \"\\n\";","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"MingEn82"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"MingEn82"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"MingEn82"},"content":"        output +\u003d \"\\t----------------------------------------------------\\n\\n\";","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"MingEn82"},"content":"        return output;","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"MingEn82"},"content":"    public static String markedMessage(Task t) {","lastModifiedDate":"2023-01-20"},{"lineNumber":36,"author":{"gitId":"MingEn82"},"content":"        return ","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"MingEn82"},"content":"            \"\\t----------------------------------------------------\\n\" + ","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"MingEn82"},"content":"            \"\\tNice! I\u0027ve marked this task as done:\\n\" + ","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"MingEn82"},"content":"            \"\\t   \" + t.toString() + \"\\n\" + ","lastModifiedDate":"2023-01-20"},{"lineNumber":40,"author":{"gitId":"MingEn82"},"content":"            \"\\t----------------------------------------------------\\n\\n\"","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"MingEn82"},"content":"        ;","lastModifiedDate":"2023-01-20"},{"lineNumber":42,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":43,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":44,"author":{"gitId":"MingEn82"},"content":"    public static String unmarkedMessage(Task t) {","lastModifiedDate":"2023-01-20"},{"lineNumber":45,"author":{"gitId":"MingEn82"},"content":"        return ","lastModifiedDate":"2023-01-20"},{"lineNumber":46,"author":{"gitId":"MingEn82"},"content":"            \"\\t----------------------------------------------------\\n\" + ","lastModifiedDate":"2023-01-20"},{"lineNumber":47,"author":{"gitId":"MingEn82"},"content":"            \"\\tOK, I\u0027ve marked this task as not done yet:\\n\" + ","lastModifiedDate":"2023-01-20"},{"lineNumber":48,"author":{"gitId":"MingEn82"},"content":"            \"\\t   \" + t.toString() + \"\\n\" + ","lastModifiedDate":"2023-01-20"},{"lineNumber":49,"author":{"gitId":"MingEn82"},"content":"            \"\\t----------------------------------------------------\\n\\n\"","lastModifiedDate":"2023-01-20"},{"lineNumber":50,"author":{"gitId":"MingEn82"},"content":"        ;","lastModifiedDate":"2023-01-20"},{"lineNumber":51,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":52,"author":{"gitId":"MingEn82"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"MingEn82":52}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-12"},{"lineNumber":2,"author":{"gitId":"MingEn82"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"MingEn82"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-12"},{"lineNumber":5,"author":{"gitId":"MingEn82"},"content":"import Command.*;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"MingEn82"},"content":"import Entities.*;","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"MingEn82"},"content":"import Exceptions.*;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"MingEn82"},"content":"import FileUtils.*;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"MingEn82"},"content":"    private static final String filePath \u003d \"data/duke.txt\";","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-12"},{"lineNumber":14,"author":{"gitId":"MingEn82"},"content":"        ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"MingEn82"},"content":"        Task newTask \u003d null;","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"MingEn82"},"content":"        String[] inputArray;","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"MingEn82"},"content":"        String command, taskName;","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"MingEn82"},"content":"        String startDate, endDate;","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"MingEn82"},"content":"        int startDateIdx, endDateIdx;","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"MingEn82"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"MingEn82"},"content":"            tasks \u003d TaskReader.readAndReturnTasks(filePath);","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"MingEn82"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"MingEn82"},"content":"            System.out.println(\"File does not exist! Initialising empty tasks list..\\n\");","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"MingEn82"},"content":"            tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"MingEn82"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"MingEn82"},"content":"        Greetings.introduction();","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String input \u003d sc.nextLine();","lastModifiedDate":"2023-01-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        while (!input.equals(\"bye\")) {","lastModifiedDate":"2023-01-12"},{"lineNumber":32,"author":{"gitId":"MingEn82"},"content":"            // Empty Input, Do Nothing","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"MingEn82"},"content":"            if (input.length() \u003d\u003d 0) {","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"MingEn82"},"content":"                input \u003d sc.nextLine();","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"MingEn82"},"content":"                continue;","lastModifiedDate":"2023-01-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-12"},{"lineNumber":38,"author":{"gitId":"MingEn82"},"content":"            inputArray \u003d input.split(\" \");","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"MingEn82"},"content":"            command \u003d inputArray[0].toLowerCase();","lastModifiedDate":"2023-01-20"},{"lineNumber":40,"author":{"gitId":"MingEn82"},"content":"            newTask \u003d null;","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"MingEn82"},"content":"            startDateIdx \u003d endDateIdx \u003d -1;","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"MingEn82"},"content":"            startDate \u003d endDate \u003d null;","lastModifiedDate":"2023-01-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-12"},{"lineNumber":44,"author":{"gitId":"MingEn82"},"content":"            try {","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"MingEn82"},"content":"                switch (command) {","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"MingEn82"},"content":"                    case \"list\":","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"MingEn82"},"content":"                        System.out.println(TaskPrinter.tasksToStringMessage(tasks));","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"MingEn82"},"content":"                        break;","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"MingEn82"},"content":"                    case \"todo\":","lastModifiedDate":"2023-01-20"},{"lineNumber":51,"author":{"gitId":"MingEn82"},"content":"                        if (input.length() \u003d\u003d command.length()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"MingEn82"},"content":"                            throw new NoDescriptionException(command);","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"MingEn82"},"content":"                        }","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"MingEn82"},"content":"                        taskName \u003d input.substring(command.length() + 1);","lastModifiedDate":"2023-01-20"},{"lineNumber":56,"author":{"gitId":"MingEn82"},"content":"                        newTask \u003d new Todo(taskName, false);","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"MingEn82"},"content":"                        break;","lastModifiedDate":"2023-01-20"},{"lineNumber":58,"author":{"gitId":"MingEn82"},"content":"    ","lastModifiedDate":"2023-01-20"},{"lineNumber":59,"author":{"gitId":"MingEn82"},"content":"                    case \"deadline\":","lastModifiedDate":"2023-01-20"},{"lineNumber":60,"author":{"gitId":"MingEn82"},"content":"                        if (input.length() \u003d\u003d command.length()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"MingEn82"},"content":"                            throw new NoDescriptionException(command);","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"MingEn82"},"content":"                        }","lastModifiedDate":"2023-01-25"},{"lineNumber":63,"author":{"gitId":"MingEn82"},"content":"                    ","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"MingEn82"},"content":"                        startDateIdx \u003d input.indexOf(\"/by \");","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"MingEn82"},"content":"                        if (startDateIdx \u003d\u003d -1) {","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"MingEn82"},"content":"                            throw new InsufficientArgumentsException(command, \"deadline [task] /by [date]\");","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"MingEn82"},"content":"                        }","lastModifiedDate":"2023-01-25"},{"lineNumber":68,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":69,"author":{"gitId":"MingEn82"},"content":"                        taskName \u003d input.substring(command.length() + 1, startDateIdx);","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"MingEn82"},"content":"                        startDate \u003d input.substring(startDateIdx + 4);","lastModifiedDate":"2023-01-31"},{"lineNumber":71,"author":{"gitId":"MingEn82"},"content":"                        if (taskName.length() \u003d\u003d 0 || startDate.length() \u003d\u003d 0) {","lastModifiedDate":"2023-01-25"},{"lineNumber":72,"author":{"gitId":"MingEn82"},"content":"                            String emptyArgument \u003d ","lastModifiedDate":"2023-01-25"},{"lineNumber":73,"author":{"gitId":"MingEn82"},"content":"                                taskName.length() \u003d\u003d 0 ","lastModifiedDate":"2023-01-25"},{"lineNumber":74,"author":{"gitId":"MingEn82"},"content":"                                ? \"Task Name\" ","lastModifiedDate":"2023-01-25"},{"lineNumber":75,"author":{"gitId":"MingEn82"},"content":"                                : \"Start Date\";","lastModifiedDate":"2023-01-25"},{"lineNumber":76,"author":{"gitId":"MingEn82"},"content":"                            throw new EmptyArgumentException(emptyArgument);","lastModifiedDate":"2023-01-25"},{"lineNumber":77,"author":{"gitId":"MingEn82"},"content":"                        }","lastModifiedDate":"2023-01-25"},{"lineNumber":78,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":79,"author":{"gitId":"MingEn82"},"content":"                        newTask \u003d new Deadline(taskName, false, startDate);","lastModifiedDate":"2023-01-31"},{"lineNumber":80,"author":{"gitId":"MingEn82"},"content":"                        break;","lastModifiedDate":"2023-01-20"},{"lineNumber":81,"author":{"gitId":"MingEn82"},"content":"    ","lastModifiedDate":"2023-01-20"},{"lineNumber":82,"author":{"gitId":"MingEn82"},"content":"                    case \"event\":","lastModifiedDate":"2023-01-20"},{"lineNumber":83,"author":{"gitId":"MingEn82"},"content":"                        if (input.length() \u003d\u003d command.length()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":84,"author":{"gitId":"MingEn82"},"content":"                            throw new NoDescriptionException(command);","lastModifiedDate":"2023-01-25"},{"lineNumber":85,"author":{"gitId":"MingEn82"},"content":"                        }","lastModifiedDate":"2023-01-25"},{"lineNumber":86,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":87,"author":{"gitId":"MingEn82"},"content":"                        startDateIdx \u003d input.indexOf(\"/from \");","lastModifiedDate":"2023-01-31"},{"lineNumber":88,"author":{"gitId":"MingEn82"},"content":"                        endDateIdx \u003d input.indexOf(\"/to \");","lastModifiedDate":"2023-01-31"},{"lineNumber":89,"author":{"gitId":"MingEn82"},"content":"                        if (startDateIdx \u003d\u003d -1 || endDateIdx \u003d\u003d -1) {","lastModifiedDate":"2023-01-31"},{"lineNumber":90,"author":{"gitId":"MingEn82"},"content":"                            throw new InsufficientArgumentsException(command, \"event [task] /from [startDate] /to [startDate]\");","lastModifiedDate":"2023-01-25"},{"lineNumber":91,"author":{"gitId":"MingEn82"},"content":"                        }","lastModifiedDate":"2023-01-25"},{"lineNumber":92,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":93,"author":{"gitId":"MingEn82"},"content":"                        taskName \u003d input.substring(command.length() + 1, startDateIdx);","lastModifiedDate":"2023-01-31"},{"lineNumber":94,"author":{"gitId":"MingEn82"},"content":"                        startDate \u003d input.substring(startDateIdx + 6, endDateIdx-1);","lastModifiedDate":"2023-01-31"},{"lineNumber":95,"author":{"gitId":"MingEn82"},"content":"                        endDate \u003d input.substring(endDateIdx + 4);","lastModifiedDate":"2023-01-31"},{"lineNumber":96,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":97,"author":{"gitId":"MingEn82"},"content":"                        if (taskName.length() \u003d\u003d 0 || startDate.length() \u003d\u003d 0 || endDate.length() \u003d\u003d 0) {","lastModifiedDate":"2023-01-25"},{"lineNumber":98,"author":{"gitId":"MingEn82"},"content":"                            String emptyArgument \u003d ","lastModifiedDate":"2023-01-25"},{"lineNumber":99,"author":{"gitId":"MingEn82"},"content":"                                taskName.length() \u003d\u003d 0 ","lastModifiedDate":"2023-01-25"},{"lineNumber":100,"author":{"gitId":"MingEn82"},"content":"                                ? \"Task Name\" ","lastModifiedDate":"2023-01-25"},{"lineNumber":101,"author":{"gitId":"MingEn82"},"content":"                                : startDate.length() \u003d\u003d 0 ","lastModifiedDate":"2023-01-25"},{"lineNumber":102,"author":{"gitId":"MingEn82"},"content":"                                ? \"Start Date\" ","lastModifiedDate":"2023-01-25"},{"lineNumber":103,"author":{"gitId":"MingEn82"},"content":"                                : \"End Date\";","lastModifiedDate":"2023-01-25"},{"lineNumber":104,"author":{"gitId":"MingEn82"},"content":"                            throw new EmptyArgumentException(emptyArgument);","lastModifiedDate":"2023-01-25"},{"lineNumber":105,"author":{"gitId":"MingEn82"},"content":"                        }","lastModifiedDate":"2023-01-25"},{"lineNumber":106,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":107,"author":{"gitId":"MingEn82"},"content":"                        newTask \u003d new Event(taskName, false, startDate, endDate);","lastModifiedDate":"2023-01-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                        break;","lastModifiedDate":"2023-01-20"},{"lineNumber":109,"author":{"gitId":"MingEn82"},"content":"    ","lastModifiedDate":"2023-01-20"},{"lineNumber":110,"author":{"gitId":"MingEn82"},"content":"                    case \"mark\":","lastModifiedDate":"2023-01-20"},{"lineNumber":111,"author":{"gitId":"MingEn82"},"content":"                        if (input.length() \u003d\u003d command.length()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":112,"author":{"gitId":"MingEn82"},"content":"                            throw new NoDescriptionException(command);","lastModifiedDate":"2023-01-25"},{"lineNumber":113,"author":{"gitId":"MingEn82"},"content":"                        }","lastModifiedDate":"2023-01-25"},{"lineNumber":114,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":115,"author":{"gitId":"MingEn82"},"content":"                        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":116,"author":{"gitId":"MingEn82"},"content":"                            startDateIdx \u003d Integer.parseInt(input.substring(command.length() + 1)) - 1;","lastModifiedDate":"2023-01-31"},{"lineNumber":117,"author":{"gitId":"MingEn82"},"content":"                        } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":118,"author":{"gitId":"MingEn82"},"content":"                            throw new NonPositiveNumberException(e);","lastModifiedDate":"2023-01-25"},{"lineNumber":119,"author":{"gitId":"MingEn82"},"content":"                        }","lastModifiedDate":"2023-01-25"},{"lineNumber":120,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":121,"author":{"gitId":"MingEn82"},"content":"                        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":122,"author":{"gitId":"MingEn82"},"content":"                            tasks.get(startDateIdx).setIsDone(true);","lastModifiedDate":"2023-01-31"},{"lineNumber":123,"author":{"gitId":"MingEn82"},"content":"                        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":124,"author":{"gitId":"MingEn82"},"content":"                            throw new InvalidTaskIndexException(tasks.size(), e);","lastModifiedDate":"2023-01-25"},{"lineNumber":125,"author":{"gitId":"MingEn82"},"content":"                        }","lastModifiedDate":"2023-01-25"},{"lineNumber":126,"author":{"gitId":"MingEn82"},"content":"                        System.out.println(TaskPrinter.markedMessage(tasks.get(startDateIdx)));","lastModifiedDate":"2023-01-31"},{"lineNumber":127,"author":{"gitId":"MingEn82"},"content":"                        break;","lastModifiedDate":"2023-01-20"},{"lineNumber":128,"author":{"gitId":"MingEn82"},"content":"                    ","lastModifiedDate":"2023-01-20"},{"lineNumber":129,"author":{"gitId":"MingEn82"},"content":"                    case \"unmark\":","lastModifiedDate":"2023-01-20"},{"lineNumber":130,"author":{"gitId":"MingEn82"},"content":"                        if (input.length() \u003d\u003d command.length()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":131,"author":{"gitId":"MingEn82"},"content":"                            throw new NoDescriptionException(command);","lastModifiedDate":"2023-01-25"},{"lineNumber":132,"author":{"gitId":"MingEn82"},"content":"                        }","lastModifiedDate":"2023-01-25"},{"lineNumber":133,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":134,"author":{"gitId":"MingEn82"},"content":"                        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":135,"author":{"gitId":"MingEn82"},"content":"                            startDateIdx \u003d Integer.parseInt(input.substring(command.length() + 1)) - 1;","lastModifiedDate":"2023-01-31"},{"lineNumber":136,"author":{"gitId":"MingEn82"},"content":"                        } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":137,"author":{"gitId":"MingEn82"},"content":"                            throw new NonPositiveNumberException(e);","lastModifiedDate":"2023-01-25"},{"lineNumber":138,"author":{"gitId":"MingEn82"},"content":"                        }","lastModifiedDate":"2023-01-25"},{"lineNumber":139,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":140,"author":{"gitId":"MingEn82"},"content":"                        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":141,"author":{"gitId":"MingEn82"},"content":"                            tasks.get(startDateIdx).setIsDone(false);","lastModifiedDate":"2023-01-31"},{"lineNumber":142,"author":{"gitId":"MingEn82"},"content":"                        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":143,"author":{"gitId":"MingEn82"},"content":"                            throw new InvalidTaskIndexException(tasks.size(), e);","lastModifiedDate":"2023-01-25"},{"lineNumber":144,"author":{"gitId":"MingEn82"},"content":"                        }","lastModifiedDate":"2023-01-25"},{"lineNumber":145,"author":{"gitId":"MingEn82"},"content":"                        System.out.println(TaskPrinter.unmarkedMessage(tasks.get(startDateIdx)));","lastModifiedDate":"2023-01-31"},{"lineNumber":146,"author":{"gitId":"MingEn82"},"content":"                        break;","lastModifiedDate":"2023-01-20"},{"lineNumber":147,"author":{"gitId":"MingEn82"},"content":"    ","lastModifiedDate":"2023-01-20"},{"lineNumber":148,"author":{"gitId":"MingEn82"},"content":"                    default:","lastModifiedDate":"2023-01-20"},{"lineNumber":149,"author":{"gitId":"MingEn82"},"content":"                        throw new UnknownInputException();","lastModifiedDate":"2023-01-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2023-01-12"},{"lineNumber":151,"author":{"gitId":"MingEn82"},"content":"    ","lastModifiedDate":"2023-01-20"},{"lineNumber":152,"author":{"gitId":"MingEn82"},"content":"                if (newTask !\u003d null) {","lastModifiedDate":"2023-01-20"},{"lineNumber":153,"author":{"gitId":"MingEn82"},"content":"                    tasks.add(newTask);","lastModifiedDate":"2023-01-20"},{"lineNumber":154,"author":{"gitId":"MingEn82"},"content":"                    System.out.printf(TaskPrinter.taskAddedMessage(newTask, tasks.size()));","lastModifiedDate":"2023-01-20"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2023-01-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-12"},{"lineNumber":157,"author":{"gitId":"MingEn82"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":158,"author":{"gitId":"MingEn82"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-01-25"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            input \u003d sc.nextLine();","lastModifiedDate":"2023-01-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-01-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-12"},{"lineNumber":164,"author":{"gitId":"MingEn82"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":165,"author":{"gitId":"MingEn82"},"content":"            TaskWriter.writeTasksToFile(filePath, tasks);","lastModifiedDate":"2023-01-31"},{"lineNumber":166,"author":{"gitId":"MingEn82"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":167,"author":{"gitId":"MingEn82"},"content":"            System.out.println(\"Oops! Something went wrong when writing to database!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":168,"author":{"gitId":"MingEn82"},"content":"            System.out.println(\"Error: \" + e.getMessage());","lastModifiedDate":"2023-01-31"},{"lineNumber":169,"author":{"gitId":"MingEn82"},"content":"            System.out.println(\"Aborting...\");","lastModifiedDate":"2023-01-31"},{"lineNumber":170,"author":{"gitId":"MingEn82"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":171,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        Greetings.goodbye();","lastModifiedDate":"2023-01-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"MingEn82":150,"-":24}},{"path":"src/main/java/Entities/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MingEn82"},"content":"package Entities;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"MingEn82"},"content":"// import java.time.LocalDateTime;","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"MingEn82"},"content":"// import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"MingEn82"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"MingEn82"},"content":"    // protected LocalDateTime endDate;","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"MingEn82"},"content":"    // private static DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"dd-MMM-yyyy HH:mm\");","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"MingEn82"},"content":"    protected String endDate;","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"MingEn82"},"content":"    public Deadline(String taskDescription, boolean isDone, String endDate) {","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"MingEn82"},"content":"        super(taskDescription, isDone);","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"MingEn82"},"content":"        setEndDate(endDate);","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"MingEn82"},"content":"    public String getEndDate() {","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"MingEn82"},"content":"        return this.endDate;","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"MingEn82"},"content":"    public void setEndDate(String endDate) {","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"MingEn82"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"MingEn82"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"MingEn82"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"MingEn82"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + getEndDate() + \")\";","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"MingEn82"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"MingEn82":29}},{"path":"src/main/java/Entities/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MingEn82"},"content":"package Entities;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"MingEn82"},"content":"// import java.time.LocalDateTime;","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"MingEn82"},"content":"// import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"MingEn82"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"MingEn82"},"content":"    // protected LocalDateTime startDate;","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"MingEn82"},"content":"    // protected LocalDateTime endDate;","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"MingEn82"},"content":"    // private static DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"dd-MMM-yyyy HH:mm\");","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"MingEn82"},"content":"    protected String startDate;","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"MingEn82"},"content":"    protected String endDate;","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"MingEn82"},"content":"    public Event(String taskDescription, boolean isDone, String startDate, String endDate) {","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"MingEn82"},"content":"        super(taskDescription, isDone);","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"MingEn82"},"content":"        setStartDate(startDate);","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"MingEn82"},"content":"        setEndDate(endDate);","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"MingEn82"},"content":"    public String getStartDate() {","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"MingEn82"},"content":"        return this.startDate;","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"MingEn82"},"content":"    public void setStartDate(String startDate) {","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"MingEn82"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"MingEn82"},"content":"    public String getEndDate() {","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"MingEn82"},"content":"        return this.endDate;","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"MingEn82"},"content":"    public void setEndDate(String endDate) {","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"MingEn82"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"MingEn82"},"content":"    // @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":36,"author":{"gitId":"MingEn82"},"content":"    // public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"MingEn82"},"content":"    //     return \"[E]\" + super.toString() + \" (from: \" + getStartDate().format(dateFormatter) + \"to: \"","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"MingEn82"},"content":"    //             + getEndDate().format(dateFormatter) + \")\";","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"MingEn82"},"content":"    // }","lastModifiedDate":"2023-01-20"},{"lineNumber":40,"author":{"gitId":"MingEn82"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"MingEn82"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":42,"author":{"gitId":"MingEn82"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + getStartDate() + \" to: \" + getEndDate() + \")\";","lastModifiedDate":"2023-01-20"},{"lineNumber":43,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":44,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":45,"author":{"gitId":"MingEn82"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"MingEn82":45}},{"path":"src/main/java/Entities/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MingEn82"},"content":"package Entities;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"public class Task {","lastModifiedDate":"2023-01-12"},{"lineNumber":3,"author":{"gitId":"MingEn82"},"content":"    protected String taskDescription;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"MingEn82"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-12"},{"lineNumber":6,"author":{"gitId":"MingEn82"},"content":"    public Task(String taskDescription, boolean isDone) {","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"MingEn82"},"content":"        setTaskDescription(taskDescription);","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"MingEn82"},"content":"        setIsDone(isDone);","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-01-12"},{"lineNumber":12,"author":{"gitId":"MingEn82"},"content":"        return this.isDone;","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-12"},{"lineNumber":15,"author":{"gitId":"MingEn82"},"content":"    public void setIsDone(boolean isDone) {","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"MingEn82"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-12"},{"lineNumber":19,"author":{"gitId":"MingEn82"},"content":"    public void setTaskDescription(String taskDescription) {","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"MingEn82"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-12"},{"lineNumber":23,"author":{"gitId":"MingEn82"},"content":"    public String getTaskDescription() {","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"MingEn82"},"content":"        return this.taskDescription;","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-12"},{"lineNumber":26,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"MingEn82"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"MingEn82"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"MingEn82"},"content":"        return \"[\" + (this.isDone ? \"X\" : \" \") + \"] \" + this.getTaskDescription();","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-01-12"}],"authorContributionMap":{"MingEn82":18,"-":13}},{"path":"src/main/java/Entities/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MingEn82"},"content":"package Entities;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"MingEn82"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"MingEn82"},"content":"    public Todo(String taskDescription, boolean isDone) {","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"MingEn82"},"content":"        super(taskDescription, isDone);","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"MingEn82"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"MingEn82"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"MingEn82"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"MingEn82"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"MingEn82":12}},{"path":"src/main/java/Exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MingEn82"},"content":"package Exceptions;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"MingEn82"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"MingEn82"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"MingEn82"},"content":"        super(","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"MingEn82"},"content":"            \"\\t----------------------------------------------------\\n\\t\" ","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"MingEn82"},"content":"            + errorMessage + ","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"MingEn82"},"content":"            \"\\n\\t----------------------------------------------------\\n\"","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"MingEn82"},"content":"        );","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"MingEn82"},"content":"    public DukeException(String errorMessage,Throwable err) {","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"MingEn82"},"content":"        super(","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"MingEn82"},"content":"            \"\\t----------------------------------------------------\\n\\t\" ","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"MingEn82"},"content":"            + errorMessage +","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"MingEn82"},"content":"            \"\\n\\t----------------------------------------------------\\n\",","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"MingEn82"},"content":"            err","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"MingEn82"},"content":"        );","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"MingEn82"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"MingEn82":20}},{"path":"src/main/java/Exceptions/EmptyArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MingEn82"},"content":"package Exceptions;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"MingEn82"},"content":"public class EmptyArgumentException extends DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"MingEn82"},"content":"    public EmptyArgumentException(String emptyArgument) {","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"MingEn82"},"content":"        super(\"Oops! \" + emptyArgument + \" cannot be empty!\");","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"MingEn82"},"content":"    public EmptyArgumentException(String emptyArgument,Throwable err) {","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"MingEn82"},"content":"        super(\"Oops! \" + emptyArgument + \" cannot be empty!\", err);","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"MingEn82"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"MingEn82":11}},{"path":"src/main/java/Exceptions/InsufficientArgumentsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MingEn82"},"content":"package Exceptions;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"MingEn82"},"content":"public class InsufficientArgumentsException extends DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"MingEn82"},"content":"    public InsufficientArgumentsException(String command, String format) {","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"MingEn82"},"content":"        super(\"Oops! The format of \" + command + \" is: \" + format);","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"MingEn82"},"content":"    public InsufficientArgumentsException(String command, String format, Throwable err) {","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"MingEn82"},"content":"        super(\"Oops! The format of \" + command + \" is: \" + format, err);","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"MingEn82"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"MingEn82":11}},{"path":"src/main/java/Exceptions/InvalidTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MingEn82"},"content":"package Exceptions;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"MingEn82"},"content":"public class InvalidTaskException extends Exception {","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"MingEn82"},"content":"    public InvalidTaskException() {}","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"MingEn82"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"MingEn82":5}},{"path":"src/main/java/Exceptions/InvalidTaskIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MingEn82"},"content":"package Exceptions;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"MingEn82"},"content":"public class InvalidTaskIndexException extends DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"MingEn82"},"content":"    public InvalidTaskIndexException(int tasksCount, Throwable err) {","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"MingEn82"},"content":"        super(\"Oops! The index inputted is out of range! The tasks list currently has \" + tasksCount + \" elements\", err);","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"MingEn82"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"MingEn82":7}},{"path":"src/main/java/Exceptions/NoDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MingEn82"},"content":"package Exceptions;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"MingEn82"},"content":"public class NoDescriptionException extends DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"MingEn82"},"content":"    public NoDescriptionException(String command) {","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"MingEn82"},"content":"        super(\"Oops! The description of \" + command + \" cannot be empty.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"MingEn82"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"MingEn82":7}},{"path":"src/main/java/Exceptions/NonPositiveNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MingEn82"},"content":"package Exceptions;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"MingEn82"},"content":"public class NonPositiveNumberException extends DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"MingEn82"},"content":"    public NonPositiveNumberException() {","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"MingEn82"},"content":"        super(\"Oops! Only positive integers can be used as the index!\");","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"MingEn82"},"content":"    public NonPositiveNumberException(Throwable err) {","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"MingEn82"},"content":"        super(\"Oops! Only positive integers can be used as the index!\", err);","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"MingEn82"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"MingEn82":11}},{"path":"src/main/java/Exceptions/UnknownInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MingEn82"},"content":"package Exceptions;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"MingEn82"},"content":"public class UnknownInputException extends DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"MingEn82"},"content":"    private static String errorMessage \u003d \"Apologies, I do not understand your request :-(\";","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"MingEn82"},"content":"    public UnknownInputException() {","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"MingEn82"},"content":"        super(errorMessage);","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"MingEn82"},"content":"    public UnknownInputException(Throwable err) {","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"MingEn82"},"content":"        super(errorMessage, err);","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"MingEn82"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"MingEn82":13}},{"path":"src/main/java/FileUtils/TaskReader.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MingEn82"},"content":"package FileUtils;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"MingEn82"},"content":"import java.io.File;","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"MingEn82"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"MingEn82"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"MingEn82"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"MingEn82"},"content":"import Entities.*;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"MingEn82"},"content":"import Exceptions.InvalidTaskException;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"MingEn82"},"content":"public class TaskReader {","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"MingEn82"},"content":"    public static ArrayList\u003cTask\u003e readAndReturnTasks(String filePath) throws FileNotFoundException {","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"MingEn82"},"content":"        ArrayList\u003cTask\u003e savedTasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"MingEn82"},"content":"        Task currentTask;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"MingEn82"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"MingEn82"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"MingEn82"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"MingEn82"},"content":"            currentTask \u003d lineToTask(s.nextLine());","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"MingEn82"},"content":"            if (currentTask !\u003d null) {","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"MingEn82"},"content":"                savedTasks.add(currentTask);","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"MingEn82"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"MingEn82"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"MingEn82"},"content":"        s.close();","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"MingEn82"},"content":"            ","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"MingEn82"},"content":"        return savedTasks;","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"MingEn82"},"content":"    private static Task lineToTask(String line) {","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"MingEn82"},"content":"        String[] taskInformation \u003d line.split(\" \\\\| \");","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"MingEn82"},"content":"        Task task \u003d null;","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"MingEn82"},"content":"        String taskType \u003d taskInformation[0];","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"MingEn82"},"content":"        boolean isDone \u003d taskInformation[1].equals(\"1\") ? true : false;","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"MingEn82"},"content":"        String taskDescription \u003d taskInformation[2];","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"MingEn82"},"content":"        String startDate, endDate;","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"MingEn82"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"MingEn82"},"content":"            switch (taskType) {","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"MingEn82"},"content":"                case \"T\":","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"MingEn82"},"content":"                    task \u003d new Todo(taskDescription, isDone);","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"MingEn82"},"content":"                    break;","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"MingEn82"},"content":"                case \"D\":","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"MingEn82"},"content":"                    endDate \u003d taskInformation[3];","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"MingEn82"},"content":"                    task \u003d new Deadline(taskDescription, isDone, endDate);","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"MingEn82"},"content":"                    break;","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"MingEn82"},"content":"                case \"E\":","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"MingEn82"},"content":"                    startDate \u003d taskInformation[3];","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"MingEn82"},"content":"                    endDate \u003d taskInformation[4];","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"MingEn82"},"content":"                    task \u003d new Event(taskDescription, isDone, startDate, endDate);","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"MingEn82"},"content":"                    break;","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"MingEn82"},"content":"                default:","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"MingEn82"},"content":"                    throw new InvalidTaskException();","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"MingEn82"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"MingEn82"},"content":"        } catch (InvalidTaskException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"MingEn82"},"content":"            System.out.printf(\"%s is not a valid task! Database may be corrupted!\\n\", line);","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"MingEn82"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"MingEn82"},"content":"        return task;","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"MingEn82"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"MingEn82":58}},{"path":"src/main/java/FileUtils/TaskTypes.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MingEn82"},"content":"package FileUtils;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"MingEn82"},"content":"public enum TaskTypes {","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"MingEn82"},"content":"    TODO(\"T\"), ","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"MingEn82"},"content":"    DEADLINE(\"D\"), ","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"MingEn82"},"content":"    EVENT(\"E\");","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"MingEn82"},"content":"    private String taskType;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"MingEn82"},"content":"    private TaskTypes(String taskType) {","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"MingEn82"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"MingEn82"},"content":"    ","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"MingEn82"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"MingEn82"},"content":"    public String toString(){","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"MingEn82"},"content":"        return taskType;","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"MingEn82"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"MingEn82":17}},{"path":"src/main/java/FileUtils/TaskWriter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MingEn82"},"content":"package FileUtils;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"MingEn82"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"MingEn82"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"MingEn82"},"content":"import java.io.File;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"MingEn82"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"MingEn82"},"content":"import Entities.*;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"MingEn82"},"content":"import Exceptions.InvalidTaskException;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"MingEn82"},"content":"public class TaskWriter {","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"MingEn82"},"content":"    private static final String delimiter \u003d \" | \";","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"MingEn82"},"content":"    public static void writeTasksToFile(String filePath, ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"MingEn82"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"MingEn82"},"content":"        FileWriter fw;","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"MingEn82"},"content":"        String taskString;","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"MingEn82"},"content":"        if (!file.getParentFile().exists()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"MingEn82"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"MingEn82"},"content":"            file.createNewFile();","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"MingEn82"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"MingEn82"},"content":"        fw \u003d new FileWriter(file);","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"MingEn82"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"MingEn82"},"content":"            try {","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"MingEn82"},"content":"                taskString \u003d taskToString(t);","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"MingEn82"},"content":"                fw.write(taskString);","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"MingEn82"},"content":"            } catch (InvalidTaskException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"MingEn82"},"content":"                System.out.println(\"Could not convert task to string!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"MingEn82"},"content":"                System.out.printf(\"Task with issue: %s\\n\", t.toString());","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"MingEn82"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"MingEn82"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"MingEn82"},"content":"        fw.close();","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"MingEn82"},"content":"    private static String taskToString(Task t) throws InvalidTaskException {","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"MingEn82"},"content":"        String taskString;","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"MingEn82"},"content":"        String taskType, startDate, endDate;","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"MingEn82"},"content":"        String isDone \u003d t.isDone() ? \"1\" : \"0\";","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"MingEn82"},"content":"        String taskDescription \u003d t.getTaskDescription();","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"MingEn82"},"content":"        if (t instanceof Todo) {","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"MingEn82"},"content":"            taskType \u003d TaskTypes.TODO.toString();","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"MingEn82"},"content":"            taskString \u003d String.join(delimiter, taskType, isDone, taskDescription);","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"MingEn82"},"content":"        } else if (t instanceof Deadline) {","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"MingEn82"},"content":"            Deadline deadline \u003d (Deadline) t;","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"MingEn82"},"content":"            taskType \u003d TaskTypes.DEADLINE.toString();","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"MingEn82"},"content":"            endDate \u003d deadline.getEndDate();","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"MingEn82"},"content":"            taskString \u003d String.join(delimiter, taskType, isDone, taskDescription, endDate);","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"MingEn82"},"content":"        } else if (t instanceof Event) {","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"MingEn82"},"content":"            Event event \u003d (Event) t;","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"MingEn82"},"content":"            taskType \u003d TaskTypes.EVENT.toString();","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"MingEn82"},"content":"            startDate \u003d event.getStartDate();","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"MingEn82"},"content":"            endDate \u003d event.getEndDate();","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"MingEn82"},"content":"            taskString \u003d String.join(delimiter, taskType, isDone, taskDescription, startDate, endDate);","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"MingEn82"},"content":"        } else {","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"MingEn82"},"content":"            throw new InvalidTaskException();","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"MingEn82"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"MingEn82"},"content":"        return taskString + \"\\n\";","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"MingEn82"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"MingEn82":63}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"MingEn82"},"content":"todo test","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"MingEn82"},"content":"bye","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"MingEn82":2}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"MingEn82"},"content":"del ACTUAL.TXT","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"MingEn82"},"content":"PAUSE","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"MingEn82":3,"-":20}}]
