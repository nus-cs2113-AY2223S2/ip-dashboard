[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"MingEn82"},"content":"E | 0 | Koh Ming En attend CS2113 lecture  | Friday 17 Feb 2023 4pm | Friday 17 Feb 2023 6pm","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"MingEn82":1}},{"path":"src/main/java/Command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MingEn82"},"content":"package Command;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"MingEn82"},"content":"import Entities.Task;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"MingEn82"},"content":"import Entities.TaskList;","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"MingEn82"},"content":"import Exceptions.DukeException;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"MingEn82"},"content":"import FileUtils.Storage;","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"MingEn82"},"content":"import Output.UI;","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"MingEn82"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"MingEn82"},"content":"    private Task addedTask;","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"MingEn82"},"content":"    public AddCommand(Task addedTask) {","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"MingEn82"},"content":"        this.addedTask \u003d addedTask;","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"MingEn82"},"content":"    @Override","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"MingEn82"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"MingEn82"},"content":"        tasks.addTask(addedTask);","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"MingEn82"},"content":"        ui.taskAddedMessage(addedTask, tasks.getTasksCount());","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"MingEn82"},"content":"        storage.write(tasks);","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"MingEn82"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"MingEn82":22}},{"path":"src/main/java/Command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MingEn82"},"content":"package Command;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"MingEn82"},"content":"import Entities.TaskList;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"MingEn82"},"content":"import Exceptions.DukeException;","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"MingEn82"},"content":"import FileUtils.Storage;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"MingEn82"},"content":"import Output.UI;","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"MingEn82"},"content":"public abstract class Command {","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"MingEn82"},"content":"    private boolean isExit;","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"MingEn82"},"content":"    public Command() {","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"MingEn82"},"content":"        setIsExit(false);","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"MingEn82"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"MingEn82"},"content":"        return this.isExit;","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"MingEn82"},"content":"    public void setIsExit(boolean isExit) {","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"MingEn82"},"content":"        this.isExit \u003d isExit;","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"MingEn82"},"content":"    public abstract void execute(TaskList tasks, UI ui, Storage storage) throws DukeException;","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"MingEn82"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"MingEn82":24}},{"path":"src/main/java/Command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MingEn82"},"content":"package Command;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"MingEn82"},"content":"import Entities.Task;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"MingEn82"},"content":"import Entities.TaskList;","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"MingEn82"},"content":"import Exceptions.DukeException;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"MingEn82"},"content":"import FileUtils.Storage;","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"MingEn82"},"content":"import Output.UI;","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"MingEn82"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"MingEn82"},"content":"    private int taskIndex;","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"MingEn82"},"content":"    public DeleteCommand(int taskIndex) {","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"MingEn82"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"MingEn82"},"content":"    @Override","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"MingEn82"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"MingEn82"},"content":"        Task removedTask \u003d tasks.deleteTask(taskIndex);","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"MingEn82"},"content":"        ui.taskDeletedMessage(removedTask, tasks.getTasksCount());","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"MingEn82"},"content":"        storage.write(tasks);","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"MingEn82"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"MingEn82":22}},{"path":"src/main/java/Command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MingEn82"},"content":"package Command;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"MingEn82"},"content":"import Entities.TaskList;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"MingEn82"},"content":"import Exceptions.DukeException;","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"MingEn82"},"content":"import FileUtils.Storage;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"MingEn82"},"content":"import Output.UI;","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"MingEn82"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"MingEn82"},"content":"    @Override","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"MingEn82"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"MingEn82"},"content":"        ui.printGoodbye();","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"MingEn82"},"content":"        storage.write(tasks);","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"MingEn82"},"content":"        setIsExit(true);","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"MingEn82"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"MingEn82":17}},{"path":"src/main/java/Command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MingEn82"},"content":"package Command;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"MingEn82"},"content":"import Entities.TaskList;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"MingEn82"},"content":"import Exceptions.DukeException;","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"MingEn82"},"content":"import FileUtils.Storage;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"MingEn82"},"content":"import Output.UI;","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"MingEn82"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"MingEn82"},"content":"    @Override","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"MingEn82"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"MingEn82"},"content":"        ui.printTasks(tasks);","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"MingEn82"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"MingEn82":13}},{"path":"src/main/java/Command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MingEn82"},"content":"package Command;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"MingEn82"},"content":"import Entities.TaskList;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"MingEn82"},"content":"import Exceptions.DukeException;","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"MingEn82"},"content":"import FileUtils.Storage;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"MingEn82"},"content":"import Output.UI;","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"MingEn82"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"MingEn82"},"content":"    private int taskIndex;","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"MingEn82"},"content":"    public MarkCommand(int taskIndex) {","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"MingEn82"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"MingEn82"},"content":"    @Override","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"MingEn82"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"MingEn82"},"content":"        ui.printMarkedTask(tasks.markTask(taskIndex));","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"MingEn82"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"MingEn82":19}},{"path":"src/main/java/Command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MingEn82"},"content":"package Command;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"MingEn82"},"content":"import Entities.TaskList;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"MingEn82"},"content":"import Exceptions.DukeException;","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"MingEn82"},"content":"import FileUtils.Storage;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"MingEn82"},"content":"import Output.UI;","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"MingEn82"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"MingEn82"},"content":"    private int taskIndex;","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"MingEn82"},"content":"    public UnmarkCommand(int taskIndex) {","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"MingEn82"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"MingEn82"},"content":"    @Override","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"MingEn82"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"MingEn82"},"content":"        ui.printUnmarkedTask(tasks.unmarkTask(taskIndex));","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"MingEn82"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"MingEn82":19}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MingEn82"},"content":"import Command.Command;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"MingEn82"},"content":"import Entities.TaskList;","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"MingEn82"},"content":"import EntityUtils.Parser;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"MingEn82"},"content":"import FileUtils.Storage;","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"MingEn82"},"content":"import Output.UI;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"MingEn82"},"content":"import Exceptions.*;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"MingEn82"},"content":"    private static final String filePath \u003d \"data/duke.txt\";","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"MingEn82"},"content":"    private Storage storage;","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"MingEn82"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"MingEn82"},"content":"    private UI ui;","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"MingEn82"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"MingEn82"},"content":"        ui \u003d new UI();","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"MingEn82"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"MingEn82"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"MingEn82"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"MingEn82"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"MingEn82"},"content":"            ui.printError(e.getMessage());","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"MingEn82"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"MingEn82"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"MingEn82"},"content":"    public void run() {","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"MingEn82"},"content":"        ui.printIntroduction();","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"MingEn82"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"MingEn82"},"content":"        while (!isExit) {","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"MingEn82"},"content":"            try {","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"MingEn82"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"MingEn82"},"content":"                ui.printLine();","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"MingEn82"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"MingEn82"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"MingEn82"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"MingEn82"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"MingEn82"},"content":"                ui.printError(e.getMessage());","lastModifiedDate":"2023-02-11"},{"lineNumber":37,"author":{"gitId":"MingEn82"},"content":"            } finally {","lastModifiedDate":"2023-02-11"},{"lineNumber":38,"author":{"gitId":"MingEn82"},"content":"                ui.printLine();","lastModifiedDate":"2023-02-11"},{"lineNumber":39,"author":{"gitId":"MingEn82"},"content":"                System.out.println();","lastModifiedDate":"2023-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"MingEn82"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"MingEn82"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-11"},{"lineNumber":45,"author":{"gitId":"MingEn82"},"content":"        new Duke(filePath).run();","lastModifiedDate":"2023-02-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"MingEn82":39,"-":8}},{"path":"src/main/java/Entities/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MingEn82"},"content":"package Entities;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"MingEn82"},"content":"// import java.time.LocalDateTime;","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"MingEn82"},"content":"// import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"MingEn82"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"MingEn82"},"content":"    // protected LocalDateTime endDate;","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"MingEn82"},"content":"    // private static DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"dd-MMM-yyyy HH:mm\");","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"MingEn82"},"content":"    protected String endDate;","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"MingEn82"},"content":"    public Deadline(String taskDescription, boolean isDone, String endDate) {","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"MingEn82"},"content":"        super(taskDescription, isDone);","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"MingEn82"},"content":"        setEndDate(endDate);","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"MingEn82"},"content":"    public String getEndDate() {","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"MingEn82"},"content":"        return this.endDate;","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"MingEn82"},"content":"    public void setEndDate(String endDate) {","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"MingEn82"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"MingEn82"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"MingEn82"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"MingEn82"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + getEndDate() + \")\";","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"MingEn82"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"MingEn82":29}},{"path":"src/main/java/Entities/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MingEn82"},"content":"package Entities;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"MingEn82"},"content":"// import java.time.LocalDateTime;","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"MingEn82"},"content":"// import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"MingEn82"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"MingEn82"},"content":"    // protected LocalDateTime startDate;","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"MingEn82"},"content":"    // protected LocalDateTime endDate;","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"MingEn82"},"content":"    // private static DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"dd-MMM-yyyy HH:mm\");","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"MingEn82"},"content":"    protected String startDate;","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"MingEn82"},"content":"    protected String endDate;","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"MingEn82"},"content":"    public Event(String taskDescription, boolean isDone, String startDate, String endDate) {","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"MingEn82"},"content":"        super(taskDescription, isDone);","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"MingEn82"},"content":"        setStartDate(startDate);","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"MingEn82"},"content":"        setEndDate(endDate);","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"MingEn82"},"content":"    public String getStartDate() {","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"MingEn82"},"content":"        return this.startDate;","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"MingEn82"},"content":"    public void setStartDate(String startDate) {","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"MingEn82"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"MingEn82"},"content":"    public String getEndDate() {","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"MingEn82"},"content":"        return this.endDate;","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"MingEn82"},"content":"    public void setEndDate(String endDate) {","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"MingEn82"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"MingEn82"},"content":"    // @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":36,"author":{"gitId":"MingEn82"},"content":"    // public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"MingEn82"},"content":"    //     return \"[E]\" + super.toString() + \" (from: \" + getStartDate().format(dateFormatter) + \"to: \"","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"MingEn82"},"content":"    //             + getEndDate().format(dateFormatter) + \")\";","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"MingEn82"},"content":"    // }","lastModifiedDate":"2023-01-20"},{"lineNumber":40,"author":{"gitId":"MingEn82"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"MingEn82"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":42,"author":{"gitId":"MingEn82"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + getStartDate() + \" to: \" + getEndDate() + \")\";","lastModifiedDate":"2023-01-20"},{"lineNumber":43,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":44,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":45,"author":{"gitId":"MingEn82"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"MingEn82":45}},{"path":"src/main/java/Entities/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MingEn82"},"content":"package Entities;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"public class Task {","lastModifiedDate":"2023-01-12"},{"lineNumber":3,"author":{"gitId":"MingEn82"},"content":"    protected String taskDescription;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"MingEn82"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-12"},{"lineNumber":6,"author":{"gitId":"MingEn82"},"content":"    public Task(String taskDescription, boolean isDone) {","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"MingEn82"},"content":"        setTaskDescription(taskDescription);","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"MingEn82"},"content":"        setIsDone(isDone);","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-01-12"},{"lineNumber":12,"author":{"gitId":"MingEn82"},"content":"        return this.isDone;","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-12"},{"lineNumber":15,"author":{"gitId":"MingEn82"},"content":"    public void setIsDone(boolean isDone) {","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"MingEn82"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-12"},{"lineNumber":19,"author":{"gitId":"MingEn82"},"content":"    public void setTaskDescription(String taskDescription) {","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"MingEn82"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-12"},{"lineNumber":23,"author":{"gitId":"MingEn82"},"content":"    public String getTaskDescription() {","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"MingEn82"},"content":"        return this.taskDescription;","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-12"},{"lineNumber":26,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"MingEn82"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"MingEn82"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"MingEn82"},"content":"        return \"[\" + (this.isDone ? \"X\" : \" \") + \"] \" + this.getTaskDescription();","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-01-12"}],"authorContributionMap":{"MingEn82":18,"-":13}},{"path":"src/main/java/Entities/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MingEn82"},"content":"package Entities;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"MingEn82"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"MingEn82"},"content":"import Exceptions.DukeException;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"MingEn82"},"content":"import java.lang.IndexOutOfBoundsException;","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"MingEn82"},"content":"public class TaskList {","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"MingEn82"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"MingEn82"},"content":"    public TaskList() {","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"MingEn82"},"content":"        tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"MingEn82"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"MingEn82"},"content":"        setTasks(tasks);","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"MingEn82"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"MingEn82"},"content":"        tasks.add(task);","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"MingEn82"},"content":"    public Task deleteTask(int taskIndex) throws DukeException {","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"MingEn82"},"content":"        getTask(taskIndex);             // Checks if taskIndex is valid","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"MingEn82"},"content":"        return tasks.remove(taskIndex);","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"MingEn82"},"content":"    public Task markTask(int taskIndex) throws DukeException {","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"MingEn82"},"content":"        Task t \u003d getTask(taskIndex);","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"MingEn82"},"content":"        t.setIsDone(true);","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"MingEn82"},"content":"        return t;","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"MingEn82"},"content":"    public Task unmarkTask(int taskIndex) throws DukeException {","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"MingEn82"},"content":"        Task t \u003d getTask(taskIndex);","lastModifiedDate":"2023-02-11"},{"lineNumber":37,"author":{"gitId":"MingEn82"},"content":"        t.setIsDone(false);","lastModifiedDate":"2023-02-11"},{"lineNumber":38,"author":{"gitId":"MingEn82"},"content":"        return t;","lastModifiedDate":"2023-02-11"},{"lineNumber":39,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":40,"author":{"gitId":"MingEn82"},"content":"    ","lastModifiedDate":"2023-02-11"},{"lineNumber":41,"author":{"gitId":"MingEn82"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-02-11"},{"lineNumber":42,"author":{"gitId":"MingEn82"},"content":"        return this.tasks;","lastModifiedDate":"2023-02-11"},{"lineNumber":43,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":44,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":45,"author":{"gitId":"MingEn82"},"content":"    public void setTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-11"},{"lineNumber":46,"author":{"gitId":"MingEn82"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-02-11"},{"lineNumber":47,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":48,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":49,"author":{"gitId":"MingEn82"},"content":"    public int getTasksCount() {","lastModifiedDate":"2023-02-11"},{"lineNumber":50,"author":{"gitId":"MingEn82"},"content":"        return tasks.size();","lastModifiedDate":"2023-02-11"},{"lineNumber":51,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":52,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":53,"author":{"gitId":"MingEn82"},"content":"    public Task getTask(int taskIndex) throws DukeException {","lastModifiedDate":"2023-02-11"},{"lineNumber":54,"author":{"gitId":"MingEn82"},"content":"        try {","lastModifiedDate":"2023-02-11"},{"lineNumber":55,"author":{"gitId":"MingEn82"},"content":"            return getTasks().get(taskIndex);","lastModifiedDate":"2023-02-11"},{"lineNumber":56,"author":{"gitId":"MingEn82"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-11"},{"lineNumber":57,"author":{"gitId":"MingEn82"},"content":"            throw new DukeException(\"Uh oh, the index you have inputted is out of range!\");","lastModifiedDate":"2023-02-11"},{"lineNumber":58,"author":{"gitId":"MingEn82"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":59,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":60,"author":{"gitId":"MingEn82"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"MingEn82":60}},{"path":"src/main/java/Entities/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MingEn82"},"content":"package Entities;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"MingEn82"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"MingEn82"},"content":"    public Todo(String taskDescription, boolean isDone) {","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"MingEn82"},"content":"        super(taskDescription, isDone);","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"MingEn82"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"MingEn82"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"MingEn82"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"MingEn82"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"MingEn82":12}},{"path":"src/main/java/EntityUtils/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MingEn82"},"content":"package EntityUtils;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"MingEn82"},"content":"import Command.Command;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"MingEn82"},"content":"import Command.AddCommand;","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"MingEn82"},"content":"import Command.DeleteCommand;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"MingEn82"},"content":"import Command.ExitCommand;","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"MingEn82"},"content":"import Command.ListCommand;","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"MingEn82"},"content":"import Command.MarkCommand;","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"MingEn82"},"content":"import Command.UnmarkCommand;","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"MingEn82"},"content":"import Entities.Task;","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"MingEn82"},"content":"import Entities.Deadline;","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"MingEn82"},"content":"import Entities.Event;","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"MingEn82"},"content":"import Entities.Todo;","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"MingEn82"},"content":"import Exceptions.DukeException;","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"MingEn82"},"content":"import Exceptions.EmptyArgumentException;","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"MingEn82"},"content":"import Exceptions.InsufficientArgumentsException;","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"MingEn82"},"content":"import Exceptions.NoDescriptionException;","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"MingEn82"},"content":"import Exceptions.NonPositiveNumberException;","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"MingEn82"},"content":"public class Parser {","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"MingEn82"},"content":"    public static Command parse(String input) throws DukeException {","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"MingEn82"},"content":"        String[] inputArray \u003d input.split(\" \");","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"MingEn82"},"content":"        String command \u003d inputArray[0].toLowerCase();","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"MingEn82"},"content":"        Task task \u003d null;","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"MingEn82"},"content":"        int startDateIdx \u003d -1, endDateIdx \u003d -1, taskIdx \u003d -1;","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"MingEn82"},"content":"        String startDate \u003d null, endDate \u003d null;","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"MingEn82"},"content":"        String taskDescription;","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"MingEn82"},"content":"        Command c \u003d null;","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"MingEn82"},"content":"        switch (command) ","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"MingEn82"},"content":"        {","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"MingEn82"},"content":"        case \"bye\":","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"MingEn82"},"content":"            c \u003d new ExitCommand();","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"MingEn82"},"content":"            break;","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"MingEn82"},"content":"        case \"list\":","lastModifiedDate":"2023-02-11"},{"lineNumber":37,"author":{"gitId":"MingEn82"},"content":"            c \u003d new ListCommand();","lastModifiedDate":"2023-02-11"},{"lineNumber":38,"author":{"gitId":"MingEn82"},"content":"            break;","lastModifiedDate":"2023-02-11"},{"lineNumber":39,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":40,"author":{"gitId":"MingEn82"},"content":"        case \"todo\":","lastModifiedDate":"2023-02-11"},{"lineNumber":41,"author":{"gitId":"MingEn82"},"content":"            if (input.length() \u003d\u003d command.length()) {","lastModifiedDate":"2023-02-11"},{"lineNumber":42,"author":{"gitId":"MingEn82"},"content":"                throw new NoDescriptionException(command);","lastModifiedDate":"2023-02-11"},{"lineNumber":43,"author":{"gitId":"MingEn82"},"content":"            }","lastModifiedDate":"2023-02-11"},{"lineNumber":44,"author":{"gitId":"MingEn82"},"content":"            taskDescription \u003d input.substring(command.length() + 1);","lastModifiedDate":"2023-02-11"},{"lineNumber":45,"author":{"gitId":"MingEn82"},"content":"            task \u003d new Todo(taskDescription, false);","lastModifiedDate":"2023-02-11"},{"lineNumber":46,"author":{"gitId":"MingEn82"},"content":"            c \u003d new AddCommand(task);","lastModifiedDate":"2023-02-11"},{"lineNumber":47,"author":{"gitId":"MingEn82"},"content":"            break;","lastModifiedDate":"2023-02-11"},{"lineNumber":48,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":49,"author":{"gitId":"MingEn82"},"content":"        case \"deadline\":","lastModifiedDate":"2023-02-11"},{"lineNumber":50,"author":{"gitId":"MingEn82"},"content":"            if (input.length() \u003d\u003d command.length()) {","lastModifiedDate":"2023-02-11"},{"lineNumber":51,"author":{"gitId":"MingEn82"},"content":"                throw new NoDescriptionException(command);","lastModifiedDate":"2023-02-11"},{"lineNumber":52,"author":{"gitId":"MingEn82"},"content":"            }","lastModifiedDate":"2023-02-11"},{"lineNumber":53,"author":{"gitId":"MingEn82"},"content":"        ","lastModifiedDate":"2023-02-11"},{"lineNumber":54,"author":{"gitId":"MingEn82"},"content":"            startDateIdx \u003d input.indexOf(\"/by \");","lastModifiedDate":"2023-02-11"},{"lineNumber":55,"author":{"gitId":"MingEn82"},"content":"            if (startDateIdx \u003d\u003d -1) {","lastModifiedDate":"2023-02-11"},{"lineNumber":56,"author":{"gitId":"MingEn82"},"content":"                throw new InsufficientArgumentsException(command, \"deadline [task] /by [date]\");","lastModifiedDate":"2023-02-11"},{"lineNumber":57,"author":{"gitId":"MingEn82"},"content":"            }","lastModifiedDate":"2023-02-11"},{"lineNumber":58,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":59,"author":{"gitId":"MingEn82"},"content":"            taskDescription \u003d input.substring(command.length() + 1, startDateIdx);","lastModifiedDate":"2023-02-11"},{"lineNumber":60,"author":{"gitId":"MingEn82"},"content":"            startDate \u003d input.substring(startDateIdx + 4);","lastModifiedDate":"2023-02-11"},{"lineNumber":61,"author":{"gitId":"MingEn82"},"content":"            if (taskDescription.length() \u003d\u003d 0 || startDate.length() \u003d\u003d 0) {","lastModifiedDate":"2023-02-11"},{"lineNumber":62,"author":{"gitId":"MingEn82"},"content":"                String emptyArgument \u003d ","lastModifiedDate":"2023-02-11"},{"lineNumber":63,"author":{"gitId":"MingEn82"},"content":"                    taskDescription.length() \u003d\u003d 0 ","lastModifiedDate":"2023-02-11"},{"lineNumber":64,"author":{"gitId":"MingEn82"},"content":"                    ? \"Task Name\" ","lastModifiedDate":"2023-02-11"},{"lineNumber":65,"author":{"gitId":"MingEn82"},"content":"                    : \"Start Date\";","lastModifiedDate":"2023-02-11"},{"lineNumber":66,"author":{"gitId":"MingEn82"},"content":"                throw new EmptyArgumentException(emptyArgument);","lastModifiedDate":"2023-02-11"},{"lineNumber":67,"author":{"gitId":"MingEn82"},"content":"            }","lastModifiedDate":"2023-02-11"},{"lineNumber":68,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":69,"author":{"gitId":"MingEn82"},"content":"            task \u003d new Deadline(taskDescription, false, startDate);","lastModifiedDate":"2023-02-11"},{"lineNumber":70,"author":{"gitId":"MingEn82"},"content":"            c \u003d new AddCommand(task);","lastModifiedDate":"2023-02-11"},{"lineNumber":71,"author":{"gitId":"MingEn82"},"content":"            break;","lastModifiedDate":"2023-02-11"},{"lineNumber":72,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":73,"author":{"gitId":"MingEn82"},"content":"        case \"event\":","lastModifiedDate":"2023-02-11"},{"lineNumber":74,"author":{"gitId":"MingEn82"},"content":"            if (input.length() \u003d\u003d command.length()) {","lastModifiedDate":"2023-02-11"},{"lineNumber":75,"author":{"gitId":"MingEn82"},"content":"                throw new NoDescriptionException(command);","lastModifiedDate":"2023-02-11"},{"lineNumber":76,"author":{"gitId":"MingEn82"},"content":"            }","lastModifiedDate":"2023-02-11"},{"lineNumber":77,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":78,"author":{"gitId":"MingEn82"},"content":"            startDateIdx \u003d input.indexOf(\"/from \");","lastModifiedDate":"2023-02-11"},{"lineNumber":79,"author":{"gitId":"MingEn82"},"content":"            endDateIdx \u003d input.indexOf(\"/to \");","lastModifiedDate":"2023-02-11"},{"lineNumber":80,"author":{"gitId":"MingEn82"},"content":"            if (startDateIdx \u003d\u003d -1 || endDateIdx \u003d\u003d -1) {","lastModifiedDate":"2023-02-11"},{"lineNumber":81,"author":{"gitId":"MingEn82"},"content":"                throw new InsufficientArgumentsException(command, \"event [task] /from [startDate] /to [startDate]\");","lastModifiedDate":"2023-02-11"},{"lineNumber":82,"author":{"gitId":"MingEn82"},"content":"            }","lastModifiedDate":"2023-02-11"},{"lineNumber":83,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":84,"author":{"gitId":"MingEn82"},"content":"            taskDescription \u003d input.substring(command.length() + 1, startDateIdx);","lastModifiedDate":"2023-02-11"},{"lineNumber":85,"author":{"gitId":"MingEn82"},"content":"            startDate \u003d input.substring(startDateIdx + 6, endDateIdx-1);","lastModifiedDate":"2023-02-11"},{"lineNumber":86,"author":{"gitId":"MingEn82"},"content":"            endDate \u003d input.substring(endDateIdx + 4);","lastModifiedDate":"2023-02-11"},{"lineNumber":87,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":88,"author":{"gitId":"MingEn82"},"content":"            if (taskDescription.length() \u003d\u003d 0 || startDate.length() \u003d\u003d 0 || endDate.length() \u003d\u003d 0) {","lastModifiedDate":"2023-02-11"},{"lineNumber":89,"author":{"gitId":"MingEn82"},"content":"                String emptyArgument \u003d ","lastModifiedDate":"2023-02-11"},{"lineNumber":90,"author":{"gitId":"MingEn82"},"content":"                    taskDescription.length() \u003d\u003d 0 ","lastModifiedDate":"2023-02-11"},{"lineNumber":91,"author":{"gitId":"MingEn82"},"content":"                    ? \"Task Name\" ","lastModifiedDate":"2023-02-11"},{"lineNumber":92,"author":{"gitId":"MingEn82"},"content":"                    : startDate.length() \u003d\u003d 0 ","lastModifiedDate":"2023-02-11"},{"lineNumber":93,"author":{"gitId":"MingEn82"},"content":"                    ? \"Start Date\" ","lastModifiedDate":"2023-02-11"},{"lineNumber":94,"author":{"gitId":"MingEn82"},"content":"                    : \"End Date\";","lastModifiedDate":"2023-02-11"},{"lineNumber":95,"author":{"gitId":"MingEn82"},"content":"                throw new EmptyArgumentException(emptyArgument);","lastModifiedDate":"2023-02-11"},{"lineNumber":96,"author":{"gitId":"MingEn82"},"content":"            }","lastModifiedDate":"2023-02-11"},{"lineNumber":97,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":98,"author":{"gitId":"MingEn82"},"content":"            task \u003d new Event(taskDescription, false, startDate, endDate);","lastModifiedDate":"2023-02-11"},{"lineNumber":99,"author":{"gitId":"MingEn82"},"content":"            c \u003d new AddCommand(task);","lastModifiedDate":"2023-02-11"},{"lineNumber":100,"author":{"gitId":"MingEn82"},"content":"            break;","lastModifiedDate":"2023-02-11"},{"lineNumber":101,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":102,"author":{"gitId":"MingEn82"},"content":"        case \"mark\":","lastModifiedDate":"2023-02-11"},{"lineNumber":103,"author":{"gitId":"MingEn82"},"content":"            if (input.length() \u003d\u003d command.length()) {","lastModifiedDate":"2023-02-11"},{"lineNumber":104,"author":{"gitId":"MingEn82"},"content":"                throw new NoDescriptionException(command);","lastModifiedDate":"2023-02-11"},{"lineNumber":105,"author":{"gitId":"MingEn82"},"content":"            }","lastModifiedDate":"2023-02-11"},{"lineNumber":106,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":107,"author":{"gitId":"MingEn82"},"content":"            try {","lastModifiedDate":"2023-02-11"},{"lineNumber":108,"author":{"gitId":"MingEn82"},"content":"                taskIdx \u003d Integer.parseInt(input.substring(command.length() + 1)) - 1;","lastModifiedDate":"2023-02-11"},{"lineNumber":109,"author":{"gitId":"MingEn82"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-11"},{"lineNumber":110,"author":{"gitId":"MingEn82"},"content":"                throw new NonPositiveNumberException(e);","lastModifiedDate":"2023-02-11"},{"lineNumber":111,"author":{"gitId":"MingEn82"},"content":"            }","lastModifiedDate":"2023-02-11"},{"lineNumber":112,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":113,"author":{"gitId":"MingEn82"},"content":"            c \u003d new MarkCommand(taskIdx);","lastModifiedDate":"2023-02-11"},{"lineNumber":114,"author":{"gitId":"MingEn82"},"content":"            break;","lastModifiedDate":"2023-02-11"},{"lineNumber":115,"author":{"gitId":"MingEn82"},"content":"        ","lastModifiedDate":"2023-02-11"},{"lineNumber":116,"author":{"gitId":"MingEn82"},"content":"        case \"unmark\":","lastModifiedDate":"2023-02-11"},{"lineNumber":117,"author":{"gitId":"MingEn82"},"content":"            if (input.length() \u003d\u003d command.length()) {","lastModifiedDate":"2023-02-11"},{"lineNumber":118,"author":{"gitId":"MingEn82"},"content":"                throw new NoDescriptionException(command);","lastModifiedDate":"2023-02-11"},{"lineNumber":119,"author":{"gitId":"MingEn82"},"content":"            }","lastModifiedDate":"2023-02-11"},{"lineNumber":120,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":121,"author":{"gitId":"MingEn82"},"content":"            try {","lastModifiedDate":"2023-02-11"},{"lineNumber":122,"author":{"gitId":"MingEn82"},"content":"                taskIdx \u003d Integer.parseInt(input.substring(command.length() + 1)) - 1;","lastModifiedDate":"2023-02-11"},{"lineNumber":123,"author":{"gitId":"MingEn82"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-11"},{"lineNumber":124,"author":{"gitId":"MingEn82"},"content":"                throw new NonPositiveNumberException(e);","lastModifiedDate":"2023-02-11"},{"lineNumber":125,"author":{"gitId":"MingEn82"},"content":"            }","lastModifiedDate":"2023-02-11"},{"lineNumber":126,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":127,"author":{"gitId":"MingEn82"},"content":"            c \u003d new UnmarkCommand(taskIdx);","lastModifiedDate":"2023-02-11"},{"lineNumber":128,"author":{"gitId":"MingEn82"},"content":"            break;","lastModifiedDate":"2023-02-11"},{"lineNumber":129,"author":{"gitId":"MingEn82"},"content":"        ","lastModifiedDate":"2023-02-11"},{"lineNumber":130,"author":{"gitId":"MingEn82"},"content":"        case \"delete\":","lastModifiedDate":"2023-02-11"},{"lineNumber":131,"author":{"gitId":"MingEn82"},"content":"            if (input.length() \u003d\u003d command.length()) {","lastModifiedDate":"2023-02-11"},{"lineNumber":132,"author":{"gitId":"MingEn82"},"content":"                throw new NoDescriptionException(command);","lastModifiedDate":"2023-02-11"},{"lineNumber":133,"author":{"gitId":"MingEn82"},"content":"            }","lastModifiedDate":"2023-02-11"},{"lineNumber":134,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":135,"author":{"gitId":"MingEn82"},"content":"            try {","lastModifiedDate":"2023-02-11"},{"lineNumber":136,"author":{"gitId":"MingEn82"},"content":"                taskIdx \u003d Integer.parseInt(input.substring(command.length() + 1)) - 1;","lastModifiedDate":"2023-02-11"},{"lineNumber":137,"author":{"gitId":"MingEn82"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-11"},{"lineNumber":138,"author":{"gitId":"MingEn82"},"content":"                throw new NonPositiveNumberException(e);","lastModifiedDate":"2023-02-11"},{"lineNumber":139,"author":{"gitId":"MingEn82"},"content":"            }","lastModifiedDate":"2023-02-11"},{"lineNumber":140,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":141,"author":{"gitId":"MingEn82"},"content":"            c \u003d new DeleteCommand(taskIdx);","lastModifiedDate":"2023-02-11"},{"lineNumber":142,"author":{"gitId":"MingEn82"},"content":"            break;","lastModifiedDate":"2023-02-11"},{"lineNumber":143,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":144,"author":{"gitId":"MingEn82"},"content":"        default:","lastModifiedDate":"2023-02-11"},{"lineNumber":145,"author":{"gitId":"MingEn82"},"content":"            throw new DukeException(\"Apologies, I do not understand your request :-(\");","lastModifiedDate":"2023-02-11"},{"lineNumber":146,"author":{"gitId":"MingEn82"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":147,"author":{"gitId":"MingEn82"},"content":"        return c;","lastModifiedDate":"2023-02-11"},{"lineNumber":148,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":149,"author":{"gitId":"MingEn82"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"MingEn82":149}},{"path":"src/main/java/Exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MingEn82"},"content":"package Exceptions;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"MingEn82"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"MingEn82"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"MingEn82"},"content":"        super(\"\\t\"+errorMessage);","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"MingEn82"},"content":"    public DukeException(String errorMessage, Throwable err) {","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"MingEn82"},"content":"        super(\"\\t\"+errorMessage, err);","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"MingEn82"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"MingEn82":11}},{"path":"src/main/java/Exceptions/EmptyArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MingEn82"},"content":"package Exceptions;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"MingEn82"},"content":"public class EmptyArgumentException extends DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"MingEn82"},"content":"    public EmptyArgumentException(String emptyArgument) {","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"MingEn82"},"content":"        super(\"Oops! \" + emptyArgument + \" cannot be empty!\");","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"MingEn82"},"content":"    public EmptyArgumentException(String emptyArgument,Throwable err) {","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"MingEn82"},"content":"        super(\"Oops! \" + emptyArgument + \" cannot be empty!\", err);","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"MingEn82"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"MingEn82":11}},{"path":"src/main/java/Exceptions/InsufficientArgumentsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MingEn82"},"content":"package Exceptions;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"MingEn82"},"content":"public class InsufficientArgumentsException extends DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"MingEn82"},"content":"    public InsufficientArgumentsException(String command, String format) {","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"MingEn82"},"content":"        super(\"Oops! The format of \" + command + \" is: \" + format);","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"MingEn82"},"content":"    public InsufficientArgumentsException(String command, String format, Throwable err) {","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"MingEn82"},"content":"        super(\"Oops! The format of \" + command + \" is: \" + format, err);","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"MingEn82"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"MingEn82":11}},{"path":"src/main/java/Exceptions/NoDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MingEn82"},"content":"package Exceptions;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"MingEn82"},"content":"public class NoDescriptionException extends DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"MingEn82"},"content":"    public NoDescriptionException(String command) {","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"MingEn82"},"content":"        super(\"Oops! The description of \" + command + \" cannot be empty.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"MingEn82"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"MingEn82":7}},{"path":"src/main/java/Exceptions/NonPositiveNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MingEn82"},"content":"package Exceptions;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"MingEn82"},"content":"public class NonPositiveNumberException extends DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"MingEn82"},"content":"    public NonPositiveNumberException() {","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"MingEn82"},"content":"        super(\"Oops! Only positive integers can be used as the index!\");","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"MingEn82"},"content":"    public NonPositiveNumberException(Throwable err) {","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"MingEn82"},"content":"        super(\"Oops! Only positive integers can be used as the index!\", err);","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"MingEn82"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"MingEn82":11}},{"path":"src/main/java/FileUtils/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MingEn82"},"content":"package FileUtils;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"MingEn82"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"MingEn82"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"MingEn82"},"content":"import java.io.File;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"MingEn82"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"MingEn82"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"MingEn82"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"MingEn82"},"content":"import Entities.Deadline;","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"MingEn82"},"content":"import Entities.Event;","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"MingEn82"},"content":"import Entities.Task;","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"MingEn82"},"content":"import Entities.TaskList;","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"MingEn82"},"content":"import Entities.Todo;","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"MingEn82"},"content":"import Exceptions.DukeException;","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"MingEn82"},"content":"public class Storage {","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"MingEn82"},"content":"    private static final String readDelimiter \u003d \" \\\\| \";","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"MingEn82"},"content":"    private static final String writeDelimiter \u003d \" | \";","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"MingEn82"},"content":"    private File taskFile;","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"MingEn82"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"MingEn82"},"content":"        this.taskFile \u003d new File(filePath);","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"MingEn82"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"MingEn82"},"content":"        try {","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"MingEn82"},"content":"            Scanner s \u003d new Scanner(taskFile);","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"MingEn82"},"content":"            Task currentTask;","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"MingEn82"},"content":"            ArrayList\u003cTask\u003e savedTasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"MingEn82"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"MingEn82"},"content":"                currentTask \u003d parseLine(s.nextLine());","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"MingEn82"},"content":"                if (currentTask !\u003d null) {","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"MingEn82"},"content":"                    savedTasks.add(currentTask);","lastModifiedDate":"2023-02-11"},{"lineNumber":37,"author":{"gitId":"MingEn82"},"content":"                }","lastModifiedDate":"2023-02-11"},{"lineNumber":38,"author":{"gitId":"MingEn82"},"content":"            }","lastModifiedDate":"2023-02-11"},{"lineNumber":39,"author":{"gitId":"MingEn82"},"content":"            s.close();","lastModifiedDate":"2023-02-11"},{"lineNumber":40,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":41,"author":{"gitId":"MingEn82"},"content":"            return savedTasks;","lastModifiedDate":"2023-02-11"},{"lineNumber":42,"author":{"gitId":"MingEn82"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-02-11"},{"lineNumber":43,"author":{"gitId":"MingEn82"},"content":"            throw new DukeException(\"File does not exist!\");","lastModifiedDate":"2023-02-11"},{"lineNumber":44,"author":{"gitId":"MingEn82"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":45,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":46,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":47,"author":{"gitId":"MingEn82"},"content":"    public void write(TaskList tasks) throws DukeException {","lastModifiedDate":"2023-02-11"},{"lineNumber":48,"author":{"gitId":"MingEn82"},"content":"        FileWriter fw;","lastModifiedDate":"2023-02-11"},{"lineNumber":49,"author":{"gitId":"MingEn82"},"content":"        String taskString;","lastModifiedDate":"2023-02-11"},{"lineNumber":50,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":51,"author":{"gitId":"MingEn82"},"content":"        try {","lastModifiedDate":"2023-02-11"},{"lineNumber":52,"author":{"gitId":"MingEn82"},"content":"            if (!taskFile.getParentFile().exists()) {","lastModifiedDate":"2023-02-11"},{"lineNumber":53,"author":{"gitId":"MingEn82"},"content":"                taskFile.getParentFile().mkdirs();","lastModifiedDate":"2023-02-11"},{"lineNumber":54,"author":{"gitId":"MingEn82"},"content":"                taskFile.createNewFile();","lastModifiedDate":"2023-02-11"},{"lineNumber":55,"author":{"gitId":"MingEn82"},"content":"            }","lastModifiedDate":"2023-02-11"},{"lineNumber":56,"author":{"gitId":"MingEn82"},"content":"            fw \u003d new FileWriter(taskFile);","lastModifiedDate":"2023-02-11"},{"lineNumber":57,"author":{"gitId":"MingEn82"},"content":"    ","lastModifiedDate":"2023-02-11"},{"lineNumber":58,"author":{"gitId":"MingEn82"},"content":"            for (Task t : tasks.getTasks()) {","lastModifiedDate":"2023-02-11"},{"lineNumber":59,"author":{"gitId":"MingEn82"},"content":"                taskString \u003d stringfyTask(t);","lastModifiedDate":"2023-02-11"},{"lineNumber":60,"author":{"gitId":"MingEn82"},"content":"                fw.write(taskString);","lastModifiedDate":"2023-02-11"},{"lineNumber":61,"author":{"gitId":"MingEn82"},"content":"            }","lastModifiedDate":"2023-02-11"},{"lineNumber":62,"author":{"gitId":"MingEn82"},"content":"            fw.close();","lastModifiedDate":"2023-02-11"},{"lineNumber":63,"author":{"gitId":"MingEn82"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-11"},{"lineNumber":64,"author":{"gitId":"MingEn82"},"content":"            throw new DukeException(\"IO Exception occurred when writing to file\");","lastModifiedDate":"2023-02-11"},{"lineNumber":65,"author":{"gitId":"MingEn82"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":66,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":67,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":68,"author":{"gitId":"MingEn82"},"content":"    private static Task parseLine(String line) throws DukeException {","lastModifiedDate":"2023-02-11"},{"lineNumber":69,"author":{"gitId":"MingEn82"},"content":"        String[] taskInformation \u003d line.split(readDelimiter);","lastModifiedDate":"2023-02-11"},{"lineNumber":70,"author":{"gitId":"MingEn82"},"content":"        Task task \u003d null;","lastModifiedDate":"2023-02-11"},{"lineNumber":71,"author":{"gitId":"MingEn82"},"content":"        String taskType \u003d taskInformation[0];","lastModifiedDate":"2023-02-11"},{"lineNumber":72,"author":{"gitId":"MingEn82"},"content":"        boolean isDone \u003d taskInformation[1].equals(\"1\") ? true : false;","lastModifiedDate":"2023-02-11"},{"lineNumber":73,"author":{"gitId":"MingEn82"},"content":"        String taskDescription \u003d taskInformation[2];","lastModifiedDate":"2023-02-11"},{"lineNumber":74,"author":{"gitId":"MingEn82"},"content":"        String startDate, endDate;","lastModifiedDate":"2023-02-11"},{"lineNumber":75,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":76,"author":{"gitId":"MingEn82"},"content":"        switch (taskType) {","lastModifiedDate":"2023-02-11"},{"lineNumber":77,"author":{"gitId":"MingEn82"},"content":"            case \"T\":","lastModifiedDate":"2023-02-11"},{"lineNumber":78,"author":{"gitId":"MingEn82"},"content":"                task \u003d new Todo(taskDescription, isDone);","lastModifiedDate":"2023-02-11"},{"lineNumber":79,"author":{"gitId":"MingEn82"},"content":"                break;","lastModifiedDate":"2023-02-11"},{"lineNumber":80,"author":{"gitId":"MingEn82"},"content":"            case \"D\":","lastModifiedDate":"2023-02-11"},{"lineNumber":81,"author":{"gitId":"MingEn82"},"content":"                endDate \u003d taskInformation[3];","lastModifiedDate":"2023-02-11"},{"lineNumber":82,"author":{"gitId":"MingEn82"},"content":"                task \u003d new Deadline(taskDescription, isDone, endDate);","lastModifiedDate":"2023-02-11"},{"lineNumber":83,"author":{"gitId":"MingEn82"},"content":"                break;","lastModifiedDate":"2023-02-11"},{"lineNumber":84,"author":{"gitId":"MingEn82"},"content":"            case \"E\":","lastModifiedDate":"2023-02-11"},{"lineNumber":85,"author":{"gitId":"MingEn82"},"content":"                startDate \u003d taskInformation[3];","lastModifiedDate":"2023-02-11"},{"lineNumber":86,"author":{"gitId":"MingEn82"},"content":"                endDate \u003d taskInformation[4];","lastModifiedDate":"2023-02-11"},{"lineNumber":87,"author":{"gitId":"MingEn82"},"content":"                task \u003d new Event(taskDescription, isDone, startDate, endDate);","lastModifiedDate":"2023-02-11"},{"lineNumber":88,"author":{"gitId":"MingEn82"},"content":"                break;","lastModifiedDate":"2023-02-11"},{"lineNumber":89,"author":{"gitId":"MingEn82"},"content":"            default:","lastModifiedDate":"2023-02-11"},{"lineNumber":90,"author":{"gitId":"MingEn82"},"content":"                throw new DukeException(\"Error parsing file!\");","lastModifiedDate":"2023-02-11"},{"lineNumber":91,"author":{"gitId":"MingEn82"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":92,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":93,"author":{"gitId":"MingEn82"},"content":"        return task;","lastModifiedDate":"2023-02-11"},{"lineNumber":94,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":95,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":96,"author":{"gitId":"MingEn82"},"content":"    private static String stringfyTask(Task t) throws DukeException {","lastModifiedDate":"2023-02-11"},{"lineNumber":97,"author":{"gitId":"MingEn82"},"content":"        String taskString;","lastModifiedDate":"2023-02-11"},{"lineNumber":98,"author":{"gitId":"MingEn82"},"content":"        String taskType, startDate, endDate;","lastModifiedDate":"2023-02-11"},{"lineNumber":99,"author":{"gitId":"MingEn82"},"content":"        String isDone \u003d t.isDone() ? \"1\" : \"0\";","lastModifiedDate":"2023-02-11"},{"lineNumber":100,"author":{"gitId":"MingEn82"},"content":"        String taskDescription \u003d t.getTaskDescription();","lastModifiedDate":"2023-02-11"},{"lineNumber":101,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":102,"author":{"gitId":"MingEn82"},"content":"        if (t instanceof Todo) {","lastModifiedDate":"2023-02-11"},{"lineNumber":103,"author":{"gitId":"MingEn82"},"content":"            taskType \u003d TaskTypes.TODO.toString();","lastModifiedDate":"2023-02-11"},{"lineNumber":104,"author":{"gitId":"MingEn82"},"content":"            taskString \u003d String.join(writeDelimiter, taskType, isDone, taskDescription);","lastModifiedDate":"2023-02-11"},{"lineNumber":105,"author":{"gitId":"MingEn82"},"content":"        } else if (t instanceof Deadline) {","lastModifiedDate":"2023-02-11"},{"lineNumber":106,"author":{"gitId":"MingEn82"},"content":"            Deadline deadline \u003d (Deadline) t;","lastModifiedDate":"2023-02-11"},{"lineNumber":107,"author":{"gitId":"MingEn82"},"content":"            taskType \u003d TaskTypes.DEADLINE.toString();","lastModifiedDate":"2023-02-11"},{"lineNumber":108,"author":{"gitId":"MingEn82"},"content":"            endDate \u003d deadline.getEndDate();","lastModifiedDate":"2023-02-11"},{"lineNumber":109,"author":{"gitId":"MingEn82"},"content":"            taskString \u003d String.join(writeDelimiter, taskType, isDone, taskDescription, endDate);","lastModifiedDate":"2023-02-11"},{"lineNumber":110,"author":{"gitId":"MingEn82"},"content":"        } else if (t instanceof Event) {","lastModifiedDate":"2023-02-11"},{"lineNumber":111,"author":{"gitId":"MingEn82"},"content":"            Event event \u003d (Event) t;","lastModifiedDate":"2023-02-11"},{"lineNumber":112,"author":{"gitId":"MingEn82"},"content":"            taskType \u003d TaskTypes.EVENT.toString();","lastModifiedDate":"2023-02-11"},{"lineNumber":113,"author":{"gitId":"MingEn82"},"content":"            startDate \u003d event.getStartDate();","lastModifiedDate":"2023-02-11"},{"lineNumber":114,"author":{"gitId":"MingEn82"},"content":"            endDate \u003d event.getEndDate();","lastModifiedDate":"2023-02-11"},{"lineNumber":115,"author":{"gitId":"MingEn82"},"content":"            taskString \u003d String.join(writeDelimiter, taskType, isDone, taskDescription, startDate, endDate);","lastModifiedDate":"2023-02-11"},{"lineNumber":116,"author":{"gitId":"MingEn82"},"content":"        } else {","lastModifiedDate":"2023-02-11"},{"lineNumber":117,"author":{"gitId":"MingEn82"},"content":"            throw new DukeException(\"Line is corrupted!\");","lastModifiedDate":"2023-02-11"},{"lineNumber":118,"author":{"gitId":"MingEn82"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":119,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":120,"author":{"gitId":"MingEn82"},"content":"        return taskString + \"\\n\";","lastModifiedDate":"2023-02-11"},{"lineNumber":121,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":122,"author":{"gitId":"MingEn82"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"MingEn82":122}},{"path":"src/main/java/FileUtils/TaskTypes.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MingEn82"},"content":"package FileUtils;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"MingEn82"},"content":"public enum TaskTypes {","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"MingEn82"},"content":"    TODO(\"T\"), ","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"MingEn82"},"content":"    DEADLINE(\"D\"), ","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"MingEn82"},"content":"    EVENT(\"E\");","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"MingEn82"},"content":"    private String taskType;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"MingEn82"},"content":"    private TaskTypes(String taskType) {","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"MingEn82"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"MingEn82"},"content":"    ","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"MingEn82"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"MingEn82"},"content":"    public String toString(){","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"MingEn82"},"content":"        return taskType;","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"MingEn82"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"MingEn82":17}},{"path":"src/main/java/Output/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MingEn82"},"content":"package Output;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"MingEn82"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"MingEn82"},"content":"import Entities.Task;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"MingEn82"},"content":"import Entities.TaskList;","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"MingEn82"},"content":"import Exceptions.DukeException;","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"MingEn82"},"content":"public class UI {","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"MingEn82"},"content":"    public static Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"MingEn82"},"content":"    public String readCommand() {","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"MingEn82"},"content":"        String command \u003d \"\";","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"MingEn82"},"content":"        while (command.length() \u003d\u003d 0) {","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"MingEn82"},"content":"            command \u003d sc.nextLine();","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"MingEn82"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"MingEn82"},"content":"        return command;","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"MingEn82"},"content":"    public void printIntroduction() {","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"MingEn82"},"content":"        printLine();","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"MingEn82"},"content":"        System.out.println(\"\\tHello! I\u0027m Duke. Hope you are having a wonderful day\");","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"MingEn82"},"content":"        System.out.println(\"\\tWhat can I do for you?\");","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"MingEn82"},"content":"        printLine();","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"MingEn82"},"content":"    public void printGoodbye() {","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"MingEn82"},"content":"        System.out.println(\"\\tBye. Hope to see you again soon!\");","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"MingEn82"},"content":"    public void printLine() {","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"MingEn82"},"content":"        System.out.println(\"\\t------------------------------------------------------------\");","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"MingEn82"},"content":"    public void printError(String errorMessage) {","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"MingEn82"},"content":"        System.out.println(errorMessage);","lastModifiedDate":"2023-02-11"},{"lineNumber":37,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":38,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":39,"author":{"gitId":"MingEn82"},"content":"    public void taskAddedMessage(Task t, int numTasks) {","lastModifiedDate":"2023-02-11"},{"lineNumber":40,"author":{"gitId":"MingEn82"},"content":"        System.out.println(","lastModifiedDate":"2023-02-11"},{"lineNumber":41,"author":{"gitId":"MingEn82"},"content":"            \"\\tGot it. I have added this task to the list!\\n\" + ","lastModifiedDate":"2023-02-11"},{"lineNumber":42,"author":{"gitId":"MingEn82"},"content":"            \"\\t   \" + t.toString() + \"\\n\" + ","lastModifiedDate":"2023-02-11"},{"lineNumber":43,"author":{"gitId":"MingEn82"},"content":"            \"\\tNow you have \" + numTasks + ","lastModifiedDate":"2023-02-11"},{"lineNumber":44,"author":{"gitId":"MingEn82"},"content":"            \" task\" + (numTasks \u003d\u003d 1 ? \"\" : \"s\") + ","lastModifiedDate":"2023-02-11"},{"lineNumber":45,"author":{"gitId":"MingEn82"},"content":"            \" in the list.\\n\"","lastModifiedDate":"2023-02-11"},{"lineNumber":46,"author":{"gitId":"MingEn82"},"content":"        );","lastModifiedDate":"2023-02-11"},{"lineNumber":47,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":48,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":49,"author":{"gitId":"MingEn82"},"content":"    public void printTasks(TaskList tasks) throws DukeException {","lastModifiedDate":"2023-02-11"},{"lineNumber":50,"author":{"gitId":"MingEn82"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-02-11"},{"lineNumber":51,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":52,"author":{"gitId":"MingEn82"},"content":"        if (tasks.getTasksCount() \u003d\u003d 0) {","lastModifiedDate":"2023-02-11"},{"lineNumber":53,"author":{"gitId":"MingEn82"},"content":"            output +\u003d \"\\t No tasks found!\\n\";","lastModifiedDate":"2023-02-11"},{"lineNumber":54,"author":{"gitId":"MingEn82"},"content":"        } else {","lastModifiedDate":"2023-02-11"},{"lineNumber":55,"author":{"gitId":"MingEn82"},"content":"            output +\u003d \"\\t Here are the tasks in your list:\\n\";","lastModifiedDate":"2023-02-11"},{"lineNumber":56,"author":{"gitId":"MingEn82"},"content":"            for (int i \u003d 0; i \u003c tasks.getTasksCount(); i++) {","lastModifiedDate":"2023-02-11"},{"lineNumber":57,"author":{"gitId":"MingEn82"},"content":"                output +\u003d \"\\t\" + (i + 1) + \".\" + tasks.getTask(i).toString() + \"\\n\";","lastModifiedDate":"2023-02-11"},{"lineNumber":58,"author":{"gitId":"MingEn82"},"content":"            }","lastModifiedDate":"2023-02-11"},{"lineNumber":59,"author":{"gitId":"MingEn82"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":60,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":61,"author":{"gitId":"MingEn82"},"content":"        System.out.printf(output);","lastModifiedDate":"2023-02-11"},{"lineNumber":62,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":63,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":64,"author":{"gitId":"MingEn82"},"content":"    public void taskDeletedMessage(Task t, int numTasks) {","lastModifiedDate":"2023-02-11"},{"lineNumber":65,"author":{"gitId":"MingEn82"},"content":"        System.out.println(","lastModifiedDate":"2023-02-11"},{"lineNumber":66,"author":{"gitId":"MingEn82"},"content":"            \"\\tNoted. I\u0027ve removed this task:\\n\" + ","lastModifiedDate":"2023-02-11"},{"lineNumber":67,"author":{"gitId":"MingEn82"},"content":"            \"\\t   \" + t.toString() + \"\\n\" + ","lastModifiedDate":"2023-02-11"},{"lineNumber":68,"author":{"gitId":"MingEn82"},"content":"            \"\\tNow you have \" + numTasks + ","lastModifiedDate":"2023-02-11"},{"lineNumber":69,"author":{"gitId":"MingEn82"},"content":"            \" task\" + (numTasks \u003d\u003d 1 ? \"\" : \"s\") + ","lastModifiedDate":"2023-02-11"},{"lineNumber":70,"author":{"gitId":"MingEn82"},"content":"            \" in the list.\\n\"","lastModifiedDate":"2023-02-11"},{"lineNumber":71,"author":{"gitId":"MingEn82"},"content":"        );","lastModifiedDate":"2023-02-11"},{"lineNumber":72,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":73,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":74,"author":{"gitId":"MingEn82"},"content":"    public void printMarkedTask(Task t) {","lastModifiedDate":"2023-02-11"},{"lineNumber":75,"author":{"gitId":"MingEn82"},"content":"        System.out.println( ","lastModifiedDate":"2023-02-11"},{"lineNumber":76,"author":{"gitId":"MingEn82"},"content":"            \"\\tNice! I\u0027ve marked this task as done:\\n\" + ","lastModifiedDate":"2023-02-11"},{"lineNumber":77,"author":{"gitId":"MingEn82"},"content":"            \"\\t   \" + t.toString() + \"\\n\"","lastModifiedDate":"2023-02-11"},{"lineNumber":78,"author":{"gitId":"MingEn82"},"content":"        );","lastModifiedDate":"2023-02-11"},{"lineNumber":79,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":80,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":81,"author":{"gitId":"MingEn82"},"content":"    public void printUnmarkedTask(Task t) {","lastModifiedDate":"2023-02-11"},{"lineNumber":82,"author":{"gitId":"MingEn82"},"content":"        System.out.println( ","lastModifiedDate":"2023-02-11"},{"lineNumber":83,"author":{"gitId":"MingEn82"},"content":"            \"\\tOK, I\u0027ve marked this task as not done yet:\\n\" + ","lastModifiedDate":"2023-02-11"},{"lineNumber":84,"author":{"gitId":"MingEn82"},"content":"            \"\\t   \" + t.toString() + \"\\n\"","lastModifiedDate":"2023-02-11"},{"lineNumber":85,"author":{"gitId":"MingEn82"},"content":"        );","lastModifiedDate":"2023-02-11"},{"lineNumber":86,"author":{"gitId":"MingEn82"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":87,"author":{"gitId":"MingEn82"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"MingEn82":87}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"MingEn82"},"content":"todo test","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"MingEn82"},"content":"bye","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"MingEn82":2}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"MingEn82"},"content":"del ACTUAL.TXT","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"MingEn82"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"MingEn82"},"content":"PAUSE","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"MingEn82":3,"-":20}}]
