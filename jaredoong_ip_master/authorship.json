[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaredoong"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"jaredoong"},"content":"    public Deadline(String description, String endDate) {","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"jaredoong"},"content":"        super(description);","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"jaredoong"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"jaredoong"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"jaredoong"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"jaredoong"},"content":"        String taskOutput \u003d super.toString();","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"jaredoong"},"content":"        return String.format(\"[D]%s (by: %s)\", taskOutput, endDate);","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"jaredoong"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"jaredoong":12}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaredoong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"jaredoong"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"jaredoong"},"content":"import java.util.List;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"jaredoong"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":8,"author":{"gitId":"jaredoong"},"content":"    static int BOX_WIDTH \u003d 100;","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"jaredoong"},"content":"    public static boolean isCompleted \u003d false;","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"jaredoong"},"content":"    private static final List\u003cTask\u003e userList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"jaredoong"},"content":"    public static void welcomeMessage() {","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"jaredoong"},"content":"        separator();","lastModifiedDate":"2023-01-14"},{"lineNumber":15,"author":{"gitId":"jaredoong"},"content":"        printMessage(\"Hello! I\u0027m Duke\");","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"jaredoong"},"content":"        printMessage(\"What can I do for you?\");","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"jaredoong"},"content":"        separator();","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":19,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":20,"author":{"gitId":"jaredoong"},"content":"    public static void endingMessage() {","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"jaredoong"},"content":"        separator();","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"jaredoong"},"content":"        printMessage(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"jaredoong"},"content":"        separator();","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":25,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":26,"author":{"gitId":"jaredoong"},"content":"    public static void separator() {","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"jaredoong"},"content":"        String separatorLine \u003d \"-\".repeat(BOX_WIDTH);","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"jaredoong"},"content":"        System.out.println(separatorLine);","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":30,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":31,"author":{"gitId":"jaredoong"},"content":"    public static void printMessage(String message) {","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"jaredoong"},"content":"        String outputMessage \u003d String.format(\"| %-97s|\", message);","lastModifiedDate":"2023-02-06"},{"lineNumber":33,"author":{"gitId":"jaredoong"},"content":"        System.out.println(outputMessage);","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":36,"author":{"gitId":"jaredoong"},"content":"    public static void checkInput(String inputMessage) {","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"jaredoong"},"content":"        String cleanInput \u003d inputMessage.trim();","lastModifiedDate":"2023-02-06"},{"lineNumber":38,"author":{"gitId":"jaredoong"},"content":"        String[] message \u003d cleanInput.split(\" \");","lastModifiedDate":"2023-02-06"},{"lineNumber":39,"author":{"gitId":"jaredoong"},"content":"        if (message[0].equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2023-02-06"},{"lineNumber":40,"author":{"gitId":"jaredoong"},"content":"            isCompleted \u003d true;","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"jaredoong"},"content":"        } else if (message[0].equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2023-02-06"},{"lineNumber":42,"author":{"gitId":"jaredoong"},"content":"            displayList();","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"jaredoong"},"content":"        } else if (message[0].equalsIgnoreCase(\"mark\")) {","lastModifiedDate":"2023-02-06"},{"lineNumber":44,"author":{"gitId":"jaredoong"},"content":"            markItem(message);","lastModifiedDate":"2023-02-06"},{"lineNumber":45,"author":{"gitId":"jaredoong"},"content":"        } else if (message[0].equalsIgnoreCase(\"unmark\")) {","lastModifiedDate":"2023-02-06"},{"lineNumber":46,"author":{"gitId":"jaredoong"},"content":"            unmarkItem(message);","lastModifiedDate":"2023-02-06"},{"lineNumber":47,"author":{"gitId":"jaredoong"},"content":"        } else if (message[0].equalsIgnoreCase(\"todo\")) {","lastModifiedDate":"2023-02-06"},{"lineNumber":48,"author":{"gitId":"jaredoong"},"content":"            addTodo(cleanInput);","lastModifiedDate":"2023-02-06"},{"lineNumber":49,"author":{"gitId":"jaredoong"},"content":"        } else if (message[0].equalsIgnoreCase(\"deadline\")) {","lastModifiedDate":"2023-02-06"},{"lineNumber":50,"author":{"gitId":"jaredoong"},"content":"            addDeadline(message);","lastModifiedDate":"2023-02-06"},{"lineNumber":51,"author":{"gitId":"jaredoong"},"content":"        } else if (message[0].equalsIgnoreCase(\"event\")) {","lastModifiedDate":"2023-02-06"},{"lineNumber":52,"author":{"gitId":"jaredoong"},"content":"            addEvent(message);","lastModifiedDate":"2023-02-06"},{"lineNumber":53,"author":{"gitId":"jaredoong"},"content":"        } else {","lastModifiedDate":"2023-02-06"},{"lineNumber":54,"author":{"gitId":"jaredoong"},"content":"            addTask(cleanInput);","lastModifiedDate":"2023-02-06"},{"lineNumber":55,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":57,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"jaredoong"},"content":"    public static void markItem(String[] message) {","lastModifiedDate":"2023-02-06"},{"lineNumber":59,"author":{"gitId":"jaredoong"},"content":"        int taskNumber \u003d 0;","lastModifiedDate":"2023-02-06"},{"lineNumber":60,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":61,"author":{"gitId":"jaredoong"},"content":"        separator();","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-02-06"},{"lineNumber":63,"author":{"gitId":"jaredoong"},"content":"            taskNumber \u003d getTaskNumber(message);","lastModifiedDate":"2023-02-06"},{"lineNumber":64,"author":{"gitId":"jaredoong"},"content":"            userList.get(taskNumber - 1).setAsNotDone();","lastModifiedDate":"2023-02-06"},{"lineNumber":65,"author":{"gitId":"jaredoong"},"content":"            String outputMessage \u003d String.format(\"Nice! I\u0027ve marked task %d as done:\", taskNumber);","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"jaredoong"},"content":"            printMessage(outputMessage);","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"jaredoong"},"content":"            printMessage(userList.get(taskNumber - 1).toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"jaredoong"},"content":"        } catch (DukeWrongArgsException error) {","lastModifiedDate":"2023-02-06"},{"lineNumber":69,"author":{"gitId":"jaredoong"},"content":"            String errorMessage \u003d String.format(\"Wrong number of arguments. Expected 2, received %d\",","lastModifiedDate":"2023-02-06"},{"lineNumber":70,"author":{"gitId":"jaredoong"},"content":"                    message.length);","lastModifiedDate":"2023-02-06"},{"lineNumber":71,"author":{"gitId":"jaredoong"},"content":"            printMessage(errorMessage);","lastModifiedDate":"2023-02-06"},{"lineNumber":72,"author":{"gitId":"jaredoong"},"content":"        } catch (NumberFormatException error) {","lastModifiedDate":"2023-02-06"},{"lineNumber":73,"author":{"gitId":"jaredoong"},"content":"            String errorMessage \u003d \"Expected a valid number for second argument.\";","lastModifiedDate":"2023-02-06"},{"lineNumber":74,"author":{"gitId":"jaredoong"},"content":"            String errorMessageEcho \u003d String.format(\"You entered %s, which is invalid!\", message[1]);","lastModifiedDate":"2023-02-06"},{"lineNumber":75,"author":{"gitId":"jaredoong"},"content":"            printMessage(errorMessage);","lastModifiedDate":"2023-02-06"},{"lineNumber":76,"author":{"gitId":"jaredoong"},"content":"            printMessage(errorMessageEcho);","lastModifiedDate":"2023-02-06"},{"lineNumber":77,"author":{"gitId":"jaredoong"},"content":"        } catch (IndexOutOfBoundsException error) {","lastModifiedDate":"2023-02-06"},{"lineNumber":78,"author":{"gitId":"jaredoong"},"content":"            String errorMessage \u003d \"Out of bounds value provided.\";","lastModifiedDate":"2023-02-06"},{"lineNumber":79,"author":{"gitId":"jaredoong"},"content":"            String errorMessageEcho \u003d String.format(\"List only has %d items, you entered %d!\",","lastModifiedDate":"2023-02-06"},{"lineNumber":80,"author":{"gitId":"jaredoong"},"content":"                    userList.size(), taskNumber);","lastModifiedDate":"2023-02-06"},{"lineNumber":81,"author":{"gitId":"jaredoong"},"content":"            printMessage(errorMessage);","lastModifiedDate":"2023-02-06"},{"lineNumber":82,"author":{"gitId":"jaredoong"},"content":"            printMessage(errorMessageEcho);","lastModifiedDate":"2023-02-06"},{"lineNumber":83,"author":{"gitId":"jaredoong"},"content":"        } finally {","lastModifiedDate":"2023-02-06"},{"lineNumber":84,"author":{"gitId":"jaredoong"},"content":"            separator();","lastModifiedDate":"2023-01-29"},{"lineNumber":85,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":86,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":87,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":88,"author":{"gitId":"jaredoong"},"content":"    public static void unmarkItem(String[] message) {","lastModifiedDate":"2023-02-06"},{"lineNumber":89,"author":{"gitId":"jaredoong"},"content":"        int taskNumber \u003d 0;","lastModifiedDate":"2023-02-06"},{"lineNumber":90,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":91,"author":{"gitId":"jaredoong"},"content":"        separator();","lastModifiedDate":"2023-01-29"},{"lineNumber":92,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-02-06"},{"lineNumber":93,"author":{"gitId":"jaredoong"},"content":"            taskNumber \u003d getTaskNumber(message);","lastModifiedDate":"2023-02-06"},{"lineNumber":94,"author":{"gitId":"jaredoong"},"content":"            userList.get(taskNumber - 1).setAsNotDone();","lastModifiedDate":"2023-01-29"},{"lineNumber":95,"author":{"gitId":"jaredoong"},"content":"            String outputMessage \u003d String.format(\"OK, I\u0027ve marked task %d as not done yet:\", taskNumber);","lastModifiedDate":"2023-01-29"},{"lineNumber":96,"author":{"gitId":"jaredoong"},"content":"            printMessage(outputMessage);","lastModifiedDate":"2023-01-29"},{"lineNumber":97,"author":{"gitId":"jaredoong"},"content":"            printMessage(userList.get(taskNumber - 1).toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":98,"author":{"gitId":"jaredoong"},"content":"        } catch (DukeWrongArgsException error) {","lastModifiedDate":"2023-02-06"},{"lineNumber":99,"author":{"gitId":"jaredoong"},"content":"            String errorMessage \u003d String.format(\"Wrong number of arguments. Expected 2, received %d\",","lastModifiedDate":"2023-02-06"},{"lineNumber":100,"author":{"gitId":"jaredoong"},"content":"                    message.length);","lastModifiedDate":"2023-02-06"},{"lineNumber":101,"author":{"gitId":"jaredoong"},"content":"            printMessage(errorMessage);","lastModifiedDate":"2023-02-06"},{"lineNumber":102,"author":{"gitId":"jaredoong"},"content":"        } catch (NumberFormatException error) {","lastModifiedDate":"2023-02-06"},{"lineNumber":103,"author":{"gitId":"jaredoong"},"content":"            String errorMessage \u003d \"Expected a valid number for second argument.\";","lastModifiedDate":"2023-02-06"},{"lineNumber":104,"author":{"gitId":"jaredoong"},"content":"            String errorMessageEcho \u003d String.format(\"You entered %s, which is invalid!\", message[1]);","lastModifiedDate":"2023-02-06"},{"lineNumber":105,"author":{"gitId":"jaredoong"},"content":"            printMessage(errorMessage);","lastModifiedDate":"2023-02-06"},{"lineNumber":106,"author":{"gitId":"jaredoong"},"content":"            printMessage(errorMessageEcho);","lastModifiedDate":"2023-02-06"},{"lineNumber":107,"author":{"gitId":"jaredoong"},"content":"        } catch (IndexOutOfBoundsException error) {","lastModifiedDate":"2023-02-06"},{"lineNumber":108,"author":{"gitId":"jaredoong"},"content":"            String errorMessage \u003d \"Out of bounds value provided.\";","lastModifiedDate":"2023-02-06"},{"lineNumber":109,"author":{"gitId":"jaredoong"},"content":"            String errorMessageEcho \u003d String.format(\"List only has %d items, you entered %d!\",","lastModifiedDate":"2023-02-06"},{"lineNumber":110,"author":{"gitId":"jaredoong"},"content":"                    userList.size(), taskNumber);","lastModifiedDate":"2023-02-06"},{"lineNumber":111,"author":{"gitId":"jaredoong"},"content":"            printMessage(errorMessage);","lastModifiedDate":"2023-02-06"},{"lineNumber":112,"author":{"gitId":"jaredoong"},"content":"            printMessage(errorMessageEcho);","lastModifiedDate":"2023-02-06"},{"lineNumber":113,"author":{"gitId":"jaredoong"},"content":"        } finally {","lastModifiedDate":"2023-02-06"},{"lineNumber":114,"author":{"gitId":"jaredoong"},"content":"            separator();","lastModifiedDate":"2023-01-29"},{"lineNumber":115,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":116,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":117,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":118,"author":{"gitId":"jaredoong"},"content":"    public static int getTaskNumber(String[] message) throws DukeWrongArgsException, NumberFormatException {","lastModifiedDate":"2023-02-06"},{"lineNumber":119,"author":{"gitId":"jaredoong"},"content":"        // Check for correct number of arguments","lastModifiedDate":"2023-02-06"},{"lineNumber":120,"author":{"gitId":"jaredoong"},"content":"        if (message.length !\u003d 2) {","lastModifiedDate":"2023-02-06"},{"lineNumber":121,"author":{"gitId":"jaredoong"},"content":"            throw new DukeWrongArgsException();","lastModifiedDate":"2023-02-06"},{"lineNumber":122,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":123,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":124,"author":{"gitId":"jaredoong"},"content":"        // Check that second argument provided is a valid number","lastModifiedDate":"2023-02-06"},{"lineNumber":125,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-02-06"},{"lineNumber":126,"author":{"gitId":"jaredoong"},"content":"            return Integer.parseInt(message[1]);","lastModifiedDate":"2023-02-06"},{"lineNumber":127,"author":{"gitId":"jaredoong"},"content":"        } catch (NumberFormatException error) {","lastModifiedDate":"2023-02-06"},{"lineNumber":128,"author":{"gitId":"jaredoong"},"content":"            throw new NumberFormatException();","lastModifiedDate":"2023-02-06"},{"lineNumber":129,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":130,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":131,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":132,"author":{"gitId":"jaredoong"},"content":"    public static String parseTodo(String message) throws StringIndexOutOfBoundsException {","lastModifiedDate":"2023-02-06"},{"lineNumber":133,"author":{"gitId":"jaredoong"},"content":"        int secondArgStartIndex \u003d 5;","lastModifiedDate":"2023-02-06"},{"lineNumber":134,"author":{"gitId":"jaredoong"},"content":"        if (message.length() \u003c secondArgStartIndex) {","lastModifiedDate":"2023-02-06"},{"lineNumber":135,"author":{"gitId":"jaredoong"},"content":"            throw new StringIndexOutOfBoundsException();","lastModifiedDate":"2023-02-06"},{"lineNumber":136,"author":{"gitId":"jaredoong"},"content":"        } else {","lastModifiedDate":"2023-02-06"},{"lineNumber":137,"author":{"gitId":"jaredoong"},"content":"            return message.substring(secondArgStartIndex);","lastModifiedDate":"2023-02-06"},{"lineNumber":138,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":139,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":140,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":141,"author":{"gitId":"jaredoong"},"content":"    public static Deadline parseDeadline(String[] message) throws DukeWrongArgsException {","lastModifiedDate":"2023-02-06"},{"lineNumber":142,"author":{"gitId":"jaredoong"},"content":"        int descriptionStartIndex \u003d 1;","lastModifiedDate":"2023-01-29"},{"lineNumber":143,"author":{"gitId":"jaredoong"},"content":"        int descriptionEndIndex \u003d 0;","lastModifiedDate":"2023-01-29"},{"lineNumber":144,"author":{"gitId":"jaredoong"},"content":"        int endDateStartIndex \u003d 0;","lastModifiedDate":"2023-01-29"},{"lineNumber":145,"author":{"gitId":"jaredoong"},"content":"        int endDateEndIndex \u003d message.length;","lastModifiedDate":"2023-01-29"},{"lineNumber":146,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":147,"author":{"gitId":"jaredoong"},"content":"        for (int i \u003d 2; i \u003c message.length; i++) {","lastModifiedDate":"2023-01-29"},{"lineNumber":148,"author":{"gitId":"jaredoong"},"content":"            if (message[i].equalsIgnoreCase(\"/by\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":149,"author":{"gitId":"jaredoong"},"content":"                descriptionEndIndex \u003d i;","lastModifiedDate":"2023-01-29"},{"lineNumber":150,"author":{"gitId":"jaredoong"},"content":"                endDateStartIndex \u003d i + 1;","lastModifiedDate":"2023-01-29"},{"lineNumber":151,"author":{"gitId":"jaredoong"},"content":"                break;","lastModifiedDate":"2023-01-29"},{"lineNumber":152,"author":{"gitId":"jaredoong"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":153,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":154,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":155,"author":{"gitId":"jaredoong"},"content":"        // Checks if correct argument is provided","lastModifiedDate":"2023-02-06"},{"lineNumber":156,"author":{"gitId":"jaredoong"},"content":"        if (endDateStartIndex \u003d\u003d 0) {","lastModifiedDate":"2023-02-06"},{"lineNumber":157,"author":{"gitId":"jaredoong"},"content":"            throw new DukeWrongArgsException();","lastModifiedDate":"2023-02-06"},{"lineNumber":158,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":159,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":160,"author":{"gitId":"jaredoong"},"content":"        String[] descriptionArray \u003d Arrays.copyOfRange(message, descriptionStartIndex, descriptionEndIndex);","lastModifiedDate":"2023-01-29"},{"lineNumber":161,"author":{"gitId":"jaredoong"},"content":"        String[] endDateArray \u003d Arrays.copyOfRange(message, endDateStartIndex, endDateEndIndex);","lastModifiedDate":"2023-01-29"},{"lineNumber":162,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":163,"author":{"gitId":"jaredoong"},"content":"        String[] deadlineArray \u003d new String[2];","lastModifiedDate":"2023-01-29"},{"lineNumber":164,"author":{"gitId":"jaredoong"},"content":"        deadlineArray[0] \u003d String.join(\" \", descriptionArray);","lastModifiedDate":"2023-01-29"},{"lineNumber":165,"author":{"gitId":"jaredoong"},"content":"        deadlineArray[1] \u003d String.join(\" \", endDateArray);","lastModifiedDate":"2023-01-29"},{"lineNumber":166,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":167,"author":{"gitId":"jaredoong"},"content":"        return new Deadline(deadlineArray[0], deadlineArray[1]);","lastModifiedDate":"2023-02-06"},{"lineNumber":168,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":169,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":170,"author":{"gitId":"jaredoong"},"content":"    public static Event parseEvent(String[] message) throws DukeWrongArgsException {","lastModifiedDate":"2023-02-06"},{"lineNumber":171,"author":{"gitId":"jaredoong"},"content":"        int descriptionStartIndex \u003d 1;","lastModifiedDate":"2023-01-29"},{"lineNumber":172,"author":{"gitId":"jaredoong"},"content":"        int descriptionEndIndex \u003d 0;","lastModifiedDate":"2023-01-29"},{"lineNumber":173,"author":{"gitId":"jaredoong"},"content":"        int startDateStartIndex \u003d 0;","lastModifiedDate":"2023-01-29"},{"lineNumber":174,"author":{"gitId":"jaredoong"},"content":"        int startDateEndIndex \u003d 0;","lastModifiedDate":"2023-01-29"},{"lineNumber":175,"author":{"gitId":"jaredoong"},"content":"        int endDateStartIndex \u003d 0;","lastModifiedDate":"2023-01-29"},{"lineNumber":176,"author":{"gitId":"jaredoong"},"content":"        int endDateEndIndex \u003d message.length;","lastModifiedDate":"2023-01-29"},{"lineNumber":177,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":178,"author":{"gitId":"jaredoong"},"content":"        for (int i \u003d 1; i \u003c message.length; i++) {","lastModifiedDate":"2023-02-06"},{"lineNumber":179,"author":{"gitId":"jaredoong"},"content":"            if (message[i].equalsIgnoreCase(\"/from\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":180,"author":{"gitId":"jaredoong"},"content":"                descriptionEndIndex \u003d i;","lastModifiedDate":"2023-01-29"},{"lineNumber":181,"author":{"gitId":"jaredoong"},"content":"                startDateStartIndex \u003d i + 1;","lastModifiedDate":"2023-01-29"},{"lineNumber":182,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":183,"author":{"gitId":"jaredoong"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":184,"author":{"gitId":"jaredoong"},"content":"            if (message[i].equalsIgnoreCase(\"/to\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":185,"author":{"gitId":"jaredoong"},"content":"                startDateEndIndex \u003d i;","lastModifiedDate":"2023-01-29"},{"lineNumber":186,"author":{"gitId":"jaredoong"},"content":"                endDateStartIndex \u003d i + 1;","lastModifiedDate":"2023-01-29"},{"lineNumber":187,"author":{"gitId":"jaredoong"},"content":"                break;","lastModifiedDate":"2023-01-29"},{"lineNumber":188,"author":{"gitId":"jaredoong"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":189,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":190,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":191,"author":{"gitId":"jaredoong"},"content":"        if (startDateStartIndex \u003d\u003d 0 || startDateEndIndex \u003d\u003d 0) {","lastModifiedDate":"2023-02-06"},{"lineNumber":192,"author":{"gitId":"jaredoong"},"content":"            throw new DukeWrongArgsException();","lastModifiedDate":"2023-02-06"},{"lineNumber":193,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":194,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":195,"author":{"gitId":"jaredoong"},"content":"        String[] descriptionArray \u003d Arrays.copyOfRange(message, descriptionStartIndex, descriptionEndIndex);","lastModifiedDate":"2023-01-29"},{"lineNumber":196,"author":{"gitId":"jaredoong"},"content":"        String[] startDateArray \u003d Arrays.copyOfRange(message, startDateStartIndex, startDateEndIndex);","lastModifiedDate":"2023-01-29"},{"lineNumber":197,"author":{"gitId":"jaredoong"},"content":"        String[] endDateArray \u003d Arrays.copyOfRange(message, endDateStartIndex, endDateEndIndex);","lastModifiedDate":"2023-01-29"},{"lineNumber":198,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":199,"author":{"gitId":"jaredoong"},"content":"        String[] eventArray \u003d new String[3];","lastModifiedDate":"2023-01-29"},{"lineNumber":200,"author":{"gitId":"jaredoong"},"content":"        eventArray[0] \u003d String.join(\" \", descriptionArray);","lastModifiedDate":"2023-01-29"},{"lineNumber":201,"author":{"gitId":"jaredoong"},"content":"        eventArray[1] \u003d String.join(\" \", startDateArray);","lastModifiedDate":"2023-01-29"},{"lineNumber":202,"author":{"gitId":"jaredoong"},"content":"        eventArray[2] \u003d String.join(\" \", endDateArray);","lastModifiedDate":"2023-01-29"},{"lineNumber":203,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":204,"author":{"gitId":"jaredoong"},"content":"        return new Event(eventArray[0], eventArray[1], eventArray[2]);","lastModifiedDate":"2023-02-06"},{"lineNumber":205,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":206,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":207,"author":{"gitId":"jaredoong"},"content":"    public static void addTask(String description) {","lastModifiedDate":"2023-01-29"},{"lineNumber":208,"author":{"gitId":"jaredoong"},"content":"        separator();","lastModifiedDate":"2023-01-29"},{"lineNumber":209,"author":{"gitId":"jaredoong"},"content":"        Task t \u003d new Task(description);","lastModifiedDate":"2023-01-29"},{"lineNumber":210,"author":{"gitId":"jaredoong"},"content":"        userList.add(t);","lastModifiedDate":"2023-01-29"},{"lineNumber":211,"author":{"gitId":"jaredoong"},"content":"        String outputMessage \u003d String.format(\"added: %s\", description);","lastModifiedDate":"2023-01-29"},{"lineNumber":212,"author":{"gitId":"jaredoong"},"content":"        printMessage(outputMessage);","lastModifiedDate":"2023-01-29"},{"lineNumber":213,"author":{"gitId":"jaredoong"},"content":"        separator();","lastModifiedDate":"2023-01-29"},{"lineNumber":214,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":215,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":216,"author":{"gitId":"jaredoong"},"content":"    public static void addTodo(String cleanInput) {","lastModifiedDate":"2023-02-06"},{"lineNumber":217,"author":{"gitId":"jaredoong"},"content":"        separator();","lastModifiedDate":"2023-01-29"},{"lineNumber":218,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":219,"author":{"gitId":"jaredoong"},"content":"        // Check if second argument was provided","lastModifiedDate":"2023-02-06"},{"lineNumber":220,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-02-06"},{"lineNumber":221,"author":{"gitId":"jaredoong"},"content":"            String todoDescription \u003d parseTodo(cleanInput);","lastModifiedDate":"2023-02-06"},{"lineNumber":222,"author":{"gitId":"jaredoong"},"content":"            Todo todo \u003d new Todo(todoDescription);","lastModifiedDate":"2023-02-06"},{"lineNumber":223,"author":{"gitId":"jaredoong"},"content":"            userList.add(todo);","lastModifiedDate":"2023-01-29"},{"lineNumber":224,"author":{"gitId":"jaredoong"},"content":"            printMessage(\"Got it. I\u0027ve added this todo:\");","lastModifiedDate":"2023-01-29"},{"lineNumber":225,"author":{"gitId":"jaredoong"},"content":"            printMessage(String.format(\" %s\", todo));","lastModifiedDate":"2023-01-29"},{"lineNumber":226,"author":{"gitId":"jaredoong"},"content":"            printMessage(String.format(\"Now you have %d tasks in the list.\", userList.size()));","lastModifiedDate":"2023-01-29"},{"lineNumber":227,"author":{"gitId":"jaredoong"},"content":"        } catch (StringIndexOutOfBoundsException error) {","lastModifiedDate":"2023-02-06"},{"lineNumber":228,"author":{"gitId":"jaredoong"},"content":"            String errorMessage \u003d \"Expected 2 arguments, only 1 provided.\";","lastModifiedDate":"2023-02-06"},{"lineNumber":229,"author":{"gitId":"jaredoong"},"content":"            printMessage(errorMessage);","lastModifiedDate":"2023-02-06"},{"lineNumber":230,"author":{"gitId":"jaredoong"},"content":"        } finally {","lastModifiedDate":"2023-02-06"},{"lineNumber":231,"author":{"gitId":"jaredoong"},"content":"            separator();","lastModifiedDate":"2023-01-29"},{"lineNumber":232,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":233,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":234,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":235,"author":{"gitId":"jaredoong"},"content":"    public static void addDeadline(String[] message) {","lastModifiedDate":"2023-02-06"},{"lineNumber":236,"author":{"gitId":"jaredoong"},"content":"        separator();","lastModifiedDate":"2023-01-29"},{"lineNumber":237,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":238,"author":{"gitId":"jaredoong"},"content":"        // Check if task and deadline given","lastModifiedDate":"2023-02-06"},{"lineNumber":239,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-02-06"},{"lineNumber":240,"author":{"gitId":"jaredoong"},"content":"            Deadline deadline \u003d parseDeadline(message);","lastModifiedDate":"2023-02-06"},{"lineNumber":241,"author":{"gitId":"jaredoong"},"content":"            userList.add(deadline);","lastModifiedDate":"2023-01-29"},{"lineNumber":242,"author":{"gitId":"jaredoong"},"content":"            printMessage(\"Got it. I\u0027ve added this deadline:\");","lastModifiedDate":"2023-01-29"},{"lineNumber":243,"author":{"gitId":"jaredoong"},"content":"            printMessage(String.format(\" %s\", deadline));","lastModifiedDate":"2023-01-29"},{"lineNumber":244,"author":{"gitId":"jaredoong"},"content":"            printMessage(String.format(\"Now you have %d tasks in the list.\", userList.size()));","lastModifiedDate":"2023-01-29"},{"lineNumber":245,"author":{"gitId":"jaredoong"},"content":"        } catch (DukeWrongArgsException error) {","lastModifiedDate":"2023-02-06"},{"lineNumber":246,"author":{"gitId":"jaredoong"},"content":"            String errorMessage \u003d \"Command to enter new deadline entered wrongly.\";","lastModifiedDate":"2023-02-06"},{"lineNumber":247,"author":{"gitId":"jaredoong"},"content":"            String errorMessageExample \u003d \"Example command: \\\"deadline \u003ctask\u003e /by \u003cendDate\u003e\\\"\";","lastModifiedDate":"2023-02-06"},{"lineNumber":248,"author":{"gitId":"jaredoong"},"content":"            printMessage(errorMessage);","lastModifiedDate":"2023-02-06"},{"lineNumber":249,"author":{"gitId":"jaredoong"},"content":"            printMessage(errorMessageExample);","lastModifiedDate":"2023-02-06"},{"lineNumber":250,"author":{"gitId":"jaredoong"},"content":"        } finally {","lastModifiedDate":"2023-02-06"},{"lineNumber":251,"author":{"gitId":"jaredoong"},"content":"            separator();","lastModifiedDate":"2023-01-29"},{"lineNumber":252,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":253,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":254,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":255,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":256,"author":{"gitId":"jaredoong"},"content":"    public static void addEvent(String[] message) {","lastModifiedDate":"2023-02-06"},{"lineNumber":257,"author":{"gitId":"jaredoong"},"content":"        separator();","lastModifiedDate":"2023-01-29"},{"lineNumber":258,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":259,"author":{"gitId":"jaredoong"},"content":"        // Check if task, start and end date given","lastModifiedDate":"2023-02-06"},{"lineNumber":260,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-02-06"},{"lineNumber":261,"author":{"gitId":"jaredoong"},"content":"            Event event \u003d parseEvent(message);","lastModifiedDate":"2023-02-06"},{"lineNumber":262,"author":{"gitId":"jaredoong"},"content":"            userList.add(event);","lastModifiedDate":"2023-01-29"},{"lineNumber":263,"author":{"gitId":"jaredoong"},"content":"            printMessage(\"Got it. I\u0027ve added this event:\");","lastModifiedDate":"2023-01-29"},{"lineNumber":264,"author":{"gitId":"jaredoong"},"content":"            printMessage(String.format(\" %s\", event));","lastModifiedDate":"2023-01-29"},{"lineNumber":265,"author":{"gitId":"jaredoong"},"content":"            printMessage(String.format(\"Now you have %d tasks in the list.\", userList.size()));","lastModifiedDate":"2023-01-29"},{"lineNumber":266,"author":{"gitId":"jaredoong"},"content":"        } catch (DukeWrongArgsException error) {","lastModifiedDate":"2023-02-06"},{"lineNumber":267,"author":{"gitId":"jaredoong"},"content":"            String errorMessage \u003d \"Command to enter new event entered wrongly.\";","lastModifiedDate":"2023-02-06"},{"lineNumber":268,"author":{"gitId":"jaredoong"},"content":"            String errorMessageExample \u003d","lastModifiedDate":"2023-02-06"},{"lineNumber":269,"author":{"gitId":"jaredoong"},"content":"                    \"Example command: \\\"event \u003ctask\u003e /from \u003cstartDate\u003e /to \" + \"\u003cendDate\u003e\\\"\";","lastModifiedDate":"2023-02-06"},{"lineNumber":270,"author":{"gitId":"jaredoong"},"content":"            printMessage(errorMessage);","lastModifiedDate":"2023-02-06"},{"lineNumber":271,"author":{"gitId":"jaredoong"},"content":"            printMessage(errorMessageExample);","lastModifiedDate":"2023-02-06"},{"lineNumber":272,"author":{"gitId":"jaredoong"},"content":"        } finally {","lastModifiedDate":"2023-02-06"},{"lineNumber":273,"author":{"gitId":"jaredoong"},"content":"            separator();","lastModifiedDate":"2023-01-29"},{"lineNumber":274,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":275,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":276,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":277,"author":{"gitId":"jaredoong"},"content":"    public static void displayList() {","lastModifiedDate":"2023-01-29"},{"lineNumber":278,"author":{"gitId":"jaredoong"},"content":"        separator();","lastModifiedDate":"2023-01-29"},{"lineNumber":279,"author":{"gitId":"jaredoong"},"content":"        int numItems \u003d userList.size();","lastModifiedDate":"2023-01-29"},{"lineNumber":280,"author":{"gitId":"jaredoong"},"content":"        if (numItems \u003d\u003d 0) {","lastModifiedDate":"2023-01-29"},{"lineNumber":281,"author":{"gitId":"jaredoong"},"content":"            printMessage(\"List is empty!\");","lastModifiedDate":"2023-01-29"},{"lineNumber":282,"author":{"gitId":"jaredoong"},"content":"            separator();","lastModifiedDate":"2023-02-06"},{"lineNumber":283,"author":{"gitId":"jaredoong"},"content":"            return;","lastModifiedDate":"2023-01-29"},{"lineNumber":284,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":285,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":286,"author":{"gitId":"jaredoong"},"content":"        printMessage(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-01-29"},{"lineNumber":287,"author":{"gitId":"jaredoong"},"content":"        for (int i \u003d 0; i \u003c numItems; i++) {","lastModifiedDate":"2023-01-29"},{"lineNumber":288,"author":{"gitId":"jaredoong"},"content":"            String item \u003d userList.get(i).toString();","lastModifiedDate":"2023-01-29"},{"lineNumber":289,"author":{"gitId":"jaredoong"},"content":"            String outputMessage \u003d String.format(\"%d.%s\", i + 1, item);","lastModifiedDate":"2023-01-29"},{"lineNumber":290,"author":{"gitId":"jaredoong"},"content":"            printMessage(outputMessage);","lastModifiedDate":"2023-01-29"},{"lineNumber":291,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":292,"author":{"gitId":"jaredoong"},"content":"        separator();","lastModifiedDate":"2023-01-29"},{"lineNumber":293,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":294,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-20"},{"lineNumber":296,"author":{"gitId":"jaredoong"},"content":"        welcomeMessage();","lastModifiedDate":"2023-01-29"},{"lineNumber":297,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":298,"author":{"gitId":"jaredoong"},"content":"        String line;","lastModifiedDate":"2023-01-20"},{"lineNumber":299,"author":{"gitId":"jaredoong"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-20"},{"lineNumber":300,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":301,"author":{"gitId":"jaredoong"},"content":"        do {","lastModifiedDate":"2023-01-20"},{"lineNumber":302,"author":{"gitId":"jaredoong"},"content":"            line \u003d in.nextLine();","lastModifiedDate":"2023-01-20"},{"lineNumber":303,"author":{"gitId":"jaredoong"},"content":"            checkInput(line);","lastModifiedDate":"2023-01-29"},{"lineNumber":304,"author":{"gitId":"jaredoong"},"content":"        } while (!isCompleted);","lastModifiedDate":"2023-01-20"},{"lineNumber":305,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":306,"author":{"gitId":"jaredoong"},"content":"        endingMessage();","lastModifiedDate":"2023-01-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"-":4,"jaredoong":304}},{"path":"src/main/java/DukeWrongArgsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaredoong"},"content":"public class DukeWrongArgsException extends Exception {","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"jaredoong"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"jaredoong":3}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaredoong"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"jaredoong"},"content":"    public Event(String description, String startDate, String endDate) {","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"jaredoong"},"content":"        super(description);","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"jaredoong"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"jaredoong"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"jaredoong"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"jaredoong"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"jaredoong"},"content":"        String taskOutput \u003d super.toString();","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"jaredoong"},"content":"        return String.format(\"[E]%s (by: %s to: %s)\", taskOutput, startDate, endDate);","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"jaredoong"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"jaredoong":13}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaredoong"},"content":"public class Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"jaredoong"},"content":"    protected String description;","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"jaredoong"},"content":"    protected String startDate;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"jaredoong"},"content":"    protected String endDate;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"jaredoong"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"jaredoong"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"jaredoong"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"jaredoong"},"content":"        this.startDate \u003d \"\";","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"jaredoong"},"content":"        this.endDate \u003d \"\";","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"jaredoong"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"jaredoong"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"jaredoong"},"content":"        return ((this.isDone) ? \"X\" : \" \");","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"jaredoong"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"jaredoong"},"content":"        return this.description;","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"jaredoong"},"content":"    public void setAsDone() {","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"jaredoong"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"jaredoong"},"content":"    public void setAsNotDone() {","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"jaredoong"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"jaredoong"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"jaredoong"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"jaredoong"},"content":"        String itemStatus \u003d this.getStatusIcon();","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"jaredoong"},"content":"        String itemDescription \u003d this.getDescription();","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"jaredoong"},"content":"        return String.format(\"[%s] %s\", itemStatus, itemDescription);","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"jaredoong"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"jaredoong":36}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaredoong"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"jaredoong"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"jaredoong"},"content":"        super(description);","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"jaredoong"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"jaredoong"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"jaredoong"},"content":"        String taskOutput \u003d super.toString();","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"jaredoong"},"content":"        return String.format(\"[T]%s\", taskOutput);","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"jaredoong"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"jaredoong":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jaredoong"},"content":"task1","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"jaredoong"},"content":"task2","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"jaredoong"},"content":"list","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"jaredoong"},"content":"mark 1","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"jaredoong"},"content":"list","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"jaredoong"},"content":"unmark 1","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"jaredoong"},"content":"list","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"jaredoong"},"content":"todo borrow book","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"jaredoong"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"jaredoong"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"jaredoong"},"content":"mark 5","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"jaredoong"},"content":"list","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"jaredoong"},"content":"unmark 5","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"jaredoong"},"content":"list","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"jaredoong"},"content":"mark 6","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"jaredoong"},"content":"mark abc","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"jaredoong"},"content":"mark","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"jaredoong"},"content":"unmark 7","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"jaredoong"},"content":"unmark def","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"jaredoong"},"content":"unmark 2 zzz","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"jaredoong"},"content":"deadline return book Sunday","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"jaredoong"},"content":"deadline","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"jaredoong"},"content":"event","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"jaredoong"},"content":"bye","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"jaredoong":24}}]
