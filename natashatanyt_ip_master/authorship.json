[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"natashatanyt"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"natashatanyt"},"content":"    protected String by;","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"natashatanyt"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"natashatanyt"},"content":"        super(description);","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"natashatanyt"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"natashatanyt"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"natashatanyt"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"natashatanyt"},"content":"    public String toString() {","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"natashatanyt"},"content":"        return \"[D] [\" + getStatus() + \"] \" + getTask() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"natashatanyt"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"natashatanyt"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"natashatanyt":13}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"natashatanyt"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"natashatanyt"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"natashatanyt"},"content":"     * DUKE in ASCII art","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"natashatanyt"},"content":"     * Made it a long string so IntelliJ would stop highlighting this as a warning","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"natashatanyt"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"natashatanyt"},"content":"    private static final String LOGO \u003d \" ____        _        \\n|  _ \\\\ _   _| | _____ \\n| | | | | | | |/ / _ \\\\\\n| |_| | |_| |   \u003c  __/\\n|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":10,"author":{"gitId":"natashatanyt"},"content":"    // Horizontal Rule to act as a divider","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"natashatanyt"},"content":"    private static final String HORIZONTAL_RULE \u003d \"__________________________________________________\";","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":13,"author":{"gitId":"natashatanyt"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"natashatanyt"},"content":"     * Start up function.","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"natashatanyt"},"content":"     * Prints ASCII art and prompts users for input","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"natashatanyt"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"natashatanyt"},"content":"    public static void startUp() {","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"natashatanyt"},"content":"        System.out.println(LOGO);","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"natashatanyt"},"content":"        System.out.println(HORIZONTAL_RULE);","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"natashatanyt"},"content":"        System.out.println(\"Hello! I\u0027m Duke. \\nWhat can I do for you?\");","lastModifiedDate":"2023-01-13"},{"lineNumber":21,"author":{"gitId":"natashatanyt"},"content":"        System.out.println(HORIZONTAL_RULE);","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"natashatanyt"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":23,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":24,"author":{"gitId":"natashatanyt"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"natashatanyt"},"content":"     * Shut down function.","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"natashatanyt"},"content":"     * Informs users that Duke is no longer accepting commands","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"natashatanyt"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"natashatanyt"},"content":"    public static void shutDown() {","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"natashatanyt"},"content":"        System.out.println(HORIZONTAL_RULE);","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"natashatanyt"},"content":"        System.out.println(\"Shutting Down! Hope to see you again soon!\");","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"natashatanyt"},"content":"        System.out.println(HORIZONTAL_RULE);","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"natashatanyt"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":33,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":34,"author":{"gitId":"natashatanyt"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"natashatanyt"},"content":"     * Prints an acknowledgement, based on the type of task.","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"natashatanyt"},"content":"     * Also prints the description of the task and the current number of tasks","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"natashatanyt"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"natashatanyt"},"content":"    public static void printAcknowledgement(String taskType, String description, int taskCounter) {","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"natashatanyt"},"content":"        System.out.println(HORIZONTAL_RULE);","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"natashatanyt"},"content":"        System.out.println(\"Added \" + taskType + \": \" + description);","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"natashatanyt"},"content":"        System.out.println(\"Total Number of Tasks: \" + taskCounter);","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"natashatanyt"},"content":"        System.out.println(HORIZONTAL_RULE);","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"natashatanyt"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"natashatanyt"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"natashatanyt"},"content":"     * Removes the command word for creating tasks, ie. todo, deadline or event","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"natashatanyt"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":48,"author":{"gitId":"natashatanyt"},"content":"    public static String removeCommandWord(String userInput) {","lastModifiedDate":"2023-02-02"},{"lineNumber":49,"author":{"gitId":"natashatanyt"},"content":"        return userInput.split(\" \", 2)[1];","lastModifiedDate":"2023-02-02"},{"lineNumber":50,"author":{"gitId":"natashatanyt"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"natashatanyt"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":53,"author":{"gitId":"natashatanyt"},"content":"     * Extracts the description given by the user for deadline tasks","lastModifiedDate":"2023-02-02"},{"lineNumber":54,"author":{"gitId":"natashatanyt"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":55,"author":{"gitId":"natashatanyt"},"content":"    public static String getDescriptionForDeadline(String input) {","lastModifiedDate":"2023-02-02"},{"lineNumber":56,"author":{"gitId":"natashatanyt"},"content":"        return input.split(\" /by \", 2)[0];","lastModifiedDate":"2023-02-02"},{"lineNumber":57,"author":{"gitId":"natashatanyt"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":58,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":59,"author":{"gitId":"natashatanyt"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":60,"author":{"gitId":"natashatanyt"},"content":"     * Extracts the deadline for deadline tasks","lastModifiedDate":"2023-02-02"},{"lineNumber":61,"author":{"gitId":"natashatanyt"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":62,"author":{"gitId":"natashatanyt"},"content":"    public static String getDeadline(String input) {","lastModifiedDate":"2023-02-02"},{"lineNumber":63,"author":{"gitId":"natashatanyt"},"content":"        return input.split(\" /by \", 2)[1];","lastModifiedDate":"2023-02-02"},{"lineNumber":64,"author":{"gitId":"natashatanyt"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":65,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":66,"author":{"gitId":"natashatanyt"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":67,"author":{"gitId":"natashatanyt"},"content":"     * Extracts the description given by the user for event tasks","lastModifiedDate":"2023-02-02"},{"lineNumber":68,"author":{"gitId":"natashatanyt"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":69,"author":{"gitId":"natashatanyt"},"content":"    public static String getDescriptionForEvent(String input) {","lastModifiedDate":"2023-02-02"},{"lineNumber":70,"author":{"gitId":"natashatanyt"},"content":"        return input.split(\" /from \", 2)[0];","lastModifiedDate":"2023-02-02"},{"lineNumber":71,"author":{"gitId":"natashatanyt"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":72,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":73,"author":{"gitId":"natashatanyt"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":74,"author":{"gitId":"natashatanyt"},"content":"     * Extracts the start and end timing for event tasks","lastModifiedDate":"2023-02-02"},{"lineNumber":75,"author":{"gitId":"natashatanyt"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":76,"author":{"gitId":"natashatanyt"},"content":"    public static String[] getTimings(String input) {","lastModifiedDate":"2023-02-02"},{"lineNumber":77,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":78,"author":{"gitId":"natashatanyt"},"content":"        String[] timings \u003d new String[2];","lastModifiedDate":"2023-02-02"},{"lineNumber":79,"author":{"gitId":"natashatanyt"},"content":"        String timing \u003d input.split(\" /from \", 2)[1];","lastModifiedDate":"2023-02-02"},{"lineNumber":80,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":81,"author":{"gitId":"natashatanyt"},"content":"        timings[0] \u003d timing.split(\" /to \", 2)[0];","lastModifiedDate":"2023-02-02"},{"lineNumber":82,"author":{"gitId":"natashatanyt"},"content":"        timings[1] \u003d timing.split(\" /to \", 2)[1];","lastModifiedDate":"2023-02-02"},{"lineNumber":83,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":84,"author":{"gitId":"natashatanyt"},"content":"        return timings;","lastModifiedDate":"2023-02-02"},{"lineNumber":85,"author":{"gitId":"natashatanyt"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":86,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-13"},{"lineNumber":88,"author":{"gitId":"natashatanyt"},"content":"        // tasks for storing tasks + taskCounter to track next empty cell","lastModifiedDate":"2023-01-31"},{"lineNumber":89,"author":{"gitId":"natashatanyt"},"content":"        final int MAX_TASKS \u003d 100;","lastModifiedDate":"2023-02-02"},{"lineNumber":90,"author":{"gitId":"natashatanyt"},"content":"        Task[] tasks \u003d new Task[MAX_TASKS];","lastModifiedDate":"2023-02-02"},{"lineNumber":91,"author":{"gitId":"natashatanyt"},"content":"        int taskCounter \u003d 0;","lastModifiedDate":"2023-01-23"},{"lineNumber":92,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":93,"author":{"gitId":"natashatanyt"},"content":"        // Setting up input reading","lastModifiedDate":"2023-01-24"},{"lineNumber":94,"author":{"gitId":"natashatanyt"},"content":"        final Scanner INPUT \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-02"},{"lineNumber":95,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":96,"author":{"gitId":"natashatanyt"},"content":"        startUp();","lastModifiedDate":"2023-01-24"},{"lineNumber":97,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":98,"author":{"gitId":"natashatanyt"},"content":"        // Reads inputs until \"bye\" is sent","lastModifiedDate":"2023-01-23"},{"lineNumber":99,"author":{"gitId":"natashatanyt"},"content":"        while (true) {","lastModifiedDate":"2023-01-18"},{"lineNumber":100,"author":{"gitId":"natashatanyt"},"content":"            String userInput \u003d INPUT.next();","lastModifiedDate":"2023-02-02"},{"lineNumber":101,"author":{"gitId":"natashatanyt"},"content":"            userInput +\u003d INPUT.nextLine();","lastModifiedDate":"2023-02-02"},{"lineNumber":102,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":103,"author":{"gitId":"natashatanyt"},"content":"            // Extracts first word in input","lastModifiedDate":"2023-01-24"},{"lineNumber":104,"author":{"gitId":"natashatanyt"},"content":"            // Used to check if tasks are to be marked/unmarked","lastModifiedDate":"2023-01-24"},{"lineNumber":105,"author":{"gitId":"natashatanyt"},"content":"            String firstWord \u003d userInput.split(\" \", 2)[0].toLowerCase();","lastModifiedDate":"2023-01-31"},{"lineNumber":106,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":107,"author":{"gitId":"natashatanyt"},"content":"            if ((userInput).equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":108,"author":{"gitId":"natashatanyt"},"content":"                shutDown();","lastModifiedDate":"2023-01-24"},{"lineNumber":109,"author":{"gitId":"natashatanyt"},"content":"                return;","lastModifiedDate":"2023-01-18"},{"lineNumber":110,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":111,"author":{"gitId":"natashatanyt"},"content":"            } else if ((userInput).equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":112,"author":{"gitId":"natashatanyt"},"content":"                // Prints all contents of task Array","lastModifiedDate":"2023-01-23"},{"lineNumber":113,"author":{"gitId":"natashatanyt"},"content":"                System.out.println(HORIZONTAL_RULE);","lastModifiedDate":"2023-01-31"},{"lineNumber":114,"author":{"gitId":"natashatanyt"},"content":"                for (int i \u003d 0; i \u003c taskCounter; i++) {","lastModifiedDate":"2023-01-23"},{"lineNumber":115,"author":{"gitId":"natashatanyt"},"content":"                    System.out.println((i + 1) + \". \" + tasks[i]);","lastModifiedDate":"2023-02-02"},{"lineNumber":116,"author":{"gitId":"natashatanyt"},"content":"                }","lastModifiedDate":"2023-01-23"},{"lineNumber":117,"author":{"gitId":"natashatanyt"},"content":"                // Prints total number","lastModifiedDate":"2023-01-24"},{"lineNumber":118,"author":{"gitId":"natashatanyt"},"content":"                System.out.println(\"Total number of tasks: \" + taskCounter);","lastModifiedDate":"2023-01-24"},{"lineNumber":119,"author":{"gitId":"natashatanyt"},"content":"                System.out.println(HORIZONTAL_RULE);","lastModifiedDate":"2023-01-31"},{"lineNumber":120,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":121,"author":{"gitId":"natashatanyt"},"content":"            } else if (firstWord.equalsIgnoreCase(\"mark\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":122,"author":{"gitId":"natashatanyt"},"content":"                // Sets specified task to complete","lastModifiedDate":"2023-01-24"},{"lineNumber":123,"author":{"gitId":"natashatanyt"},"content":"                int taskIndex \u003d Integer.parseInt(userInput.split(\" \", 2)[1]);","lastModifiedDate":"2023-01-24"},{"lineNumber":124,"author":{"gitId":"natashatanyt"},"content":"                tasks[taskIndex - 1].setComplete();","lastModifiedDate":"2023-01-31"},{"lineNumber":125,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":126,"author":{"gitId":"natashatanyt"},"content":"                // Prints acknowledgement","lastModifiedDate":"2023-01-24"},{"lineNumber":127,"author":{"gitId":"natashatanyt"},"content":"                System.out.println(HORIZONTAL_RULE);","lastModifiedDate":"2023-01-31"},{"lineNumber":128,"author":{"gitId":"natashatanyt"},"content":"                System.out.println(\"Marking task \\\"\" + tasks[taskIndex - 1].getTask() + \"\\\" as complete!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":129,"author":{"gitId":"natashatanyt"},"content":"                System.out.println(HORIZONTAL_RULE);","lastModifiedDate":"2023-01-31"},{"lineNumber":130,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":131,"author":{"gitId":"natashatanyt"},"content":"            } else if (firstWord.equalsIgnoreCase(\"unmark\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":132,"author":{"gitId":"natashatanyt"},"content":"                // Sets specified task to incomplete","lastModifiedDate":"2023-01-24"},{"lineNumber":133,"author":{"gitId":"natashatanyt"},"content":"                int taskIndex \u003d Integer.parseInt(userInput.split(\" \", 2)[1]);","lastModifiedDate":"2023-01-24"},{"lineNumber":134,"author":{"gitId":"natashatanyt"},"content":"                tasks[taskIndex - 1].setIncomplete();","lastModifiedDate":"2023-01-31"},{"lineNumber":135,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":136,"author":{"gitId":"natashatanyt"},"content":"                // Prints acknowledgement","lastModifiedDate":"2023-01-24"},{"lineNumber":137,"author":{"gitId":"natashatanyt"},"content":"                System.out.println(HORIZONTAL_RULE);","lastModifiedDate":"2023-01-31"},{"lineNumber":138,"author":{"gitId":"natashatanyt"},"content":"                System.out.println(\"Marking task \\\"\" + tasks[taskIndex - 1].getTask() + \"\\\" as incomplete!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":139,"author":{"gitId":"natashatanyt"},"content":"                System.out.println(HORIZONTAL_RULE);","lastModifiedDate":"2023-01-31"},{"lineNumber":140,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":141,"author":{"gitId":"natashatanyt"},"content":"            } else if (firstWord.equalsIgnoreCase(\"todo\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":142,"author":{"gitId":"natashatanyt"},"content":"                /*","lastModifiedDate":"2023-02-02"},{"lineNumber":143,"author":{"gitId":"natashatanyt"},"content":"                  For to do tasks","lastModifiedDate":"2023-02-02"},{"lineNumber":144,"author":{"gitId":"natashatanyt"},"content":"                  Removes the command word, then adds a new to do with the description to the array","lastModifiedDate":"2023-02-02"},{"lineNumber":145,"author":{"gitId":"natashatanyt"},"content":"                 */","lastModifiedDate":"2023-02-02"},{"lineNumber":146,"author":{"gitId":"natashatanyt"},"content":"                String withoutCommand \u003d removeCommandWord(userInput);","lastModifiedDate":"2023-02-02"},{"lineNumber":147,"author":{"gitId":"natashatanyt"},"content":"                Todo newTodo \u003d new Todo(withoutCommand);","lastModifiedDate":"2023-02-02"},{"lineNumber":148,"author":{"gitId":"natashatanyt"},"content":"                tasks[taskCounter] \u003d newTodo;","lastModifiedDate":"2023-02-02"},{"lineNumber":149,"author":{"gitId":"natashatanyt"},"content":"                taskCounter +\u003d 1;","lastModifiedDate":"2023-01-23"},{"lineNumber":150,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":151,"author":{"gitId":"natashatanyt"},"content":"                // Prints acknowledgement","lastModifiedDate":"2023-01-24"},{"lineNumber":152,"author":{"gitId":"natashatanyt"},"content":"                printAcknowledgement(\"Todo\", withoutCommand, taskCounter);","lastModifiedDate":"2023-02-02"},{"lineNumber":153,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":154,"author":{"gitId":"natashatanyt"},"content":"            } else if (firstWord.equalsIgnoreCase(\"deadline\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":155,"author":{"gitId":"natashatanyt"},"content":"                /*","lastModifiedDate":"2023-02-02"},{"lineNumber":156,"author":{"gitId":"natashatanyt"},"content":"                  For deadline tasks","lastModifiedDate":"2023-02-02"},{"lineNumber":157,"author":{"gitId":"natashatanyt"},"content":"                  Removes the command word and extracts the description","lastModifiedDate":"2023-02-02"},{"lineNumber":158,"author":{"gitId":"natashatanyt"},"content":"                  Also extracts the deadline to the by variable","lastModifiedDate":"2023-02-02"},{"lineNumber":159,"author":{"gitId":"natashatanyt"},"content":"                  Adds a new deadline to the array","lastModifiedDate":"2023-02-02"},{"lineNumber":160,"author":{"gitId":"natashatanyt"},"content":"                 */","lastModifiedDate":"2023-02-02"},{"lineNumber":161,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":162,"author":{"gitId":"natashatanyt"},"content":"                String withoutCommand \u003d removeCommandWord(userInput);","lastModifiedDate":"2023-02-02"},{"lineNumber":163,"author":{"gitId":"natashatanyt"},"content":"                String description \u003d getDescriptionForDeadline(withoutCommand);","lastModifiedDate":"2023-02-02"},{"lineNumber":164,"author":{"gitId":"natashatanyt"},"content":"                String by \u003d getDeadline(withoutCommand);","lastModifiedDate":"2023-02-02"},{"lineNumber":165,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":166,"author":{"gitId":"natashatanyt"},"content":"                Deadline deadline \u003d new Deadline(description, by);","lastModifiedDate":"2023-02-02"},{"lineNumber":167,"author":{"gitId":"natashatanyt"},"content":"                tasks[taskCounter] \u003d deadline;","lastModifiedDate":"2023-02-02"},{"lineNumber":168,"author":{"gitId":"natashatanyt"},"content":"                taskCounter +\u003d 1;","lastModifiedDate":"2023-02-02"},{"lineNumber":169,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":170,"author":{"gitId":"natashatanyt"},"content":"                // Prints acknowledgement","lastModifiedDate":"2023-02-02"},{"lineNumber":171,"author":{"gitId":"natashatanyt"},"content":"                printAcknowledgement(\"Deadline\", description, taskCounter);","lastModifiedDate":"2023-02-02"},{"lineNumber":172,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":173,"author":{"gitId":"natashatanyt"},"content":"            } else if (firstWord.equalsIgnoreCase(\"event\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":174,"author":{"gitId":"natashatanyt"},"content":"                /*","lastModifiedDate":"2023-02-02"},{"lineNumber":175,"author":{"gitId":"natashatanyt"},"content":"                  For event tasks","lastModifiedDate":"2023-02-02"},{"lineNumber":176,"author":{"gitId":"natashatanyt"},"content":"                  Removes the command word and extracts the description","lastModifiedDate":"2023-02-02"},{"lineNumber":177,"author":{"gitId":"natashatanyt"},"content":"                  Also extracts the start and end to the from and to variable","lastModifiedDate":"2023-02-02"},{"lineNumber":178,"author":{"gitId":"natashatanyt"},"content":"                  Adds a new event to the array","lastModifiedDate":"2023-02-02"},{"lineNumber":179,"author":{"gitId":"natashatanyt"},"content":"                 */","lastModifiedDate":"2023-02-02"},{"lineNumber":180,"author":{"gitId":"natashatanyt"},"content":"                String withoutCommand \u003d removeCommandWord(userInput);","lastModifiedDate":"2023-02-02"},{"lineNumber":181,"author":{"gitId":"natashatanyt"},"content":"                String description \u003d getDescriptionForEvent(withoutCommand);","lastModifiedDate":"2023-02-02"},{"lineNumber":182,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":183,"author":{"gitId":"natashatanyt"},"content":"                // Returns in the format [from, to]","lastModifiedDate":"2023-02-02"},{"lineNumber":184,"author":{"gitId":"natashatanyt"},"content":"                String[] timings \u003d getTimings(withoutCommand);","lastModifiedDate":"2023-02-02"},{"lineNumber":185,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":186,"author":{"gitId":"natashatanyt"},"content":"                Event event \u003d new Event(description, timings[0], timings[1]);","lastModifiedDate":"2023-02-02"},{"lineNumber":187,"author":{"gitId":"natashatanyt"},"content":"                tasks[taskCounter] \u003d event;","lastModifiedDate":"2023-02-02"},{"lineNumber":188,"author":{"gitId":"natashatanyt"},"content":"                taskCounter +\u003d 1;","lastModifiedDate":"2023-02-02"},{"lineNumber":189,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":190,"author":{"gitId":"natashatanyt"},"content":"                // Prints acknowledgement","lastModifiedDate":"2023-02-02"},{"lineNumber":191,"author":{"gitId":"natashatanyt"},"content":"                printAcknowledgement(\"Deadline\", description, taskCounter);","lastModifiedDate":"2023-02-02"},{"lineNumber":192,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":193,"author":{"gitId":"natashatanyt"},"content":"            } else {","lastModifiedDate":"2023-02-02"},{"lineNumber":194,"author":{"gitId":"natashatanyt"},"content":"                // If none of the above, invalid command - prints error informing user","lastModifiedDate":"2023-02-02"},{"lineNumber":195,"author":{"gitId":"natashatanyt"},"content":"                System.out.println(HORIZONTAL_RULE);","lastModifiedDate":"2023-01-31"},{"lineNumber":196,"author":{"gitId":"natashatanyt"},"content":"                System.out.println(userInput + \" is an invalid command. Please try again!\");","lastModifiedDate":"2023-02-02"},{"lineNumber":197,"author":{"gitId":"natashatanyt"},"content":"                System.out.println(HORIZONTAL_RULE);","lastModifiedDate":"2023-01-31"},{"lineNumber":198,"author":{"gitId":"natashatanyt"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":199,"author":{"gitId":"natashatanyt"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"natashatanyt":197,"-":4}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"natashatanyt"},"content":"public class Event extends Task{","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"natashatanyt"},"content":"    private String from;","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"natashatanyt"},"content":"    private String to;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"natashatanyt"},"content":"    public Event(String taskName, String from, String to) {","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"natashatanyt"},"content":"        super(taskName);","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"natashatanyt"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"natashatanyt"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"natashatanyt"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"natashatanyt"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"natashatanyt"},"content":"    public String toString() {","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"natashatanyt"},"content":"        return \"[E] [\" + getStatus() + \"] \" + getTask() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"natashatanyt"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"natashatanyt"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"natashatanyt":14}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"natashatanyt"},"content":"public class Task {","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"natashatanyt"},"content":"    private String taskName;","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"natashatanyt"},"content":"    private boolean isComplete;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"natashatanyt"},"content":"    public Task(String taskName) {","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"natashatanyt"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"natashatanyt"},"content":"        this.isComplete \u003d false;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"natashatanyt"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"natashatanyt"},"content":"    public String getTask() {","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"natashatanyt"},"content":"        return taskName;","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"natashatanyt"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"natashatanyt"},"content":"    public Character getStatus() {","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"natashatanyt"},"content":"        if (isComplete) {","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"natashatanyt"},"content":"            return \u0027X\u0027;","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"natashatanyt"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"natashatanyt"},"content":"        return \u0027 \u0027;","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"natashatanyt"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"natashatanyt"},"content":"    public void setComplete() {","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"natashatanyt"},"content":"        this.isComplete \u003d true;","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"natashatanyt"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"natashatanyt"},"content":"    public void setIncomplete() {","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"natashatanyt"},"content":"        this.isComplete \u003d false;","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"natashatanyt"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"natashatanyt"},"content":"    public String printTask() {","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"natashatanyt"},"content":"        return \"[\" + getStatus() + \"]\" + getTask();","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"natashatanyt"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"natashatanyt"},"content":"}","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"natashatanyt":33}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"natashatanyt"},"content":"public class Todo extends Task{","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"natashatanyt"},"content":"    public Todo(String taskName) {","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"natashatanyt"},"content":"        super(taskName);","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"natashatanyt"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"natashatanyt"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"natashatanyt"},"content":"    public String toString() {","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"natashatanyt"},"content":"        return \"[T] [\" + getStatus() + \"] \" + getTask();","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"natashatanyt"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"natashatanyt"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"natashatanyt":10}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"natashatanyt"},"content":"todo borrow book","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"natashatanyt"},"content":"list","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"natashatanyt"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"natashatanyt"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"natashatanyt"},"content":"mark 1","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"natashatanyt"},"content":"list","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"natashatanyt":6}}]
