[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"natashatanyt"},"content":"3. After that, locate the `src/main/java/duke/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"natashatanyt":1,"-":23}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"natashatanyt"},"content":"Thank you for using Duke. Duke is a command-line interface, personal assistant bot which you can use to help track your various tasks and duties throughout the day.","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"natashatanyt"},"content":"# Table of contents","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"natashatanyt"},"content":"1. [Installation](#installation)","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"natashatanyt"},"content":"2. [Quick Note about Formatting and Inputs](#quick-notes-about-formatting-and-inputs)","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"natashatanyt"},"content":"3. [Features](#features)","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"natashatanyt"},"content":"   1. [Tasks](#tasks)","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"natashatanyt"},"content":"      1. [Todo](#todo)","lastModifiedDate":"2023-02-21"},{"lineNumber":10,"author":{"gitId":"natashatanyt"},"content":"      2. [Deadline](#deadline)","lastModifiedDate":"2023-02-21"},{"lineNumber":11,"author":{"gitId":"natashatanyt"},"content":"      3. [Event](#event)","lastModifiedDate":"2023-02-21"},{"lineNumber":12,"author":{"gitId":"natashatanyt"},"content":"   2. [List](#list)","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"natashatanyt"},"content":"   3. [Marking Tasks](#marking-tasks)","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"natashatanyt"},"content":"      1. [Mark Tasks](#mark-tasks)","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"natashatanyt"},"content":"      2. [Unmark Tasks](#unmark-tasks) ","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"natashatanyt"},"content":"   4. [Delete](#delete)","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"natashatanyt"},"content":"   5. [Find](#find)","lastModifiedDate":"2023-02-21"},{"lineNumber":18,"author":{"gitId":"natashatanyt"},"content":"   6. [Bye](#bye)","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"natashatanyt"},"content":"   7. [Saving Files](#saving-files)","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"natashatanyt"},"content":"4. [Command Summary](#command-summary)","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"natashatanyt"},"content":"# Installation","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"natashatanyt"},"content":"1. Before installing and using Duke, do note that Java 11 is required. If you do not already have it installed, you can do so [here](https://www.oracle.com/sg/java/technologies/downloads/#java11). ","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"natashatanyt"},"content":"2. After installing Java 11, please download the .jar file [here](https://github.com/natashatanyt/ip/releases/) and place it in a folder. Doing so ensures that the save-file will not be lost, allowing you to use data that you have previously entered.","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"natashatanyt"},"content":"   ![release.png](images/release.png)","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"natashatanyt"},"content":"   ","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"natashatanyt"},"content":"   Click on `ip.jar` to automatically download the file. Ensure that it is the latest version. ","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"natashatanyt"},"content":"3. Open the command terminal and navigate to the folder where the jar file is.","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"natashatanyt"},"content":"4. Right-click the file and select the \"Copy as path\" option. ","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"natashatanyt"},"content":"5. Open a command terminal by entering `cmd` in your start menu.","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"natashatanyt"},"content":"6. In the terminal, navigate to the location of the folder by doing `cd FILE_PATH`","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"natashatanyt"},"content":"   1. This step is important as it ensures that the saved tasks file will be saved in the same directory. Otherwise, the file will be stored in the current working directory.","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"natashatanyt"},"content":"7. Use the command `java -jar ip.jar` to launch Duke. If done correctly, you will see something like this on your first start up:","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"natashatanyt"},"content":"   ![startup.png](images/startup.png)","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"natashatanyt"},"content":"8. When you are done using the app, enter `bye` to shut the application down. This ensures that Duke will save your data, as saving data is only done during the shut-down process. ","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":40,"author":{"gitId":"natashatanyt"},"content":"# Quick Notes about Formatting and Inputs","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"natashatanyt"},"content":"1. All words in `UPPER_CASE` are parameters, and all words in `this formatting` are instructions that you can copy directly.","lastModifiedDate":"2023-02-16"},{"lineNumber":42,"author":{"gitId":"natashatanyt"},"content":"2. There are **no optional parameters**, so each parameter must have an input. Any mistakes will throw an error message to inform you that there has been a mistake, and what the correct format is. ","lastModifiedDate":"2023-02-21"},{"lineNumber":43,"author":{"gitId":"natashatanyt"},"content":"   1. Do read the user guide carefully as the inclusion of additional parameters may cause Duke to crash. ","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"natashatanyt"},"content":"3. All command words, such as `deadline` or `unmark`, are case-insensitive: any combination of capitalized and non-capitalized characters will still call the correct command, as long as it is spelt correctly.","lastModifiedDate":"2023-02-21"},{"lineNumber":45,"author":{"gitId":"natashatanyt"},"content":"4. `DATE TIME` inputs for deadline and event tasks, ie. using the commands `/by`, `/from` and `/to`, will use the format `YYYY-MM-DD HH:MM`, in 24-hour time, such as entering `2023-01-23 23:59` to represent 23 Jan 2023, 11:59pm.","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"natashatanyt"},"content":"   1. You are required to have both the date and time. Omitting either will cause Duke to throw an error.","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":48,"author":{"gitId":"natashatanyt"},"content":"# Features ","lastModifiedDate":"2023-02-16"},{"lineNumber":49,"author":{"gitId":"natashatanyt"},"content":"The following sections will show you the features of Duke and how to use Duke effectively. It is broken up into a few sections to help you find what you need better. These sections are: [tasks](#tasks), [marking tasks](#marking-tasks), [delete](#delete), [search](#search), and [saving files](#saving-files).","lastModifiedDate":"2023-02-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":51,"author":{"gitId":"natashatanyt"},"content":"## Tasks","lastModifiedDate":"2023-02-16"},{"lineNumber":52,"author":{"gitId":"natashatanyt"},"content":"Duke has 3 classifications of tasks: [todos](#todo), [deadlines](#deadline) and [events](#event). More details on each task can be found in their individual sections.","lastModifiedDate":"2023-02-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":54,"author":{"gitId":"natashatanyt"},"content":"Note: For all tasks, the parameters can consist of multiple words, which will be shown in each subsection. ","lastModifiedDate":"2023-02-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":56,"author":{"gitId":"natashatanyt"},"content":"### Todo","lastModifiedDate":"2023-02-21"},{"lineNumber":57,"author":{"gitId":"natashatanyt"},"content":"Todos are the most basic form of tasks, consisting of only a description.","lastModifiedDate":"2023-02-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":59,"author":{"gitId":"natashatanyt"},"content":"The command usage is `todo TASK`, ie. `todo written assignment`.","lastModifiedDate":"2023-02-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":61,"author":{"gitId":"natashatanyt"},"content":"If the input method is correct, you will see something like this:","lastModifiedDate":"2023-02-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":63,"author":{"gitId":"natashatanyt"},"content":"![todoCorrect.png](images/todoCorrect.png)","lastModifiedDate":"2023-02-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":65,"author":{"gitId":"natashatanyt"},"content":"### Deadline","lastModifiedDate":"2023-02-21"},{"lineNumber":66,"author":{"gitId":"natashatanyt"},"content":"Deadlines consist of a description and a date by which the task has to be completed. ","lastModifiedDate":"2023-02-21"},{"lineNumber":67,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":68,"author":{"gitId":"natashatanyt"},"content":"The command usage is `deadline TASK /by DATE TIME`, ie. `deadline return book /by 2023-12-23 12:55`.","lastModifiedDate":"2023-02-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":70,"author":{"gitId":"natashatanyt"},"content":"If the input method is correct, you will see something like this:","lastModifiedDate":"2023-02-16"},{"lineNumber":71,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":72,"author":{"gitId":"natashatanyt"},"content":"![deadlineCorrect.png](images/deadlineCorrect.png)","lastModifiedDate":"2023-02-21"},{"lineNumber":73,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":74,"author":{"gitId":"natashatanyt"},"content":"### Event","lastModifiedDate":"2023-02-21"},{"lineNumber":75,"author":{"gitId":"natashatanyt"},"content":"Events consist of a description, and two times, indicating the start and end of the event.","lastModifiedDate":"2023-02-21"},{"lineNumber":76,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":77,"author":{"gitId":"natashatanyt"},"content":"The command usage is `event TASK /from DATE /to DATE`, ie. `event project meeting /from 2023-11-23 12:55 /to 2023-11-23 15:55`.","lastModifiedDate":"2023-02-21"},{"lineNumber":78,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":79,"author":{"gitId":"natashatanyt"},"content":"If the input method is correct, you will see something like this:","lastModifiedDate":"2023-02-16"},{"lineNumber":80,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":81,"author":{"gitId":"natashatanyt"},"content":"![eventCorrect.png](images/eventCorrect.png)","lastModifiedDate":"2023-02-21"},{"lineNumber":82,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":83,"author":{"gitId":"natashatanyt"},"content":"## List","lastModifiedDate":"2023-02-16"},{"lineNumber":84,"author":{"gitId":"natashatanyt"},"content":"If you want to see all the tasks that Duke has helped you store, you can do so with the command `list`. This is a single word command which has no additional parameters. Any other parameters will be ignored Duke - for example, if you put \u0027list 1234\u0027, Duke will still process the command as \u0027list\u0027 and ignore \u00271234\u0027.","lastModifiedDate":"2023-03-01"},{"lineNumber":85,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":86,"author":{"gitId":"natashatanyt"},"content":"Your tasks will be printed out by Duke in the same order that you input them, with its index. There are three main sections when your tasks are printed, as shown below:","lastModifiedDate":"2023-02-16"},{"lineNumber":87,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":88,"author":{"gitId":"natashatanyt"},"content":"![list.png](images/list.png)","lastModifiedDate":"2023-02-21"},{"lineNumber":89,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":90,"author":{"gitId":"natashatanyt"},"content":"The first section shows the type of task, with \u0027T\u0027 for todo, \u0027D\u0027 for deadline, and \u0027E\u0027 for event. The next shows the completion status of the task, with an \u0027X\u0027 to show the task is complete and a blank space, \u0027 \u0027, to show that the tasks is incomplete. The last section is the description of the task. ","lastModifiedDate":"2023-02-16"},{"lineNumber":91,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":92,"author":{"gitId":"natashatanyt"},"content":"## Marking Tasks","lastModifiedDate":"2023-02-16"},{"lineNumber":93,"author":{"gitId":"natashatanyt"},"content":"Duke comes with an in-built task tracker, allowing you to mark tasks as completed and uncompleted. By default, tasks are added to the list as incomplete.","lastModifiedDate":"2023-02-16"},{"lineNumber":94,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":95,"author":{"gitId":"natashatanyt"},"content":"To obtain figure out the index of your code, you can use the command [`list`](#list).","lastModifiedDate":"2023-02-16"},{"lineNumber":96,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":97,"author":{"gitId":"natashatanyt"},"content":"### Mark Tasks","lastModifiedDate":"2023-02-16"},{"lineNumber":98,"author":{"gitId":"natashatanyt"},"content":"After you have completed a task, you can use the command `mark INDEX`, ie. `mark 1`. ","lastModifiedDate":"2023-02-16"},{"lineNumber":99,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":100,"author":{"gitId":"natashatanyt"},"content":"If the input method is correct, you will see something like this:","lastModifiedDate":"2023-02-16"},{"lineNumber":101,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":102,"author":{"gitId":"natashatanyt"},"content":"![mark.png](images/mark.png)","lastModifiedDate":"2023-02-21"},{"lineNumber":103,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":104,"author":{"gitId":"natashatanyt"},"content":"### Unmark Tasks","lastModifiedDate":"2023-02-16"},{"lineNumber":105,"author":{"gitId":"natashatanyt"},"content":"If you wish to unmark a task, you can use the command `unmark INDEX`, ie. `unmark 1`.","lastModifiedDate":"2023-02-16"},{"lineNumber":106,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":107,"author":{"gitId":"natashatanyt"},"content":"If the input method is correct, you will see something like this:","lastModifiedDate":"2023-02-16"},{"lineNumber":108,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":109,"author":{"gitId":"natashatanyt"},"content":"![unmark.png](images/unmark.png)","lastModifiedDate":"2023-02-21"},{"lineNumber":110,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":111,"author":{"gitId":"natashatanyt"},"content":"## Delete","lastModifiedDate":"2023-02-16"},{"lineNumber":112,"author":{"gitId":"natashatanyt"},"content":"Currently, there Duke does not have the ability to edit tasks. If you make a mistake, or want to delete a task, you can do so with this feature. ","lastModifiedDate":"2023-02-16"},{"lineNumber":113,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":114,"author":{"gitId":"natashatanyt"},"content":"The command usage is `delete INDEX`, ie. `delete 1`. ","lastModifiedDate":"2023-03-01"},{"lineNumber":115,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":116,"author":{"gitId":"natashatanyt"},"content":"If the input method is correct, you will see something like this:","lastModifiedDate":"2023-02-16"},{"lineNumber":117,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":118,"author":{"gitId":"natashatanyt"},"content":"![delete.png](images/delete.png)","lastModifiedDate":"2023-02-21"},{"lineNumber":119,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":120,"author":{"gitId":"natashatanyt"},"content":"## Find","lastModifiedDate":"2023-02-21"},{"lineNumber":121,"author":{"gitId":"natashatanyt"},"content":"If you wish to find tasks which contain specific words, you can do so with this feature.","lastModifiedDate":"2023-02-21"},{"lineNumber":122,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":123,"author":{"gitId":"natashatanyt"},"content":"The command usage is `find DESCRIPTION`. Currently, Duke is unable to search by time. If you were to try searching for tasks due on `2023-11-23`, Duke will not be able to print out tasks for you, unless it is part of the task\u0027s description. ","lastModifiedDate":"2023-03-01"},{"lineNumber":124,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":125,"author":{"gitId":"natashatanyt"},"content":"If the input method is correct, you will see something like this:","lastModifiedDate":"2023-02-21"},{"lineNumber":126,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":127,"author":{"gitId":"natashatanyt"},"content":"![find.png](images/find.png)","lastModifiedDate":"2023-02-21"},{"lineNumber":128,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":129,"author":{"gitId":"natashatanyt"},"content":"## Bye","lastModifiedDate":"2023-03-02"},{"lineNumber":130,"author":{"gitId":"natashatanyt"},"content":"This command is used when you are done using Duke. It is important to send the command as it ensures that Duke will save the current list.","lastModifiedDate":"2023-03-02"},{"lineNumber":131,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":132,"author":{"gitId":"natashatanyt"},"content":"The command usage is `bye`. ","lastModifiedDate":"2023-03-02"},{"lineNumber":133,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":134,"author":{"gitId":"natashatanyt"},"content":"![bye.png](images/bye.png)","lastModifiedDate":"2023-03-02"},{"lineNumber":135,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":136,"author":{"gitId":"natashatanyt"},"content":"## Saving Files","lastModifiedDate":"2023-02-16"},{"lineNumber":137,"author":{"gitId":"natashatanyt"},"content":"On the first creation of Duke, the file will be created in the current working directory. As mentioned, it is recommended to put the `.jar` file in the same directory as the save file for your reference, if needed.","lastModifiedDate":"2023-02-28"},{"lineNumber":138,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":139,"author":{"gitId":"natashatanyt"},"content":"After entering the exit command, `bye`, Duke will save the contents into a text file (Duke.txt). The file will save each task on a new line, with the order of task type, completion status, and description. Each section is segmented by a slash (`/`), such as the following example:","lastModifiedDate":"2023-02-28"},{"lineNumber":140,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":141,"author":{"gitId":"natashatanyt"},"content":"![savefile.png](images/savefile.png)","lastModifiedDate":"2023-02-28"},{"lineNumber":142,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":143,"author":{"gitId":"natashatanyt"},"content":"If you want to edit the save file, you may do so, but note that improper edits may cause Duke to crash. If Duke fails to read the file, you can delete the file and restart the application. ","lastModifiedDate":"2023-02-16"},{"lineNumber":144,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":145,"author":{"gitId":"natashatanyt"},"content":"# Command Summary","lastModifiedDate":"2023-02-16"},{"lineNumber":146,"author":{"gitId":"natashatanyt"},"content":"This section will give the full list of features that Duke has. If you want to see more details, you can refer to the [Table of Contents](#table-of-contents) to navigate to the section you want.","lastModifiedDate":"2023-02-16"},{"lineNumber":147,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":148,"author":{"gitId":"natashatanyt"},"content":"| Name of Command   | General Format                   | Examples                                                            |","lastModifiedDate":"2023-02-16"},{"lineNumber":149,"author":{"gitId":"natashatanyt"},"content":"|-------------------|----------------------------------|---------------------------------------------------------------------|","lastModifiedDate":"2023-02-21"},{"lineNumber":150,"author":{"gitId":"natashatanyt"},"content":"| Creating Todo     | `todo TASK`                      | `todo written assignment`                                           |","lastModifiedDate":"2023-02-28"},{"lineNumber":151,"author":{"gitId":"natashatanyt"},"content":"| Creating Deadline | `deadline TASK /by DATE`         | `deadline return book /by 2023-12-23 12:55`                         |","lastModifiedDate":"2023-02-21"},{"lineNumber":152,"author":{"gitId":"natashatanyt"},"content":"| Creating Event    | `event TASK /from DATE /to DATE` | `event project meeting /from 2023-11-23 12:55 /to 2023-11-23 15:55` |","lastModifiedDate":"2023-02-21"},{"lineNumber":153,"author":{"gitId":"natashatanyt"},"content":"| List              | `list`                           | `list`                                                              |","lastModifiedDate":"2023-02-16"},{"lineNumber":154,"author":{"gitId":"natashatanyt"},"content":"| Mark Tasks        | `mark INDEX`                     | `mark 1`                                                            |","lastModifiedDate":"2023-02-16"},{"lineNumber":155,"author":{"gitId":"natashatanyt"},"content":"| Unmark Tasks      | `unmark INDEX`                   | `unmark 1`                                                          |","lastModifiedDate":"2023-02-16"},{"lineNumber":156,"author":{"gitId":"natashatanyt"},"content":"| Delete            | `delete INDEX`                   | `delete 1`                                                          |","lastModifiedDate":"2023-02-16"},{"lineNumber":157,"author":{"gitId":"natashatanyt"},"content":"| Find              | `find DESCRIPTION`               | `find book`                                                         |","lastModifiedDate":"2023-02-21"},{"lineNumber":158,"author":{"gitId":"natashatanyt"},"content":"| Bye               | `bye`                            | `bye`                                                               |","lastModifiedDate":"2023-03-02"},{"lineNumber":159,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":160,"author":{"gitId":"natashatanyt"},"content":"# Conclusion","lastModifiedDate":"2023-02-21"},{"lineNumber":161,"author":{"gitId":"natashatanyt"},"content":"Thank you for your interest in Duke! If you have any issues, please reach out to me on Github!","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"natashatanyt":145,"-":16}},{"path":"src/main/java/command/deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"natashatanyt"},"content":"package command;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"natashatanyt"},"content":"import tasks.Deadline;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"natashatanyt"},"content":"import tasks.Task;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"natashatanyt"},"content":"import utility.Parser;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"natashatanyt"},"content":"import utility.Ui;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"natashatanyt"},"content":"import validation.TaskValidation;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"natashatanyt"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"natashatanyt"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"natashatanyt"},"content":"public class deadline {","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"natashatanyt"},"content":"    public static void executeDeadline(String userInput, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"natashatanyt"},"content":"        // Removes the command word","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"natashatanyt"},"content":"        String withoutCommand \u003d Parser.removeCommandWord(userInput);","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"natashatanyt"},"content":"        // Obtains description - name of deadline task","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"natashatanyt"},"content":"        String description \u003d Parser.getDescriptionForDeadline(withoutCommand);","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"natashatanyt"},"content":"        if (!TaskValidation.isNull(description)) {","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"natashatanyt"},"content":"            return;","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"natashatanyt"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"natashatanyt"},"content":"        // Obtains date/time deadline","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"natashatanyt"},"content":"        String by \u003d Parser.getDeadline(withoutCommand);","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"natashatanyt"},"content":"        // Creates a new deadline, parsing the date and time","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"natashatanyt"},"content":"        Deadline deadline \u003d new Deadline(description, LocalDateTime.parse(by, Ui.FORMATTER).format(Ui.FORMATTER));","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"natashatanyt"},"content":"        tasks.add(deadline);","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"natashatanyt"},"content":"        // Prints acknowledgement","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"natashatanyt"},"content":"        Ui.printAcknowledgement(\"Deadline\", description, String.valueOf(tasks.size()));","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"natashatanyt"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"natashatanyt"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"natashatanyt":34}},{"path":"src/main/java/command/delete.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"natashatanyt"},"content":"package command;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"natashatanyt"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"natashatanyt"},"content":"import tasks.Task;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"natashatanyt"},"content":"import utility.Ui;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"natashatanyt"},"content":"public class delete {","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"natashatanyt"},"content":"    public static void executeDelete(String userInput, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"natashatanyt"},"content":"        // Sets specified task to incomplete","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"natashatanyt"},"content":"        int taskIndex \u003d Integer.parseInt(userInput.split(\" \", 2)[1]) - 1;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"natashatanyt"},"content":"        // Prints acknowledgement","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"natashatanyt"},"content":"        Ui.deleteTask((tasks.get(taskIndex - 1)).getTask());","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"natashatanyt"},"content":"        // Deletes task","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"natashatanyt"},"content":"        tasks.remove(taskIndex);","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"natashatanyt"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"natashatanyt"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"natashatanyt":19}},{"path":"src/main/java/command/event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"natashatanyt"},"content":"package command;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"natashatanyt"},"content":"import tasks.Event;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"natashatanyt"},"content":"import tasks.Task;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"natashatanyt"},"content":"import utility.Parser;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"natashatanyt"},"content":"import utility.Ui;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"natashatanyt"},"content":"import validation.TaskValidation;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"natashatanyt"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"natashatanyt"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"natashatanyt"},"content":"public class event {","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"natashatanyt"},"content":"    public static void executeEvent(String userInput, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"natashatanyt"},"content":"        // Removes command word","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"natashatanyt"},"content":"        String withoutCommand \u003d Parser.removeCommandWord(userInput);","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"natashatanyt"},"content":"        // Obtains description - name of the event task","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"natashatanyt"},"content":"        String description \u003d Parser.getDescriptionForEvent(withoutCommand);","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"natashatanyt"},"content":"        if (!TaskValidation.isNull(description)) {","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"natashatanyt"},"content":"            return;","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"natashatanyt"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"natashatanyt"},"content":"        // Returns in the format [from, to]","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"natashatanyt"},"content":"        String[] timings \u003d Parser.getTimings(withoutCommand);","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"natashatanyt"},"content":"        // Creates a new event, parsing the date and time","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"natashatanyt"},"content":"        Event event \u003d new Event(description, LocalDateTime.parse(timings[0], Ui.FORMATTER).format(Ui.FORMATTER), LocalDateTime.parse(timings[1], Ui.FORMATTER).format(Ui.FORMATTER));","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"natashatanyt"},"content":"        tasks.add(event);","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"natashatanyt"},"content":"        // Prints acknowledgement","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"natashatanyt"},"content":"        Ui.printAcknowledgement(\"Event\", description, String.valueOf(tasks.size()));","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"natashatanyt"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"natashatanyt"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"natashatanyt":34}},{"path":"src/main/java/command/find.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"natashatanyt"},"content":"package command;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"natashatanyt"},"content":"import utility.Parser;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"natashatanyt"},"content":"import utility.Ui;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"natashatanyt"},"content":"import tasks.Task;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"natashatanyt"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"natashatanyt"},"content":"public class find {","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"natashatanyt"},"content":"    public static void executeFind(String userInput, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"natashatanyt"},"content":"        // Gets the description","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"natashatanyt"},"content":"        String description \u003d Parser.removeCommandWord(userInput);","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"natashatanyt"},"content":"        int counter \u003d 0;","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"natashatanyt"},"content":"        Ui.findHeader(description);","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"natashatanyt"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"natashatanyt"},"content":"            if (tasks.get(i).contains(description)) {","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"natashatanyt"},"content":"                Ui.findMatching(counter + 1, tasks.get(i));","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"natashatanyt"},"content":"                counter++;","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"natashatanyt"},"content":"            }","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"natashatanyt"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"natashatanyt"},"content":"        Ui.findEnd();","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"natashatanyt"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"natashatanyt"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"natashatanyt":26}},{"path":"src/main/java/command/list.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"natashatanyt"},"content":"package command;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"natashatanyt"},"content":"import utility.Ui;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"natashatanyt"},"content":"import tasks.Task;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"natashatanyt"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"natashatanyt"},"content":"public class list {","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"natashatanyt"},"content":"    public static void printTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"natashatanyt"},"content":"        Ui.printTasks(tasks);","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"natashatanyt"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"natashatanyt"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"natashatanyt":13}},{"path":"src/main/java/command/mark.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"natashatanyt"},"content":"package command;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"natashatanyt"},"content":"import utility.Ui;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"natashatanyt"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"natashatanyt"},"content":"import tasks.Task;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"natashatanyt"},"content":"public class mark {","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"natashatanyt"},"content":"    public static void executeMark(String userInput, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"natashatanyt"},"content":"        int taskIndex \u003d Integer.parseInt(userInput.split(\" \", 2)[1]);","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"natashatanyt"},"content":"        (tasks.get(taskIndex - 1)).setComplete();","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"natashatanyt"},"content":"        // Prints acknowledgement","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"natashatanyt"},"content":"        Ui.markTask(tasks.get(taskIndex - 1).getTask(), \"complete\");","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"natashatanyt"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"natashatanyt"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"natashatanyt":18}},{"path":"src/main/java/command/todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"natashatanyt"},"content":"package command;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"natashatanyt"},"content":"import tasks.Todo;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"natashatanyt"},"content":"import tasks.Task;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"natashatanyt"},"content":"import utility.Parser;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"natashatanyt"},"content":"import utility.Ui;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"natashatanyt"},"content":"import validation.TaskValidation;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"natashatanyt"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"natashatanyt"},"content":"public class todo {","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"natashatanyt"},"content":"    public static void executeTodo(String userInput, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"natashatanyt"},"content":"        // Removes command word to get the description","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"natashatanyt"},"content":"        String description \u003d Parser.removeCommandWord(userInput);","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"natashatanyt"},"content":"        if (!TaskValidation.isNull(description)) {","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"natashatanyt"},"content":"            return;","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"natashatanyt"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"natashatanyt"},"content":"        // Creates a new task","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"natashatanyt"},"content":"        Todo newTodo \u003d new Todo(description);","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"natashatanyt"},"content":"        tasks.add(newTodo);","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"natashatanyt"},"content":"        // Prints acknowledgement","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"natashatanyt"},"content":"        Ui.printAcknowledgement(\"Todo\", description, String.valueOf(tasks.size()));","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"natashatanyt"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"natashatanyt"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"natashatanyt":28}},{"path":"src/main/java/command/unmark.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"natashatanyt"},"content":"package command;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"natashatanyt"},"content":"import utility.Ui;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"natashatanyt"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"natashatanyt"},"content":"import tasks.Task;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"natashatanyt"},"content":"public class unmark {","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"natashatanyt"},"content":"    public static void executeUnmark(String userInput, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"natashatanyt"},"content":"        int taskIndex \u003d Integer.parseInt(userInput.split(\" \", 2)[1]);","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"natashatanyt"},"content":"        (tasks.get(taskIndex - 1)).setIncomplete();","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"natashatanyt"},"content":"        // Prints acknowledgement","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"natashatanyt"},"content":"        Ui.markTask(tasks.get(taskIndex - 1).getTask(), \"incomplete\");","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"natashatanyt"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"natashatanyt"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"natashatanyt":17}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"natashatanyt"},"content":"package duke;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"natashatanyt"},"content":"import tasks.Task;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"natashatanyt"},"content":"import utility.Storage;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"natashatanyt"},"content":"import utility.Ui;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"natashatanyt"},"content":"import utility.Parser;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"natashatanyt"},"content":"import command.*;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"natashatanyt"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"natashatanyt"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"natashatanyt"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-21"},{"lineNumber":12,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"natashatanyt"},"content":"    public void main(String[] args) {","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"natashatanyt"},"content":"        // tasks for storing tasks + taskCounter to track next empty cell","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"natashatanyt"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"natashatanyt"},"content":"        // Setting up input reading","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"natashatanyt"},"content":"        final Scanner INPUT \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"natashatanyt"},"content":"        // Start up sequence","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"natashatanyt"},"content":"        Ui.startUp();","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"natashatanyt"},"content":"        Storage.startFileProcessing(tasks);","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"natashatanyt"},"content":"        Ui.promptInput();","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"natashatanyt"},"content":"        // Reads inputs until \"bye\" is sent","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"natashatanyt"},"content":"        while (true) {","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"natashatanyt"},"content":"            String userInput \u003d INPUT.next();","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"natashatanyt"},"content":"            userInput +\u003d INPUT.nextLine();","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"natashatanyt"},"content":"            // Extracts first word in input","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"natashatanyt"},"content":"            // Used to check if tasks are to be marked/unmarked","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"natashatanyt"},"content":"            String firstWord \u003d Parser.getCommand(userInput);","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"natashatanyt"},"content":"            switch (firstWord) {","lastModifiedDate":"2023-02-06"},{"lineNumber":36,"author":{"gitId":"natashatanyt"},"content":"            case (\"bye\"):","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"natashatanyt"},"content":"                // Shut down process","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"natashatanyt"},"content":"                Storage.endFileProcessing(tasks);","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"natashatanyt"},"content":"                Ui.shutDown();","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"natashatanyt"},"content":"                return;","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"natashatanyt"},"content":"            case (\"find\"):","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"natashatanyt"},"content":"                try {","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"natashatanyt"},"content":"                    find.executeFind(userInput, tasks);","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"natashatanyt"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-21"},{"lineNumber":46,"author":{"gitId":"natashatanyt"},"content":"                    Ui.findError(userInput);","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"natashatanyt"},"content":"                }","lastModifiedDate":"2023-02-21"},{"lineNumber":48,"author":{"gitId":"natashatanyt"},"content":"                break;","lastModifiedDate":"2023-02-21"},{"lineNumber":49,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"natashatanyt"},"content":"            case (\"list\"):","lastModifiedDate":"2023-03-16"},{"lineNumber":51,"author":{"gitId":"natashatanyt"},"content":"                // Prints all contents of task Array","lastModifiedDate":"2023-01-23"},{"lineNumber":52,"author":{"gitId":"natashatanyt"},"content":"                list.printTasks(tasks);","lastModifiedDate":"2023-03-16"},{"lineNumber":53,"author":{"gitId":"natashatanyt"},"content":"                break;","lastModifiedDate":"2023-02-11"},{"lineNumber":54,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":55,"author":{"gitId":"natashatanyt"},"content":"            case (\"mark\"):","lastModifiedDate":"2023-03-16"},{"lineNumber":56,"author":{"gitId":"natashatanyt"},"content":"                try {","lastModifiedDate":"2023-02-06"},{"lineNumber":57,"author":{"gitId":"natashatanyt"},"content":"                    // Sets specified task to complete","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"natashatanyt"},"content":"                    mark.executeMark(userInput, tasks);","lastModifiedDate":"2023-03-16"},{"lineNumber":59,"author":{"gitId":"natashatanyt"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-06"},{"lineNumber":60,"author":{"gitId":"natashatanyt"},"content":"                    // Invalid index","lastModifiedDate":"2023-03-01"},{"lineNumber":61,"author":{"gitId":"natashatanyt"},"content":"                    Ui.invalidIndex();","lastModifiedDate":"2023-03-16"},{"lineNumber":62,"author":{"gitId":"natashatanyt"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-01"},{"lineNumber":63,"author":{"gitId":"natashatanyt"},"content":"                    // Invalid input - a string or non-integer","lastModifiedDate":"2023-03-01"},{"lineNumber":64,"author":{"gitId":"natashatanyt"},"content":"                    Ui.requiresNumber();","lastModifiedDate":"2023-03-16"},{"lineNumber":65,"author":{"gitId":"natashatanyt"},"content":"                }","lastModifiedDate":"2023-02-06"},{"lineNumber":66,"author":{"gitId":"natashatanyt"},"content":"                break;","lastModifiedDate":"2023-02-11"},{"lineNumber":67,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":68,"author":{"gitId":"natashatanyt"},"content":"            case (\"unmark\"):","lastModifiedDate":"2023-03-16"},{"lineNumber":69,"author":{"gitId":"natashatanyt"},"content":"                try {","lastModifiedDate":"2023-02-06"},{"lineNumber":70,"author":{"gitId":"natashatanyt"},"content":"                    // Sets specified task to incomplete","lastModifiedDate":"2023-01-24"},{"lineNumber":71,"author":{"gitId":"natashatanyt"},"content":"                    unmark.executeUnmark(userInput, tasks);","lastModifiedDate":"2023-03-16"},{"lineNumber":72,"author":{"gitId":"natashatanyt"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-06"},{"lineNumber":73,"author":{"gitId":"natashatanyt"},"content":"                    // Invalid index","lastModifiedDate":"2023-03-01"},{"lineNumber":74,"author":{"gitId":"natashatanyt"},"content":"                    Ui.invalidIndex();","lastModifiedDate":"2023-03-16"},{"lineNumber":75,"author":{"gitId":"natashatanyt"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-01"},{"lineNumber":76,"author":{"gitId":"natashatanyt"},"content":"                    // Invalid input - a string or non-integer","lastModifiedDate":"2023-03-01"},{"lineNumber":77,"author":{"gitId":"natashatanyt"},"content":"                    Ui.requiresNumber();","lastModifiedDate":"2023-03-16"},{"lineNumber":78,"author":{"gitId":"natashatanyt"},"content":"                }","lastModifiedDate":"2023-02-06"},{"lineNumber":79,"author":{"gitId":"natashatanyt"},"content":"                break;","lastModifiedDate":"2023-02-11"},{"lineNumber":80,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":81,"author":{"gitId":"natashatanyt"},"content":"            case (\"delete\"):","lastModifiedDate":"2023-03-16"},{"lineNumber":82,"author":{"gitId":"natashatanyt"},"content":"                try {","lastModifiedDate":"2023-02-11"},{"lineNumber":83,"author":{"gitId":"natashatanyt"},"content":"                    delete.executeDelete(userInput, tasks);","lastModifiedDate":"2023-03-16"},{"lineNumber":84,"author":{"gitId":"natashatanyt"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-11"},{"lineNumber":85,"author":{"gitId":"natashatanyt"},"content":"                    // Invalid index","lastModifiedDate":"2023-03-01"},{"lineNumber":86,"author":{"gitId":"natashatanyt"},"content":"                    Ui.invalidIndex();","lastModifiedDate":"2023-03-16"},{"lineNumber":87,"author":{"gitId":"natashatanyt"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-01"},{"lineNumber":88,"author":{"gitId":"natashatanyt"},"content":"                    // Invalid input - a string or non-integer","lastModifiedDate":"2023-03-01"},{"lineNumber":89,"author":{"gitId":"natashatanyt"},"content":"                    Ui.requiresNumber();","lastModifiedDate":"2023-03-16"},{"lineNumber":90,"author":{"gitId":"natashatanyt"},"content":"                }","lastModifiedDate":"2023-02-11"},{"lineNumber":91,"author":{"gitId":"natashatanyt"},"content":"                break;","lastModifiedDate":"2023-02-11"},{"lineNumber":92,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":93,"author":{"gitId":"natashatanyt"},"content":"            case (\"todo\"):","lastModifiedDate":"2023-03-16"},{"lineNumber":94,"author":{"gitId":"natashatanyt"},"content":"                try {","lastModifiedDate":"2023-02-06"},{"lineNumber":95,"author":{"gitId":"natashatanyt"},"content":"                    todo.executeTodo(userInput, tasks);","lastModifiedDate":"2023-03-16"},{"lineNumber":96,"author":{"gitId":"natashatanyt"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-06"},{"lineNumber":97,"author":{"gitId":"natashatanyt"},"content":"                    // Invalid input","lastModifiedDate":"2023-03-01"},{"lineNumber":98,"author":{"gitId":"natashatanyt"},"content":"                    Ui.todoError(userInput);","lastModifiedDate":"2023-03-16"},{"lineNumber":99,"author":{"gitId":"natashatanyt"},"content":"                }","lastModifiedDate":"2023-02-06"},{"lineNumber":100,"author":{"gitId":"natashatanyt"},"content":"                break;","lastModifiedDate":"2023-02-11"},{"lineNumber":101,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":102,"author":{"gitId":"natashatanyt"},"content":"            case (\"deadline\"):","lastModifiedDate":"2023-03-16"},{"lineNumber":103,"author":{"gitId":"natashatanyt"},"content":"                try {","lastModifiedDate":"2023-02-06"},{"lineNumber":104,"author":{"gitId":"natashatanyt"},"content":"                    deadline.executeDeadline(userInput, tasks);","lastModifiedDate":"2023-03-16"},{"lineNumber":105,"author":{"gitId":"natashatanyt"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-06"},{"lineNumber":106,"author":{"gitId":"natashatanyt"},"content":"                    // Invalid input","lastModifiedDate":"2023-03-01"},{"lineNumber":107,"author":{"gitId":"natashatanyt"},"content":"                    Ui.deadlineError(userInput);","lastModifiedDate":"2023-03-16"},{"lineNumber":108,"author":{"gitId":"natashatanyt"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2023-02-21"},{"lineNumber":109,"author":{"gitId":"natashatanyt"},"content":"                    // Invalid time input","lastModifiedDate":"2023-03-01"},{"lineNumber":110,"author":{"gitId":"natashatanyt"},"content":"                    Ui.dateTimeError();","lastModifiedDate":"2023-03-16"},{"lineNumber":111,"author":{"gitId":"natashatanyt"},"content":"                }","lastModifiedDate":"2023-02-06"},{"lineNumber":112,"author":{"gitId":"natashatanyt"},"content":"                break;","lastModifiedDate":"2023-02-11"},{"lineNumber":113,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":114,"author":{"gitId":"natashatanyt"},"content":"            case (\"event\"):","lastModifiedDate":"2023-03-16"},{"lineNumber":115,"author":{"gitId":"natashatanyt"},"content":"                try {","lastModifiedDate":"2023-03-16"},{"lineNumber":116,"author":{"gitId":"natashatanyt"},"content":"                    event.executeEvent(userInput, tasks);","lastModifiedDate":"2023-03-16"},{"lineNumber":117,"author":{"gitId":"natashatanyt"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-06"},{"lineNumber":118,"author":{"gitId":"natashatanyt"},"content":"                    Ui.eventError(userInput);","lastModifiedDate":"2023-03-16"},{"lineNumber":119,"author":{"gitId":"natashatanyt"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2023-02-21"},{"lineNumber":120,"author":{"gitId":"natashatanyt"},"content":"                    Ui.dateTimeError();","lastModifiedDate":"2023-03-16"},{"lineNumber":121,"author":{"gitId":"natashatanyt"},"content":"                }","lastModifiedDate":"2023-02-06"},{"lineNumber":122,"author":{"gitId":"natashatanyt"},"content":"                break;","lastModifiedDate":"2023-02-11"},{"lineNumber":123,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":124,"author":{"gitId":"natashatanyt"},"content":"            default:","lastModifiedDate":"2023-03-16"},{"lineNumber":125,"author":{"gitId":"natashatanyt"},"content":"                // If none of the above, invalid command - prints error informing user","lastModifiedDate":"2023-02-02"},{"lineNumber":126,"author":{"gitId":"natashatanyt"},"content":"                Ui.invalidCommand(userInput);","lastModifiedDate":"2023-03-16"},{"lineNumber":127,"author":{"gitId":"natashatanyt"},"content":"                break;","lastModifiedDate":"2023-02-11"},{"lineNumber":128,"author":{"gitId":"natashatanyt"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":129,"author":{"gitId":"natashatanyt"},"content":"            Ui.promptInput();","lastModifiedDate":"2023-03-16"},{"lineNumber":130,"author":{"gitId":"natashatanyt"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"natashatanyt":129,"-":3}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"natashatanyt"},"content":"package tasks;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"natashatanyt"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"natashatanyt"},"content":"    protected String by;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"natashatanyt"},"content":"    private String type \u003d \"D\";","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"natashatanyt"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"natashatanyt"},"content":"        super(description);","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"natashatanyt"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"natashatanyt"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"natashatanyt"},"content":"    @Override","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"natashatanyt"},"content":"    public String getType() {","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"natashatanyt"},"content":"        return type;","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"natashatanyt"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"natashatanyt"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"natashatanyt"},"content":"    public String toString() {","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"natashatanyt"},"content":"        return \"[\" + type + \"] [\" + getStatus() + \"] \" + getTask() + \" (By: \" + by + \")\";","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"natashatanyt"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"natashatanyt"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"natashatanyt":21}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"natashatanyt"},"content":"package tasks;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"natashatanyt"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-21"},{"lineNumber":4,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":5,"author":{"gitId":"natashatanyt"},"content":"public class Event extends Task {","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"natashatanyt"},"content":"    private String from;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"natashatanyt"},"content":"    private String to;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"natashatanyt"},"content":"    private String type \u003d \"E\";","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"natashatanyt"},"content":"    public Event(String taskName, String from, String to) {","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"natashatanyt"},"content":"        super(taskName);","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"natashatanyt"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"natashatanyt"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"natashatanyt"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"natashatanyt"},"content":"    @Override","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"natashatanyt"},"content":"    public String getType() {","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"natashatanyt"},"content":"        return type;","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"natashatanyt"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"natashatanyt"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"natashatanyt"},"content":"    public String toString() {","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"natashatanyt"},"content":"        return \"[\" + type + \"] [\" + getStatus() + \"] \" + getTask() + \" (From: \" + from + \" To: \" + to + \")\";","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"natashatanyt"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"natashatanyt"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"natashatanyt":25}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"natashatanyt"},"content":"package tasks;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"natashatanyt"},"content":"public class Task {","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"natashatanyt"},"content":"    private String taskName;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"natashatanyt"},"content":"    private boolean isComplete;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"natashatanyt"},"content":"    private String type;","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"natashatanyt"},"content":"    public Task(String taskName) {","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"natashatanyt"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"natashatanyt"},"content":"        this.isComplete \u003d false;","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"natashatanyt"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"natashatanyt"},"content":"    public String getTask() {","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"natashatanyt"},"content":"        return taskName;","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"natashatanyt"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"natashatanyt"},"content":"    public String getType() {","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"natashatanyt"},"content":"        return type;","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"natashatanyt"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"natashatanyt"},"content":"    public Character getStatus() {","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"natashatanyt"},"content":"        if (isComplete) {","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"natashatanyt"},"content":"            return \u0027X\u0027;","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"natashatanyt"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"natashatanyt"},"content":"        return \u0027 \u0027;","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"natashatanyt"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"natashatanyt"},"content":"    public void setComplete() {","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"natashatanyt"},"content":"        this.isComplete \u003d true;","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"natashatanyt"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"natashatanyt"},"content":"    public void setIncomplete() {","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"natashatanyt"},"content":"        this.isComplete \u003d false;","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"natashatanyt"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":36,"author":{"gitId":"natashatanyt"},"content":"    public boolean contains(String description) {","lastModifiedDate":"2023-02-21"},{"lineNumber":37,"author":{"gitId":"natashatanyt"},"content":"        if (getTask().toLowerCase().contains(description.toLowerCase())) {","lastModifiedDate":"2023-02-21"},{"lineNumber":38,"author":{"gitId":"natashatanyt"},"content":"            return true;","lastModifiedDate":"2023-02-21"},{"lineNumber":39,"author":{"gitId":"natashatanyt"},"content":"        }","lastModifiedDate":"2023-02-21"},{"lineNumber":40,"author":{"gitId":"natashatanyt"},"content":"        return false;","lastModifiedDate":"2023-02-21"},{"lineNumber":41,"author":{"gitId":"natashatanyt"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":42,"author":{"gitId":"natashatanyt"},"content":"}","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"natashatanyt":43}},{"path":"src/main/java/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"natashatanyt"},"content":"package tasks;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"natashatanyt"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"natashatanyt"},"content":"    private String type \u003d \"T\";","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"natashatanyt"},"content":"    public Todo(String taskName) {","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"natashatanyt"},"content":"        super(taskName);","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"natashatanyt"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"natashatanyt"},"content":"    @Override","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"natashatanyt"},"content":"    public String getType() {","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"natashatanyt"},"content":"        return type;","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"natashatanyt"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"natashatanyt"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"natashatanyt"},"content":"    public String toString() {","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"natashatanyt"},"content":"        return \"[\" + type + \"] [\" + getStatus() + \"] \" + getTask();","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"natashatanyt"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"natashatanyt"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"natashatanyt":19}},{"path":"src/main/java/utility/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"natashatanyt"},"content":"package utility;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"natashatanyt"},"content":"public class Parser {","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"natashatanyt"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"natashatanyt"},"content":"     * Removes the command word for creating tasks, ie. to do, deadline or event","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"natashatanyt"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"natashatanyt"},"content":"    public static String removeCommandWord(String userInput) {","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"natashatanyt"},"content":"        return userInput.split(\" \", 2)[1];","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"natashatanyt"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"natashatanyt"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"natashatanyt"},"content":"     * Extracts the description given by the user for deadline tasks","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"natashatanyt"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"natashatanyt"},"content":"    public static String getDescriptionForDeadline(String input) {","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"natashatanyt"},"content":"        return input.split(\" /by \", 2)[0];","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"natashatanyt"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"natashatanyt"},"content":"    public static String getCommand(String userInput) {","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"natashatanyt"},"content":"        return userInput.split(\" \", 2)[0].toLowerCase();","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"natashatanyt"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"natashatanyt"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"natashatanyt"},"content":"     * Extracts the deadline for deadline tasks","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"natashatanyt"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"natashatanyt"},"content":"    public static String getDeadline(String input) {","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"natashatanyt"},"content":"        return input.split(\" /by \", 2)[1];","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"natashatanyt"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"natashatanyt"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"natashatanyt"},"content":"     * Extracts the description given by the user for event tasks","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"natashatanyt"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"natashatanyt"},"content":"    public static String getDescriptionForEvent(String input) {","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"natashatanyt"},"content":"        return input.split(\" /from \", 2)[0];","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"natashatanyt"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"natashatanyt"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"natashatanyt"},"content":"     * Extracts the start and end timing for event tasks","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"natashatanyt"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"natashatanyt"},"content":"    public static String[] getTimings(String input) {","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"natashatanyt"},"content":"        String[] timings \u003d new String[2];","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"natashatanyt"},"content":"        String timing \u003d input.split(\" /from \", 2)[1];","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"natashatanyt"},"content":"        timings[0] \u003d timing.split(\" /to \", 2)[0];","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"natashatanyt"},"content":"        timings[1] \u003d timing.split(\" /to \", 2)[1];","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"natashatanyt"},"content":"        return timings;","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"natashatanyt"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":49,"author":{"gitId":"natashatanyt"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"natashatanyt":49}},{"path":"src/main/java/utility/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"natashatanyt"},"content":"package utility;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"natashatanyt"},"content":"import tasks.Deadline;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"natashatanyt"},"content":"import tasks.Event;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"natashatanyt"},"content":"import tasks.Task;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"natashatanyt"},"content":"import tasks.Todo;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"natashatanyt"},"content":"import java.io.File;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"natashatanyt"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"natashatanyt"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"natashatanyt"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"natashatanyt"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"natashatanyt"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"natashatanyt"},"content":"public class Storage {","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"natashatanyt"},"content":"    public static void startFileProcessing(ArrayList\u003cTask\u003e tasks) throws IndexOutOfBoundsException {","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"natashatanyt"},"content":"        try {","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"natashatanyt"},"content":"            File saveFile \u003d new File(\"duke.txt\");","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"natashatanyt"},"content":"            if (saveFile.createNewFile()) {","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"natashatanyt"},"content":"                System.out.println(\"You do not have a save file! Creating one now...\");","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"natashatanyt"},"content":"            } else {","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"natashatanyt"},"content":"                System.out.println(\"You already have a file! Processing contents...\");","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"natashatanyt"},"content":"            }","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"natashatanyt"},"content":"            final Scanner READ_FILE \u003d new Scanner(saveFile);","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"natashatanyt"},"content":"            int counter \u003d 0;","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"natashatanyt"},"content":"            while (READ_FILE.hasNext()) {","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"natashatanyt"},"content":"                String[] savedTask \u003d READ_FILE.nextLine().split(\" / \");","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"natashatanyt"},"content":"                switch (savedTask[0]) {","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"natashatanyt"},"content":"                case \"T\": {","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"natashatanyt"},"content":"                    String temp \u003d savedTask[2];","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"natashatanyt"},"content":"                    Todo newTodo \u003d new Todo(temp);","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"natashatanyt"},"content":"                    tasks.add(newTodo);","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"natashatanyt"},"content":"                    if (savedTask[1].equals(\"X\")) {","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"natashatanyt"},"content":"                        tasks.get(counter).setComplete();","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"natashatanyt"},"content":"                    }","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"natashatanyt"},"content":"                    break;","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"natashatanyt"},"content":"                }","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"natashatanyt"},"content":"                case \"D\": {","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"natashatanyt"},"content":"                    String[] deadlineBreakdown \u003d savedTask[2].split(\" \\\\(By: \");","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"natashatanyt"},"content":"                    String by \u003d deadlineBreakdown[1].substring(0, deadlineBreakdown[1].length() - 1);","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"natashatanyt"},"content":"                    Deadline deadline \u003d new Deadline(deadlineBreakdown[0], LocalDateTime.parse(by, Ui.FORMATTER).format(Ui.FORMATTER));","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"natashatanyt"},"content":"                    tasks.add(deadline);","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"natashatanyt"},"content":"                    if (savedTask[1].equals(\"X\")) {","lastModifiedDate":"2023-03-16"},{"lineNumber":49,"author":{"gitId":"natashatanyt"},"content":"                        tasks.get(counter).setComplete();","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"natashatanyt"},"content":"                    }","lastModifiedDate":"2023-03-16"},{"lineNumber":51,"author":{"gitId":"natashatanyt"},"content":"                    break;","lastModifiedDate":"2023-03-16"},{"lineNumber":52,"author":{"gitId":"natashatanyt"},"content":"                }","lastModifiedDate":"2023-03-16"},{"lineNumber":53,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":54,"author":{"gitId":"natashatanyt"},"content":"                case \"E\": {","lastModifiedDate":"2023-03-16"},{"lineNumber":55,"author":{"gitId":"natashatanyt"},"content":"                    String[] eventBreakdown \u003d savedTask[2].split(\" \\\\(From: \");","lastModifiedDate":"2023-03-16"},{"lineNumber":56,"author":{"gitId":"natashatanyt"},"content":"                    String eventDescription \u003d eventBreakdown[0];","lastModifiedDate":"2023-03-16"},{"lineNumber":57,"author":{"gitId":"natashatanyt"},"content":"                    String[] timeBreakdown \u003d eventBreakdown[1].split(\" To: \");","lastModifiedDate":"2023-03-16"},{"lineNumber":58,"author":{"gitId":"natashatanyt"},"content":"                    String from \u003d timeBreakdown[0];","lastModifiedDate":"2023-03-16"},{"lineNumber":59,"author":{"gitId":"natashatanyt"},"content":"                    String to \u003d timeBreakdown[1].substring(0, timeBreakdown[1].length() - 1);","lastModifiedDate":"2023-03-16"},{"lineNumber":60,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":61,"author":{"gitId":"natashatanyt"},"content":"                    Event event \u003d new Event(eventDescription, LocalDateTime.parse(from, Ui.FORMATTER).format(Ui.FORMATTER), LocalDateTime.parse(to, Ui.FORMATTER).format(Ui.FORMATTER));","lastModifiedDate":"2023-03-16"},{"lineNumber":62,"author":{"gitId":"natashatanyt"},"content":"                    tasks.add(event);","lastModifiedDate":"2023-03-16"},{"lineNumber":63,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":64,"author":{"gitId":"natashatanyt"},"content":"                    if (savedTask[1].equals(\"X\")) {","lastModifiedDate":"2023-03-16"},{"lineNumber":65,"author":{"gitId":"natashatanyt"},"content":"                        tasks.get(counter).setComplete();","lastModifiedDate":"2023-03-16"},{"lineNumber":66,"author":{"gitId":"natashatanyt"},"content":"                    }","lastModifiedDate":"2023-03-16"},{"lineNumber":67,"author":{"gitId":"natashatanyt"},"content":"                    break;","lastModifiedDate":"2023-03-16"},{"lineNumber":68,"author":{"gitId":"natashatanyt"},"content":"                }","lastModifiedDate":"2023-03-16"},{"lineNumber":69,"author":{"gitId":"natashatanyt"},"content":"                }","lastModifiedDate":"2023-03-16"},{"lineNumber":70,"author":{"gitId":"natashatanyt"},"content":"                counter++;","lastModifiedDate":"2023-03-16"},{"lineNumber":71,"author":{"gitId":"natashatanyt"},"content":"            }","lastModifiedDate":"2023-03-16"},{"lineNumber":72,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":73,"author":{"gitId":"natashatanyt"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-16"},{"lineNumber":74,"author":{"gitId":"natashatanyt"},"content":"            System.out.println(\"An error has occurred. Please try again.\");","lastModifiedDate":"2023-03-16"},{"lineNumber":75,"author":{"gitId":"natashatanyt"},"content":"            System.exit(1);","lastModifiedDate":"2023-03-16"},{"lineNumber":76,"author":{"gitId":"natashatanyt"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":77,"author":{"gitId":"natashatanyt"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":78,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":79,"author":{"gitId":"natashatanyt"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":80,"author":{"gitId":"natashatanyt"},"content":"     * Saves tasks upon being given the command \u0027bye\u0027","lastModifiedDate":"2023-03-16"},{"lineNumber":81,"author":{"gitId":"natashatanyt"},"content":"     * For each task in the arraylist, it saves the task in the format of","lastModifiedDate":"2023-03-16"},{"lineNumber":82,"author":{"gitId":"natashatanyt"},"content":"     * type / completion status / task description","lastModifiedDate":"2023-03-16"},{"lineNumber":83,"author":{"gitId":"natashatanyt"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":84,"author":{"gitId":"natashatanyt"},"content":"    public static void endFileProcessing(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-03-16"},{"lineNumber":85,"author":{"gitId":"natashatanyt"},"content":"        try {","lastModifiedDate":"2023-03-16"},{"lineNumber":86,"author":{"gitId":"natashatanyt"},"content":"            System.out.println(\"Saving current tasks...\");","lastModifiedDate":"2023-03-16"},{"lineNumber":87,"author":{"gitId":"natashatanyt"},"content":"            FileWriter saveFile \u003d new FileWriter(\"duke.txt\");","lastModifiedDate":"2023-03-16"},{"lineNumber":88,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":89,"author":{"gitId":"natashatanyt"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); ++i) {","lastModifiedDate":"2023-03-16"},{"lineNumber":90,"author":{"gitId":"natashatanyt"},"content":"                String task \u003d String.valueOf(tasks.get(i));","lastModifiedDate":"2023-03-16"},{"lineNumber":91,"author":{"gitId":"natashatanyt"},"content":"                String[] splitTaskDescription \u003d task.split(\"] \", 3);","lastModifiedDate":"2023-03-16"},{"lineNumber":92,"author":{"gitId":"natashatanyt"},"content":"                saveFile.write(tasks.get(i).getType() + \" / \" + tasks.get(i).getStatus() + \" / \" + splitTaskDescription[2] + \u0027\\n\u0027);","lastModifiedDate":"2023-03-16"},{"lineNumber":93,"author":{"gitId":"natashatanyt"},"content":"            }","lastModifiedDate":"2023-03-16"},{"lineNumber":94,"author":{"gitId":"natashatanyt"},"content":"            saveFile.close();","lastModifiedDate":"2023-03-16"},{"lineNumber":95,"author":{"gitId":"natashatanyt"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-16"},{"lineNumber":96,"author":{"gitId":"natashatanyt"},"content":"            System.out.println(\"An error has occurred. Please try again.\");","lastModifiedDate":"2023-03-16"},{"lineNumber":97,"author":{"gitId":"natashatanyt"},"content":"            System.exit(1);","lastModifiedDate":"2023-03-16"},{"lineNumber":98,"author":{"gitId":"natashatanyt"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":99,"author":{"gitId":"natashatanyt"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":100,"author":{"gitId":"natashatanyt"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"natashatanyt":100}},{"path":"src/main/java/utility/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"natashatanyt"},"content":"package utility;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"natashatanyt"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"natashatanyt"},"content":"import java.util.Locale;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"natashatanyt"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"natashatanyt"},"content":"import tasks.Task;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"natashatanyt"},"content":"public class Ui {","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"natashatanyt"},"content":"    public static final DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"natashatanyt"},"content":"    // Print on start","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"natashatanyt"},"content":"    private static final String LOGO \u003d \" ____        _        \\n|  _ / _   _| | _____ \\n| | | | | | | |/ / _ /\\n| |_| | |_| |   \u003c  __/\\n|____/ /__,_|_|/_/___|\\n\";","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"natashatanyt"},"content":"    // Horizontal Rule to act as a divider","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"natashatanyt"},"content":"    private static final String HORIZONTAL_RULE \u003d \"________________________________________________________________________________\";","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"natashatanyt"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"natashatanyt"},"content":"     * Prints horizontal rule","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"natashatanyt"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"natashatanyt"},"content":"    public static void printHorizontalRule() {","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"natashatanyt"},"content":"        System.out.println(HORIZONTAL_RULE);","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"natashatanyt"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"natashatanyt"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"natashatanyt"},"content":"     * Prints start up text","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"natashatanyt"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"natashatanyt"},"content":"    public static void startUp() {","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"natashatanyt"},"content":"        System.out.println(LOGO);","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"natashatanyt"},"content":"        printHorizontalRule();","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"natashatanyt"},"content":"        System.out.println(\"Hello! I\u0027m Duke.\");","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"natashatanyt"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"natashatanyt"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"natashatanyt"},"content":"     * Prints shut down text","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"natashatanyt"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"natashatanyt"},"content":"    public static void shutDown() {","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"natashatanyt"},"content":"        printHorizontalRule();","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"natashatanyt"},"content":"        System.out.println(\"Shutting Down! Hope to see you again soon!\");","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"natashatanyt"},"content":"        printHorizontalRule();","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"natashatanyt"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"natashatanyt"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"natashatanyt"},"content":"     * Prints an acknowledgement, based on the type of task.","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"natashatanyt"},"content":"     * Also prints the description of the task and the current number of tasks","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"natashatanyt"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"natashatanyt"},"content":"    public static void printAcknowledgement(String taskType, String description, String size) {","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"natashatanyt"},"content":"        printHorizontalRule();","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"natashatanyt"},"content":"        System.out.println(\"Added \" + taskType + \": \" + description);","lastModifiedDate":"2023-03-16"},{"lineNumber":49,"author":{"gitId":"natashatanyt"},"content":"        System.out.println(\"Total Number of Tasks: \" + size);","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"natashatanyt"},"content":"        printHorizontalRule();","lastModifiedDate":"2023-03-16"},{"lineNumber":51,"author":{"gitId":"natashatanyt"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":52,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":53,"author":{"gitId":"natashatanyt"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":54,"author":{"gitId":"natashatanyt"},"content":"     * Prompts user for input","lastModifiedDate":"2023-03-16"},{"lineNumber":55,"author":{"gitId":"natashatanyt"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":56,"author":{"gitId":"natashatanyt"},"content":"    public static void promptInput() {","lastModifiedDate":"2023-03-16"},{"lineNumber":57,"author":{"gitId":"natashatanyt"},"content":"        printHorizontalRule();","lastModifiedDate":"2023-03-16"},{"lineNumber":58,"author":{"gitId":"natashatanyt"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-03-16"},{"lineNumber":59,"author":{"gitId":"natashatanyt"},"content":"        printHorizontalRule();","lastModifiedDate":"2023-03-16"},{"lineNumber":60,"author":{"gitId":"natashatanyt"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":61,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":62,"author":{"gitId":"natashatanyt"},"content":"    public static void markTask(String taskName, String status) {","lastModifiedDate":"2023-03-16"},{"lineNumber":63,"author":{"gitId":"natashatanyt"},"content":"        printHorizontalRule();","lastModifiedDate":"2023-03-16"},{"lineNumber":64,"author":{"gitId":"natashatanyt"},"content":"        System.out.println(\"Marking task \\\"\" + taskName + \"\\\" as \" + status + \"!\");","lastModifiedDate":"2023-03-16"},{"lineNumber":65,"author":{"gitId":"natashatanyt"},"content":"        printHorizontalRule();","lastModifiedDate":"2023-03-16"},{"lineNumber":66,"author":{"gitId":"natashatanyt"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":67,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":68,"author":{"gitId":"natashatanyt"},"content":"    public static void deleteTask(String taskName) {","lastModifiedDate":"2023-03-16"},{"lineNumber":69,"author":{"gitId":"natashatanyt"},"content":"        printHorizontalRule();","lastModifiedDate":"2023-03-16"},{"lineNumber":70,"author":{"gitId":"natashatanyt"},"content":"        System.out.println(\"Deleting task: \\\"\" + taskName + \"\\\"\");","lastModifiedDate":"2023-03-16"},{"lineNumber":71,"author":{"gitId":"natashatanyt"},"content":"        printHorizontalRule();","lastModifiedDate":"2023-03-16"},{"lineNumber":72,"author":{"gitId":"natashatanyt"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":73,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":74,"author":{"gitId":"natashatanyt"},"content":"    public static void printTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-03-16"},{"lineNumber":75,"author":{"gitId":"natashatanyt"},"content":"        printHorizontalRule();","lastModifiedDate":"2023-03-16"},{"lineNumber":76,"author":{"gitId":"natashatanyt"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-03-16"},{"lineNumber":77,"author":{"gitId":"natashatanyt"},"content":"            System.out.println((i + 1) + \". \" + tasks.get(i));","lastModifiedDate":"2023-03-16"},{"lineNumber":78,"author":{"gitId":"natashatanyt"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":79,"author":{"gitId":"natashatanyt"},"content":"        // Prints total number","lastModifiedDate":"2023-03-16"},{"lineNumber":80,"author":{"gitId":"natashatanyt"},"content":"        System.out.println(\"Total number of tasks: \" + tasks.size());","lastModifiedDate":"2023-03-16"},{"lineNumber":81,"author":{"gitId":"natashatanyt"},"content":"        printHorizontalRule();","lastModifiedDate":"2023-03-16"},{"lineNumber":82,"author":{"gitId":"natashatanyt"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":83,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":84,"author":{"gitId":"natashatanyt"},"content":"    public static void findHeader(String description) {","lastModifiedDate":"2023-03-16"},{"lineNumber":85,"author":{"gitId":"natashatanyt"},"content":"        printHorizontalRule();","lastModifiedDate":"2023-03-16"},{"lineNumber":86,"author":{"gitId":"natashatanyt"},"content":"        System.out.println(\"Here are all tasks matching \" + description);","lastModifiedDate":"2023-03-16"},{"lineNumber":87,"author":{"gitId":"natashatanyt"},"content":"        System.out.println(\"The index given here is not reflective of the task\u0027s actual index.\\nHere are all tasks which contain \" + description + \" in your list:\");","lastModifiedDate":"2023-03-16"},{"lineNumber":88,"author":{"gitId":"natashatanyt"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":89,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":90,"author":{"gitId":"natashatanyt"},"content":"    public static void findEnd() {","lastModifiedDate":"2023-03-16"},{"lineNumber":91,"author":{"gitId":"natashatanyt"},"content":"        printHorizontalRule();","lastModifiedDate":"2023-03-16"},{"lineNumber":92,"author":{"gitId":"natashatanyt"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":93,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":94,"author":{"gitId":"natashatanyt"},"content":"    public static void findMatching(int counter, Task task) {","lastModifiedDate":"2023-03-16"},{"lineNumber":95,"author":{"gitId":"natashatanyt"},"content":"        System.out.println((counter) + \". \" + task);","lastModifiedDate":"2023-03-16"},{"lineNumber":96,"author":{"gitId":"natashatanyt"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":97,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":98,"author":{"gitId":"natashatanyt"},"content":"    /*** ERROR MESSAGES ***/","lastModifiedDate":"2023-03-16"},{"lineNumber":99,"author":{"gitId":"natashatanyt"},"content":"    // COMMON ERRORS","lastModifiedDate":"2023-03-16"},{"lineNumber":100,"author":{"gitId":"natashatanyt"},"content":"    public static void invalidCommand(String userInput) {","lastModifiedDate":"2023-03-16"},{"lineNumber":101,"author":{"gitId":"natashatanyt"},"content":"        printHorizontalRule();","lastModifiedDate":"2023-03-16"},{"lineNumber":102,"author":{"gitId":"natashatanyt"},"content":"        System.out.println(userInput + \" is an invalid command. Please try again!\");","lastModifiedDate":"2023-03-16"},{"lineNumber":103,"author":{"gitId":"natashatanyt"},"content":"        printHorizontalRule();","lastModifiedDate":"2023-03-16"},{"lineNumber":104,"author":{"gitId":"natashatanyt"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":105,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":106,"author":{"gitId":"natashatanyt"},"content":"    public static void cannotBeNull() {","lastModifiedDate":"2023-03-16"},{"lineNumber":107,"author":{"gitId":"natashatanyt"},"content":"        printHorizontalRule();","lastModifiedDate":"2023-03-16"},{"lineNumber":108,"author":{"gitId":"natashatanyt"},"content":"        System.out.println(\"Input cannot be empty!\");","lastModifiedDate":"2023-03-16"},{"lineNumber":109,"author":{"gitId":"natashatanyt"},"content":"        printHorizontalRule();","lastModifiedDate":"2023-03-16"},{"lineNumber":110,"author":{"gitId":"natashatanyt"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":111,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":112,"author":{"gitId":"natashatanyt"},"content":"    public static void dateTimeError() {","lastModifiedDate":"2023-03-16"},{"lineNumber":113,"author":{"gitId":"natashatanyt"},"content":"        printHorizontalRule();","lastModifiedDate":"2023-03-16"},{"lineNumber":114,"author":{"gitId":"natashatanyt"},"content":"        System.out.println(\"Wrong date and time format used! The required format is YYYY-MM-DD HH:MM\");","lastModifiedDate":"2023-03-16"},{"lineNumber":115,"author":{"gitId":"natashatanyt"},"content":"        printHorizontalRule();","lastModifiedDate":"2023-03-16"},{"lineNumber":116,"author":{"gitId":"natashatanyt"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":117,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":118,"author":{"gitId":"natashatanyt"},"content":"    public static void invalidIndex() {","lastModifiedDate":"2023-03-16"},{"lineNumber":119,"author":{"gitId":"natashatanyt"},"content":"        printHorizontalRule();","lastModifiedDate":"2023-03-16"},{"lineNumber":120,"author":{"gitId":"natashatanyt"},"content":"        System.out.println(\"Please provide a valid index!\");","lastModifiedDate":"2023-03-16"},{"lineNumber":121,"author":{"gitId":"natashatanyt"},"content":"        printHorizontalRule();","lastModifiedDate":"2023-03-16"},{"lineNumber":122,"author":{"gitId":"natashatanyt"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":123,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":124,"author":{"gitId":"natashatanyt"},"content":"    public static void requiresNumber() {","lastModifiedDate":"2023-03-16"},{"lineNumber":125,"author":{"gitId":"natashatanyt"},"content":"        printHorizontalRule();","lastModifiedDate":"2023-03-16"},{"lineNumber":126,"author":{"gitId":"natashatanyt"},"content":"        System.out.println(\"Please give an integer!\");","lastModifiedDate":"2023-03-16"},{"lineNumber":127,"author":{"gitId":"natashatanyt"},"content":"        printHorizontalRule();","lastModifiedDate":"2023-03-16"},{"lineNumber":128,"author":{"gitId":"natashatanyt"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":129,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":130,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":131,"author":{"gitId":"natashatanyt"},"content":"    // TO DO ERROR","lastModifiedDate":"2023-03-16"},{"lineNumber":132,"author":{"gitId":"natashatanyt"},"content":"    public static void todoError(String userInput) {","lastModifiedDate":"2023-03-16"},{"lineNumber":133,"author":{"gitId":"natashatanyt"},"content":"        printHorizontalRule();","lastModifiedDate":"2023-03-16"},{"lineNumber":134,"author":{"gitId":"natashatanyt"},"content":"        System.out.println(\"Invalid command for todo. Cannot have a blank description!\");","lastModifiedDate":"2023-03-16"},{"lineNumber":135,"author":{"gitId":"natashatanyt"},"content":"        printHorizontalRule();","lastModifiedDate":"2023-03-16"},{"lineNumber":136,"author":{"gitId":"natashatanyt"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":137,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":138,"author":{"gitId":"natashatanyt"},"content":"    // DEADLINE ERROR","lastModifiedDate":"2023-03-16"},{"lineNumber":139,"author":{"gitId":"natashatanyt"},"content":"    public static void deadlineError(String userInput) {","lastModifiedDate":"2023-03-16"},{"lineNumber":140,"author":{"gitId":"natashatanyt"},"content":"        printHorizontalRule();","lastModifiedDate":"2023-03-16"},{"lineNumber":141,"author":{"gitId":"natashatanyt"},"content":"        System.out.println(\"Wrong usage of deadline. Format is: deadline DESCRIPTION /by YYYY-MM-DD HH:MM\");","lastModifiedDate":"2023-03-16"},{"lineNumber":142,"author":{"gitId":"natashatanyt"},"content":"        System.out.println(\"You entered: \" + userInput);","lastModifiedDate":"2023-03-16"},{"lineNumber":143,"author":{"gitId":"natashatanyt"},"content":"        printHorizontalRule();","lastModifiedDate":"2023-03-16"},{"lineNumber":144,"author":{"gitId":"natashatanyt"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":145,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":146,"author":{"gitId":"natashatanyt"},"content":"    // EVENT ERROR","lastModifiedDate":"2023-03-16"},{"lineNumber":147,"author":{"gitId":"natashatanyt"},"content":"    public static void eventError(String userInput) {","lastModifiedDate":"2023-03-16"},{"lineNumber":148,"author":{"gitId":"natashatanyt"},"content":"        printHorizontalRule();","lastModifiedDate":"2023-03-16"},{"lineNumber":149,"author":{"gitId":"natashatanyt"},"content":"        System.out.println(\"Wrong usage of event. Format is: event DESCRIPTION /from YYYY-MM-DD HH:MM /to YYYY-MM-DD HH:MM\");","lastModifiedDate":"2023-03-16"},{"lineNumber":150,"author":{"gitId":"natashatanyt"},"content":"        System.out.println(\"You entered: \" + userInput);","lastModifiedDate":"2023-03-16"},{"lineNumber":151,"author":{"gitId":"natashatanyt"},"content":"        printHorizontalRule();","lastModifiedDate":"2023-03-16"},{"lineNumber":152,"author":{"gitId":"natashatanyt"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":153,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":154,"author":{"gitId":"natashatanyt"},"content":"    // FIND ERROR","lastModifiedDate":"2023-03-16"},{"lineNumber":155,"author":{"gitId":"natashatanyt"},"content":"    public static void findError(String userInput) {","lastModifiedDate":"2023-03-16"},{"lineNumber":156,"author":{"gitId":"natashatanyt"},"content":"        printHorizontalRule();","lastModifiedDate":"2023-03-16"},{"lineNumber":157,"author":{"gitId":"natashatanyt"},"content":"        System.out.println(\"Wrong usage of find. Format is: find DESCRIPTION\");","lastModifiedDate":"2023-03-16"},{"lineNumber":158,"author":{"gitId":"natashatanyt"},"content":"        System.out.println(\"You entered: \" + userInput);","lastModifiedDate":"2023-03-16"},{"lineNumber":159,"author":{"gitId":"natashatanyt"},"content":"        printHorizontalRule();","lastModifiedDate":"2023-03-16"},{"lineNumber":160,"author":{"gitId":"natashatanyt"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":161,"author":{"gitId":"natashatanyt"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"natashatanyt":161}},{"path":"src/main/java/validation/TaskValidation.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"natashatanyt"},"content":"package validation;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"natashatanyt"},"content":"import utility.Ui;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"natashatanyt"},"content":"public class TaskValidation {","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"natashatanyt"},"content":"    public static boolean isNull(String description) {","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"natashatanyt"},"content":"        String removeWhitespace \u003d description.trim();","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"natashatanyt"},"content":"        if (removeWhitespace.equals(\"\")) {","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"natashatanyt"},"content":"            Ui.cannotBeNull();","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"natashatanyt"},"content":"            return false;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"natashatanyt"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"natashatanyt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"natashatanyt"},"content":"        return true;","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"natashatanyt"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"natashatanyt"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"natashatanyt":16}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"natashatanyt"},"content":"todo borrow book","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"natashatanyt"},"content":"list","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"natashatanyt"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"natashatanyt"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"natashatanyt"},"content":"mark 1","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"natashatanyt"},"content":"list","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"natashatanyt":6}}]
