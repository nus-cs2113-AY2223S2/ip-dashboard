[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jeraldchen"},"content":"public class Deadline extends Task{","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Jeraldchen"},"content":"    protected String by;","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"Jeraldchen"},"content":"    public Deadline (String description, String by) {","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"Jeraldchen"},"content":"        super(description);","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"Jeraldchen"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"Jeraldchen"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"Jeraldchen"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"Jeraldchen"},"content":"    public String toString() {","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Jeraldchen"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"Jeraldchen"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"Jeraldchen"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"Jeraldchen":11}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jeraldchen"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"Jeraldchen"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"Jeraldchen"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"Jeraldchen"},"content":"    public static void printLine() {","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"Jeraldchen"},"content":"        System.out.println(\"______________________________________________________________\");","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"Jeraldchen"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"Jeraldchen"},"content":"    private static void checkEmpty(String lowerCaseLine) throws DukeException {","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"Jeraldchen"},"content":"        if (lowerCaseLine.equals(\"todo\") || lowerCaseLine.equals(\"deadline\") || lowerCaseLine.equals(\"event\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"Jeraldchen"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a \" + lowerCaseLine + \" cannot be empty.\");","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"Jeraldchen"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"Jeraldchen"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"Jeraldchen"},"content":"    private static void checkCommand(String lowerCaseLine) throws DukeException {","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"Jeraldchen"},"content":"        if (!lowerCaseLine.equals(\"list\") \u0026\u0026 !lowerCaseLine.equals(\"bye\") \u0026\u0026 !lowerCaseLine.contains(\"mark\") \u0026\u0026 !lowerCaseLine.contains(\"unmark\") \u0026\u0026 !lowerCaseLine.contains(\"todo\") \u0026\u0026 !lowerCaseLine.contains(\"deadline\") \u0026\u0026 !lowerCaseLine.contains(\"event\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"Jeraldchen"},"content":"            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"Jeraldchen"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"Jeraldchen"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"Jeraldchen"},"content":"        String line;","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"Jeraldchen"},"content":"        String lowerCaseLine;","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"Jeraldchen"},"content":"        Task[] textList \u003d new Task[100]; //store in array of Tasks to track both description and mark status","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"Jeraldchen"},"content":"        int textListCount \u003d 0;","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"Jeraldchen"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"Jeraldchen"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":25,"author":{"gitId":"Jeraldchen"},"content":"        printLine();","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"Jeraldchen"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");","lastModifiedDate":"2023-01-14"},{"lineNumber":27,"author":{"gitId":"Jeraldchen"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-01-14"},{"lineNumber":28,"author":{"gitId":"Jeraldchen"},"content":"        printLine();","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"Jeraldchen"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":30,"author":{"gitId":"Jeraldchen"},"content":"        while(true) {","lastModifiedDate":"2023-01-21"},{"lineNumber":31,"author":{"gitId":"Jeraldchen"},"content":"            line \u003d in.nextLine();","lastModifiedDate":"2023-01-21"},{"lineNumber":32,"author":{"gitId":"Jeraldchen"},"content":"            lowerCaseLine \u003d line.toLowerCase();","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"Jeraldchen"},"content":"            Task task \u003d new Task(line);","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"Jeraldchen"},"content":"            printLine();","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"Jeraldchen"},"content":"            if (lowerCaseLine.equals(\"bye\")) {","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"Jeraldchen"},"content":"                System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-14"},{"lineNumber":37,"author":{"gitId":"Jeraldchen"},"content":"                printLine();","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"Jeraldchen"},"content":"                return;","lastModifiedDate":"2023-01-21"},{"lineNumber":39,"author":{"gitId":"Jeraldchen"},"content":"            } else if (lowerCaseLine.equals(\"list\")) { //if input is list","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"Jeraldchen"},"content":"                System.out.println(\"Here are the tasks in your list: \");","lastModifiedDate":"2023-01-21"},{"lineNumber":41,"author":{"gitId":"Jeraldchen"},"content":"                for (int i \u003d 0; i \u003c textListCount; ++i) {","lastModifiedDate":"2023-01-21"},{"lineNumber":42,"author":{"gitId":"Jeraldchen"},"content":"                    String listLine \u003d i+1 + \". \" + textList[i].toString();","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"Jeraldchen"},"content":"                    System.out.println(listLine);","lastModifiedDate":"2023-01-21"},{"lineNumber":44,"author":{"gitId":"Jeraldchen"},"content":"                }","lastModifiedDate":"2023-01-21"},{"lineNumber":45,"author":{"gitId":"Jeraldchen"},"content":"                printLine();","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"Jeraldchen"},"content":"            } else if (lowerCaseLine.contains(\"mark\") \u0026\u0026 !lowerCaseLine.contains(\"unmark\")) { //mark is in unmark so need to check like this to avoid unmark being detected as mark","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"Jeraldchen"},"content":"                int indexOfTask \u003d Integer.parseInt(lowerCaseLine.substring(5)) - 1; //find index of the task number starting from 0","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"Jeraldchen"},"content":"                textList[indexOfTask].markAsDone();","lastModifiedDate":"2023-01-21"},{"lineNumber":49,"author":{"gitId":"Jeraldchen"},"content":"                System.out.println(\"Nice! I\u0027ve marked this task as done: \");","lastModifiedDate":"2023-01-21"},{"lineNumber":50,"author":{"gitId":"Jeraldchen"},"content":"                System.out.println(\" \" + textList[indexOfTask].toString());","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"Jeraldchen"},"content":"                printLine();","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"Jeraldchen"},"content":"            } else if (lowerCaseLine.contains(\"unmark\")) {","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"Jeraldchen"},"content":"                int indexOfTask \u003d Integer.parseInt(lowerCaseLine.substring(7)) - 1;","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"Jeraldchen"},"content":"                textList[indexOfTask].unmarkAsDone();","lastModifiedDate":"2023-01-21"},{"lineNumber":55,"author":{"gitId":"Jeraldchen"},"content":"                System.out.println(\"OK, I\u0027ve marked this task as not done yet: \");","lastModifiedDate":"2023-01-21"},{"lineNumber":56,"author":{"gitId":"Jeraldchen"},"content":"                System.out.println(\" \" + textList[indexOfTask].toString());","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"Jeraldchen"},"content":"                printLine();","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"Jeraldchen"},"content":"            }","lastModifiedDate":"2023-01-21"},{"lineNumber":59,"author":{"gitId":"Jeraldchen"},"content":"            else { //if input is any other text","lastModifiedDate":"2023-01-21"},{"lineNumber":60,"author":{"gitId":"Jeraldchen"},"content":"                if (lowerCaseLine.contains(\"todo\")) {","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"Jeraldchen"},"content":"                    try {","lastModifiedDate":"2023-02-02"},{"lineNumber":62,"author":{"gitId":"Jeraldchen"},"content":"                        checkEmpty(lowerCaseLine);","lastModifiedDate":"2023-02-02"},{"lineNumber":63,"author":{"gitId":"Jeraldchen"},"content":"                        task \u003d new Todo(line.substring(5));","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"Jeraldchen"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2023-02-02"},{"lineNumber":65,"author":{"gitId":"Jeraldchen"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2023-02-02"},{"lineNumber":66,"author":{"gitId":"Jeraldchen"},"content":"                        printLine();","lastModifiedDate":"2023-02-02"},{"lineNumber":67,"author":{"gitId":"Jeraldchen"},"content":"                        continue;","lastModifiedDate":"2023-02-02"},{"lineNumber":68,"author":{"gitId":"Jeraldchen"},"content":"                    }","lastModifiedDate":"2023-02-02"},{"lineNumber":69,"author":{"gitId":"Jeraldchen"},"content":"                } else if (lowerCaseLine.contains(\"deadline\")) {","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"Jeraldchen"},"content":"                    try {","lastModifiedDate":"2023-02-02"},{"lineNumber":71,"author":{"gitId":"Jeraldchen"},"content":"                        checkEmpty(lowerCaseLine);","lastModifiedDate":"2023-02-02"},{"lineNumber":72,"author":{"gitId":"Jeraldchen"},"content":"                        int indexOfBy \u003d line.indexOf(\"/by\");","lastModifiedDate":"2023-01-28"},{"lineNumber":73,"author":{"gitId":"Jeraldchen"},"content":"                        task \u003d new Deadline(line.substring(9, indexOfBy), line.substring(indexOfBy + 4));","lastModifiedDate":"2023-01-28"},{"lineNumber":74,"author":{"gitId":"Jeraldchen"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2023-02-02"},{"lineNumber":75,"author":{"gitId":"Jeraldchen"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2023-02-02"},{"lineNumber":76,"author":{"gitId":"Jeraldchen"},"content":"                        printLine();","lastModifiedDate":"2023-02-02"},{"lineNumber":77,"author":{"gitId":"Jeraldchen"},"content":"                        continue;","lastModifiedDate":"2023-02-02"},{"lineNumber":78,"author":{"gitId":"Jeraldchen"},"content":"                    }","lastModifiedDate":"2023-02-02"},{"lineNumber":79,"author":{"gitId":"Jeraldchen"},"content":"                } else if (lowerCaseLine.contains(\"event\")) {","lastModifiedDate":"2023-01-28"},{"lineNumber":80,"author":{"gitId":"Jeraldchen"},"content":"                    try {","lastModifiedDate":"2023-02-02"},{"lineNumber":81,"author":{"gitId":"Jeraldchen"},"content":"                        checkEmpty(lowerCaseLine);","lastModifiedDate":"2023-02-02"},{"lineNumber":82,"author":{"gitId":"Jeraldchen"},"content":"                        int indexOfFrom \u003d line.indexOf(\"/from\");","lastModifiedDate":"2023-01-28"},{"lineNumber":83,"author":{"gitId":"Jeraldchen"},"content":"                        int indexOfTo \u003d line.indexOf(\"/to\");","lastModifiedDate":"2023-01-28"},{"lineNumber":84,"author":{"gitId":"Jeraldchen"},"content":"                        task \u003d new Event(line.substring(6, indexOfFrom), line.substring(indexOfFrom + 6, indexOfTo), line.substring(indexOfTo + 4));","lastModifiedDate":"2023-01-28"},{"lineNumber":85,"author":{"gitId":"Jeraldchen"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2023-02-02"},{"lineNumber":86,"author":{"gitId":"Jeraldchen"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2023-02-02"},{"lineNumber":87,"author":{"gitId":"Jeraldchen"},"content":"                        printLine();","lastModifiedDate":"2023-02-02"},{"lineNumber":88,"author":{"gitId":"Jeraldchen"},"content":"                        continue;","lastModifiedDate":"2023-02-02"},{"lineNumber":89,"author":{"gitId":"Jeraldchen"},"content":"                    }","lastModifiedDate":"2023-01-28"},{"lineNumber":90,"author":{"gitId":"Jeraldchen"},"content":"                }","lastModifiedDate":"2023-02-02"},{"lineNumber":91,"author":{"gitId":"Jeraldchen"},"content":"                try {","lastModifiedDate":"2023-02-02"},{"lineNumber":92,"author":{"gitId":"Jeraldchen"},"content":"                    checkCommand(lowerCaseLine);","lastModifiedDate":"2023-02-02"},{"lineNumber":93,"author":{"gitId":"Jeraldchen"},"content":"                    textList[textListCount] \u003d task; //add all input except for list, bye, mark and unmark to array of tasks","lastModifiedDate":"2023-01-28"},{"lineNumber":94,"author":{"gitId":"Jeraldchen"},"content":"                    textListCount++; //counter to help input tasks into correct index in tasks array","lastModifiedDate":"2023-01-21"},{"lineNumber":95,"author":{"gitId":"Jeraldchen"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task: \");","lastModifiedDate":"2023-01-28"},{"lineNumber":96,"author":{"gitId":"Jeraldchen"},"content":"                    System.out.println(\" \" + task.toString());","lastModifiedDate":"2023-01-28"},{"lineNumber":97,"author":{"gitId":"Jeraldchen"},"content":"                    System.out.println(\"Now you have \" + textListCount + \" tasks in the list.\");","lastModifiedDate":"2023-01-28"},{"lineNumber":98,"author":{"gitId":"Jeraldchen"},"content":"                    printLine();","lastModifiedDate":"2023-01-28"},{"lineNumber":99,"author":{"gitId":"Jeraldchen"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-02-02"},{"lineNumber":100,"author":{"gitId":"Jeraldchen"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2023-02-02"},{"lineNumber":101,"author":{"gitId":"Jeraldchen"},"content":"                    printLine();","lastModifiedDate":"2023-02-02"},{"lineNumber":102,"author":{"gitId":"Jeraldchen"},"content":"                    continue;","lastModifiedDate":"2023-02-02"},{"lineNumber":103,"author":{"gitId":"Jeraldchen"},"content":"                }","lastModifiedDate":"2023-02-02"},{"lineNumber":104,"author":{"gitId":"Jeraldchen"},"content":"            }","lastModifiedDate":"2023-01-21"},{"lineNumber":105,"author":{"gitId":"Jeraldchen"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Jeraldchen":103,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jeraldchen"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"Jeraldchen"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"Jeraldchen"},"content":"        super(errorMessage);","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"Jeraldchen"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"Jeraldchen"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"Jeraldchen":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jeraldchen"},"content":"public class Event extends Task{","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Jeraldchen"},"content":"    protected String from;","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"Jeraldchen"},"content":"    protected String to;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"Jeraldchen"},"content":"    public Event (String description, String from, String to) {","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"Jeraldchen"},"content":"        super(description);","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"Jeraldchen"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"Jeraldchen"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"Jeraldchen"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Jeraldchen"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"Jeraldchen"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"Jeraldchen"},"content":"    public String toString() {","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"Jeraldchen"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"Jeraldchen"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"Jeraldchen"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"Jeraldchen":14}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jeraldchen"},"content":"public class Task {","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"Jeraldchen"},"content":"    protected String description;","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"Jeraldchen"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"Jeraldchen"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"Jeraldchen"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"Jeraldchen"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"Jeraldchen"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"Jeraldchen"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"Jeraldchen"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"Jeraldchen"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"Jeraldchen"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"Jeraldchen"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"Jeraldchen"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"Jeraldchen"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"Jeraldchen"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"Jeraldchen"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"Jeraldchen"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"Jeraldchen"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"Jeraldchen"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"Jeraldchen"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"Jeraldchen"},"content":"    public String toString() {","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"Jeraldchen"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"Jeraldchen"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"Jeraldchen"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"Jeraldchen":24}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jeraldchen"},"content":"public class Todo extends Task{","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Jeraldchen"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"Jeraldchen"},"content":"        super(description);","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"Jeraldchen"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"Jeraldchen"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"Jeraldchen"},"content":"    public String toString() {","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"Jeraldchen"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"Jeraldchen"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Jeraldchen"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"Jeraldchen":9}}]
