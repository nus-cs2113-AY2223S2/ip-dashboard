[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"RuiShengGit"},"content":"Duke is a Personal Assistant Chatbot that helps a person to keep track of various things.","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"RuiShengGit"},"content":"### Add tasks","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":8,"author":{"gitId":"RuiShengGit"},"content":"There are 3 types of tasks that can be added to the task list","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"RuiShengGit"},"content":"   * todo task (represented with [T])","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"RuiShengGit"},"content":"   * deadline task (represented with [D])","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"RuiShengGit"},"content":"   * event task (represented with [E])","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":13,"author":{"gitId":"RuiShengGit"},"content":"### Lists tasks","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":15,"author":{"gitId":"RuiShengGit"},"content":"Lists all the tasks currently stored in the task list","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"RuiShengGit"},"content":"### Delete tasks","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"RuiShengGit"},"content":"Deletes a task from your task list with a specified index","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"RuiShengGit"},"content":"### Find tasks","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"RuiShengGit"},"content":"Find all the tasks currently stored in the task list which contains a specific substring","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"RuiShengGit"},"content":"### Local Database","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"RuiShengGit"},"content":"Automatically stores users\u0027 task list into the hard drive of their computer. The task list can be loaded up upon startup of the program again.","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":31,"author":{"gitId":"RuiShengGit"},"content":"### `todo` - Add a todo task","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"RuiShengGit"},"content":"Adds a new todo task to the task list. The description of the task has to be provided.","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"RuiShengGit"},"content":"Format: `todo \u003cdescription\u003e`","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"RuiShengGit"},"content":"`todo CS2113 assignment`","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":41,"author":{"gitId":"RuiShengGit"},"content":"Expected outcome:","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"RuiShengGit"},"content":"* Creates a new todo task to be added to the task list.","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"RuiShengGit"},"content":"  * `COMMAND`:  todo","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"RuiShengGit"},"content":"  * `DESCRIPTION`: CS2113 assignment","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":47,"author":{"gitId":"RuiShengGit"},"content":"```","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"RuiShengGit"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"RuiShengGit"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-02-24"},{"lineNumber":50,"author":{"gitId":"RuiShengGit"},"content":"  [T][ ] CS2113 assignment","lastModifiedDate":"2023-02-24"},{"lineNumber":51,"author":{"gitId":"RuiShengGit"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2023-02-24"},{"lineNumber":52,"author":{"gitId":"RuiShengGit"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-24"},{"lineNumber":53,"author":{"gitId":"RuiShengGit"},"content":"```","lastModifiedDate":"2023-02-24"},{"lineNumber":54,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":55,"author":{"gitId":"RuiShengGit"},"content":"### `list` - Add a deadline task","lastModifiedDate":"2023-02-24"},{"lineNumber":56,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":57,"author":{"gitId":"RuiShengGit"},"content":"Adds a new deadline task to the task list. The description and the deadline of the task has to be provided.","lastModifiedDate":"2023-02-24"},{"lineNumber":58,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":59,"author":{"gitId":"RuiShengGit"},"content":"Format: `deadline \u003cdescription\u003e /by \u003cdeadline\u003e`","lastModifiedDate":"2023-02-24"},{"lineNumber":60,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":61,"author":{"gitId":"RuiShengGit"},"content":"Example of usage:","lastModifiedDate":"2023-02-24"},{"lineNumber":62,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":63,"author":{"gitId":"RuiShengGit"},"content":"`deadline CS2113 assignment /by Friday 3pm`","lastModifiedDate":"2023-02-24"},{"lineNumber":64,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":65,"author":{"gitId":"RuiShengGit"},"content":"Expected outcome:","lastModifiedDate":"2023-02-24"},{"lineNumber":66,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":67,"author":{"gitId":"RuiShengGit"},"content":"* Creates a new deadline task to be added to the task list.","lastModifiedDate":"2023-02-24"},{"lineNumber":68,"author":{"gitId":"RuiShengGit"},"content":"    * `COMMAND`:  deadline","lastModifiedDate":"2023-02-24"},{"lineNumber":69,"author":{"gitId":"RuiShengGit"},"content":"    * `DESCRIPTION`: CS2113 assignment","lastModifiedDate":"2023-02-24"},{"lineNumber":70,"author":{"gitId":"RuiShengGit"},"content":"    * `DEADLINE`: Friday 3pm","lastModifiedDate":"2023-02-24"},{"lineNumber":71,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":72,"author":{"gitId":"RuiShengGit"},"content":"```","lastModifiedDate":"2023-02-24"},{"lineNumber":73,"author":{"gitId":"RuiShengGit"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-24"},{"lineNumber":74,"author":{"gitId":"RuiShengGit"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-02-24"},{"lineNumber":75,"author":{"gitId":"RuiShengGit"},"content":"  [D][ ] CS2113 assignment (by: Friday 3pm)","lastModifiedDate":"2023-02-24"},{"lineNumber":76,"author":{"gitId":"RuiShengGit"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2023-02-24"},{"lineNumber":77,"author":{"gitId":"RuiShengGit"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-24"},{"lineNumber":78,"author":{"gitId":"RuiShengGit"},"content":"```","lastModifiedDate":"2023-02-24"},{"lineNumber":79,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":80,"author":{"gitId":"RuiShengGit"},"content":"### `event` - Add an event task","lastModifiedDate":"2023-02-24"},{"lineNumber":81,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":82,"author":{"gitId":"RuiShengGit"},"content":"Adds a new event task to the task list. The description and the duration of the task has to be provided.","lastModifiedDate":"2023-02-24"},{"lineNumber":83,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":84,"author":{"gitId":"RuiShengGit"},"content":"Format: `event \u003cdescription\u003e /from \u003cstart\u003e to \u003cend\u003e`","lastModifiedDate":"2023-02-24"},{"lineNumber":85,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":86,"author":{"gitId":"RuiShengGit"},"content":"Example of usage:","lastModifiedDate":"2023-02-24"},{"lineNumber":87,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":88,"author":{"gitId":"RuiShengGit"},"content":"`event CS2113 Lecture /from 4pm /to 6pm`","lastModifiedDate":"2023-02-24"},{"lineNumber":89,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":90,"author":{"gitId":"RuiShengGit"},"content":"Expected outcome:","lastModifiedDate":"2023-02-24"},{"lineNumber":91,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":92,"author":{"gitId":"RuiShengGit"},"content":"* Creates a new event task to be added to the task list.","lastModifiedDate":"2023-02-24"},{"lineNumber":93,"author":{"gitId":"RuiShengGit"},"content":"    * `COMMAND`:  ","lastModifiedDate":"2023-02-24"},{"lineNumber":94,"author":{"gitId":"RuiShengGit"},"content":"    * `DESCRIPTION`: CS2113 assignment","lastModifiedDate":"2023-02-24"},{"lineNumber":95,"author":{"gitId":"RuiShengGit"},"content":"    * `FROM`: 4pm","lastModifiedDate":"2023-02-24"},{"lineNumber":96,"author":{"gitId":"RuiShengGit"},"content":"    * `TO`: 6pm","lastModifiedDate":"2023-02-24"},{"lineNumber":97,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":98,"author":{"gitId":"RuiShengGit"},"content":"```","lastModifiedDate":"2023-02-24"},{"lineNumber":99,"author":{"gitId":"RuiShengGit"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-24"},{"lineNumber":100,"author":{"gitId":"RuiShengGit"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-02-24"},{"lineNumber":101,"author":{"gitId":"RuiShengGit"},"content":"  [E][ ] CS2113 Lecture (from: 4pm to: 6pm)","lastModifiedDate":"2023-02-24"},{"lineNumber":102,"author":{"gitId":"RuiShengGit"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2023-02-24"},{"lineNumber":103,"author":{"gitId":"RuiShengGit"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-24"},{"lineNumber":104,"author":{"gitId":"RuiShengGit"},"content":"```","lastModifiedDate":"2023-02-24"},{"lineNumber":105,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":106,"author":{"gitId":"RuiShengGit"},"content":"### `list` - List all tasks","lastModifiedDate":"2023-02-24"},{"lineNumber":107,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":108,"author":{"gitId":"RuiShengGit"},"content":"Displays all the tasks currently stored in the task list.","lastModifiedDate":"2023-02-24"},{"lineNumber":109,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":110,"author":{"gitId":"RuiShengGit"},"content":"Format: `list`","lastModifiedDate":"2023-02-24"},{"lineNumber":111,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":112,"author":{"gitId":"RuiShengGit"},"content":"Example of usage:","lastModifiedDate":"2023-02-24"},{"lineNumber":113,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":114,"author":{"gitId":"RuiShengGit"},"content":"`list`","lastModifiedDate":"2023-02-24"},{"lineNumber":115,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":116,"author":{"gitId":"RuiShengGit"},"content":"Expected outcome:","lastModifiedDate":"2023-02-24"},{"lineNumber":117,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":118,"author":{"gitId":"RuiShengGit"},"content":"* Lists all the tasks in the order they were added","lastModifiedDate":"2023-02-24"},{"lineNumber":119,"author":{"gitId":"RuiShengGit"},"content":"    * `COMMAND`: list","lastModifiedDate":"2023-02-24"},{"lineNumber":120,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":121,"author":{"gitId":"RuiShengGit"},"content":"```","lastModifiedDate":"2023-02-24"},{"lineNumber":122,"author":{"gitId":"RuiShengGit"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-24"},{"lineNumber":123,"author":{"gitId":"RuiShengGit"},"content":"Here are the tasks in your list:","lastModifiedDate":"2023-02-24"},{"lineNumber":124,"author":{"gitId":"RuiShengGit"},"content":"1.[T][ ] CS2113 assignment","lastModifiedDate":"2023-02-24"},{"lineNumber":125,"author":{"gitId":"RuiShengGit"},"content":"2.[D][ ] CS2113 assignment (by: Friday 3pm)","lastModifiedDate":"2023-02-24"},{"lineNumber":126,"author":{"gitId":"RuiShengGit"},"content":"3.[E][ ] CS2113 Lecture (from: 4pm to: 6pm)","lastModifiedDate":"2023-02-24"},{"lineNumber":127,"author":{"gitId":"RuiShengGit"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-24"},{"lineNumber":128,"author":{"gitId":"RuiShengGit"},"content":"```","lastModifiedDate":"2023-02-24"},{"lineNumber":129,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":130,"author":{"gitId":"RuiShengGit"},"content":"### `mark` - Mark a task","lastModifiedDate":"2023-02-24"},{"lineNumber":131,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":132,"author":{"gitId":"RuiShengGit"},"content":"Marks a task with the given index by the user as completed. The index has to be a number from 1 to the size of the task list.","lastModifiedDate":"2023-02-24"},{"lineNumber":133,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":134,"author":{"gitId":"RuiShengGit"},"content":"Format: `mark \u003cindex\u003e`","lastModifiedDate":"2023-02-24"},{"lineNumber":135,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":136,"author":{"gitId":"RuiShengGit"},"content":"Example of usage:","lastModifiedDate":"2023-02-24"},{"lineNumber":137,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":138,"author":{"gitId":"RuiShengGit"},"content":"`mark 1`","lastModifiedDate":"2023-02-24"},{"lineNumber":139,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":140,"author":{"gitId":"RuiShengGit"},"content":"Expected outcome:","lastModifiedDate":"2023-02-24"},{"lineNumber":141,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":142,"author":{"gitId":"RuiShengGit"},"content":"* Marks the task at index 1 of the task list as done.","lastModifiedDate":"2023-02-24"},{"lineNumber":143,"author":{"gitId":"RuiShengGit"},"content":"    * `COMMAND`: mark","lastModifiedDate":"2023-02-24"},{"lineNumber":144,"author":{"gitId":"RuiShengGit"},"content":"    * `INDEX`: 1","lastModifiedDate":"2023-02-24"},{"lineNumber":145,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":146,"author":{"gitId":"RuiShengGit"},"content":"```","lastModifiedDate":"2023-02-24"},{"lineNumber":147,"author":{"gitId":"RuiShengGit"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-24"},{"lineNumber":148,"author":{"gitId":"RuiShengGit"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2023-02-24"},{"lineNumber":149,"author":{"gitId":"RuiShengGit"},"content":"[T][X] CS2113 assignment","lastModifiedDate":"2023-02-24"},{"lineNumber":150,"author":{"gitId":"RuiShengGit"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-24"},{"lineNumber":151,"author":{"gitId":"RuiShengGit"},"content":"```","lastModifiedDate":"2023-02-24"},{"lineNumber":152,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":153,"author":{"gitId":"RuiShengGit"},"content":"### `unmark` - Unmark a task","lastModifiedDate":"2023-02-24"},{"lineNumber":154,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":155,"author":{"gitId":"RuiShengGit"},"content":"Unmark a task with the given index by the user as not completed. The index has to be a number from 1 to the size of the task list.","lastModifiedDate":"2023-02-24"},{"lineNumber":156,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":157,"author":{"gitId":"RuiShengGit"},"content":"Format: `unmark \u003cindex\u003e`","lastModifiedDate":"2023-02-24"},{"lineNumber":158,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":159,"author":{"gitId":"RuiShengGit"},"content":"Example of usage:","lastModifiedDate":"2023-02-24"},{"lineNumber":160,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":161,"author":{"gitId":"RuiShengGit"},"content":"`unmark 1`","lastModifiedDate":"2023-02-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2023-02-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":165,"author":{"gitId":"RuiShengGit"},"content":"* Unmark the task at index 1 of the task list as not done.","lastModifiedDate":"2023-02-24"},{"lineNumber":166,"author":{"gitId":"RuiShengGit"},"content":"    * `COMMAND`: unmark","lastModifiedDate":"2023-02-24"},{"lineNumber":167,"author":{"gitId":"RuiShengGit"},"content":"    * `INDEX`: 1","lastModifiedDate":"2023-02-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-02-24"},{"lineNumber":170,"author":{"gitId":"RuiShengGit"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-24"},{"lineNumber":171,"author":{"gitId":"RuiShengGit"},"content":"OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2023-02-24"},{"lineNumber":172,"author":{"gitId":"RuiShengGit"},"content":"[T][ ] CS2113 assignment","lastModifiedDate":"2023-02-24"},{"lineNumber":173,"author":{"gitId":"RuiShengGit"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-24"},{"lineNumber":174,"author":{"gitId":"RuiShengGit"},"content":"```","lastModifiedDate":"2023-02-24"},{"lineNumber":175,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":176,"author":{"gitId":"RuiShengGit"},"content":"### `delete` - Delete a task","lastModifiedDate":"2023-02-24"},{"lineNumber":177,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":178,"author":{"gitId":"RuiShengGit"},"content":"Removes the task with the given index by the user from the task list. The index has to be a number from 1 to the size of the task list.","lastModifiedDate":"2023-02-24"},{"lineNumber":179,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":180,"author":{"gitId":"RuiShengGit"},"content":"Format: `delete \u003cindex\u003e`","lastModifiedDate":"2023-02-24"},{"lineNumber":181,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":182,"author":{"gitId":"RuiShengGit"},"content":"Example of usage:","lastModifiedDate":"2023-02-24"},{"lineNumber":183,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":184,"author":{"gitId":"RuiShengGit"},"content":"`delete 1`","lastModifiedDate":"2023-02-24"},{"lineNumber":185,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":186,"author":{"gitId":"RuiShengGit"},"content":"Expected outcome:","lastModifiedDate":"2023-02-24"},{"lineNumber":187,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":188,"author":{"gitId":"RuiShengGit"},"content":"* Deletes the task of index 1 from the task list","lastModifiedDate":"2023-02-24"},{"lineNumber":189,"author":{"gitId":"RuiShengGit"},"content":"* Displays remaining number of tasks in the list","lastModifiedDate":"2023-02-24"},{"lineNumber":190,"author":{"gitId":"RuiShengGit"},"content":"    * `COMMAND`: delete","lastModifiedDate":"2023-02-24"},{"lineNumber":191,"author":{"gitId":"RuiShengGit"},"content":"    * `INDEX`: 1","lastModifiedDate":"2023-02-24"},{"lineNumber":192,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":193,"author":{"gitId":"RuiShengGit"},"content":"```","lastModifiedDate":"2023-02-24"},{"lineNumber":194,"author":{"gitId":"RuiShengGit"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-24"},{"lineNumber":195,"author":{"gitId":"RuiShengGit"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2023-02-24"},{"lineNumber":196,"author":{"gitId":"RuiShengGit"},"content":"  [T][ ] CS2113 assignment","lastModifiedDate":"2023-02-24"},{"lineNumber":197,"author":{"gitId":"RuiShengGit"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2023-02-24"},{"lineNumber":198,"author":{"gitId":"RuiShengGit"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-24"},{"lineNumber":199,"author":{"gitId":"RuiShengGit"},"content":"```","lastModifiedDate":"2023-02-24"},{"lineNumber":200,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":201,"author":{"gitId":"RuiShengGit"},"content":"### `find` - Finds tasks with substring","lastModifiedDate":"2023-02-24"},{"lineNumber":202,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":203,"author":{"gitId":"RuiShengGit"},"content":"Finds the tasks with similar substring given by the user from the task list. ","lastModifiedDate":"2023-02-24"},{"lineNumber":204,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":205,"author":{"gitId":"RuiShengGit"},"content":"Format: `find \u003csubstring\u003e`","lastModifiedDate":"2023-02-24"},{"lineNumber":206,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":207,"author":{"gitId":"RuiShengGit"},"content":"Example of usage:","lastModifiedDate":"2023-02-24"},{"lineNumber":208,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":209,"author":{"gitId":"RuiShengGit"},"content":"`find assignment`","lastModifiedDate":"2023-02-24"},{"lineNumber":210,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":211,"author":{"gitId":"RuiShengGit"},"content":"Expected outcome:","lastModifiedDate":"2023-02-24"},{"lineNumber":212,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":213,"author":{"gitId":"RuiShengGit"},"content":"* Find and display the tasks with description that contains the given substring in the task list","lastModifiedDate":"2023-02-24"},{"lineNumber":214,"author":{"gitId":"RuiShengGit"},"content":"    * `COMMAND`: find","lastModifiedDate":"2023-02-24"},{"lineNumber":215,"author":{"gitId":"RuiShengGit"},"content":"    * `substring`: assignment","lastModifiedDate":"2023-02-24"},{"lineNumber":216,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":217,"author":{"gitId":"RuiShengGit"},"content":"```","lastModifiedDate":"2023-02-24"},{"lineNumber":218,"author":{"gitId":"RuiShengGit"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-24"},{"lineNumber":219,"author":{"gitId":"RuiShengGit"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2023-02-24"},{"lineNumber":220,"author":{"gitId":"RuiShengGit"},"content":"1.[D][ ] CS2113 assignment (by: Friday 3pm)","lastModifiedDate":"2023-02-24"},{"lineNumber":221,"author":{"gitId":"RuiShengGit"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-24"},{"lineNumber":222,"author":{"gitId":"RuiShengGit"},"content":"```","lastModifiedDate":"2023-02-24"},{"lineNumber":223,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":224,"author":{"gitId":"RuiShengGit"},"content":"### `bye` - Exit the program","lastModifiedDate":"2023-02-24"},{"lineNumber":225,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":226,"author":{"gitId":"RuiShengGit"},"content":"Closes and exits the program, Duke ","lastModifiedDate":"2023-02-24"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":228,"author":{"gitId":"RuiShengGit"},"content":"Format: `bye`","lastModifiedDate":"2023-02-24"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":232,"author":{"gitId":"RuiShengGit"},"content":"`bye`","lastModifiedDate":"2023-02-24"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":236,"author":{"gitId":"RuiShengGit"},"content":"* Program outputs an exit message and closes the program","lastModifiedDate":"2023-02-24"},{"lineNumber":237,"author":{"gitId":"RuiShengGit"},"content":"    * `COMMAND`: bye","lastModifiedDate":"2023-02-24"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":239,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":240,"author":{"gitId":"RuiShengGit"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-24"},{"lineNumber":241,"author":{"gitId":"RuiShengGit"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2023-02-24"},{"lineNumber":242,"author":{"gitId":"RuiShengGit"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-24"},{"lineNumber":243,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"-":29,"RuiShengGit":214}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RuiShengGit"},"content":"package duke;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"RuiShengGit"},"content":"import duke.commands.Command;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"RuiShengGit"},"content":"import duke.commands.Parser;","lastModifiedDate":"2023-02-21"},{"lineNumber":5,"author":{"gitId":"RuiShengGit"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"RuiShengGit"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"RuiShengGit"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-21"},{"lineNumber":8,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"RuiShengGit"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"RuiShengGit"},"content":"/**","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"RuiShengGit"},"content":" * The main class. Reads in different commands from the user, and parses them accordingly.","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"RuiShengGit"},"content":" */","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"RuiShengGit"},"content":"    public static TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"RuiShengGit"},"content":"     * Main method called when the program is running.","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"RuiShengGit"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"RuiShengGit"},"content":"     * @param args Not used, should be empty.","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"RuiShengGit"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"RuiShengGit"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"RuiShengGit"},"content":"        Ui.printGreetings();","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"RuiShengGit"},"content":"        boolean isRunning \u003d true;","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"RuiShengGit"},"content":"        while (isRunning) {","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"RuiShengGit"},"content":"            String userInput \u003d in.nextLine();","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"RuiShengGit"},"content":"            Command command \u003d Parser.handleUserInputs(userInput, taskList);","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"RuiShengGit"},"content":"            if (command \u003d\u003d null) {","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"RuiShengGit"},"content":"                Ui.printLine();","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"RuiShengGit"},"content":"                continue;","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"RuiShengGit"},"content":"            }","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"RuiShengGit"},"content":"            command.execute(taskList);","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"RuiShengGit"},"content":"            Ui.printLine();","lastModifiedDate":"2023-02-21"},{"lineNumber":36,"author":{"gitId":"RuiShengGit"},"content":"            isRunning \u003d !command.isExit();","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"RuiShengGit"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":3,"RuiShengGit":36}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RuiShengGit"},"content":"package duke.commands;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"RuiShengGit"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"RuiShengGit"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"RuiShengGit"},"content":" * Parent class for other Command objects.","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"RuiShengGit"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"RuiShengGit"},"content":"public abstract class Command {","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"RuiShengGit"},"content":"     * Executes the command","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"RuiShengGit"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"RuiShengGit"},"content":"     * @param taskList The task list that the command is executed on.","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"RuiShengGit"},"content":"    public abstract void execute(TaskList taskList);","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"RuiShengGit"},"content":"     * Returns a boolean to determine whether the program should terminate.","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"RuiShengGit"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"RuiShengGit"},"content":"     * @return False at the start as program just started running.","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"RuiShengGit"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"RuiShengGit"},"content":"        return false;","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"RuiShengGit"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"RuiShengGit":24}},{"path":"src/main/java/duke/commands/CreateDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RuiShengGit"},"content":"package duke.commands;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"RuiShengGit"},"content":"import duke.exception.EmptyCommandException;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"RuiShengGit"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"RuiShengGit"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"RuiShengGit"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"RuiShengGit"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"RuiShengGit"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"RuiShengGit"},"content":" * Command for adding a deadline task to the task list.","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"RuiShengGit"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"RuiShengGit"},"content":"public class CreateDeadlineCommand extends Command{","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"RuiShengGit"},"content":"    private String description;","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"RuiShengGit"},"content":"    private String by;","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"RuiShengGit"},"content":"     * Constructor that constructs a command that will add a deadline task to the task list.","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"RuiShengGit"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"RuiShengGit"},"content":"     * @param cases An array of string that contains the deadline command, description and due time.","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"RuiShengGit"},"content":"     * @throws EmptyCommandException","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"RuiShengGit"},"content":"    public CreateDeadlineCommand(String[] cases) throws EmptyCommandException {","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"RuiShengGit"},"content":"        if (cases.length \u003d\u003d 1) {","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"RuiShengGit"},"content":"            throw new EmptyCommandException();","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"RuiShengGit"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"RuiShengGit"},"content":"        String input \u003d cases[1];","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"RuiShengGit"},"content":"        String[] splitInput \u003d input.split(\"/\", 2);","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"RuiShengGit"},"content":"        description \u003d splitInput[0].trim();","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"RuiShengGit"},"content":"        by \u003d splitInput[1].substring(3);","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"RuiShengGit"},"content":"     * Executes the command to create a new deadline task which will be","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"RuiShengGit"},"content":"     * added to the task list and database.","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"RuiShengGit"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"RuiShengGit"},"content":"     * @param taskList The task list that the new deadline task is added to.","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"RuiShengGit"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"RuiShengGit"},"content":"    public void execute(TaskList taskList){","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"RuiShengGit"},"content":"        Task currTask \u003d new Deadline(description, by);","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"RuiShengGit"},"content":"        taskList.addTasks(currTask);","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"RuiShengGit"},"content":"        Ui.printAddedTaskCommand(taskList);","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"RuiShengGit"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"RuiShengGit":44}},{"path":"src/main/java/duke/commands/CreateEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RuiShengGit"},"content":"package duke.commands;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"RuiShengGit"},"content":"import duke.exception.EmptyCommandException;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"RuiShengGit"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"RuiShengGit"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"RuiShengGit"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"RuiShengGit"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"RuiShengGit"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"RuiShengGit"},"content":" * Command for adding a deadline task to the task list.","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"RuiShengGit"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"RuiShengGit"},"content":"public class CreateEventCommand extends Command {","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"RuiShengGit"},"content":"    private String description;","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"RuiShengGit"},"content":"    private String from;","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"RuiShengGit"},"content":"    private String to;","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"RuiShengGit"},"content":"     * Constructs a command that will add an event task to the task list.","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"RuiShengGit"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"RuiShengGit"},"content":"     * @param cases An array of string that contains the deadline command, description and due time.","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"RuiShengGit"},"content":"     * @throws EmptyCommandException The exception thrown when user only inputs the command.","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"RuiShengGit"},"content":"    public CreateEventCommand(String[] cases) throws EmptyCommandException {","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"RuiShengGit"},"content":"        if (cases.length \u003d\u003d 1) {","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"RuiShengGit"},"content":"            throw new EmptyCommandException();","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"RuiShengGit"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"RuiShengGit"},"content":"        String input \u003d cases[1];","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"RuiShengGit"},"content":"        String[] splitInput \u003d input.split(\"/\", 3);","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"RuiShengGit"},"content":"        description \u003d splitInput[0].trim();","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"RuiShengGit"},"content":"        from \u003d splitInput[1].substring(5).trim();","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"RuiShengGit"},"content":"        to \u003d splitInput[2].substring(3);","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"RuiShengGit"},"content":"     * Executes the command to create a new event task which will be","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"RuiShengGit"},"content":"     * added to the task list and database.","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"RuiShengGit"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"RuiShengGit"},"content":"     * @param taskList The task list that the command is executed on","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"RuiShengGit"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"RuiShengGit"},"content":"    public void execute(TaskList taskList){","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"RuiShengGit"},"content":"        Task currTask \u003d new Event(description, from, to);","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"RuiShengGit"},"content":"        taskList.addTasks(currTask);","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"RuiShengGit"},"content":"        Ui.printAddedTaskCommand(taskList);","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"RuiShengGit"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"RuiShengGit":46}},{"path":"src/main/java/duke/commands/CreateTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RuiShengGit"},"content":"package duke.commands;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"RuiShengGit"},"content":"import duke.exception.EmptyCommandException;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"RuiShengGit"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"RuiShengGit"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"RuiShengGit"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"RuiShengGit"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"RuiShengGit"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"RuiShengGit"},"content":" * Command for adding a todo task to the task list","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"RuiShengGit"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"RuiShengGit"},"content":"public class CreateTodoCommand extends Command{","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"RuiShengGit"},"content":"    private String description;","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"RuiShengGit"},"content":"     * Constructor to initialise the CreateToDoCommand that will add a todo task to the task list.","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"RuiShengGit"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"RuiShengGit"},"content":"     * @param cases Array that contains the task and description.","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"RuiShengGit"},"content":"     * @throws EmptyCommandException The exception thrown when user enters a command with no description.","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"RuiShengGit"},"content":"    public CreateTodoCommand(String[] cases) throws EmptyCommandException {","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"RuiShengGit"},"content":"        if (cases.length \u003d\u003d 1) {","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"RuiShengGit"},"content":"            throw new EmptyCommandException();","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"RuiShengGit"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"RuiShengGit"},"content":"        description \u003d cases[1];","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"RuiShengGit"},"content":"     * Executes the command to create a new todo task which will be","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"RuiShengGit"},"content":"     * added to the task list and database.","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"RuiShengGit"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"RuiShengGit"},"content":"     * @param taskList The task list that the new todo task is added to.","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"RuiShengGit"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"RuiShengGit"},"content":"    public void execute(TaskList taskList){","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"RuiShengGit"},"content":"        Task currTask \u003d new Todo(description);","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"RuiShengGit"},"content":"        taskList.addTasks(currTask);","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"RuiShengGit"},"content":"        Ui.printAddedTaskCommand(taskList);","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"RuiShengGit"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"RuiShengGit":40}},{"path":"src/main/java/duke/commands/DeleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RuiShengGit"},"content":"package duke.commands;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"RuiShengGit"},"content":"import duke.exception.EmptyCommandException;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"RuiShengGit"},"content":"import duke.exception.EmptyIndexException;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"RuiShengGit"},"content":"import duke.exception.InvalidIndexException;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"RuiShengGit"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"RuiShengGit"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"RuiShengGit"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"RuiShengGit"},"content":" * Command for deleting a task from the task list.","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"RuiShengGit"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"RuiShengGit"},"content":"public class DeleteTaskCommand extends Command{","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"RuiShengGit"},"content":"    private int index;","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"RuiShengGit"},"content":"     * Constructs a command that will delete the task at the given index from the task list.","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"RuiShengGit"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"RuiShengGit"},"content":"     * @param cases An array of string that contains the command and the index.","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"RuiShengGit"},"content":"     * @param taskList The task list to be referenced from for the deleting of the task at the index.","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"RuiShengGit"},"content":"     *                 Used for identifying if the index is out of bounds.","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"RuiShengGit"},"content":"     * @throws InvalidIndexException The exception thrown when user enters an invalid index.","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"RuiShengGit"},"content":"     * @throws EmptyCommandException The exception thrown when user did not input the index.","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"RuiShengGit"},"content":"    public DeleteTaskCommand(String[] cases, TaskList taskList) throws InvalidIndexException, EmptyIndexException {","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"RuiShengGit"},"content":"        if (cases.length \u003d\u003d 1){","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"RuiShengGit"},"content":"            throw new EmptyIndexException();","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"RuiShengGit"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"RuiShengGit"},"content":"        String input \u003d cases[1];","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"RuiShengGit"},"content":"        index \u003d Integer.parseInt(input) - 1;","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"RuiShengGit"},"content":"        if (index \u003e\u003d taskList.listCount()) {","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"RuiShengGit"},"content":"            throw new InvalidIndexException();","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"RuiShengGit"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"RuiShengGit"},"content":"     * Deletes the task with the index specified in the constructor from the task list.","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"RuiShengGit"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"RuiShengGit"},"content":"     * @param taskList The task list that the command is executed on","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"RuiShengGit"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"RuiShengGit"},"content":"    public void execute(TaskList taskList){","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"RuiShengGit"},"content":"        Ui.deleteMessage();","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"RuiShengGit"},"content":"        System.out.println(\"  \" + taskList.getTask(index).toString());","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"RuiShengGit"},"content":"        taskList.deleteTasks(index);","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"RuiShengGit"},"content":"        Ui.printListMessage(taskList.listCount());","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"RuiShengGit"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"RuiShengGit":47}},{"path":"src/main/java/duke/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RuiShengGit"},"content":"package duke.commands;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"RuiShengGit"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"RuiShengGit"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"RuiShengGit"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"RuiShengGit"},"content":" * Command for exiting the program.","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"RuiShengGit"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"RuiShengGit"},"content":"public class ExitCommand extends Command{","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"RuiShengGit"},"content":"     * Displays the message when user inputs the exit command.","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"RuiShengGit"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"RuiShengGit"},"content":"     * @param taskList The task list that the command is executed on.","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"RuiShengGit"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"RuiShengGit"},"content":"    public void execute(TaskList taskList){","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"RuiShengGit"},"content":"        Ui.printExit();","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"RuiShengGit"},"content":"     * Sets isRunning to be false to terminate the program.","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"RuiShengGit"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"RuiShengGit"},"content":"     * @return True to allow the program to stop running.","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"RuiShengGit"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"RuiShengGit"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"RuiShengGit"},"content":"        return true;","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"RuiShengGit"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"RuiShengGit":29}},{"path":"src/main/java/duke/commands/FindTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RuiShengGit"},"content":"package duke.commands;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"RuiShengGit"},"content":"import duke.exception.EmptyFilterException;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"RuiShengGit"},"content":"import duke.exception.EmptyIndexException;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"RuiShengGit"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"RuiShengGit"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"RuiShengGit"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"RuiShengGit"},"content":" * Command for finding tasks that contains similar string specified by the user.","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"RuiShengGit"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"RuiShengGit"},"content":"public class FindTaskCommand extends Command{","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"RuiShengGit"},"content":"    private String filter;","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"RuiShengGit"},"content":"     * Constructs a command that will display tasks containing the specified string.","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"RuiShengGit"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"RuiShengGit"},"content":"     * @param cases An array of string that contains the command and the keyword used to filter.","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"RuiShengGit"},"content":"     * @throws EmptyFilterException Exception thrown when user did not enter any keyword to filter.","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"RuiShengGit"},"content":"    FindTaskCommand(String[] cases) throws EmptyFilterException {","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"RuiShengGit"},"content":"        if (cases.length \u003d\u003d 1){","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"RuiShengGit"},"content":"            throw new EmptyFilterException();","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"RuiShengGit"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"RuiShengGit"},"content":"        String substring \u003d cases[1];","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"RuiShengGit"},"content":"        filter \u003d substring;","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"RuiShengGit"},"content":"     * Displays a task list filtered based on the search string specified.","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"RuiShengGit"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"RuiShengGit"},"content":"     * @param taskList The task list that the command is executed on.","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"RuiShengGit"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"RuiShengGit"},"content":"    public void execute(TaskList taskList){","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"RuiShengGit"},"content":"        Ui.printFindMessage();","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"RuiShengGit"},"content":"        int findListIndex \u003d 0;","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"RuiShengGit"},"content":"        for (int i \u003d 0; i \u003c taskList.listCount(); ++i) {","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"RuiShengGit"},"content":"            if(taskList.getTask(i).containsFilter(filter)) {","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"RuiShengGit"},"content":"                ++findListIndex;","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"RuiShengGit"},"content":"                System.out.println(Integer.toString(findListIndex )+ \u0027.\u0027 + taskList.getTask(i).toString());","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"RuiShengGit"},"content":"            }","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"RuiShengGit"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"RuiShengGit"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"RuiShengGit":44}},{"path":"src/main/java/duke/commands/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RuiShengGit"},"content":"package duke.commands;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"RuiShengGit"},"content":"import duke.exception.InvalidCommandException;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"RuiShengGit"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"RuiShengGit"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"RuiShengGit"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"RuiShengGit"},"content":" * Command generated when there is an error in parsing the user inputs.","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"RuiShengGit"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"RuiShengGit"},"content":"public class InvalidCommand extends Command{","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"RuiShengGit"},"content":"     * Constructs a command that displays an error message","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"RuiShengGit"},"content":"     * when there is an error in parsing user inputs.","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"RuiShengGit"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"RuiShengGit"},"content":"     * @param taskList The task list that the command is executed on.","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"RuiShengGit"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"RuiShengGit"},"content":"    public void execute(TaskList taskList) {","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"RuiShengGit"},"content":"        Ui.printInvalidMessage();","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"RuiShengGit"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"RuiShengGit":22}},{"path":"src/main/java/duke/commands/MarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RuiShengGit"},"content":"package duke.commands;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"RuiShengGit"},"content":"import duke.exception.EmptyCommandException;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"RuiShengGit"},"content":"import duke.exception.EmptyIndexException;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"RuiShengGit"},"content":"import duke.exception.InvalidIndexException;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"RuiShengGit"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"RuiShengGit"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"RuiShengGit"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"RuiShengGit"},"content":" * Command generated for marking a task to be completed.","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"RuiShengGit"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"RuiShengGit"},"content":"public class MarkTaskCommand extends Command{","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"RuiShengGit"},"content":"    private int index;","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"RuiShengGit"},"content":"    private boolean isDone;","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"RuiShengGit"},"content":"     * Constructs a command to set the completion status of a task to be done.","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"RuiShengGit"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"RuiShengGit"},"content":"     * @param cases An array of string that contains the command and the index.","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"RuiShengGit"},"content":"     * @param taskList The task list to be referenced from for the marking of the task.","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"RuiShengGit"},"content":"     *                 Checks for whether the index is out of bounds.","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"RuiShengGit"},"content":"     * @throws InvalidIndexException The exception thrown when user enters an invalid index.","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"RuiShengGit"},"content":"     * @throws EmptyCommandException The exception thrown when user did not input the index.","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"RuiShengGit"},"content":"    public MarkTaskCommand (String[] cases, TaskList taskList) throws InvalidIndexException, EmptyIndexException {","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"RuiShengGit"},"content":"        if (cases.length \u003d\u003d 1){","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"RuiShengGit"},"content":"            throw new EmptyIndexException();","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"RuiShengGit"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"RuiShengGit"},"content":"        String input \u003d cases[1];","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"RuiShengGit"},"content":"        index \u003d Integer.parseInt(input) - 1;","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"RuiShengGit"},"content":"        if (index \u003e\u003d taskList.listCount()) {","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"RuiShengGit"},"content":"            throw new InvalidIndexException();","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"RuiShengGit"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"RuiShengGit"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"RuiShengGit"},"content":"     * Sets the completion status of the task at the specified index to be true.","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"RuiShengGit"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"RuiShengGit"},"content":"     * @param taskList The task list that the command is executed on.","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"RuiShengGit"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"RuiShengGit"},"content":"    public void execute(TaskList taskList) {","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"RuiShengGit"},"content":"        taskList.setDone(index, isDone);","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"RuiShengGit"},"content":"        Ui.markDoneMessage(taskList, index);","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"RuiShengGit"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"RuiShengGit":47}},{"path":"src/main/java/duke/commands/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RuiShengGit"},"content":"package duke.commands;","lastModifiedDate":"2023-02-21"},{"lineNumber":2,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":3,"author":{"gitId":"RuiShengGit"},"content":"import duke.exception.EmptyCommandException;","lastModifiedDate":"2023-02-21"},{"lineNumber":4,"author":{"gitId":"RuiShengGit"},"content":"import duke.exception.EmptyFilterException;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"RuiShengGit"},"content":"import duke.exception.EmptyIndexException;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"RuiShengGit"},"content":"import duke.exception.InvalidIndexException;","lastModifiedDate":"2023-02-21"},{"lineNumber":7,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":8,"author":{"gitId":"RuiShengGit"},"content":"import duke.tasks.*;","lastModifiedDate":"2023-02-21"},{"lineNumber":9,"author":{"gitId":"RuiShengGit"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-21"},{"lineNumber":10,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":11,"author":{"gitId":"RuiShengGit"},"content":"/**","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"RuiShengGit"},"content":" * Class containing method for parsing the commands.","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"RuiShengGit"},"content":" */","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"RuiShengGit"},"content":"public class Parser {","lastModifiedDate":"2023-02-21"},{"lineNumber":15,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"RuiShengGit"},"content":"     * Parses the user input into a command that can be executed","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"RuiShengGit"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"RuiShengGit"},"content":"     * @param userInput A string that represents the user\u0027s input into the terminal.","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"RuiShengGit"},"content":"     * @param taskList The task list that the parsed command will be executed on","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"RuiShengGit"},"content":"     * @return A command that can be executed by calling the execute method.","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"RuiShengGit"},"content":"    public static Command handleUserInputs(String userInput, TaskList taskList){","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"RuiShengGit"},"content":"        String[] cases \u003d userInput.split(\" \", 2);","lastModifiedDate":"2023-02-21"},{"lineNumber":24,"author":{"gitId":"RuiShengGit"},"content":"        String command \u003d cases[0];","lastModifiedDate":"2023-02-21"},{"lineNumber":25,"author":{"gitId":"RuiShengGit"},"content":"        Ui.printLine();","lastModifiedDate":"2023-02-21"},{"lineNumber":26,"author":{"gitId":"RuiShengGit"},"content":"        try {","lastModifiedDate":"2023-02-21"},{"lineNumber":27,"author":{"gitId":"RuiShengGit"},"content":"            if (command.equals(\"todo\")) {","lastModifiedDate":"2023-02-21"},{"lineNumber":28,"author":{"gitId":"RuiShengGit"},"content":"                return new CreateTodoCommand(cases);","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"RuiShengGit"},"content":"            } else if (command.equals(\"deadline\")) {","lastModifiedDate":"2023-02-21"},{"lineNumber":30,"author":{"gitId":"RuiShengGit"},"content":"                return new CreateDeadlineCommand(cases);","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"RuiShengGit"},"content":"            } else if (command.equals(\"event\")) {","lastModifiedDate":"2023-02-21"},{"lineNumber":32,"author":{"gitId":"RuiShengGit"},"content":"                return new CreateEventCommand(cases);","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"RuiShengGit"},"content":"            } else if (command.equals(\"list\")) {","lastModifiedDate":"2023-02-21"},{"lineNumber":34,"author":{"gitId":"RuiShengGit"},"content":"                return new PrintListCommand();","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"RuiShengGit"},"content":"            } else if (command.equals(\"mark\")) {","lastModifiedDate":"2023-02-21"},{"lineNumber":36,"author":{"gitId":"RuiShengGit"},"content":"                return new MarkTaskCommand(cases, taskList);","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"RuiShengGit"},"content":"            } else if (command.equals(\"unmark\")) {","lastModifiedDate":"2023-02-21"},{"lineNumber":38,"author":{"gitId":"RuiShengGit"},"content":"                return new UnmarkTaskCommand(cases, taskList);","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"RuiShengGit"},"content":"            } else if (command.equals(\"delete\")) {","lastModifiedDate":"2023-02-21"},{"lineNumber":40,"author":{"gitId":"RuiShengGit"},"content":"                return new DeleteTaskCommand(cases, taskList);","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"RuiShengGit"},"content":"            } else if (command.equals(\"find\")) {","lastModifiedDate":"2023-02-22"},{"lineNumber":42,"author":{"gitId":"RuiShengGit"},"content":"                return new FindTaskCommand(cases);","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"RuiShengGit"},"content":"            } else if (command.equals(\"bye\")) {","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"RuiShengGit"},"content":"                return new ExitCommand();","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"RuiShengGit"},"content":"            } else {","lastModifiedDate":"2023-02-21"},{"lineNumber":46,"author":{"gitId":"RuiShengGit"},"content":"                return new InvalidCommand();","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"RuiShengGit"},"content":"            }","lastModifiedDate":"2023-02-21"},{"lineNumber":48,"author":{"gitId":"RuiShengGit"},"content":"        } catch (EmptyCommandException e) {","lastModifiedDate":"2023-02-21"},{"lineNumber":49,"author":{"gitId":"RuiShengGit"},"content":"            Ui.printEmptyCommandMessage(command);","lastModifiedDate":"2023-02-21"},{"lineNumber":50,"author":{"gitId":"RuiShengGit"},"content":"        } catch (InvalidIndexException e) {","lastModifiedDate":"2023-02-21"},{"lineNumber":51,"author":{"gitId":"RuiShengGit"},"content":"            Ui.printInvalidIndexMessage();","lastModifiedDate":"2023-02-21"},{"lineNumber":52,"author":{"gitId":"RuiShengGit"},"content":"        } catch (EmptyIndexException e) {","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"RuiShengGit"},"content":"            Ui.printEmptyIndexMessage();","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"RuiShengGit"},"content":"        } catch (EmptyFilterException e) {","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"RuiShengGit"},"content":"            Ui.printEmptyFilterMessage();","lastModifiedDate":"2023-03-01"},{"lineNumber":56,"author":{"gitId":"RuiShengGit"},"content":"        }","lastModifiedDate":"2023-02-21"},{"lineNumber":57,"author":{"gitId":"RuiShengGit"},"content":"        return null;","lastModifiedDate":"2023-03-01"},{"lineNumber":58,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":59,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":60,"author":{"gitId":"RuiShengGit"},"content":"}","lastModifiedDate":"2023-02-21"},{"lineNumber":61,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-21"}],"authorContributionMap":{"RuiShengGit":61}},{"path":"src/main/java/duke/commands/PrintListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RuiShengGit"},"content":"package duke.commands;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"RuiShengGit"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"RuiShengGit"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"RuiShengGit"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"RuiShengGit"},"content":" * Command for displaying the tasks in the task list.","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"RuiShengGit"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"RuiShengGit"},"content":"public class PrintListCommand extends Command{","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"RuiShengGit"},"content":"     * Displays the tasks in the task list.","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"RuiShengGit"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"RuiShengGit"},"content":"     * @param taskList The task list that the command is executed on.","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"RuiShengGit"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"RuiShengGit"},"content":"    public void execute (TaskList taskList){","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"RuiShengGit"},"content":"        Ui.printOpeningListMessage();","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"RuiShengGit"},"content":"        for (int i \u003d 0; i \u003c taskList.listCount(); ++i) {","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"RuiShengGit"},"content":"            String index \u003d Integer.toString(i + 1);","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"RuiShengGit"},"content":"            System.out.println(index + \u0027.\u0027 + taskList.getTask(i).toString());","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"RuiShengGit"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"RuiShengGit"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"RuiShengGit":23}},{"path":"src/main/java/duke/commands/UnmarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RuiShengGit"},"content":"package duke.commands;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"RuiShengGit"},"content":"import duke.exception.EmptyIndexException;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"RuiShengGit"},"content":"import duke.exception.InvalidIndexException;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"RuiShengGit"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"RuiShengGit"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"RuiShengGit"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"RuiShengGit"},"content":" * Command generated to unmark a task to be not completed.","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"RuiShengGit"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"RuiShengGit"},"content":"public class UnmarkTaskCommand extends Command{","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"RuiShengGit"},"content":"    private int index;","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"RuiShengGit"},"content":"    private boolean isDone;","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"RuiShengGit"},"content":"     * Constructs a command to set the completion status of a task to be undone.","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"RuiShengGit"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"RuiShengGit"},"content":"     * @param cases An array of string that contains the command and the index.","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"RuiShengGit"},"content":"     * @param taskList The task list to be referenced from to unmark the task.","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"RuiShengGit"},"content":"     *      *           Checks for whether the index is out of bounds.","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"RuiShengGit"},"content":"     * @throws InvalidIndexException The exception thrown when user enters an invalid index.","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"RuiShengGit"},"content":"     * @throws EmptyIndexException The exception thrown when user did not input the index.","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"RuiShengGit"},"content":"    public UnmarkTaskCommand (String[] cases, TaskList taskList) throws InvalidIndexException, EmptyIndexException {","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"RuiShengGit"},"content":"        if (cases.length \u003d\u003d 1){","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"RuiShengGit"},"content":"            throw new EmptyIndexException();","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"RuiShengGit"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"RuiShengGit"},"content":"        String input \u003d cases[1];","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"RuiShengGit"},"content":"        index \u003d Integer.parseInt(input) - 1;","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"RuiShengGit"},"content":"        if (index \u003e\u003d taskList.listCount()) {","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"RuiShengGit"},"content":"            throw new InvalidIndexException();","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"RuiShengGit"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"RuiShengGit"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"RuiShengGit"},"content":"     * Sets the completion status of the task at the specified index to be false.","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"RuiShengGit"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"RuiShengGit"},"content":"     * @param taskList The task list that the command is executed on.","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"RuiShengGit"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"RuiShengGit"},"content":"    public void execute(TaskList taskList) {","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"RuiShengGit"},"content":"        taskList.setDone(index, isDone);","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"RuiShengGit"},"content":"        Ui.markDoneMessage(taskList, index);","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"RuiShengGit"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"RuiShengGit":46}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RuiShengGit"},"content":"package duke.exception;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"RuiShengGit"},"content":"/**","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"RuiShengGit"},"content":" * The main parent exception class that other exceptions inherit unique to the Duke program","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"RuiShengGit"},"content":" */","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"RuiShengGit"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"RuiShengGit"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"RuiShengGit":8}},{"path":"src/main/java/duke/exception/EmptyCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RuiShengGit"},"content":"package duke.exception;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"RuiShengGit"},"content":"/**","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"RuiShengGit"},"content":" * The exception that is being thrown when only the task command is given","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"RuiShengGit"},"content":" * but there is no description to the task","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"RuiShengGit"},"content":" */","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"RuiShengGit"},"content":"public class EmptyCommandException extends DukeException{","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"RuiShengGit"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"RuiShengGit":9}},{"path":"src/main/java/duke/exception/EmptyFilterException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RuiShengGit"},"content":"package duke.exception;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"RuiShengGit"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"RuiShengGit"},"content":" * Thrown when user did not enter the substring for find.","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"RuiShengGit"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"RuiShengGit"},"content":"public class EmptyFilterException extends DukeException{","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"RuiShengGit"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"RuiShengGit":7}},{"path":"src/main/java/duke/exception/EmptyIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RuiShengGit"},"content":"package duke.exception;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"RuiShengGit"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"RuiShengGit"},"content":" * Thrown when user leaves the index of a command to be empty","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"RuiShengGit"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"RuiShengGit"},"content":"public class EmptyIndexException extends DukeException{","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"RuiShengGit"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"RuiShengGit":7}},{"path":"src/main/java/duke/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RuiShengGit"},"content":"package duke.exception;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"RuiShengGit"},"content":"/**","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"RuiShengGit"},"content":" * The exception that is being thrown when the task given is not recognised by","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"RuiShengGit"},"content":" * the program","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"RuiShengGit"},"content":" */","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"RuiShengGit"},"content":"public class InvalidCommandException extends DukeException{","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"RuiShengGit"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"RuiShengGit":8}},{"path":"src/main/java/duke/exception/InvalidIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RuiShengGit"},"content":"package duke.exception;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"RuiShengGit"},"content":"/**","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"RuiShengGit"},"content":" * The exception that is being thrown when an invalid index of the list is given","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"RuiShengGit"},"content":" * such as a number that is bigger than the list size","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"RuiShengGit"},"content":" */","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"RuiShengGit"},"content":"public class InvalidIndexException extends DukeException{","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"RuiShengGit"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"RuiShengGit":8}},{"path":"src/main/java/duke/storage/Database.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RuiShengGit"},"content":"package duke.storage;","lastModifiedDate":"2023-02-21"},{"lineNumber":2,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"RuiShengGit"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"RuiShengGit"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"RuiShengGit"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"RuiShengGit"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"RuiShengGit"},"content":"import java.io.File;","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"RuiShengGit"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"RuiShengGit"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"RuiShengGit"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"RuiShengGit"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"RuiShengGit"},"content":"/**","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"RuiShengGit"},"content":" * Storage class that handles the saving of the task list as a file and loading the tasks from the file.","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"RuiShengGit"},"content":" */","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"RuiShengGit"},"content":"public class Database {","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"RuiShengGit"},"content":"    public ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"RuiShengGit"},"content":"    private String databaseDirectory;","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"RuiShengGit"},"content":"    private String filePath;","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"RuiShengGit"},"content":"    private final static String DUKE_TXT_FILE_NAME \u003d \"duke.txt\";","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":25,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"RuiShengGit"},"content":"     * Constructor of the Database class that creates a new file and directory if they do not exist","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"RuiShengGit"},"content":"     * and initialises and creates a new Arraylist of tasks with the tasks previously saved.","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"RuiShengGit"},"content":"    public Database() {","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"RuiShengGit"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-21"},{"lineNumber":31,"author":{"gitId":"RuiShengGit"},"content":"        this.databaseDirectory\u003d \"./data/\";","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"RuiShengGit"},"content":"        this.filePath \u003d this.databaseDirectory + DUKE_TXT_FILE_NAME;","lastModifiedDate":"2023-02-15"},{"lineNumber":33,"author":{"gitId":"RuiShengGit"},"content":"        File directory \u003d new File(this.databaseDirectory);","lastModifiedDate":"2023-02-15"},{"lineNumber":34,"author":{"gitId":"RuiShengGit"},"content":"        File savedFile \u003d new File(this.filePath);","lastModifiedDate":"2023-02-15"},{"lineNumber":35,"author":{"gitId":"RuiShengGit"},"content":"        try {","lastModifiedDate":"2023-02-15"},{"lineNumber":36,"author":{"gitId":"RuiShengGit"},"content":"            if (!directory.exists()) {","lastModifiedDate":"2023-02-15"},{"lineNumber":37,"author":{"gitId":"RuiShengGit"},"content":"                directory.mkdirs();","lastModifiedDate":"2023-02-15"},{"lineNumber":38,"author":{"gitId":"RuiShengGit"},"content":"            }","lastModifiedDate":"2023-02-15"},{"lineNumber":39,"author":{"gitId":"RuiShengGit"},"content":"            if (!savedFile.exists()) {","lastModifiedDate":"2023-02-15"},{"lineNumber":40,"author":{"gitId":"RuiShengGit"},"content":"                savedFile.createNewFile();","lastModifiedDate":"2023-02-15"},{"lineNumber":41,"author":{"gitId":"RuiShengGit"},"content":"            }","lastModifiedDate":"2023-02-15"},{"lineNumber":42,"author":{"gitId":"RuiShengGit"},"content":"            initialisation(savedFile);","lastModifiedDate":"2023-02-15"},{"lineNumber":43,"author":{"gitId":"RuiShengGit"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":44,"author":{"gitId":"RuiShengGit"},"content":"            System.out.println(\"Error while initialising database\");","lastModifiedDate":"2023-02-15"},{"lineNumber":45,"author":{"gitId":"RuiShengGit"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":46,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":47,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":48,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"RuiShengGit"},"content":"     * Appends the newly added task to the saved database txt file.","lastModifiedDate":"2023-02-24"},{"lineNumber":50,"author":{"gitId":"RuiShengGit"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":51,"author":{"gitId":"RuiShengGit"},"content":"     * @param userInput String of the task in a fixed format that has been newly added to the task list.","lastModifiedDate":"2023-02-24"},{"lineNumber":52,"author":{"gitId":"RuiShengGit"},"content":"     * @throws IOException Executes when the FileWriter fails to append the task.","lastModifiedDate":"2023-02-24"},{"lineNumber":53,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":54,"author":{"gitId":"RuiShengGit"},"content":"    public void appendSaveTasks(String userInput) throws IOException {","lastModifiedDate":"2023-02-15"},{"lineNumber":55,"author":{"gitId":"RuiShengGit"},"content":"        FileWriter fw \u003d new FileWriter(filePath, true);","lastModifiedDate":"2023-02-15"},{"lineNumber":56,"author":{"gitId":"RuiShengGit"},"content":"        fw.write(userInput + System.lineSeparator());","lastModifiedDate":"2023-02-15"},{"lineNumber":57,"author":{"gitId":"RuiShengGit"},"content":"        fw.close();","lastModifiedDate":"2023-02-15"},{"lineNumber":58,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":59,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":60,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":61,"author":{"gitId":"RuiShengGit"},"content":"     * Updates the database when a task is being removed from the list or when a task is being marked/unmarked.","lastModifiedDate":"2023-02-24"},{"lineNumber":62,"author":{"gitId":"RuiShengGit"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":63,"author":{"gitId":"RuiShengGit"},"content":"     * @throws IOException Executes when the FileWriter fails to update the txt file.","lastModifiedDate":"2023-02-24"},{"lineNumber":64,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":65,"author":{"gitId":"RuiShengGit"},"content":"    public void updateDatabase() throws IOException {","lastModifiedDate":"2023-02-15"},{"lineNumber":66,"author":{"gitId":"RuiShengGit"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2023-02-15"},{"lineNumber":67,"author":{"gitId":"RuiShengGit"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); ++i){","lastModifiedDate":"2023-02-15"},{"lineNumber":68,"author":{"gitId":"RuiShengGit"},"content":"            fw.write(taskList.get(i).taskInformation() + System.lineSeparator());","lastModifiedDate":"2023-02-15"},{"lineNumber":69,"author":{"gitId":"RuiShengGit"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":70,"author":{"gitId":"RuiShengGit"},"content":"        fw.close();","lastModifiedDate":"2023-02-15"},{"lineNumber":71,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":72,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":73,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":74,"author":{"gitId":"RuiShengGit"},"content":"     * Initialises the Database by adding saved task from the saved txt file to the task list.","lastModifiedDate":"2023-02-24"},{"lineNumber":75,"author":{"gitId":"RuiShengGit"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":76,"author":{"gitId":"RuiShengGit"},"content":"     * @param savedFile The txt file that is being saved to store previous tasks on the list.","lastModifiedDate":"2023-02-24"},{"lineNumber":77,"author":{"gitId":"RuiShengGit"},"content":"     * @throws IOException Executes when the scanner fails to scan or task list fails to add saved task.","lastModifiedDate":"2023-02-24"},{"lineNumber":78,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":79,"author":{"gitId":"RuiShengGit"},"content":"    private void initialisation(File savedFile) throws IOException{","lastModifiedDate":"2023-02-15"},{"lineNumber":80,"author":{"gitId":"RuiShengGit"},"content":"        Scanner scan \u003d new Scanner(savedFile);","lastModifiedDate":"2023-02-15"},{"lineNumber":81,"author":{"gitId":"RuiShengGit"},"content":"        while (scan.hasNext()) {","lastModifiedDate":"2023-02-15"},{"lineNumber":82,"author":{"gitId":"RuiShengGit"},"content":"            String taskInput \u003d scan.nextLine();","lastModifiedDate":"2023-02-15"},{"lineNumber":83,"author":{"gitId":"RuiShengGit"},"content":"            taskList.add(handleTask(taskInput));","lastModifiedDate":"2023-02-15"},{"lineNumber":84,"author":{"gitId":"RuiShengGit"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":85,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":86,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":87,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":88,"author":{"gitId":"RuiShengGit"},"content":"     * Convert the saved string from the saved file to a task object","lastModifiedDate":"2023-03-01"},{"lineNumber":89,"author":{"gitId":"RuiShengGit"},"content":"     * so that it can be added to the list.","lastModifiedDate":"2023-02-24"},{"lineNumber":90,"author":{"gitId":"RuiShengGit"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":91,"author":{"gitId":"RuiShengGit"},"content":"     * @param taskInput The saved string being read from the file.","lastModifiedDate":"2023-02-24"},{"lineNumber":92,"author":{"gitId":"RuiShengGit"},"content":"     * @return Returns the task object that is represented by the saved string.","lastModifiedDate":"2023-02-24"},{"lineNumber":93,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":94,"author":{"gitId":"RuiShengGit"},"content":"    private Task handleTask(String taskInput) {","lastModifiedDate":"2023-02-15"},{"lineNumber":95,"author":{"gitId":"RuiShengGit"},"content":"        String[] components \u003d taskInput.split(\" , \");","lastModifiedDate":"2023-02-15"},{"lineNumber":96,"author":{"gitId":"RuiShengGit"},"content":"        String command \u003d components[0];","lastModifiedDate":"2023-02-15"},{"lineNumber":97,"author":{"gitId":"RuiShengGit"},"content":"        String mark \u003d components[1];","lastModifiedDate":"2023-02-15"},{"lineNumber":98,"author":{"gitId":"RuiShengGit"},"content":"        String description \u003d components[2];","lastModifiedDate":"2023-02-15"},{"lineNumber":99,"author":{"gitId":"RuiShengGit"},"content":"        Task task \u003d null;","lastModifiedDate":"2023-02-15"},{"lineNumber":100,"author":{"gitId":"RuiShengGit"},"content":"        switch(command) {","lastModifiedDate":"2023-02-15"},{"lineNumber":101,"author":{"gitId":"RuiShengGit"},"content":"        case \"todo\":","lastModifiedDate":"2023-02-15"},{"lineNumber":102,"author":{"gitId":"RuiShengGit"},"content":"            task \u003d new Todo(description);","lastModifiedDate":"2023-02-15"},{"lineNumber":103,"author":{"gitId":"RuiShengGit"},"content":"            break;","lastModifiedDate":"2023-02-15"},{"lineNumber":104,"author":{"gitId":"RuiShengGit"},"content":"        case \"deadline\":","lastModifiedDate":"2023-02-15"},{"lineNumber":105,"author":{"gitId":"RuiShengGit"},"content":"            String by \u003d components[3];","lastModifiedDate":"2023-02-15"},{"lineNumber":106,"author":{"gitId":"RuiShengGit"},"content":"            task \u003d new Deadline(description, by);","lastModifiedDate":"2023-02-15"},{"lineNumber":107,"author":{"gitId":"RuiShengGit"},"content":"            break;","lastModifiedDate":"2023-02-15"},{"lineNumber":108,"author":{"gitId":"RuiShengGit"},"content":"        case \"event\":","lastModifiedDate":"2023-02-15"},{"lineNumber":109,"author":{"gitId":"RuiShengGit"},"content":"            String from \u003d components[3];","lastModifiedDate":"2023-02-15"},{"lineNumber":110,"author":{"gitId":"RuiShengGit"},"content":"            String to \u003d components[4];","lastModifiedDate":"2023-02-15"},{"lineNumber":111,"author":{"gitId":"RuiShengGit"},"content":"            task \u003d new Event(description, from, to);","lastModifiedDate":"2023-02-15"},{"lineNumber":112,"author":{"gitId":"RuiShengGit"},"content":"            break;","lastModifiedDate":"2023-02-15"},{"lineNumber":113,"author":{"gitId":"RuiShengGit"},"content":"        default:","lastModifiedDate":"2023-02-15"},{"lineNumber":114,"author":{"gitId":"RuiShengGit"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":115,"author":{"gitId":"RuiShengGit"},"content":"        updateMark(mark, task);","lastModifiedDate":"2023-02-22"},{"lineNumber":116,"author":{"gitId":"RuiShengGit"},"content":"        return task;","lastModifiedDate":"2023-02-15"},{"lineNumber":117,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":118,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":119,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":120,"author":{"gitId":"RuiShengGit"},"content":"     * Determines if the task is mark as done from the saved string in the saved file.","lastModifiedDate":"2023-03-01"},{"lineNumber":121,"author":{"gitId":"RuiShengGit"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":122,"author":{"gitId":"RuiShengGit"},"content":"     * @param mark The string that represents whether the task has been marked/unmarked.","lastModifiedDate":"2023-02-24"},{"lineNumber":123,"author":{"gitId":"RuiShengGit"},"content":"     * @param task The task that is currently being added to the list.","lastModifiedDate":"2023-02-24"},{"lineNumber":124,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":125,"author":{"gitId":"RuiShengGit"},"content":"    private void updateMark(String mark, Task task) {","lastModifiedDate":"2023-02-15"},{"lineNumber":126,"author":{"gitId":"RuiShengGit"},"content":"        if (mark.equals(\"true\")) {","lastModifiedDate":"2023-02-15"},{"lineNumber":127,"author":{"gitId":"RuiShengGit"},"content":"            task.setDone(true);","lastModifiedDate":"2023-02-15"},{"lineNumber":128,"author":{"gitId":"RuiShengGit"},"content":"        } else {","lastModifiedDate":"2023-02-15"},{"lineNumber":129,"author":{"gitId":"RuiShengGit"},"content":"            task.setDone(false);","lastModifiedDate":"2023-02-15"},{"lineNumber":130,"author":{"gitId":"RuiShengGit"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":131,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":132,"author":{"gitId":"RuiShengGit"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"RuiShengGit":132}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RuiShengGit"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"RuiShengGit"},"content":"/**","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"RuiShengGit"},"content":" * Deadline class that keeps track of the task object with an additional deadline parameter.","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"RuiShengGit"},"content":" */","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"RuiShengGit"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"RuiShengGit"},"content":"     * The deadline in which the task should be completed by.","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"RuiShengGit"},"content":"    protected String by;","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"RuiShengGit"},"content":"     * Constructs a deadline task with the given description and deadline.","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"RuiShengGit"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"RuiShengGit"},"content":"     * @param description Description of the deadline task.","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"RuiShengGit"},"content":"     * @param by Time that the task should be completed by.","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"RuiShengGit"},"content":"    public Deadline(String description, String by){","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"RuiShengGit"},"content":"        super(description);","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"RuiShengGit"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"RuiShengGit"},"content":"     * Converts the deadline task into its string representation which contains","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"RuiShengGit"},"content":"     * information such as the task type, completion status, description and due date.","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"RuiShengGit"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"RuiShengGit"},"content":"     * @return String representation of the deadline task.","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"RuiShengGit"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"RuiShengGit"},"content":"    public String toString() {","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"RuiShengGit"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":34,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"RuiShengGit"},"content":"     * Converts the deadline task into a format to be saved in the database.","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"RuiShengGit"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"RuiShengGit"},"content":"     * @return String representation of the deadline task meant for saving into the database.","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"RuiShengGit"},"content":"    @Override","lastModifiedDate":"2023-02-15"},{"lineNumber":40,"author":{"gitId":"RuiShengGit"},"content":"    public String taskInformation() {","lastModifiedDate":"2023-02-15"},{"lineNumber":41,"author":{"gitId":"RuiShengGit"},"content":"        return String.format(\"%s , %s , %s\", \"deadline\", super.taskInformation(), this.by);","lastModifiedDate":"2023-02-15"},{"lineNumber":42,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":43,"author":{"gitId":"RuiShengGit"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"RuiShengGit":43}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RuiShengGit"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"RuiShengGit"},"content":"/**","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"RuiShengGit"},"content":" * Event class that keeps track of the task object with an additional duration parameter,","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"RuiShengGit"},"content":" * from and to time parameters.","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"RuiShengGit"},"content":" */","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"RuiShengGit"},"content":"public class Event extends Task{","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"RuiShengGit"},"content":"     * String representation of when the event starts.","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"RuiShengGit"},"content":"    protected String from;","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"RuiShengGit"},"content":"     * String representation of when the event ends.","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"RuiShengGit"},"content":"    protected String to;","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"RuiShengGit"},"content":"     * Constructs an event task with the given description and duration.","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"RuiShengGit"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"RuiShengGit"},"content":"     * @param description Description of the event task.","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"RuiShengGit"},"content":"     * @param from String representation of when the event starts.","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"RuiShengGit"},"content":"     * @param to String representation of when the event ends.","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"RuiShengGit"},"content":"    public Event (String description, String from, String to){","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"RuiShengGit"},"content":"        super(description);","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"RuiShengGit"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"RuiShengGit"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"RuiShengGit"},"content":"     * Converts the task into its string representation which contains","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"RuiShengGit"},"content":"     * information such as the task type, completion status, description, start and end times.","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"RuiShengGit"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"RuiShengGit"},"content":"     * @return String representation of the event task.","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"RuiShengGit"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"RuiShengGit"},"content":"    public String toString() {","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"RuiShengGit"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"RuiShengGit"},"content":"     * Converts the event task into a format to be saved in the database.","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"RuiShengGit"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"RuiShengGit"},"content":"     * @return String representation of the event task meant for saving into the database.","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"RuiShengGit"},"content":"    @Override","lastModifiedDate":"2023-02-15"},{"lineNumber":47,"author":{"gitId":"RuiShengGit"},"content":"    public String taskInformation() {","lastModifiedDate":"2023-02-15"},{"lineNumber":48,"author":{"gitId":"RuiShengGit"},"content":"        return String.format(\"%s , %s , %s , %s\", \"event\", super.taskInformation(), this.from, this.to);","lastModifiedDate":"2023-02-15"},{"lineNumber":49,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":50,"author":{"gitId":"RuiShengGit"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"RuiShengGit":50}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RuiShengGit"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"RuiShengGit"},"content":"/**","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"RuiShengGit"},"content":" * Parent class for task objects. Other subclasses inherit from this class.","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"RuiShengGit"},"content":" */","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"RuiShengGit"},"content":"public class Task {","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"RuiShengGit"},"content":"     * String that provides the description of the task.","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"RuiShengGit"},"content":"    protected String description;","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"RuiShengGit"},"content":"     * Boolean value on whether the task is marked as done or not.","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"RuiShengGit"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"RuiShengGit"},"content":"     * Constructor of the task object which initialises its description and","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"RuiShengGit"},"content":"     * set it as undone.","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"RuiShengGit"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"RuiShengGit"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"RuiShengGit"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"RuiShengGit"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"RuiShengGit"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"RuiShengGit"},"content":"     * Returns the status icon to represent whether the task has been marked.","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"RuiShengGit"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"RuiShengGit"},"content":"     * @return String icon that represents marked or unmarked.","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"RuiShengGit"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"RuiShengGit"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"RuiShengGit"},"content":"    //...","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":41,"author":{"gitId":"RuiShengGit"},"content":"     * Sets the task completion status.","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"RuiShengGit"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"RuiShengGit"},"content":"     * @param done boolean to determine whether task should be marked as completed.","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"RuiShengGit"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2023-01-23"},{"lineNumber":46,"author":{"gitId":"RuiShengGit"},"content":"        this.isDone \u003d done;","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":49,"author":{"gitId":"RuiShengGit"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-23"},{"lineNumber":50,"author":{"gitId":"RuiShengGit"},"content":"        return description;","lastModifiedDate":"2023-01-23"},{"lineNumber":51,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":52,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":53,"author":{"gitId":"RuiShengGit"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2023-01-23"},{"lineNumber":54,"author":{"gitId":"RuiShengGit"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-23"},{"lineNumber":55,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":56,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":57,"author":{"gitId":"RuiShengGit"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-01-23"},{"lineNumber":58,"author":{"gitId":"RuiShengGit"},"content":"        return isDone;","lastModifiedDate":"2023-01-23"},{"lineNumber":59,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":60,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":62,"author":{"gitId":"RuiShengGit"},"content":"     * Checks if the task description contains the specified string.","lastModifiedDate":"2023-02-24"},{"lineNumber":63,"author":{"gitId":"RuiShengGit"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":64,"author":{"gitId":"RuiShengGit"},"content":"     * @param filter The string that the task description will be searched for","lastModifiedDate":"2023-02-24"},{"lineNumber":65,"author":{"gitId":"RuiShengGit"},"content":"     * @return A boolean based on whether the task description contains the filter string","lastModifiedDate":"2023-02-24"},{"lineNumber":66,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":67,"author":{"gitId":"RuiShengGit"},"content":"    public boolean containsFilter(String filter) {","lastModifiedDate":"2023-02-22"},{"lineNumber":68,"author":{"gitId":"RuiShengGit"},"content":"        return description.contains(filter);","lastModifiedDate":"2023-02-22"},{"lineNumber":69,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":70,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":71,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":72,"author":{"gitId":"RuiShengGit"},"content":"     * Converts the task into its string representation which contains","lastModifiedDate":"2023-02-24"},{"lineNumber":73,"author":{"gitId":"RuiShengGit"},"content":"     * information such as its status icon and its description.","lastModifiedDate":"2023-02-24"},{"lineNumber":74,"author":{"gitId":"RuiShengGit"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":75,"author":{"gitId":"RuiShengGit"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2023-02-24"},{"lineNumber":76,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":77,"author":{"gitId":"RuiShengGit"},"content":"    public String toString() {","lastModifiedDate":"2023-02-01"},{"lineNumber":78,"author":{"gitId":"RuiShengGit"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-02-01"},{"lineNumber":79,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":80,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":81,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":82,"author":{"gitId":"RuiShengGit"},"content":"     * Converts the task into a format to be saved in the database.","lastModifiedDate":"2023-02-24"},{"lineNumber":83,"author":{"gitId":"RuiShengGit"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":84,"author":{"gitId":"RuiShengGit"},"content":"     * @return String representation of the task meant for saving into the database.","lastModifiedDate":"2023-02-24"},{"lineNumber":85,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":86,"author":{"gitId":"RuiShengGit"},"content":"    public String taskInformation() {","lastModifiedDate":"2023-02-15"},{"lineNumber":87,"author":{"gitId":"RuiShengGit"},"content":"        return String.format(\"%s , %s\", this.isDone, this.description);","lastModifiedDate":"2023-02-15"},{"lineNumber":88,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":89,"author":{"gitId":"RuiShengGit"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"RuiShengGit":89}},{"path":"src/main/java/duke/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RuiShengGit"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-21"},{"lineNumber":2,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":3,"author":{"gitId":"RuiShengGit"},"content":"import duke.storage.Database;","lastModifiedDate":"2023-02-21"},{"lineNumber":4,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":5,"author":{"gitId":"RuiShengGit"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-21"},{"lineNumber":6,"author":{"gitId":"RuiShengGit"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-21"},{"lineNumber":7,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":8,"author":{"gitId":"RuiShengGit"},"content":"/**","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"RuiShengGit"},"content":" * Task list class that contains the current list of task objects.","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"RuiShengGit"},"content":" */","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"RuiShengGit"},"content":"public class TaskList {","lastModifiedDate":"2023-02-21"},{"lineNumber":12,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":13,"author":{"gitId":"RuiShengGit"},"content":"    public ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-02-21"},{"lineNumber":14,"author":{"gitId":"RuiShengGit"},"content":"    public static Database database;","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"RuiShengGit"},"content":"     * Constructor of the TaskList where it takes in the stored tasks in the database\u0027s Arraylist of tasks.","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"RuiShengGit"},"content":"    public TaskList(){","lastModifiedDate":"2023-02-21"},{"lineNumber":20,"author":{"gitId":"RuiShengGit"},"content":"        database \u003d new Database();","lastModifiedDate":"2023-02-21"},{"lineNumber":21,"author":{"gitId":"RuiShengGit"},"content":"        tasks \u003d database.taskList;","lastModifiedDate":"2023-02-21"},{"lineNumber":22,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":23,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":24,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"RuiShengGit"},"content":"     * Returns the current number of tasks in the task list.","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"RuiShengGit"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"RuiShengGit"},"content":"     * @return The current number of tasks in the task list.","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"RuiShengGit"},"content":"   public int listCount() {","lastModifiedDate":"2023-02-21"},{"lineNumber":30,"author":{"gitId":"RuiShengGit"},"content":"       return tasks.size();","lastModifiedDate":"2023-02-21"},{"lineNumber":31,"author":{"gitId":"RuiShengGit"},"content":"   }","lastModifiedDate":"2023-02-21"},{"lineNumber":32,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":33,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"RuiShengGit"},"content":"     * Appends the given task inputted by the user to the task list and the database.","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"RuiShengGit"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"RuiShengGit"},"content":"     * @param task The task that would be added into task list and the database.","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"RuiShengGit"},"content":"    public void addTasks (Task task) {","lastModifiedDate":"2023-02-21"},{"lineNumber":39,"author":{"gitId":"RuiShengGit"},"content":"        tasks.add(task);","lastModifiedDate":"2023-02-21"},{"lineNumber":40,"author":{"gitId":"RuiShengGit"},"content":"        addToDatabase(task);","lastModifiedDate":"2023-02-21"},{"lineNumber":41,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":42,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":43,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"RuiShengGit"},"content":"     * Retrieves the task at the given index of the task list.","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"RuiShengGit"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"RuiShengGit"},"content":"     * @param index The given index that corresponds to the position of a task in a list.","lastModifiedDate":"2023-02-24"},{"lineNumber":47,"author":{"gitId":"RuiShengGit"},"content":"     * @return The task at the given index of the task list.","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"RuiShengGit"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-02-21"},{"lineNumber":50,"author":{"gitId":"RuiShengGit"},"content":"       return tasks.get(index);","lastModifiedDate":"2023-02-21"},{"lineNumber":51,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":52,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":53,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":54,"author":{"gitId":"RuiShengGit"},"content":"     * Deletes the task at the given index of the task list.","lastModifiedDate":"2023-02-24"},{"lineNumber":55,"author":{"gitId":"RuiShengGit"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":56,"author":{"gitId":"RuiShengGit"},"content":"     * @param index The given index that corresponds to the position of a task in a list.","lastModifiedDate":"2023-02-24"},{"lineNumber":57,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":58,"author":{"gitId":"RuiShengGit"},"content":"    public void deleteTasks(int index) {","lastModifiedDate":"2023-02-21"},{"lineNumber":59,"author":{"gitId":"RuiShengGit"},"content":"        tasks.remove(index);","lastModifiedDate":"2023-02-21"},{"lineNumber":60,"author":{"gitId":"RuiShengGit"},"content":"        try {","lastModifiedDate":"2023-02-21"},{"lineNumber":61,"author":{"gitId":"RuiShengGit"},"content":"            database.updateDatabase();","lastModifiedDate":"2023-02-21"},{"lineNumber":62,"author":{"gitId":"RuiShengGit"},"content":"        } catch (IOException e){","lastModifiedDate":"2023-02-21"},{"lineNumber":63,"author":{"gitId":"RuiShengGit"},"content":"            System.out.println(\"Failed to update database\");","lastModifiedDate":"2023-02-21"},{"lineNumber":64,"author":{"gitId":"RuiShengGit"},"content":"        }","lastModifiedDate":"2023-02-21"},{"lineNumber":65,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":66,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":67,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":68,"author":{"gitId":"RuiShengGit"},"content":"     * Marks the task as done/not done based on the boolean isDone","lastModifiedDate":"2023-02-24"},{"lineNumber":69,"author":{"gitId":"RuiShengGit"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":70,"author":{"gitId":"RuiShengGit"},"content":"     * @param index The given index of the task to be set as done or not done","lastModifiedDate":"2023-02-24"},{"lineNumber":71,"author":{"gitId":"RuiShengGit"},"content":"     * @param isDone The boolean which determines whether a task is marked or unmarked","lastModifiedDate":"2023-02-24"},{"lineNumber":72,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":73,"author":{"gitId":"RuiShengGit"},"content":"    public void setDone(int index, boolean isDone) {","lastModifiedDate":"2023-02-22"},{"lineNumber":74,"author":{"gitId":"RuiShengGit"},"content":"        tasks.get(index).setDone(isDone);","lastModifiedDate":"2023-02-22"},{"lineNumber":75,"author":{"gitId":"RuiShengGit"},"content":"        try {","lastModifiedDate":"2023-02-22"},{"lineNumber":76,"author":{"gitId":"RuiShengGit"},"content":"            database.updateDatabase();","lastModifiedDate":"2023-02-22"},{"lineNumber":77,"author":{"gitId":"RuiShengGit"},"content":"        } catch (IOException e){","lastModifiedDate":"2023-02-22"},{"lineNumber":78,"author":{"gitId":"RuiShengGit"},"content":"            System.out.println(\"Failed to update database\");","lastModifiedDate":"2023-02-22"},{"lineNumber":79,"author":{"gitId":"RuiShengGit"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":80,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":81,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":82,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":83,"author":{"gitId":"RuiShengGit"},"content":"     * Appends the task to the database.","lastModifiedDate":"2023-02-24"},{"lineNumber":84,"author":{"gitId":"RuiShengGit"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":85,"author":{"gitId":"RuiShengGit"},"content":"     * @param currTask The task that is to be added and saved in the database.","lastModifiedDate":"2023-02-24"},{"lineNumber":86,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":87,"author":{"gitId":"RuiShengGit"},"content":"    public static void addToDatabase(Task currTask){","lastModifiedDate":"2023-02-21"},{"lineNumber":88,"author":{"gitId":"RuiShengGit"},"content":"        try {","lastModifiedDate":"2023-02-21"},{"lineNumber":89,"author":{"gitId":"RuiShengGit"},"content":"            database.appendSaveTasks(currTask.taskInformation());","lastModifiedDate":"2023-02-21"},{"lineNumber":90,"author":{"gitId":"RuiShengGit"},"content":"        } catch (IOException e){","lastModifiedDate":"2023-02-21"},{"lineNumber":91,"author":{"gitId":"RuiShengGit"},"content":"            System.out.println(\"Failed to append task to database\");","lastModifiedDate":"2023-02-21"},{"lineNumber":92,"author":{"gitId":"RuiShengGit"},"content":"        }","lastModifiedDate":"2023-02-21"},{"lineNumber":93,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":94,"author":{"gitId":"RuiShengGit"},"content":"}","lastModifiedDate":"2023-02-21"}],"authorContributionMap":{"RuiShengGit":94}},{"path":"src/main/java/duke/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RuiShengGit"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"RuiShengGit"},"content":"/**","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"RuiShengGit"},"content":" * Todo class that keeps track of the task object and its description.","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"RuiShengGit"},"content":" */","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"RuiShengGit"},"content":"public class Todo extends Task{","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"RuiShengGit"},"content":"     * Constructs a todo task with the given description.","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"RuiShengGit"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"RuiShengGit"},"content":"     * @param description String description of the todo task.","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"RuiShengGit"},"content":"    public Todo(String description){","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"RuiShengGit"},"content":"        super(description);","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"RuiShengGit"},"content":"     * Converts the todo task into its string representation which contains","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"RuiShengGit"},"content":"     * information such as the task type, completion status and description.","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"RuiShengGit"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"RuiShengGit"},"content":"     * @return String representation of the todo task.","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"RuiShengGit"},"content":"    public String toString() {","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"RuiShengGit"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"RuiShengGit"},"content":"     * Converts the todo task into a format to be saved in the database.","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"RuiShengGit"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"RuiShengGit"},"content":"     * @return String representation of the todo task meant for saving into the database.","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"RuiShengGit"},"content":"    @Override","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"RuiShengGit"},"content":"    public String taskInformation() {","lastModifiedDate":"2023-02-15"},{"lineNumber":33,"author":{"gitId":"RuiShengGit"},"content":"        return String.format(\"%s , %s\", \"todo\", super.taskInformation());","lastModifiedDate":"2023-02-15"},{"lineNumber":34,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":35,"author":{"gitId":"RuiShengGit"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"RuiShengGit":35}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RuiShengGit"},"content":"package duke.ui;","lastModifiedDate":"2023-02-21"},{"lineNumber":2,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":3,"author":{"gitId":"RuiShengGit"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-02-21"},{"lineNumber":4,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":5,"author":{"gitId":"RuiShengGit"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"RuiShengGit"},"content":"/**","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"RuiShengGit"},"content":" * Class that contains methods to send messages to users depending on what they input.","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"RuiShengGit"},"content":" */","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"RuiShengGit"},"content":"public class Ui {","lastModifiedDate":"2023-02-21"},{"lineNumber":11,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"RuiShengGit"},"content":"     * String of underscores that represents a divider in the terminal.","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"RuiShengGit"},"content":"    public static final String LONG_LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-02-21"},{"lineNumber":15,"author":{"gitId":"RuiShengGit"},"content":"    private Scanner in;","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"RuiShengGit"},"content":"    public Ui() {","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"RuiShengGit"},"content":"        in \u003d new Scanner(System.in);","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":20,"author":{"gitId":"RuiShengGit"},"content":"    public String readUserInput() {","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"RuiShengGit"},"content":"        String userInput \u003d in.nextLine();","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"RuiShengGit"},"content":"        return userInput;","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"RuiShengGit"},"content":"     * Prints out the long line, divider on a new line.","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"RuiShengGit"},"content":"    public static void printLine(){","lastModifiedDate":"2023-02-21"},{"lineNumber":28,"author":{"gitId":"RuiShengGit"},"content":"        System.out.println(LONG_LINE);","lastModifiedDate":"2023-02-21"},{"lineNumber":29,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":30,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":31,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"RuiShengGit"},"content":"     * Displays a welcome message when program starts running.","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"RuiShengGit"},"content":"    public static void printGreetings (){","lastModifiedDate":"2023-02-21"},{"lineNumber":35,"author":{"gitId":"RuiShengGit"},"content":"        printLine();","lastModifiedDate":"2023-02-21"},{"lineNumber":36,"author":{"gitId":"RuiShengGit"},"content":"        System.out.println(\"Hello I\u0027m Duke\");","lastModifiedDate":"2023-02-21"},{"lineNumber":37,"author":{"gitId":"RuiShengGit"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-02-21"},{"lineNumber":38,"author":{"gitId":"RuiShengGit"},"content":"        printLine();","lastModifiedDate":"2023-02-21"},{"lineNumber":39,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":40,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":41,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"RuiShengGit"},"content":"     * Displays an exit message when user exits the program by inputting \u0027bye\u0027.","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"RuiShengGit"},"content":"    public static void printExit() {","lastModifiedDate":"2023-02-21"},{"lineNumber":45,"author":{"gitId":"RuiShengGit"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-02-21"},{"lineNumber":46,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":47,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":48,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"RuiShengGit"},"content":"     * Displays the current number of tasks in the task list.","lastModifiedDate":"2023-02-24"},{"lineNumber":50,"author":{"gitId":"RuiShengGit"},"content":"     * @param listCount The current number of tasks in the list.","lastModifiedDate":"2023-02-24"},{"lineNumber":51,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":52,"author":{"gitId":"RuiShengGit"},"content":"    public static void printListMessage(int listCount) {","lastModifiedDate":"2023-02-21"},{"lineNumber":53,"author":{"gitId":"RuiShengGit"},"content":"        System.out.println(\"Now you have \" + Integer.toString(listCount) + \" tasks in the list.\");","lastModifiedDate":"2023-02-21"},{"lineNumber":54,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":55,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":56,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":57,"author":{"gitId":"RuiShengGit"},"content":"     * Displays a message to inform user that the task had been removed.","lastModifiedDate":"2023-02-24"},{"lineNumber":58,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":59,"author":{"gitId":"RuiShengGit"},"content":"    public static void deleteMessage() {","lastModifiedDate":"2023-02-21"},{"lineNumber":60,"author":{"gitId":"RuiShengGit"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-02-21"},{"lineNumber":61,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":62,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":63,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":64,"author":{"gitId":"RuiShengGit"},"content":"     * Displays the message when a task is being added into the list","lastModifiedDate":"2023-02-24"},{"lineNumber":65,"author":{"gitId":"RuiShengGit"},"content":"     * and the updated number of tasks in the list.","lastModifiedDate":"2023-02-24"},{"lineNumber":66,"author":{"gitId":"RuiShengGit"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":67,"author":{"gitId":"RuiShengGit"},"content":"     * @param taskList The task list that the task was added to, to be referenced for the","lastModifiedDate":"2023-02-24"},{"lineNumber":68,"author":{"gitId":"RuiShengGit"},"content":"     *                 number of tasks and the task added.","lastModifiedDate":"2023-02-24"},{"lineNumber":69,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":70,"author":{"gitId":"RuiShengGit"},"content":"    public static void printAddedTaskCommand(TaskList taskList) {","lastModifiedDate":"2023-02-21"},{"lineNumber":71,"author":{"gitId":"RuiShengGit"},"content":"        int lastElement \u003d taskList.listCount() - 1;","lastModifiedDate":"2023-02-21"},{"lineNumber":72,"author":{"gitId":"RuiShengGit"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-02-21"},{"lineNumber":73,"author":{"gitId":"RuiShengGit"},"content":"        System.out.println(\"  \" + taskList.getTask(lastElement).toString());","lastModifiedDate":"2023-02-21"},{"lineNumber":74,"author":{"gitId":"RuiShengGit"},"content":"        System.out.println(\"Now you have \" + Integer.toString(taskList.listCount()) + \" tasks in the list.\");","lastModifiedDate":"2023-02-21"},{"lineNumber":75,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":76,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":77,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":78,"author":{"gitId":"RuiShengGit"},"content":"     * Displays a message to inform user that the task has been marked.","lastModifiedDate":"2023-02-24"},{"lineNumber":79,"author":{"gitId":"RuiShengGit"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":80,"author":{"gitId":"RuiShengGit"},"content":"     * @param taskList The task list to be referenced from for the marking of the task.","lastModifiedDate":"2023-02-24"},{"lineNumber":81,"author":{"gitId":"RuiShengGit"},"content":"     * @param index The index of task in the task list that the user wants to mark.","lastModifiedDate":"2023-02-24"},{"lineNumber":82,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":83,"author":{"gitId":"RuiShengGit"},"content":"    public static void markDoneMessage(TaskList taskList, int index) {","lastModifiedDate":"2023-02-21"},{"lineNumber":84,"author":{"gitId":"RuiShengGit"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-02-21"},{"lineNumber":85,"author":{"gitId":"RuiShengGit"},"content":"        System.out.println(taskList.getTask(index).toString());","lastModifiedDate":"2023-02-21"},{"lineNumber":86,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":87,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":88,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":89,"author":{"gitId":"RuiShengGit"},"content":"     * Displays a message to inform user that the task marking has been removed.","lastModifiedDate":"2023-02-24"},{"lineNumber":90,"author":{"gitId":"RuiShengGit"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":91,"author":{"gitId":"RuiShengGit"},"content":"     * @param taskList The task list to be referenced from for the removing of the mark of the task.","lastModifiedDate":"2023-02-24"},{"lineNumber":92,"author":{"gitId":"RuiShengGit"},"content":"     * @param index The index of task in the task list that the user wants to unmark.","lastModifiedDate":"2023-02-24"},{"lineNumber":93,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":94,"author":{"gitId":"RuiShengGit"},"content":"    public static void markUndoneMessage(TaskList taskList, int index){","lastModifiedDate":"2023-02-21"},{"lineNumber":95,"author":{"gitId":"RuiShengGit"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-02-21"},{"lineNumber":96,"author":{"gitId":"RuiShengGit"},"content":"        System.out.println(taskList.getTask(index).toString());","lastModifiedDate":"2023-02-21"},{"lineNumber":97,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":98,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":99,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":100,"author":{"gitId":"RuiShengGit"},"content":"     * Displays an opening message when user inputs  \u0027list\u0027.","lastModifiedDate":"2023-02-24"},{"lineNumber":101,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":102,"author":{"gitId":"RuiShengGit"},"content":"    public static void printOpeningListMessage() {","lastModifiedDate":"2023-02-22"},{"lineNumber":103,"author":{"gitId":"RuiShengGit"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-02-22"},{"lineNumber":104,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":105,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":106,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":107,"author":{"gitId":"RuiShengGit"},"content":"     * Displays a message when user inputs \u0027find\u0027.","lastModifiedDate":"2023-02-24"},{"lineNumber":108,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":109,"author":{"gitId":"RuiShengGit"},"content":"    public static void printFindMessage(){","lastModifiedDate":"2023-02-22"},{"lineNumber":110,"author":{"gitId":"RuiShengGit"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-02-22"},{"lineNumber":111,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":112,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":113,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":114,"author":{"gitId":"RuiShengGit"},"content":"     * Displays an error message when user inputs an invalid command.","lastModifiedDate":"2023-02-24"},{"lineNumber":115,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":116,"author":{"gitId":"RuiShengGit"},"content":"    public static void printInvalidMessage() {","lastModifiedDate":"2023-02-21"},{"lineNumber":117,"author":{"gitId":"RuiShengGit"},"content":"        System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-02-21"},{"lineNumber":118,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":119,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":120,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":121,"author":{"gitId":"RuiShengGit"},"content":"     * Displays an error message when user inputs an empty command.","lastModifiedDate":"2023-02-24"},{"lineNumber":122,"author":{"gitId":"RuiShengGit"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":123,"author":{"gitId":"RuiShengGit"},"content":"     * @param command The string for the corresponding task being inputted.","lastModifiedDate":"2023-02-24"},{"lineNumber":124,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":125,"author":{"gitId":"RuiShengGit"},"content":"    public static void printEmptyCommandMessage(String command) {","lastModifiedDate":"2023-02-21"},{"lineNumber":126,"author":{"gitId":"RuiShengGit"},"content":"        System.out.println(\"☹ OOPS!!! The description of a \" + command + \" cannot be empty.\");","lastModifiedDate":"2023-02-21"},{"lineNumber":127,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":128,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":129,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":130,"author":{"gitId":"RuiShengGit"},"content":"     * Displays an error message when user inputs an index that is out of bounds or does not exist.","lastModifiedDate":"2023-02-24"},{"lineNumber":131,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":132,"author":{"gitId":"RuiShengGit"},"content":"    public static void printInvalidIndexMessage() {","lastModifiedDate":"2023-02-21"},{"lineNumber":133,"author":{"gitId":"RuiShengGit"},"content":"        System.out.println(\"No such task exist! Try again.\");","lastModifiedDate":"2023-02-21"},{"lineNumber":134,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":135,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":136,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":137,"author":{"gitId":"RuiShengGit"},"content":"     * Displays an error message when user did not enter the index after a command that needs an index.","lastModifiedDate":"2023-03-01"},{"lineNumber":138,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":139,"author":{"gitId":"RuiShengGit"},"content":"    public static void printEmptyIndexMessage(){","lastModifiedDate":"2023-03-01"},{"lineNumber":140,"author":{"gitId":"RuiShengGit"},"content":"        System.out.println(\"Index of the command cannot be empty!\");","lastModifiedDate":"2023-03-01"},{"lineNumber":141,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":142,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":143,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":144,"author":{"gitId":"RuiShengGit"},"content":"     * Displays an error message when user did not enter a keyword for the find command.","lastModifiedDate":"2023-03-01"},{"lineNumber":145,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":146,"author":{"gitId":"RuiShengGit"},"content":"    public static void printEmptyFilterMessage(){","lastModifiedDate":"2023-03-01"},{"lineNumber":147,"author":{"gitId":"RuiShengGit"},"content":"        System.out.println(\"Please enter a keyword. The keyword cannot be left empty\");","lastModifiedDate":"2023-03-01"},{"lineNumber":148,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":149,"author":{"gitId":"RuiShengGit"},"content":"}","lastModifiedDate":"2023-02-21"}],"authorContributionMap":{"RuiShengGit":149}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"RuiShengGit"},"content":"todo borrow book","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"RuiShengGit"},"content":"list","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"RuiShengGit"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"RuiShengGit"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"RuiShengGit"},"content":"mark 1","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"RuiShengGit"},"content":"list","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"RuiShengGit"},"content":"mark 2","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"RuiShengGit"},"content":"unmark 1","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"RuiShengGit"},"content":"list","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"RuiShengGit"},"content":"todo eat book","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"RuiShengGit"},"content":"delete 4","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"RuiShengGit"},"content":"list","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"RuiShengGit"},"content":"find book","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"RuiShengGit"},"content":"blah","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"RuiShengGit"},"content":"deadline","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"RuiShengGit"},"content":"mark 200","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"RuiShengGit"},"content":"bye","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"RuiShengGit":17}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"RuiShengGit"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\tasks\\*.java ..\\src\\main\\java\\duke\\exception\\*.java ..\\src\\main\\java\\duke\\commands\\*.java ..\\src\\main\\java\\duke\\ui\\*.java","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"RuiShengGit":1}}]
