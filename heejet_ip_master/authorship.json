[{"path":"src/main/java/CheckBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"heejet"},"content":"public class CheckBox {","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"heejet"},"content":"    /** Visual representation of the checkbox */","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"heejet"},"content":"    private String checkBox;","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"heejet"},"content":"    public CheckBox() {","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"heejet"},"content":"        checkBox \u003d \"[ ]\";","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"heejet"},"content":"    /** Change the state of the checkbox from unmarked to marked */","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"heejet"},"content":"    public void markCheckBox() {","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"heejet"},"content":"        checkBox \u003d \"[X]\";","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"heejet"},"content":"    /** Change the state of the checkbox from marked to unmarked */","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"heejet"},"content":"    public void unmarkCheckBox() {","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"heejet"},"content":"        checkBox \u003d \"[ ]\";","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"heejet"},"content":"    /** Prints out the checkbox */","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"heejet"},"content":"    public void printCheckBox() {","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"heejet"},"content":"        System.out.print(checkBox + \" \");","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"heejet"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"heejet":23}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"heejet"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"heejet"},"content":"    protected String endDate;","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"heejet"},"content":"    public Deadline(String name, int ID, String endDate) {","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"heejet"},"content":"        super(name, ID);","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"heejet"},"content":"        this.label.setLabel(\"D\");","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"heejet"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"heejet"},"content":"    /** Prints out the label, checkBox, name followed by the deadline */","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"heejet"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"heejet"},"content":"    public void printTaskName() {","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"heejet"},"content":"        this.label.printLabel();","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"heejet"},"content":"        this.checkBox.printCheckBox();","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"heejet"},"content":"        System.out.print(this.getTaskName());","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"heejet"},"content":"        System.out.println(\" (Due: \" + this.endDate + \")\");","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"heejet"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"heejet":17}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"heejet"},"content":"public class Event extends Deadline {","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"heejet"},"content":"    protected String startDate;","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"heejet"},"content":"    public Event(String name, int ID, String startDate, String endDate) {","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"heejet"},"content":"        super(name, ID, endDate);","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"heejet"},"content":"        this.label.setLabel(\"E\");","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"heejet"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"heejet"},"content":"    /** Prints out the label, checkBox, name followed by the deadline */","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"heejet"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"heejet"},"content":"    public void printTaskName() {","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"heejet"},"content":"        this.label.printLabel();","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"heejet"},"content":"        this.checkBox.printCheckBox();","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"heejet"},"content":"        System.out.print(this.getTaskName());","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"heejet"},"content":"        System.out.println(\" (From: \" + this.startDate + \" to: \" + this.endDate + \")\");","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"heejet"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"heejet":17}},{"path":"src/main/java/InvalidIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"heejet"},"content":"public class InvalidIndexException extends Exception{","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"heejet"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"heejet":2}},{"path":"src/main/java/Label.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"heejet"},"content":"public class Label {","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"heejet"},"content":"    /** Visual representation of the task label */","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"heejet"},"content":"    private String label;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"heejet"},"content":"    public Label() {","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"heejet"},"content":"        label \u003d \"[ ]\";","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"heejet"},"content":"    /** Fills in the label with a marking that corresponds to the type of task */","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"heejet"},"content":"    public void setLabel(String labelMark) {","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"heejet"},"content":"        label \u003d String.format(\"[\" + labelMark + \"]\");","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"heejet"},"content":"    /** Prints out the label */","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"heejet"},"content":"    public void printLabel() {","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"heejet"},"content":"        System.out.print(label);","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"heejet"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"heejet":18}},{"path":"src/main/java/Luke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"heejet"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"heejet"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"heejet"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"heejet"},"content":"public class Luke {","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"heejet"},"content":"    /** An object to manage the responses of LUKE */","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"heejet"},"content":"    private static Response response;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"heejet"},"content":"    /** A scanner object to read in user input */","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"heejet"},"content":"    private static Scanner scanner;","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"heejet"},"content":"    /** An object used to manage the tasks added by the user */","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"heejet"},"content":"    private static TaskOrganizer taskOrganizer;","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"heejet"},"content":"    /** A list of valid commands */","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"heejet"},"content":"    private static ArrayList\u003cString\u003e commands;","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"heejet"},"content":"    /** Initializes all the objects used in LUKE, says \"Hi\" to the user */","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"heejet"},"content":"    private static void initialize() {","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"heejet"},"content":"        // Initialization","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"heejet"},"content":"        response \u003d new Response();","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"heejet"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"heejet"},"content":"        taskOrganizer \u003d new TaskOrganizer();","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"heejet"},"content":"        commands \u003d new ArrayList\u003cString\u003e(","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"heejet"},"content":"                Arrays.asList(\"add\", \"list\", \"mark\", \"unmark\")","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"heejet"},"content":"        );","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"heejet"},"content":"        // Say \"Hi\" to the user","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"heejet"},"content":"        response.sayHi();","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"heejet"},"content":"    /** Closes the scanner and says \"Bye\" to the user */","lastModifiedDate":"2023-02-04"},{"lineNumber":33,"author":{"gitId":"heejet"},"content":"    public static void endProgram() {","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"heejet"},"content":"        scanner.close();","lastModifiedDate":"2023-02-04"},{"lineNumber":35,"author":{"gitId":"heejet"},"content":"        response.sayBye();","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"heejet"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"heejet"},"content":"     * Takes in a string and echos it.","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"heejet"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"heejet"},"content":"     * @param userInput The string to be echoed.","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"heejet"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"heejet"},"content":"    private static void echoString(String userInput) {","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"heejet"},"content":"        response.printString(userInput);","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"heejet"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"heejet"},"content":"     * Extracts out the first word of an input string.","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"heejet"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"heejet"},"content":"     * @param userInput The input string.","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"heejet"},"content":"     * @return The first word of the string.","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"heejet"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"heejet"},"content":"    private static String getFirstWord(String userInput) {","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"heejet"},"content":"        String[] processedInputs \u003d userInput.split(\" \", 2);","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"heejet"},"content":"        return processedInputs[0];","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"heejet"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"heejet"},"content":"     * Removes the first word of an input string and returns the remaining string.","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"heejet"},"content":"     * Returns null if the string only consist of one word.","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"heejet"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"heejet"},"content":"     * @param userInput The input string.","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"heejet"},"content":"     * @return The input string with the first word removed.","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"heejet"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"heejet"},"content":"    private static String removeFirstWord(String userInput) {","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"heejet"},"content":"        String[] processedInputs \u003d userInput.split(\" \", 2);","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"heejet"},"content":"        if (processedInputs.length \u003d\u003d 1) {","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"heejet"},"content":"            return null;","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"heejet"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"heejet"},"content":"        return processedInputs[1];","lastModifiedDate":"2023-02-01"},{"lineNumber":71,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":72,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":73,"author":{"gitId":"heejet"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":74,"author":{"gitId":"heejet"},"content":"     * Checks if the input string is a valid command.","lastModifiedDate":"2023-02-01"},{"lineNumber":75,"author":{"gitId":"heejet"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":76,"author":{"gitId":"heejet"},"content":"     * @param keyWord The input string.","lastModifiedDate":"2023-02-01"},{"lineNumber":77,"author":{"gitId":"heejet"},"content":"     * @return True if the input string is a valid keyword, False otherwise.","lastModifiedDate":"2023-02-01"},{"lineNumber":78,"author":{"gitId":"heejet"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":79,"author":{"gitId":"heejet"},"content":"    private static boolean isCommand(String keyWord) {","lastModifiedDate":"2023-02-01"},{"lineNumber":80,"author":{"gitId":"heejet"},"content":"        return commands.contains(keyWord);","lastModifiedDate":"2023-02-01"},{"lineNumber":81,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":82,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":83,"author":{"gitId":"heejet"},"content":"    /** Informs the user that he/ she have entered an invalid command */","lastModifiedDate":"2023-02-01"},{"lineNumber":84,"author":{"gitId":"heejet"},"content":"    private static void handleInvalidCommand() {","lastModifiedDate":"2023-02-01"},{"lineNumber":85,"author":{"gitId":"heejet"},"content":"        response.printInvalidCommand();","lastModifiedDate":"2023-02-01"},{"lineNumber":86,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":87,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":88,"author":{"gitId":"heejet"},"content":"    /** Informs the user that index entered is out of bounds */","lastModifiedDate":"2023-02-01"},{"lineNumber":89,"author":{"gitId":"heejet"},"content":"    private static void handleOutOfBounds() {","lastModifiedDate":"2023-02-01"},{"lineNumber":90,"author":{"gitId":"heejet"},"content":"        response.printOutOfBounds();","lastModifiedDate":"2023-02-01"},{"lineNumber":91,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":92,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":93,"author":{"gitId":"heejet"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":94,"author":{"gitId":"heejet"},"content":"     * Adds a task to the TaskOrganizer based on information stored in the input string.","lastModifiedDate":"2023-02-01"},{"lineNumber":95,"author":{"gitId":"heejet"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":96,"author":{"gitId":"heejet"},"content":"     * @param taskInfo Input string consisting of all relevant task information such as type, name, and relevant dates.","lastModifiedDate":"2023-02-01"},{"lineNumber":97,"author":{"gitId":"heejet"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":98,"author":{"gitId":"heejet"},"content":"    private static void executeAddTask(String taskInfo) {","lastModifiedDate":"2023-02-01"},{"lineNumber":99,"author":{"gitId":"heejet"},"content":"        // Check if taskInfo is empty","lastModifiedDate":"2023-02-01"},{"lineNumber":100,"author":{"gitId":"heejet"},"content":"        if (taskInfo \u003d\u003d null) {","lastModifiedDate":"2023-02-01"},{"lineNumber":101,"author":{"gitId":"heejet"},"content":"            handleInvalidCommand();","lastModifiedDate":"2023-02-01"},{"lineNumber":102,"author":{"gitId":"heejet"},"content":"            return;","lastModifiedDate":"2023-02-01"},{"lineNumber":103,"author":{"gitId":"heejet"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":104,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":105,"author":{"gitId":"heejet"},"content":"        String taskType \u003d getFirstWord(taskInfo);","lastModifiedDate":"2023-02-01"},{"lineNumber":106,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":107,"author":{"gitId":"heejet"},"content":"        //Check if the task type entered by the user is valid","lastModifiedDate":"2023-02-01"},{"lineNumber":108,"author":{"gitId":"heejet"},"content":"        if (!taskOrganizer.isTaskType(taskType)) {","lastModifiedDate":"2023-02-01"},{"lineNumber":109,"author":{"gitId":"heejet"},"content":"            handleInvalidCommand();","lastModifiedDate":"2023-02-01"},{"lineNumber":110,"author":{"gitId":"heejet"},"content":"            return;","lastModifiedDate":"2023-02-01"},{"lineNumber":111,"author":{"gitId":"heejet"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":112,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":113,"author":{"gitId":"heejet"},"content":"        String taskDetail \u003d removeFirstWord(taskInfo);","lastModifiedDate":"2023-02-01"},{"lineNumber":114,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":115,"author":{"gitId":"heejet"},"content":"        //Checks if the name of the task is empty","lastModifiedDate":"2023-02-01"},{"lineNumber":116,"author":{"gitId":"heejet"},"content":"        if (taskDetail \u003d\u003d null) {","lastModifiedDate":"2023-02-01"},{"lineNumber":117,"author":{"gitId":"heejet"},"content":"            handleInvalidCommand();","lastModifiedDate":"2023-02-01"},{"lineNumber":118,"author":{"gitId":"heejet"},"content":"            return;","lastModifiedDate":"2023-02-01"},{"lineNumber":119,"author":{"gitId":"heejet"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":120,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":121,"author":{"gitId":"heejet"},"content":"        String taskName \u003d getFirstWord(taskDetail);","lastModifiedDate":"2023-02-01"},{"lineNumber":122,"author":{"gitId":"heejet"},"content":"        String taskDate \u003d removeFirstWord(taskDetail);","lastModifiedDate":"2023-02-01"},{"lineNumber":123,"author":{"gitId":"heejet"},"content":"        boolean isAdded \u003d taskOrganizer.addTask(taskType, taskName, taskDate);","lastModifiedDate":"2023-02-01"},{"lineNumber":124,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":125,"author":{"gitId":"heejet"},"content":"        //Check if the task has been added without any errors","lastModifiedDate":"2023-02-01"},{"lineNumber":126,"author":{"gitId":"heejet"},"content":"        if (!isAdded) {","lastModifiedDate":"2023-02-01"},{"lineNumber":127,"author":{"gitId":"heejet"},"content":"            handleInvalidCommand();","lastModifiedDate":"2023-02-01"},{"lineNumber":128,"author":{"gitId":"heejet"},"content":"            return;","lastModifiedDate":"2023-02-01"},{"lineNumber":129,"author":{"gitId":"heejet"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":130,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":131,"author":{"gitId":"heejet"},"content":"        response.printAddTask(taskName);","lastModifiedDate":"2023-01-31"},{"lineNumber":132,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":133,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":134,"author":{"gitId":"heejet"},"content":"    /** Prints out a list of tasks in the TaskOrganizer */","lastModifiedDate":"2023-02-01"},{"lineNumber":135,"author":{"gitId":"heejet"},"content":"    private static void executeListTask() {","lastModifiedDate":"2023-02-01"},{"lineNumber":136,"author":{"gitId":"heejet"},"content":"        //Check if the TaskOrganizer is empty","lastModifiedDate":"2023-02-01"},{"lineNumber":137,"author":{"gitId":"heejet"},"content":"        if (taskOrganizer.isEmpty()) {","lastModifiedDate":"2023-02-01"},{"lineNumber":138,"author":{"gitId":"heejet"},"content":"            response.printEmptyList();","lastModifiedDate":"2023-01-24"},{"lineNumber":139,"author":{"gitId":"heejet"},"content":"            return;","lastModifiedDate":"2023-02-01"},{"lineNumber":140,"author":{"gitId":"heejet"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":141,"author":{"gitId":"heejet"},"content":"        response.printTaskList(taskOrganizer.getTaskList());","lastModifiedDate":"2023-02-01"},{"lineNumber":142,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":143,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":144,"author":{"gitId":"heejet"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":145,"author":{"gitId":"heejet"},"content":"     * Mark the specified task as completed.","lastModifiedDate":"2023-02-01"},{"lineNumber":146,"author":{"gitId":"heejet"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":147,"author":{"gitId":"heejet"},"content":"     * @param taskSerialNumber The serial number of the task to be marked.","lastModifiedDate":"2023-02-01"},{"lineNumber":148,"author":{"gitId":"heejet"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":149,"author":{"gitId":"heejet"},"content":"    private static void executeMarkTask(String taskSerialNumber) {","lastModifiedDate":"2023-02-01"},{"lineNumber":150,"author":{"gitId":"heejet"},"content":"        if (taskSerialNumber \u003d\u003d null) {","lastModifiedDate":"2023-02-01"},{"lineNumber":151,"author":{"gitId":"heejet"},"content":"            handleInvalidCommand();","lastModifiedDate":"2023-02-01"},{"lineNumber":152,"author":{"gitId":"heejet"},"content":"            return;","lastModifiedDate":"2023-02-01"},{"lineNumber":153,"author":{"gitId":"heejet"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":154,"author":{"gitId":"heejet"},"content":"        try {","lastModifiedDate":"2023-01-19"},{"lineNumber":155,"author":{"gitId":"heejet"},"content":"            int serialNumber \u003d Integer.parseInt(taskSerialNumber);","lastModifiedDate":"2023-02-01"},{"lineNumber":156,"author":{"gitId":"heejet"},"content":"            if (taskOrganizer.isOutOfBounds(serialNumber)) {","lastModifiedDate":"2023-02-01"},{"lineNumber":157,"author":{"gitId":"heejet"},"content":"                throw new InvalidIndexException();","lastModifiedDate":"2023-02-04"},{"lineNumber":158,"author":{"gitId":"heejet"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":159,"author":{"gitId":"heejet"},"content":"            taskOrganizer.markTask(serialNumber);","lastModifiedDate":"2023-02-01"},{"lineNumber":160,"author":{"gitId":"heejet"},"content":"            response.printMarkTask(taskOrganizer.getTaskByID(serialNumber));","lastModifiedDate":"2023-02-01"},{"lineNumber":161,"author":{"gitId":"heejet"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":162,"author":{"gitId":"heejet"},"content":"            handleInvalidCommand();","lastModifiedDate":"2023-02-01"},{"lineNumber":163,"author":{"gitId":"heejet"},"content":"        } catch (InvalidIndexException e) {","lastModifiedDate":"2023-02-04"},{"lineNumber":164,"author":{"gitId":"heejet"},"content":"            handleOutOfBounds();","lastModifiedDate":"2023-02-04"},{"lineNumber":165,"author":{"gitId":"heejet"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":166,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":167,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":168,"author":{"gitId":"heejet"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":169,"author":{"gitId":"heejet"},"content":"     * Unmarks the specified task.","lastModifiedDate":"2023-02-01"},{"lineNumber":170,"author":{"gitId":"heejet"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":171,"author":{"gitId":"heejet"},"content":"     * @param taskSerialNumber The serial number of the task to be unmarked.","lastModifiedDate":"2023-02-01"},{"lineNumber":172,"author":{"gitId":"heejet"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":173,"author":{"gitId":"heejet"},"content":"    private static void executeUnmarkTask(String taskSerialNumber) {","lastModifiedDate":"2023-02-01"},{"lineNumber":174,"author":{"gitId":"heejet"},"content":"        if (taskSerialNumber \u003d\u003d null) {","lastModifiedDate":"2023-02-01"},{"lineNumber":175,"author":{"gitId":"heejet"},"content":"            handleInvalidCommand();","lastModifiedDate":"2023-02-01"},{"lineNumber":176,"author":{"gitId":"heejet"},"content":"            return;","lastModifiedDate":"2023-02-01"},{"lineNumber":177,"author":{"gitId":"heejet"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":178,"author":{"gitId":"heejet"},"content":"        try {","lastModifiedDate":"2023-01-19"},{"lineNumber":179,"author":{"gitId":"heejet"},"content":"            int serialNumber \u003d Integer.parseInt(taskSerialNumber);","lastModifiedDate":"2023-02-01"},{"lineNumber":180,"author":{"gitId":"heejet"},"content":"            if (taskOrganizer.isOutOfBounds(serialNumber)) {","lastModifiedDate":"2023-02-01"},{"lineNumber":181,"author":{"gitId":"heejet"},"content":"                throw new InvalidIndexException();","lastModifiedDate":"2023-02-04"},{"lineNumber":182,"author":{"gitId":"heejet"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":183,"author":{"gitId":"heejet"},"content":"            taskOrganizer.unmarkTask(serialNumber);","lastModifiedDate":"2023-02-01"},{"lineNumber":184,"author":{"gitId":"heejet"},"content":"            response.printUnmarkTask(taskOrganizer.getTaskByID(serialNumber));","lastModifiedDate":"2023-02-01"},{"lineNumber":185,"author":{"gitId":"heejet"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":186,"author":{"gitId":"heejet"},"content":"            handleInvalidCommand();","lastModifiedDate":"2023-02-01"},{"lineNumber":187,"author":{"gitId":"heejet"},"content":"        } catch (InvalidIndexException e) {","lastModifiedDate":"2023-02-04"},{"lineNumber":188,"author":{"gitId":"heejet"},"content":"            handleOutOfBounds();","lastModifiedDate":"2023-02-04"},{"lineNumber":189,"author":{"gitId":"heejet"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":190,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":191,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":192,"author":{"gitId":"heejet"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":193,"author":{"gitId":"heejet"},"content":"     * This function takes in the command keyword and description and executes the specified command.","lastModifiedDate":"2023-02-01"},{"lineNumber":194,"author":{"gitId":"heejet"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":195,"author":{"gitId":"heejet"},"content":"     * @param command The command keyword indicating the type of command to execute.","lastModifiedDate":"2023-02-04"},{"lineNumber":196,"author":{"gitId":"heejet"},"content":"     * @param description The string specifying the details of the command.","lastModifiedDate":"2023-02-01"},{"lineNumber":197,"author":{"gitId":"heejet"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":198,"author":{"gitId":"heejet"},"content":"    private static void executeCommand(String command, String description) {","lastModifiedDate":"2023-02-01"},{"lineNumber":199,"author":{"gitId":"heejet"},"content":"        switch (command) {","lastModifiedDate":"2023-02-01"},{"lineNumber":200,"author":{"gitId":"heejet"},"content":"        case \"add\":","lastModifiedDate":"2023-02-01"},{"lineNumber":201,"author":{"gitId":"heejet"},"content":"            executeAddTask(description);","lastModifiedDate":"2023-02-01"},{"lineNumber":202,"author":{"gitId":"heejet"},"content":"            break;","lastModifiedDate":"2023-01-24"},{"lineNumber":203,"author":{"gitId":"heejet"},"content":"        case \"list\":","lastModifiedDate":"2023-02-01"},{"lineNumber":204,"author":{"gitId":"heejet"},"content":"            executeListTask();","lastModifiedDate":"2023-02-01"},{"lineNumber":205,"author":{"gitId":"heejet"},"content":"            break;","lastModifiedDate":"2023-02-01"},{"lineNumber":206,"author":{"gitId":"heejet"},"content":"        case \"mark\":","lastModifiedDate":"2023-02-01"},{"lineNumber":207,"author":{"gitId":"heejet"},"content":"            executeMarkTask(description);","lastModifiedDate":"2023-02-01"},{"lineNumber":208,"author":{"gitId":"heejet"},"content":"            break;","lastModifiedDate":"2023-02-01"},{"lineNumber":209,"author":{"gitId":"heejet"},"content":"        default:","lastModifiedDate":"2023-02-01"},{"lineNumber":210,"author":{"gitId":"heejet"},"content":"            executeUnmarkTask(description);","lastModifiedDate":"2023-02-01"},{"lineNumber":211,"author":{"gitId":"heejet"},"content":"            break;","lastModifiedDate":"2023-01-24"},{"lineNumber":212,"author":{"gitId":"heejet"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":213,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":214,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":215,"author":{"gitId":"heejet"},"content":"    /** Continuously reads in the user input until the user keys in \"bye\" */","lastModifiedDate":"2023-02-01"},{"lineNumber":216,"author":{"gitId":"heejet"},"content":"    private static void readUserInput() {","lastModifiedDate":"2023-02-01"},{"lineNumber":217,"author":{"gitId":"heejet"},"content":"        while (true) {","lastModifiedDate":"2023-02-01"},{"lineNumber":218,"author":{"gitId":"heejet"},"content":"            String userInput \u003d scanner.nextLine();","lastModifiedDate":"2023-02-01"},{"lineNumber":219,"author":{"gitId":"heejet"},"content":"            //If the user input is bye, exit the program","lastModifiedDate":"2023-02-01"},{"lineNumber":220,"author":{"gitId":"heejet"},"content":"            if (userInput.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2023-02-01"},{"lineNumber":221,"author":{"gitId":"heejet"},"content":"                return;","lastModifiedDate":"2023-02-01"},{"lineNumber":222,"author":{"gitId":"heejet"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":223,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":224,"author":{"gitId":"heejet"},"content":"            //Checks if the user is trying to key in a command, else echo the user input","lastModifiedDate":"2023-02-01"},{"lineNumber":225,"author":{"gitId":"heejet"},"content":"            String firstWord \u003d getFirstWord(userInput);","lastModifiedDate":"2023-02-01"},{"lineNumber":226,"author":{"gitId":"heejet"},"content":"            if (isCommand(firstWord)) {","lastModifiedDate":"2023-02-01"},{"lineNumber":227,"author":{"gitId":"heejet"},"content":"                String description \u003d removeFirstWord(userInput);","lastModifiedDate":"2023-02-01"},{"lineNumber":228,"author":{"gitId":"heejet"},"content":"                executeCommand(firstWord, description);","lastModifiedDate":"2023-02-01"},{"lineNumber":229,"author":{"gitId":"heejet"},"content":"            } else {","lastModifiedDate":"2023-02-04"},{"lineNumber":230,"author":{"gitId":"heejet"},"content":"                echoString(userInput);","lastModifiedDate":"2023-02-01"},{"lineNumber":231,"author":{"gitId":"heejet"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":232,"author":{"gitId":"heejet"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":233,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":234,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":235,"author":{"gitId":"heejet"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-01"},{"lineNumber":236,"author":{"gitId":"heejet"},"content":"        initialize();","lastModifiedDate":"2023-02-01"},{"lineNumber":237,"author":{"gitId":"heejet"},"content":"        readUserInput();","lastModifiedDate":"2023-02-01"},{"lineNumber":238,"author":{"gitId":"heejet"},"content":"        endProgram();","lastModifiedDate":"2023-02-01"},{"lineNumber":239,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":240,"author":{"gitId":"heejet"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"heejet":240}},{"path":"src/main/java/LukeLogo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"heejet"},"content":"import java.util.Random;","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"heejet"},"content":"public class LukeLogo {","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"heejet"},"content":"    /** List of logos corresponding to the ASCII art of \"LUKE\" */","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"heejet"},"content":"    private final String[] logos \u003d {","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"heejet"},"content":"            //Logo 1","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"heejet"},"content":"            \" __         __  __     __  __     ______\\n\"","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"heejet"},"content":"                    + \"/\\\\ \\\\       /\\\\ \\\\/\\\\ \\\\   /\\\\ \\\\/ /    /\\\\  ___\\\\\\n\"","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"heejet"},"content":"                    + \"\\\\ \\\\ \\\\____  \\\\ \\\\ \\\\_\\\\ \\\\  \\\\ \\\\  _\\\"-.  \\\\ \\\\  __\\\\\\n\"","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"heejet"},"content":"                    + \" \\\\ \\\\_____\\\\  \\\\ \\\\_____\\\\  \\\\ \\\\_\\\\ \\\\_\\\\  \\\\ \\\\_____\\\\\\n\"","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"heejet"},"content":"                    + \"  \\\\/_____/   \\\\/_____/   \\\\/_/\\\\/_/   \\\\/_____/\\n\",","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"heejet"},"content":"            //Logo 2","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"heejet"},"content":"            \" _     _   _ _   __ _____ \\n\"","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"heejet"},"content":"                    + \"| |   | | | | | / /|  ___|\\n\"","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"heejet"},"content":"                    + \"| |   | | | | |/ / | |__  \\n\"","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"heejet"},"content":"                    + \"| |   | | | |    \\\\ |  __|\\n\"","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"heejet"},"content":"                    + \"| |___| |_| | |\\\\  \\\\| |___\\n\"","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"heejet"},"content":"                    + \"\\\\_____/\\\\___/\\\\_| \\\\_/\\\\____/\\n\",","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"heejet"},"content":"            //Logo 3","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"heejet"},"content":"            \"    __    __  ____ __ ______\\n\"","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"heejet"},"content":"                    + \"   / /   / / / / //_// ____/\\n\"","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"heejet"},"content":"                    + \"  / /   / / / / ,\u003c  / __/   \\n\"","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"heejet"},"content":"                    + \" / /___/ /_/ / /| |/ /___   \\n\"","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"heejet"},"content":"                    + \"/_____/\\\\____/_/ |_/_____/   \\n\",","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"heejet"},"content":"            //Logo 4","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"heejet"},"content":"            \" __       __  __  __  __   ____      \\n\"","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"heejet"},"content":"                    + \"/\\\\ \\\\     /\\\\ \\\\/\\\\ \\\\/\\\\ \\\\/\\\\ \\\\ /\\\\  _`\\\\    \\n\"","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"heejet"},"content":"                    + \"\\\\ \\\\ \\\\    \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\/\u0027/\u0027\\\\ \\\\ \\\\L\\\\_\\\\  \\n\"","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"heejet"},"content":"                    + \" \\\\ \\\\ \\\\  __\\\\ \\\\ \\\\ \\\\ \\\\ \\\\ , \u003c  \\\\ \\\\  _\\\\L  \\n\"","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"heejet"},"content":"                    + \"  \\\\ \\\\ \\\\L\\\\ \\\\\\\\ \\\\ \\\\_\\\\ \\\\ \\\\ \\\\\\\\`\\\\ \\\\ \\\\ \\\\L\\\\ \\\\\\n\"","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"heejet"},"content":"                    + \"   \\\\ \\\\____/ \\\\ \\\\_____\\\\ \\\\_\\\\ \\\\_\\\\\\\\ \\\\____/\\n\"","lastModifiedDate":"2023-01-17"},{"lineNumber":32,"author":{"gitId":"heejet"},"content":"                    + \"    \\\\/___/   \\\\/_____/\\\\/_/\\\\/_/ \\\\/___/ \\n\"","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"heejet"},"content":"    };","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"heejet"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"heejet"},"content":"     * Returns a randomized string corresponding to the name of the chatbot.","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"heejet"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"heejet"},"content":"     * @return String corresponding to an ASCII art of the string \"LUKE\".","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"heejet"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"heejet"},"content":"    public String getRandLogo() {","lastModifiedDate":"2023-01-17"},{"lineNumber":41,"author":{"gitId":"heejet"},"content":"        Random generateLogo \u003d new Random();","lastModifiedDate":"2023-01-17"},{"lineNumber":42,"author":{"gitId":"heejet"},"content":"        return logos[generateLogo.nextInt(logos.length)];","lastModifiedDate":"2023-01-17"},{"lineNumber":43,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":44,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":45,"author":{"gitId":"heejet"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"heejet"},"content":"     * Returns a string representing an ASCII art of the string \"LUKE\".","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"heejet"},"content":"     * The string returned corresponds to index.","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"heejet"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"heejet"},"content":"     * @param index The 0-based index of the logo to be returned.","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"heejet"},"content":"     * @return String corresponding to an ASCII art of the string \"LUKE\".","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"heejet"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"heejet"},"content":"    public String getLogo(int index) {","lastModifiedDate":"2023-01-17"},{"lineNumber":53,"author":{"gitId":"heejet"},"content":"        if (index \u003c 0 || index \u003e\u003d logos.length) {","lastModifiedDate":"2023-01-17"},{"lineNumber":54,"author":{"gitId":"heejet"},"content":"            return logos[0];","lastModifiedDate":"2023-01-17"},{"lineNumber":55,"author":{"gitId":"heejet"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":56,"author":{"gitId":"heejet"},"content":"        return logos[index];","lastModifiedDate":"2023-01-17"},{"lineNumber":57,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":58,"author":{"gitId":"heejet"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"heejet":58}},{"path":"src/main/java/Response.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"heejet"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"heejet"},"content":"public class Response {","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"heejet"},"content":"    /** Prints a line to indicate the start and end of a message */","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"heejet"},"content":"    private void printLine() {","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"heejet"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"heejet"},"content":"    /** Prints a string indicating that the messages are coming from LUKE */","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"heejet"},"content":"    private void printSignature() {","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"heejet"},"content":"        System.out.print(\"[Luke]: \");","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"heejet"},"content":"    /** Prints a hello message to the user */","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"heejet"},"content":"    public void sayHi() {","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"heejet"},"content":"        LukeLogo logo \u003d new LukeLogo();","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"heejet"},"content":"        printLine();","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"heejet"},"content":"        printSignature();","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"heejet"},"content":"        System.out.println(\"Hello I\u0027m\\n\" + logo.getLogo(0));","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"heejet"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"heejet"},"content":"        printLine();","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"heejet"},"content":"    /** Prints a goodbye message to the user */","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"heejet"},"content":"    public void sayBye() {","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"heejet"},"content":"        printLine();","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"heejet"},"content":"        printSignature();","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"heejet"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"heejet"},"content":"        printLine();","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"heejet"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"heejet"},"content":"     * Prints a string for the user.","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"heejet"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"heejet"},"content":"     * @param toPrint The string to be printed.","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"heejet"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"heejet"},"content":"    public void printString(String toPrint) {","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"heejet"},"content":"        printLine();","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"heejet"},"content":"        printSignature();","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"heejet"},"content":"        System.out.println(toPrint);","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"heejet"},"content":"        printLine();","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"heejet"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"heejet"},"content":"     * Prints a confirmation to the user that a task have been successfully added to the TaskOrganizer.","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"heejet"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"heejet"},"content":"     * @param taskName The name of the task that has been added to the TaskOrganizer.","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"heejet"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"heejet"},"content":"    public void printAddTask(String taskName) {","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"heejet"},"content":"        printLine();","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"heejet"},"content":"        printSignature();","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"heejet"},"content":"        System.out.println(\"Added: \" + taskName);","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"heejet"},"content":"        printLine();","lastModifiedDate":"2023-01-19"},{"lineNumber":54,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"heejet"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"heejet"},"content":"     * Prints a confirmation to the user that a task have been marked as complete.","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"heejet"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":59,"author":{"gitId":"heejet"},"content":"     * @param taskName The name of the task that is designated to be marked.","lastModifiedDate":"2023-01-24"},{"lineNumber":60,"author":{"gitId":"heejet"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":61,"author":{"gitId":"heejet"},"content":"    public void printMarkTask(String taskName) {","lastModifiedDate":"2023-01-19"},{"lineNumber":62,"author":{"gitId":"heejet"},"content":"        printLine();","lastModifiedDate":"2023-01-19"},{"lineNumber":63,"author":{"gitId":"heejet"},"content":"        printSignature();","lastModifiedDate":"2023-01-19"},{"lineNumber":64,"author":{"gitId":"heejet"},"content":"        System.out.println(taskName + \" has been marked as complete.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":65,"author":{"gitId":"heejet"},"content":"        printLine();","lastModifiedDate":"2023-01-19"},{"lineNumber":66,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":67,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":68,"author":{"gitId":"heejet"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":69,"author":{"gitId":"heejet"},"content":"     * Prints a confirmation to the user that a task have been unmarked.","lastModifiedDate":"2023-01-24"},{"lineNumber":70,"author":{"gitId":"heejet"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":71,"author":{"gitId":"heejet"},"content":"     * @param taskName The name of the task that is designated to be unmarked.","lastModifiedDate":"2023-01-24"},{"lineNumber":72,"author":{"gitId":"heejet"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":73,"author":{"gitId":"heejet"},"content":"    public void printUnmarkTask(String taskName) {","lastModifiedDate":"2023-01-19"},{"lineNumber":74,"author":{"gitId":"heejet"},"content":"        printLine();","lastModifiedDate":"2023-01-19"},{"lineNumber":75,"author":{"gitId":"heejet"},"content":"        printSignature();","lastModifiedDate":"2023-01-19"},{"lineNumber":76,"author":{"gitId":"heejet"},"content":"        System.out.println(taskName + \" has been marked as incomplete.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":77,"author":{"gitId":"heejet"},"content":"        printLine();","lastModifiedDate":"2023-01-19"},{"lineNumber":78,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":79,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":80,"author":{"gitId":"heejet"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":81,"author":{"gitId":"heejet"},"content":"     * Prints a list of all the task in the TaskOrganizer.","lastModifiedDate":"2023-01-24"},{"lineNumber":82,"author":{"gitId":"heejet"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":83,"author":{"gitId":"heejet"},"content":"     * @param tasks The list of all the tasks in the TaskOrganizer.","lastModifiedDate":"2023-01-24"},{"lineNumber":84,"author":{"gitId":"heejet"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":85,"author":{"gitId":"heejet"},"content":"    public void printTaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-24"},{"lineNumber":86,"author":{"gitId":"heejet"},"content":"        printLine();","lastModifiedDate":"2023-01-19"},{"lineNumber":87,"author":{"gitId":"heejet"},"content":"        printSignature();","lastModifiedDate":"2023-01-19"},{"lineNumber":88,"author":{"gitId":"heejet"},"content":"        int serialNumber \u003d 1;","lastModifiedDate":"2023-01-24"},{"lineNumber":89,"author":{"gitId":"heejet"},"content":"        System.out.println(\"Printing Tasks...\");","lastModifiedDate":"2023-01-19"},{"lineNumber":90,"author":{"gitId":"heejet"},"content":"        for (Task i : tasks) {","lastModifiedDate":"2023-01-24"},{"lineNumber":91,"author":{"gitId":"heejet"},"content":"            System.out.print(serialNumber + \". \");","lastModifiedDate":"2023-01-24"},{"lineNumber":92,"author":{"gitId":"heejet"},"content":"            i.printTaskName();","lastModifiedDate":"2023-01-19"},{"lineNumber":93,"author":{"gitId":"heejet"},"content":"            serialNumber +\u003d 1;","lastModifiedDate":"2023-01-24"},{"lineNumber":94,"author":{"gitId":"heejet"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":95,"author":{"gitId":"heejet"},"content":"        printLine();","lastModifiedDate":"2023-01-19"},{"lineNumber":96,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":97,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":98,"author":{"gitId":"heejet"},"content":"    /** Prints a message telling the user that the task organizer is empty */","lastModifiedDate":"2023-01-24"},{"lineNumber":99,"author":{"gitId":"heejet"},"content":"    public void printEmptyList() {","lastModifiedDate":"2023-01-24"},{"lineNumber":100,"author":{"gitId":"heejet"},"content":"        printLine();","lastModifiedDate":"2023-01-19"},{"lineNumber":101,"author":{"gitId":"heejet"},"content":"        printSignature();","lastModifiedDate":"2023-01-19"},{"lineNumber":102,"author":{"gitId":"heejet"},"content":"        System.out.println(\"The list is empty!\");","lastModifiedDate":"2023-01-19"},{"lineNumber":103,"author":{"gitId":"heejet"},"content":"        printLine();","lastModifiedDate":"2023-01-19"},{"lineNumber":104,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":105,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":106,"author":{"gitId":"heejet"},"content":"    /** Prints a message telling the user that he/she have entered an invalid command */","lastModifiedDate":"2023-01-24"},{"lineNumber":107,"author":{"gitId":"heejet"},"content":"    public void printInvalidCommand() {","lastModifiedDate":"2023-01-24"},{"lineNumber":108,"author":{"gitId":"heejet"},"content":"        printLine();","lastModifiedDate":"2023-01-19"},{"lineNumber":109,"author":{"gitId":"heejet"},"content":"        printSignature();","lastModifiedDate":"2023-01-19"},{"lineNumber":110,"author":{"gitId":"heejet"},"content":"        System.out.println(\"You have entered an invalid command!\");","lastModifiedDate":"2023-01-19"},{"lineNumber":111,"author":{"gitId":"heejet"},"content":"        printLine();","lastModifiedDate":"2023-01-19"},{"lineNumber":112,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":113,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":114,"author":{"gitId":"heejet"},"content":"    /** Prints a message telling the user that the index entered is out of bounds */","lastModifiedDate":"2023-01-24"},{"lineNumber":115,"author":{"gitId":"heejet"},"content":"    public void printOutOfBounds() {","lastModifiedDate":"2023-01-24"},{"lineNumber":116,"author":{"gitId":"heejet"},"content":"        printLine();","lastModifiedDate":"2023-01-19"},{"lineNumber":117,"author":{"gitId":"heejet"},"content":"        printSignature();","lastModifiedDate":"2023-01-19"},{"lineNumber":118,"author":{"gitId":"heejet"},"content":"        System.out.println(\"You have entered an index that does not exist!\");","lastModifiedDate":"2023-01-19"},{"lineNumber":119,"author":{"gitId":"heejet"},"content":"        printLine();","lastModifiedDate":"2023-01-19"},{"lineNumber":120,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":121,"author":{"gitId":"heejet"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"heejet":121}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"heejet"},"content":"public class Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"heejet"},"content":"    /** The name of a task */","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"heejet"},"content":"    private String taskName;","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"heejet"},"content":"    ","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"heejet"},"content":"    /** A boolean variable to indicate if a task have been marked */","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"heejet"},"content":"    private boolean isMarked;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"heejet"},"content":"    /** Check box to display the state of the task */","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"heejet"},"content":"    protected CheckBox checkBox;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"heejet"},"content":"    /** Label to indicate the type of task */","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"heejet"},"content":"    protected Label label;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"heejet"},"content":"    /** The unique ID assgied to this task */","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"heejet"},"content":"    private int taskID;","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"heejet"},"content":"    public Task(String name, int ID) {","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"heejet"},"content":"        this.taskName \u003d name;","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"heejet"},"content":"        this.taskID \u003d ID;","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"heejet"},"content":"        this.checkBox \u003d new CheckBox();","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"heejet"},"content":"        this.label \u003d new Label();","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"heejet"},"content":"        this.isMarked \u003d false;","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"heejet"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"heejet"},"content":"     * Returns the name of the task.","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"heejet"},"content":"     * @return taskName","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"heejet"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"heejet"},"content":"    public String getTaskName() {","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"heejet"},"content":"        return taskName;","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"heejet"},"content":"    /** Prints out the checkBox followed by the name of the task */","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"heejet"},"content":"    public void printTaskName() {","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"heejet"},"content":"        checkBox.printCheckBox();","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"heejet"},"content":"        System.out.println(taskName);","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"heejet"},"content":"    /** Marks the task as complete */","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"heejet"},"content":"    public void markTask() {","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"heejet"},"content":"        if (!isMarked) {","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"heejet"},"content":"            isMarked \u003d true;","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"heejet"},"content":"            checkBox.markCheckBox();","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"heejet"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"heejet"},"content":"    /** Unmarks the task */","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"heejet"},"content":"    public void unmarkTask() {","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"heejet"},"content":"        if (isMarked) {","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"heejet"},"content":"            isMarked \u003d false;","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"heejet"},"content":"            checkBox.unmarkCheckBox();","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"heejet"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":54,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"heejet"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"heejet":55}},{"path":"src/main/java/TaskOrganizer.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"heejet"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"heejet"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"heejet"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"heejet"},"content":"public class TaskOrganizer {","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"heejet"},"content":"    /** Unique ID to be given to each new task for identification */","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"heejet"},"content":"    private int newTaskID;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"heejet"},"content":"    /** A container containing all tasks added */","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"heejet"},"content":"    private HashMap\u003cInteger, Task\u003e tasks;","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"heejet"},"content":"    /** A list containing all valid task types */","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"heejet"},"content":"    private ArrayList\u003cString\u003e taskTypes;","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"heejet"},"content":"    public TaskOrganizer() {","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"heejet"},"content":"        newTaskID \u003d 1;","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"heejet"},"content":"        tasks \u003d new HashMap\u003cInteger, Task\u003e();","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"heejet"},"content":"        taskTypes \u003d new ArrayList\u003cString\u003e(","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"heejet"},"content":"                Arrays.asList(\"todo\", \"event\", \"deadline\")","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"heejet"},"content":"        );","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"heejet"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"heejet"},"content":"     * Checks if the type given is a valid task type.","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"heejet"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"heejet"},"content":"     * @param type The type to be checked.","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"heejet"},"content":"     * @return True if type is a valid task type, False if type is not a valid task type.","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"heejet"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"heejet"},"content":"    public boolean isTaskType(String type) {","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"heejet"},"content":"        return taskTypes.contains(type);","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"heejet"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"heejet"},"content":"     * Checks if the index provides is out of bounds from the current available tasks.","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"heejet"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"heejet"},"content":"     * @param index The index provided.","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"heejet"},"content":"     * @return True if the index provided is out of bounds, False if the index provides is not out of bounds.","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"heejet"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"heejet"},"content":"    public boolean isOutOfBounds(int index) {","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"heejet"},"content":"        return (index \u003c\u003d 0 || index \u003e\u003d newTaskID);","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"heejet"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"heejet"},"content":"     * Checks if tasks is empty.","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"heejet"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"heejet"},"content":"     * @return True if tasks is empty, False if tasks is not empty.","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"heejet"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"heejet"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"heejet"},"content":"        return tasks.isEmpty();","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"heejet"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"heejet"},"content":"     * Adds a task to the list of tasks.","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"heejet"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":55,"author":{"gitId":"heejet"},"content":"     * @param taskType The type of the task to be added.","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"heejet"},"content":"     * @param taskName The name of the task to be added.","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"heejet"},"content":"     * @param taskDate A string containing the dates of the task (E.g deadline or start and end date).","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"heejet"},"content":"     * @return True as task have been added without any errors, False if there are errors when adding the task.","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"heejet"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":60,"author":{"gitId":"heejet"},"content":"    public boolean addTask(String taskType, String taskName, String taskDate) {","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"heejet"},"content":"        Task newTask;","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"heejet"},"content":"        switch (taskType) {","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"heejet"},"content":"        case \"todo\":","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"heejet"},"content":"            newTask \u003d new ToDo(taskName, newTaskID);","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"heejet"},"content":"            break;","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"heejet"},"content":"        case \"deadline\":","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"heejet"},"content":"            if (taskDate \u003d\u003d null) {","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"heejet"},"content":"                return false;","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"heejet"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"heejet"},"content":"            newTask \u003d new Deadline(taskName, newTaskID, taskDate);","lastModifiedDate":"2023-02-01"},{"lineNumber":71,"author":{"gitId":"heejet"},"content":"            break;","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"heejet"},"content":"        case \"event\":","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"heejet"},"content":"            if (taskDate \u003d\u003d null) {","lastModifiedDate":"2023-02-01"},{"lineNumber":74,"author":{"gitId":"heejet"},"content":"                return false;","lastModifiedDate":"2023-02-01"},{"lineNumber":75,"author":{"gitId":"heejet"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":76,"author":{"gitId":"heejet"},"content":"            String[] taskDates \u003d taskDate.split(\" \", 2);","lastModifiedDate":"2023-02-01"},{"lineNumber":77,"author":{"gitId":"heejet"},"content":"            if (taskDates.length \u003c\u003d 1) {","lastModifiedDate":"2023-02-01"},{"lineNumber":78,"author":{"gitId":"heejet"},"content":"                return false;","lastModifiedDate":"2023-02-01"},{"lineNumber":79,"author":{"gitId":"heejet"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":80,"author":{"gitId":"heejet"},"content":"            String startDate \u003d taskDates[0];","lastModifiedDate":"2023-02-01"},{"lineNumber":81,"author":{"gitId":"heejet"},"content":"            String endDate \u003d taskDates[1];","lastModifiedDate":"2023-02-01"},{"lineNumber":82,"author":{"gitId":"heejet"},"content":"            newTask \u003d new Event(taskName, newTaskID, startDate, endDate);","lastModifiedDate":"2023-02-01"},{"lineNumber":83,"author":{"gitId":"heejet"},"content":"            break;","lastModifiedDate":"2023-01-31"},{"lineNumber":84,"author":{"gitId":"heejet"},"content":"        default:","lastModifiedDate":"2023-01-31"},{"lineNumber":85,"author":{"gitId":"heejet"},"content":"            newTask \u003d new Task(taskName, newTaskID);","lastModifiedDate":"2023-01-31"},{"lineNumber":86,"author":{"gitId":"heejet"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":87,"author":{"gitId":"heejet"},"content":"        tasks.put(newTaskID, newTask);","lastModifiedDate":"2023-01-24"},{"lineNumber":88,"author":{"gitId":"heejet"},"content":"        newTaskID +\u003d 1;","lastModifiedDate":"2023-01-24"},{"lineNumber":89,"author":{"gitId":"heejet"},"content":"        return true;","lastModifiedDate":"2023-02-01"},{"lineNumber":90,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":91,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":92,"author":{"gitId":"heejet"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":93,"author":{"gitId":"heejet"},"content":"     * Given the ID of a task, this function marks the corresponding task as completed.","lastModifiedDate":"2023-01-24"},{"lineNumber":94,"author":{"gitId":"heejet"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":95,"author":{"gitId":"heejet"},"content":"     * @param toMarkID The ID of the task to be marked.","lastModifiedDate":"2023-01-24"},{"lineNumber":96,"author":{"gitId":"heejet"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":97,"author":{"gitId":"heejet"},"content":"    public void markTask(int toMarkID) {","lastModifiedDate":"2023-01-24"},{"lineNumber":98,"author":{"gitId":"heejet"},"content":"        tasks.get(toMarkID).markTask();","lastModifiedDate":"2023-01-24"},{"lineNumber":99,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":100,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":101,"author":{"gitId":"heejet"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":102,"author":{"gitId":"heejet"},"content":"     * Given the ID of a task, this function unmarks a task.","lastModifiedDate":"2023-01-24"},{"lineNumber":103,"author":{"gitId":"heejet"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":104,"author":{"gitId":"heejet"},"content":"     * @param toUnmarkID The ID of the task to be unmarked.","lastModifiedDate":"2023-01-24"},{"lineNumber":105,"author":{"gitId":"heejet"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":106,"author":{"gitId":"heejet"},"content":"    public void unmarkTask(int toUnmarkID) {","lastModifiedDate":"2023-01-24"},{"lineNumber":107,"author":{"gitId":"heejet"},"content":"        tasks.get(toUnmarkID).unmarkTask();","lastModifiedDate":"2023-01-24"},{"lineNumber":108,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":109,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":110,"author":{"gitId":"heejet"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":111,"author":{"gitId":"heejet"},"content":"     * Returns the name of a task, given its ID.","lastModifiedDate":"2023-01-24"},{"lineNumber":112,"author":{"gitId":"heejet"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":113,"author":{"gitId":"heejet"},"content":"     * @param taskID The ID of the task.","lastModifiedDate":"2023-01-24"},{"lineNumber":114,"author":{"gitId":"heejet"},"content":"     * @return The name of the task with taskID.","lastModifiedDate":"2023-01-24"},{"lineNumber":115,"author":{"gitId":"heejet"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":116,"author":{"gitId":"heejet"},"content":"    public String getTaskByID(int taskID) {","lastModifiedDate":"2023-01-24"},{"lineNumber":117,"author":{"gitId":"heejet"},"content":"        return tasks.get(taskID).getTaskName();","lastModifiedDate":"2023-01-24"},{"lineNumber":118,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":119,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":120,"author":{"gitId":"heejet"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":121,"author":{"gitId":"heejet"},"content":"     * Returns an ArrayList of Tasks in the order they are added.","lastModifiedDate":"2023-01-24"},{"lineNumber":122,"author":{"gitId":"heejet"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":123,"author":{"gitId":"heejet"},"content":"     * @return ArrayList of Tasks.","lastModifiedDate":"2023-01-24"},{"lineNumber":124,"author":{"gitId":"heejet"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":125,"author":{"gitId":"heejet"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2023-01-19"},{"lineNumber":126,"author":{"gitId":"heejet"},"content":"        ArrayList\u003cTask\u003e copy \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-19"},{"lineNumber":127,"author":{"gitId":"heejet"},"content":"        for (int i \u003d 1; i \u003c newTaskID; i++) {","lastModifiedDate":"2023-01-24"},{"lineNumber":128,"author":{"gitId":"heejet"},"content":"            copy.add(tasks.get(i));","lastModifiedDate":"2023-01-19"},{"lineNumber":129,"author":{"gitId":"heejet"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":130,"author":{"gitId":"heejet"},"content":"        return copy;","lastModifiedDate":"2023-01-19"},{"lineNumber":131,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":132,"author":{"gitId":"heejet"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"heejet":132}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"heejet"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"heejet"},"content":"    public ToDo(String name, int ID) {","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"heejet"},"content":"        super(name, ID);","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"heejet"},"content":"        this.label.setLabel(\"T\");","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"heejet"},"content":"    /** Prints out the label followed by the checkBox followed by the name of the task */","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"heejet"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"heejet"},"content":"    public void printTaskName() {","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"heejet"},"content":"        this.label.printLabel();","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"heejet"},"content":"        this.checkBox.printCheckBox();","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"heejet"},"content":"        System.out.println(this.getTaskName());","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"heejet"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"heejet":14}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"heejet"},"content":"add todo todoTask1","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"heejet"},"content":"list","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"heejet"},"content":"add todo","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"heejet"},"content":"add deadline deadlineTask1 dueDate1","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"heejet"},"content":"list","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"heejet"},"content":"mark 1","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"heejet"},"content":"add deadline errorDeadlineTask1","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"heejet"},"content":"add event eventTask1 start1 end1","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"heejet"},"content":"list","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"heejet"},"content":"mark 2","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"heejet"},"content":"unmark 1","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"heejet"},"content":"list","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"heejet"},"content":"mark 1","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"heejet"},"content":"mark 3","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"heejet"},"content":"list","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"heejet"},"content":"bye","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"heejet":16}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"heejet"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Luke.java","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"heejet"},"content":"java -classpath ..\\bin Luke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"heejet":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"heejet"},"content":"java -classpath ../bin Luke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"heejet":1,"-":37}}]
