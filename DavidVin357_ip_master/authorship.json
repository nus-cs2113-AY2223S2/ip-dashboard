[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"DavidVin357"},"content":"# Sherlock project template","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"DavidVin357"},"content":"3. After that, locate the `src/main/java/Sherlock.java` file, right-click it, and choose `Run Sherlock.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"DavidVin357"},"content":"   _____ __  ____________  __    ____  ________ __","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"DavidVin357"},"content":"  / ___// / / / ____/ __ \\/ /   / __ \\/ ____/ //_/","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"DavidVin357"},"content":"  \\__ \\/ /_/ / __/ / /_/ / /   / / / / /   / ,\u003c   ","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"DavidVin357"},"content":" ___/ / __  / /___/ _, _/ /___/ /_/ / /___/ /| |  ","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"DavidVin357"},"content":"/____/_/ /_/_____/_/ |_/_____/\\____/\\____/_/ |_|  ","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"DavidVin357":7,"-":17}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DavidVin357"},"content":"public class Deadline extends Task{","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"DavidVin357"},"content":"    private String by;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"DavidVin357"},"content":"    public Deadline(String name, Boolean isDone, String by) {","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"DavidVin357"},"content":"        super(name, isDone);","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"DavidVin357"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"DavidVin357"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"DavidVin357"},"content":"    public String getType() {","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"DavidVin357"},"content":"        return \"D\";","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"DavidVin357"},"content":"    public String getBy() {","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"DavidVin357"},"content":"        return by;","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"DavidVin357"},"content":"    public void setBy(String by) {","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"DavidVin357"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"DavidVin357"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"DavidVin357"},"content":"        return \"[D]\" + super.toString() + \" (\" + \"by: \" + by + \")\";","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"DavidVin357"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"DavidVin357"},"content":"    public String getFileFormatString() {","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"DavidVin357"},"content":"        return String.format(\"%s | %d | %s | %s\",","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"DavidVin357"},"content":"                this.getType(),","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"DavidVin357"},"content":"                this.isDone ? 1 : 0,","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"DavidVin357"},"content":"                this.name,","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"DavidVin357"},"content":"                this.by","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"DavidVin357"},"content":"        );","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"DavidVin357"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"DavidVin357":36}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DavidVin357"},"content":"public class Event extends Task{","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"DavidVin357"},"content":"    private String from;","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"DavidVin357"},"content":"    private String to;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"DavidVin357"},"content":"    public Event(String name, Boolean isDone, String from, String to) {","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"DavidVin357"},"content":"        super(name, isDone);","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"DavidVin357"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"DavidVin357"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"DavidVin357"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"DavidVin357"},"content":"    public String getType() {","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"DavidVin357"},"content":"        return \"E\";","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"DavidVin357"},"content":"    public String getTo() {","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"DavidVin357"},"content":"        return to;","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"DavidVin357"},"content":"    public void setTo(String to) {","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"DavidVin357"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"DavidVin357"},"content":"    public String getFrom() {","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"DavidVin357"},"content":"        return from;","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"DavidVin357"},"content":"    public void setFrom(String from) {","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"DavidVin357"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"DavidVin357"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"DavidVin357"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"DavidVin357"},"content":"        return \"[E]\" + super.toString() + \" (\" + \"from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"DavidVin357"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":38,"author":{"gitId":"DavidVin357"},"content":"    public String getFileFormatString() {","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"DavidVin357"},"content":"        return String.format(\"%s | %d | %s | %s | %s\",","lastModifiedDate":"2023-02-13"},{"lineNumber":40,"author":{"gitId":"DavidVin357"},"content":"                this.getType(),","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"DavidVin357"},"content":"                this.isDone ? 1 : 0,","lastModifiedDate":"2023-02-13"},{"lineNumber":42,"author":{"gitId":"DavidVin357"},"content":"                this.name,","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"DavidVin357"},"content":"                this.from,","lastModifiedDate":"2023-02-13"},{"lineNumber":44,"author":{"gitId":"DavidVin357"},"content":"                this.to","lastModifiedDate":"2023-02-13"},{"lineNumber":45,"author":{"gitId":"DavidVin357"},"content":"        );","lastModifiedDate":"2023-02-13"},{"lineNumber":46,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":47,"author":{"gitId":"DavidVin357"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"DavidVin357":47}},{"path":"src/main/java/Sherlock.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DavidVin357"},"content":"public class Sherlock {","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"DavidVin357"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"DavidVin357"},"content":"        TasksList tasksList \u003d new TasksList();","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"DavidVin357"},"content":"        TasksLoader tasksLoader \u003d new TasksLoader(tasksList);","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"DavidVin357"},"content":"        tasksLoader.loadTasks();;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"DavidVin357"},"content":"        TaskListener.greet();","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"DavidVin357"},"content":"        TaskListener taskListener \u003d new TaskListener(tasksList, tasksLoader);","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"DavidVin357"},"content":"        taskListener.listen();","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"DavidVin357"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"DavidVin357":13}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DavidVin357"},"content":"public class Task {","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"DavidVin357"},"content":"    protected String name;","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"DavidVin357"},"content":"    protected Boolean isDone;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"DavidVin357"},"content":"    public Task (String name, Boolean isDone) {","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"DavidVin357"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"DavidVin357"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"DavidVin357"},"content":"    public String getType() {","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"DavidVin357"},"content":"        return \"TASK\";","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"DavidVin357"},"content":"    public String getName() {","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"DavidVin357"},"content":"        return name;","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"DavidVin357"},"content":"    public void setName (String name) {","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"DavidVin357"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"DavidVin357"},"content":"    public Boolean getIsDone() {","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"DavidVin357"},"content":"        return isDone;","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"DavidVin357"},"content":"    public void setIsDone(Boolean done) {","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"DavidVin357"},"content":"        isDone \u003d done;","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"DavidVin357"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"DavidVin357"},"content":"        String checker \u003d this.isDone ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"DavidVin357"},"content":"        return checker + \" \" + this.name;","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"DavidVin357"},"content":"    public String getFileFormatString() {","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"DavidVin357"},"content":"        return String.format(\"%s | %d | %s\", getType(), isDone ? 1 : 0, name);","lastModifiedDate":"2023-02-13"},{"lineNumber":38,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"DavidVin357"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"DavidVin357":39}},{"path":"src/main/java/TaskListener.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DavidVin357"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"DavidVin357"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"DavidVin357"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"DavidVin357"},"content":"public class TaskListener {","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"DavidVin357"},"content":"    static final String DIVIDER \u003d \"--------------------------------------------------------------------\";","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"DavidVin357"},"content":"    private TasksList tasksList;","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"DavidVin357"},"content":"    private TasksLoader tasksLoader;","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"DavidVin357"},"content":"    public TaskListener(TasksList tasksList, TasksLoader tasksLoader) {","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"DavidVin357"},"content":"        this.tasksList \u003d tasksList;","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"DavidVin357"},"content":"        this.tasksLoader \u003d tasksLoader;","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"DavidVin357"},"content":"    public static void greet() {","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"DavidVin357"},"content":"        String logo \u003d","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"DavidVin357"},"content":"                        \"   _____ __  ____________  __    ____  ________ __\\n\" +","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"DavidVin357"},"content":"                        \"  / ___// / / / ____/ __ \\\\/ /   / __ \\\\/ ____/ //_/\\n\" +","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"DavidVin357"},"content":"                        \"  \\\\__ \\\\/ /_/ / __/ / /_/ / /   / / / / /   / ,\u003c   \\n\" +","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"DavidVin357"},"content":"                        \" ___/ / __  / /___/ _, _/ /___/ /_/ / /___/ /| |  \\n\" +","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"DavidVin357"},"content":"                        \"/____/_/ /_/_____/_/ |_/_____/\\\\____/\\\\____/_/ |_|  \";","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"DavidVin357"},"content":"        printLines(\"Hello from\", logo);","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"DavidVin357"},"content":"        printLines(\"Hello! I\u0027m SHERLOCK\", \"What can I do for you?\");","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"DavidVin357"},"content":"    public static void printLines(String... lines) {","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"DavidVin357"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-02-05"},{"lineNumber":31,"author":{"gitId":"DavidVin357"},"content":"        for (String line : lines) {","lastModifiedDate":"2023-02-05"},{"lineNumber":32,"author":{"gitId":"DavidVin357"},"content":"            System.out.println(line);","lastModifiedDate":"2023-02-05"},{"lineNumber":33,"author":{"gitId":"DavidVin357"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":34,"author":{"gitId":"DavidVin357"},"content":"        System.out.println(DIVIDER + System.lineSeparator());","lastModifiedDate":"2023-02-05"},{"lineNumber":35,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":36,"author":{"gitId":"DavidVin357"},"content":"    private void printAddedTask(Task task) {","lastModifiedDate":"2023-02-05"},{"lineNumber":37,"author":{"gitId":"DavidVin357"},"content":"        String tasksWord \u003d tasksList.getTasksCount() \u003d\u003d 1 ? \" task\" : \" tasks\";","lastModifiedDate":"2023-02-05"},{"lineNumber":38,"author":{"gitId":"DavidVin357"},"content":"        final String FIRST_SENTENCE \u003d \"Got it. I\u0027ve added this task:\";","lastModifiedDate":"2023-02-05"},{"lineNumber":39,"author":{"gitId":"DavidVin357"},"content":"        final String SECOND_SENTENCE \u003d \"Now you have \" + tasksList.getTasksCount() + tasksWord + \" in the list.\";","lastModifiedDate":"2023-02-05"},{"lineNumber":40,"author":{"gitId":"DavidVin357"},"content":"        printLines(FIRST_SENTENCE + System.lineSeparator() + task + System.lineSeparator() + SECOND_SENTENCE);","lastModifiedDate":"2023-02-05"},{"lineNumber":41,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":42,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":43,"author":{"gitId":"DavidVin357"},"content":"    private void addGenericTask(String name) {","lastModifiedDate":"2023-02-05"},{"lineNumber":44,"author":{"gitId":"DavidVin357"},"content":"        if (name.isEmpty()) {","lastModifiedDate":"2023-02-05"},{"lineNumber":45,"author":{"gitId":"DavidVin357"},"content":"            printLines(\"Please provide task description\");","lastModifiedDate":"2023-02-05"},{"lineNumber":46,"author":{"gitId":"DavidVin357"},"content":"            return;","lastModifiedDate":"2023-02-05"},{"lineNumber":47,"author":{"gitId":"DavidVin357"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":48,"author":{"gitId":"DavidVin357"},"content":"        this.tasksList.addTask(new Task(name, false));","lastModifiedDate":"2023-02-05"},{"lineNumber":49,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":50,"author":{"gitId":"DavidVin357"},"content":"        printLines(\"added: \" + name);","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":52,"author":{"gitId":"DavidVin357"},"content":"        tasksLoader.writeToFile(tasksList);","lastModifiedDate":"2023-02-13"},{"lineNumber":53,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":54,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":55,"author":{"gitId":"DavidVin357"},"content":"    private void createTodo(String arguments) {","lastModifiedDate":"2023-02-05"},{"lineNumber":56,"author":{"gitId":"DavidVin357"},"content":"        String name \u003d arguments;","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"DavidVin357"},"content":"        if (name.isEmpty()) {","lastModifiedDate":"2023-02-05"},{"lineNumber":58,"author":{"gitId":"DavidVin357"},"content":"            printLines(\"Please provide todo description\");","lastModifiedDate":"2023-02-05"},{"lineNumber":59,"author":{"gitId":"DavidVin357"},"content":"            return;","lastModifiedDate":"2023-02-05"},{"lineNumber":60,"author":{"gitId":"DavidVin357"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":61,"author":{"gitId":"DavidVin357"},"content":"        Todo todo \u003d new Todo(name, false);","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"DavidVin357"},"content":"        this.tasksList.addTask(todo);","lastModifiedDate":"2023-02-05"},{"lineNumber":63,"author":{"gitId":"DavidVin357"},"content":"        printAddedTask(todo);","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":65,"author":{"gitId":"DavidVin357"},"content":"        tasksLoader.writeToFile(tasksList);","lastModifiedDate":"2023-02-13"},{"lineNumber":66,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"DavidVin357"},"content":"    private void createDeadline(String arguments) {","lastModifiedDate":"2023-02-05"},{"lineNumber":69,"author":{"gitId":"DavidVin357"},"content":"        int byCommandIndex \u003d arguments.indexOf(\"/by\");","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"DavidVin357"},"content":"        if (byCommandIndex \u003c 0) {","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"DavidVin357"},"content":"            printLines(\"Please specify the /by command\");","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"DavidVin357"},"content":"            return;","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"DavidVin357"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"DavidVin357"},"content":"        String name \u003d arguments.substring(0, byCommandIndex).trim();","lastModifiedDate":"2023-01-29"},{"lineNumber":75,"author":{"gitId":"DavidVin357"},"content":"        String byArgumentValue \u003d arguments.substring(byCommandIndex).substring(\"/by\".length()).trim();","lastModifiedDate":"2023-02-05"},{"lineNumber":76,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":77,"author":{"gitId":"DavidVin357"},"content":"        if (name.isEmpty()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":78,"author":{"gitId":"DavidVin357"},"content":"            printLines(\"Please provide name argument\");","lastModifiedDate":"2023-01-29"},{"lineNumber":79,"author":{"gitId":"DavidVin357"},"content":"            return;","lastModifiedDate":"2023-01-29"},{"lineNumber":80,"author":{"gitId":"DavidVin357"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":81,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":82,"author":{"gitId":"DavidVin357"},"content":"        if (byArgumentValue.isEmpty()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":83,"author":{"gitId":"DavidVin357"},"content":"            printLines(\"Please provide /by argument\");","lastModifiedDate":"2023-01-29"},{"lineNumber":84,"author":{"gitId":"DavidVin357"},"content":"            return;","lastModifiedDate":"2023-01-29"},{"lineNumber":85,"author":{"gitId":"DavidVin357"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":86,"author":{"gitId":"DavidVin357"},"content":"        Deadline deadline \u003d new Deadline(name, false, byArgumentValue);","lastModifiedDate":"2023-01-29"},{"lineNumber":87,"author":{"gitId":"DavidVin357"},"content":"        this.tasksList.addTask(deadline);","lastModifiedDate":"2023-02-05"},{"lineNumber":88,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":89,"author":{"gitId":"DavidVin357"},"content":"        printAddedTask(deadline);","lastModifiedDate":"2023-01-29"},{"lineNumber":90,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":91,"author":{"gitId":"DavidVin357"},"content":"        tasksLoader.writeToFile(tasksList);","lastModifiedDate":"2023-02-13"},{"lineNumber":92,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":93,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":94,"author":{"gitId":"DavidVin357"},"content":"    private void createEvent(String arguments) {","lastModifiedDate":"2023-02-05"},{"lineNumber":95,"author":{"gitId":"DavidVin357"},"content":"        {","lastModifiedDate":"2023-01-29"},{"lineNumber":96,"author":{"gitId":"DavidVin357"},"content":"            int fromCommandIndex \u003d arguments.indexOf(\"/from\");","lastModifiedDate":"2023-01-29"},{"lineNumber":97,"author":{"gitId":"DavidVin357"},"content":"            int toCommandIndex \u003d arguments.indexOf(\"/to\");","lastModifiedDate":"2023-01-29"},{"lineNumber":98,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":99,"author":{"gitId":"DavidVin357"},"content":"            if (fromCommandIndex \u003c 0) {","lastModifiedDate":"2023-01-29"},{"lineNumber":100,"author":{"gitId":"DavidVin357"},"content":"                printLines(\"Please specify the /from command\");","lastModifiedDate":"2023-01-29"},{"lineNumber":101,"author":{"gitId":"DavidVin357"},"content":"                return;","lastModifiedDate":"2023-01-29"},{"lineNumber":102,"author":{"gitId":"DavidVin357"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":103,"author":{"gitId":"DavidVin357"},"content":"            if (toCommandIndex \u003c 0) {","lastModifiedDate":"2023-01-29"},{"lineNumber":104,"author":{"gitId":"DavidVin357"},"content":"                printLines(\"Please specify the /to command\");","lastModifiedDate":"2023-01-29"},{"lineNumber":105,"author":{"gitId":"DavidVin357"},"content":"                return;","lastModifiedDate":"2023-01-29"},{"lineNumber":106,"author":{"gitId":"DavidVin357"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":107,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":108,"author":{"gitId":"DavidVin357"},"content":"            String name \u003d arguments.substring(0, fromCommandIndex).trim();","lastModifiedDate":"2023-01-29"},{"lineNumber":109,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":110,"author":{"gitId":"DavidVin357"},"content":"            String fromArgumentValue \u003d arguments.substring(fromCommandIndex, toCommandIndex)","lastModifiedDate":"2023-01-29"},{"lineNumber":111,"author":{"gitId":"DavidVin357"},"content":"                    .substring(\"/from\".length()).trim();","lastModifiedDate":"2023-01-29"},{"lineNumber":112,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":113,"author":{"gitId":"DavidVin357"},"content":"            String toArgumentValue \u003d arguments.substring(toCommandIndex)","lastModifiedDate":"2023-01-29"},{"lineNumber":114,"author":{"gitId":"DavidVin357"},"content":"                    .substring(\"/to\".length()).trim();","lastModifiedDate":"2023-01-29"},{"lineNumber":115,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":116,"author":{"gitId":"DavidVin357"},"content":"            if (name.isEmpty()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":117,"author":{"gitId":"DavidVin357"},"content":"                printLines(\"Please provide the name argument\");","lastModifiedDate":"2023-01-29"},{"lineNumber":118,"author":{"gitId":"DavidVin357"},"content":"                return;","lastModifiedDate":"2023-01-29"},{"lineNumber":119,"author":{"gitId":"DavidVin357"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":120,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":121,"author":{"gitId":"DavidVin357"},"content":"            if (fromArgumentValue.isEmpty()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":122,"author":{"gitId":"DavidVin357"},"content":"                printLines(\"Please provide the /from argument\");","lastModifiedDate":"2023-01-29"},{"lineNumber":123,"author":{"gitId":"DavidVin357"},"content":"                return;","lastModifiedDate":"2023-01-29"},{"lineNumber":124,"author":{"gitId":"DavidVin357"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":125,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":126,"author":{"gitId":"DavidVin357"},"content":"            if (toArgumentValue.isEmpty()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":127,"author":{"gitId":"DavidVin357"},"content":"                printLines(\"Please provide the /to argument\");","lastModifiedDate":"2023-01-29"},{"lineNumber":128,"author":{"gitId":"DavidVin357"},"content":"                return;","lastModifiedDate":"2023-01-29"},{"lineNumber":129,"author":{"gitId":"DavidVin357"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":130,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":131,"author":{"gitId":"DavidVin357"},"content":"            Event event \u003d new Event(name, false, fromArgumentValue, toArgumentValue);","lastModifiedDate":"2023-01-29"},{"lineNumber":132,"author":{"gitId":"DavidVin357"},"content":"            this.tasksList.addTask(event);","lastModifiedDate":"2023-02-05"},{"lineNumber":133,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":134,"author":{"gitId":"DavidVin357"},"content":"            printAddedTask(event);","lastModifiedDate":"2023-01-29"},{"lineNumber":135,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":136,"author":{"gitId":"DavidVin357"},"content":"            tasksLoader.writeToFile(tasksList);","lastModifiedDate":"2023-02-13"},{"lineNumber":137,"author":{"gitId":"DavidVin357"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":138,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":139,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":140,"author":{"gitId":"DavidVin357"},"content":"    private void modifyDoneValue(boolean isDone, int taskIndex) {","lastModifiedDate":"2023-02-05"},{"lineNumber":141,"author":{"gitId":"DavidVin357"},"content":"        String successMessage \u003d isDone ? \"Nice! I\u0027ve marked this task as done:\"","lastModifiedDate":"2023-01-29"},{"lineNumber":142,"author":{"gitId":"DavidVin357"},"content":"                : \"OK, I\u0027ve marked this task as not done yet:\";","lastModifiedDate":"2023-01-29"},{"lineNumber":143,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":144,"author":{"gitId":"DavidVin357"},"content":"        try {","lastModifiedDate":"2023-02-05"},{"lineNumber":145,"author":{"gitId":"DavidVin357"},"content":"            Task task \u003d this.tasksList.getTasks().get(taskIndex);","lastModifiedDate":"2023-02-12"},{"lineNumber":146,"author":{"gitId":"DavidVin357"},"content":"            task.setIsDone(isDone);","lastModifiedDate":"2023-01-29"},{"lineNumber":147,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":148,"author":{"gitId":"DavidVin357"},"content":"            printLines(successMessage, task.toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":149,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":150,"author":{"gitId":"DavidVin357"},"content":"            tasksLoader.writeToFile(tasksList);","lastModifiedDate":"2023-02-13"},{"lineNumber":151,"author":{"gitId":"DavidVin357"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":152,"author":{"gitId":"DavidVin357"},"content":"            printLines(\"No task at such index!\");","lastModifiedDate":"2023-02-05"},{"lineNumber":153,"author":{"gitId":"DavidVin357"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":154,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":155,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":156,"author":{"gitId":"DavidVin357"},"content":"    private void removeTask(int taskIndex) {","lastModifiedDate":"2023-02-12"},{"lineNumber":157,"author":{"gitId":"DavidVin357"},"content":"        try {","lastModifiedDate":"2023-02-12"},{"lineNumber":158,"author":{"gitId":"DavidVin357"},"content":"            Task removedTask \u003d this.tasksList.removeTask(taskIndex);","lastModifiedDate":"2023-02-12"},{"lineNumber":159,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":160,"author":{"gitId":"DavidVin357"},"content":"            String tasksWord \u003d tasksList.getTasksCount() \u003d\u003d 1 ? \" task \" : \" tasks \";","lastModifiedDate":"2023-02-12"},{"lineNumber":161,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":162,"author":{"gitId":"DavidVin357"},"content":"            String successMessage \u003d  \"Noted. I\u0027ve removed this task:\" +","lastModifiedDate":"2023-02-12"},{"lineNumber":163,"author":{"gitId":"DavidVin357"},"content":"                    System.lineSeparator() +","lastModifiedDate":"2023-02-12"},{"lineNumber":164,"author":{"gitId":"DavidVin357"},"content":"                    removedTask +","lastModifiedDate":"2023-02-12"},{"lineNumber":165,"author":{"gitId":"DavidVin357"},"content":"                    System.lineSeparator() +","lastModifiedDate":"2023-02-12"},{"lineNumber":166,"author":{"gitId":"DavidVin357"},"content":"                    \"Now you have \" + tasksList.getTasksCount() + tasksWord + \"in the list.\";","lastModifiedDate":"2023-02-12"},{"lineNumber":167,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":168,"author":{"gitId":"DavidVin357"},"content":"           printLines(successMessage);","lastModifiedDate":"2023-02-12"},{"lineNumber":169,"author":{"gitId":"DavidVin357"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":170,"author":{"gitId":"DavidVin357"},"content":"            printLines(\"No task at such index!\");","lastModifiedDate":"2023-02-12"},{"lineNumber":171,"author":{"gitId":"DavidVin357"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":172,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":173,"author":{"gitId":"DavidVin357"},"content":"    public void listen() {","lastModifiedDate":"2023-01-29"},{"lineNumber":174,"author":{"gitId":"DavidVin357"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-29"},{"lineNumber":175,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":176,"author":{"gitId":"DavidVin357"},"content":"        String line \u003d in.nextLine();","lastModifiedDate":"2023-01-29"},{"lineNumber":177,"author":{"gitId":"DavidVin357"},"content":"        String[] inputArray \u003d line.split(\"\\\\s+\", 2);","lastModifiedDate":"2023-01-29"},{"lineNumber":178,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":179,"author":{"gitId":"DavidVin357"},"content":"        String command \u003d inputArray[0];","lastModifiedDate":"2023-01-29"},{"lineNumber":180,"author":{"gitId":"DavidVin357"},"content":"        String arguments \u003d inputArray.length \u003e 1 ? inputArray[1] : \"\";","lastModifiedDate":"2023-01-29"},{"lineNumber":181,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":182,"author":{"gitId":"DavidVin357"},"content":"        switch (command) {","lastModifiedDate":"2023-01-29"},{"lineNumber":183,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":184,"author":{"gitId":"DavidVin357"},"content":"        case \"add\":","lastModifiedDate":"2023-01-29"},{"lineNumber":185,"author":{"gitId":"DavidVin357"},"content":"            addGenericTask(arguments);","lastModifiedDate":"2023-02-05"},{"lineNumber":186,"author":{"gitId":"DavidVin357"},"content":"            break;","lastModifiedDate":"2023-01-29"},{"lineNumber":187,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":188,"author":{"gitId":"DavidVin357"},"content":"        case \"todo\":","lastModifiedDate":"2023-01-29"},{"lineNumber":189,"author":{"gitId":"DavidVin357"},"content":"            createTodo(arguments);","lastModifiedDate":"2023-02-05"},{"lineNumber":190,"author":{"gitId":"DavidVin357"},"content":"            break;","lastModifiedDate":"2023-01-29"},{"lineNumber":191,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":192,"author":{"gitId":"DavidVin357"},"content":"        case \"deadline\":","lastModifiedDate":"2023-01-29"},{"lineNumber":193,"author":{"gitId":"DavidVin357"},"content":"            createDeadline(arguments);","lastModifiedDate":"2023-02-05"},{"lineNumber":194,"author":{"gitId":"DavidVin357"},"content":"            break;","lastModifiedDate":"2023-01-29"},{"lineNumber":195,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":196,"author":{"gitId":"DavidVin357"},"content":"        case \"event\":","lastModifiedDate":"2023-01-29"},{"lineNumber":197,"author":{"gitId":"DavidVin357"},"content":"            createEvent(arguments);","lastModifiedDate":"2023-02-05"},{"lineNumber":198,"author":{"gitId":"DavidVin357"},"content":"            break;","lastModifiedDate":"2023-01-29"},{"lineNumber":199,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":200,"author":{"gitId":"DavidVin357"},"content":"        case \"list\": {","lastModifiedDate":"2023-01-29"},{"lineNumber":201,"author":{"gitId":"DavidVin357"},"content":"            printLines(this.tasksList.toString());","lastModifiedDate":"2023-02-05"},{"lineNumber":202,"author":{"gitId":"DavidVin357"},"content":"            break;","lastModifiedDate":"2023-01-29"},{"lineNumber":203,"author":{"gitId":"DavidVin357"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":204,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":205,"author":{"gitId":"DavidVin357"},"content":"        case \"mark\":","lastModifiedDate":"2023-01-29"},{"lineNumber":206,"author":{"gitId":"DavidVin357"},"content":"        case \"unmark\": {","lastModifiedDate":"2023-01-29"},{"lineNumber":207,"author":{"gitId":"DavidVin357"},"content":"            // isDone value that user wants to achieve","lastModifiedDate":"2023-01-29"},{"lineNumber":208,"author":{"gitId":"DavidVin357"},"content":"            boolean intendedDoneValue \u003d command.equals(\"mark\");","lastModifiedDate":"2023-01-29"},{"lineNumber":209,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":210,"author":{"gitId":"DavidVin357"},"content":"            try {","lastModifiedDate":"2023-02-05"},{"lineNumber":211,"author":{"gitId":"DavidVin357"},"content":"                int taskIndex \u003d Integer.parseInt(arguments) - 1;","lastModifiedDate":"2023-02-12"},{"lineNumber":212,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":213,"author":{"gitId":"DavidVin357"},"content":"                modifyDoneValue(intendedDoneValue, taskIndex);","lastModifiedDate":"2023-02-05"},{"lineNumber":214,"author":{"gitId":"DavidVin357"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-05"},{"lineNumber":215,"author":{"gitId":"DavidVin357"},"content":"                printLines(\"Please provide a valid index\");","lastModifiedDate":"2023-02-05"},{"lineNumber":216,"author":{"gitId":"DavidVin357"},"content":"            }","lastModifiedDate":"2023-02-05"},{"lineNumber":217,"author":{"gitId":"DavidVin357"},"content":"            break;","lastModifiedDate":"2023-01-29"},{"lineNumber":218,"author":{"gitId":"DavidVin357"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":219,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":220,"author":{"gitId":"DavidVin357"},"content":"        case \"delete\": {","lastModifiedDate":"2023-02-12"},{"lineNumber":221,"author":{"gitId":"DavidVin357"},"content":"            try {","lastModifiedDate":"2023-02-12"},{"lineNumber":222,"author":{"gitId":"DavidVin357"},"content":"                int taskIndex \u003d Integer.parseInt(arguments) - 1;","lastModifiedDate":"2023-02-12"},{"lineNumber":223,"author":{"gitId":"DavidVin357"},"content":"                removeTask(taskIndex);","lastModifiedDate":"2023-02-12"},{"lineNumber":224,"author":{"gitId":"DavidVin357"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":225,"author":{"gitId":"DavidVin357"},"content":"                printLines(\"Please provide a valid index\");","lastModifiedDate":"2023-02-12"},{"lineNumber":226,"author":{"gitId":"DavidVin357"},"content":"            }","lastModifiedDate":"2023-02-12"},{"lineNumber":227,"author":{"gitId":"DavidVin357"},"content":"            break;","lastModifiedDate":"2023-02-12"},{"lineNumber":228,"author":{"gitId":"DavidVin357"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":229,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":230,"author":{"gitId":"DavidVin357"},"content":"        case \"bye\":","lastModifiedDate":"2023-01-29"},{"lineNumber":231,"author":{"gitId":"DavidVin357"},"content":"            printLines(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-29"},{"lineNumber":232,"author":{"gitId":"DavidVin357"},"content":"            return;","lastModifiedDate":"2023-01-29"},{"lineNumber":233,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":234,"author":{"gitId":"DavidVin357"},"content":"        default:","lastModifiedDate":"2023-01-23"},{"lineNumber":235,"author":{"gitId":"DavidVin357"},"content":"            printLines(\"No such command exists!\");","lastModifiedDate":"2023-01-29"},{"lineNumber":236,"author":{"gitId":"DavidVin357"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":237,"author":{"gitId":"DavidVin357"},"content":"        listen();","lastModifiedDate":"2023-01-23"},{"lineNumber":238,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":239,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":240,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":241,"author":{"gitId":"DavidVin357"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"DavidVin357":241}},{"path":"src/main/java/TasksList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DavidVin357"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"DavidVin357"},"content":"public class TasksList {","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"DavidVin357"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"DavidVin357"},"content":"    public TasksList () {","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"DavidVin357"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"DavidVin357"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"DavidVin357"},"content":"        return tasks;","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"DavidVin357"},"content":"    public int getTasksCount() {","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"DavidVin357"},"content":"        return tasks.size();","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"DavidVin357"},"content":"    public String toString() {","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"DavidVin357"},"content":"        int index \u003d 1;","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"DavidVin357"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"DavidVin357"},"content":"        for (Task task: tasks) {","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"DavidVin357"},"content":"                output.append(index).append(\". \").append(task);","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"DavidVin357"},"content":"                // Don\u0027t add a break after the last line","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"DavidVin357"},"content":"                if (index !\u003d tasks.size()){","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"DavidVin357"},"content":"                    output.append(System.lineSeparator());","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"DavidVin357"},"content":"                }","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"DavidVin357"},"content":"                index++;","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"DavidVin357"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"DavidVin357"},"content":"        return output.toString();","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"DavidVin357"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"DavidVin357"},"content":"        tasks.add(task);","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":37,"author":{"gitId":"DavidVin357"},"content":"    public Task removeTask(int index) {","lastModifiedDate":"2023-02-12"},{"lineNumber":38,"author":{"gitId":"DavidVin357"},"content":"        Task taskToRemove \u003d tasks.get(index);","lastModifiedDate":"2023-02-12"},{"lineNumber":39,"author":{"gitId":"DavidVin357"},"content":"        tasks.remove(index);","lastModifiedDate":"2023-02-12"},{"lineNumber":40,"author":{"gitId":"DavidVin357"},"content":"        return taskToRemove;","lastModifiedDate":"2023-02-12"},{"lineNumber":41,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"DavidVin357"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"DavidVin357":42}},{"path":"src/main/java/TasksLoader.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DavidVin357"},"content":"import java.io.File;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"DavidVin357"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"DavidVin357"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"DavidVin357"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"DavidVin357"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"DavidVin357"},"content":"public class TasksLoader {","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"DavidVin357"},"content":"    private TasksList tasksList;","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"DavidVin357"},"content":"    public TasksLoader(TasksList tasksList) {","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"DavidVin357"},"content":"        this.tasksList \u003d tasksList;","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"DavidVin357"},"content":"    public void loadTasks() {","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"DavidVin357"},"content":"        try {","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"DavidVin357"},"content":"            File f \u003d new File(\"data/sherlock.txt\");","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"DavidVin357"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"DavidVin357"},"content":"            int lineIndex \u003d 1;","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"DavidVin357"},"content":"            lineIterator:","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"DavidVin357"},"content":"            while(s.hasNext()) {","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"DavidVin357"},"content":"                String line \u003d s.nextLine();","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"DavidVin357"},"content":"                String[] arguments \u003d line.split(\"\\\\|\");","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"DavidVin357"},"content":"//                Check for empty arguments","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"DavidVin357"},"content":"                int argCount \u003d 1;","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"DavidVin357"},"content":"                for (String arg: arguments) {","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"DavidVin357"},"content":"                    if (arg.trim().equals(\"\")){","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"DavidVin357"},"content":"                        TaskListener.printLines(\"Argument #\" + argCount + \" is empty on line #\" + lineIndex);","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"DavidVin357"},"content":"                        continue lineIterator;","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"DavidVin357"},"content":"                    }","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"DavidVin357"},"content":"                }","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"DavidVin357"},"content":"//                Parse tasks from file","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"DavidVin357"},"content":"                try {","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"DavidVin357"},"content":"                    String taskType \u003d arguments[0].trim();","lastModifiedDate":"2023-02-13"},{"lineNumber":38,"author":{"gitId":"DavidVin357"},"content":"                    Boolean isDone \u003d arguments[1].trim().equals(\"1\");","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"DavidVin357"},"content":"                    String name \u003d arguments[2].trim();","lastModifiedDate":"2023-02-13"},{"lineNumber":40,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"DavidVin357"},"content":"                    switch (taskType){","lastModifiedDate":"2023-02-13"},{"lineNumber":42,"author":{"gitId":"DavidVin357"},"content":"                        case \"TASK\":","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"DavidVin357"},"content":"                            Task task \u003d new Task(name, isDone);","lastModifiedDate":"2023-02-13"},{"lineNumber":44,"author":{"gitId":"DavidVin357"},"content":"                            tasksList.addTask(task);","lastModifiedDate":"2023-02-13"},{"lineNumber":45,"author":{"gitId":"DavidVin357"},"content":"                            break;","lastModifiedDate":"2023-02-13"},{"lineNumber":46,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":47,"author":{"gitId":"DavidVin357"},"content":"                        case \"T\":","lastModifiedDate":"2023-02-13"},{"lineNumber":48,"author":{"gitId":"DavidVin357"},"content":"                            Todo todo \u003d new Todo(name, isDone);","lastModifiedDate":"2023-02-13"},{"lineNumber":49,"author":{"gitId":"DavidVin357"},"content":"                            tasksList.addTask(todo);","lastModifiedDate":"2023-02-13"},{"lineNumber":50,"author":{"gitId":"DavidVin357"},"content":"                            break;","lastModifiedDate":"2023-02-13"},{"lineNumber":51,"author":{"gitId":"DavidVin357"},"content":"                        case \"D\":","lastModifiedDate":"2023-02-13"},{"lineNumber":52,"author":{"gitId":"DavidVin357"},"content":"                            String by \u003d arguments[3].trim();","lastModifiedDate":"2023-02-13"},{"lineNumber":53,"author":{"gitId":"DavidVin357"},"content":"                            Deadline deadline \u003d new Deadline(name, isDone, by);","lastModifiedDate":"2023-02-13"},{"lineNumber":54,"author":{"gitId":"DavidVin357"},"content":"                            tasksList.addTask(deadline);","lastModifiedDate":"2023-02-13"},{"lineNumber":55,"author":{"gitId":"DavidVin357"},"content":"                            break;","lastModifiedDate":"2023-02-13"},{"lineNumber":56,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":57,"author":{"gitId":"DavidVin357"},"content":"                        case \"E\":","lastModifiedDate":"2023-02-13"},{"lineNumber":58,"author":{"gitId":"DavidVin357"},"content":"                            String from \u003d arguments[3].trim();","lastModifiedDate":"2023-02-13"},{"lineNumber":59,"author":{"gitId":"DavidVin357"},"content":"                            String to \u003d arguments[4].trim();","lastModifiedDate":"2023-02-13"},{"lineNumber":60,"author":{"gitId":"DavidVin357"},"content":"                            Event event \u003d new Event(name, isDone, from, to);","lastModifiedDate":"2023-02-13"},{"lineNumber":61,"author":{"gitId":"DavidVin357"},"content":"                            tasksList.addTask(event);","lastModifiedDate":"2023-02-13"},{"lineNumber":62,"author":{"gitId":"DavidVin357"},"content":"                            break;","lastModifiedDate":"2023-02-13"},{"lineNumber":63,"author":{"gitId":"DavidVin357"},"content":"                        default:","lastModifiedDate":"2023-02-13"},{"lineNumber":64,"author":{"gitId":"DavidVin357"},"content":"                            System.out.println(\"An invalid task type \"","lastModifiedDate":"2023-02-13"},{"lineNumber":65,"author":{"gitId":"DavidVin357"},"content":"                                    + taskType + \" is given in input file on line #\" + lineIndex);","lastModifiedDate":"2023-02-13"},{"lineNumber":66,"author":{"gitId":"DavidVin357"},"content":"                    }","lastModifiedDate":"2023-02-13"},{"lineNumber":67,"author":{"gitId":"DavidVin357"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":68,"author":{"gitId":"DavidVin357"},"content":"                    TaskListener.printLines(\"Can\u0027t parse line #\" + lineIndex + \". The number of arguments is invalid\");","lastModifiedDate":"2023-02-13"},{"lineNumber":69,"author":{"gitId":"DavidVin357"},"content":"                }","lastModifiedDate":"2023-02-13"},{"lineNumber":70,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":71,"author":{"gitId":"DavidVin357"},"content":"                lineIndex++;","lastModifiedDate":"2023-02-13"},{"lineNumber":72,"author":{"gitId":"DavidVin357"},"content":"            }","lastModifiedDate":"2023-02-13"},{"lineNumber":73,"author":{"gitId":"DavidVin357"},"content":"            TaskListener.printLines(\"data/sherlock.txt contents are successfully loaded\");","lastModifiedDate":"2023-02-13"},{"lineNumber":74,"author":{"gitId":"DavidVin357"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":75,"author":{"gitId":"DavidVin357"},"content":"            System.out.println(\"Couldn\u0027t read from file data/sherlock.txt\");","lastModifiedDate":"2023-02-13"},{"lineNumber":76,"author":{"gitId":"DavidVin357"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":77,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":78,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":79,"author":{"gitId":"DavidVin357"},"content":"    public void writeToFile(TasksList tasksList) {","lastModifiedDate":"2023-02-13"},{"lineNumber":80,"author":{"gitId":"DavidVin357"},"content":"        try {","lastModifiedDate":"2023-02-13"},{"lineNumber":81,"author":{"gitId":"DavidVin357"},"content":"            FileWriter fw \u003d new FileWriter(\"data/sherlock.txt\");","lastModifiedDate":"2023-02-13"},{"lineNumber":82,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":83,"author":{"gitId":"DavidVin357"},"content":"            StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2023-02-13"},{"lineNumber":84,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":85,"author":{"gitId":"DavidVin357"},"content":"            ArrayList\u003cTask\u003e tasks \u003d tasksList.getTasks();","lastModifiedDate":"2023-02-13"},{"lineNumber":86,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":87,"author":{"gitId":"DavidVin357"},"content":"//            Construct a file output","lastModifiedDate":"2023-02-13"},{"lineNumber":88,"author":{"gitId":"DavidVin357"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-02-13"},{"lineNumber":89,"author":{"gitId":"DavidVin357"},"content":"                output.append(task.getFileFormatString()).append(System.lineSeparator());","lastModifiedDate":"2023-02-13"},{"lineNumber":90,"author":{"gitId":"DavidVin357"},"content":"            }","lastModifiedDate":"2023-02-13"},{"lineNumber":91,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":92,"author":{"gitId":"DavidVin357"},"content":"            fw.write(output.toString());","lastModifiedDate":"2023-02-13"},{"lineNumber":93,"author":{"gitId":"DavidVin357"},"content":"            fw.close();","lastModifiedDate":"2023-02-13"},{"lineNumber":94,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":95,"author":{"gitId":"DavidVin357"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":96,"author":{"gitId":"DavidVin357"},"content":"            System.out.println(\"Couldn\u0027t add a change to file data/sherlock.txt\");","lastModifiedDate":"2023-02-13"},{"lineNumber":97,"author":{"gitId":"DavidVin357"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":98,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":99,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":100,"author":{"gitId":"DavidVin357"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"DavidVin357":100}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DavidVin357"},"content":"public class Todo extends Task{","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"DavidVin357"},"content":"    public Todo(String name, Boolean isDone) {","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"DavidVin357"},"content":"        super(name, isDone);","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"DavidVin357"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"DavidVin357"},"content":"    public String getType() {","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"DavidVin357"},"content":"        return \"T\";","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"DavidVin357"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"DavidVin357"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"DavidVin357"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"DavidVin357"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"DavidVin357"},"content":"    public String getFileFormatString() {","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"DavidVin357"},"content":"        return String.format(\"%s | %d | %s\",","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"DavidVin357"},"content":"                this.getType(),","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"DavidVin357"},"content":"                this.isDone ? 1 : 0,","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"DavidVin357"},"content":"                this.name","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"DavidVin357"},"content":"        );","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"DavidVin357"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"DavidVin357":25}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"DavidVin357"},"content":"java -classpath ..\\bin Sherlock \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"DavidVin357":1,"-":20}}]
