[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"DavidVin357"},"content":"# Sherlock project template","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"DavidVin357"},"content":"3. After that, locate the `src/sherlock/tasker/Sherlock.java` file, right-click it, and choose `Run Sherlock.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"DavidVin357"},"content":"   _____ __  ____________  __    ____  ________ __","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"DavidVin357"},"content":"  / ___// / / / ____/ __ \\/ /   / __ \\/ ____/ //_/","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"DavidVin357"},"content":"  \\__ \\/ /_/ / __/ / /_/ / /   / / / / /   / ,\u003c   ","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"DavidVin357"},"content":" ___/ / __  / /___/ _, _/ /___/ /_/ / /___/ /| |  ","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"DavidVin357"},"content":"/____/_/ /_/_____/_/ |_/_____/\\____/\\____/_/ |_|  ","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"DavidVin357":7,"-":17}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"DavidVin357"},"content":"# Sherlock User Guide","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"DavidVin357"},"content":"### Adding a task","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"DavidVin357"},"content":"Add different types of tasks to your tasks list","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":8,"author":{"gitId":"DavidVin357"},"content":"You can put todos, deadlines, events, as well as any other","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"DavidVin357"},"content":"generic task you have in mind.","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"DavidVin357"},"content":"### Listing tasks","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"DavidVin357"},"content":"List all the tasks you have now","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":14,"author":{"gitId":"DavidVin357"},"content":"### Finding a task","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"DavidVin357"},"content":"Find specific tasks by some keyword","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"DavidVin357"},"content":"### Tracking tasks completion","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"DavidVin357"},"content":"Mark your tasks as DONE or NOT DONE","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"DavidVin357"},"content":"### Storing tasks","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"DavidVin357"},"content":"The program stores and retrieves all of your added task that are","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"DavidVin357"},"content":"automatically added to a file named tasks.txt.","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"DavidVin357"},"content":"### `add` - add a generic task","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"DavidVin357"},"content":"Use this command when your task doesn\u0027t fit any of the standard ","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"DavidVin357"},"content":"task types.","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"DavidVin357"},"content":"Example of usage:","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"DavidVin357"},"content":"`add go to library`","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"DavidVin357"},"content":"Expected outcome:","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"DavidVin357"},"content":"The program notifies you of the new task being","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"DavidVin357"},"content":"created and the total number of the tasks in your list.","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"DavidVin357"},"content":"The task status is set by default as NOT DONE.","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"DavidVin357"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"DavidVin357"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"DavidVin357"},"content":"[ ] go to library","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"DavidVin357"},"content":"Now you have 1 task in the list.","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"DavidVin357"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"DavidVin357"},"content":"### `todo` - add a todo","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"DavidVin357"},"content":"Use this command when you want to save some todo that has no ","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"DavidVin357"},"content":"time constraints.","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"DavidVin357"},"content":"Example of usage:","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"DavidVin357"},"content":"`todo gym`","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"DavidVin357"},"content":"Expected outcome:","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"DavidVin357"},"content":"The program notifies you of the new todo being","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"DavidVin357"},"content":"created and the total number of the tasks in your list.","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"DavidVin357"},"content":"The todo status is set by default as NOT DONE.","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"DavidVin357"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"DavidVin357"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"DavidVin357"},"content":"[T][ ] gym","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"DavidVin357"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"DavidVin357"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"DavidVin357"},"content":"### `deadline` - add a task with deadline","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"DavidVin357"},"content":"Use this command when your task is due to some date.","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"DavidVin357"},"content":"Specify the deadline with a ***/by*** flag using the following format:","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"DavidVin357"},"content":"`dd-MM-yyyy(required) HH:mm(optional)`","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"DavidVin357"},"content":"The default time if not specified is 23:59.","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"DavidVin357"},"content":"Example of usage:","lastModifiedDate":"2023-03-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"DavidVin357"},"content":"`deadline thesis /by 23-05-2023`","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"DavidVin357"},"content":"Expected outcome:","lastModifiedDate":"2023-03-03"},{"lineNumber":80,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"DavidVin357"},"content":"The program notifies you of the new deadline being","lastModifiedDate":"2023-03-03"},{"lineNumber":82,"author":{"gitId":"DavidVin357"},"content":"created and the total number of the tasks in your list.","lastModifiedDate":"2023-03-03"},{"lineNumber":83,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":84,"author":{"gitId":"DavidVin357"},"content":"The deadline status is set by default as NOT DONE.","lastModifiedDate":"2023-03-03"},{"lineNumber":85,"author":{"gitId":"DavidVin357"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":86,"author":{"gitId":"DavidVin357"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-03-03"},{"lineNumber":87,"author":{"gitId":"DavidVin357"},"content":"[D][ ] thesis (by: 23 May 2023 23:59)","lastModifiedDate":"2023-03-03"},{"lineNumber":88,"author":{"gitId":"DavidVin357"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2023-03-03"},{"lineNumber":89,"author":{"gitId":"DavidVin357"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":90,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":91,"author":{"gitId":"DavidVin357"},"content":"### `event` - add an event","lastModifiedDate":"2023-03-03"},{"lineNumber":92,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":93,"author":{"gitId":"DavidVin357"},"content":"Use this command when your type of task is some event","lastModifiedDate":"2023-03-03"},{"lineNumber":94,"author":{"gitId":"DavidVin357"},"content":"(e.g., conference).","lastModifiedDate":"2023-03-03"},{"lineNumber":95,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":96,"author":{"gitId":"DavidVin357"},"content":"Specify the event time frames with /from and /to flags ","lastModifiedDate":"2023-03-03"},{"lineNumber":97,"author":{"gitId":"DavidVin357"},"content":"that should have a following format:","lastModifiedDate":"2023-03-03"},{"lineNumber":98,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":99,"author":{"gitId":"DavidVin357"},"content":"`dd-MM-yyyy(required) HH:mm(optional)`","lastModifiedDate":"2023-03-03"},{"lineNumber":100,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":101,"author":{"gitId":"DavidVin357"},"content":"The default time if not specified is 23:59.","lastModifiedDate":"2023-03-03"},{"lineNumber":102,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":103,"author":{"gitId":"DavidVin357"},"content":"Example of usage:","lastModifiedDate":"2023-03-03"},{"lineNumber":104,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":105,"author":{"gitId":"DavidVin357"},"content":"`event Web Dev Conf /from 05-05-2023 08:00 /to 10-05-2023`","lastModifiedDate":"2023-03-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2023-03-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":109,"author":{"gitId":"DavidVin357"},"content":"The program notifies you of the new event being","lastModifiedDate":"2023-03-03"},{"lineNumber":110,"author":{"gitId":"DavidVin357"},"content":"created and the total number of the tasks in your list.","lastModifiedDate":"2023-03-03"},{"lineNumber":111,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":112,"author":{"gitId":"DavidVin357"},"content":"The event status is set by default as NOT DONE.","lastModifiedDate":"2023-03-03"},{"lineNumber":113,"author":{"gitId":"DavidVin357"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":114,"author":{"gitId":"DavidVin357"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-03-03"},{"lineNumber":115,"author":{"gitId":"DavidVin357"},"content":"[E][ ] Web Dev Conf (from: 05 May 2023 08:00; to: 10 May 2023 23:59)","lastModifiedDate":"2023-03-03"},{"lineNumber":116,"author":{"gitId":"DavidVin357"},"content":"Now you have 4 tasks in the list.","lastModifiedDate":"2023-03-03"},{"lineNumber":117,"author":{"gitId":"DavidVin357"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":118,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":119,"author":{"gitId":"DavidVin357"},"content":"### `list` - list all of your tasks","lastModifiedDate":"2023-03-03"},{"lineNumber":120,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":121,"author":{"gitId":"DavidVin357"},"content":"Use this command to list all your tasks.","lastModifiedDate":"2023-03-03"},{"lineNumber":122,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":123,"author":{"gitId":"DavidVin357"},"content":"The program lists each task in a following format:","lastModifiedDate":"2023-03-03"},{"lineNumber":124,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":125,"author":{"gitId":"DavidVin357"},"content":"`#. {Type} {Task Name} {(by, from, to if such exist)}`","lastModifiedDate":"2023-03-03"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":127,"author":{"gitId":"DavidVin357"},"content":"Example of usage:","lastModifiedDate":"2023-03-03"},{"lineNumber":128,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":129,"author":{"gitId":"DavidVin357"},"content":"`list`","lastModifiedDate":"2023-03-03"},{"lineNumber":130,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":131,"author":{"gitId":"DavidVin357"},"content":"Expected outcome:","lastModifiedDate":"2023-03-03"},{"lineNumber":132,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":133,"author":{"gitId":"DavidVin357"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":134,"author":{"gitId":"DavidVin357"},"content":"1. [ ] go to library","lastModifiedDate":"2023-03-03"},{"lineNumber":135,"author":{"gitId":"DavidVin357"},"content":"2. [T][ ] gym","lastModifiedDate":"2023-03-03"},{"lineNumber":136,"author":{"gitId":"DavidVin357"},"content":"3. [D][ ] thesis (by: 23 May 2023 23:59)","lastModifiedDate":"2023-03-03"},{"lineNumber":137,"author":{"gitId":"DavidVin357"},"content":"4. [E][ ] Web Dev Conf (from: 05 May 2023 08:00; to: 10 May 2023 23:59)","lastModifiedDate":"2023-03-03"},{"lineNumber":138,"author":{"gitId":"DavidVin357"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":139,"author":{"gitId":"DavidVin357"},"content":"### `mark` - mark the task as DONE ","lastModifiedDate":"2023-03-03"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":141,"author":{"gitId":"DavidVin357"},"content":"Use this command to mark your task as DONE.","lastModifiedDate":"2023-03-03"},{"lineNumber":142,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":143,"author":{"gitId":"DavidVin357"},"content":"You should use the index provided in the `list` command.","lastModifiedDate":"2023-03-03"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":147,"author":{"gitId":"DavidVin357"},"content":"`mark 3`","lastModifiedDate":"2023-03-03"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":151,"author":{"gitId":"DavidVin357"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":152,"author":{"gitId":"DavidVin357"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2023-03-03"},{"lineNumber":153,"author":{"gitId":"DavidVin357"},"content":"[D][X] thesis (by: 23 May 2023 23:59)","lastModifiedDate":"2023-03-03"},{"lineNumber":154,"author":{"gitId":"DavidVin357"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":155,"author":{"gitId":"DavidVin357"},"content":"### `unmark` - unmark the task back to NOT DONE","lastModifiedDate":"2023-03-03"},{"lineNumber":156,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":157,"author":{"gitId":"DavidVin357"},"content":"Use this command to unmark your task back to NOT DONE.","lastModifiedDate":"2023-03-03"},{"lineNumber":158,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":159,"author":{"gitId":"DavidVin357"},"content":"You should use the index provided in the `list` command.","lastModifiedDate":"2023-03-03"},{"lineNumber":160,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":161,"author":{"gitId":"DavidVin357"},"content":"Example of usage:","lastModifiedDate":"2023-03-03"},{"lineNumber":162,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":163,"author":{"gitId":"DavidVin357"},"content":"`unmark 3`","lastModifiedDate":"2023-03-03"},{"lineNumber":164,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":165,"author":{"gitId":"DavidVin357"},"content":"Expected outcome:","lastModifiedDate":"2023-03-03"},{"lineNumber":166,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":167,"author":{"gitId":"DavidVin357"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":168,"author":{"gitId":"DavidVin357"},"content":"OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2023-03-03"},{"lineNumber":169,"author":{"gitId":"DavidVin357"},"content":"[D][ ] thesis (by: 23 May 2023 23:59)","lastModifiedDate":"2023-03-03"},{"lineNumber":170,"author":{"gitId":"DavidVin357"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":171,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":172,"author":{"gitId":"DavidVin357"},"content":"### `find` - find the task by some term","lastModifiedDate":"2023-03-03"},{"lineNumber":173,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":174,"author":{"gitId":"DavidVin357"},"content":"Use this command to find all tasks that have a given term.","lastModifiedDate":"2023-03-03"},{"lineNumber":175,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":176,"author":{"gitId":"DavidVin357"},"content":"Example of usage:","lastModifiedDate":"2023-03-03"},{"lineNumber":177,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":178,"author":{"gitId":"DavidVin357"},"content":"- `find blah`","lastModifiedDate":"2023-03-03"},{"lineNumber":179,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":180,"author":{"gitId":"DavidVin357"},"content":"    Expected outcome (Nothing is found):","lastModifiedDate":"2023-03-03"},{"lineNumber":181,"author":{"gitId":"DavidVin357"},"content":"    ","lastModifiedDate":"2023-03-03"},{"lineNumber":182,"author":{"gitId":"DavidVin357"},"content":"    ```","lastModifiedDate":"2023-03-03"},{"lineNumber":183,"author":{"gitId":"DavidVin357"},"content":"    No task is found for this term","lastModifiedDate":"2023-03-03"},{"lineNumber":184,"author":{"gitId":"DavidVin357"},"content":"    ```","lastModifiedDate":"2023-03-03"},{"lineNumber":185,"author":{"gitId":"DavidVin357"},"content":"- `find web`","lastModifiedDate":"2023-03-03"},{"lineNumber":186,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":187,"author":{"gitId":"DavidVin357"},"content":"  Expected outcome:","lastModifiedDate":"2023-03-03"},{"lineNumber":188,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":189,"author":{"gitId":"DavidVin357"},"content":"  ```","lastModifiedDate":"2023-03-03"},{"lineNumber":190,"author":{"gitId":"DavidVin357"},"content":"    Here are the matching tasks in your list:","lastModifiedDate":"2023-03-03"},{"lineNumber":191,"author":{"gitId":"DavidVin357"},"content":"    1. [E][ ] Web Dev Conf (from: 05 May 2023 08:00; to: 10 May 2023 23:59)","lastModifiedDate":"2023-03-03"},{"lineNumber":192,"author":{"gitId":"DavidVin357"},"content":"    2. [D][ ] create website (by: 06 Aug 2023 23:59)","lastModifiedDate":"2023-03-03"},{"lineNumber":193,"author":{"gitId":"DavidVin357"},"content":"  ```","lastModifiedDate":"2023-03-03"},{"lineNumber":194,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":195,"author":{"gitId":"DavidVin357"},"content":"### `delete` - delete the task by its index","lastModifiedDate":"2023-03-03"},{"lineNumber":196,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":197,"author":{"gitId":"DavidVin357"},"content":"Use this command to delete a task.","lastModifiedDate":"2023-03-03"},{"lineNumber":198,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":199,"author":{"gitId":"DavidVin357"},"content":"You should use the index provided in the `list` command.","lastModifiedDate":"2023-03-03"},{"lineNumber":200,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":201,"author":{"gitId":"DavidVin357"},"content":"Example of usage:","lastModifiedDate":"2023-03-03"},{"lineNumber":202,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":203,"author":{"gitId":"DavidVin357"},"content":"`delete 3`","lastModifiedDate":"2023-03-03"},{"lineNumber":204,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":205,"author":{"gitId":"DavidVin357"},"content":"Expected outcome:","lastModifiedDate":"2023-03-03"},{"lineNumber":206,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":207,"author":{"gitId":"DavidVin357"},"content":"The program notifies you of the task being","lastModifiedDate":"2023-03-03"},{"lineNumber":208,"author":{"gitId":"DavidVin357"},"content":"deleted and the new number of the tasks in your list.","lastModifiedDate":"2023-03-03"},{"lineNumber":209,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":210,"author":{"gitId":"DavidVin357"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":211,"author":{"gitId":"DavidVin357"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2023-03-03"},{"lineNumber":212,"author":{"gitId":"DavidVin357"},"content":"[D][ ] thesis (by: 23 May 2023 23:59)","lastModifiedDate":"2023-03-03"},{"lineNumber":213,"author":{"gitId":"DavidVin357"},"content":"Now you have 4 tasks in the list.","lastModifiedDate":"2023-03-03"},{"lineNumber":214,"author":{"gitId":"DavidVin357"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":215,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":216,"author":{"gitId":"DavidVin357"},"content":"### `bye` - exit the Sherlock program","lastModifiedDate":"2023-03-03"},{"lineNumber":217,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":218,"author":{"gitId":"DavidVin357"},"content":"Use this command to exit the program.","lastModifiedDate":"2023-03-03"},{"lineNumber":219,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":220,"author":{"gitId":"DavidVin357"},"content":"Example of usage:","lastModifiedDate":"2023-03-03"},{"lineNumber":221,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":222,"author":{"gitId":"DavidVin357"},"content":"`bye`","lastModifiedDate":"2023-03-03"},{"lineNumber":223,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":224,"author":{"gitId":"DavidVin357"},"content":"Expected outcome:","lastModifiedDate":"2023-03-03"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":226,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":227,"author":{"gitId":"DavidVin357"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2023-03-03"},{"lineNumber":228,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"DavidVin357":202,"-":26}},{"path":"src/sherlock/tasker/Sherlock.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DavidVin357"},"content":"import commands.Command;","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"DavidVin357"},"content":"import parser.Parser;","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"DavidVin357"},"content":"import data.TasksList;","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"DavidVin357"},"content":"import data.exceptions.SherlockException;","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"DavidVin357"},"content":"import storage.Storage;","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"DavidVin357"},"content":"import ui.Ui;","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"DavidVin357"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"DavidVin357"},"content":" * Core class of the Sherlock program","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"DavidVin357"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"DavidVin357"},"content":"public class Sherlock {","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"DavidVin357"},"content":"    private Storage storage;","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"DavidVin357"},"content":"    private TasksList tasksList;","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"DavidVin357"},"content":"    private Ui ui;","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"DavidVin357"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"DavidVin357"},"content":"     * @param filePath","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"DavidVin357"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"DavidVin357"},"content":"    public Sherlock(String filePath) {","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"DavidVin357"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"DavidVin357"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"DavidVin357"},"content":"        try {","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"DavidVin357"},"content":"            tasksList \u003d storage.loadTasks(ui);","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"DavidVin357"},"content":"            ui.showLoadingSuccessful();","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"DavidVin357"},"content":"        } catch (SherlockException e) {","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"DavidVin357"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"DavidVin357"},"content":"            tasksList \u003d new TasksList();","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"DavidVin357"},"content":"        }","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"DavidVin357"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"DavidVin357"},"content":"     * Runs a Sherlock program","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"DavidVin357"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"DavidVin357"},"content":"    public void run() {","lastModifiedDate":"2023-03-02"},{"lineNumber":35,"author":{"gitId":"DavidVin357"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-03-02"},{"lineNumber":36,"author":{"gitId":"DavidVin357"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-03-02"},{"lineNumber":37,"author":{"gitId":"DavidVin357"},"content":"        while (!isExit) {","lastModifiedDate":"2023-03-02"},{"lineNumber":38,"author":{"gitId":"DavidVin357"},"content":"            try {","lastModifiedDate":"2023-03-02"},{"lineNumber":39,"author":{"gitId":"DavidVin357"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-03-02"},{"lineNumber":40,"author":{"gitId":"DavidVin357"},"content":"                Parser parser \u003d new Parser();","lastModifiedDate":"2023-03-02"},{"lineNumber":41,"author":{"gitId":"DavidVin357"},"content":"                Command c \u003d parser.parse(fullCommand);","lastModifiedDate":"2023-03-02"},{"lineNumber":42,"author":{"gitId":"DavidVin357"},"content":"                c.execute(tasksList, ui, storage);","lastModifiedDate":"2023-03-02"},{"lineNumber":43,"author":{"gitId":"DavidVin357"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-03-02"},{"lineNumber":44,"author":{"gitId":"DavidVin357"},"content":"            } catch (SherlockException e) {","lastModifiedDate":"2023-03-02"},{"lineNumber":45,"author":{"gitId":"DavidVin357"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2023-03-02"},{"lineNumber":46,"author":{"gitId":"DavidVin357"},"content":"            }","lastModifiedDate":"2023-03-02"},{"lineNumber":47,"author":{"gitId":"DavidVin357"},"content":"        }","lastModifiedDate":"2023-03-02"},{"lineNumber":48,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":49,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"DavidVin357"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"DavidVin357"},"content":"     * Entry point - starts the Sherlock program","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"DavidVin357"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"DavidVin357"},"content":"     * @param args","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"DavidVin357"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"DavidVin357"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-03-02"},{"lineNumber":56,"author":{"gitId":"DavidVin357"},"content":"        new Sherlock(\"data/tasks.txt\").run();","lastModifiedDate":"2023-03-02"},{"lineNumber":57,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":58,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":59,"author":{"gitId":"DavidVin357"},"content":"}","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"DavidVin357":59}},{"path":"src/sherlock/tasker/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DavidVin357"},"content":"package commands;","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"DavidVin357"},"content":"import data.TasksList;","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"DavidVin357"},"content":"import data.exceptions.SherlockException;","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"DavidVin357"},"content":"import storage.Storage;","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"DavidVin357"},"content":"import tasks.Task;","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"DavidVin357"},"content":"import ui.Ui;","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"DavidVin357"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"DavidVin357"},"content":" * Represents \"add\" command - creates generic task when executed","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"DavidVin357"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"DavidVin357"},"content":"public class AddCommand extends Command{","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"DavidVin357"},"content":"    String name;","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"DavidVin357"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"DavidVin357"},"content":"     * @param name","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"DavidVin357"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"DavidVin357"},"content":"    public AddCommand(String name) {","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"DavidVin357"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"DavidVin357"},"content":"    @Override","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"DavidVin357"},"content":"    public void execute(TasksList tasksList, Ui ui, Storage storage) throws SherlockException {","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"DavidVin357"},"content":"        Task task \u003d new Task(this.name, false);","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"DavidVin357"},"content":"        tasksList.addTask(task);","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"DavidVin357"},"content":"        ui.printAddedTask(task, tasksList);","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"DavidVin357"},"content":"        storage.writeToFile(tasksList);","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"DavidVin357"},"content":"}","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"DavidVin357":32}},{"path":"src/sherlock/tasker/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DavidVin357"},"content":"package commands;","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"DavidVin357"},"content":"import data.TasksList;","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"DavidVin357"},"content":"import storage.Storage;","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"DavidVin357"},"content":"import ui.Ui;","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"DavidVin357"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"DavidVin357"},"content":" * Represents \"bye\" command - exists program when executed","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"DavidVin357"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"DavidVin357"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"DavidVin357"},"content":"    @Override","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"DavidVin357"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"DavidVin357"},"content":"        return true;","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"DavidVin357"},"content":"    @Override","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"DavidVin357"},"content":"    public void execute(TasksList tasksList, Ui ui, Storage storage) {","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"DavidVin357"},"content":"        ui.printLines(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"DavidVin357"},"content":"}","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"DavidVin357":20}},{"path":"src/sherlock/tasker/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DavidVin357"},"content":"package commands;","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"DavidVin357"},"content":"import data.TasksList;","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"DavidVin357"},"content":"import data.exceptions.SherlockException;","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"DavidVin357"},"content":"import storage.Storage;","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"DavidVin357"},"content":"import ui.Ui;","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"DavidVin357"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"DavidVin357"},"content":" * Represents generic abstract type of Commands","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"DavidVin357"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"DavidVin357"},"content":"public abstract class Command {","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"DavidVin357"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"DavidVin357"},"content":"     * Executes command logic","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"DavidVin357"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"DavidVin357"},"content":"     * @param tasksList - current tasks list","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"DavidVin357"},"content":"     * @param ui        - program UI","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"DavidVin357"},"content":"     * @param storage   - disk storage of the tasks list","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"DavidVin357"},"content":"     * @throws SherlockException","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"DavidVin357"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"DavidVin357"},"content":"    public abstract void execute(TasksList tasksList, Ui ui, Storage storage) throws SherlockException;","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"DavidVin357"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"DavidVin357"},"content":"     * Notifies the program if it\u0027s exiting command","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"DavidVin357"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"DavidVin357"},"content":"     * @return","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"DavidVin357"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"DavidVin357"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"DavidVin357"},"content":"        return false;","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"DavidVin357"},"content":"}","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"DavidVin357":31}},{"path":"src/sherlock/tasker/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DavidVin357"},"content":"package commands;","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"DavidVin357"},"content":"import data.TasksList;","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"DavidVin357"},"content":"import data.exceptions.SherlockException;","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"DavidVin357"},"content":"import storage.Storage;","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"DavidVin357"},"content":"import tasks.Deadline;","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"DavidVin357"},"content":"import ui.Ui;","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"DavidVin357"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"DavidVin357"},"content":" * Represents \"deadline\" command - creates deadline task when executed","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"DavidVin357"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"DavidVin357"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"DavidVin357"},"content":"    String name;","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"DavidVin357"},"content":"    String by;","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"DavidVin357"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"DavidVin357"},"content":"     * @param name","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"DavidVin357"},"content":"     * @param by","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"DavidVin357"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"DavidVin357"},"content":"    public DeadlineCommand(String name, String by) {","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"DavidVin357"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"DavidVin357"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"DavidVin357"},"content":"    @Override","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"DavidVin357"},"content":"    public void execute(TasksList tasksList, Ui ui, Storage storage) throws SherlockException {","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"DavidVin357"},"content":"        Deadline deadline \u003d new Deadline(this.name, false, this.by);","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"DavidVin357"},"content":"        tasksList.addTask(deadline);","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"DavidVin357"},"content":"        ui.printAddedTask(deadline, tasksList);","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"DavidVin357"},"content":"        storage.writeToFile(tasksList);","lastModifiedDate":"2023-03-02"},{"lineNumber":33,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":34,"author":{"gitId":"DavidVin357"},"content":"}","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"DavidVin357":34}},{"path":"src/sherlock/tasker/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DavidVin357"},"content":"package commands;","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"DavidVin357"},"content":"import data.TasksList;","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"DavidVin357"},"content":"import data.exceptions.SherlockException;","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"DavidVin357"},"content":"import storage.Storage;","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"DavidVin357"},"content":"import tasks.Task;","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"DavidVin357"},"content":"import ui.Ui;","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"DavidVin357"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"DavidVin357"},"content":" * Represents \"delete\" command - removes given task by its index from the list when executed","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"DavidVin357"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"DavidVin357"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"DavidVin357"},"content":"    int taskIndex;","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"DavidVin357"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"DavidVin357"},"content":"     * @param taskIndex","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"DavidVin357"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"DavidVin357"},"content":"    public DeleteCommand(int taskIndex) {","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"DavidVin357"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"DavidVin357"},"content":"    @Override","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"DavidVin357"},"content":"    public void execute(TasksList tasksList, Ui ui, Storage storage) throws SherlockException {","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"DavidVin357"},"content":"        Task removedTask \u003d tasksList.deleteTask(this.taskIndex);","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"DavidVin357"},"content":"        String tasksWord \u003d tasksList.getTasksCount() \u003d\u003d 1 ? \" task \" : \" tasks \";","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"DavidVin357"},"content":"        String successMessage \u003d \"Noted. I\u0027ve removed this task:\" +","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"DavidVin357"},"content":"                System.lineSeparator() +","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"DavidVin357"},"content":"                removedTask +","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"DavidVin357"},"content":"                System.lineSeparator() +","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"DavidVin357"},"content":"                \"Now you have \" + tasksList.getTasksCount() + tasksWord + \"in the list.\";","lastModifiedDate":"2023-03-02"},{"lineNumber":33,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":34,"author":{"gitId":"DavidVin357"},"content":"        ui.printLines(successMessage);","lastModifiedDate":"2023-03-02"},{"lineNumber":35,"author":{"gitId":"DavidVin357"},"content":"        storage.writeToFile(tasksList);","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":37,"author":{"gitId":"DavidVin357"},"content":"}","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"DavidVin357":37}},{"path":"src/sherlock/tasker/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DavidVin357"},"content":"package commands;","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"DavidVin357"},"content":"import data.TasksList;","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"DavidVin357"},"content":"import data.exceptions.SherlockException;","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"DavidVin357"},"content":"import storage.Storage;","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"DavidVin357"},"content":"import tasks.Event;","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"DavidVin357"},"content":"import ui.Ui;","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"DavidVin357"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"DavidVin357"},"content":" * Represents \"event\" command - creates event task when executed","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"DavidVin357"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"DavidVin357"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"DavidVin357"},"content":"    String name;","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"DavidVin357"},"content":"    String from;","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"DavidVin357"},"content":"    String to;","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"DavidVin357"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"DavidVin357"},"content":"     * @param name","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"DavidVin357"},"content":"     * @param from","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"DavidVin357"},"content":"     * @param to","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"DavidVin357"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"DavidVin357"},"content":"    public EventCommand(String name, String from, String to) {","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"DavidVin357"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"DavidVin357"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"DavidVin357"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"DavidVin357"},"content":"    @Override","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"DavidVin357"},"content":"    public void execute(TasksList tasksList, Ui ui, Storage storage) throws SherlockException {","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"DavidVin357"},"content":"        Event event \u003d new Event(this.name, false, this.from, this.to);","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"DavidVin357"},"content":"        tasksList.addTask(event);","lastModifiedDate":"2023-03-02"},{"lineNumber":33,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":34,"author":{"gitId":"DavidVin357"},"content":"        ui.printAddedTask(event, tasksList);","lastModifiedDate":"2023-03-02"},{"lineNumber":35,"author":{"gitId":"DavidVin357"},"content":"        storage.writeToFile(tasksList);","lastModifiedDate":"2023-03-02"},{"lineNumber":36,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":37,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":38,"author":{"gitId":"DavidVin357"},"content":"}","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"DavidVin357":38}},{"path":"src/sherlock/tasker/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DavidVin357"},"content":"package commands;","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"DavidVin357"},"content":"import data.TasksList;","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"DavidVin357"},"content":"import data.exceptions.SherlockException;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"DavidVin357"},"content":"import storage.Storage;","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"DavidVin357"},"content":"import tasks.Task;","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"DavidVin357"},"content":"import ui.Ui;","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"DavidVin357"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"DavidVin357"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"DavidVin357"},"content":" * Represents \"find\" command - finds a task with given term when executed","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"DavidVin357"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"DavidVin357"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"DavidVin357"},"content":"    String term;","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"DavidVin357"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"DavidVin357"},"content":"     * @param term term to search for inside the tasks","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"DavidVin357"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"DavidVin357"},"content":"    public FindCommand(String term) {","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"DavidVin357"},"content":"        this.term \u003d term;","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"DavidVin357"},"content":"    @Override","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"DavidVin357"},"content":"    public void execute(TasksList tasksList, Ui ui, Storage storage) throws SherlockException {","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"DavidVin357"},"content":"        String successMessage \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"DavidVin357"},"content":"        TasksList result \u003d tasksList.findTasks(term);","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"DavidVin357"},"content":"        if (result.getTasksCount() \u003e 0) {","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"DavidVin357"},"content":"            ui.printLines(successMessage + result.toString());","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"DavidVin357"},"content":"        } else {","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"DavidVin357"},"content":"            ui.printLines(\"No task is found for this term\");","lastModifiedDate":"2023-03-02"},{"lineNumber":33,"author":{"gitId":"DavidVin357"},"content":"        }","lastModifiedDate":"2023-03-02"},{"lineNumber":34,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":35,"author":{"gitId":"DavidVin357"},"content":"}","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"DavidVin357":35}},{"path":"src/sherlock/tasker/commands/IncorrectCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DavidVin357"},"content":"package commands;","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"DavidVin357"},"content":"import data.TasksList;","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"DavidVin357"},"content":"import storage.Storage;","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"DavidVin357"},"content":"import ui.Ui;","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"DavidVin357"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"DavidVin357"},"content":" * Represents invalid state of the commands - displays error message to the user","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"DavidVin357"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"DavidVin357"},"content":"public class IncorrectCommand extends Command {","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"DavidVin357"},"content":"    String feedback;","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"DavidVin357"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"DavidVin357"},"content":"     * @param feedback","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"DavidVin357"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"DavidVin357"},"content":"    public IncorrectCommand(String feedback) {","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"DavidVin357"},"content":"        this.feedback \u003d feedback;","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"DavidVin357"},"content":"    @Override","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"DavidVin357"},"content":"    public void execute(TasksList tasksList, Ui ui, Storage storage) {","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"DavidVin357"},"content":"        ui.printLines(feedback);","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"DavidVin357"},"content":"}","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"DavidVin357":24}},{"path":"src/sherlock/tasker/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DavidVin357"},"content":"package commands;","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"DavidVin357"},"content":"import data.TasksList;","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"DavidVin357"},"content":"import storage.Storage;","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"DavidVin357"},"content":"import ui.Ui;","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"DavidVin357"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"DavidVin357"},"content":" * Represents \"list\" command - lists all the stored tasks","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"DavidVin357"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"DavidVin357"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"DavidVin357"},"content":"    @Override","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"DavidVin357"},"content":"    public void execute(TasksList tasksList, Ui ui, Storage storage) {","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"DavidVin357"},"content":"        ui.printLines(tasksList.toString());","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"DavidVin357"},"content":"}","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"DavidVin357":15}},{"path":"src/sherlock/tasker/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DavidVin357"},"content":"package commands;","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"DavidVin357"},"content":"import data.TasksList;","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"DavidVin357"},"content":"import data.exceptions.SherlockException;","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"DavidVin357"},"content":"import storage.Storage;","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"DavidVin357"},"content":"import tasks.Task;","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"DavidVin357"},"content":"import ui.Ui;","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"DavidVin357"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"DavidVin357"},"content":" * Represents \"mark\" and \"unmark\" commands -","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"DavidVin357"},"content":" * changes if the task is done or not given its index from the list","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"DavidVin357"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"DavidVin357"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"DavidVin357"},"content":"    private boolean isDone;","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"DavidVin357"},"content":"    private int taskIndex;","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"DavidVin357"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"DavidVin357"},"content":"     * @param isDone","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"DavidVin357"},"content":"     * @param taskIndex","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"DavidVin357"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"DavidVin357"},"content":"    public MarkCommand(boolean isDone, int taskIndex) {","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"DavidVin357"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"DavidVin357"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"DavidVin357"},"content":"    @Override","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"DavidVin357"},"content":"    public void execute(TasksList tasksList, Ui ui, Storage storage) throws SherlockException {","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"DavidVin357"},"content":"        String successMessage \u003d isDone ? \"Nice! I\u0027ve marked this task as done:\"","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"DavidVin357"},"content":"                : \"OK, I\u0027ve marked this task as not done yet:\";","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"DavidVin357"},"content":"        Task markedTask \u003d tasksList.markTask(taskIndex, isDone);","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":34,"author":{"gitId":"DavidVin357"},"content":"        ui.printLines(successMessage, markedTask.toString());","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"DavidVin357"},"content":"        storage.writeToFile(tasksList);","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":37,"author":{"gitId":"DavidVin357"},"content":"}","lastModifiedDate":"2023-03-02"},{"lineNumber":38,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"DavidVin357":39}},{"path":"src/sherlock/tasker/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DavidVin357"},"content":"package commands;","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"DavidVin357"},"content":"import data.TasksList;","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"DavidVin357"},"content":"import data.exceptions.SherlockException;","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"DavidVin357"},"content":"import storage.Storage;","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"DavidVin357"},"content":"import tasks.Todo;","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"DavidVin357"},"content":"import ui.Ui;","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"DavidVin357"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"DavidVin357"},"content":" * Represents \"todo\" command - creates todo task when executed","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"DavidVin357"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"DavidVin357"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"DavidVin357"},"content":"    String name;","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"DavidVin357"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"DavidVin357"},"content":"     * @param arguments","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"DavidVin357"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"DavidVin357"},"content":"    public TodoCommand(String arguments) {","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"DavidVin357"},"content":"        this.name \u003d arguments;","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"DavidVin357"},"content":"    @Override","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"DavidVin357"},"content":"    public void execute(TasksList tasksList, Ui ui, Storage storage) throws SherlockException {","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"DavidVin357"},"content":"        Todo todo \u003d new Todo(name, false);","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"DavidVin357"},"content":"        tasksList.addTask(todo);","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"DavidVin357"},"content":"        ui.printAddedTask(todo, tasksList);","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"DavidVin357"},"content":"        storage.writeToFile(tasksList);","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"DavidVin357"},"content":"}","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"DavidVin357":30}},{"path":"src/sherlock/tasker/common/Utils.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DavidVin357"},"content":"package common;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"DavidVin357"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"DavidVin357"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"DavidVin357"},"content":"import java.time.temporal.ChronoField;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"DavidVin357"},"content":"public class Utils {","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"DavidVin357"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"DavidVin357"},"content":"     * Parses DateTimeFormatter for parsing/formatting string","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"DavidVin357"},"content":"     * in the custom format: \"dd-MM-yyyy(required) HH:mm(optional)\"","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"DavidVin357"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"DavidVin357"},"content":"    public static DateTimeFormatter dateTimeFormatter \u003d new DateTimeFormatterBuilder()","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"DavidVin357"},"content":"            .appendPattern(\"dd-MM-yyyy\")","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"DavidVin357"},"content":"            .optionalStart()","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"DavidVin357"},"content":"            .appendPattern(\" HH:mm\")","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"DavidVin357"},"content":"            .optionalEnd()","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"DavidVin357"},"content":"            .parseDefaulting(ChronoField.HOUR_OF_DAY, 23)","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"DavidVin357"},"content":"            .parseDefaulting(ChronoField.MINUTE_OF_HOUR, 59)","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"DavidVin357"},"content":"            .toFormatter();","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"DavidVin357"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"DavidVin357":20}},{"path":"src/sherlock/tasker/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DavidVin357"},"content":"package parser;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"DavidVin357"},"content":"import commands.*;","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"DavidVin357"},"content":"import common.Utils;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"DavidVin357"},"content":"import data.exceptions.SherlockException;","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"DavidVin357"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"DavidVin357"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"DavidVin357"},"content":"public class Parser {","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"DavidVin357"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"DavidVin357"},"content":"     * Parses typed command","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"DavidVin357"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"DavidVin357"},"content":"     * @param fullCommand","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"DavidVin357"},"content":"     * @return one of the existing Command classes","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"DavidVin357"},"content":"     * @throws SherlockException","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"DavidVin357"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"DavidVin357"},"content":"    public Command parse(String fullCommand) throws SherlockException {","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"DavidVin357"},"content":"        try {","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"DavidVin357"},"content":"            String[] inputArray \u003d fullCommand.split(\"\\\\s+\", 2);","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"DavidVin357"},"content":"            String command \u003d inputArray[0];","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"DavidVin357"},"content":"            String arguments \u003d inputArray.length \u003e 1 ? inputArray[1] : \"\";","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"DavidVin357"},"content":"            switch (command) {","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"DavidVin357"},"content":"                case \"add\":","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"DavidVin357"},"content":"                    return this.constructAddCommand(arguments);","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"DavidVin357"},"content":"                case \"todo\":","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"DavidVin357"},"content":"                    return this.constructTodoCommand(arguments);","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"DavidVin357"},"content":"                case \"deadline\":","lastModifiedDate":"2023-03-02"},{"lineNumber":33,"author":{"gitId":"DavidVin357"},"content":"                    return this.constructDeadlineCommand(arguments);","lastModifiedDate":"2023-03-02"},{"lineNumber":34,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":35,"author":{"gitId":"DavidVin357"},"content":"                case \"event\":","lastModifiedDate":"2023-03-02"},{"lineNumber":36,"author":{"gitId":"DavidVin357"},"content":"                    return this.constructEventCommand(arguments);","lastModifiedDate":"2023-03-02"},{"lineNumber":37,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":38,"author":{"gitId":"DavidVin357"},"content":"                case \"list\":","lastModifiedDate":"2023-03-02"},{"lineNumber":39,"author":{"gitId":"DavidVin357"},"content":"                    return this.constructListCommand();","lastModifiedDate":"2023-03-02"},{"lineNumber":40,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":41,"author":{"gitId":"DavidVin357"},"content":"                case \"mark\":","lastModifiedDate":"2023-03-02"},{"lineNumber":42,"author":{"gitId":"DavidVin357"},"content":"                case \"unmark\": {","lastModifiedDate":"2023-03-02"},{"lineNumber":43,"author":{"gitId":"DavidVin357"},"content":"                    boolean intendedDoneValue \u003d command.equals(\"mark\");","lastModifiedDate":"2023-03-02"},{"lineNumber":44,"author":{"gitId":"DavidVin357"},"content":"                    return constructMarkCommand(arguments, intendedDoneValue);","lastModifiedDate":"2023-03-02"},{"lineNumber":45,"author":{"gitId":"DavidVin357"},"content":"                }","lastModifiedDate":"2023-03-02"},{"lineNumber":46,"author":{"gitId":"DavidVin357"},"content":"                case \"find\":","lastModifiedDate":"2023-03-02"},{"lineNumber":47,"author":{"gitId":"DavidVin357"},"content":"                    return this.constructFindCommand(arguments);","lastModifiedDate":"2023-03-02"},{"lineNumber":48,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":49,"author":{"gitId":"DavidVin357"},"content":"                case \"delete\":","lastModifiedDate":"2023-03-02"},{"lineNumber":50,"author":{"gitId":"DavidVin357"},"content":"                    return this.constructDeleteCommand(arguments);","lastModifiedDate":"2023-03-02"},{"lineNumber":51,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":52,"author":{"gitId":"DavidVin357"},"content":"                case \"bye\":","lastModifiedDate":"2023-03-02"},{"lineNumber":53,"author":{"gitId":"DavidVin357"},"content":"                    return this.constructByeCommand();","lastModifiedDate":"2023-03-02"},{"lineNumber":54,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":55,"author":{"gitId":"DavidVin357"},"content":"                default:","lastModifiedDate":"2023-03-02"},{"lineNumber":56,"author":{"gitId":"DavidVin357"},"content":"                    return new IncorrectCommand(\"No such command exists!\");","lastModifiedDate":"2023-03-02"},{"lineNumber":57,"author":{"gitId":"DavidVin357"},"content":"            }","lastModifiedDate":"2023-03-02"},{"lineNumber":58,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":59,"author":{"gitId":"DavidVin357"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-03-02"},{"lineNumber":60,"author":{"gitId":"DavidVin357"},"content":"            throw new SherlockException(\"Command processsing error occurred\");","lastModifiedDate":"2023-03-02"},{"lineNumber":61,"author":{"gitId":"DavidVin357"},"content":"        }","lastModifiedDate":"2023-03-02"},{"lineNumber":62,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":63,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":64,"author":{"gitId":"DavidVin357"},"content":"    public static LocalDateTime parseDateTime(String arg) throws SherlockException {","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"DavidVin357"},"content":"        try {","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"DavidVin357"},"content":"            return LocalDateTime.parse(arg, Utils.dateTimeFormatter);","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"DavidVin357"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"DavidVin357"},"content":"            throw new SherlockException(\"DateTime argument is of incorrect format. \" +","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"DavidVin357"},"content":"                    \"Expected: \\\"dd-mm-yyyy (required) HH:mm (optional)\\\".\");","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"DavidVin357"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":73,"author":{"gitId":"DavidVin357"},"content":"    private Command constructAddCommand(String arguments) {","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"DavidVin357"},"content":"        return new AddCommand(arguments);","lastModifiedDate":"2023-03-02"},{"lineNumber":75,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":76,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":77,"author":{"gitId":"DavidVin357"},"content":"    private Command constructTodoCommand(String arguments) {","lastModifiedDate":"2023-03-02"},{"lineNumber":78,"author":{"gitId":"DavidVin357"},"content":"        return new TodoCommand(arguments);","lastModifiedDate":"2023-03-02"},{"lineNumber":79,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":80,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":81,"author":{"gitId":"DavidVin357"},"content":"    private Command constructDeadlineCommand(String arguments) {","lastModifiedDate":"2023-03-02"},{"lineNumber":82,"author":{"gitId":"DavidVin357"},"content":"        int byFlagIndex \u003d arguments.indexOf(\"/by\");","lastModifiedDate":"2023-03-02"},{"lineNumber":83,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":84,"author":{"gitId":"DavidVin357"},"content":"        if (byFlagIndex \u003c 0)","lastModifiedDate":"2023-03-02"},{"lineNumber":85,"author":{"gitId":"DavidVin357"},"content":"            return new IncorrectCommand(\"Please specify the /by flag\");","lastModifiedDate":"2023-03-02"},{"lineNumber":86,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":87,"author":{"gitId":"DavidVin357"},"content":"        String name \u003d arguments.substring(0, byFlagIndex).trim();","lastModifiedDate":"2023-03-02"},{"lineNumber":88,"author":{"gitId":"DavidVin357"},"content":"        String byArgumentValue \u003d arguments.substring(byFlagIndex).substring(\"/by\".length()).trim();","lastModifiedDate":"2023-03-02"},{"lineNumber":89,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":90,"author":{"gitId":"DavidVin357"},"content":"        return new DeadlineCommand(name, byArgumentValue);","lastModifiedDate":"2023-03-02"},{"lineNumber":91,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":92,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":93,"author":{"gitId":"DavidVin357"},"content":"    private Command constructEventCommand(String arguments) {","lastModifiedDate":"2023-03-02"},{"lineNumber":94,"author":{"gitId":"DavidVin357"},"content":"        int fromFlagIndex \u003d arguments.indexOf(\"/from\");","lastModifiedDate":"2023-03-02"},{"lineNumber":95,"author":{"gitId":"DavidVin357"},"content":"        int toFlagIndex \u003d arguments.indexOf(\"/to\");","lastModifiedDate":"2023-03-02"},{"lineNumber":96,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":97,"author":{"gitId":"DavidVin357"},"content":"        if (fromFlagIndex \u003c 0)","lastModifiedDate":"2023-03-02"},{"lineNumber":98,"author":{"gitId":"DavidVin357"},"content":"            return new IncorrectCommand(\"Please specify the /from command\");","lastModifiedDate":"2023-03-02"},{"lineNumber":99,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":100,"author":{"gitId":"DavidVin357"},"content":"        if (toFlagIndex \u003c 0)","lastModifiedDate":"2023-03-02"},{"lineNumber":101,"author":{"gitId":"DavidVin357"},"content":"            return new IncorrectCommand(\"Please specify the /to command\");","lastModifiedDate":"2023-03-02"},{"lineNumber":102,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":103,"author":{"gitId":"DavidVin357"},"content":"        String name \u003d arguments.substring(0, fromFlagIndex).trim();","lastModifiedDate":"2023-03-02"},{"lineNumber":104,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":105,"author":{"gitId":"DavidVin357"},"content":"        String fromArgumentValue \u003d arguments.substring(fromFlagIndex, toFlagIndex)","lastModifiedDate":"2023-03-02"},{"lineNumber":106,"author":{"gitId":"DavidVin357"},"content":"                .substring(\"/from\".length()).trim();","lastModifiedDate":"2023-03-02"},{"lineNumber":107,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":108,"author":{"gitId":"DavidVin357"},"content":"        String toArgumentValue \u003d arguments.substring(toFlagIndex)","lastModifiedDate":"2023-03-02"},{"lineNumber":109,"author":{"gitId":"DavidVin357"},"content":"                .substring(\"/to\".length()).trim();","lastModifiedDate":"2023-03-02"},{"lineNumber":110,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":111,"author":{"gitId":"DavidVin357"},"content":"        return new EventCommand(name, fromArgumentValue, toArgumentValue);","lastModifiedDate":"2023-03-02"},{"lineNumber":112,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":113,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":114,"author":{"gitId":"DavidVin357"},"content":"    private Command constructListCommand() {","lastModifiedDate":"2023-03-02"},{"lineNumber":115,"author":{"gitId":"DavidVin357"},"content":"        return new ListCommand();","lastModifiedDate":"2023-03-02"},{"lineNumber":116,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":117,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":118,"author":{"gitId":"DavidVin357"},"content":"    private Command constructMarkCommand(String arguments, boolean isDone) {","lastModifiedDate":"2023-03-02"},{"lineNumber":119,"author":{"gitId":"DavidVin357"},"content":"        try {","lastModifiedDate":"2023-03-02"},{"lineNumber":120,"author":{"gitId":"DavidVin357"},"content":"            int taskIndex \u003d Integer.parseInt(arguments) - 1;","lastModifiedDate":"2023-03-02"},{"lineNumber":121,"author":{"gitId":"DavidVin357"},"content":"            return new MarkCommand(isDone, taskIndex);","lastModifiedDate":"2023-03-02"},{"lineNumber":122,"author":{"gitId":"DavidVin357"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-02"},{"lineNumber":123,"author":{"gitId":"DavidVin357"},"content":"            return new IncorrectCommand(\"Please provide a valid index\");","lastModifiedDate":"2023-03-02"},{"lineNumber":124,"author":{"gitId":"DavidVin357"},"content":"        }","lastModifiedDate":"2023-03-02"},{"lineNumber":125,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":126,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":127,"author":{"gitId":"DavidVin357"},"content":"    private Command constructFindCommand(String arguments) {","lastModifiedDate":"2023-03-02"},{"lineNumber":128,"author":{"gitId":"DavidVin357"},"content":"        String term \u003d arguments;","lastModifiedDate":"2023-03-02"},{"lineNumber":129,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":130,"author":{"gitId":"DavidVin357"},"content":"        return new FindCommand(term);","lastModifiedDate":"2023-03-02"},{"lineNumber":131,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":132,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":133,"author":{"gitId":"DavidVin357"},"content":"    private Command constructDeleteCommand(String arguments) {","lastModifiedDate":"2023-03-02"},{"lineNumber":134,"author":{"gitId":"DavidVin357"},"content":"        try {","lastModifiedDate":"2023-03-02"},{"lineNumber":135,"author":{"gitId":"DavidVin357"},"content":"            int taskIndex \u003d Integer.parseInt(arguments) - 1;","lastModifiedDate":"2023-03-02"},{"lineNumber":136,"author":{"gitId":"DavidVin357"},"content":"            return new DeleteCommand(taskIndex);","lastModifiedDate":"2023-03-02"},{"lineNumber":137,"author":{"gitId":"DavidVin357"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-02"},{"lineNumber":138,"author":{"gitId":"DavidVin357"},"content":"            return new IncorrectCommand(\"Please provide a valid index\");","lastModifiedDate":"2023-03-02"},{"lineNumber":139,"author":{"gitId":"DavidVin357"},"content":"        }","lastModifiedDate":"2023-03-02"},{"lineNumber":140,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":141,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":142,"author":{"gitId":"DavidVin357"},"content":"    private Command constructByeCommand() {","lastModifiedDate":"2023-03-02"},{"lineNumber":143,"author":{"gitId":"DavidVin357"},"content":"        return new ByeCommand();","lastModifiedDate":"2023-03-02"},{"lineNumber":144,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":145,"author":{"gitId":"DavidVin357"},"content":"}","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"DavidVin357":145}},{"path":"src/sherlock/tasker/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DavidVin357"},"content":"package storage;","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"DavidVin357"},"content":"import data.TasksList;","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"DavidVin357"},"content":"import data.exceptions.SherlockException;","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"DavidVin357"},"content":"import tasks.Deadline;","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"DavidVin357"},"content":"import tasks.Event;","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"DavidVin357"},"content":"import tasks.Task;","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"DavidVin357"},"content":"import tasks.Todo;","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"DavidVin357"},"content":"import ui.Ui;","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"DavidVin357"},"content":"import java.io.File;","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"DavidVin357"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"DavidVin357"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"DavidVin357"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"DavidVin357"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"DavidVin357"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"DavidVin357"},"content":" * A class that loads tasks from the given file at the beginning","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"DavidVin357"},"content":" * and writes tasks to the same file in the end","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"DavidVin357"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"DavidVin357"},"content":"public class Storage {","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"DavidVin357"},"content":"    private String filepath;","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"DavidVin357"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"DavidVin357"},"content":"     * @param filepath","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"DavidVin357"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"DavidVin357"},"content":"    public Storage(String filepath) {","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"DavidVin357"},"content":"        this.filepath \u003d filepath;","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"DavidVin357"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"DavidVin357"},"content":"     * @param ui","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"DavidVin357"},"content":"     * @return list of tasks","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"DavidVin357"},"content":"     * @throws SherlockException","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"DavidVin357"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"DavidVin357"},"content":"    public TasksList loadTasks(Ui ui) throws SherlockException {","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"DavidVin357"},"content":"        TasksList tasksList \u003d new TasksList();","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"DavidVin357"},"content":"        try {","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"DavidVin357"},"content":"            File f \u003d new File(filepath);","lastModifiedDate":"2023-03-02"},{"lineNumber":40,"author":{"gitId":"DavidVin357"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"DavidVin357"},"content":"            int lineIndex \u003d 1;","lastModifiedDate":"2023-02-13"},{"lineNumber":42,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":43,"author":{"gitId":"DavidVin357"},"content":"            while(s.hasNext()) {","lastModifiedDate":"2023-02-13"},{"lineNumber":44,"author":{"gitId":"DavidVin357"},"content":"                String taskLine \u003d s.nextLine();","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"DavidVin357"},"content":"                String[] arguments \u003d taskLine.split(\"\\\\|\");","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":47,"author":{"gitId":"DavidVin357"},"content":"                try {","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"DavidVin357"},"content":"                    Task task \u003d loadTask(arguments);","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"DavidVin357"},"content":"                    tasksList.addTask(task);","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"DavidVin357"},"content":"                } catch (SherlockException e) {","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"DavidVin357"},"content":"                    // Show error and continue to the next line","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"DavidVin357"},"content":"                    ui.showError(e.getMessage() + \" Line index is \" + lineIndex);","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"DavidVin357"},"content":"                } finally {","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"DavidVin357"},"content":"                    lineIndex++;","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"DavidVin357"},"content":"                }","lastModifiedDate":"2023-02-13"},{"lineNumber":56,"author":{"gitId":"DavidVin357"},"content":"            }","lastModifiedDate":"2023-02-13"},{"lineNumber":57,"author":{"gitId":"DavidVin357"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"DavidVin357"},"content":"            throw new SherlockException(\"Error when reading \" + filepath + \" file\");","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"DavidVin357"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"DavidVin357"},"content":"        return tasksList;","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"DavidVin357"},"content":"    private Task loadTask(String[] arguments) throws SherlockException {","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"DavidVin357"},"content":"        try {","lastModifiedDate":"2023-02-13"},{"lineNumber":64,"author":{"gitId":"DavidVin357"},"content":"            String taskType \u003d arguments[0].trim();","lastModifiedDate":"2023-02-13"},{"lineNumber":65,"author":{"gitId":"DavidVin357"},"content":"            Boolean isDone \u003d arguments[1].trim().equals(\"1\");","lastModifiedDate":"2023-02-13"},{"lineNumber":66,"author":{"gitId":"DavidVin357"},"content":"            String name \u003d arguments[2].trim();","lastModifiedDate":"2023-02-13"},{"lineNumber":67,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":68,"author":{"gitId":"DavidVin357"},"content":"            switch (taskType){","lastModifiedDate":"2023-02-13"},{"lineNumber":69,"author":{"gitId":"DavidVin357"},"content":"            case \"TASK\":","lastModifiedDate":"2023-02-13"},{"lineNumber":70,"author":{"gitId":"DavidVin357"},"content":"                return new Task(name, isDone);","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"DavidVin357"},"content":"            case \"T\":","lastModifiedDate":"2023-02-13"},{"lineNumber":72,"author":{"gitId":"DavidVin357"},"content":"                return new Todo(name, isDone);","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"DavidVin357"},"content":"            case \"D\":","lastModifiedDate":"2023-02-13"},{"lineNumber":74,"author":{"gitId":"DavidVin357"},"content":"                String by \u003d arguments[3].trim();","lastModifiedDate":"2023-02-13"},{"lineNumber":75,"author":{"gitId":"DavidVin357"},"content":"                return new Deadline(name, isDone, by);","lastModifiedDate":"2023-03-03"},{"lineNumber":76,"author":{"gitId":"DavidVin357"},"content":"            case \"E\":","lastModifiedDate":"2023-02-13"},{"lineNumber":77,"author":{"gitId":"DavidVin357"},"content":"                String from \u003d arguments[3].trim();","lastModifiedDate":"2023-02-13"},{"lineNumber":78,"author":{"gitId":"DavidVin357"},"content":"                String to \u003d arguments[4].trim();","lastModifiedDate":"2023-02-13"},{"lineNumber":79,"author":{"gitId":"DavidVin357"},"content":"                return new Event(name, isDone, from, to);","lastModifiedDate":"2023-03-03"},{"lineNumber":80,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":81,"author":{"gitId":"DavidVin357"},"content":"            default:","lastModifiedDate":"2023-03-03"},{"lineNumber":82,"author":{"gitId":"DavidVin357"},"content":"                throw new SherlockException(\"An invalid task type is given.\");","lastModifiedDate":"2023-03-03"},{"lineNumber":83,"author":{"gitId":"DavidVin357"},"content":"            }","lastModifiedDate":"2023-02-13"},{"lineNumber":84,"author":{"gitId":"DavidVin357"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-03-03"},{"lineNumber":85,"author":{"gitId":"DavidVin357"},"content":"            throw new SherlockException(\"Invalid line format given.\");","lastModifiedDate":"2023-03-03"},{"lineNumber":86,"author":{"gitId":"DavidVin357"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":87,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":88,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":89,"author":{"gitId":"DavidVin357"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":90,"author":{"gitId":"DavidVin357"},"content":"     * Writes tasks to the given file","lastModifiedDate":"2023-03-03"},{"lineNumber":91,"author":{"gitId":"DavidVin357"},"content":"     * @param tasksList list of tasks","lastModifiedDate":"2023-03-03"},{"lineNumber":92,"author":{"gitId":"DavidVin357"},"content":"     * @throws SherlockException","lastModifiedDate":"2023-03-03"},{"lineNumber":93,"author":{"gitId":"DavidVin357"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":94,"author":{"gitId":"DavidVin357"},"content":"    public void writeToFile(TasksList tasksList) throws SherlockException {","lastModifiedDate":"2023-03-02"},{"lineNumber":95,"author":{"gitId":"DavidVin357"},"content":"        try {","lastModifiedDate":"2023-02-13"},{"lineNumber":96,"author":{"gitId":"DavidVin357"},"content":"            FileWriter fw \u003d new FileWriter(this.filepath);","lastModifiedDate":"2023-03-02"},{"lineNumber":97,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":98,"author":{"gitId":"DavidVin357"},"content":"            StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2023-02-13"},{"lineNumber":99,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":100,"author":{"gitId":"DavidVin357"},"content":"            ArrayList\u003cTask\u003e tasks \u003d tasksList.getTasks();","lastModifiedDate":"2023-02-13"},{"lineNumber":101,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":102,"author":{"gitId":"DavidVin357"},"content":"//            Construct a file output","lastModifiedDate":"2023-02-13"},{"lineNumber":103,"author":{"gitId":"DavidVin357"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-02-13"},{"lineNumber":104,"author":{"gitId":"DavidVin357"},"content":"                output.append(task.getFileFormatString()).append(System.lineSeparator());","lastModifiedDate":"2023-02-13"},{"lineNumber":105,"author":{"gitId":"DavidVin357"},"content":"            }","lastModifiedDate":"2023-02-13"},{"lineNumber":106,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":107,"author":{"gitId":"DavidVin357"},"content":"            fw.write(output.toString());","lastModifiedDate":"2023-02-13"},{"lineNumber":108,"author":{"gitId":"DavidVin357"},"content":"            fw.close();","lastModifiedDate":"2023-02-13"},{"lineNumber":109,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":110,"author":{"gitId":"DavidVin357"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":111,"author":{"gitId":"DavidVin357"},"content":"            throw new SherlockException(\"Couldn\u0027t add a change to the file \" + filepath);","lastModifiedDate":"2023-03-03"},{"lineNumber":112,"author":{"gitId":"DavidVin357"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":113,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":114,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":115,"author":{"gitId":"DavidVin357"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"DavidVin357":115}},{"path":"src/sherlock/tasker/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DavidVin357"},"content":"package tasks;","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"DavidVin357"},"content":"import data.exceptions.SherlockException;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"DavidVin357"},"content":"import parser.Parser;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"DavidVin357"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"DavidVin357"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"DavidVin357"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"DavidVin357"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"DavidVin357"},"content":" * Represents Deadline task","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"DavidVin357"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"DavidVin357"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"DavidVin357"},"content":"    private LocalDateTime by;","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"DavidVin357"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"DavidVin357"},"content":"     * @param name","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"DavidVin357"},"content":"     * @param isDone","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"DavidVin357"},"content":"     * @param by     deadline date (dd-MM-yyyy HH:mm)","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"DavidVin357"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"DavidVin357"},"content":"    public Deadline(String name, Boolean isDone, String by) throws SherlockException {","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"DavidVin357"},"content":"        super(name, isDone);","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"DavidVin357"},"content":"        this.by \u003d Parser.parseDateTime(by);","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"DavidVin357"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"DavidVin357"},"content":"     * @return String representation of the Deadline type","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"DavidVin357"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"DavidVin357"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"DavidVin357"},"content":"    public String getType() {","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"DavidVin357"},"content":"        return \"D\";","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"DavidVin357"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"DavidVin357"},"content":"     * @return String representation of the deadline for the CLI output","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"DavidVin357"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"DavidVin357"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"DavidVin357"},"content":"        String by \u003d this.by.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\"));","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"DavidVin357"},"content":"        return \"[D]\" + super.toString() + \" (\" + \"by: \" + by + \")\";","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"DavidVin357"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"DavidVin357"},"content":"     * @return String representation of the deadline for the file output","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"DavidVin357"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"DavidVin357"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":47,"author":{"gitId":"DavidVin357"},"content":"    public String getFileFormatString() throws SherlockException {","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"DavidVin357"},"content":"        try {","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"DavidVin357"},"content":"            return String.format(\"%s | %d | %s | %s\",","lastModifiedDate":"2023-02-13"},{"lineNumber":50,"author":{"gitId":"DavidVin357"},"content":"                    this.getType(),","lastModifiedDate":"2023-02-13"},{"lineNumber":51,"author":{"gitId":"DavidVin357"},"content":"                    this.isDone ? 1 : 0,","lastModifiedDate":"2023-02-13"},{"lineNumber":52,"author":{"gitId":"DavidVin357"},"content":"                    this.name,","lastModifiedDate":"2023-02-13"},{"lineNumber":53,"author":{"gitId":"DavidVin357"},"content":"                    this.by.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"))","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"DavidVin357"},"content":"            );","lastModifiedDate":"2023-02-13"},{"lineNumber":55,"author":{"gitId":"DavidVin357"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"DavidVin357"},"content":"            throw new SherlockException(\"deadline /by argument cannot be formatted\");","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"DavidVin357"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":59,"author":{"gitId":"DavidVin357"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"DavidVin357":59}},{"path":"src/sherlock/tasker/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DavidVin357"},"content":"package tasks;","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"DavidVin357"},"content":"import data.exceptions.SherlockException;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"DavidVin357"},"content":"import parser.Parser;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"DavidVin357"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"DavidVin357"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"DavidVin357"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"DavidVin357"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"DavidVin357"},"content":" * Represents Event task","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"DavidVin357"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"DavidVin357"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"DavidVin357"},"content":"    private LocalDateTime from;","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"DavidVin357"},"content":"    private LocalDateTime to;","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"DavidVin357"},"content":"    public Event(String name, Boolean isDone, String from, String to) throws SherlockException {","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"DavidVin357"},"content":"        super(name, isDone);","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"DavidVin357"},"content":"        this.from \u003d Parser.parseDateTime(from);","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"DavidVin357"},"content":"        this.to \u003d Parser.parseDateTime(to);","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"DavidVin357"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"DavidVin357"},"content":"    public String getType() {","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"DavidVin357"},"content":"        return \"E\";","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"DavidVin357"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"DavidVin357"},"content":"     * @param name","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"DavidVin357"},"content":"     * @param isDone","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"DavidVin357"},"content":"     * @param from start of event (dd-MM-yyyy HH:mm)","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"DavidVin357"},"content":"     * @param to end of event (dd-MM-yyyy HH:mm)","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"DavidVin357"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"DavidVin357"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"DavidVin357"},"content":"     * @return String representation of the Event type","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"DavidVin357"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"DavidVin357"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"DavidVin357"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"DavidVin357"},"content":"        String from \u003d this.from.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\"));","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"DavidVin357"},"content":"        String to \u003d this.to.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\"));","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"DavidVin357"},"content":"        return \"[E]\" + super.toString() + \" (\" + \"from: \" + from + \"; to: \" + to + \")\";","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":46,"author":{"gitId":"DavidVin357"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"DavidVin357"},"content":"     * @return String representation of the event for the file output","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"DavidVin357"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"DavidVin357"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":50,"author":{"gitId":"DavidVin357"},"content":"    public String getFileFormatString() throws SherlockException {","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"DavidVin357"},"content":"        try {","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"DavidVin357"},"content":"            return String.format(\"%s | %d | %s | %s | %s\",","lastModifiedDate":"2023-02-13"},{"lineNumber":53,"author":{"gitId":"DavidVin357"},"content":"                    this.getType(),","lastModifiedDate":"2023-02-13"},{"lineNumber":54,"author":{"gitId":"DavidVin357"},"content":"                    this.isDone ? 1 : 0,","lastModifiedDate":"2023-02-13"},{"lineNumber":55,"author":{"gitId":"DavidVin357"},"content":"                    this.name,","lastModifiedDate":"2023-02-13"},{"lineNumber":56,"author":{"gitId":"DavidVin357"},"content":"                    this.from.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\")),","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"DavidVin357"},"content":"                    this.to.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\")));","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"DavidVin357"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"DavidVin357"},"content":"            throw new SherlockException(\"event dateTime arguments cannot be formatted\");","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"DavidVin357"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":62,"author":{"gitId":"DavidVin357"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"DavidVin357":62}},{"path":"src/sherlock/tasker/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DavidVin357"},"content":"package tasks;","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"DavidVin357"},"content":"import data.exceptions.SherlockException;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"DavidVin357"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"DavidVin357"},"content":" * Represents generic task","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"DavidVin357"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"DavidVin357"},"content":"public class Task {","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"DavidVin357"},"content":"    protected String name;","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"DavidVin357"},"content":"    protected Boolean isDone;","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"DavidVin357"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"DavidVin357"},"content":"     * @param name   task name","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"DavidVin357"},"content":"     * @param isDone task isDone status","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"DavidVin357"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"DavidVin357"},"content":"    public Task(String name, Boolean isDone) throws SherlockException {","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"DavidVin357"},"content":"        if (name.isEmpty()) {","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"DavidVin357"},"content":"            throw new SherlockException(\"Name argument cannot be empty\");","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"DavidVin357"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"DavidVin357"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"DavidVin357"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"DavidVin357"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"DavidVin357"},"content":"     * @return String representation of the Task type","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"DavidVin357"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"DavidVin357"},"content":"    public String getType() {","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"DavidVin357"},"content":"        return \"TASK\";","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"DavidVin357"},"content":"    public String getName() {","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"DavidVin357"},"content":"        return name;","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"DavidVin357"},"content":"    public void setName(String name) {","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"DavidVin357"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"DavidVin357"},"content":"    public Boolean getIsDone() {","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"DavidVin357"},"content":"        return isDone;","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"DavidVin357"},"content":"    public void setIsDone(Boolean done) {","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"DavidVin357"},"content":"        isDone \u003d done;","lastModifiedDate":"2023-01-23"},{"lineNumber":46,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"DavidVin357"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"DavidVin357"},"content":"     * @return String representation of the task for the CLI output","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"DavidVin357"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"DavidVin357"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"DavidVin357"},"content":"        String checker \u003d this.isDone ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"DavidVin357"},"content":"        return checker + \" \" + this.name;","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":56,"author":{"gitId":"DavidVin357"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"DavidVin357"},"content":"     * @return String representation of the task for the file output","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"DavidVin357"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"DavidVin357"},"content":"    public String getFileFormatString() throws SherlockException {","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"DavidVin357"},"content":"        return String.format(\"%s | %d | %s\", getType(), isDone ? 1 : 0, name);","lastModifiedDate":"2023-02-13"},{"lineNumber":61,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":62,"author":{"gitId":"DavidVin357"},"content":"}","lastModifiedDate":"2023-01-23"},{"lineNumber":63,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"DavidVin357":64}},{"path":"src/sherlock/tasker/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DavidVin357"},"content":"package tasks;","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"DavidVin357"},"content":"import data.exceptions.SherlockException;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"DavidVin357"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"DavidVin357"},"content":" * Represents todo tasks","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"DavidVin357"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"DavidVin357"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"DavidVin357"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"DavidVin357"},"content":"     * @param name","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"DavidVin357"},"content":"     * @param isDone","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"DavidVin357"},"content":"     * @throws SherlockException","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"DavidVin357"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"DavidVin357"},"content":"    public Todo(String name, Boolean isDone) throws SherlockException {","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"DavidVin357"},"content":"        super(name, isDone);","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"DavidVin357"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"DavidVin357"},"content":"     * @return String representation of the Todo type","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"DavidVin357"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"DavidVin357"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"DavidVin357"},"content":"    public String getType() {","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"DavidVin357"},"content":"        return \"T\";","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"DavidVin357"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"DavidVin357"},"content":"     * @return String representation of the todo for the CLI output","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"DavidVin357"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"DavidVin357"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"DavidVin357"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"DavidVin357"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"DavidVin357"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"DavidVin357"},"content":"     * @return String representation of the todo for the file output","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"DavidVin357"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"DavidVin357"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"DavidVin357"},"content":"    public String getFileFormatString() {","lastModifiedDate":"2023-02-13"},{"lineNumber":40,"author":{"gitId":"DavidVin357"},"content":"        return String.format(\"%s | %d | %s\",","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"DavidVin357"},"content":"                this.getType(),","lastModifiedDate":"2023-02-13"},{"lineNumber":42,"author":{"gitId":"DavidVin357"},"content":"                this.isDone ? 1 : 0,","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"DavidVin357"},"content":"                this.name","lastModifiedDate":"2023-02-13"},{"lineNumber":44,"author":{"gitId":"DavidVin357"},"content":"        );","lastModifiedDate":"2023-02-13"},{"lineNumber":45,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":46,"author":{"gitId":"DavidVin357"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"DavidVin357":46}},{"path":"src/sherlock/tasker/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DavidVin357"},"content":"package ui;","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"DavidVin357"},"content":"import data.TasksList;","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"DavidVin357"},"content":"import tasks.Task;","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"DavidVin357"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"DavidVin357"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"DavidVin357"},"content":" * A class with commands for user interaction with a program UI","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"DavidVin357"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"DavidVin357"},"content":"public class Ui {","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"DavidVin357"},"content":"    static final String DIVIDER \u003d \"--------------------------------------------------------------------\";","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"DavidVin357"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"DavidVin357"},"content":"     * Displays given lines between two dividers - serves as a standard program output","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"DavidVin357"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"DavidVin357"},"content":"     * @param lines","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"DavidVin357"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"DavidVin357"},"content":"    public void printLines(String... lines) {","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"DavidVin357"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"DavidVin357"},"content":"        for (String line : lines) {","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"DavidVin357"},"content":"            System.out.println(line);","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"DavidVin357"},"content":"        }","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"DavidVin357"},"content":"        System.out.println(DIVIDER + System.lineSeparator());","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"DavidVin357"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"DavidVin357"},"content":"     * Displays task for a user","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"DavidVin357"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"DavidVin357"},"content":"     * @param task      task to display","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"DavidVin357"},"content":"     * @param tasksList current tasks list","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"DavidVin357"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"DavidVin357"},"content":"    public void printAddedTask(Task task, TasksList tasksList) {","lastModifiedDate":"2023-03-02"},{"lineNumber":34,"author":{"gitId":"DavidVin357"},"content":"        String tasksWord \u003d tasksList.getTasksCount() \u003d\u003d 1 ? \" task\" : \" tasks\";","lastModifiedDate":"2023-03-02"},{"lineNumber":35,"author":{"gitId":"DavidVin357"},"content":"        final String FIRST_SENTENCE \u003d \"Got it. I\u0027ve added this task:\";","lastModifiedDate":"2023-03-02"},{"lineNumber":36,"author":{"gitId":"DavidVin357"},"content":"        final String SECOND_SENTENCE \u003d \"Now you have \" + tasksList.getTasksCount() + tasksWord + \" in the list.\";","lastModifiedDate":"2023-03-02"},{"lineNumber":37,"author":{"gitId":"DavidVin357"},"content":"        printLines(FIRST_SENTENCE + System.lineSeparator() + task + System.lineSeparator() + SECOND_SENTENCE);","lastModifiedDate":"2023-03-02"},{"lineNumber":38,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":39,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"DavidVin357"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"DavidVin357"},"content":"     * Welcomes user with a greeting message","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"DavidVin357"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"DavidVin357"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-03-02"},{"lineNumber":44,"author":{"gitId":"DavidVin357"},"content":"        String logo \u003d","lastModifiedDate":"2023-03-02"},{"lineNumber":45,"author":{"gitId":"DavidVin357"},"content":"                \"   _____ __  ____________  __    ____  ________ __\\n\" +","lastModifiedDate":"2023-03-02"},{"lineNumber":46,"author":{"gitId":"DavidVin357"},"content":"                        \"  / ___// / / / ____/ __ \\\\/ /   / __ \\\\/ ____/ //_/\\n\" +","lastModifiedDate":"2023-03-02"},{"lineNumber":47,"author":{"gitId":"DavidVin357"},"content":"                        \"  \\\\__ \\\\/ /_/ / __/ / /_/ / /   / / / / /   / ,\u003c   \\n\" +","lastModifiedDate":"2023-03-02"},{"lineNumber":48,"author":{"gitId":"DavidVin357"},"content":"                        \" ___/ / __  / /___/ _, _/ /___/ /_/ / /___/ /| |  \\n\" +","lastModifiedDate":"2023-03-02"},{"lineNumber":49,"author":{"gitId":"DavidVin357"},"content":"                        \"/____/_/ /_/_____/_/ |_/_____/\\\\____/\\\\____/_/ |_|  \";","lastModifiedDate":"2023-03-02"},{"lineNumber":50,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":51,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":52,"author":{"gitId":"DavidVin357"},"content":"        printLines(\"Hello from\", logo);","lastModifiedDate":"2023-03-02"},{"lineNumber":53,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":54,"author":{"gitId":"DavidVin357"},"content":"        printLines(\"Hello! I\u0027m SHERLOCK\", \"What can I do for you?\");","lastModifiedDate":"2023-03-02"},{"lineNumber":55,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":56,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":57,"author":{"gitId":"DavidVin357"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"DavidVin357"},"content":"     * Reads user command","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"DavidVin357"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"DavidVin357"},"content":"     * @return typed command","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"DavidVin357"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"DavidVin357"},"content":"    public String readCommand() {","lastModifiedDate":"2023-03-02"},{"lineNumber":63,"author":{"gitId":"DavidVin357"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-03-02"},{"lineNumber":64,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":65,"author":{"gitId":"DavidVin357"},"content":"        String fullCommand \u003d in.nextLine();","lastModifiedDate":"2023-03-02"},{"lineNumber":66,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":67,"author":{"gitId":"DavidVin357"},"content":"        return fullCommand;","lastModifiedDate":"2023-03-02"},{"lineNumber":68,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":69,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":70,"author":{"gitId":"DavidVin357"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"DavidVin357"},"content":"     * Displays error to the user","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"DavidVin357"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"DavidVin357"},"content":"     * @param message","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"DavidVin357"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"DavidVin357"},"content":"    public void showError(String message) {","lastModifiedDate":"2023-03-02"},{"lineNumber":76,"author":{"gitId":"DavidVin357"},"content":"        printLines(message);","lastModifiedDate":"2023-03-02"},{"lineNumber":77,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":78,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":79,"author":{"gitId":"DavidVin357"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":80,"author":{"gitId":"DavidVin357"},"content":"     * Displays message for a successful loading process from the file","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"DavidVin357"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":82,"author":{"gitId":"DavidVin357"},"content":"    public void showLoadingSuccessful() {","lastModifiedDate":"2023-03-02"},{"lineNumber":83,"author":{"gitId":"DavidVin357"},"content":"        printLines(\"tasks contents are successfully loaded\");","lastModifiedDate":"2023-03-02"},{"lineNumber":84,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":85,"author":{"gitId":"DavidVin357"},"content":"}","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"DavidVin357":85}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"DavidVin357"},"content":"java -classpath ..\\bin Sherlock \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"DavidVin357":1,"-":20}}]
