[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"DavidVin357"},"content":"# Sherlock project template","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"DavidVin357"},"content":"3. After that, locate the `src/main/java/Sherlock.java` file, right-click it, and choose `Run Sherlock.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"DavidVin357"},"content":"   _____ __  ____________  __    ____  ________ __","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"DavidVin357"},"content":"  / ___// / / / ____/ __ \\/ /   / __ \\/ ____/ //_/","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"DavidVin357"},"content":"  \\__ \\/ /_/ / __/ / /_/ / /   / / / / /   / ,\u003c   ","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"DavidVin357"},"content":" ___/ / __  / /___/ _, _/ /___/ /_/ / /___/ /| |  ","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"DavidVin357"},"content":"/____/_/ /_/_____/_/ |_/_____/\\____/\\____/_/ |_|  ","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"DavidVin357":7,"-":17}},{"path":"src/main/java/Sherlock.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DavidVin357"},"content":"public class Sherlock {","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"DavidVin357"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"DavidVin357"},"content":"        TaskListener.greet();","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"DavidVin357"},"content":"        TaskListener taskListener \u003d new TaskListener(100);","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"DavidVin357"},"content":"        taskListener.listen();","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"DavidVin357"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"DavidVin357":9}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DavidVin357"},"content":"public class Task {","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"DavidVin357"},"content":"    private String name;","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"DavidVin357"},"content":"    private Boolean isDone;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"DavidVin357"},"content":"    public Task (String name, Boolean isDone) {","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"DavidVin357"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"DavidVin357"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"DavidVin357"},"content":"    public String toString() {","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"DavidVin357"},"content":"        String checker \u003d this.isDone ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"DavidVin357"},"content":"        return String.format(\"%s %s \\n\", checker, this.name);","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"DavidVin357"},"content":"    public String getName() {","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"DavidVin357"},"content":"        return name;","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"DavidVin357"},"content":"    public void setName(String name) {","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"DavidVin357"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"DavidVin357"},"content":"    public Boolean getIsDone() {","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"DavidVin357"},"content":"        return isDone;","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"DavidVin357"},"content":"    public void setIsDone(Boolean done) {","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"DavidVin357"},"content":"        isDone \u003d done;","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"DavidVin357"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"DavidVin357":30}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DavidVin357"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"DavidVin357"},"content":"public class TaskList {","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"DavidVin357"},"content":"    private Task[] tasks;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"DavidVin357"},"content":"    private static int tasksCount \u003d 0;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"DavidVin357"},"content":"    public TaskList (int expectedTasksCount) {","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"DavidVin357"},"content":"        this.tasks \u003d new Task[expectedTasksCount];","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"DavidVin357"},"content":"    public Task[] getTasks() {","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"DavidVin357"},"content":"        return Arrays.copyOfRange(this.tasks, 0,  tasksCount);","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"DavidVin357"},"content":"    public String toString() {","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"DavidVin357"},"content":"        int index \u003d 1;","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"DavidVin357"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"DavidVin357"},"content":"        for (Task task: getTasks()) {","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"DavidVin357"},"content":"            if(task !\u003d null) {","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"DavidVin357"},"content":"                output.append(index++).append(\". \").append(task);","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"DavidVin357"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"DavidVin357"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"DavidVin357"},"content":"        return output.toString();","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"DavidVin357"},"content":"    public void addTask(String taskName) {","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"DavidVin357"},"content":"        this.tasks[tasksCount] \u003d new Task(taskName, false);","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"DavidVin357"},"content":"        tasksCount +\u003d 1;","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"DavidVin357"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"DavidVin357":31}},{"path":"src/main/java/TaskListener.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DavidVin357"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"DavidVin357"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"DavidVin357"},"content":"public class TaskListener {","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"DavidVin357"},"content":"    static final String DIVIDER \u003d \"--------------------------------------------------------------------\";","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"DavidVin357"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"DavidVin357"},"content":"    public TaskListener(int expectedTasksCount) {","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"DavidVin357"},"content":"        this.taskList \u003d new TaskList(expectedTasksCount);","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"DavidVin357"},"content":"    private static void printLines(String... lines) {","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"DavidVin357"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"DavidVin357"},"content":"        for (String line: lines) {","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"DavidVin357"},"content":"            System.out.println(line);","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"DavidVin357"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"DavidVin357"},"content":"        System.out.println(DIVIDER + System.lineSeparator());","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"DavidVin357"},"content":"       }","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"DavidVin357"},"content":"   public static void greet() {","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"DavidVin357"},"content":"       String logo \u003d","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"DavidVin357"},"content":"                \"   _____ __  ____________  __    ____  ________ __\\n\" +","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"DavidVin357"},"content":"                        \"  / ___// / / / ____/ __ \\\\/ /   / __ \\\\/ ____/ //_/\\n\" +","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"DavidVin357"},"content":"                        \"  \\\\__ \\\\/ /_/ / __/ / /_/ / /   / / / / /   / ,\u003c   \\n\" +","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"DavidVin357"},"content":"                        \" ___/ / __  / /___/ _, _/ /___/ /_/ / /___/ /| |  \\n\" +","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"DavidVin357"},"content":"                        \"/____/_/ /_/_____/_/ |_/_____/\\\\____/\\\\____/_/ |_|  \";","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"DavidVin357"},"content":"       printLines(\"Hello from\", logo);","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"DavidVin357"},"content":"       printLines(\"Hello! I\u0027m SHERLOCK\", \"What can I do for you?\");","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"DavidVin357"},"content":"   }","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"DavidVin357"},"content":"    public void listen() {","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"DavidVin357"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"DavidVin357"},"content":"        String line \u003d in.nextLine();","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"DavidVin357"},"content":"        String[] inputArray \u003d line.split(\"\\\\s+\");","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"DavidVin357"},"content":"        String command \u003d inputArray[0];","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"DavidVin357"},"content":"        String[] arguments \u003d Arrays.copyOfRange(inputArray, 1, inputArray.length );","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"DavidVin357"},"content":"        switch(command) {","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"DavidVin357"},"content":"            case \"list\":","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"DavidVin357"},"content":"                printLines(this.taskList.toString());","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"DavidVin357"},"content":"                break;","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"DavidVin357"},"content":"            case \"mark\":","lastModifiedDate":"2023-01-23"},{"lineNumber":46,"author":{"gitId":"DavidVin357"},"content":"            case \"unmark\": {","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"DavidVin357"},"content":"                String successMessage \u003d command.equals(\"mark\") ?  \"Nice! I\u0027ve marked this task as done:\" : \"OK, I\u0027ve marked this task as not done yet:\";","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":49,"author":{"gitId":"DavidVin357"},"content":"                // isDone value that user wants to achieve","lastModifiedDate":"2023-01-23"},{"lineNumber":50,"author":{"gitId":"DavidVin357"},"content":"                boolean intendedDoneValue \u003d command.equals(\"mark\");","lastModifiedDate":"2023-01-23"},{"lineNumber":51,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":52,"author":{"gitId":"DavidVin357"},"content":"                int index \u003d Integer.parseInt(arguments[0]) - 1;","lastModifiedDate":"2023-01-23"},{"lineNumber":53,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":54,"author":{"gitId":"DavidVin357"},"content":"                // Invalid index handler","lastModifiedDate":"2023-01-23"},{"lineNumber":55,"author":{"gitId":"DavidVin357"},"content":"                if(index \u003c 0 || index \u003e this.taskList.getTasks().length - 1) {","lastModifiedDate":"2023-01-23"},{"lineNumber":56,"author":{"gitId":"DavidVin357"},"content":"                    printLines(\"No task at such index!\");","lastModifiedDate":"2023-01-23"},{"lineNumber":57,"author":{"gitId":"DavidVin357"},"content":"                    break;","lastModifiedDate":"2023-01-23"},{"lineNumber":58,"author":{"gitId":"DavidVin357"},"content":"                }","lastModifiedDate":"2023-01-22"},{"lineNumber":59,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":60,"author":{"gitId":"DavidVin357"},"content":"                Task task \u003d this.taskList.getTasks()[index];","lastModifiedDate":"2023-01-23"},{"lineNumber":61,"author":{"gitId":"DavidVin357"},"content":"                task.setIsDone(intendedDoneValue);","lastModifiedDate":"2023-01-23"},{"lineNumber":62,"author":{"gitId":"DavidVin357"},"content":"                printLines(successMessage, task.toString());","lastModifiedDate":"2023-01-23"},{"lineNumber":63,"author":{"gitId":"DavidVin357"},"content":"                break;","lastModifiedDate":"2023-01-23"},{"lineNumber":64,"author":{"gitId":"DavidVin357"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":65,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":66,"author":{"gitId":"DavidVin357"},"content":"            case \"bye\":","lastModifiedDate":"2023-01-23"},{"lineNumber":67,"author":{"gitId":"DavidVin357"},"content":"                printLines(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-22"},{"lineNumber":68,"author":{"gitId":"DavidVin357"},"content":"                return;","lastModifiedDate":"2023-01-22"},{"lineNumber":69,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":70,"author":{"gitId":"DavidVin357"},"content":"            default:","lastModifiedDate":"2023-01-23"},{"lineNumber":71,"author":{"gitId":"DavidVin357"},"content":"                this.taskList.addTask(line);","lastModifiedDate":"2023-01-23"},{"lineNumber":72,"author":{"gitId":"DavidVin357"},"content":"                printLines(\"added: \" + line);","lastModifiedDate":"2023-01-22"},{"lineNumber":73,"author":{"gitId":"DavidVin357"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":74,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":75,"author":{"gitId":"DavidVin357"},"content":"        listen();","lastModifiedDate":"2023-01-23"},{"lineNumber":76,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":77,"author":{"gitId":"DavidVin357"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"DavidVin357":77}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"DavidVin357"},"content":"java -classpath ..\\bin Sherlock \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"DavidVin357":1,"-":20}}]
