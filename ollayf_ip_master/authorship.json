[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"ollayf"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"import messages.ErrorMessages;","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"import messages.OperationsMessages;","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"ollayf"},"content":"import tasks.Deadline;","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"ollayf"},"content":"import tasks.Event;","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"ollayf"},"content":"import tasks.Todo;","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"ollayf"},"content":"import exceptions.NotFoundException;","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"ollayf"},"content":"import exceptions.EmptyInputException;","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"ollayf"},"content":"import exceptions.InvalidCommand;","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"ollayf"},"content":"import exceptions.NotFoundException;","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"ollayf"},"content":"    // Constants","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"ollayf"},"content":"    private static final String BOT_NAME \u003d \"Duke\"; ","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"ollayf"},"content":"    private static Storage storage \u003d new Storage();","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"ollayf"},"content":"    private static TaskList tasklist \u003d new TaskList();","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"ollayf"},"content":"    // private static Set\u003cString\u003e markedItems \u003d new HashSet\u003cString\u003e(MAX_ITEMS);","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"ollayf"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"ollayf"},"content":"     * Runs the programme","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"ollayf"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"ollayf"},"content":"        ","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"ollayf"},"content":"        Ui.printStartMsg();","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"ollayf"},"content":"        Ui.printResponse(String.format(OperationsMessages.INITIAL_MSG, BOT_NAME));","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"ollayf"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"ollayf"},"content":"        try {","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"ollayf"},"content":"            storage.load(tasklist);","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"ollayf"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"ollayf"},"content":"            // TODO Auto-generated catch block","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"ollayf"},"content":"            // e.printStackTrace();","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"ollayf"},"content":"            System.out.println(ErrorMessages.LOAD_FAIL);","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"ollayf"},"content":"        while (scanner.hasNextLine()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"ollayf"},"content":"            String line \u003d scanner.nextLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"ollayf"},"content":"            try {","lastModifiedDate":"2023-02-04"},{"lineNumber":42,"author":{"gitId":"ollayf"},"content":"                handleInput(line);","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"ollayf"},"content":"            } catch (EmptyInputException e) {","lastModifiedDate":"2023-02-04"},{"lineNumber":44,"author":{"gitId":"ollayf"},"content":"                // TODO Auto-generated catch block","lastModifiedDate":"2023-02-04"},{"lineNumber":45,"author":{"gitId":"ollayf"},"content":"                // e.printStackTrace();","lastModifiedDate":"2023-02-04"},{"lineNumber":46,"author":{"gitId":"ollayf"},"content":"                Ui.printResponse(ErrorMessages.EMPTY_INPUT);","lastModifiedDate":"2023-02-24"},{"lineNumber":47,"author":{"gitId":"ollayf"},"content":"            } catch (InvalidCommand e) {","lastModifiedDate":"2023-02-04"},{"lineNumber":48,"author":{"gitId":"ollayf"},"content":"                Ui.printResponse(ErrorMessages.INVALID_COMMAND);","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"ollayf"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-04"},{"lineNumber":50,"author":{"gitId":"ollayf"},"content":"                Ui.printResponse(ErrorMessages.INCORRECT_FIELDS);","lastModifiedDate":"2023-02-24"},{"lineNumber":51,"author":{"gitId":"ollayf"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":52,"author":{"gitId":"ollayf"},"content":"                Ui.printResponse(ErrorMessages.LOAD_FAIL);","lastModifiedDate":"2023-02-24"},{"lineNumber":53,"author":{"gitId":"ollayf"},"content":"            } catch (NotFoundException e) {","lastModifiedDate":"2023-02-24"},{"lineNumber":54,"author":{"gitId":"ollayf"},"content":"                Ui.printResponse(ErrorMessages.NONE_FOUND);","lastModifiedDate":"2023-02-24"},{"lineNumber":55,"author":{"gitId":"ollayf"},"content":"            }","lastModifiedDate":"2023-02-04"},{"lineNumber":56,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"ollayf"},"content":"        scanner.close();","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"ollayf"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":61,"author":{"gitId":"ollayf"},"content":"     * Handles inputs typed in by users. Parses the commands and inputs.","lastModifiedDate":"2023-02-24"},{"lineNumber":62,"author":{"gitId":"ollayf"},"content":"     * Commands are separated by \\n character. ","lastModifiedDate":"2023-02-24"},{"lineNumber":63,"author":{"gitId":"ollayf"},"content":"     * The first word of the line assumed to be the command.","lastModifiedDate":"2023-02-24"},{"lineNumber":64,"author":{"gitId":"ollayf"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":65,"author":{"gitId":"ollayf"},"content":"     * @param line The line submitted by the user","lastModifiedDate":"2023-02-24"},{"lineNumber":66,"author":{"gitId":"ollayf"},"content":"     * @throws EmptyInputException if there is no input by the users after the command input that is necessary for the command","lastModifiedDate":"2023-02-24"},{"lineNumber":67,"author":{"gitId":"ollayf"},"content":"     * @throws InvalidCommand If the given input is not in the list of valid commands","lastModifiedDate":"2023-02-24"},{"lineNumber":68,"author":{"gitId":"ollayf"},"content":"     * @throws IOException If there is an issue reading the load files","lastModifiedDate":"2023-02-24"},{"lineNumber":69,"author":{"gitId":"ollayf"},"content":"     * @throws NotFoundException For find function. If there are no Tasks found","lastModifiedDate":"2023-02-24"},{"lineNumber":70,"author":{"gitId":"ollayf"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":71,"author":{"gitId":"ollayf"},"content":"    private static void handleInput(String line) throws EmptyInputException, InvalidCommand, IOException, NotFoundException {","lastModifiedDate":"2023-02-24"},{"lineNumber":72,"author":{"gitId":"ollayf"},"content":"        int numWords \u003d Parser.getNumWords(line);","lastModifiedDate":"2023-02-24"},{"lineNumber":73,"author":{"gitId":"ollayf"},"content":"        String command \u003d Parser.getCommand(line);","lastModifiedDate":"2023-02-24"},{"lineNumber":74,"author":{"gitId":"ollayf"},"content":"        if (command.equals(\"list\")) {","lastModifiedDate":"2023-02-12"},{"lineNumber":75,"author":{"gitId":"ollayf"},"content":"            printItems();","lastModifiedDate":"2023-02-12"},{"lineNumber":76,"author":{"gitId":"ollayf"},"content":"        } else if (command.equals(\"save\")) {","lastModifiedDate":"2023-02-12"},{"lineNumber":77,"author":{"gitId":"ollayf"},"content":"            storage.save(tasklist);","lastModifiedDate":"2023-02-24"},{"lineNumber":78,"author":{"gitId":"ollayf"},"content":"            Ui.printResponse(OperationsMessages.SAVED_MSG);","lastModifiedDate":"2023-02-24"},{"lineNumber":79,"author":{"gitId":"ollayf"},"content":"        } else if (command.equals(\"load\")) {","lastModifiedDate":"2023-02-12"},{"lineNumber":80,"author":{"gitId":"ollayf"},"content":"            storage.load(tasklist);","lastModifiedDate":"2023-02-24"},{"lineNumber":81,"author":{"gitId":"ollayf"},"content":"            Ui.printResponse(OperationsMessages.LOADED_MSG);","lastModifiedDate":"2023-02-24"},{"lineNumber":82,"author":{"gitId":"ollayf"},"content":"        } else if (numWords \u003c\u003d 1) {","lastModifiedDate":"2023-02-24"},{"lineNumber":83,"author":{"gitId":"ollayf"},"content":"            // dont move on if less than 2 parts","lastModifiedDate":"2023-02-12"},{"lineNumber":84,"author":{"gitId":"ollayf"},"content":"            throw new EmptyInputException();","lastModifiedDate":"2023-02-04"},{"lineNumber":85,"author":{"gitId":"ollayf"},"content":"        } else if (command.equals(\"bye\")) {","lastModifiedDate":"2023-02-12"},{"lineNumber":86,"author":{"gitId":"ollayf"},"content":"            Ui.printResponse(OperationsMessages.BYE_MSG);","lastModifiedDate":"2023-02-24"},{"lineNumber":87,"author":{"gitId":"ollayf"},"content":"        } else if (command.equals(\"find\")) {","lastModifiedDate":"2023-02-24"},{"lineNumber":88,"author":{"gitId":"ollayf"},"content":"            line \u003d line.substring(command.length() + 1);","lastModifiedDate":"2023-02-24"},{"lineNumber":89,"author":{"gitId":"ollayf"},"content":"            findItem(line);","lastModifiedDate":"2023-02-24"},{"lineNumber":90,"author":{"gitId":"ollayf"},"content":"        } else if (command.equals(\"todo\")) {","lastModifiedDate":"2023-01-27"},{"lineNumber":91,"author":{"gitId":"ollayf"},"content":"            line \u003d line.substring(command.length() + 1);","lastModifiedDate":"2023-01-27"},{"lineNumber":92,"author":{"gitId":"ollayf"},"content":"            createTodo(line);","lastModifiedDate":"2023-02-24"},{"lineNumber":93,"author":{"gitId":"ollayf"},"content":"        } else if (command.equals(\"delete\") || command.equals(\"remove\")) {","lastModifiedDate":"2023-02-12"},{"lineNumber":94,"author":{"gitId":"ollayf"},"content":"            line \u003d line.substring(command.length() + 1);","lastModifiedDate":"2023-02-12"},{"lineNumber":95,"author":{"gitId":"ollayf"},"content":"            removeItem(Parser.getInputIndex(line));","lastModifiedDate":"2023-02-24"},{"lineNumber":96,"author":{"gitId":"ollayf"},"content":"        } else if (command.equals(\"deadline\")) {","lastModifiedDate":"2023-01-27"},{"lineNumber":97,"author":{"gitId":"ollayf"},"content":"            line \u003d line.substring(command.length() + 1);","lastModifiedDate":"2023-02-04"},{"lineNumber":98,"author":{"gitId":"ollayf"},"content":"            createDeadline(line);","lastModifiedDate":"2023-02-04"},{"lineNumber":99,"author":{"gitId":"ollayf"},"content":"        } else if (command.equals(\"event\")) {","lastModifiedDate":"2023-02-03"},{"lineNumber":100,"author":{"gitId":"ollayf"},"content":"            line \u003d line.substring(command.length() + 1);","lastModifiedDate":"2023-02-04"},{"lineNumber":101,"author":{"gitId":"ollayf"},"content":"            createEvent(line);","lastModifiedDate":"2023-02-04"},{"lineNumber":102,"author":{"gitId":"ollayf"},"content":"        } else if (command.equals(\"list\")) {","lastModifiedDate":"2023-02-03"},{"lineNumber":103,"author":{"gitId":"ollayf"},"content":"            printItems();","lastModifiedDate":"2023-02-03"},{"lineNumber":104,"author":{"gitId":"ollayf"},"content":"        } else if (command.equals(\"mark\")) {","lastModifiedDate":"2023-02-03"},{"lineNumber":105,"author":{"gitId":"ollayf"},"content":"            // String item \u003d line.substring(4); // if want to mark by name","lastModifiedDate":"2023-02-03"},{"lineNumber":106,"author":{"gitId":"ollayf"},"content":"            markItem(Parser.getInputIndex(line));","lastModifiedDate":"2023-02-24"},{"lineNumber":107,"author":{"gitId":"ollayf"},"content":"        } else if (command.equals(\"unmark\")) {","lastModifiedDate":"2023-02-03"},{"lineNumber":108,"author":{"gitId":"ollayf"},"content":"            // String item \u003d line.substring(6); // if want to unmark by name","lastModifiedDate":"2023-02-03"},{"lineNumber":109,"author":{"gitId":"ollayf"},"content":"            unmarkItem(Parser.getInputIndex(line));","lastModifiedDate":"2023-02-24"},{"lineNumber":110,"author":{"gitId":"ollayf"},"content":"        } else { // add item","lastModifiedDate":"2023-02-03"},{"lineNumber":111,"author":{"gitId":"ollayf"},"content":"            throw new InvalidCommand();","lastModifiedDate":"2023-02-04"},{"lineNumber":112,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":113,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":114,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":115,"author":{"gitId":"ollayf"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":116,"author":{"gitId":"ollayf"},"content":"     * Creates a \"Todo\" Task","lastModifiedDate":"2023-02-24"},{"lineNumber":117,"author":{"gitId":"ollayf"},"content":"     * The line is parsed to create the item via the Parser","lastModifiedDate":"2023-02-24"},{"lineNumber":118,"author":{"gitId":"ollayf"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":119,"author":{"gitId":"ollayf"},"content":"     * @param line The line submitted by the user excluding the command","lastModifiedDate":"2023-02-24"},{"lineNumber":120,"author":{"gitId":"ollayf"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":121,"author":{"gitId":"ollayf"},"content":"    private static void createTodo(String line) {","lastModifiedDate":"2023-02-24"},{"lineNumber":122,"author":{"gitId":"ollayf"},"content":"        Todo item \u003d Parser.initTodo(line);","lastModifiedDate":"2023-02-24"},{"lineNumber":123,"author":{"gitId":"ollayf"},"content":"        tasklist.addItem(item);","lastModifiedDate":"2023-02-24"},{"lineNumber":124,"author":{"gitId":"ollayf"},"content":"        Ui.printResponse(String.format(OperationsMessages.ADDED_MSG, item.toString(), tasklist.size()));","lastModifiedDate":"2023-02-24"},{"lineNumber":125,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":126,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":127,"author":{"gitId":"ollayf"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":128,"author":{"gitId":"ollayf"},"content":"     * Creates a \"Deadline\" Task","lastModifiedDate":"2023-02-24"},{"lineNumber":129,"author":{"gitId":"ollayf"},"content":"     * The line is parsed to create the item via the Parser","lastModifiedDate":"2023-02-24"},{"lineNumber":130,"author":{"gitId":"ollayf"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":131,"author":{"gitId":"ollayf"},"content":"     * @param line The line submitted by the user excluding the command","lastModifiedDate":"2023-02-24"},{"lineNumber":132,"author":{"gitId":"ollayf"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":133,"author":{"gitId":"ollayf"},"content":"    private static void createDeadline(String line) { ","lastModifiedDate":"2023-02-24"},{"lineNumber":134,"author":{"gitId":"ollayf"},"content":"        ","lastModifiedDate":"2023-02-04"},{"lineNumber":135,"author":{"gitId":"ollayf"},"content":"        Deadline item \u003d Parser.initDeadline(line);","lastModifiedDate":"2023-02-24"},{"lineNumber":136,"author":{"gitId":"ollayf"},"content":"        tasklist.addItem(item);","lastModifiedDate":"2023-02-24"},{"lineNumber":137,"author":{"gitId":"ollayf"},"content":"        Ui.printResponse(String.format(OperationsMessages.ADDED_MSG, item.toString(), tasklist.size()));","lastModifiedDate":"2023-02-24"},{"lineNumber":138,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":139,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":140,"author":{"gitId":"ollayf"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":141,"author":{"gitId":"ollayf"},"content":"     * Creates a \"Event\" Task","lastModifiedDate":"2023-02-24"},{"lineNumber":142,"author":{"gitId":"ollayf"},"content":"     * The line is parsed to create the item via the Parser","lastModifiedDate":"2023-02-24"},{"lineNumber":143,"author":{"gitId":"ollayf"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":144,"author":{"gitId":"ollayf"},"content":"     * @param line The line submitted by the user excluding the command","lastModifiedDate":"2023-02-24"},{"lineNumber":145,"author":{"gitId":"ollayf"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":146,"author":{"gitId":"ollayf"},"content":"    private static void createEvent(String line) {","lastModifiedDate":"2023-02-04"},{"lineNumber":147,"author":{"gitId":"ollayf"},"content":"        ","lastModifiedDate":"2023-02-04"},{"lineNumber":148,"author":{"gitId":"ollayf"},"content":"        Event item \u003d Parser.initEvent(line);","lastModifiedDate":"2023-02-24"},{"lineNumber":149,"author":{"gitId":"ollayf"},"content":"        tasklist.addItem(item);","lastModifiedDate":"2023-02-24"},{"lineNumber":150,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":151,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":152,"author":{"gitId":"ollayf"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":153,"author":{"gitId":"ollayf"},"content":"     * marks an item as done by the Index (Based on the list function)","lastModifiedDate":"2023-02-24"},{"lineNumber":154,"author":{"gitId":"ollayf"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":155,"author":{"gitId":"ollayf"},"content":"     * @param itemNo The index of the item to be marked (Based on the list function)","lastModifiedDate":"2023-02-24"},{"lineNumber":156,"author":{"gitId":"ollayf"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":157,"author":{"gitId":"ollayf"},"content":"    private static void markItem(int itemNo) {","lastModifiedDate":"2023-01-26"},{"lineNumber":158,"author":{"gitId":"ollayf"},"content":"        Todo item \u003d tasklist.get(itemNo);","lastModifiedDate":"2023-02-24"},{"lineNumber":159,"author":{"gitId":"ollayf"},"content":"        item.setDone(true);","lastModifiedDate":"2023-01-27"},{"lineNumber":160,"author":{"gitId":"ollayf"},"content":"        Ui.printResponse(\"    \" + OperationsMessages.MARK_MSG + \"\\n\" + \"    \" + item.toString());","lastModifiedDate":"2023-02-24"},{"lineNumber":161,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":162,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":163,"author":{"gitId":"ollayf"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":164,"author":{"gitId":"ollayf"},"content":"     * Unmarks an item as done by the Index (Based on the list function)","lastModifiedDate":"2023-02-24"},{"lineNumber":165,"author":{"gitId":"ollayf"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":166,"author":{"gitId":"ollayf"},"content":"     * @param itemNo The index of the item to be unmarked (Based on the list function)","lastModifiedDate":"2023-02-24"},{"lineNumber":167,"author":{"gitId":"ollayf"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":168,"author":{"gitId":"ollayf"},"content":"    private static void unmarkItem(int itemNo) {","lastModifiedDate":"2023-01-26"},{"lineNumber":169,"author":{"gitId":"ollayf"},"content":"        Todo item \u003d tasklist.get(itemNo);","lastModifiedDate":"2023-02-24"},{"lineNumber":170,"author":{"gitId":"ollayf"},"content":"        item.setDone(false);","lastModifiedDate":"2023-01-27"},{"lineNumber":171,"author":{"gitId":"ollayf"},"content":"        Ui.printResponse(\"    \" + OperationsMessages.UNMARK_MSG + \"\\n\" + \"    \" + item.toString());","lastModifiedDate":"2023-02-24"},{"lineNumber":172,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":173,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":174,"author":{"gitId":"ollayf"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":175,"author":{"gitId":"ollayf"},"content":"     * Removes the item from the list of items","lastModifiedDate":"2023-02-24"},{"lineNumber":176,"author":{"gitId":"ollayf"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":177,"author":{"gitId":"ollayf"},"content":"     * @param itemNo The index of the item to be removed (Based on the list function)","lastModifiedDate":"2023-02-24"},{"lineNumber":178,"author":{"gitId":"ollayf"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":179,"author":{"gitId":"ollayf"},"content":"    private static void removeItem(int itemIdx) {","lastModifiedDate":"2023-02-12"},{"lineNumber":180,"author":{"gitId":"ollayf"},"content":"        Todo itemToDelete \u003d tasklist.remove(itemIdx);","lastModifiedDate":"2023-02-24"},{"lineNumber":181,"author":{"gitId":"ollayf"},"content":"        Ui.printResponse(String.format(OperationsMessages.DELETED_MSG, itemToDelete.toString(), tasklist.size()));","lastModifiedDate":"2023-02-24"},{"lineNumber":182,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":183,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":184,"author":{"gitId":"ollayf"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":185,"author":{"gitId":"ollayf"},"content":"     * Prints all items from the tasklist","lastModifiedDate":"2023-02-24"},{"lineNumber":186,"author":{"gitId":"ollayf"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":187,"author":{"gitId":"ollayf"},"content":"    private static void printItems() {","lastModifiedDate":"2023-01-26"},{"lineNumber":188,"author":{"gitId":"ollayf"},"content":"        String response \u003d OperationsMessages.SHOW_ITEMS_MSG + \"\\n\";","lastModifiedDate":"2023-02-04"},{"lineNumber":189,"author":{"gitId":"ollayf"},"content":"        for (int i \u003d 1; i \u003c\u003d tasklist.size(); i++) {","lastModifiedDate":"2023-02-24"},{"lineNumber":190,"author":{"gitId":"ollayf"},"content":"            Todo item \u003d tasklist.get(i);","lastModifiedDate":"2023-02-24"},{"lineNumber":191,"author":{"gitId":"ollayf"},"content":"            response +\u003d String.format(\"    %d.%s\\n\", i, item.toString());","lastModifiedDate":"2023-02-24"},{"lineNumber":192,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":193,"author":{"gitId":"ollayf"},"content":"        Ui.printResponse(response);","lastModifiedDate":"2023-02-24"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":195,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":196,"author":{"gitId":"ollayf"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":197,"author":{"gitId":"ollayf"},"content":"     * Prints out all the items that have a similar description to the string provided","lastModifiedDate":"2023-02-24"},{"lineNumber":198,"author":{"gitId":"ollayf"},"content":"     * Sensitive to Capitalzation and weird chars like whitespace and \\n character","lastModifiedDate":"2023-02-24"},{"lineNumber":199,"author":{"gitId":"ollayf"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":200,"author":{"gitId":"ollayf"},"content":"     * @param nameLike The name that is used as reference for search. ","lastModifiedDate":"2023-02-24"},{"lineNumber":201,"author":{"gitId":"ollayf"},"content":"     * The actual name returned should be in the format \"*${nameLike}*\" where each * can represent any number of ","lastModifiedDate":"2023-02-24"},{"lineNumber":202,"author":{"gitId":"ollayf"},"content":"     * character, including the case of 0 characters","lastModifiedDate":"2023-02-24"},{"lineNumber":203,"author":{"gitId":"ollayf"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":204,"author":{"gitId":"ollayf"},"content":"    private static void findItem(String nameLike) throws NotFoundException {","lastModifiedDate":"2023-02-24"},{"lineNumber":205,"author":{"gitId":"ollayf"},"content":"        ArrayList\u003cTodo\u003e results \u003d tasklist.findLike(nameLike);","lastModifiedDate":"2023-02-24"},{"lineNumber":206,"author":{"gitId":"ollayf"},"content":"        String response \u003d OperationsMessages.SHOW_FINDINGS + \"\\n\";","lastModifiedDate":"2023-02-24"},{"lineNumber":207,"author":{"gitId":"ollayf"},"content":"        if (results.size() \u003d\u003d 0) {","lastModifiedDate":"2023-02-24"},{"lineNumber":208,"author":{"gitId":"ollayf"},"content":"            throw new NotFoundException();","lastModifiedDate":"2023-02-24"},{"lineNumber":209,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":210,"author":{"gitId":"ollayf"},"content":"        int i \u003d 1;","lastModifiedDate":"2023-02-24"},{"lineNumber":211,"author":{"gitId":"ollayf"},"content":"        for (Todo item: results) {","lastModifiedDate":"2023-02-24"},{"lineNumber":212,"author":{"gitId":"ollayf"},"content":"            response +\u003d String.format(\"    %d.%s\\n\", i, item.toString());","lastModifiedDate":"2023-02-24"},{"lineNumber":213,"author":{"gitId":"ollayf"},"content":"            i++;","lastModifiedDate":"2023-02-24"},{"lineNumber":214,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":215,"author":{"gitId":"ollayf"},"content":"        Ui.printResponse(response);","lastModifiedDate":"2023-02-24"},{"lineNumber":216,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":217,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":218,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"ollayf":213,"-":5}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"import tasks.Deadline;","lastModifiedDate":"2023-02-24"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"import tasks.Event;","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"ollayf"},"content":"import tasks.Todo;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"public class Parser {","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"ollayf"},"content":"     * Converts the line input by user into the line parts","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"ollayf"},"content":"     * Separated by whitespace","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"ollayf"},"content":"     * There is no \\n characters from input line","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"ollayf"},"content":"     * ","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"ollayf"},"content":"     * @param line Line input by user","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"ollayf"},"content":"     * @returns An array of words in the line provided","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"ollayf"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"ollayf"},"content":"    public static String[] getLineParts(String line) {","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"ollayf"},"content":"        String[] lineParts \u003d line.split(\" \");","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"ollayf"},"content":"        return lineParts;","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"ollayf"},"content":"    ","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"ollayf"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"ollayf"},"content":"     * Gets the number of words in the given line.","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"ollayf"},"content":"     * There is no \\n characters from input line","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"ollayf"},"content":"     * ","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"ollayf"},"content":"     * @param line Line input by user","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"ollayf"},"content":"     * @returns An array of words in the line provided","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"ollayf"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"ollayf"},"content":"    public static int getNumWords(String line) {","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"ollayf"},"content":"        String[] lineParts \u003d getLineParts(line);","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"ollayf"},"content":"        return lineParts.length;","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"ollayf"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"ollayf"},"content":"     * Gets the specific command from the given line.","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"ollayf"},"content":"     * There is no \\n characters from input line","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"ollayf"},"content":"     * ","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"ollayf"},"content":"     * @param line Line input by user","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"ollayf"},"content":"     * @returns A string representing the name of the command used","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"ollayf"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"ollayf"},"content":"    public static String getCommand(String line) {","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"ollayf"},"content":"        String[] lineParts \u003d getLineParts(line);","lastModifiedDate":"2023-02-24"},{"lineNumber":41,"author":{"gitId":"ollayf"},"content":"        return lineParts[0];","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"ollayf"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"ollayf"},"content":"     * Gets the index of the item selected by the user and converts","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"ollayf"},"content":"     * into an integer (for other use)","lastModifiedDate":"2023-02-24"},{"lineNumber":47,"author":{"gitId":"ollayf"},"content":"     * ","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"ollayf"},"content":"     * @param line Line input by user","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"ollayf"},"content":"     * @returns An integer relating the the index chosen by the user","lastModifiedDate":"2023-02-24"},{"lineNumber":50,"author":{"gitId":"ollayf"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":51,"author":{"gitId":"ollayf"},"content":"    public static int getInputIndex(String line) {","lastModifiedDate":"2023-02-24"},{"lineNumber":52,"author":{"gitId":"ollayf"},"content":"        String[] lineParts \u003d getLineParts(line);","lastModifiedDate":"2023-02-24"},{"lineNumber":53,"author":{"gitId":"ollayf"},"content":"        return Integer.parseInt(lineParts[1]);","lastModifiedDate":"2023-02-24"},{"lineNumber":54,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":55,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":56,"author":{"gitId":"ollayf"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":57,"author":{"gitId":"ollayf"},"content":"     * Creates the event based on the line input","lastModifiedDate":"2023-02-24"},{"lineNumber":58,"author":{"gitId":"ollayf"},"content":"     * Assumes the command is already removed from the line input","lastModifiedDate":"2023-02-24"},{"lineNumber":59,"author":{"gitId":"ollayf"},"content":"     * ","lastModifiedDate":"2023-02-24"},{"lineNumber":60,"author":{"gitId":"ollayf"},"content":"     * @param line Line input by user without the command","lastModifiedDate":"2023-02-24"},{"lineNumber":61,"author":{"gitId":"ollayf"},"content":"     * @returns An Event Obj Instance that represents the event wanted to be created by the user input","lastModifiedDate":"2023-02-24"},{"lineNumber":62,"author":{"gitId":"ollayf"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":63,"author":{"gitId":"ollayf"},"content":"    public static Event initEvent(String line) {","lastModifiedDate":"2023-02-24"},{"lineNumber":64,"author":{"gitId":"ollayf"},"content":"        String[] lineParts \u003d line.split(\" /from | /to \", 3);","lastModifiedDate":"2023-02-24"},{"lineNumber":65,"author":{"gitId":"ollayf"},"content":"        String itemDescription \u003d lineParts[0];","lastModifiedDate":"2023-02-24"},{"lineNumber":66,"author":{"gitId":"ollayf"},"content":"        String itemFrom \u003d lineParts[1];","lastModifiedDate":"2023-02-24"},{"lineNumber":67,"author":{"gitId":"ollayf"},"content":"        String itemTo \u003d lineParts[2];","lastModifiedDate":"2023-02-24"},{"lineNumber":68,"author":{"gitId":"ollayf"},"content":"        Event item \u003d new Event(itemDescription, itemFrom, itemTo);","lastModifiedDate":"2023-02-24"},{"lineNumber":69,"author":{"gitId":"ollayf"},"content":"        return item;","lastModifiedDate":"2023-02-24"},{"lineNumber":70,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":71,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":72,"author":{"gitId":"ollayf"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":73,"author":{"gitId":"ollayf"},"content":"     * Creates the Todo Instance based on the line input","lastModifiedDate":"2023-02-24"},{"lineNumber":74,"author":{"gitId":"ollayf"},"content":"     * Assumes the command is already removed from the line input","lastModifiedDate":"2023-02-24"},{"lineNumber":75,"author":{"gitId":"ollayf"},"content":"     * ","lastModifiedDate":"2023-02-24"},{"lineNumber":76,"author":{"gitId":"ollayf"},"content":"     * @param line Line input by user without the command","lastModifiedDate":"2023-02-24"},{"lineNumber":77,"author":{"gitId":"ollayf"},"content":"     * @returns An Todo Obj Instance that represents the Todo wanted to be created by the user input","lastModifiedDate":"2023-02-24"},{"lineNumber":78,"author":{"gitId":"ollayf"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":79,"author":{"gitId":"ollayf"},"content":"    public static Todo initTodo(String line) {","lastModifiedDate":"2023-02-24"},{"lineNumber":80,"author":{"gitId":"ollayf"},"content":"        Todo item \u003d new Todo(line);","lastModifiedDate":"2023-02-24"},{"lineNumber":81,"author":{"gitId":"ollayf"},"content":"        return item;","lastModifiedDate":"2023-02-24"},{"lineNumber":82,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":83,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":84,"author":{"gitId":"ollayf"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":85,"author":{"gitId":"ollayf"},"content":"     * Creates the Deadline Instance based on the line input","lastModifiedDate":"2023-02-24"},{"lineNumber":86,"author":{"gitId":"ollayf"},"content":"     * Assumes the command is already removed from the line input","lastModifiedDate":"2023-02-24"},{"lineNumber":87,"author":{"gitId":"ollayf"},"content":"     * ","lastModifiedDate":"2023-02-24"},{"lineNumber":88,"author":{"gitId":"ollayf"},"content":"     * @param line Line input by user without the command","lastModifiedDate":"2023-02-24"},{"lineNumber":89,"author":{"gitId":"ollayf"},"content":"     * @returns An Deadline Obj Instance that represents the Deadline wanted to be created by the user input","lastModifiedDate":"2023-02-24"},{"lineNumber":90,"author":{"gitId":"ollayf"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":91,"author":{"gitId":"ollayf"},"content":"    public static Deadline initDeadline(String line) {","lastModifiedDate":"2023-02-24"},{"lineNumber":92,"author":{"gitId":"ollayf"},"content":"        String[] lineParts \u003d line.split(\" /by \", 2);","lastModifiedDate":"2023-02-24"},{"lineNumber":93,"author":{"gitId":"ollayf"},"content":"        String itemDescription \u003d lineParts[0];","lastModifiedDate":"2023-02-24"},{"lineNumber":94,"author":{"gitId":"ollayf"},"content":"        String itemDeadline \u003d lineParts[1];","lastModifiedDate":"2023-02-24"},{"lineNumber":95,"author":{"gitId":"ollayf"},"content":"        Deadline item \u003d new Deadline(itemDescription, itemDeadline);","lastModifiedDate":"2023-02-24"},{"lineNumber":96,"author":{"gitId":"ollayf"},"content":"        return item;","lastModifiedDate":"2023-02-24"},{"lineNumber":97,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":98,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"ollayf":98}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-24"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"import tasks.Deadline;","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"ollayf"},"content":"import tasks.Event;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"import tasks.Task;","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"import tasks.Todo;","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"import java.io.File;","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"ollayf"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"ollayf"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"ollayf"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"ollayf"},"content":"public class Storage {","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"ollayf"},"content":"    private static final String saveFilePath \u003d \"./data/duke.txt\";","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"ollayf"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"ollayf"},"content":"     * Writes a specific content to a file that is provided","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"ollayf"},"content":"     * ","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"ollayf"},"content":"     * @param filePath The path to the file that is going to be written on","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"ollayf"},"content":"     * @param content A string that summarises the content to be written to the file","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"ollayf"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"ollayf"},"content":"    public void writeToFile(String filePath, String content) throws IOException {","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"ollayf"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"ollayf"},"content":"        fw.write(content);","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"ollayf"},"content":"        fw.close();","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"ollayf"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"ollayf"},"content":"     * Saves all task that currently exists in the pre-determined save file","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"ollayf"},"content":"     * ","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"ollayf"},"content":"     * @param itemList The TaskList instance to be saved into the file","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"ollayf"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"ollayf"},"content":"    public void save(TaskList itemList) throws IOException {","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"ollayf"},"content":"        // create directory and file if they dont exist","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"ollayf"},"content":"        File fileObj \u003d new File(saveFilePath);","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"ollayf"},"content":"        File dirObj \u003d fileObj.getParentFile();","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"ollayf"},"content":"        dirObj.mkdirs();","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"ollayf"},"content":"        String saveString \u003d \"\";","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"ollayf"},"content":"        for (Todo item: itemList.asList()) {","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"ollayf"},"content":"            saveString +\u003d item.getSaveRepresentation() + \"\\n\";","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":41,"author":{"gitId":"ollayf"},"content":"        writeToFile(saveFilePath, saveString);","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"ollayf"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"ollayf"},"content":"     * Loads all task from the pre-determined save file into the TaskList instance","lastModifiedDate":"2023-02-24"},{"lineNumber":47,"author":{"gitId":"ollayf"},"content":"     * It appends to the TaskList (does not destroy the previously added tasks)","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"ollayf"},"content":"     * ","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"ollayf"},"content":"     * @param itemList The TaskList instance to be loaded into the file","lastModifiedDate":"2023-02-24"},{"lineNumber":50,"author":{"gitId":"ollayf"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":51,"author":{"gitId":"ollayf"},"content":"    public void load(TaskList itemList) throws FileNotFoundException {","lastModifiedDate":"2023-02-24"},{"lineNumber":52,"author":{"gitId":"ollayf"},"content":"        File loadFile \u003d new File(saveFilePath);","lastModifiedDate":"2023-02-24"},{"lineNumber":53,"author":{"gitId":"ollayf"},"content":"        Scanner fileScanner \u003d new Scanner(loadFile);","lastModifiedDate":"2023-02-24"},{"lineNumber":54,"author":{"gitId":"ollayf"},"content":"        while(fileScanner.hasNext()) {","lastModifiedDate":"2023-02-24"},{"lineNumber":55,"author":{"gitId":"ollayf"},"content":"            String line \u003d fileScanner.nextLine();","lastModifiedDate":"2023-02-24"},{"lineNumber":56,"author":{"gitId":"ollayf"},"content":"            String[] lineParts \u003d line.split(\" /// \");","lastModifiedDate":"2023-02-24"},{"lineNumber":57,"author":{"gitId":"ollayf"},"content":"            String itemType \u003d lineParts[0];","lastModifiedDate":"2023-02-24"},{"lineNumber":58,"author":{"gitId":"ollayf"},"content":"            // load each item one by one","lastModifiedDate":"2023-02-24"},{"lineNumber":59,"author":{"gitId":"ollayf"},"content":"            boolean isMarked \u003d lineParts[1] \u003d\u003d \"1\";","lastModifiedDate":"2023-02-24"},{"lineNumber":60,"author":{"gitId":"ollayf"},"content":"            Todo newItem;","lastModifiedDate":"2023-02-24"},{"lineNumber":61,"author":{"gitId":"ollayf"},"content":"            switch (itemType) {","lastModifiedDate":"2023-02-24"},{"lineNumber":62,"author":{"gitId":"ollayf"},"content":"            case \"T\":","lastModifiedDate":"2023-02-24"},{"lineNumber":63,"author":{"gitId":"ollayf"},"content":"                newItem \u003d new Todo(lineParts[2]);","lastModifiedDate":"2023-02-24"},{"lineNumber":64,"author":{"gitId":"ollayf"},"content":"                newItem.setDone(isMarked);","lastModifiedDate":"2023-02-24"},{"lineNumber":65,"author":{"gitId":"ollayf"},"content":"                itemList.addItem(newItem);","lastModifiedDate":"2023-02-24"},{"lineNumber":66,"author":{"gitId":"ollayf"},"content":"                break;","lastModifiedDate":"2023-02-24"},{"lineNumber":67,"author":{"gitId":"ollayf"},"content":"            case \"D\":","lastModifiedDate":"2023-02-24"},{"lineNumber":68,"author":{"gitId":"ollayf"},"content":"                newItem \u003d new Deadline(lineParts[2], lineParts[3]);","lastModifiedDate":"2023-02-24"},{"lineNumber":69,"author":{"gitId":"ollayf"},"content":"                newItem.setDone(isMarked);","lastModifiedDate":"2023-02-24"},{"lineNumber":70,"author":{"gitId":"ollayf"},"content":"                itemList.addItem(newItem);","lastModifiedDate":"2023-02-24"},{"lineNumber":71,"author":{"gitId":"ollayf"},"content":"                break;","lastModifiedDate":"2023-02-24"},{"lineNumber":72,"author":{"gitId":"ollayf"},"content":"            case \"E\":","lastModifiedDate":"2023-02-24"},{"lineNumber":73,"author":{"gitId":"ollayf"},"content":"                newItem \u003d new Event(lineParts[2], lineParts[3], lineParts[4]);","lastModifiedDate":"2023-02-24"},{"lineNumber":74,"author":{"gitId":"ollayf"},"content":"                newItem.setDone(isMarked);","lastModifiedDate":"2023-02-24"},{"lineNumber":75,"author":{"gitId":"ollayf"},"content":"                itemList.addItem(newItem);","lastModifiedDate":"2023-02-24"},{"lineNumber":76,"author":{"gitId":"ollayf"},"content":"                break;","lastModifiedDate":"2023-02-24"},{"lineNumber":77,"author":{"gitId":"ollayf"},"content":"            default:","lastModifiedDate":"2023-02-24"},{"lineNumber":78,"author":{"gitId":"ollayf"},"content":"                // TODO add exception","lastModifiedDate":"2023-02-24"},{"lineNumber":79,"author":{"gitId":"ollayf"},"content":"                break;","lastModifiedDate":"2023-02-24"},{"lineNumber":80,"author":{"gitId":"ollayf"},"content":"            }","lastModifiedDate":"2023-02-24"},{"lineNumber":81,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":82,"author":{"gitId":"ollayf"},"content":"        fileScanner.close();","lastModifiedDate":"2023-02-24"},{"lineNumber":83,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":84,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"ollayf":84}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-24"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"import tasks.Deadline;","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"ollayf"},"content":"import tasks.Event;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"import tasks.Todo;","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"import java.lang.Iterable;","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"ollayf"},"content":"public class TaskList {","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"ollayf"},"content":"    private ArrayList\u003cTodo\u003e itemList \u003d new ArrayList\u003cTodo\u003e(0);","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"ollayf"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"ollayf"},"content":"     * Adds the given item to the tasklist Instance","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"ollayf"},"content":"     * ","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"ollayf"},"content":"     * @param item The Task instance (Todo/ Deadline/ Event) to be added into the array of tasks","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"ollayf"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"ollayf"},"content":"    public void addItem(Todo item) {","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"ollayf"},"content":"        itemList.add(item);","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"ollayf"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"ollayf"},"content":"     * Retrieves the item in the array of tasks that has the given index","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"ollayf"},"content":"     * Indices start from 1 (not 0)","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"ollayf"},"content":"     * ","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"ollayf"},"content":"     * @param index The index of the Task instance (Todo/ Deadline/ Event) to be retrieved","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"ollayf"},"content":"     * @return The Task Instance (Todo/ Deadline/ Event) retrieved","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"ollayf"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"ollayf"},"content":"    public Todo get(int index) {","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"ollayf"},"content":"        return itemList.get(index-1);","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"ollayf"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"ollayf"},"content":"     * Removes the item in the array of tasks that has the given index","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"ollayf"},"content":"     * Indices start from 1 (not 0)","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"ollayf"},"content":"     * ","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"ollayf"},"content":"     * @param index The index of the Task instance (Todo/ Deadline/ Event) to be removed","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"ollayf"},"content":"     * @return The Task Instance (Todo/ Deadline/ Event) removed","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"ollayf"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"ollayf"},"content":"    public Todo remove(int index) {","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"ollayf"},"content":"        index--;","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"ollayf"},"content":"        Todo itemToDelete \u003d itemList.get(index);","lastModifiedDate":"2023-02-24"},{"lineNumber":41,"author":{"gitId":"ollayf"},"content":"        itemList.remove(index);","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"ollayf"},"content":"        return itemToDelete;","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"ollayf"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"ollayf"},"content":"     * Gets the length of the array of tasks","lastModifiedDate":"2023-02-24"},{"lineNumber":47,"author":{"gitId":"ollayf"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"ollayf"},"content":"    public int size() {","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"ollayf"},"content":"        return itemList.size();","lastModifiedDate":"2023-02-24"},{"lineNumber":50,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":51,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":52,"author":{"gitId":"ollayf"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":53,"author":{"gitId":"ollayf"},"content":"     * Gets the TaskList as an ArrayList instance of \u003cTodo\u003es","lastModifiedDate":"2023-02-24"},{"lineNumber":54,"author":{"gitId":"ollayf"},"content":"     * Typically used for for-each loops in the programme like:","lastModifiedDate":"2023-02-24"},{"lineNumber":55,"author":{"gitId":"ollayf"},"content":"     * for (Todo item: itemList) {","lastModifiedDate":"2023-02-24"},{"lineNumber":56,"author":{"gitId":"ollayf"},"content":"     * }","lastModifiedDate":"2023-02-24"},{"lineNumber":57,"author":{"gitId":"ollayf"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":58,"author":{"gitId":"ollayf"},"content":"    public ArrayList\u003cTodo\u003e asList() {","lastModifiedDate":"2023-02-24"},{"lineNumber":59,"author":{"gitId":"ollayf"},"content":"        return itemList;","lastModifiedDate":"2023-02-24"},{"lineNumber":60,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":61,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":62,"author":{"gitId":"ollayf"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":63,"author":{"gitId":"ollayf"},"content":"     * Finds the jobs that seem like the given input","lastModifiedDate":"2023-02-24"},{"lineNumber":64,"author":{"gitId":"ollayf"},"content":"     * ","lastModifiedDate":"2023-02-24"},{"lineNumber":65,"author":{"gitId":"ollayf"},"content":"     * @param nameLike The name that is used as reference for search. ","lastModifiedDate":"2023-02-24"},{"lineNumber":66,"author":{"gitId":"ollayf"},"content":"     * The actual name returned should be in the format \"*${nameLike}*\" where each * can represent any number of ","lastModifiedDate":"2023-02-24"},{"lineNumber":67,"author":{"gitId":"ollayf"},"content":"     * character, including the case of 0 characters","lastModifiedDate":"2023-02-24"},{"lineNumber":68,"author":{"gitId":"ollayf"},"content":"     * @return A new array of tasks that are like the given input","lastModifiedDate":"2023-02-24"},{"lineNumber":69,"author":{"gitId":"ollayf"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":70,"author":{"gitId":"ollayf"},"content":"    public ArrayList\u003cTodo\u003e findLike(String nameLike) {","lastModifiedDate":"2023-02-24"},{"lineNumber":71,"author":{"gitId":"ollayf"},"content":"        ArrayList\u003cTodo\u003e results \u003d new ArrayList\u003cTodo\u003e(0);","lastModifiedDate":"2023-02-24"},{"lineNumber":72,"author":{"gitId":"ollayf"},"content":"        for (Todo item: itemList) {","lastModifiedDate":"2023-02-24"},{"lineNumber":73,"author":{"gitId":"ollayf"},"content":"            if (item.getDescription().contains(nameLike)) {","lastModifiedDate":"2023-02-24"},{"lineNumber":74,"author":{"gitId":"ollayf"},"content":"                results.add(item);","lastModifiedDate":"2023-02-24"},{"lineNumber":75,"author":{"gitId":"ollayf"},"content":"            }","lastModifiedDate":"2023-02-24"},{"lineNumber":76,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":77,"author":{"gitId":"ollayf"},"content":"        return results;","lastModifiedDate":"2023-02-24"},{"lineNumber":78,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":79,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"ollayf":79}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"public class Ui {","lastModifiedDate":"2023-02-24"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"    ","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"ollayf"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"     * Prints the message that is to be shown at the beginning of every session","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"    public static void printStartMsg () {","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"ollayf"},"content":"        + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"ollayf"},"content":"        + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"ollayf"},"content":"        + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"ollayf"},"content":"        + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"ollayf"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"ollayf"},"content":"    ","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"ollayf"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"ollayf"},"content":"     * Prints a String into the terminal with the given format (with borders above and below to indicate it as the bot output)","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"ollayf"},"content":"     * ","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"ollayf"},"content":"     * @param response The String that represents what is desired to be output","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"ollayf"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"ollayf"},"content":"    public static void printResponse(String response) {","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"ollayf"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"ollayf"},"content":"        System.out.println(String.format(\"%s\", response));","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"ollayf"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"ollayf":25}},{"path":"src/main/java/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"T /// 0 /// Hosea: Answer CS2113 tutorial questions","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"D /// 0 /// weekly CS2113 quiz /// Monday 9pm","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"ollayf"},"content":"E /// 0 /// CS2113 lecture /// Friday 4pm /// 6pm","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"ollayf":3}},{"path":"src/main/java/exceptions/EmptyInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package exceptions;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"ollayf"},"content":"public class EmptyInputException extends Exception {","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"ollayf":4}},{"path":"src/main/java/exceptions/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package exceptions;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"ollayf"},"content":"public class InvalidCommand extends Exception {","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"    ","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"ollayf":5}},{"path":"src/main/java/exceptions/NotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package exceptions;","lastModifiedDate":"2023-02-24"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"ollayf"},"content":"public class NotFoundException extends Exception {","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"    ","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"ollayf":5}},{"path":"src/main/java/messages/ErrorMessages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package messages;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"ollayf"},"content":"public class ErrorMessages {","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"    public static final String EMPTY_INPUT \u003d \"You need to include more details about your item!\";","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"    public static final String INVALID_COMMAND \u003d \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"    public static final String INCORRECT_FIELDS \u003d \"You need to include the correct fields for this command\";","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"    public static final String LOAD_FAIL \u003d \"Cannnot find load fail\";","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"ollayf"},"content":"    public static final String SAVE_FAIL \u003d \"Cannot find save fail\";","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"ollayf"},"content":"    public static final String NONE_FOUND \u003d \"No Matching Items Found!\";","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"ollayf":10}},{"path":"src/main/java/messages/OperationsMessages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package messages;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"ollayf"},"content":"public class OperationsMessages {","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"    public static final String INITIAL_MSG \u003d \"    Hello! I\u0027m %s\\n    What can I do for you?\"; ","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"    public static final String BYE_MSG \u003d \"     Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"    public static final String MARK_MSG \u003d \"     Nice! I\u0027ve marked this task as done\";","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"    public static final String UNMARK_MSG \u003d \"     OK, I\u0027ve marked this task as not done yet:\";","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"ollayf"},"content":"    public static final String SHOW_ITEMS_MSG \u003d \"    Here are the tasks in your list:\";","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"ollayf"},"content":"    public static final String ADDED_MSG \u003d \"    Got it. I\u0027ve added this task:\\n      %s\\n    Now you have %d tasks in your list.\";","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"ollayf"},"content":"    public static final String DELETED_MSG \u003d \"    Noted. I\u0027ve removed this task:\\n      %s\\n    Now you have %d tasks in the list.\";","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"ollayf"},"content":"    public static final String SAVED_MSG \u003d \"    Save Successful!\";","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"ollayf"},"content":"    public static final String LOADED_MSG \u003d \"    Load Successful!\";","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"ollayf"},"content":"    public static final String SHOW_FINDINGS \u003d \"    Here are the matching tasks in your list:\";","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"ollayf"},"content":"    ","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"ollayf":16}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package tasks;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"public class Deadline extends Todo {","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"ollayf"},"content":"    private final String TYPE_REPRESENTATION \u003d \"D\";","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"    protected String by;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"ollayf"},"content":"        super(description);","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"ollayf"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"ollayf"},"content":"    public void setBy(String by) {","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"ollayf"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"ollayf"},"content":"    public String getBy() {","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"ollayf"},"content":"        return by;","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"ollayf"},"content":"    @Override","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"ollayf"},"content":"    public String getSaveRepresentation() {","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"ollayf"},"content":"        int doneRepresentation \u003d isDone() ? 1 : 0;","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"ollayf"},"content":"        return String.format(\"%s /// %d /// %s /// %s\", TYPE_REPRESENTATION, doneRepresentation, getDescription(), getBy());","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"ollayf"},"content":"    ","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"ollayf"},"content":"    public String toString() {","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"ollayf"},"content":"        char mark;","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"ollayf"},"content":"        if (isDone) {","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"ollayf"},"content":"            mark \u003d \u0027X\u0027;","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"ollayf"},"content":"        } else {","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"ollayf"},"content":"            mark \u003d \u0027 \u0027;","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"ollayf"},"content":"        return String.format(\"[%s][%c] %s (by: %s)\", TYPE_REPRESENTATION, mark, description, by);","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"ollayf":35}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package tasks;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"public class Event extends Todo {","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"ollayf"},"content":"    private final String TYPE_REPRESENTATION \u003d \"E\";","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"    protected String from;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"    protected String to;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"ollayf"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"ollayf"},"content":"        super(description);","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"ollayf"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"ollayf"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"ollayf"},"content":"    public void setFrom(String from) {","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"ollayf"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"ollayf"},"content":"    public String getFrom() {","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"ollayf"},"content":"        return from;","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"ollayf"},"content":"    public void setTo(String to) {","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"ollayf"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"ollayf"},"content":"    public String getTo() {","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"ollayf"},"content":"        return to;","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"ollayf"},"content":"    ","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"ollayf"},"content":"    @Override","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"ollayf"},"content":"    public String getSaveRepresentation() {","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"ollayf"},"content":"        int doneRepresentation \u003d isDone() ? 1 : 0;","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"ollayf"},"content":"        return String.format(\"%s /// %d /// %s /// %s /// %s\", TYPE_REPRESENTATION, doneRepresentation, getDescription(), getFrom(), getTo());","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"ollayf"},"content":"    ","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"ollayf"},"content":"    public String toString() {","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"ollayf"},"content":"        char mark;","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"ollayf"},"content":"        if (isDone) {","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"ollayf"},"content":"            mark \u003d \u0027X\u0027;","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"ollayf"},"content":"        } else {","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"ollayf"},"content":"            mark \u003d \u0027 \u0027;","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"ollayf"},"content":"        return String.format(\"[%s][%c] %s (from: %s to: %s)\", TYPE_REPRESENTATION, mark, description, from, to);","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"ollayf":45}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package tasks;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"public class Task {","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"ollayf"},"content":"    protected String description;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"ollayf"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"ollayf"},"content":"        return description;","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"ollayf":13}},{"path":"src/main/java/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package tasks;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"ollayf"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"    private final String TYPE_REPRESENTATION \u003d \"T\";","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"    public String getTypeRepresentation() {","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"        return TYPE_REPRESENTATION;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"ollayf"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"ollayf"},"content":"        super(description);","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"ollayf"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"ollayf"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"ollayf"},"content":"        isDone \u003d done;","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"ollayf"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"ollayf"},"content":"        return isDone;","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"ollayf"},"content":"    public String getTypeRep() {","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"ollayf"},"content":"        return TYPE_REPRESENTATION;","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"ollayf"},"content":"    public String getSaveRepresentation() {","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"ollayf"},"content":"        int doneRepresentation \u003d isDone() ? 1 : 0;","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"ollayf"},"content":"        return String.format(\"%s /// %d /// %s\", TYPE_REPRESENTATION, doneRepresentation, getDescription());","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"ollayf"},"content":"    ","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"ollayf"},"content":"    public String toString() {","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"ollayf"},"content":"        char mark;","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"ollayf"},"content":"        if (isDone) {","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"ollayf"},"content":"            mark \u003d \u0027X\u0027;","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"ollayf"},"content":"        } else {","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"ollayf"},"content":"            mark \u003d \u0027 \u0027;","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"ollayf"},"content":"        return String.format(\"[%s][%c] %s\", TYPE_REPRESENTATION, mark, description);","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"ollayf":41}},{"path":"text-ui-test/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"T /// 0 /// Hosea: Answer CS2113 tutorial questions","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"D /// 0 /// weekly CS2113 quiz /// Monday 9pm","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"ollayf"},"content":"E /// 0 /// CS2113 lecture /// Friday 4pm /// 6pm","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"ollayf":3}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"todo Hosea: Answer CS2113 tutorial questions","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"deadline weekly CS2113 quiz /by Monday 9pm","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"ollayf"},"content":"list","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"event CS2113 lecture /from Friday 4pm /to 6pm","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"list","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"invalidcommand description is here","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"mark 1","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"ollayf"},"content":"mark 2","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"ollayf"},"content":"list","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"ollayf"},"content":"unmark 1","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"ollayf"},"content":"unmark 2","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"ollayf"},"content":"list","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"ollayf"},"content":"event /from /to","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"ollayf"},"content":"event badevent /from wer /to","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"ollayf"},"content":"deadline rejwkjr wnrmqe","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"ollayf"},"content":"list","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"ollayf"},"content":"find CS2113","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"ollayf"},"content":"find weekly","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"ollayf"},"content":"find Hosea: Answer","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"ollayf":19}},{"path":"text-ui-test/input_JAR.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"todo Hosea: Answer CS2113 tutorial questions","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"deadline weekly CS2113 quiz /by Monday 9pm","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"ollayf"},"content":"list","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"event CS2113 lecture /from Friday 4pm /to 6pm","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"list","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"invalidcommand description is here","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"mark 1","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"ollayf"},"content":"mark 2","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"ollayf"},"content":"list","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"ollayf"},"content":"unmark 1","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"ollayf"},"content":"unmark 2","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"ollayf"},"content":"list","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"ollayf"},"content":"event /from /to","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"ollayf"},"content":"event badevent /from wer /to","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"ollayf"},"content":"deadline rejwkjr wnrmqe","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"ollayf"},"content":"list","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"ollayf"},"content":"save","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"ollayf"},"content":"load","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"ollayf"},"content":"list","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"ollayf":19}},{"path":"text-ui-test/runjar.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"java -jar ../ip.jar \u003c input_JAR.txt \u003e ACTUAL_JAR.TXT","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"# convert to UNIX format","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"ollayf"},"content":"cp EXPECTED_JAR.TXT EXPECTED-UNIX_JAR.TXT","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"# dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"# compare the output to the expected output","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"diff ACTUAL_JAR.TXT EXPECTED-UNIX_JAR.TXT","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"ollayf"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"ollayf"},"content":"then","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"ollayf"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"ollayf"},"content":"    exit 0","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"ollayf"},"content":"else","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"ollayf"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"ollayf"},"content":"    exit 1","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"ollayf"},"content":"fi","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"ollayf":15}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"ollayf"},"content":"if [ ! -d \"../bin/data\" ]","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"ollayf"},"content":"then","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"ollayf"},"content":"    mkdir ../bin/data","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"ollayf"},"content":"fi","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"ollayf"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java \\","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"ollayf"},"content":"    ../src/main/java/exceptions/*.java \\","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"ollayf"},"content":"    ../src/main/java/messages/*.java \\","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"ollayf"},"content":"    ../src/main/java/tasks/*.java ","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"ollayf"},"content":"# dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ollayf":10,"-":36}},{"path":"text-ui-test/runtest_mac.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2023-02-24"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"ollayf"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"then","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"    mkdir ../bin","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"fi","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"ollayf"},"content":"# delete output from previous run","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"ollayf"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"ollayf"},"content":"then","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"ollayf"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"ollayf"},"content":"fi","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"ollayf"},"content":"if [ ! -d \"../bin/data\" ]","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"ollayf"},"content":"then","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"ollayf"},"content":"    mkdir ../bin/data","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"ollayf"},"content":"fi","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"ollayf"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"ollayf"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java \\","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"ollayf"},"content":"    ../src/main/java/exceptions/*.java \\","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"ollayf"},"content":"    ../src/main/java/messages/*.java \\","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"ollayf"},"content":"    ../src/main/java/tasks/*.java ","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"ollayf"},"content":"then","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"ollayf"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"ollayf"},"content":"    exit 1","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"ollayf"},"content":"fi","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"ollayf"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"ollayf"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"ollayf"},"content":"# convert to UNIX format","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"ollayf"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"ollayf"},"content":"# dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"ollayf"},"content":"# compare the output to the expected output","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"ollayf"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"ollayf"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"ollayf"},"content":"then","lastModifiedDate":"2023-02-24"},{"lineNumber":41,"author":{"gitId":"ollayf"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"ollayf"},"content":"    exit 0","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"ollayf"},"content":"else","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"ollayf"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"ollayf"},"content":"    exit 1","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"ollayf"},"content":"fi","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"ollayf":46}}]
