[{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JuneNita"},"content":"package duke;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"JuneNita"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"JuneNita"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"JuneNita"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"JuneNita"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"JuneNita"},"content":"import java.io.File;","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"JuneNita"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"JuneNita"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"JuneNita"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"JuneNita"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"JuneNita"},"content":"    private static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"JuneNita"},"content":"    private static Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"JuneNita"},"content":"    private static final String FILE_PATH \u003d \"duke.txt\";","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"JuneNita"},"content":"    private static void printDuke() {","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"JuneNita"},"content":"        System.out.println(\"Hello from\\n\" + logo + \"\\n\");","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"JuneNita"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"JuneNita"},"content":"    private static String breakLine() {","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"JuneNita"},"content":"        return \"\\t--------------------------------------------------------------\\n\";","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"JuneNita"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":31,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":32,"author":{"gitId":"JuneNita"},"content":"    // Greet","lastModifiedDate":"2023-01-21"},{"lineNumber":33,"author":{"gitId":"JuneNita"},"content":"    private static void greet() {","lastModifiedDate":"2023-02-04"},{"lineNumber":34,"author":{"gitId":"JuneNita"},"content":"        System.out.println(breakLine()","lastModifiedDate":"2023-01-21"},{"lineNumber":35,"author":{"gitId":"JuneNita"},"content":"                + \"\\tHello! I\u0027m Duke :)\\n\"","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"JuneNita"},"content":"                + \"\\tWhat can I do for you?\\n\"","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"JuneNita"},"content":"                + breakLine());","lastModifiedDate":"2023-01-21"},{"lineNumber":38,"author":{"gitId":"JuneNita"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":39,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":40,"author":{"gitId":"JuneNita"},"content":"    // read existing data","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"JuneNita"},"content":"    private static void getFileData() {","lastModifiedDate":"2023-02-13"},{"lineNumber":42,"author":{"gitId":"JuneNita"},"content":"        File file \u003d new File(FILE_PATH);","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"JuneNita"},"content":"        System.out.println(\"\\tLoading existing data . . .\\n\");","lastModifiedDate":"2023-02-13"},{"lineNumber":44,"author":{"gitId":"JuneNita"},"content":"        String input;","lastModifiedDate":"2023-02-13"},{"lineNumber":45,"author":{"gitId":"JuneNita"},"content":"        try {","lastModifiedDate":"2023-02-13"},{"lineNumber":46,"author":{"gitId":"JuneNita"},"content":"            if (!file.createNewFile()) {","lastModifiedDate":"2023-02-13"},{"lineNumber":47,"author":{"gitId":"JuneNita"},"content":"                Scanner fileInput \u003d new Scanner(file);","lastModifiedDate":"2023-02-13"},{"lineNumber":48,"author":{"gitId":"JuneNita"},"content":"                while (fileInput.hasNext()) {","lastModifiedDate":"2023-02-13"},{"lineNumber":49,"author":{"gitId":"JuneNita"},"content":"                    input \u003d fileInput.nextLine();","lastModifiedDate":"2023-02-13"},{"lineNumber":50,"author":{"gitId":"JuneNita"},"content":"                    String[] inputArgs \u003d input.split(\" \\\\| \");","lastModifiedDate":"2023-02-13"},{"lineNumber":51,"author":{"gitId":"JuneNita"},"content":"                    addFileDataToList(inputArgs);","lastModifiedDate":"2023-02-13"},{"lineNumber":52,"author":{"gitId":"JuneNita"},"content":"                }","lastModifiedDate":"2023-02-13"},{"lineNumber":53,"author":{"gitId":"JuneNita"},"content":"            }","lastModifiedDate":"2023-02-13"},{"lineNumber":54,"author":{"gitId":"JuneNita"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":55,"author":{"gitId":"JuneNita"},"content":"            System.out.print(\"\\t(!) IOException error: get existing file data.\\n\" + breakLine());","lastModifiedDate":"2023-02-13"},{"lineNumber":56,"author":{"gitId":"JuneNita"},"content":"        } catch (IllegalStateException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":57,"author":{"gitId":"JuneNita"},"content":"            System.out.print(\"\\t(!) IllegalStateException: (!) Invalid file contents.\\n\" + breakLine());","lastModifiedDate":"2023-02-13"},{"lineNumber":58,"author":{"gitId":"JuneNita"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":59,"author":{"gitId":"JuneNita"},"content":"        System.out.print(\"\\tLoading Done :)\\n\" + breakLine());","lastModifiedDate":"2023-02-13"},{"lineNumber":60,"author":{"gitId":"JuneNita"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":61,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":62,"author":{"gitId":"JuneNita"},"content":"    // add data read from file to list","lastModifiedDate":"2023-02-13"},{"lineNumber":63,"author":{"gitId":"JuneNita"},"content":"    private static void addFileDataToList(String[] inputArgs) {","lastModifiedDate":"2023-02-13"},{"lineNumber":64,"author":{"gitId":"JuneNita"},"content":"        Task newTask;","lastModifiedDate":"2023-02-13"},{"lineNumber":65,"author":{"gitId":"JuneNita"},"content":"        String command \u003d inputArgs[0];","lastModifiedDate":"2023-02-13"},{"lineNumber":66,"author":{"gitId":"JuneNita"},"content":"        boolean isMarked \u003d Boolean.parseBoolean(inputArgs[1]);","lastModifiedDate":"2023-02-13"},{"lineNumber":67,"author":{"gitId":"JuneNita"},"content":"        switch (command) {","lastModifiedDate":"2023-02-13"},{"lineNumber":68,"author":{"gitId":"JuneNita"},"content":"        case \"T\":","lastModifiedDate":"2023-02-13"},{"lineNumber":69,"author":{"gitId":"JuneNita"},"content":"            newTask \u003d new Todo(inputArgs[2]);","lastModifiedDate":"2023-02-13"},{"lineNumber":70,"author":{"gitId":"JuneNita"},"content":"            break;","lastModifiedDate":"2023-02-13"},{"lineNumber":71,"author":{"gitId":"JuneNita"},"content":"        case \"D\":","lastModifiedDate":"2023-02-13"},{"lineNumber":72,"author":{"gitId":"JuneNita"},"content":"            newTask \u003d new Deadline(inputArgs[2], inputArgs[3]);","lastModifiedDate":"2023-02-13"},{"lineNumber":73,"author":{"gitId":"JuneNita"},"content":"            break;","lastModifiedDate":"2023-02-13"},{"lineNumber":74,"author":{"gitId":"JuneNita"},"content":"        case \"E\":","lastModifiedDate":"2023-02-13"},{"lineNumber":75,"author":{"gitId":"JuneNita"},"content":"            newTask \u003d new Event(inputArgs[2], inputArgs[3], inputArgs[4]);","lastModifiedDate":"2023-02-13"},{"lineNumber":76,"author":{"gitId":"JuneNita"},"content":"            break;","lastModifiedDate":"2023-02-13"},{"lineNumber":77,"author":{"gitId":"JuneNita"},"content":"        default:","lastModifiedDate":"2023-02-13"},{"lineNumber":78,"author":{"gitId":"JuneNita"},"content":"            throw new IllegalStateException(\"(!) Invalid file contents.\");","lastModifiedDate":"2023-02-13"},{"lineNumber":79,"author":{"gitId":"JuneNita"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":80,"author":{"gitId":"JuneNita"},"content":"        if (isMarked) {","lastModifiedDate":"2023-02-13"},{"lineNumber":81,"author":{"gitId":"JuneNita"},"content":"            newTask.mark();","lastModifiedDate":"2023-02-13"},{"lineNumber":82,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":83,"author":{"gitId":"JuneNita"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":84,"author":{"gitId":"JuneNita"},"content":"        tasks.add(newTask);","lastModifiedDate":"2023-02-13"},{"lineNumber":85,"author":{"gitId":"JuneNita"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":86,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":87,"author":{"gitId":"JuneNita"},"content":"    // add a new task","lastModifiedDate":"2023-01-21"},{"lineNumber":88,"author":{"gitId":"JuneNita"},"content":"    private static void addTodo(String taskInfo) {","lastModifiedDate":"2023-02-04"},{"lineNumber":89,"author":{"gitId":"JuneNita"},"content":"        Task newTask \u003d new Todo(taskInfo);","lastModifiedDate":"2023-02-04"},{"lineNumber":90,"author":{"gitId":"JuneNita"},"content":"        tasks.add(newTask);","lastModifiedDate":"2023-02-04"},{"lineNumber":91,"author":{"gitId":"JuneNita"},"content":"        System.out.print(breakLine()","lastModifiedDate":"2023-01-31"},{"lineNumber":92,"author":{"gitId":"JuneNita"},"content":"                + \"\\tadded:\\n\\t\\t\" + newTask + \u0027\\n\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":93,"author":{"gitId":"JuneNita"},"content":"                + \"\\t(total: \" + tasks.size() + \" tasks)\\n\"","lastModifiedDate":"2023-02-13"},{"lineNumber":94,"author":{"gitId":"JuneNita"},"content":"                + breakLine());","lastModifiedDate":"2023-01-31"},{"lineNumber":95,"author":{"gitId":"JuneNita"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":96,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":97,"author":{"gitId":"JuneNita"},"content":"    // create deadline","lastModifiedDate":"2023-02-04"},{"lineNumber":98,"author":{"gitId":"JuneNita"},"content":"    private static Deadline createDeadline(String taskInfo) {","lastModifiedDate":"2023-02-04"},{"lineNumber":99,"author":{"gitId":"JuneNita"},"content":"        String description, deadline;","lastModifiedDate":"2023-01-31"},{"lineNumber":100,"author":{"gitId":"JuneNita"},"content":"        String[] info \u003d taskInfo.split(\"#by\", 2);","lastModifiedDate":"2023-01-31"},{"lineNumber":101,"author":{"gitId":"JuneNita"},"content":"        description \u003d info[0];","lastModifiedDate":"2023-01-31"},{"lineNumber":102,"author":{"gitId":"JuneNita"},"content":"        deadline \u003d info[1];","lastModifiedDate":"2023-01-31"},{"lineNumber":103,"author":{"gitId":"JuneNita"},"content":"        return new Deadline(description, deadline);","lastModifiedDate":"2023-02-04"},{"lineNumber":104,"author":{"gitId":"JuneNita"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":105,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":106,"author":{"gitId":"JuneNita"},"content":"    // add a new deadline","lastModifiedDate":"2023-02-04"},{"lineNumber":107,"author":{"gitId":"JuneNita"},"content":"    private static void addDeadline(String taskInfo) {","lastModifiedDate":"2023-02-04"},{"lineNumber":108,"author":{"gitId":"JuneNita"},"content":"        Task newTask \u003d createDeadline(taskInfo);","lastModifiedDate":"2023-02-04"},{"lineNumber":109,"author":{"gitId":"JuneNita"},"content":"        tasks.add(newTask);","lastModifiedDate":"2023-02-04"},{"lineNumber":110,"author":{"gitId":"JuneNita"},"content":"        System.out.print(breakLine()","lastModifiedDate":"2023-01-21"},{"lineNumber":111,"author":{"gitId":"JuneNita"},"content":"                + \"\\tadded:\\n\\t\\t\" + newTask + \u0027\\n\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":112,"author":{"gitId":"JuneNita"},"content":"                + \"\\t(total: \" + tasks.size() + \" tasks)\\n\"","lastModifiedDate":"2023-02-13"},{"lineNumber":113,"author":{"gitId":"JuneNita"},"content":"                + breakLine());","lastModifiedDate":"2023-01-31"},{"lineNumber":114,"author":{"gitId":"JuneNita"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":115,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":116,"author":{"gitId":"JuneNita"},"content":"    // create new event","lastModifiedDate":"2023-02-04"},{"lineNumber":117,"author":{"gitId":"JuneNita"},"content":"    private static Event createEvent(String taskInfo) {","lastModifiedDate":"2023-02-04"},{"lineNumber":118,"author":{"gitId":"JuneNita"},"content":"        String description, from, to;","lastModifiedDate":"2023-01-31"},{"lineNumber":119,"author":{"gitId":"JuneNita"},"content":"        String[] info \u003d taskInfo.split(\"#from\", 2);","lastModifiedDate":"2023-01-31"},{"lineNumber":120,"author":{"gitId":"JuneNita"},"content":"        description \u003d info[0];","lastModifiedDate":"2023-01-31"},{"lineNumber":121,"author":{"gitId":"JuneNita"},"content":"        info \u003d info[1].split(\"#to\", 2);","lastModifiedDate":"2023-01-31"},{"lineNumber":122,"author":{"gitId":"JuneNita"},"content":"        from \u003d info[0];","lastModifiedDate":"2023-01-31"},{"lineNumber":123,"author":{"gitId":"JuneNita"},"content":"        to \u003d info[1];","lastModifiedDate":"2023-01-31"},{"lineNumber":124,"author":{"gitId":"JuneNita"},"content":"        return new Event(description, from, to);","lastModifiedDate":"2023-02-04"},{"lineNumber":125,"author":{"gitId":"JuneNita"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":126,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":127,"author":{"gitId":"JuneNita"},"content":"    // add a new event","lastModifiedDate":"2023-02-04"},{"lineNumber":128,"author":{"gitId":"JuneNita"},"content":"    private static void addEvent(String taskInfo) {","lastModifiedDate":"2023-02-04"},{"lineNumber":129,"author":{"gitId":"JuneNita"},"content":"        Task newTask \u003d createEvent(taskInfo);","lastModifiedDate":"2023-02-04"},{"lineNumber":130,"author":{"gitId":"JuneNita"},"content":"        tasks.add(newTask);","lastModifiedDate":"2023-02-04"},{"lineNumber":131,"author":{"gitId":"JuneNita"},"content":"        System.out.print(breakLine()","lastModifiedDate":"2023-01-31"},{"lineNumber":132,"author":{"gitId":"JuneNita"},"content":"                + \"\\tadded:\\n\\t\\t\" + newTask + \u0027\\n\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":133,"author":{"gitId":"JuneNita"},"content":"                + \"\\t(total: \" + tasks.size() + \" tasks)\\n\"","lastModifiedDate":"2023-02-13"},{"lineNumber":134,"author":{"gitId":"JuneNita"},"content":"                + breakLine());","lastModifiedDate":"2023-01-21"},{"lineNumber":135,"author":{"gitId":"JuneNita"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":136,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":137,"author":{"gitId":"JuneNita"},"content":"    // list all tasks","lastModifiedDate":"2023-01-21"},{"lineNumber":138,"author":{"gitId":"JuneNita"},"content":"    private static void listTask() {","lastModifiedDate":"2023-02-04"},{"lineNumber":139,"author":{"gitId":"JuneNita"},"content":"        System.out.println(breakLine() + \"\\tThese are the tasks you have (\" + tasks.size() + \" tasks):\");","lastModifiedDate":"2023-02-04"},{"lineNumber":140,"author":{"gitId":"JuneNita"},"content":"        int order \u003d 1;","lastModifiedDate":"2023-02-04"},{"lineNumber":141,"author":{"gitId":"JuneNita"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-02-04"},{"lineNumber":142,"author":{"gitId":"JuneNita"},"content":"            System.out.print(\"\\t\" + order + \". \" + task.toString() + \u0027\\n\u0027);","lastModifiedDate":"2023-02-04"},{"lineNumber":143,"author":{"gitId":"JuneNita"},"content":"            order++;","lastModifiedDate":"2023-02-04"},{"lineNumber":144,"author":{"gitId":"JuneNita"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":145,"author":{"gitId":"JuneNita"},"content":"        System.out.print(breakLine());","lastModifiedDate":"2023-01-21"},{"lineNumber":146,"author":{"gitId":"JuneNita"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":147,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":148,"author":{"gitId":"JuneNita"},"content":"    // mark the task","lastModifiedDate":"2023-01-21"},{"lineNumber":149,"author":{"gitId":"JuneNita"},"content":"    private static void markTask(String taskNumber) {","lastModifiedDate":"2023-02-04"},{"lineNumber":150,"author":{"gitId":"JuneNita"},"content":"        int taskIdx \u003d Integer.parseInt(taskNumber) - 1;","lastModifiedDate":"2023-02-04"},{"lineNumber":151,"author":{"gitId":"JuneNita"},"content":"        try {","lastModifiedDate":"2023-02-04"},{"lineNumber":152,"author":{"gitId":"JuneNita"},"content":"            Task currentTask \u003d tasks.get(taskIdx);","lastModifiedDate":"2023-02-04"},{"lineNumber":153,"author":{"gitId":"JuneNita"},"content":"            currentTask.mark();","lastModifiedDate":"2023-02-04"},{"lineNumber":154,"author":{"gitId":"JuneNita"},"content":"            System.out.print(breakLine()","lastModifiedDate":"2023-01-21"},{"lineNumber":155,"author":{"gitId":"JuneNita"},"content":"                    + \"\\tNice! I\u0027ve marked this task as done :D\\n\\t\\t\"","lastModifiedDate":"2023-02-04"},{"lineNumber":156,"author":{"gitId":"JuneNita"},"content":"                    + currentTask + \u0027\\n\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":157,"author":{"gitId":"JuneNita"},"content":"                    + breakLine());","lastModifiedDate":"2023-01-21"},{"lineNumber":158,"author":{"gitId":"JuneNita"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-04"},{"lineNumber":159,"author":{"gitId":"JuneNita"},"content":"            System.out.print(breakLine()","lastModifiedDate":"2023-02-04"},{"lineNumber":160,"author":{"gitId":"JuneNita"},"content":"                    + \"\\t(!) Invalid task number. Please try again :(\\n\"","lastModifiedDate":"2023-02-04"},{"lineNumber":161,"author":{"gitId":"JuneNita"},"content":"                    + breakLine());","lastModifiedDate":"2023-02-04"},{"lineNumber":162,"author":{"gitId":"JuneNita"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":163,"author":{"gitId":"JuneNita"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":164,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":165,"author":{"gitId":"JuneNita"},"content":"    // unmark the task","lastModifiedDate":"2023-01-21"},{"lineNumber":166,"author":{"gitId":"JuneNita"},"content":"    private static void unmarkTask(String taskNumber) {","lastModifiedDate":"2023-02-04"},{"lineNumber":167,"author":{"gitId":"JuneNita"},"content":"        int taskIdx \u003d Integer.parseInt(taskNumber) - 1;","lastModifiedDate":"2023-02-04"},{"lineNumber":168,"author":{"gitId":"JuneNita"},"content":"        try {","lastModifiedDate":"2023-02-04"},{"lineNumber":169,"author":{"gitId":"JuneNita"},"content":"            Task currentTask \u003d tasks.get(taskIdx);","lastModifiedDate":"2023-02-04"},{"lineNumber":170,"author":{"gitId":"JuneNita"},"content":"            currentTask.unmark();","lastModifiedDate":"2023-02-13"},{"lineNumber":171,"author":{"gitId":"JuneNita"},"content":"            System.out.print(breakLine()","lastModifiedDate":"2023-01-21"},{"lineNumber":172,"author":{"gitId":"JuneNita"},"content":"                    + \"\\tOh. I\u0027ve unmarked this task as not done yet :(\\n\\t\"","lastModifiedDate":"2023-02-04"},{"lineNumber":173,"author":{"gitId":"JuneNita"},"content":"                    + currentTask + \u0027\\n\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":174,"author":{"gitId":"JuneNita"},"content":"                    + breakLine());","lastModifiedDate":"2023-01-21"},{"lineNumber":175,"author":{"gitId":"JuneNita"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-04"},{"lineNumber":176,"author":{"gitId":"JuneNita"},"content":"            System.out.print(breakLine()","lastModifiedDate":"2023-02-04"},{"lineNumber":177,"author":{"gitId":"JuneNita"},"content":"                    + \"\\t(!) Invalid task number. Please try again :(\\n\"","lastModifiedDate":"2023-02-04"},{"lineNumber":178,"author":{"gitId":"JuneNita"},"content":"                    + breakLine());","lastModifiedDate":"2023-02-04"},{"lineNumber":179,"author":{"gitId":"JuneNita"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":180,"author":{"gitId":"JuneNita"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":181,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":182,"author":{"gitId":"JuneNita"},"content":"    // delete Task","lastModifiedDate":"2023-02-13"},{"lineNumber":183,"author":{"gitId":"JuneNita"},"content":"    private static void deleteTask(String taskNumber) {","lastModifiedDate":"2023-02-13"},{"lineNumber":184,"author":{"gitId":"JuneNita"},"content":"        int taskIdx \u003d Integer.parseInt(taskNumber) - 1;","lastModifiedDate":"2023-02-13"},{"lineNumber":185,"author":{"gitId":"JuneNita"},"content":"        try {","lastModifiedDate":"2023-02-13"},{"lineNumber":186,"author":{"gitId":"JuneNita"},"content":"            Task currentTask \u003d tasks.get(taskIdx);","lastModifiedDate":"2023-02-13"},{"lineNumber":187,"author":{"gitId":"JuneNita"},"content":"            tasks.remove(taskIdx);","lastModifiedDate":"2023-02-13"},{"lineNumber":188,"author":{"gitId":"JuneNita"},"content":"            System.out.println(breakLine()","lastModifiedDate":"2023-02-13"},{"lineNumber":189,"author":{"gitId":"JuneNita"},"content":"                    + \"\\tOk! I\u0027ve deleted the task :D\\n\\t\\t\"","lastModifiedDate":"2023-02-13"},{"lineNumber":190,"author":{"gitId":"JuneNita"},"content":"                    + currentTask);","lastModifiedDate":"2023-02-13"},{"lineNumber":191,"author":{"gitId":"JuneNita"},"content":"            System.out.print(\"\\tThere are \" + tasks.size() + \" remaining tasks.\\n\"","lastModifiedDate":"2023-02-13"},{"lineNumber":192,"author":{"gitId":"JuneNita"},"content":"                    + breakLine());","lastModifiedDate":"2023-02-13"},{"lineNumber":193,"author":{"gitId":"JuneNita"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":194,"author":{"gitId":"JuneNita"},"content":"            System.out.print(breakLine()","lastModifiedDate":"2023-02-13"},{"lineNumber":195,"author":{"gitId":"JuneNita"},"content":"                    + \"\\t(!) Invalid task number. Please try again :(\\n\"","lastModifiedDate":"2023-02-13"},{"lineNumber":196,"author":{"gitId":"JuneNita"},"content":"                    + breakLine());","lastModifiedDate":"2023-02-13"},{"lineNumber":197,"author":{"gitId":"JuneNita"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":198,"author":{"gitId":"JuneNita"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":199,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":200,"author":{"gitId":"JuneNita"},"content":"    // read input","lastModifiedDate":"2023-01-21"},{"lineNumber":201,"author":{"gitId":"JuneNita"},"content":"    private static String readInput() {","lastModifiedDate":"2023-02-04"},{"lineNumber":202,"author":{"gitId":"JuneNita"},"content":"        System.out.print(\"\u003e\u003e \");","lastModifiedDate":"2023-01-21"},{"lineNumber":203,"author":{"gitId":"JuneNita"},"content":"        return in.nextLine();","lastModifiedDate":"2023-01-21"},{"lineNumber":204,"author":{"gitId":"JuneNita"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":205,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":206,"author":{"gitId":"JuneNita"},"content":"    // write data to a file","lastModifiedDate":"2023-02-13"},{"lineNumber":207,"author":{"gitId":"JuneNita"},"content":"    private static void saveDataToFile() {","lastModifiedDate":"2023-02-13"},{"lineNumber":208,"author":{"gitId":"JuneNita"},"content":"        try {","lastModifiedDate":"2023-02-13"},{"lineNumber":209,"author":{"gitId":"JuneNita"},"content":"            FileWriter fw \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2023-02-13"},{"lineNumber":210,"author":{"gitId":"JuneNita"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-02-13"},{"lineNumber":211,"author":{"gitId":"JuneNita"},"content":"                fw.write(task.toFileFormat());","lastModifiedDate":"2023-02-13"},{"lineNumber":212,"author":{"gitId":"JuneNita"},"content":"            }","lastModifiedDate":"2023-02-13"},{"lineNumber":213,"author":{"gitId":"JuneNita"},"content":"            fw.close();","lastModifiedDate":"2023-02-13"},{"lineNumber":214,"author":{"gitId":"JuneNita"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":215,"author":{"gitId":"JuneNita"},"content":"            System.out.print(\"\\t(!) IOException Error : save the data to the file.\\n\" + breakLine());","lastModifiedDate":"2023-02-13"},{"lineNumber":216,"author":{"gitId":"JuneNita"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":217,"author":{"gitId":"JuneNita"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":218,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":219,"author":{"gitId":"JuneNita"},"content":"    // exit","lastModifiedDate":"2023-01-31"},{"lineNumber":220,"author":{"gitId":"JuneNita"},"content":"    private static void exit() {","lastModifiedDate":"2023-02-04"},{"lineNumber":221,"author":{"gitId":"JuneNita"},"content":"        System.out.print(breakLine()","lastModifiedDate":"2023-01-31"},{"lineNumber":222,"author":{"gitId":"JuneNita"},"content":"                + \"\\tBa-bye. Hope to see you again soon :)\\n\"","lastModifiedDate":"2023-02-04"},{"lineNumber":223,"author":{"gitId":"JuneNita"},"content":"                + breakLine());","lastModifiedDate":"2023-01-31"},{"lineNumber":224,"author":{"gitId":"JuneNita"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":225,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":226,"author":{"gitId":"JuneNita"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-17"},{"lineNumber":227,"author":{"gitId":"JuneNita"},"content":"        String command, input;","lastModifiedDate":"2023-02-04"},{"lineNumber":228,"author":{"gitId":"JuneNita"},"content":"        String[] inputArgs;","lastModifiedDate":"2023-02-04"},{"lineNumber":229,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":230,"author":{"gitId":"JuneNita"},"content":"        printDuke();","lastModifiedDate":"2023-01-17"},{"lineNumber":231,"author":{"gitId":"JuneNita"},"content":"        greet();","lastModifiedDate":"2023-01-17"},{"lineNumber":232,"author":{"gitId":"JuneNita"},"content":"        getFileData();","lastModifiedDate":"2023-02-13"},{"lineNumber":233,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":234,"author":{"gitId":"JuneNita"},"content":"        while (true) {","lastModifiedDate":"2023-01-31"},{"lineNumber":235,"author":{"gitId":"JuneNita"},"content":"            input \u003d readInput();","lastModifiedDate":"2023-01-31"},{"lineNumber":236,"author":{"gitId":"JuneNita"},"content":"            inputArgs \u003d input.split(\" \", 2);","lastModifiedDate":"2023-02-04"},{"lineNumber":237,"author":{"gitId":"JuneNita"},"content":"            command \u003d inputArgs[0];","lastModifiedDate":"2023-02-04"},{"lineNumber":238,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":239,"author":{"gitId":"JuneNita"},"content":"            try {","lastModifiedDate":"2023-02-04"},{"lineNumber":240,"author":{"gitId":"JuneNita"},"content":"                if (command.equals(\"bye\")) {","lastModifiedDate":"2023-02-04"},{"lineNumber":241,"author":{"gitId":"JuneNita"},"content":"                    break;","lastModifiedDate":"2023-01-31"},{"lineNumber":242,"author":{"gitId":"JuneNita"},"content":"                } else if (command.equals(\"list\")) {","lastModifiedDate":"2023-02-04"},{"lineNumber":243,"author":{"gitId":"JuneNita"},"content":"                    listTask();","lastModifiedDate":"2023-02-04"},{"lineNumber":244,"author":{"gitId":"JuneNita"},"content":"                } else if (command.equals(\"mark\")) {","lastModifiedDate":"2023-02-04"},{"lineNumber":245,"author":{"gitId":"JuneNita"},"content":"                    markTask(inputArgs[1]);","lastModifiedDate":"2023-02-04"},{"lineNumber":246,"author":{"gitId":"JuneNita"},"content":"                } else if (command.equals(\"unmark\")) {","lastModifiedDate":"2023-02-04"},{"lineNumber":247,"author":{"gitId":"JuneNita"},"content":"                    unmarkTask(inputArgs[1]);","lastModifiedDate":"2023-02-04"},{"lineNumber":248,"author":{"gitId":"JuneNita"},"content":"                } else if (command.equals(\"todo\")) {","lastModifiedDate":"2023-02-04"},{"lineNumber":249,"author":{"gitId":"JuneNita"},"content":"                    addTodo(inputArgs[1]);","lastModifiedDate":"2023-02-04"},{"lineNumber":250,"author":{"gitId":"JuneNita"},"content":"                } else if (command.equals(\"deadline\")) {","lastModifiedDate":"2023-02-04"},{"lineNumber":251,"author":{"gitId":"JuneNita"},"content":"                    addDeadline(inputArgs[1]);","lastModifiedDate":"2023-02-04"},{"lineNumber":252,"author":{"gitId":"JuneNita"},"content":"                } else if (command.equals(\"event\")) {","lastModifiedDate":"2023-02-04"},{"lineNumber":253,"author":{"gitId":"JuneNita"},"content":"                    addEvent(inputArgs[1]);","lastModifiedDate":"2023-02-04"},{"lineNumber":254,"author":{"gitId":"JuneNita"},"content":"                } else if (command.equals(\"delete\")) {","lastModifiedDate":"2023-02-13"},{"lineNumber":255,"author":{"gitId":"JuneNita"},"content":"                    deleteTask(inputArgs[1]);","lastModifiedDate":"2023-02-13"},{"lineNumber":256,"author":{"gitId":"JuneNita"},"content":"                } else {","lastModifiedDate":"2023-02-04"},{"lineNumber":257,"author":{"gitId":"JuneNita"},"content":"                    System.out.print(breakLine()","lastModifiedDate":"2023-02-04"},{"lineNumber":258,"author":{"gitId":"JuneNita"},"content":"                            + \"\\t(!) Invalid command :(\\n\"","lastModifiedDate":"2023-02-04"},{"lineNumber":259,"author":{"gitId":"JuneNita"},"content":"                            + breakLine());","lastModifiedDate":"2023-02-04"},{"lineNumber":260,"author":{"gitId":"JuneNita"},"content":"                }","lastModifiedDate":"2023-02-04"},{"lineNumber":261,"author":{"gitId":"JuneNita"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-04"},{"lineNumber":262,"author":{"gitId":"JuneNita"},"content":"                System.out.print(breakLine()","lastModifiedDate":"2023-02-04"},{"lineNumber":263,"author":{"gitId":"JuneNita"},"content":"                        + \"\\t(!) Please provide the appropriate information for the task\\n\"","lastModifiedDate":"2023-02-04"},{"lineNumber":264,"author":{"gitId":"JuneNita"},"content":"                        + breakLine());","lastModifiedDate":"2023-02-04"},{"lineNumber":265,"author":{"gitId":"JuneNita"},"content":"            }","lastModifiedDate":"2023-01-21"},{"lineNumber":266,"author":{"gitId":"JuneNita"},"content":"            saveDataToFile();","lastModifiedDate":"2023-02-13"},{"lineNumber":267,"author":{"gitId":"JuneNita"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":268,"author":{"gitId":"JuneNita"},"content":"        exit();","lastModifiedDate":"2023-02-04"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"JuneNita":262,"-":8}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JuneNita"},"content":"package duke.task;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"JuneNita"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"JuneNita"},"content":"    protected String deadline;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"JuneNita"},"content":"    public Deadline(String description, String deadline) {","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"JuneNita"},"content":"        super(description);","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"JuneNita"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"JuneNita"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"JuneNita"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"JuneNita"},"content":"    public String toFileFormat() {","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"JuneNita"},"content":"        return \"D | \" + isMarked + \" | \" + description + \" | \" + deadline + \"\\n\";","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"JuneNita"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"JuneNita"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"JuneNita"},"content":"    public String toString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"JuneNita"},"content":"        return \"[D]\" + super.getStatusIcon() + \" \" + super.description + \"(by:\" + deadline + \")\";","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"JuneNita"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"JuneNita"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"JuneNita":20}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JuneNita"},"content":"package duke.task;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"JuneNita"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"JuneNita"},"content":"    protected String from;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"JuneNita"},"content":"    protected String to;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"JuneNita"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"JuneNita"},"content":"        super(description);","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"JuneNita"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"JuneNita"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"JuneNita"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"JuneNita"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"JuneNita"},"content":"    public String toFileFormat() {","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"JuneNita"},"content":"        return \"E | \" + isMarked + \" | \" + description + \" | \" + from + \" | \" + to + \"\\n\";","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"JuneNita"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"JuneNita"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"JuneNita"},"content":"    public String toString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"JuneNita"},"content":"        return \"[E]\" + super.getStatusIcon() + \" \" + super.description + \"(from:\" + from + \"to:\" + to + \")\";","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"JuneNita"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"JuneNita"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"JuneNita":22}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JuneNita"},"content":"package duke.task;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"JuneNita"},"content":"import jdk.jfr.Percentage;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"JuneNita"},"content":"public class Task {","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"JuneNita"},"content":"    protected String description;","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"JuneNita"},"content":"    protected boolean isMarked;","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"JuneNita"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"JuneNita"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"JuneNita"},"content":"        this.isMarked \u003d false;","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"JuneNita"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"JuneNita"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"JuneNita"},"content":"        return (isMarked ? \"[/]\" : \"[ ]\");","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"JuneNita"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"JuneNita"},"content":"    public void mark() {","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"JuneNita"},"content":"        this.isMarked \u003d true;","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"JuneNita"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"JuneNita"},"content":"    public void unmark() {","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"JuneNita"},"content":"        this.isMarked \u003d false;","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"JuneNita"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":25,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"JuneNita"},"content":"    public String toFileFormat() {","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"JuneNita"},"content":"        return description;","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"JuneNita"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"JuneNita"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"JuneNita":29}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JuneNita"},"content":"package duke.task;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"JuneNita"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"JuneNita"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"JuneNita"},"content":"        super(description);","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"JuneNita"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"JuneNita"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"JuneNita"},"content":"    public String toFileFormat() {","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"JuneNita"},"content":"        return \"T | \" + isMarked + \" | \" + description + \"\\n\";","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"JuneNita"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"JuneNita"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"JuneNita"},"content":"    public String toString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"JuneNita"},"content":"        return \"[T]\" + getStatusIcon() + \" \" + description;","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"JuneNita"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"JuneNita"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"JuneNita":17}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"JuneNita"},"content":"deadline taskNumberOne #by Friday 11pm","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"JuneNita"},"content":"event taskNumberTwo #from 11 July #to 23 Aug","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"JuneNita"},"content":"list","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"JuneNita"},"content":"todo taskNumberThree","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"JuneNita"},"content":"todo taskNumberFour","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"JuneNita"},"content":"mark 3","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"JuneNita"},"content":"list","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"JuneNita"},"content":"mark 1","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"JuneNita"},"content":"list","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"JuneNita"},"content":"randomCommand","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"JuneNita"},"content":"mark 100","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"JuneNita"},"content":"event","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"JuneNita"},"content":"bye","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"JuneNita":13}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"JuneNita"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\task\\*.java","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"JuneNita"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"JuneNita":2,"-":19}}]
