[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Ansenn"},"content":"# CLoM User Guide","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"Ansenn"},"content":"CLoM is a tool to help you keep track of tasks, aiding you in your daily life. It is a CLI application which aims to improve your everyday life!","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"Ansenn"},"content":"### Storing of Tasks","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"Ansenn"},"content":"Tasks can be added and stored locally to be viewed each time the user opens the application","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Ansenn"},"content":"### View all of your tasks","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Ansenn"},"content":"See everything that is stored in the task list","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"Ansenn"},"content":"### Mark tasks as Done/Not Done","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"Ansenn"},"content":"Tasks can be marked as done/not done, and this will be shown visually on the CLI as well","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"Ansenn"},"content":"### Find tasks by using a keyword","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":19,"author":{"gitId":"Ansenn"},"content":"Find all the tasks in the list which match the keyword the user specified","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":21,"author":{"gitId":"Ansenn"},"content":"### Delete task","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":23,"author":{"gitId":"Ansenn"},"content":"Delete the task specified by the index","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"Ansenn"},"content":"### Add Task - Todo","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"Ansenn"},"content":"Add a todo task into the task list","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"Ansenn"},"content":"### Add Task - Deadline","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"Ansenn"},"content":"Add a deadline task into the task list","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"Ansenn"},"content":"### Add Task - Event","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"Ansenn"},"content":"Add an event task into the task list","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":39,"author":{"gitId":"Ansenn"},"content":"### `list` - Displays the entire task list.","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"Ansenn"},"content":"Displays the entire task list, with the task type, status and dates as well.","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"Ansenn"},"content":"Format: ","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"Ansenn"},"content":"`list`","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"Ansenn"},"content":"Example of usage: ","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"Ansenn"},"content":"`list`","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"Ansenn"},"content":"Expected outcome: Task list is displayed","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"Ansenn"},"content":"Description of the outcome.","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"Ansenn"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"Ansenn"},"content":"        \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"Ansenn"},"content":"        Here are the tasks in your list:","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"Ansenn"},"content":"        1.[T][ ] desc","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"Ansenn"},"content":"        2.[D][ ] desc (by:  date)","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"Ansenn"},"content":"        3.[E][ ] desc (from: fromdate to: todate) ","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"Ansenn"},"content":"        \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"Ansenn"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"Ansenn"},"content":"### `todo` - Adds a new todo task in the task list","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"Ansenn"},"content":"Adds a new task of type todo. Task description is specified by the user after the keyword \"todo\".","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"Ansenn"},"content":"Format: ","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"Ansenn"},"content":"`todo \u003ctask_desc\u003e`","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"Ansenn"},"content":"Example of usage: ","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"Ansenn"},"content":"`todo Assignment 3`","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"Ansenn"},"content":"Expected outcome: Todo task is added to the task list. ","lastModifiedDate":"2023-03-03"},{"lineNumber":76,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"Ansenn"},"content":"Description of the outcome.","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"Ansenn"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":80,"author":{"gitId":"Ansenn"},"content":"        \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"Ansenn"},"content":"        Got it. I\u0027ve added this task:","lastModifiedDate":"2023-03-03"},{"lineNumber":82,"author":{"gitId":"Ansenn"},"content":"        Assignment 3","lastModifiedDate":"2023-03-03"},{"lineNumber":83,"author":{"gitId":"Ansenn"},"content":"        You have a total of 4 tasks in the list   ","lastModifiedDate":"2023-03-03"},{"lineNumber":84,"author":{"gitId":"Ansenn"},"content":"        \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-03"},{"lineNumber":85,"author":{"gitId":"Ansenn"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":86,"author":{"gitId":"Ansenn"},"content":"### `deadline` - Adds a new deadline task in the task list","lastModifiedDate":"2023-03-03"},{"lineNumber":87,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":88,"author":{"gitId":"Ansenn"},"content":"Adds a new task of type deadline. Task description is specified by the user after the keyword \"deadline\".","lastModifiedDate":"2023-03-03"},{"lineNumber":89,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":90,"author":{"gitId":"Ansenn"},"content":"Format: ","lastModifiedDate":"2023-03-03"},{"lineNumber":91,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":92,"author":{"gitId":"Ansenn"},"content":"`deadline \u003ctask_desc\u003e /by \u003cby_date\u003e`","lastModifiedDate":"2023-03-03"},{"lineNumber":93,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":94,"author":{"gitId":"Ansenn"},"content":"Example of usage: ","lastModifiedDate":"2023-03-03"},{"lineNumber":95,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":96,"author":{"gitId":"Ansenn"},"content":"`deadline Eat Buffet /by 4 Jan`","lastModifiedDate":"2023-03-03"},{"lineNumber":97,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":98,"author":{"gitId":"Ansenn"},"content":"Expected outcome: Deadline task is added to the task list. ","lastModifiedDate":"2023-03-03"},{"lineNumber":99,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":100,"author":{"gitId":"Ansenn"},"content":"Description of the outcome.","lastModifiedDate":"2023-03-03"},{"lineNumber":101,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":102,"author":{"gitId":"Ansenn"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":103,"author":{"gitId":"Ansenn"},"content":"        \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-03"},{"lineNumber":104,"author":{"gitId":"Ansenn"},"content":"        Got it. I\u0027ve added this task:","lastModifiedDate":"2023-03-03"},{"lineNumber":105,"author":{"gitId":"Ansenn"},"content":"        Eat buffet (by: thursday)","lastModifiedDate":"2023-03-03"},{"lineNumber":106,"author":{"gitId":"Ansenn"},"content":"        You have a total of 5 tasks in the list   ","lastModifiedDate":"2023-03-03"},{"lineNumber":107,"author":{"gitId":"Ansenn"},"content":"        \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-03"},{"lineNumber":108,"author":{"gitId":"Ansenn"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":109,"author":{"gitId":"Ansenn"},"content":"### `event` - Adds a new event task in the task list","lastModifiedDate":"2023-03-03"},{"lineNumber":110,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":111,"author":{"gitId":"Ansenn"},"content":"Adds a new task of type event. Task description is specified by the user after the keyword \"event\".","lastModifiedDate":"2023-03-03"},{"lineNumber":112,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":113,"author":{"gitId":"Ansenn"},"content":"Format: ","lastModifiedDate":"2023-03-03"},{"lineNumber":114,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":115,"author":{"gitId":"Ansenn"},"content":"`event \u003ctask_desc\u003e /from \u003cfrom_date\u003e /to \u003cto_date\u003e`","lastModifiedDate":"2023-03-03"},{"lineNumber":116,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":117,"author":{"gitId":"Ansenn"},"content":"Example of usage: ","lastModifiedDate":"2023-03-03"},{"lineNumber":118,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":119,"author":{"gitId":"Ansenn"},"content":"`event Celebrate holidays /from 3 Jan /to 5 Feb`","lastModifiedDate":"2023-03-03"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":121,"author":{"gitId":"Ansenn"},"content":"Expected outcome: Event task is added to the task list. ","lastModifiedDate":"2023-03-03"},{"lineNumber":122,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":123,"author":{"gitId":"Ansenn"},"content":"Description of the outcome.","lastModifiedDate":"2023-03-03"},{"lineNumber":124,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":125,"author":{"gitId":"Ansenn"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":126,"author":{"gitId":"Ansenn"},"content":"        \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d        ","lastModifiedDate":"2023-03-03"},{"lineNumber":127,"author":{"gitId":"Ansenn"},"content":"        Got it. I\u0027ve added this task:","lastModifiedDate":"2023-03-03"},{"lineNumber":128,"author":{"gitId":"Ansenn"},"content":"        [E][ ] Celebrate holidays (from: today to: thursday)","lastModifiedDate":"2023-03-03"},{"lineNumber":129,"author":{"gitId":"Ansenn"},"content":"        You have a total of 4 tasks in the list","lastModifiedDate":"2023-03-03"},{"lineNumber":130,"author":{"gitId":"Ansenn"},"content":"        \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d ","lastModifiedDate":"2023-03-03"},{"lineNumber":131,"author":{"gitId":"Ansenn"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":132,"author":{"gitId":"Ansenn"},"content":"### `mark` - Marks a task in the task list as done","lastModifiedDate":"2023-03-03"},{"lineNumber":133,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":134,"author":{"gitId":"Ansenn"},"content":"Marks a task as done. Task number is specified after the keyword \"mark\".","lastModifiedDate":"2023-03-03"},{"lineNumber":135,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":136,"author":{"gitId":"Ansenn"},"content":"Format: ","lastModifiedDate":"2023-03-03"},{"lineNumber":137,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":138,"author":{"gitId":"Ansenn"},"content":"`mark \u003ctask_number\u003e`","lastModifiedDate":"2023-03-03"},{"lineNumber":139,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":140,"author":{"gitId":"Ansenn"},"content":"Example of usage: ","lastModifiedDate":"2023-03-03"},{"lineNumber":141,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":142,"author":{"gitId":"Ansenn"},"content":"`mark 3`","lastModifiedDate":"2023-03-03"},{"lineNumber":143,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":144,"author":{"gitId":"Ansenn"},"content":"Expected outcome: Task Number 3 is marked as done. ","lastModifiedDate":"2023-03-03"},{"lineNumber":145,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":146,"author":{"gitId":"Ansenn"},"content":"Description of the outcome.","lastModifiedDate":"2023-03-03"},{"lineNumber":147,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":148,"author":{"gitId":"Ansenn"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":149,"author":{"gitId":"Ansenn"},"content":"        \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-03"},{"lineNumber":150,"author":{"gitId":"Ansenn"},"content":"        Nice! I\u0027ve marked this task as done:      ","lastModifiedDate":"2023-03-03"},{"lineNumber":151,"author":{"gitId":"Ansenn"},"content":"        [E][X] Celebrate holidays (from: today to: thursday)","lastModifiedDate":"2023-03-03"},{"lineNumber":152,"author":{"gitId":"Ansenn"},"content":"        \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-03"},{"lineNumber":153,"author":{"gitId":"Ansenn"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":154,"author":{"gitId":"Ansenn"},"content":"### `unmark` - Marks a task in the task list as not done","lastModifiedDate":"2023-03-03"},{"lineNumber":155,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":156,"author":{"gitId":"Ansenn"},"content":"Marks a task as not done. Task number is specified after the keyword \"unmark\".","lastModifiedDate":"2023-03-03"},{"lineNumber":157,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":158,"author":{"gitId":"Ansenn"},"content":"Format: ","lastModifiedDate":"2023-03-03"},{"lineNumber":159,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":160,"author":{"gitId":"Ansenn"},"content":"`unmark \u003ctask_number\u003e`","lastModifiedDate":"2023-03-03"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":162,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2023-03-03"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":164,"author":{"gitId":"Ansenn"},"content":"`unmark 3`","lastModifiedDate":"2023-03-03"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":166,"author":{"gitId":"Ansenn"},"content":"Expected outcome: Task Number 3 is marked as not done.  ","lastModifiedDate":"2023-03-03"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":168,"author":{"gitId":"-"},"content":"Description of the outcome.","lastModifiedDate":"2023-03-03"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":170,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":171,"author":{"gitId":"Ansenn"},"content":"        \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-03"},{"lineNumber":172,"author":{"gitId":"Ansenn"},"content":"        OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2023-03-03"},{"lineNumber":173,"author":{"gitId":"Ansenn"},"content":"        [E][ ] Celebrate holidays (from: today to: thursday)","lastModifiedDate":"2023-03-03"},{"lineNumber":174,"author":{"gitId":"Ansenn"},"content":"        \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-03"},{"lineNumber":175,"author":{"gitId":"Ansenn"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":176,"author":{"gitId":"Ansenn"},"content":"### `delete` - Deletes a task in the task list","lastModifiedDate":"2023-03-03"},{"lineNumber":177,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":178,"author":{"gitId":"Ansenn"},"content":"Deletes a task from the task list. Task number is specified after the keyword \"delete\"","lastModifiedDate":"2023-03-03"},{"lineNumber":179,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":180,"author":{"gitId":"Ansenn"},"content":"Format: ","lastModifiedDate":"2023-03-03"},{"lineNumber":181,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":182,"author":{"gitId":"Ansenn"},"content":"`delete \u003ctask_number\u003e`","lastModifiedDate":"2023-03-03"},{"lineNumber":183,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":184,"author":{"gitId":"Ansenn"},"content":"Example of usage: ","lastModifiedDate":"2023-03-03"},{"lineNumber":185,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":186,"author":{"gitId":"Ansenn"},"content":"`delete 2`","lastModifiedDate":"2023-03-03"},{"lineNumber":187,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":188,"author":{"gitId":"Ansenn"},"content":"Expected outcome: Task Number 2 is deleted from the task list.   ","lastModifiedDate":"2023-03-03"},{"lineNumber":189,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":190,"author":{"gitId":"Ansenn"},"content":"Description of the outcome.","lastModifiedDate":"2023-03-03"},{"lineNumber":191,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":192,"author":{"gitId":"Ansenn"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":193,"author":{"gitId":"Ansenn"},"content":"        \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-03"},{"lineNumber":194,"author":{"gitId":"Ansenn"},"content":"        Woosh! This task is now gone:","lastModifiedDate":"2023-03-03"},{"lineNumber":195,"author":{"gitId":"Ansenn"},"content":"        [D][ ] study CS2113 (by:  Friday)","lastModifiedDate":"2023-03-03"},{"lineNumber":196,"author":{"gitId":"Ansenn"},"content":"        \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-03"},{"lineNumber":197,"author":{"gitId":"Ansenn"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":198,"author":{"gitId":"Ansenn"},"content":"### `find` - Finds all tasks in the task list which match the specified keyword","lastModifiedDate":"2023-03-03"},{"lineNumber":199,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":200,"author":{"gitId":"Ansenn"},"content":"Finds all tasks in the task list which match the specified keyword. Keyword to be searhed is specified after the keyword \"find\". Keyword to be searched is case sensitive.","lastModifiedDate":"2023-03-03"},{"lineNumber":201,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":202,"author":{"gitId":"Ansenn"},"content":"Format: ","lastModifiedDate":"2023-03-03"},{"lineNumber":203,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":204,"author":{"gitId":"Ansenn"},"content":"`find \u003ckeyword\u003e`","lastModifiedDate":"2023-03-03"},{"lineNumber":205,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":206,"author":{"gitId":"Ansenn"},"content":"Example of usage: ","lastModifiedDate":"2023-03-03"},{"lineNumber":207,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":208,"author":{"gitId":"Ansenn"},"content":"`find assignment`","lastModifiedDate":"2023-03-03"},{"lineNumber":209,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":210,"author":{"gitId":"Ansenn"},"content":"Expected outcome: Task Number 3 is marked as done.  ","lastModifiedDate":"2023-03-03"},{"lineNumber":211,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":212,"author":{"gitId":"Ansenn"},"content":"Description of the outcome.","lastModifiedDate":"2023-03-03"},{"lineNumber":213,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":214,"author":{"gitId":"Ansenn"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":215,"author":{"gitId":"Ansenn"},"content":"        \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-03"},{"lineNumber":216,"author":{"gitId":"Ansenn"},"content":"        Here\u0027s what I found :","lastModifiedDate":"2023-03-03"},{"lineNumber":217,"author":{"gitId":"Ansenn"},"content":"        1. [T][ ] Assignment 1","lastModifiedDate":"2023-03-03"},{"lineNumber":218,"author":{"gitId":"Ansenn"},"content":"        2. [D][X] Assignment 6 (by: 4 March)","lastModifiedDate":"2023-03-03"},{"lineNumber":219,"author":{"gitId":"Ansenn"},"content":"        \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-03"},{"lineNumber":220,"author":{"gitId":"Ansenn"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":221,"author":{"gitId":"Ansenn"},"content":"### `bye` - Exits the application","lastModifiedDate":"2023-03-03"},{"lineNumber":222,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":223,"author":{"gitId":"Ansenn"},"content":"Exits the application. Tasks added or deleted are saved locally.","lastModifiedDate":"2023-03-03"},{"lineNumber":224,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":225,"author":{"gitId":"Ansenn"},"content":"Format: ","lastModifiedDate":"2023-03-03"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":227,"author":{"gitId":"Ansenn"},"content":"`bye`","lastModifiedDate":"2023-03-03"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2019-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":231,"author":{"gitId":"Ansenn"},"content":"`bye`","lastModifiedDate":"2023-03-03"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":233,"author":{"gitId":"Ansenn"},"content":"Expected outcome: Application exits.  ","lastModifiedDate":"2023-03-03"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"Description of the outcome.","lastModifiedDate":"2021-07-17"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":237,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":238,"author":{"gitId":"Ansenn"},"content":"        \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-03"},{"lineNumber":239,"author":{"gitId":"Ansenn"},"content":"        Bye. Hope to see you again soon!","lastModifiedDate":"2023-03-03"},{"lineNumber":240,"author":{"gitId":"Ansenn"},"content":"        \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-03"},{"lineNumber":241,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"Ansenn":214,"-":27}},{"path":"duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Ansenn"},"content":"T|0|desc","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"Ansenn"},"content":"D|0|desc| date","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"Ansenn"},"content":"E|0|desc|fromdate| todate","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"Ansenn":3}},{"path":"src/main/java/Commands/FileCommands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ansenn"},"content":"package Commands;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"Ansenn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Ansenn"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Ansenn"},"content":"import java.io.File;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"Ansenn"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"Ansenn"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Ansenn"},"content":"import Tasks.Task;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Ansenn"},"content":"import Tasks.Deadline;","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"Ansenn"},"content":"import Tasks.Event;","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"Ansenn"},"content":"import Tasks.Todo;","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"Ansenn"},"content":"public class FileCommands {","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"Ansenn"},"content":"    public static File dukeFile \u003d new File(\"duke.txt\");","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"Ansenn"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"Ansenn"},"content":"     * Reads the existing file data of the user\u0027s tasks, and loads the data into the current task list","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"Ansenn"},"content":"     * @param taskList the ArrayList of the user\u0027s tasks","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"Ansenn"},"content":"     * @throws IOException","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"Ansenn"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"Ansenn"},"content":"    public static void readFileData(ArrayList\u003cTask\u003e taskList) throws IOException {","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"Ansenn"},"content":"        // Check if duke.txt file exists, and creates a new one if it does not, e.g.","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"Ansenn"},"content":"        // First time user","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"Ansenn"},"content":"        if (!dukeFile.exists()) {","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"Ansenn"},"content":"            dukeFile.createNewFile();","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"Ansenn"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"Ansenn"},"content":"        Scanner scan \u003d new Scanner(dukeFile); // read contents","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"Ansenn"},"content":"        while (scan.hasNext()) {","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"Ansenn"},"content":"            String[] splitLine \u003d scan.nextLine().split(\"\\\\|\"); // Split by / to get the relevant task details","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"Ansenn"},"content":"            String taskType \u003d splitLine[0];","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"Ansenn"},"content":"            String taskStatus \u003d splitLine[1];","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"Ansenn"},"content":"            String taskDescription \u003d splitLine[2];","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"Ansenn"},"content":"            switch (taskType) {","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"Ansenn"},"content":"                case \"T\":","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"Ansenn"},"content":"                    taskList.add(new Todo(taskDescription));","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"Ansenn"},"content":"                    break;","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"Ansenn"},"content":"                case \"D\":","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"Ansenn"},"content":"                    //String[] commandDeadlineSplit \u003d taskDescription.split(\" /by\", 2);","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"Ansenn"},"content":"                    String deadlineDescription \u003d taskDescription; // Get description of the user input","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"Ansenn"},"content":"                    String byDate \u003d splitLine[3]; // Deadline of the user input","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"Ansenn"},"content":"                    taskList.add(new Deadline(deadlineDescription, byDate));","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"Ansenn"},"content":"                    break;","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"Ansenn"},"content":"                case \"E\":","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"Ansenn"},"content":"                    //String[] commandEventSplit \u003d taskDescription.split(\" /from | /to\");","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"Ansenn"},"content":"                    String eventDescription \u003d taskDescription; // Get event description from user input","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"Ansenn"},"content":"                    String eventFromDate \u003d splitLine[3]; // Get event from date","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"Ansenn"},"content":"                    String eventToDate \u003d splitLine[4]; // Get event to date","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"Ansenn"},"content":"                    taskList.add(new Event(eventDescription, eventFromDate, eventToDate)); // Add the new event to","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"Ansenn"},"content":"                                                                                           // arraylist","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"Ansenn"},"content":"                    break;","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"Ansenn"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"Ansenn"},"content":"            if (taskStatus.equals(\"1\")) {","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"Ansenn"},"content":"                Task newTask \u003d taskList.get(taskList.size() - 1);","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"Ansenn"},"content":"                newTask.markAsDone(); // mark those done as done","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"Ansenn"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"Ansenn"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"Ansenn"},"content":"        scan.close();","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"Ansenn"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"Ansenn"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"Ansenn"},"content":"     * Saves the user\u0027s tasks into the duke.txt file ","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"Ansenn"},"content":"     * ","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"Ansenn"},"content":"     * @param taskList the ArrayList of the user\u0027s tasks","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"Ansenn"},"content":"     * @throws IOException","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"Ansenn"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"Ansenn"},"content":"    public static void saveFile(ArrayList\u003cTask\u003e taskList) throws IOException {","lastModifiedDate":"2023-03-03"},{"lineNumber":76,"author":{"gitId":"Ansenn"},"content":"        try {","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"Ansenn"},"content":"            FileWriter fw \u003d new FileWriter(\"duke.txt\");","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"Ansenn"},"content":"            // Format tasks to save","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"Ansenn"},"content":"            for (int taskNumber \u003d 0; taskNumber \u003c taskList.size(); taskNumber++) {","lastModifiedDate":"2023-03-03"},{"lineNumber":80,"author":{"gitId":"Ansenn"},"content":"                Task saveFormat \u003d taskList.get(taskNumber);","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"Ansenn"},"content":"                fw.write(saveFormat.formatTask() + \"\\n\");","lastModifiedDate":"2023-03-03"},{"lineNumber":82,"author":{"gitId":"Ansenn"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":83,"author":{"gitId":"Ansenn"},"content":"            fw.close();","lastModifiedDate":"2023-03-03"},{"lineNumber":84,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":85,"author":{"gitId":"Ansenn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-03"},{"lineNumber":86,"author":{"gitId":"Ansenn"},"content":"            System.out.println(\"\\tOops! Please try again.\");","lastModifiedDate":"2023-03-03"},{"lineNumber":87,"author":{"gitId":"Ansenn"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":88,"author":{"gitId":"Ansenn"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":89,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":90,"author":{"gitId":"Ansenn"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"Ansenn":90}},{"path":"src/main/java/Commands/PrintCommands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ansenn"},"content":"package Commands;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"Ansenn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"Ansenn"},"content":"import Exceptions.InvalidFindStringException;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Ansenn"},"content":"import Tasks.Task;","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"Ansenn"},"content":"public class PrintCommands {","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"Ansenn"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Ansenn"},"content":"     * Prints the welcome message for the user","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"Ansenn"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"Ansenn"},"content":"    public static void printWelcomeMessage() {","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"Ansenn"},"content":"        String logo \u003d \"\\t ____   _              __    __ \\n\"","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"Ansenn"},"content":"                + \"\\t/  __\\\\ | |     _____  |   \\\\/   |\\n\"","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"Ansenn"},"content":"                + \"\\t| /    | |    /  _  \\\\ | |\\\\  /| |\\n\"","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"Ansenn"},"content":"                + \"\\t| \\\\ __ | |___ | |_| | | | \\\\/ | |\\n\"","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"Ansenn"},"content":"                + \"\\t\\\\____/ |____/ \\\\_____/ |_|    |_|\\n\";","lastModifiedDate":"2023-02-27"},{"lineNumber":19,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"Ansenn"},"content":"        System.out.println(\"\\tHello from\\n\" + logo);","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"Ansenn"},"content":"        System.out.println(\"\\tHello! I\u0027m CLoM!\\n\");","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"Ansenn"},"content":"        System.out.print(\"\\tWhat can I do for you?\\n\");","lastModifiedDate":"2023-02-27"},{"lineNumber":24,"author":{"gitId":"Ansenn"},"content":"        PrintCommands.printLine();","lastModifiedDate":"2023-02-27"},{"lineNumber":25,"author":{"gitId":"Ansenn"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":26,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"Ansenn"},"content":"    protected static void printLine() {","lastModifiedDate":"2023-02-27"},{"lineNumber":28,"author":{"gitId":"Ansenn"},"content":"        System.out.println(\"\\t\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-02-27"},{"lineNumber":29,"author":{"gitId":"Ansenn"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":30,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":31,"author":{"gitId":"Ansenn"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"Ansenn"},"content":"     * Prints the exit message when user closes the application","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"Ansenn"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"Ansenn"},"content":"    public static void printExitMessage() {","lastModifiedDate":"2023-02-27"},{"lineNumber":35,"author":{"gitId":"Ansenn"},"content":"        printLine();","lastModifiedDate":"2023-02-27"},{"lineNumber":36,"author":{"gitId":"Ansenn"},"content":"        System.out.print(\"\\tBye. Hope to see you again soon!\\n\");","lastModifiedDate":"2023-02-27"},{"lineNumber":37,"author":{"gitId":"Ansenn"},"content":"        printLine();","lastModifiedDate":"2023-02-27"},{"lineNumber":38,"author":{"gitId":"Ansenn"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":39,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":40,"author":{"gitId":"Ansenn"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"Ansenn"},"content":"     * Prints the taskList line by line","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"Ansenn"},"content":"     * ","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"Ansenn"},"content":"     * @param taskList the ArrayList of the user\u0027s tasks","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"Ansenn"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"Ansenn"},"content":"    public static void printList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-03-02"},{"lineNumber":46,"author":{"gitId":"Ansenn"},"content":"        printLine();","lastModifiedDate":"2023-02-27"},{"lineNumber":47,"author":{"gitId":"Ansenn"},"content":"        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2023-03-02"},{"lineNumber":48,"author":{"gitId":"Ansenn"},"content":"            System.out.println(\"You don\u0027t have any tasks added.\");","lastModifiedDate":"2023-03-02"},{"lineNumber":49,"author":{"gitId":"Ansenn"},"content":"        } else {","lastModifiedDate":"2023-03-02"},{"lineNumber":50,"author":{"gitId":"Ansenn"},"content":"            System.out.println(\"\\tHere are the tasks in your list:\");","lastModifiedDate":"2023-02-27"},{"lineNumber":51,"author":{"gitId":"Ansenn"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) { // 0-base","lastModifiedDate":"2023-03-02"},{"lineNumber":52,"author":{"gitId":"Ansenn"},"content":"                System.out.println(\"\\t\" + (i + 1) + \".\" + taskList.get(i).getDescription());","lastModifiedDate":"2023-03-02"},{"lineNumber":53,"author":{"gitId":"Ansenn"},"content":"            }","lastModifiedDate":"2023-03-02"},{"lineNumber":54,"author":{"gitId":"Ansenn"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":55,"author":{"gitId":"Ansenn"},"content":"        printLine();","lastModifiedDate":"2023-02-27"},{"lineNumber":56,"author":{"gitId":"Ansenn"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":57,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":58,"author":{"gitId":"Ansenn"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"Ansenn"},"content":"     * Prints the number of tasks in the task list","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"Ansenn"},"content":"     * ","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"Ansenn"},"content":"     * @param taskList the ArrayList of the user\u0027s tasks","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"Ansenn"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"Ansenn"},"content":"    public static void printNumberOfTasks(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-03-02"},{"lineNumber":64,"author":{"gitId":"Ansenn"},"content":"        if (taskList.size() \u003d\u003d 1) {","lastModifiedDate":"2023-03-02"},{"lineNumber":65,"author":{"gitId":"Ansenn"},"content":"            System.out.println(\"\\tYou have a total of \" + taskList.size() + \" task in the list\");","lastModifiedDate":"2023-03-02"},{"lineNumber":66,"author":{"gitId":"Ansenn"},"content":"        } else {","lastModifiedDate":"2023-02-27"},{"lineNumber":67,"author":{"gitId":"Ansenn"},"content":"            System.out.println(\"\\tYou have a total of \" + taskList.size() + \" tasks in the list\");","lastModifiedDate":"2023-03-02"},{"lineNumber":68,"author":{"gitId":"Ansenn"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":69,"author":{"gitId":"Ansenn"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":70,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":71,"author":{"gitId":"Ansenn"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"Ansenn"},"content":"     * Prints the relevant message for tasks of type \"todo\"","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"Ansenn"},"content":"     * ","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"Ansenn"},"content":"     * @param taskList the ArrayList of the user\u0027s tasks","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"Ansenn"},"content":"     * @param todoDescription description of the task, of type todo","lastModifiedDate":"2023-03-03"},{"lineNumber":76,"author":{"gitId":"Ansenn"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"Ansenn"},"content":"    public static void printTodoMessage(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"Ansenn"},"content":"        printLine();","lastModifiedDate":"2023-02-27"},{"lineNumber":79,"author":{"gitId":"Ansenn"},"content":"        System.out.println(\"\\tGot it. I\u0027ve added this task: \");","lastModifiedDate":"2023-02-27"},{"lineNumber":80,"author":{"gitId":"Ansenn"},"content":"        System.out.println((\"\\t\" + taskList.get(taskList.size() - 1).getDescription()));","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"Ansenn"},"content":"        printNumberOfTasks(taskList);","lastModifiedDate":"2023-03-02"},{"lineNumber":82,"author":{"gitId":"Ansenn"},"content":"        printLine();","lastModifiedDate":"2023-02-27"},{"lineNumber":83,"author":{"gitId":"Ansenn"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":84,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":85,"author":{"gitId":"Ansenn"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":86,"author":{"gitId":"Ansenn"},"content":"     * Prints the relevant message for tasks of type \"deadline\"","lastModifiedDate":"2023-03-03"},{"lineNumber":87,"author":{"gitId":"Ansenn"},"content":"     * ","lastModifiedDate":"2023-03-03"},{"lineNumber":88,"author":{"gitId":"Ansenn"},"content":"     * @param taskList the ArrayList of the user\u0027s tasks","lastModifiedDate":"2023-03-03"},{"lineNumber":89,"author":{"gitId":"Ansenn"},"content":"     * @param deadlineDescription description of the task, of type deadline","lastModifiedDate":"2023-03-03"},{"lineNumber":90,"author":{"gitId":"Ansenn"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":91,"author":{"gitId":"Ansenn"},"content":"    public static void printDeadlineMessage(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-03-03"},{"lineNumber":92,"author":{"gitId":"Ansenn"},"content":"        printLine();","lastModifiedDate":"2023-02-27"},{"lineNumber":93,"author":{"gitId":"Ansenn"},"content":"        System.out.println(\"\\tGot it. I\u0027ve added this task: \");","lastModifiedDate":"2023-02-27"},{"lineNumber":94,"author":{"gitId":"Ansenn"},"content":"        System.out.println((\"\\t\" + taskList.get(taskList.size() - 1).getDescription()));","lastModifiedDate":"2023-03-03"},{"lineNumber":95,"author":{"gitId":"Ansenn"},"content":"        printNumberOfTasks(taskList);","lastModifiedDate":"2023-03-02"},{"lineNumber":96,"author":{"gitId":"Ansenn"},"content":"        printLine();","lastModifiedDate":"2023-02-27"},{"lineNumber":97,"author":{"gitId":"Ansenn"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":98,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":99,"author":{"gitId":"Ansenn"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":100,"author":{"gitId":"Ansenn"},"content":"     * Prints the relevant message for tasks of type \"event\"","lastModifiedDate":"2023-03-03"},{"lineNumber":101,"author":{"gitId":"Ansenn"},"content":"     * ","lastModifiedDate":"2023-03-03"},{"lineNumber":102,"author":{"gitId":"Ansenn"},"content":"     * @param taskList the ArrayList of the user\u0027s tasks","lastModifiedDate":"2023-03-03"},{"lineNumber":103,"author":{"gitId":"Ansenn"},"content":"     * @param eventDescription description of the task, of type event","lastModifiedDate":"2023-03-03"},{"lineNumber":104,"author":{"gitId":"Ansenn"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":105,"author":{"gitId":"Ansenn"},"content":"    public static void printEventMessage(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-03-03"},{"lineNumber":106,"author":{"gitId":"Ansenn"},"content":"        printLine();","lastModifiedDate":"2023-02-27"},{"lineNumber":107,"author":{"gitId":"Ansenn"},"content":"        System.out.println(\"\\tGot it. I\u0027ve added this task: \");","lastModifiedDate":"2023-02-27"},{"lineNumber":108,"author":{"gitId":"Ansenn"},"content":"        System.out.println((\"\\t\" + taskList.get(taskList.size() - 1).getDescription()));","lastModifiedDate":"2023-03-03"},{"lineNumber":109,"author":{"gitId":"Ansenn"},"content":"        printNumberOfTasks(taskList);","lastModifiedDate":"2023-03-02"},{"lineNumber":110,"author":{"gitId":"Ansenn"},"content":"        printLine();","lastModifiedDate":"2023-02-27"},{"lineNumber":111,"author":{"gitId":"Ansenn"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":112,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":113,"author":{"gitId":"Ansenn"},"content":"    public static void printHelp() {","lastModifiedDate":"2023-02-27"},{"lineNumber":114,"author":{"gitId":"Ansenn"},"content":"        printLine();","lastModifiedDate":"2023-02-27"},{"lineNumber":115,"author":{"gitId":"Ansenn"},"content":"        System.out.println(\"Will Implement Soon!\");","lastModifiedDate":"2023-02-27"},{"lineNumber":116,"author":{"gitId":"Ansenn"},"content":"        printLine();","lastModifiedDate":"2023-02-27"},{"lineNumber":117,"author":{"gitId":"Ansenn"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":118,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":119,"author":{"gitId":"Ansenn"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":120,"author":{"gitId":"Ansenn"},"content":"     * Prints the relevant message after deleting a task from the task list","lastModifiedDate":"2023-03-03"},{"lineNumber":121,"author":{"gitId":"Ansenn"},"content":"     * ","lastModifiedDate":"2023-03-03"},{"lineNumber":122,"author":{"gitId":"Ansenn"},"content":"     * @param taskList the ArrayList of the user\u0027s tasks","lastModifiedDate":"2023-03-03"},{"lineNumber":123,"author":{"gitId":"Ansenn"},"content":"     * @param taskIndex index of the task to be marked as done","lastModifiedDate":"2023-03-03"},{"lineNumber":124,"author":{"gitId":"Ansenn"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":125,"author":{"gitId":"Ansenn"},"content":"    public static void printDeleteMessage(ArrayList\u003cTask\u003e taskList, int taskIndex) {","lastModifiedDate":"2023-03-03"},{"lineNumber":126,"author":{"gitId":"Ansenn"},"content":"        printLine();","lastModifiedDate":"2023-03-03"},{"lineNumber":127,"author":{"gitId":"Ansenn"},"content":"        System.out.println(\"\\tWoosh! This task is now gone: \");","lastModifiedDate":"2023-03-03"},{"lineNumber":128,"author":{"gitId":"Ansenn"},"content":"        System.out.println(","lastModifiedDate":"2023-03-03"},{"lineNumber":129,"author":{"gitId":"Ansenn"},"content":"                \"\\t\" + taskList.get(taskIndex).getDescription());","lastModifiedDate":"2023-03-03"},{"lineNumber":130,"author":{"gitId":"Ansenn"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":131,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":132,"author":{"gitId":"Ansenn"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":133,"author":{"gitId":"Ansenn"},"content":"     * Prints the tasks that contain the keyword which the user had specified","lastModifiedDate":"2023-03-03"},{"lineNumber":134,"author":{"gitId":"Ansenn"},"content":"     * ","lastModifiedDate":"2023-03-03"},{"lineNumber":135,"author":{"gitId":"Ansenn"},"content":"     * @param taskList the ArrayList of the user\u0027s tasks","lastModifiedDate":"2023-03-03"},{"lineNumber":136,"author":{"gitId":"Ansenn"},"content":"     * @param command String[] of the user\u0027s input","lastModifiedDate":"2023-03-03"},{"lineNumber":137,"author":{"gitId":"Ansenn"},"content":"     * @throws InvalidFindStringException","lastModifiedDate":"2023-03-03"},{"lineNumber":138,"author":{"gitId":"Ansenn"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":139,"author":{"gitId":"Ansenn"},"content":"    public static void printFindMessage(ArrayList\u003cTask\u003e taskList, String[] command) throws InvalidFindStringException {","lastModifiedDate":"2023-03-03"},{"lineNumber":140,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":141,"author":{"gitId":"Ansenn"},"content":"        printLine();","lastModifiedDate":"2023-03-02"},{"lineNumber":142,"author":{"gitId":"Ansenn"},"content":"        int taskNumber \u003d 1;","lastModifiedDate":"2023-03-03"},{"lineNumber":143,"author":{"gitId":"Ansenn"},"content":"        System.out.println(\"\\tHere\u0027s what I found :\");","lastModifiedDate":"2023-03-03"},{"lineNumber":144,"author":{"gitId":"Ansenn"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2023-03-03"},{"lineNumber":145,"author":{"gitId":"Ansenn"},"content":"            if (task.getDescription().contains(command[1])) {","lastModifiedDate":"2023-03-03"},{"lineNumber":146,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":147,"author":{"gitId":"Ansenn"},"content":"                switch (task.getType()) {","lastModifiedDate":"2023-03-03"},{"lineNumber":148,"author":{"gitId":"Ansenn"},"content":"                    case \"[T]\":","lastModifiedDate":"2023-03-03"},{"lineNumber":149,"author":{"gitId":"Ansenn"},"content":"                        System.out.println(\"\\t\" + taskNumber + \". \" + task.getDescription());","lastModifiedDate":"2023-03-03"},{"lineNumber":150,"author":{"gitId":"Ansenn"},"content":"                        break;","lastModifiedDate":"2023-03-03"},{"lineNumber":151,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":152,"author":{"gitId":"Ansenn"},"content":"                    case \"[D]\":","lastModifiedDate":"2023-03-03"},{"lineNumber":153,"author":{"gitId":"Ansenn"},"content":"                        System.out.println(\"\\t\" + taskNumber + \". \" + task.getDescription());","lastModifiedDate":"2023-03-03"},{"lineNumber":154,"author":{"gitId":"Ansenn"},"content":"                        break;","lastModifiedDate":"2023-03-03"},{"lineNumber":155,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":156,"author":{"gitId":"Ansenn"},"content":"                    case \"[E]\":","lastModifiedDate":"2023-03-03"},{"lineNumber":157,"author":{"gitId":"Ansenn"},"content":"                        System.out.println(\"\\t\" + taskNumber + \". \" + task.getDescription());","lastModifiedDate":"2023-03-03"},{"lineNumber":158,"author":{"gitId":"Ansenn"},"content":"                        break;","lastModifiedDate":"2023-03-03"},{"lineNumber":159,"author":{"gitId":"Ansenn"},"content":"                }","lastModifiedDate":"2023-03-03"},{"lineNumber":160,"author":{"gitId":"Ansenn"},"content":"                taskNumber++;","lastModifiedDate":"2023-03-03"},{"lineNumber":161,"author":{"gitId":"Ansenn"},"content":"            } else {","lastModifiedDate":"2023-03-03"},{"lineNumber":162,"author":{"gitId":"Ansenn"},"content":"                throw new InvalidFindStringException(","lastModifiedDate":"2023-03-03"},{"lineNumber":163,"author":{"gitId":"Ansenn"},"content":"                        \"\\tUh oh! The task you are looking for does not exist, or there were some issues. Please try again.\");","lastModifiedDate":"2023-03-03"},{"lineNumber":164,"author":{"gitId":"Ansenn"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":165,"author":{"gitId":"Ansenn"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":166,"author":{"gitId":"Ansenn"},"content":"        printLine();","lastModifiedDate":"2023-03-02"},{"lineNumber":167,"author":{"gitId":"Ansenn"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":168,"author":{"gitId":"Ansenn"},"content":"}","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"Ansenn":168}},{"path":"src/main/java/Commands/TaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ansenn"},"content":"package Commands;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"Ansenn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"Ansenn"},"content":"import Exceptions.InvalidFindStringException;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Ansenn"},"content":"import Exceptions.InvalidTaskDescription;","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"Ansenn"},"content":"import Exceptions.InvalidTaskNumberException;","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"Ansenn"},"content":"import Exceptions.MissingDescriptionException;","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"Ansenn"},"content":"import Tasks.Deadline;","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"Ansenn"},"content":"import Tasks.Event;","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"Ansenn"},"content":"import Tasks.Task;","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"Ansenn"},"content":"import Tasks.Todo;","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"Ansenn"},"content":"public class TaskCommand {","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"Ansenn"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"Ansenn"},"content":"     * Marks the task at taskIndex as done","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"Ansenn"},"content":"     * ","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"Ansenn"},"content":"     * @param taskList  the ArrayList of the user\u0027s tasks","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"Ansenn"},"content":"     * @param command   String[] of the user\u0027s input","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"Ansenn"},"content":"     * @param taskIndex index of the task to be marked as done","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"Ansenn"},"content":"     * @throws InvalidTaskNumberException","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"Ansenn"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"Ansenn"},"content":"    public static void markTask(ArrayList\u003cTask\u003e taskList, String[] command, int taskIndex)","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"Ansenn"},"content":"            throws InvalidTaskNumberException {","lastModifiedDate":"2023-02-27"},{"lineNumber":26,"author":{"gitId":"Ansenn"},"content":"        // mark task as done","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":28,"author":{"gitId":"Ansenn"},"content":"        if (taskList \u003d\u003d null || taskIndex \u003c 0 || taskIndex \u003e\u003d taskList.size() || taskList.get(taskIndex) \u003d\u003d null) {","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"Ansenn"},"content":"            throw new InvalidTaskNumberException(\"Invalid task index\");","lastModifiedDate":"2023-02-27"},{"lineNumber":30,"author":{"gitId":"Ansenn"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":31,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":32,"author":{"gitId":"Ansenn"},"content":"        PrintCommands.printLine();","lastModifiedDate":"2023-02-27"},{"lineNumber":33,"author":{"gitId":"Ansenn"},"content":"        System.out.println(\"\\tNice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-02-27"},{"lineNumber":34,"author":{"gitId":"Ansenn"},"content":"        taskList.get(taskIndex).markAsDone();","lastModifiedDate":"2023-03-02"},{"lineNumber":35,"author":{"gitId":"Ansenn"},"content":"        System.out.println(\"\\t\" + taskList.get(taskIndex).getType() + taskList.get(taskIndex).getStatusIcon()","lastModifiedDate":"2023-03-02"},{"lineNumber":36,"author":{"gitId":"Ansenn"},"content":"                + taskList.get(taskIndex).description);","lastModifiedDate":"2023-03-02"},{"lineNumber":37,"author":{"gitId":"Ansenn"},"content":"        PrintCommands.printLine();","lastModifiedDate":"2023-02-27"},{"lineNumber":38,"author":{"gitId":"Ansenn"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":39,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":40,"author":{"gitId":"Ansenn"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"Ansenn"},"content":"     * Marks the task at taskIndex as not done","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"Ansenn"},"content":"     * ","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"Ansenn"},"content":"     * @param taskList  the ArrayList of the user\u0027s tasks","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"Ansenn"},"content":"     * @param command   String[] of the user\u0027s input","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"Ansenn"},"content":"     * @param taskIndex index of the task to be marked as not done","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"Ansenn"},"content":"     * @throws InvalidTaskNumberException","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"Ansenn"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"Ansenn"},"content":"    public static void unmarkTask(ArrayList\u003cTask\u003e taskList, String[] command, int taskIndex)","lastModifiedDate":"2023-03-02"},{"lineNumber":49,"author":{"gitId":"Ansenn"},"content":"            throws InvalidTaskNumberException {","lastModifiedDate":"2023-02-27"},{"lineNumber":50,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":51,"author":{"gitId":"Ansenn"},"content":"        if (taskList \u003d\u003d null || taskIndex \u003c 0 || taskIndex \u003e\u003d taskList.size() || taskList.get(taskIndex) \u003d\u003d null) {","lastModifiedDate":"2023-03-02"},{"lineNumber":52,"author":{"gitId":"Ansenn"},"content":"            throw new InvalidTaskNumberException(\"Invalid task index\");","lastModifiedDate":"2023-02-27"},{"lineNumber":53,"author":{"gitId":"Ansenn"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":54,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":55,"author":{"gitId":"Ansenn"},"content":"        PrintCommands.printLine();","lastModifiedDate":"2023-02-27"},{"lineNumber":56,"author":{"gitId":"Ansenn"},"content":"        System.out.println(\"\\tOK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-02-27"},{"lineNumber":57,"author":{"gitId":"Ansenn"},"content":"        taskList.get(taskIndex).markAsNotDone();","lastModifiedDate":"2023-03-02"},{"lineNumber":58,"author":{"gitId":"Ansenn"},"content":"        System.out.println(","lastModifiedDate":"2023-02-27"},{"lineNumber":59,"author":{"gitId":"Ansenn"},"content":"                \"\\t\" + taskList.get(taskIndex).getType() + taskList.get(taskIndex).getStatusIcon()","lastModifiedDate":"2023-03-02"},{"lineNumber":60,"author":{"gitId":"Ansenn"},"content":"                        + taskList.get(taskIndex).description);","lastModifiedDate":"2023-03-02"},{"lineNumber":61,"author":{"gitId":"Ansenn"},"content":"        PrintCommands.printLine();","lastModifiedDate":"2023-02-27"},{"lineNumber":62,"author":{"gitId":"Ansenn"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":63,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":64,"author":{"gitId":"Ansenn"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"Ansenn"},"content":"     * Adds a new task to the ArrayList, of type \"todo\"","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"Ansenn"},"content":"     * ","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"Ansenn"},"content":"     * @param taskList the ArrayList of the user\u0027s tasks","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"Ansenn"},"content":"     * @param command  String[] of the user\u0027s input","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"Ansenn"},"content":"     * @throws MissingDescriptionException","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"Ansenn"},"content":"     * @throws InvalidTaskDescription","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"Ansenn"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"Ansenn"},"content":"    public static void todoTask(ArrayList\u003cTask\u003e taskList, String[] command)","lastModifiedDate":"2023-03-02"},{"lineNumber":73,"author":{"gitId":"Ansenn"},"content":"            throws MissingDescriptionException, InvalidTaskDescription {","lastModifiedDate":"2023-03-02"},{"lineNumber":74,"author":{"gitId":"Ansenn"},"content":"        if (!isValidTodo(command)) {","lastModifiedDate":"2023-02-27"},{"lineNumber":75,"author":{"gitId":"Ansenn"},"content":"            throw new MissingDescriptionException(null);","lastModifiedDate":"2023-02-27"},{"lineNumber":76,"author":{"gitId":"Ansenn"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":77,"author":{"gitId":"Ansenn"},"content":"        String todoDescription \u003d command[1]; // Get the description of the task from the user input","lastModifiedDate":"2023-03-02"},{"lineNumber":78,"author":{"gitId":"Ansenn"},"content":"        taskList.add(new Todo(todoDescription)); // Add the new todo task to the arraylist","lastModifiedDate":"2023-03-02"},{"lineNumber":79,"author":{"gitId":"Ansenn"},"content":"        PrintCommands.printTodoMessage(taskList);","lastModifiedDate":"2023-03-03"},{"lineNumber":80,"author":{"gitId":"Ansenn"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":81,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":82,"author":{"gitId":"Ansenn"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":83,"author":{"gitId":"Ansenn"},"content":"     * Adds a new task to the ArrayList, of type \"deadline\"","lastModifiedDate":"2023-03-03"},{"lineNumber":84,"author":{"gitId":"Ansenn"},"content":"     * ","lastModifiedDate":"2023-03-03"},{"lineNumber":85,"author":{"gitId":"Ansenn"},"content":"     * @param taskList the ArrayList of the user\u0027s tasks","lastModifiedDate":"2023-03-03"},{"lineNumber":86,"author":{"gitId":"Ansenn"},"content":"     * @param command  String[] of the user\u0027s input","lastModifiedDate":"2023-03-03"},{"lineNumber":87,"author":{"gitId":"Ansenn"},"content":"     * @throws MissingDescriptionException","lastModifiedDate":"2023-03-03"},{"lineNumber":88,"author":{"gitId":"Ansenn"},"content":"     * @throws InvalidTaskDescription","lastModifiedDate":"2023-03-03"},{"lineNumber":89,"author":{"gitId":"Ansenn"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":90,"author":{"gitId":"Ansenn"},"content":"    public static void deadlineTask(ArrayList\u003cTask\u003e taskList, String[] command)","lastModifiedDate":"2023-03-02"},{"lineNumber":91,"author":{"gitId":"Ansenn"},"content":"            throws MissingDescriptionException, InvalidTaskDescription {","lastModifiedDate":"2023-03-02"},{"lineNumber":92,"author":{"gitId":"Ansenn"},"content":"        if (!isValidDeadline(command)) {","lastModifiedDate":"2023-02-27"},{"lineNumber":93,"author":{"gitId":"Ansenn"},"content":"            throw new MissingDescriptionException(null);","lastModifiedDate":"2023-02-27"},{"lineNumber":94,"author":{"gitId":"Ansenn"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":95,"author":{"gitId":"Ansenn"},"content":"        String[] deadlineCommand \u003d command[1].split(\" /by\", 2);","lastModifiedDate":"2023-02-27"},{"lineNumber":96,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":97,"author":{"gitId":"Ansenn"},"content":"        String deadlineDescription \u003d deadlineCommand[0]; // Get description of the user input","lastModifiedDate":"2023-03-02"},{"lineNumber":98,"author":{"gitId":"Ansenn"},"content":"        String byDate \u003d deadlineCommand[1]; // Deadline of the user input","lastModifiedDate":"2023-03-02"},{"lineNumber":99,"author":{"gitId":"Ansenn"},"content":"        taskList.add(new Deadline(deadlineDescription, byDate)); // Add the new deadline to the arraylist","lastModifiedDate":"2023-03-02"},{"lineNumber":100,"author":{"gitId":"Ansenn"},"content":"        PrintCommands.printDeadlineMessage(taskList);","lastModifiedDate":"2023-03-03"},{"lineNumber":101,"author":{"gitId":"Ansenn"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":102,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":103,"author":{"gitId":"Ansenn"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":104,"author":{"gitId":"Ansenn"},"content":"     * Adds a new task to the ArrayList, of type \"event\"","lastModifiedDate":"2023-03-03"},{"lineNumber":105,"author":{"gitId":"Ansenn"},"content":"     * ","lastModifiedDate":"2023-03-03"},{"lineNumber":106,"author":{"gitId":"Ansenn"},"content":"     * @param taskList the ArrayList of the user\u0027s tasks","lastModifiedDate":"2023-03-03"},{"lineNumber":107,"author":{"gitId":"Ansenn"},"content":"     * @param command  String[] of the user\u0027s input","lastModifiedDate":"2023-03-03"},{"lineNumber":108,"author":{"gitId":"Ansenn"},"content":"     * @throws MissingDescriptionException","lastModifiedDate":"2023-03-03"},{"lineNumber":109,"author":{"gitId":"Ansenn"},"content":"     * @throws InvalidTaskDescription","lastModifiedDate":"2023-03-03"},{"lineNumber":110,"author":{"gitId":"Ansenn"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":111,"author":{"gitId":"Ansenn"},"content":"    public static void eventTask(ArrayList\u003cTask\u003e taskList, String[] command)","lastModifiedDate":"2023-03-02"},{"lineNumber":112,"author":{"gitId":"Ansenn"},"content":"            throws MissingDescriptionException, InvalidTaskDescription {","lastModifiedDate":"2023-03-02"},{"lineNumber":113,"author":{"gitId":"Ansenn"},"content":"        if (!isValidEvent(command)) {","lastModifiedDate":"2023-02-27"},{"lineNumber":114,"author":{"gitId":"Ansenn"},"content":"            throw new MissingDescriptionException(null);","lastModifiedDate":"2023-02-27"},{"lineNumber":115,"author":{"gitId":"Ansenn"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":116,"author":{"gitId":"Ansenn"},"content":"        String[] eventCommand \u003d command[1].split(\" /from | /to\");","lastModifiedDate":"2023-02-27"},{"lineNumber":117,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":118,"author":{"gitId":"Ansenn"},"content":"        String eventDescription \u003d eventCommand[0]; // Get event description from user input","lastModifiedDate":"2023-03-02"},{"lineNumber":119,"author":{"gitId":"Ansenn"},"content":"        String eventFromDate \u003d eventCommand[1]; // Get event from date","lastModifiedDate":"2023-03-02"},{"lineNumber":120,"author":{"gitId":"Ansenn"},"content":"        String eventToDate \u003d eventCommand[2]; // Get event to date","lastModifiedDate":"2023-03-02"},{"lineNumber":121,"author":{"gitId":"Ansenn"},"content":"        taskList.add(new Event(eventDescription, eventFromDate, eventToDate)); // Add the new event to the arraylist","lastModifiedDate":"2023-03-02"},{"lineNumber":122,"author":{"gitId":"Ansenn"},"content":"        PrintCommands.printEventMessage(taskList);","lastModifiedDate":"2023-03-03"},{"lineNumber":123,"author":{"gitId":"Ansenn"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":124,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":125,"author":{"gitId":"Ansenn"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":126,"author":{"gitId":"Ansenn"},"content":"     * Retrives the index of the Task from the user input, for various purposes","lastModifiedDate":"2023-03-03"},{"lineNumber":127,"author":{"gitId":"Ansenn"},"content":"     * ","lastModifiedDate":"2023-03-03"},{"lineNumber":128,"author":{"gitId":"Ansenn"},"content":"     * @param taskList the ArrayList of the user\u0027s tasks","lastModifiedDate":"2023-03-03"},{"lineNumber":129,"author":{"gitId":"Ansenn"},"content":"     * @param command  String[] of the user\u0027s input","lastModifiedDate":"2023-03-03"},{"lineNumber":130,"author":{"gitId":"Ansenn"},"content":"     * @return the index of the task for various commands","lastModifiedDate":"2023-03-03"},{"lineNumber":131,"author":{"gitId":"Ansenn"},"content":"     * @throws InvalidTaskNumberException","lastModifiedDate":"2023-03-03"},{"lineNumber":132,"author":{"gitId":"Ansenn"},"content":"     * @throws NumberFormatException","lastModifiedDate":"2023-03-03"},{"lineNumber":133,"author":{"gitId":"Ansenn"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":134,"author":{"gitId":"Ansenn"},"content":"    public static int getTaskIndex(String[] command, ArrayList\u003cTask\u003e taskList)","lastModifiedDate":"2023-03-02"},{"lineNumber":135,"author":{"gitId":"Ansenn"},"content":"            throws InvalidTaskNumberException, NumberFormatException {","lastModifiedDate":"2023-02-27"},{"lineNumber":136,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":137,"author":{"gitId":"Ansenn"},"content":"        if (command.length \u003c 2) {","lastModifiedDate":"2023-02-27"},{"lineNumber":138,"author":{"gitId":"Ansenn"},"content":"            throw new NumberFormatException();","lastModifiedDate":"2023-02-27"},{"lineNumber":139,"author":{"gitId":"Ansenn"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":140,"author":{"gitId":"Ansenn"},"content":"        int TaskIndex \u003d Integer.parseInt(command[1]) - 1; // 0-base","lastModifiedDate":"2023-02-27"},{"lineNumber":141,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":142,"author":{"gitId":"Ansenn"},"content":"        if (TaskIndex \u003c 0 || TaskIndex \u003e taskList.size()) {","lastModifiedDate":"2023-03-02"},{"lineNumber":143,"author":{"gitId":"Ansenn"},"content":"            throw new InvalidTaskNumberException(null);","lastModifiedDate":"2023-02-27"},{"lineNumber":144,"author":{"gitId":"Ansenn"},"content":"        } else {","lastModifiedDate":"2023-02-27"},{"lineNumber":145,"author":{"gitId":"Ansenn"},"content":"            return TaskIndex;","lastModifiedDate":"2023-02-27"},{"lineNumber":146,"author":{"gitId":"Ansenn"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":147,"author":{"gitId":"Ansenn"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":148,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":149,"author":{"gitId":"Ansenn"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":150,"author":{"gitId":"Ansenn"},"content":"     * Checks if a todo command is valid","lastModifiedDate":"2023-03-03"},{"lineNumber":151,"author":{"gitId":"Ansenn"},"content":"     * ","lastModifiedDate":"2023-03-03"},{"lineNumber":152,"author":{"gitId":"Ansenn"},"content":"     * @param command String[] of the user\u0027s input","lastModifiedDate":"2023-03-03"},{"lineNumber":153,"author":{"gitId":"Ansenn"},"content":"     * @return true if the command is a valid todo","lastModifiedDate":"2023-03-03"},{"lineNumber":154,"author":{"gitId":"Ansenn"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":155,"author":{"gitId":"Ansenn"},"content":"    public static boolean isValidTodo(String[] command) {","lastModifiedDate":"2023-02-27"},{"lineNumber":156,"author":{"gitId":"Ansenn"},"content":"        boolean isValidTodo \u003d true;","lastModifiedDate":"2023-02-27"},{"lineNumber":157,"author":{"gitId":"Ansenn"},"content":"        if (command.length \u003c 2) {","lastModifiedDate":"2023-02-27"},{"lineNumber":158,"author":{"gitId":"Ansenn"},"content":"            isValidTodo \u003d false;","lastModifiedDate":"2023-02-27"},{"lineNumber":159,"author":{"gitId":"Ansenn"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":160,"author":{"gitId":"Ansenn"},"content":"        return isValidTodo;","lastModifiedDate":"2023-02-27"},{"lineNumber":161,"author":{"gitId":"Ansenn"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":162,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":163,"author":{"gitId":"Ansenn"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":164,"author":{"gitId":"Ansenn"},"content":"     * Checks if a deadine command is valid, and in the correct format with all","lastModifiedDate":"2023-03-03"},{"lineNumber":165,"author":{"gitId":"Ansenn"},"content":"     * required parameters","lastModifiedDate":"2023-03-03"},{"lineNumber":166,"author":{"gitId":"Ansenn"},"content":"     * ","lastModifiedDate":"2023-03-03"},{"lineNumber":167,"author":{"gitId":"Ansenn"},"content":"     * @param command String[] of the user\u0027s input","lastModifiedDate":"2023-03-03"},{"lineNumber":168,"author":{"gitId":"Ansenn"},"content":"     * @return true if the command is a valid deadline","lastModifiedDate":"2023-03-03"},{"lineNumber":169,"author":{"gitId":"Ansenn"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":170,"author":{"gitId":"Ansenn"},"content":"    public static boolean isValidDeadline(String[] command) {","lastModifiedDate":"2023-02-27"},{"lineNumber":171,"author":{"gitId":"Ansenn"},"content":"        boolean hasDate \u003d false;","lastModifiedDate":"2023-02-27"},{"lineNumber":172,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":173,"author":{"gitId":"Ansenn"},"content":"        for (String s : command) {","lastModifiedDate":"2023-02-27"},{"lineNumber":174,"author":{"gitId":"Ansenn"},"content":"            if (s.contains(\"/by\")) {","lastModifiedDate":"2023-02-27"},{"lineNumber":175,"author":{"gitId":"Ansenn"},"content":"                hasDate \u003d true;","lastModifiedDate":"2023-02-27"},{"lineNumber":176,"author":{"gitId":"Ansenn"},"content":"            }","lastModifiedDate":"2023-02-27"},{"lineNumber":177,"author":{"gitId":"Ansenn"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":178,"author":{"gitId":"Ansenn"},"content":"        return hasDate;","lastModifiedDate":"2023-02-27"},{"lineNumber":179,"author":{"gitId":"Ansenn"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":180,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":181,"author":{"gitId":"Ansenn"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":182,"author":{"gitId":"Ansenn"},"content":"     * Checks if an event command is valid, and in the correct format with all","lastModifiedDate":"2023-03-03"},{"lineNumber":183,"author":{"gitId":"Ansenn"},"content":"     * required parameters","lastModifiedDate":"2023-03-03"},{"lineNumber":184,"author":{"gitId":"Ansenn"},"content":"     * ","lastModifiedDate":"2023-03-03"},{"lineNumber":185,"author":{"gitId":"Ansenn"},"content":"     * @param command String[] of the user\u0027s input","lastModifiedDate":"2023-03-03"},{"lineNumber":186,"author":{"gitId":"Ansenn"},"content":"     * @return true if the command is a valid event","lastModifiedDate":"2023-03-03"},{"lineNumber":187,"author":{"gitId":"Ansenn"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":188,"author":{"gitId":"Ansenn"},"content":"    public static boolean isValidEvent(String[] command) {","lastModifiedDate":"2023-02-27"},{"lineNumber":189,"author":{"gitId":"Ansenn"},"content":"        boolean hasFromDate \u003d false;","lastModifiedDate":"2023-02-27"},{"lineNumber":190,"author":{"gitId":"Ansenn"},"content":"        boolean hasToDate \u003d false;","lastModifiedDate":"2023-02-27"},{"lineNumber":191,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":192,"author":{"gitId":"Ansenn"},"content":"        for (String s : command) {","lastModifiedDate":"2023-02-27"},{"lineNumber":193,"author":{"gitId":"Ansenn"},"content":"            if (s.contains(\"/from\")) {","lastModifiedDate":"2023-02-27"},{"lineNumber":194,"author":{"gitId":"Ansenn"},"content":"                hasFromDate \u003d true;","lastModifiedDate":"2023-02-27"},{"lineNumber":195,"author":{"gitId":"Ansenn"},"content":"            }","lastModifiedDate":"2023-02-27"},{"lineNumber":196,"author":{"gitId":"Ansenn"},"content":"            if (s.contains(\"/to\")) {","lastModifiedDate":"2023-02-27"},{"lineNumber":197,"author":{"gitId":"Ansenn"},"content":"                hasToDate \u003d true;","lastModifiedDate":"2023-02-27"},{"lineNumber":198,"author":{"gitId":"Ansenn"},"content":"            }","lastModifiedDate":"2023-02-27"},{"lineNumber":199,"author":{"gitId":"Ansenn"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":200,"author":{"gitId":"Ansenn"},"content":"        return hasFromDate \u0026\u0026 hasToDate;","lastModifiedDate":"2023-02-27"},{"lineNumber":201,"author":{"gitId":"Ansenn"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":202,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":203,"author":{"gitId":"Ansenn"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":204,"author":{"gitId":"Ansenn"},"content":"     * Deletes the task at the taskIndex index from the ArrayList taskList","lastModifiedDate":"2023-03-03"},{"lineNumber":205,"author":{"gitId":"Ansenn"},"content":"     * ","lastModifiedDate":"2023-03-03"},{"lineNumber":206,"author":{"gitId":"Ansenn"},"content":"     * @param taskList the ArrayList of the user\u0027s tasks","lastModifiedDate":"2023-03-03"},{"lineNumber":207,"author":{"gitId":"Ansenn"},"content":"     * @param command String[] of the user\u0027s input","lastModifiedDate":"2023-03-03"},{"lineNumber":208,"author":{"gitId":"Ansenn"},"content":"     * @param taskIndex index of the task to be deleted","lastModifiedDate":"2023-03-03"},{"lineNumber":209,"author":{"gitId":"Ansenn"},"content":"     * @throws InvalidTaskNumberException","lastModifiedDate":"2023-03-03"},{"lineNumber":210,"author":{"gitId":"Ansenn"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":211,"author":{"gitId":"Ansenn"},"content":"    public static void deleteTask(ArrayList\u003cTask\u003e taskList, String[] command, int taskIndex)","lastModifiedDate":"2023-03-02"},{"lineNumber":212,"author":{"gitId":"Ansenn"},"content":"            throws InvalidTaskNumberException {","lastModifiedDate":"2023-03-02"},{"lineNumber":213,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":214,"author":{"gitId":"Ansenn"},"content":"        if (taskList \u003d\u003d null || taskIndex \u003c 0 || taskIndex \u003e\u003d taskList.size() || taskList.get(taskIndex) \u003d\u003d null) {","lastModifiedDate":"2023-03-02"},{"lineNumber":215,"author":{"gitId":"Ansenn"},"content":"            throw new InvalidTaskNumberException(\"Invalid task index\");","lastModifiedDate":"2023-03-02"},{"lineNumber":216,"author":{"gitId":"Ansenn"},"content":"        }","lastModifiedDate":"2023-03-02"},{"lineNumber":217,"author":{"gitId":"Ansenn"},"content":"        PrintCommands.printDeleteMessage(taskList, taskIndex);","lastModifiedDate":"2023-03-03"},{"lineNumber":218,"author":{"gitId":"Ansenn"},"content":"        PrintCommands.printLine();","lastModifiedDate":"2023-03-03"},{"lineNumber":219,"author":{"gitId":"Ansenn"},"content":"        taskList.remove(taskIndex); // delete the specified task number","lastModifiedDate":"2023-03-02"},{"lineNumber":220,"author":{"gitId":"Ansenn"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":221,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":222,"author":{"gitId":"Ansenn"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":223,"author":{"gitId":"Ansenn"},"content":"     * Finds the tasks that the user specified","lastModifiedDate":"2023-03-03"},{"lineNumber":224,"author":{"gitId":"Ansenn"},"content":"     * ","lastModifiedDate":"2023-03-03"},{"lineNumber":225,"author":{"gitId":"Ansenn"},"content":"     * @param taskList the ArrayList of the user\u0027s tasks","lastModifiedDate":"2023-03-03"},{"lineNumber":226,"author":{"gitId":"Ansenn"},"content":"     * @param command String[] of the user\u0027s input","lastModifiedDate":"2023-03-03"},{"lineNumber":227,"author":{"gitId":"Ansenn"},"content":"     * @throws InvalidFindStringException","lastModifiedDate":"2023-03-03"},{"lineNumber":228,"author":{"gitId":"Ansenn"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":229,"author":{"gitId":"Ansenn"},"content":"    public static void findTask(ArrayList\u003cTask\u003e taskList, String[] command) throws InvalidFindStringException{","lastModifiedDate":"2023-03-03"},{"lineNumber":230,"author":{"gitId":"Ansenn"},"content":"        try {","lastModifiedDate":"2023-03-03"},{"lineNumber":231,"author":{"gitId":"Ansenn"},"content":"        PrintCommands.printFindMessage(taskList, command);","lastModifiedDate":"2023-03-03"},{"lineNumber":232,"author":{"gitId":"Ansenn"},"content":"        } catch (InvalidFindStringException ifne) {","lastModifiedDate":"2023-03-03"},{"lineNumber":233,"author":{"gitId":"Ansenn"},"content":"            //System.out.println(\"Uh oh! The task you are looking for does not exist, or there were some issues. Please try again.\");","lastModifiedDate":"2023-03-03"},{"lineNumber":234,"author":{"gitId":"Ansenn"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":235,"author":{"gitId":"Ansenn"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":236,"author":{"gitId":"Ansenn"},"content":"}","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"Ansenn":236}},{"path":"src/main/java/Duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ansenn"},"content":"package Duke;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"Ansenn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"Ansenn"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"Ansenn"},"content":"import Commands.PrintCommands;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"Ansenn"},"content":"import Commands.TaskCommand;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"Ansenn"},"content":"import Commands.FileCommands;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Ansenn"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"Ansenn"},"content":"import Exceptions.InvalidFindStringException;","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"Ansenn"},"content":"import Exceptions.InvalidTaskDescription;","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"Ansenn"},"content":"import Exceptions.InvalidTaskNumberException;","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"Ansenn"},"content":"import Exceptions.MissingDescriptionException;","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"Ansenn"},"content":"import Exceptions.NullCommandException;","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"Ansenn"},"content":"import Tasks.Task;","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"Ansenn"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"Ansenn"},"content":"     * Main method to take in User Input and execute the user\u0027s commands","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"Ansenn"},"content":"     * ","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"Ansenn"},"content":"     * @param args","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"Ansenn"},"content":"     * @throws NullCommandException","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"Ansenn"},"content":"     * @throws InvalidTaskDescription","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"Ansenn"},"content":"     * @throws IOException","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"Ansenn"},"content":"     * @throws InvalidFindStringException","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"Ansenn"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"Ansenn"},"content":"    public static void main(String[] args)","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"Ansenn"},"content":"            throws NullCommandException, InvalidTaskDescription, IOException, InvalidFindStringException {","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"Ansenn"},"content":"        PrintCommands.printWelcomeMessage();","lastModifiedDate":"2023-02-27"},{"lineNumber":33,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"Ansenn"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"Ansenn"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e(); // Array of lists","lastModifiedDate":"2023-03-02"},{"lineNumber":37,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":38,"author":{"gitId":"Ansenn"},"content":"        Scanner scan \u003d new Scanner(System.in);","lastModifiedDate":"2023-03-02"},{"lineNumber":39,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":40,"author":{"gitId":"Ansenn"},"content":"        FileCommands.readFileData(taskList); // read past task data","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"Ansenn"},"content":"        while (!isExit) {","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"Ansenn"},"content":"            try {","lastModifiedDate":"2023-03-02"},{"lineNumber":44,"author":{"gitId":"Ansenn"},"content":"                String input \u003d scan.nextLine();","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"Ansenn"},"content":"                String[] command \u003d input.split(\" \", 2); // split the input into an array of strings","lastModifiedDate":"2023-02-16"},{"lineNumber":46,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"Ansenn"},"content":"                switch (command[0]) {","lastModifiedDate":"2023-02-27"},{"lineNumber":48,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":49,"author":{"gitId":"Ansenn"},"content":"                    case \"bye\":","lastModifiedDate":"2023-02-27"},{"lineNumber":50,"author":{"gitId":"Ansenn"},"content":"                        // terminate clom, print goodbye message, save tasks","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"Ansenn"},"content":"                        isExit \u003d true;","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"Ansenn"},"content":"                        FileCommands.saveFile(taskList);","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"Ansenn"},"content":"                        PrintCommands.printExitMessage();","lastModifiedDate":"2023-02-27"},{"lineNumber":54,"author":{"gitId":"Ansenn"},"content":"                        System.exit(0);","lastModifiedDate":"2023-02-27"},{"lineNumber":55,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":56,"author":{"gitId":"Ansenn"},"content":"                    case \"list\":","lastModifiedDate":"2023-02-27"},{"lineNumber":57,"author":{"gitId":"Ansenn"},"content":"                        // Display list of tasks","lastModifiedDate":"2023-02-07"},{"lineNumber":58,"author":{"gitId":"Ansenn"},"content":"                        PrintCommands.printList(taskList);","lastModifiedDate":"2023-03-02"},{"lineNumber":59,"author":{"gitId":"Ansenn"},"content":"                        break;","lastModifiedDate":"2023-02-27"},{"lineNumber":60,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":61,"author":{"gitId":"Ansenn"},"content":"                    case \"mark\":","lastModifiedDate":"2023-02-27"},{"lineNumber":62,"author":{"gitId":"Ansenn"},"content":"                        TaskCommand.markTask(taskList, command, TaskCommand.getTaskIndex(command, taskList));","lastModifiedDate":"2023-03-02"},{"lineNumber":63,"author":{"gitId":"Ansenn"},"content":"                        break;","lastModifiedDate":"2023-02-27"},{"lineNumber":64,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":65,"author":{"gitId":"Ansenn"},"content":"                    case \"unmark\":","lastModifiedDate":"2023-02-27"},{"lineNumber":66,"author":{"gitId":"Ansenn"},"content":"                        TaskCommand.unmarkTask(taskList, command, TaskCommand.getTaskIndex(command, taskList));","lastModifiedDate":"2023-03-02"},{"lineNumber":67,"author":{"gitId":"Ansenn"},"content":"                        break;","lastModifiedDate":"2023-02-27"},{"lineNumber":68,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":69,"author":{"gitId":"Ansenn"},"content":"                    case \"todo\":","lastModifiedDate":"2023-02-27"},{"lineNumber":70,"author":{"gitId":"Ansenn"},"content":"                        TaskCommand.todoTask(taskList, command);","lastModifiedDate":"2023-03-02"},{"lineNumber":71,"author":{"gitId":"Ansenn"},"content":"                        break;","lastModifiedDate":"2023-02-27"},{"lineNumber":72,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":73,"author":{"gitId":"Ansenn"},"content":"                    case \"deadline\":","lastModifiedDate":"2023-02-27"},{"lineNumber":74,"author":{"gitId":"Ansenn"},"content":"                        TaskCommand.deadlineTask(taskList, command);","lastModifiedDate":"2023-03-02"},{"lineNumber":75,"author":{"gitId":"Ansenn"},"content":"                        break;","lastModifiedDate":"2023-02-27"},{"lineNumber":76,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":77,"author":{"gitId":"Ansenn"},"content":"                    case \"event\":","lastModifiedDate":"2023-02-27"},{"lineNumber":78,"author":{"gitId":"Ansenn"},"content":"                        TaskCommand.eventTask(taskList, command);","lastModifiedDate":"2023-03-02"},{"lineNumber":79,"author":{"gitId":"Ansenn"},"content":"                        break;","lastModifiedDate":"2023-02-27"},{"lineNumber":80,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":81,"author":{"gitId":"Ansenn"},"content":"                    case \"help\":","lastModifiedDate":"2023-02-27"},{"lineNumber":82,"author":{"gitId":"Ansenn"},"content":"                        PrintCommands.printHelp();","lastModifiedDate":"2023-02-27"},{"lineNumber":83,"author":{"gitId":"Ansenn"},"content":"                        break;","lastModifiedDate":"2023-02-27"},{"lineNumber":84,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":85,"author":{"gitId":"Ansenn"},"content":"                    case \"delete\":","lastModifiedDate":"2023-03-02"},{"lineNumber":86,"author":{"gitId":"Ansenn"},"content":"                        TaskCommand.deleteTask(taskList, command, TaskCommand.getTaskIndex(command, taskList));","lastModifiedDate":"2023-03-02"},{"lineNumber":87,"author":{"gitId":"Ansenn"},"content":"                        break;","lastModifiedDate":"2023-03-02"},{"lineNumber":88,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":89,"author":{"gitId":"Ansenn"},"content":"                    case \"find\":","lastModifiedDate":"2023-03-03"},{"lineNumber":90,"author":{"gitId":"Ansenn"},"content":"                        TaskCommand.findTask(taskList, command);","lastModifiedDate":"2023-03-03"},{"lineNumber":91,"author":{"gitId":"Ansenn"},"content":"                        break;","lastModifiedDate":"2023-03-03"},{"lineNumber":92,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":93,"author":{"gitId":"Ansenn"},"content":"                    default:","lastModifiedDate":"2023-02-27"},{"lineNumber":94,"author":{"gitId":"Ansenn"},"content":"                        throw new NullCommandException(","lastModifiedDate":"2023-02-27"},{"lineNumber":95,"author":{"gitId":"Ansenn"},"content":"                                \"Unrecognised command. Type \u0027help\u0027 for a list of recognised commands\");","lastModifiedDate":"2023-02-27"},{"lineNumber":96,"author":{"gitId":"Ansenn"},"content":"                }","lastModifiedDate":"2023-02-27"},{"lineNumber":97,"author":{"gitId":"Ansenn"},"content":"            } catch (NumberFormatException nfe) {","lastModifiedDate":"2023-02-27"},{"lineNumber":98,"author":{"gitId":"Ansenn"},"content":"                // Mark/Unmark is not followed by an Integer","lastModifiedDate":"2023-02-27"},{"lineNumber":99,"author":{"gitId":"Ansenn"},"content":"                System.out.println(\"This command should be followed by an integer! Please try again.\");","lastModifiedDate":"2023-03-03"},{"lineNumber":100,"author":{"gitId":"Ansenn"},"content":"            } catch (InvalidTaskNumberException itne) {","lastModifiedDate":"2023-02-27"},{"lineNumber":101,"author":{"gitId":"Ansenn"},"content":"                // mark/unmark is followed by an integer which is either too small or too large","lastModifiedDate":"2023-02-27"},{"lineNumber":102,"author":{"gitId":"Ansenn"},"content":"                System.out.println(\"The number you entered is out of range! Please try again\");","lastModifiedDate":"2023-02-27"},{"lineNumber":103,"author":{"gitId":"Ansenn"},"content":"            } catch (MissingDescriptionException mde) {","lastModifiedDate":"2023-02-27"},{"lineNumber":104,"author":{"gitId":"Ansenn"},"content":"                System.err.println(\"Task description is missing. Try again.\");","lastModifiedDate":"2023-02-27"},{"lineNumber":105,"author":{"gitId":"Ansenn"},"content":"            } catch (InvalidFindStringException ifse) {","lastModifiedDate":"2023-03-03"},{"lineNumber":106,"author":{"gitId":"Ansenn"},"content":"                System.out.println(","lastModifiedDate":"2023-03-03"},{"lineNumber":107,"author":{"gitId":"Ansenn"},"content":"                        \"Uh oh! The task you are looking for does not exist, or there were some issues. Please try again.\");","lastModifiedDate":"2023-03-03"},{"lineNumber":108,"author":{"gitId":"Ansenn"},"content":"            } catch (NullCommandException nce) {","lastModifiedDate":"2023-03-03"},{"lineNumber":109,"author":{"gitId":"Ansenn"},"content":"                System.out.println(\"Unrecognised command. Type \u0027help\u0027 for a list of recognised commands\");","lastModifiedDate":"2023-03-03"},{"lineNumber":110,"author":{"gitId":"Ansenn"},"content":"            }","lastModifiedDate":"2023-02-16"},{"lineNumber":111,"author":{"gitId":"Ansenn"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":112,"author":{"gitId":"Ansenn"},"content":"        scan.close();","lastModifiedDate":"2023-03-03"},{"lineNumber":113,"author":{"gitId":"Ansenn"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Ansenn":112,"-":2}},{"path":"src/main/java/Exceptions/InvalidFindStringException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ansenn"},"content":"package Exceptions;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"Ansenn"},"content":"public class InvalidFindStringException extends Exception {","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"Ansenn"},"content":"    public InvalidFindStringException(String message) {","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Ansenn"},"content":"        super(message);","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"Ansenn"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"Ansenn"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"Ansenn":8}},{"path":"src/main/java/Exceptions/InvalidTaskDescription.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ansenn"},"content":"package Exceptions;","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"Ansenn"},"content":"public class InvalidTaskDescription extends Exception {","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"Ansenn"},"content":"    public InvalidTaskDescription(String message) {","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"Ansenn"},"content":"        super(message);","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"Ansenn"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"Ansenn"},"content":"    ","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"Ansenn"},"content":"}","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"Ansenn":9}},{"path":"src/main/java/Exceptions/InvalidTaskNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ansenn"},"content":"package Exceptions;","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"Ansenn"},"content":"public class InvalidTaskNumberException extends Exception {","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"Ansenn"},"content":"    public InvalidTaskNumberException(String message) {","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"Ansenn"},"content":"        super(message);","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"Ansenn"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"Ansenn"},"content":"    ","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"Ansenn"},"content":"}","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"Ansenn":9}},{"path":"src/main/java/Exceptions/MissingDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ansenn"},"content":"package Exceptions;","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"Ansenn"},"content":"public class MissingDescriptionException extends Exception {","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"Ansenn"},"content":"    public MissingDescriptionException(String message) {","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"Ansenn"},"content":"        super(message);","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"Ansenn"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"Ansenn"},"content":"}","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"Ansenn":8}},{"path":"src/main/java/Exceptions/NullCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ansenn"},"content":"package Exceptions;","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"Ansenn"},"content":"public class NullCommandException extends Exception {","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"Ansenn"},"content":"    public NullCommandException(String message) {","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"Ansenn"},"content":"        super(message);","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"Ansenn"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"Ansenn"},"content":"    ","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"Ansenn"},"content":"}","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"Ansenn":9}},{"path":"src/main/java/Tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ansenn"},"content":"package Tasks;","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"Ansenn"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"Ansenn"},"content":"    protected String by;","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"Ansenn"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"Ansenn"},"content":"        super(description);","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"Ansenn"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"Ansenn"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"Ansenn"},"content":"    @Override","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"Ansenn"},"content":"    public String getType() {","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"Ansenn"},"content":"        return \"[D]\";","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"Ansenn"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"Ansenn"},"content":"    @Override","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"Ansenn"},"content":"    public String getDescription() {","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"Ansenn"},"content":"        return \"[D]\" + getStatusIcon() + super.getDescription() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"Ansenn"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"Ansenn"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"Ansenn"},"content":"    public String formatTask() {","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"Ansenn"},"content":"        String saveString \u003d \"D\" + \"|\" + super.formatTask() + \"|\" + by;","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"Ansenn"},"content":"        return saveString;","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"Ansenn"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"Ansenn"},"content":"}","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"Ansenn":27}},{"path":"src/main/java/Tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ansenn"},"content":"package Tasks;","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"Ansenn"},"content":"public class Event extends Task {","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"Ansenn"},"content":"    protected String from;","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"Ansenn"},"content":"    protected String to;","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"Ansenn"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"Ansenn"},"content":"        super(description);","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"Ansenn"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"Ansenn"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"Ansenn"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"Ansenn"},"content":"    @Override","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"Ansenn"},"content":"    public String getType() {","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"Ansenn"},"content":"        return \"[E]\";","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"Ansenn"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"Ansenn"},"content":"    @Override","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"Ansenn"},"content":"    public String getDescription() {","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"Ansenn"},"content":"        return \"[E]\" + getStatusIcon() + super.getDescription() + \" (from: \" + from + \" to:\" + to + \")\";","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"Ansenn"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"Ansenn"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"Ansenn"},"content":"    public String formatTask() {","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"Ansenn"},"content":"        String saveString \u003d \"E\" + \"|\" + super.formatTask() + \"|\" + from + \"|\" + to;","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"Ansenn"},"content":"        return saveString;","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"Ansenn"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"Ansenn"},"content":"}","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"Ansenn":28}},{"path":"src/main/java/Tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ansenn"},"content":"package Tasks;","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"Ansenn"},"content":"public class Task {","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"Ansenn"},"content":"    public String description;","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"Ansenn"},"content":"    public boolean isDone;","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"Ansenn"},"content":"    public String type;","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"Ansenn"},"content":"    public Task(String description) {","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"Ansenn"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"Ansenn"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"Ansenn"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"Ansenn"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"Ansenn"},"content":"        return (isDone ? \"[X] \" : \"[ ] \"); // mark done task with X","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"Ansenn"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"Ansenn"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"Ansenn"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"Ansenn"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"Ansenn"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"Ansenn"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"Ansenn"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"Ansenn"},"content":"    public String getDescription() {","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"Ansenn"},"content":"        return description;","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"Ansenn"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"Ansenn"},"content":"    public String getType() {","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"Ansenn"},"content":"        return type;","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"Ansenn"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"Ansenn"},"content":"    public String formatTask() {","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"Ansenn"},"content":"        String status; ","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"Ansenn"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"Ansenn"},"content":"            status \u003d \"1\"; // Task is marked as done","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"Ansenn"},"content":"        } else {","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"Ansenn"},"content":"            status \u003d \"0\"; //Task marked as not done","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"Ansenn"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"Ansenn"},"content":"        String formatOutput \u003d status + \"|\" + description;","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"Ansenn"},"content":"        return formatOutput;","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"Ansenn"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"Ansenn"},"content":"}","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"Ansenn":44}},{"path":"src/main/java/Tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ansenn"},"content":"package Tasks;","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"Ansenn"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"Ansenn"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"Ansenn"},"content":"        super(description);","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"Ansenn"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"Ansenn"},"content":"    @Override","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"Ansenn"},"content":"    public String getType() {","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"Ansenn"},"content":"        return \"[T]\";","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"Ansenn"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"Ansenn"},"content":"    @Override","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"Ansenn"},"content":"    public String getDescription() {","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"Ansenn"},"content":"        return (\"[T]\" + getStatusIcon() + super.getDescription());","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"Ansenn"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"Ansenn"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"Ansenn"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"Ansenn"},"content":"    public String formatTask() {","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"Ansenn"},"content":"        String saveString \u003d \"T\" + \"|\" + super.formatTask();","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"Ansenn"},"content":"        return saveString;","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"Ansenn"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"Ansenn"},"content":"}","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"Ansenn":24}}]
