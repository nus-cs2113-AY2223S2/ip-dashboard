[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"L-K-Chng"},"content":"Welcome! This is a User Guide for the task tracker Duke!","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"L-K-Chng"},"content":"It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"3. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"L-K-Chng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"L-K-Chng"},"content":"## Commands","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"L-K-Chng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"L-K-Chng"},"content":"1. list - To see the user\u0027s current list of tasks","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"L-K-Chng"},"content":"2. todo \u003ctask\u003e - Simply adds a task to be done","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"L-K-Chng"},"content":"3. deadline \u003ctask\u003e /by \u003cdeadline of task\u003e - Adds a task with a specific deadline.","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"L-K-Chng"},"content":"4. event \u003ctask\u003e /from \u003cstart time of event\u003e /to \u003cend time of event\u003e - Adds an event with a start and end time","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"L-K-Chng"},"content":"5. mark \u003ctask number\u003e - To mark a task as done.","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"L-K-Chng"},"content":"6. unmark \u003ctask number\u003e - To mark a task as not done. ","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"L-K-Chng"},"content":"7. delete \u003ctask number\u003e - To delete a task from the user\u0027s current list of tasks.","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"L-K-Chng"},"content":"8. bye - To terminate the program","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"L-K-Chng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"L-K-Chng"},"content":"## Usage","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"L-K-Chng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"L-K-Chng"},"content":"Example:  ","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"L-K-Chng"},"content":"event do CS2113 individual project /from Monday 12pm /to Sunday 12pm","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"L-K-Chng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"L-K-Chng"},"content":"Expected Outcome:  ","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"L-K-Chng"},"content":"Got it. I\u0027ve added this task:   ","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"L-K-Chng"},"content":"[E][ ] do CS2113 individual project (From: Monday 12pm to Sunday 4pm)  ","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"L-K-Chng"},"content":"Now you have 1 task(s) in the list. ","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"L-K-Chng"},"content":"","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"L-K-Chng":24,"-":22}},{"path":"duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"L-K-Chng"},"content":"E:1: play more games /from now /to later","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"L-K-Chng"},"content":"T:1: more","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"L-K-Chng"},"content":"T:0: read stuff","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"L-K-Chng"},"content":"E:1: play games /from now /to night","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"L-K-Chng"},"content":"D:0: finish cs2113 assignment /by 2359","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"L-K-Chng"},"content":"T:0: play","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"L-K-Chng":6}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"L-K-Chng"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"L-K-Chng"},"content":" * Represents a task with a deadline that the user wishes to complete.","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"L-K-Chng"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"L-K-Chng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"L-K-Chng"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"L-K-Chng"},"content":"    protected String by;","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"L-K-Chng"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"L-K-Chng"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"L-K-Chng"},"content":"        super(description);","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"L-K-Chng"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"L-K-Chng"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"L-K-Chng"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"L-K-Chng"},"content":"    public String getTaskIcon() {","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"L-K-Chng"},"content":"        return \"D\";","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"L-K-Chng"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"L-K-Chng"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"L-K-Chng"},"content":"    public String getDeadlineBy() {","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"L-K-Chng"},"content":"        return by;","lastModifiedDate":"2023-02-27"},{"lineNumber":19,"author":{"gitId":"L-K-Chng"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"L-K-Chng"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"L-K-Chng"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"L-K-Chng"},"content":"     * Returns the Deadline task type and shows whether the task has been completed, as well as the","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"L-K-Chng"},"content":"     * completion deadline.","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"L-K-Chng"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"L-K-Chng"},"content":"    @Override","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"L-K-Chng"},"content":"    public String toString() {","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"L-K-Chng"},"content":"        return \"[D]\" + super.toString() + \"(by:\" + by + \")\";","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"L-K-Chng"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"L-K-Chng"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"L-K-Chng":29}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"L-K-Chng"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"L-K-Chng"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"L-K-Chng"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"L-K-Chng"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"L-K-Chng"},"content":" * Represents the main program. It contains the Storage class to load existing data from a","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"L-K-Chng"},"content":" * text file and save the data back within the file as the user terminates the program.","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"L-K-Chng"},"content":" * The instantiation of the Ui class is to facilitate user interaction while the TaskList class","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"L-K-Chng"},"content":" * is to function as the overall task manager for the user.","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"L-K-Chng"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"L-K-Chng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"L-K-Chng"},"content":"    static TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"L-K-Chng"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"L-K-Chng"},"content":"        try {","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"L-K-Chng"},"content":"            Storage.loadFile(taskList, \"duke.txt\");","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"L-K-Chng"},"content":"            System.out.println(\"File loaded!\");","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"L-K-Chng"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-02-27"},{"lineNumber":19,"author":{"gitId":"L-K-Chng"},"content":"            System.out.println(\"File not found! The file will be created on termination of this program!\");","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"L-K-Chng"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"L-K-Chng"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"L-K-Chng"},"content":"        Ui.printLogo();","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"L-K-Chng"},"content":"        Ui.greetUser();","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"L-K-Chng"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"L-K-Chng"},"content":"        boolean isFinished \u003d false;","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"L-K-Chng"},"content":"        while (!isFinished) {","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"L-K-Chng"},"content":"            String command \u003d Ui.getUserCommand();","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"L-K-Chng"},"content":"            parser.parse(command, taskList);","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"L-K-Chng"},"content":"            isFinished \u003d parser.checkProgrammeCompletion();","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"L-K-Chng"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"L-K-Chng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"L-K-Chng"},"content":"        try {","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"L-K-Chng"},"content":"            Storage.clearFile();","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"L-K-Chng"},"content":"        } catch (IOException e){","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"L-K-Chng"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"L-K-Chng"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"L-K-Chng"},"content":"        Storage.updateFile(taskList);","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"L-K-Chng"},"content":"        Ui.sayByeToUser();","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"L-K-Chng":36,"-":4}},{"path":"src/main/java/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"L-K-Chng"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"L-K-Chng"},"content":" * Exception which occurs when the user does not specify the description for a given command.","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"L-K-Chng"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"L-K-Chng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"L-K-Chng"},"content":"public class EmptyDescriptionException extends Exception{","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"L-K-Chng"},"content":"    //does not require anything","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"L-K-Chng"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"L-K-Chng":7}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"L-K-Chng"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"L-K-Chng"},"content":" * Represents a task with a event that the user wishes to complete.","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"L-K-Chng"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"L-K-Chng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"L-K-Chng"},"content":"public class Event extends Task{","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"L-K-Chng"},"content":"    protected String start;","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"L-K-Chng"},"content":"    protected String end;","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"L-K-Chng"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"L-K-Chng"},"content":"    public Event(String Description, String start, String end) {","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"L-K-Chng"},"content":"        super(Description);","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"L-K-Chng"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"L-K-Chng"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"L-K-Chng"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"L-K-Chng"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"L-K-Chng"},"content":"    public String getTaskIcon() {","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"L-K-Chng"},"content":"        return \"E\";","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"L-K-Chng"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"L-K-Chng"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":19,"author":{"gitId":"L-K-Chng"},"content":"    public String getEventStart() {","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"L-K-Chng"},"content":"        return start;","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"L-K-Chng"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"L-K-Chng"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"L-K-Chng"},"content":"    public String getEventEnd() {","lastModifiedDate":"2023-02-27"},{"lineNumber":24,"author":{"gitId":"L-K-Chng"},"content":"        return end;","lastModifiedDate":"2023-02-27"},{"lineNumber":25,"author":{"gitId":"L-K-Chng"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":26,"author":{"gitId":"L-K-Chng"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"L-K-Chng"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"L-K-Chng"},"content":"     * Returns the Event task type and shows whether the task has been completed, as well as the duration","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"L-K-Chng"},"content":"     * of the event.","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"L-K-Chng"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"L-K-Chng"},"content":"    @Override","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"L-K-Chng"},"content":"    public String toString() {","lastModifiedDate":"2023-02-04"},{"lineNumber":33,"author":{"gitId":"L-K-Chng"},"content":"        return \"[E]\" + super.toString() + \"(from:\" + start + \"to\" + end + \")\";","lastModifiedDate":"2023-02-04"},{"lineNumber":34,"author":{"gitId":"L-K-Chng"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":35,"author":{"gitId":"L-K-Chng"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"L-K-Chng":35}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"L-K-Chng"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"L-K-Chng"},"content":" * Represents an entity to handle and interpret user commands in order to execute the corresponding methods to reflect the program\u0027s intended behaviour.","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"L-K-Chng"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"L-K-Chng"},"content":"public class Parser {","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"L-K-Chng"},"content":"    private static final String DIVIDER  \u003d \"______________________________\";","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"L-K-Chng"},"content":"    private boolean isFinished \u003d false; //to return to main program","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"L-K-Chng"},"content":"    //Commands","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"L-K-Chng"},"content":"    static final String COMMAND_EXIT \u003d \"bye\";","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"L-K-Chng"},"content":"    static final String COMMAND_LIST \u003d \"list\";","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"L-K-Chng"},"content":"    static final String COMMAND_MARK \u003d \"mark\";","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"L-K-Chng"},"content":"    static final String COMMAND_UNMARK \u003d \"unmark\";","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"L-K-Chng"},"content":"    static final String COMMAND_TODO \u003d \"todo\";","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"L-K-Chng"},"content":"    static final String COMMAND_EVENT \u003d \"event\";","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"L-K-Chng"},"content":"    static final String COMMAND_DEADLINE \u003d \"deadline\";","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"L-K-Chng"},"content":"    static final String COMMAND_DELETE \u003d \"delete\";","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"L-K-Chng"},"content":"    static final String COMMAND_FIND \u003d \"find\";","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"L-K-Chng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"L-K-Chng"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"L-K-Chng"},"content":"     * Takes in user commands and executes the relevant operations to modify the user\u0027s list of tasks according to the command.","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"L-K-Chng"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"L-K-Chng"},"content":"     * @param input The input that the user provided to the program.","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"L-K-Chng"},"content":"     * @param taskList the task manager handling the user\u0027s current list of tasks.","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"L-K-Chng"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"L-K-Chng"},"content":"    public void parse(String input, TaskList taskList) {","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"L-K-Chng"},"content":"        String[] inputText \u003d input.split(\" \");","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"L-K-Chng"},"content":"        String command \u003d inputText[0];","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"L-K-Chng"},"content":"        String taskDesc \u003d \"\";","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"L-K-Chng"},"content":"        for (int i \u003d 1; i \u003c inputText.length; i++) {","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"L-K-Chng"},"content":"            taskDesc \u003d taskDesc + \" \" + inputText[i];","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"L-K-Chng"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"L-K-Chng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"L-K-Chng"},"content":"        switch(command) {","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"L-K-Chng"},"content":"        case COMMAND_EXIT:","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"L-K-Chng"},"content":"            isFinished \u003d true;","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"L-K-Chng"},"content":"            break;","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"L-K-Chng"},"content":"        case COMMAND_LIST:","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"L-K-Chng"},"content":"            taskList.printList();","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"L-K-Chng"},"content":"            break;","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"L-K-Chng"},"content":"        case COMMAND_MARK:","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"L-K-Chng"},"content":"            try {","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"L-K-Chng"},"content":"                if (taskDesc.length() \u003d\u003d 0) {","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"L-K-Chng"},"content":"                    throw new EmptyDescriptionException();","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"L-K-Chng"},"content":"                }","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"L-K-Chng"},"content":"                int taskNum \u003d Integer.parseInt(inputText[1]);","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"L-K-Chng"},"content":"                taskList.markTask(taskNum);","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"L-K-Chng"},"content":"            } catch (EmptyDescriptionException e) {","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"L-K-Chng"},"content":"                Ui.emptyDescriptionNumber();","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"L-K-Chng"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"L-K-Chng"},"content":"                System.out.println(DIVIDER + System.lineSeparator()","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"L-K-Chng"},"content":"                        + \"Unable to mark task as task does not exist!\" + System.lineSeparator() + DIVIDER);","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"L-K-Chng"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"L-K-Chng"},"content":"                Ui.invalidTaskNumberError();","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"L-K-Chng"},"content":"            } catch (TaskAlreadyMarkedException e) {","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"L-K-Chng"},"content":"                Ui.taskAlreadyMarkedError();","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"L-K-Chng"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"L-K-Chng"},"content":"            break;","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"L-K-Chng"},"content":"        case COMMAND_UNMARK:","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"L-K-Chng"},"content":"            try {","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"L-K-Chng"},"content":"                if (taskDesc.length() \u003d\u003d 0) {","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"L-K-Chng"},"content":"                    throw new EmptyDescriptionException();","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"L-K-Chng"},"content":"                }","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"L-K-Chng"},"content":"                int taskNum \u003d Integer.parseInt(inputText[1]);","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"L-K-Chng"},"content":"                taskList.unmarkTask(taskNum);","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"L-K-Chng"},"content":"            } catch (EmptyDescriptionException e) {","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"L-K-Chng"},"content":"                Ui.emptyDescriptionNumber();","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"L-K-Chng"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"L-K-Chng"},"content":"                System.out.println(DIVIDER + System.lineSeparator()","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"L-K-Chng"},"content":"                        + \"Unable to unmark task as task does not exist!\" + System.lineSeparator() + DIVIDER);","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"L-K-Chng"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"L-K-Chng"},"content":"                Ui.invalidTaskNumberError();","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"L-K-Chng"},"content":"            } catch (TaskAlreadyNotMarkedException e) {","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"L-K-Chng"},"content":"                Ui.taskAlreadyNotMarkedError();","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"L-K-Chng"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"L-K-Chng"},"content":"            break;","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"L-K-Chng"},"content":"        case COMMAND_TODO:","lastModifiedDate":"2023-03-03"},{"lineNumber":76,"author":{"gitId":"L-K-Chng"},"content":"            try {","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"L-K-Chng"},"content":"                if (taskDesc.length() \u003d\u003d 0) {","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"L-K-Chng"},"content":"                    throw new EmptyDescriptionException();","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"L-K-Chng"},"content":"                }","lastModifiedDate":"2023-03-03"},{"lineNumber":80,"author":{"gitId":"L-K-Chng"},"content":"                taskList.addTodo(taskDesc);","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"L-K-Chng"},"content":"                taskList.acknowledgementMessage();","lastModifiedDate":"2023-03-03"},{"lineNumber":82,"author":{"gitId":"L-K-Chng"},"content":"            } catch (EmptyDescriptionException e) {","lastModifiedDate":"2023-03-03"},{"lineNumber":83,"author":{"gitId":"L-K-Chng"},"content":"                Ui.emptyDescriptionTodo();","lastModifiedDate":"2023-03-03"},{"lineNumber":84,"author":{"gitId":"L-K-Chng"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":85,"author":{"gitId":"L-K-Chng"},"content":"            break;","lastModifiedDate":"2023-03-03"},{"lineNumber":86,"author":{"gitId":"L-K-Chng"},"content":"        case COMMAND_EVENT:","lastModifiedDate":"2023-03-03"},{"lineNumber":87,"author":{"gitId":"L-K-Chng"},"content":"            try {","lastModifiedDate":"2023-03-03"},{"lineNumber":88,"author":{"gitId":"L-K-Chng"},"content":"                if (taskDesc.length() \u003d\u003d 0) {","lastModifiedDate":"2023-03-03"},{"lineNumber":89,"author":{"gitId":"L-K-Chng"},"content":"                    throw new EmptyDescriptionException();","lastModifiedDate":"2023-03-03"},{"lineNumber":90,"author":{"gitId":"L-K-Chng"},"content":"                }","lastModifiedDate":"2023-03-03"},{"lineNumber":91,"author":{"gitId":"L-K-Chng"},"content":"                taskList.addEvent(taskDesc);","lastModifiedDate":"2023-03-03"},{"lineNumber":92,"author":{"gitId":"L-K-Chng"},"content":"                taskList.acknowledgementMessage();","lastModifiedDate":"2023-03-03"},{"lineNumber":93,"author":{"gitId":"L-K-Chng"},"content":"            } catch (EmptyDescriptionException e) {","lastModifiedDate":"2023-03-03"},{"lineNumber":94,"author":{"gitId":"L-K-Chng"},"content":"                Ui.emptyDescriptionEvent();","lastModifiedDate":"2023-03-03"},{"lineNumber":95,"author":{"gitId":"L-K-Chng"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-03-03"},{"lineNumber":96,"author":{"gitId":"L-K-Chng"},"content":"                System.out.println(DIVIDER + System.lineSeparator()","lastModifiedDate":"2023-03-03"},{"lineNumber":97,"author":{"gitId":"L-K-Chng"},"content":"                        + \"The event you keyed in was invalid!\" + System.lineSeparator()","lastModifiedDate":"2023-03-03"},{"lineNumber":98,"author":{"gitId":"L-K-Chng"},"content":"                        + \"Key in a valid event by including description followed by /from and /to keywords!\"","lastModifiedDate":"2023-03-03"},{"lineNumber":99,"author":{"gitId":"L-K-Chng"},"content":"                        + System.lineSeparator() + DIVIDER);","lastModifiedDate":"2023-03-03"},{"lineNumber":100,"author":{"gitId":"L-K-Chng"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":101,"author":{"gitId":"L-K-Chng"},"content":"            break;","lastModifiedDate":"2023-03-03"},{"lineNumber":102,"author":{"gitId":"L-K-Chng"},"content":"        case COMMAND_DEADLINE:","lastModifiedDate":"2023-03-03"},{"lineNumber":103,"author":{"gitId":"L-K-Chng"},"content":"            try {","lastModifiedDate":"2023-03-03"},{"lineNumber":104,"author":{"gitId":"L-K-Chng"},"content":"                if (taskDesc.length() \u003d\u003d 0) {","lastModifiedDate":"2023-03-03"},{"lineNumber":105,"author":{"gitId":"L-K-Chng"},"content":"                    throw new EmptyDescriptionException();","lastModifiedDate":"2023-03-03"},{"lineNumber":106,"author":{"gitId":"L-K-Chng"},"content":"                }","lastModifiedDate":"2023-03-03"},{"lineNumber":107,"author":{"gitId":"L-K-Chng"},"content":"                taskList.addDeadline(taskDesc);","lastModifiedDate":"2023-03-03"},{"lineNumber":108,"author":{"gitId":"L-K-Chng"},"content":"                taskList.acknowledgementMessage();","lastModifiedDate":"2023-03-03"},{"lineNumber":109,"author":{"gitId":"L-K-Chng"},"content":"            } catch (EmptyDescriptionException e) {","lastModifiedDate":"2023-03-03"},{"lineNumber":110,"author":{"gitId":"L-K-Chng"},"content":"                Ui.emptyDescriptionDeadline();","lastModifiedDate":"2023-03-03"},{"lineNumber":111,"author":{"gitId":"L-K-Chng"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-03-03"},{"lineNumber":112,"author":{"gitId":"L-K-Chng"},"content":"                System.out.println(DIVIDER + System.lineSeparator()","lastModifiedDate":"2023-03-03"},{"lineNumber":113,"author":{"gitId":"L-K-Chng"},"content":"                        + \"The deadline you keyed in was invalid!\" + System.lineSeparator()","lastModifiedDate":"2023-03-03"},{"lineNumber":114,"author":{"gitId":"L-K-Chng"},"content":"                        + \"Key in a valid deadline by including description followed by /by keyword!\"","lastModifiedDate":"2023-03-03"},{"lineNumber":115,"author":{"gitId":"L-K-Chng"},"content":"                        + System.lineSeparator() + DIVIDER);","lastModifiedDate":"2023-03-03"},{"lineNumber":116,"author":{"gitId":"L-K-Chng"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":117,"author":{"gitId":"L-K-Chng"},"content":"            break;","lastModifiedDate":"2023-03-03"},{"lineNumber":118,"author":{"gitId":"L-K-Chng"},"content":"        case COMMAND_DELETE:","lastModifiedDate":"2023-03-03"},{"lineNumber":119,"author":{"gitId":"L-K-Chng"},"content":"            try {","lastModifiedDate":"2023-03-03"},{"lineNumber":120,"author":{"gitId":"L-K-Chng"},"content":"                if (taskDesc.length() \u003d\u003d 0) {","lastModifiedDate":"2023-03-03"},{"lineNumber":121,"author":{"gitId":"L-K-Chng"},"content":"                    throw new EmptyDescriptionException();","lastModifiedDate":"2023-03-03"},{"lineNumber":122,"author":{"gitId":"L-K-Chng"},"content":"                }","lastModifiedDate":"2023-03-03"},{"lineNumber":123,"author":{"gitId":"L-K-Chng"},"content":"                int taskNum \u003d Integer.parseInt(inputText[1]);","lastModifiedDate":"2023-03-03"},{"lineNumber":124,"author":{"gitId":"L-K-Chng"},"content":"                if (taskNum \u003e taskList.getSize() || taskNum \u003c\u003d 0) {","lastModifiedDate":"2023-03-03"},{"lineNumber":125,"author":{"gitId":"L-K-Chng"},"content":"                    throw new ArrayIndexOutOfBoundsException();","lastModifiedDate":"2023-03-03"},{"lineNumber":126,"author":{"gitId":"L-K-Chng"},"content":"                }","lastModifiedDate":"2023-03-03"},{"lineNumber":127,"author":{"gitId":"L-K-Chng"},"content":"                taskList.deleteTask(taskNum);","lastModifiedDate":"2023-03-03"},{"lineNumber":128,"author":{"gitId":"L-K-Chng"},"content":"            } catch (EmptyDescriptionException e) {","lastModifiedDate":"2023-03-03"},{"lineNumber":129,"author":{"gitId":"L-K-Chng"},"content":"                Ui.emptyDescriptionNumber();","lastModifiedDate":"2023-03-03"},{"lineNumber":130,"author":{"gitId":"L-K-Chng"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-03-03"},{"lineNumber":131,"author":{"gitId":"L-K-Chng"},"content":"                System.out.println(DIVIDER + System.lineSeparator()","lastModifiedDate":"2023-03-03"},{"lineNumber":132,"author":{"gitId":"L-K-Chng"},"content":"                        + \"Unable to delete task as task does not exist!\" + System.lineSeparator() + DIVIDER);","lastModifiedDate":"2023-03-03"},{"lineNumber":133,"author":{"gitId":"L-K-Chng"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-03"},{"lineNumber":134,"author":{"gitId":"L-K-Chng"},"content":"                Ui.invalidTaskNumberError();","lastModifiedDate":"2023-03-03"},{"lineNumber":135,"author":{"gitId":"L-K-Chng"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":136,"author":{"gitId":"L-K-Chng"},"content":"            break;","lastModifiedDate":"2023-03-03"},{"lineNumber":137,"author":{"gitId":"L-K-Chng"},"content":"        case COMMAND_FIND:","lastModifiedDate":"2023-03-03"},{"lineNumber":138,"author":{"gitId":"L-K-Chng"},"content":"            try {","lastModifiedDate":"2023-03-03"},{"lineNumber":139,"author":{"gitId":"L-K-Chng"},"content":"                if (taskDesc.isEmpty()) {","lastModifiedDate":"2023-03-03"},{"lineNumber":140,"author":{"gitId":"L-K-Chng"},"content":"                    throw new EmptyDescriptionException();","lastModifiedDate":"2023-03-03"},{"lineNumber":141,"author":{"gitId":"L-K-Chng"},"content":"                }","lastModifiedDate":"2023-03-03"},{"lineNumber":142,"author":{"gitId":"L-K-Chng"},"content":"                taskList.findKeyword(taskDesc);","lastModifiedDate":"2023-03-03"},{"lineNumber":143,"author":{"gitId":"L-K-Chng"},"content":"            } catch (EmptyDescriptionException e) {","lastModifiedDate":"2023-03-03"},{"lineNumber":144,"author":{"gitId":"L-K-Chng"},"content":"                Ui.emptyDescriptionKeyword();","lastModifiedDate":"2023-03-03"},{"lineNumber":145,"author":{"gitId":"L-K-Chng"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":146,"author":{"gitId":"L-K-Chng"},"content":"            break;","lastModifiedDate":"2023-03-03"},{"lineNumber":147,"author":{"gitId":"L-K-Chng"},"content":"        default:","lastModifiedDate":"2023-03-03"},{"lineNumber":148,"author":{"gitId":"L-K-Chng"},"content":"            Ui.unknownTaskError();","lastModifiedDate":"2023-03-03"},{"lineNumber":149,"author":{"gitId":"L-K-Chng"},"content":"            break;","lastModifiedDate":"2023-03-03"},{"lineNumber":150,"author":{"gitId":"L-K-Chng"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":151,"author":{"gitId":"L-K-Chng"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":152,"author":{"gitId":"L-K-Chng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":153,"author":{"gitId":"L-K-Chng"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":154,"author":{"gitId":"L-K-Chng"},"content":"     * Returns the boolean variable isFinished to determine the termination of the program.","lastModifiedDate":"2023-03-03"},{"lineNumber":155,"author":{"gitId":"L-K-Chng"},"content":"     * @return Boolean isFinished acts as a signal to terminate program","lastModifiedDate":"2023-03-03"},{"lineNumber":156,"author":{"gitId":"L-K-Chng"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":157,"author":{"gitId":"L-K-Chng"},"content":"    public boolean checkProgrammeCompletion() {","lastModifiedDate":"2023-03-03"},{"lineNumber":158,"author":{"gitId":"L-K-Chng"},"content":"        return isFinished;","lastModifiedDate":"2023-03-03"},{"lineNumber":159,"author":{"gitId":"L-K-Chng"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":160,"author":{"gitId":"L-K-Chng"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"L-K-Chng":160}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"L-K-Chng"},"content":"import java.io.File;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"L-K-Chng"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"L-K-Chng"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"L-K-Chng"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"L-K-Chng"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"L-K-Chng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"L-K-Chng"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"L-K-Chng"},"content":" * Class for loading data from file that was previously saved and to save new data into the file.","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"L-K-Chng"},"content":" *","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"L-K-Chng"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"L-K-Chng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"L-K-Chng"},"content":"public class Storage {","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"L-K-Chng"},"content":"    //Commands","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"L-K-Chng"},"content":"    static final String TODO_ICON \u003d \"T\";","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"L-K-Chng"},"content":"    static final String DEADLINE_ICON \u003d \"D\";","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"L-K-Chng"},"content":"    static final String EVENT_ICON \u003d \"E\";","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"L-K-Chng"},"content":"    static final String DEADLINE_BY \u003d \"/by\";","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"L-K-Chng"},"content":"    static final String EVENT_START \u003d \"/from\";","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"L-K-Chng"},"content":"    static final String EVENT_END \u003d \"/to\";","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"L-K-Chng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"L-K-Chng"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"L-K-Chng"},"content":"     * Reads each task stored in the user\u0027s local disk and processes it to correctly set its type and done status.","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"L-K-Chng"},"content":"     * The tasks read are saved into a data file.","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"L-K-Chng"},"content":"     * @param taskList A list of the tasks retrieved from the user\u0027s local disk.","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"L-K-Chng"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"L-K-Chng"},"content":"    public static void updateFile(TaskList taskList) {","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"L-K-Chng"},"content":"        for (Task currentTask : taskList.list) {","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"L-K-Chng"},"content":"            String statusNum \u003d currentTask.getStatusNum();","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"L-K-Chng"},"content":"            String taskDesc \u003d currentTask.getTask();","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"L-K-Chng"},"content":"            String taskType \u003d currentTask.getTaskIcon();","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"L-K-Chng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"L-K-Chng"},"content":"            switch (taskType) {","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"L-K-Chng"},"content":"            case TODO_ICON:","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"L-K-Chng"},"content":"                try {","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"L-K-Chng"},"content":"                    writeToFile(taskType + \":\" + statusNum + \":\"","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"L-K-Chng"},"content":"                            + taskDesc);","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"L-K-Chng"},"content":"                } catch (IOException e) {","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"L-K-Chng"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"L-K-Chng"},"content":"                }","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"L-K-Chng"},"content":"                break;","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"L-K-Chng"},"content":"            case DEADLINE_ICON:","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"L-K-Chng"},"content":"                String deadlineBy \u003d currentTask.getDeadlineBy();","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"L-K-Chng"},"content":"                try {","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"L-K-Chng"},"content":"                    writeToFile(taskType + \":\" + statusNum + \":\"","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"L-K-Chng"},"content":"                            + taskDesc + DEADLINE_BY + deadlineBy);","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"L-K-Chng"},"content":"                } catch (IOException e) {","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"L-K-Chng"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"L-K-Chng"},"content":"                }","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"L-K-Chng"},"content":"                break;","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"L-K-Chng"},"content":"            case EVENT_ICON:","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"L-K-Chng"},"content":"                String eventStart \u003d currentTask.getEventStart();","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"L-K-Chng"},"content":"                String eventEnd \u003d currentTask.getEventEnd();","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"L-K-Chng"},"content":"                try {","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"L-K-Chng"},"content":"                    writeToFile(taskType + \":\" + statusNum + \":\"","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"L-K-Chng"},"content":"                            + taskDesc + EVENT_START + eventStart","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"L-K-Chng"},"content":"                            + EVENT_END + eventEnd);","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"L-K-Chng"},"content":"                } catch (IOException e) {","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"L-K-Chng"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"L-K-Chng"},"content":"                }","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"L-K-Chng"},"content":"                break;","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"L-K-Chng"},"content":"            default:","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"L-K-Chng"},"content":"                System.out.println(\"Nothing to update!\");","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"L-K-Chng"},"content":"                break;","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"L-K-Chng"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"L-K-Chng"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"L-K-Chng"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"L-K-Chng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"L-K-Chng"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"L-K-Chng"},"content":"     * Loads the user\u0027s saved task list from the file path. If the file cannot be found,","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"L-K-Chng"},"content":"     * a file with the corresponding name is created.","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"L-K-Chng"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"L-K-Chng"},"content":"     * @param taskList the empty task list created when the program initiates.","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"L-K-Chng"},"content":"     * @param filePath the path leading to the data file.","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"L-K-Chng"},"content":"     * @throws FileNotFoundException If file cannot be found during execution of loadFile","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"L-K-Chng"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":76,"author":{"gitId":"L-K-Chng"},"content":"    public static void loadFile(TaskList taskList, String filePath) throws FileNotFoundException {","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"L-K-Chng"},"content":"        //generates the text file input to new list each time user opens program.","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"L-K-Chng"},"content":"        File f \u003d new File(filePath); // create a File for the given file path","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"L-K-Chng"},"content":"        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source","lastModifiedDate":"2023-03-03"},{"lineNumber":80,"author":{"gitId":"L-K-Chng"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"L-K-Chng"},"content":"            String newLine \u003d s.nextLine();","lastModifiedDate":"2023-03-03"},{"lineNumber":82,"author":{"gitId":"L-K-Chng"},"content":"            String[] newInput \u003d newLine.split(\":\");","lastModifiedDate":"2023-03-03"},{"lineNumber":83,"author":{"gitId":"L-K-Chng"},"content":"            String taskType \u003d newInput[0];","lastModifiedDate":"2023-03-03"},{"lineNumber":84,"author":{"gitId":"L-K-Chng"},"content":"            String taskMark \u003d newInput[1];","lastModifiedDate":"2023-03-03"},{"lineNumber":85,"author":{"gitId":"L-K-Chng"},"content":"            String taskName \u003d newInput[2];","lastModifiedDate":"2023-03-03"},{"lineNumber":86,"author":{"gitId":"L-K-Chng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":87,"author":{"gitId":"L-K-Chng"},"content":"            switch (taskType) {","lastModifiedDate":"2023-03-03"},{"lineNumber":88,"author":{"gitId":"L-K-Chng"},"content":"            case TODO_ICON:","lastModifiedDate":"2023-03-03"},{"lineNumber":89,"author":{"gitId":"L-K-Chng"},"content":"                taskList.addTask(new Todo(taskName));","lastModifiedDate":"2023-03-03"},{"lineNumber":90,"author":{"gitId":"L-K-Chng"},"content":"                break;","lastModifiedDate":"2023-03-03"},{"lineNumber":91,"author":{"gitId":"L-K-Chng"},"content":"            case DEADLINE_ICON:","lastModifiedDate":"2023-03-03"},{"lineNumber":92,"author":{"gitId":"L-K-Chng"},"content":"                String[] deadlineSeparator \u003d taskName.split(DEADLINE_BY);","lastModifiedDate":"2023-03-03"},{"lineNumber":93,"author":{"gitId":"L-K-Chng"},"content":"                String deadlineTask \u003d deadlineSeparator[0];","lastModifiedDate":"2023-03-03"},{"lineNumber":94,"author":{"gitId":"L-K-Chng"},"content":"                String deadlineBy \u003d deadlineSeparator[1];","lastModifiedDate":"2023-03-03"},{"lineNumber":95,"author":{"gitId":"L-K-Chng"},"content":"                taskList.addTask(new Deadline(deadlineTask, deadlineBy));","lastModifiedDate":"2023-03-03"},{"lineNumber":96,"author":{"gitId":"L-K-Chng"},"content":"                break;","lastModifiedDate":"2023-03-03"},{"lineNumber":97,"author":{"gitId":"L-K-Chng"},"content":"            case EVENT_ICON:","lastModifiedDate":"2023-03-03"},{"lineNumber":98,"author":{"gitId":"L-K-Chng"},"content":"                String[] eventSeparator \u003d taskName.split(EVENT_START);","lastModifiedDate":"2023-03-03"},{"lineNumber":99,"author":{"gitId":"L-K-Chng"},"content":"                String eventTask \u003d eventSeparator[0];","lastModifiedDate":"2023-03-03"},{"lineNumber":100,"author":{"gitId":"L-K-Chng"},"content":"                String eventDuration \u003d eventSeparator[1];","lastModifiedDate":"2023-03-03"},{"lineNumber":101,"author":{"gitId":"L-K-Chng"},"content":"                String[] eventDurationSeparator \u003d eventDuration.split(EVENT_END);","lastModifiedDate":"2023-03-03"},{"lineNumber":102,"author":{"gitId":"L-K-Chng"},"content":"                String eventStart \u003d eventDurationSeparator[0];","lastModifiedDate":"2023-03-03"},{"lineNumber":103,"author":{"gitId":"L-K-Chng"},"content":"                String eventEnd \u003d eventDurationSeparator[1];","lastModifiedDate":"2023-03-03"},{"lineNumber":104,"author":{"gitId":"L-K-Chng"},"content":"                taskList.addTask(new Event(eventTask,eventStart,eventEnd));","lastModifiedDate":"2023-03-03"},{"lineNumber":105,"author":{"gitId":"L-K-Chng"},"content":"                break;","lastModifiedDate":"2023-03-03"},{"lineNumber":106,"author":{"gitId":"L-K-Chng"},"content":"            default:","lastModifiedDate":"2023-03-03"},{"lineNumber":107,"author":{"gitId":"L-K-Chng"},"content":"                System.out.println(\"Error!\");","lastModifiedDate":"2023-03-03"},{"lineNumber":108,"author":{"gitId":"L-K-Chng"},"content":"                break;","lastModifiedDate":"2023-03-03"},{"lineNumber":109,"author":{"gitId":"L-K-Chng"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":110,"author":{"gitId":"L-K-Chng"},"content":"            if (taskMark.equals(\"1\")) {","lastModifiedDate":"2023-03-03"},{"lineNumber":111,"author":{"gitId":"L-K-Chng"},"content":"                taskList.getTask(taskList.getSize() - 1).markAsDone();","lastModifiedDate":"2023-03-03"},{"lineNumber":112,"author":{"gitId":"L-K-Chng"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":113,"author":{"gitId":"L-K-Chng"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":114,"author":{"gitId":"L-K-Chng"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":115,"author":{"gitId":"L-K-Chng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":116,"author":{"gitId":"L-K-Chng"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":117,"author":{"gitId":"L-K-Chng"},"content":"     * Method to clear file contents","lastModifiedDate":"2023-03-03"},{"lineNumber":118,"author":{"gitId":"L-K-Chng"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":119,"author":{"gitId":"L-K-Chng"},"content":"    public static void clearFile() throws IOException {","lastModifiedDate":"2023-03-03"},{"lineNumber":120,"author":{"gitId":"L-K-Chng"},"content":"        FileWriter fw \u003d new FileWriter(\"duke.txt\");","lastModifiedDate":"2023-03-03"},{"lineNumber":121,"author":{"gitId":"L-K-Chng"},"content":"        fw.write(\"\");","lastModifiedDate":"2023-03-03"},{"lineNumber":122,"author":{"gitId":"L-K-Chng"},"content":"        fw.close();","lastModifiedDate":"2023-03-03"},{"lineNumber":123,"author":{"gitId":"L-K-Chng"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":124,"author":{"gitId":"L-K-Chng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":125,"author":{"gitId":"L-K-Chng"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":126,"author":{"gitId":"L-K-Chng"},"content":"     * Method to write file contents","lastModifiedDate":"2023-03-03"},{"lineNumber":127,"author":{"gitId":"L-K-Chng"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":128,"author":{"gitId":"L-K-Chng"},"content":"     * @param textToAdd text that is to be added to the file","lastModifiedDate":"2023-03-03"},{"lineNumber":129,"author":{"gitId":"L-K-Chng"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":130,"author":{"gitId":"L-K-Chng"},"content":"    private static void writeToFile(String textToAdd) throws IOException {","lastModifiedDate":"2023-03-03"},{"lineNumber":131,"author":{"gitId":"L-K-Chng"},"content":"        FileWriter fw \u003d new FileWriter(\"duke.txt\", true);","lastModifiedDate":"2023-03-03"},{"lineNumber":132,"author":{"gitId":"L-K-Chng"},"content":"        fw.write(textToAdd+System.lineSeparator());","lastModifiedDate":"2023-03-03"},{"lineNumber":133,"author":{"gitId":"L-K-Chng"},"content":"        fw.close();","lastModifiedDate":"2023-03-03"},{"lineNumber":134,"author":{"gitId":"L-K-Chng"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":135,"author":{"gitId":"L-K-Chng"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"L-K-Chng":135}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"L-K-Chng"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"L-K-Chng"},"content":" * Represents a general task under no specific category that the user wishes to take note of in their list.","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"L-K-Chng"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"L-K-Chng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"L-K-Chng"},"content":"public class Task {","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"L-K-Chng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"L-K-Chng"},"content":"    protected String description;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"L-K-Chng"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"L-K-Chng"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"L-K-Chng"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"L-K-Chng"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"L-K-Chng"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"L-K-Chng"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"L-K-Chng"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"L-K-Chng"},"content":"    public String getTask() {","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"L-K-Chng"},"content":"        return this.description;","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"L-K-Chng"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"L-K-Chng"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":19,"author":{"gitId":"L-K-Chng"},"content":"    public String getTaskIcon() {","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"L-K-Chng"},"content":"        return \"\";","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"L-K-Chng"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"L-K-Chng"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"L-K-Chng"},"content":"    public String getDeadlineBy() {","lastModifiedDate":"2023-02-27"},{"lineNumber":24,"author":{"gitId":"L-K-Chng"},"content":"        return \"\";","lastModifiedDate":"2023-02-27"},{"lineNumber":25,"author":{"gitId":"L-K-Chng"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":26,"author":{"gitId":"L-K-Chng"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"L-K-Chng"},"content":"    public String getEventStart() {","lastModifiedDate":"2023-02-27"},{"lineNumber":28,"author":{"gitId":"L-K-Chng"},"content":"        return \"\";","lastModifiedDate":"2023-02-27"},{"lineNumber":29,"author":{"gitId":"L-K-Chng"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":30,"author":{"gitId":"L-K-Chng"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":31,"author":{"gitId":"L-K-Chng"},"content":"    public String getEventEnd() {","lastModifiedDate":"2023-02-27"},{"lineNumber":32,"author":{"gitId":"L-K-Chng"},"content":"        return \"\";","lastModifiedDate":"2023-02-27"},{"lineNumber":33,"author":{"gitId":"L-K-Chng"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":34,"author":{"gitId":"L-K-Chng"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":35,"author":{"gitId":"L-K-Chng"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"L-K-Chng"},"content":"     * Checks whether a task has been completed","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"L-K-Chng"},"content":"     * @return \"X\" if task has been done or a whitespace character if it is not done.","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"L-K-Chng"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"L-K-Chng"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"L-K-Chng"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"L-K-Chng"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"L-K-Chng"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":43,"author":{"gitId":"L-K-Chng"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-02-04"},{"lineNumber":44,"author":{"gitId":"L-K-Chng"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-02-04"},{"lineNumber":45,"author":{"gitId":"L-K-Chng"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":46,"author":{"gitId":"L-K-Chng"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":47,"author":{"gitId":"L-K-Chng"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2023-02-04"},{"lineNumber":48,"author":{"gitId":"L-K-Chng"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-02-04"},{"lineNumber":49,"author":{"gitId":"L-K-Chng"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":50,"author":{"gitId":"L-K-Chng"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":51,"author":{"gitId":"L-K-Chng"},"content":"    public String getStatusNum() {","lastModifiedDate":"2023-02-27"},{"lineNumber":52,"author":{"gitId":"L-K-Chng"},"content":"        if (isDone) {","lastModifiedDate":"2023-02-27"},{"lineNumber":53,"author":{"gitId":"L-K-Chng"},"content":"            return \"1\";","lastModifiedDate":"2023-02-27"},{"lineNumber":54,"author":{"gitId":"L-K-Chng"},"content":"        } else {","lastModifiedDate":"2023-02-27"},{"lineNumber":55,"author":{"gitId":"L-K-Chng"},"content":"            return \"0\";","lastModifiedDate":"2023-02-27"},{"lineNumber":56,"author":{"gitId":"L-K-Chng"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":57,"author":{"gitId":"L-K-Chng"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":58,"author":{"gitId":"L-K-Chng"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":59,"author":{"gitId":"L-K-Chng"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"L-K-Chng"},"content":"     * Overrides the Object class\u0027s toString method to return a more informative string that better reflects the user\u0027s task.","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"L-K-Chng"},"content":"     * @return A formatted string of the task\u0027s description and done status.","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"L-K-Chng"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"L-K-Chng"},"content":"    @Override","lastModifiedDate":"2023-02-04"},{"lineNumber":64,"author":{"gitId":"L-K-Chng"},"content":"    public String toString(){","lastModifiedDate":"2023-02-04"},{"lineNumber":65,"author":{"gitId":"L-K-Chng"},"content":"        return \"[\" + this.getStatusIcon() + \"]\" + description;","lastModifiedDate":"2023-02-04"},{"lineNumber":66,"author":{"gitId":"L-K-Chng"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":67,"author":{"gitId":"L-K-Chng"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"L-K-Chng":67}},{"path":"src/main/java/TaskAlreadyMarkedException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"L-K-Chng"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"L-K-Chng"},"content":" * Exception which occurs when user tries to mark a task which has already been marked.","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"L-K-Chng"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"L-K-Chng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"L-K-Chng"},"content":"public class TaskAlreadyMarkedException extends Exception{","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"L-K-Chng"},"content":"    //no need to add.","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"L-K-Chng"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"L-K-Chng":7}},{"path":"src/main/java/TaskAlreadyNotMarkedException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"L-K-Chng"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"L-K-Chng"},"content":" * Exception which occurs when the user tries to unmark a task which","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"L-K-Chng"},"content":" * was already not marked in the beginning.","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"L-K-Chng"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"L-K-Chng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"L-K-Chng"},"content":"public class TaskAlreadyNotMarkedException extends Exception{","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"L-K-Chng"},"content":"    //for tasks that have already been marked","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"L-K-Chng"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"L-K-Chng":8}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"L-K-Chng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"L-K-Chng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"L-K-Chng"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"L-K-Chng"},"content":" * Represents a task manager to encapsulate the user\u0027s list of tasks and execute operations involving the","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"L-K-Chng"},"content":" * adding, deletion and marking of tasks.","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"L-K-Chng"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"L-K-Chng"},"content":"public class TaskList {","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"L-K-Chng"},"content":"    //Data","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"L-K-Chng"},"content":"    protected ArrayList\u003cTask\u003e list;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"L-K-Chng"},"content":"    //Commands","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"L-K-Chng"},"content":"    static final String EVENT_START \u003d \"/from\";","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"L-K-Chng"},"content":"    static final String EVENT_END \u003d \"/to\";","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"L-K-Chng"},"content":"    static final String DEADLINE_BY \u003d \"/by\";","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"L-K-Chng"},"content":"    private static final String DIVIDER  \u003d \"______________________________\";","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"L-K-Chng"},"content":"    //Functions","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"L-K-Chng"},"content":"    public TaskList() {","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"L-K-Chng"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"L-K-Chng"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"L-K-Chng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"L-K-Chng"},"content":"    public int getSize() {","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"L-K-Chng"},"content":"        return list.size();","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"L-K-Chng"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"L-K-Chng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"L-K-Chng"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"L-K-Chng"},"content":"        list.add(task);","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"L-K-Chng"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"L-K-Chng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"L-K-Chng"},"content":"    public Task getTask(int taskNum) {","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"L-K-Chng"},"content":"        return list.get(taskNum);","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"L-K-Chng"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"L-K-Chng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"L-K-Chng"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"L-K-Chng"},"content":"     * Prints the user\u0027s complete list of tasks including details such as task type and completion.","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"L-K-Chng"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"L-K-Chng"},"content":"    public void printList() {","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"L-K-Chng"},"content":"        String listMessage \u003d DIVIDER + System.lineSeparator() + \"Here are the tasks in your list:\";","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"L-K-Chng"},"content":"        System.out.println(listMessage);","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"L-K-Chng"},"content":"        for (int i \u003d 0; i \u003c getSize(); i++) {","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"L-K-Chng"},"content":"            System.out.println((i+1) + \".\" + getTask(i).toString());","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"L-K-Chng"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"L-K-Chng"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"L-K-Chng"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"L-K-Chng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"L-K-Chng"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"L-K-Chng"},"content":"     * Method to mark the status of a task as done.","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"L-K-Chng"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"L-K-Chng"},"content":"    public void markTask(int taskNum) throws ArrayIndexOutOfBoundsException, TaskAlreadyMarkedException {","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"L-K-Chng"},"content":"        if (taskNum \u003e getSize() || taskNum \u003c\u003d 0) {","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"L-K-Chng"},"content":"            throw new ArrayIndexOutOfBoundsException();","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"L-K-Chng"},"content":"        } else {","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"L-K-Chng"},"content":"            int taskIndex \u003d taskNum - 1;","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"L-K-Chng"},"content":"            if (!list.get(taskIndex).isDone) {","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"L-K-Chng"},"content":"                list.get(taskIndex).markAsDone();","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"L-K-Chng"},"content":"                System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"L-K-Chng"},"content":"                System.out.println(DIVIDER + System.lineSeparator() + getTask(taskIndex).toString()","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"L-K-Chng"},"content":"                        + System.lineSeparator() + DIVIDER);","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"L-K-Chng"},"content":"            } else {","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"L-K-Chng"},"content":"                throw new TaskAlreadyMarkedException();","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"L-K-Chng"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"L-K-Chng"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"L-K-Chng"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"L-K-Chng"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"L-K-Chng"},"content":"     * Method to mark the status of a task as not done.","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"L-K-Chng"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"L-K-Chng"},"content":"    public void unmarkTask(int taskNum) throws TaskAlreadyNotMarkedException, ArrayIndexOutOfBoundsException{","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"L-K-Chng"},"content":"        if (taskNum \u003e getSize() || taskNum \u003c\u003d 0) {","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"L-K-Chng"},"content":"            throw new ArrayIndexOutOfBoundsException();","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"L-K-Chng"},"content":"        } else {","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"L-K-Chng"},"content":"            int taskIndex \u003d taskNum - 1;","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"L-K-Chng"},"content":"            if (list.get(taskIndex).isDone) {","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"L-K-Chng"},"content":"                list.get(taskIndex).markAsNotDone();","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"L-K-Chng"},"content":"                System.out.println(\"OK, I\u0027ve marked this task as not done:\");","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"L-K-Chng"},"content":"                System.out.println(DIVIDER + System.lineSeparator() + getTask(taskIndex).toString()","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"L-K-Chng"},"content":"                        + System.lineSeparator() + DIVIDER);","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"L-K-Chng"},"content":"            } else {","lastModifiedDate":"2023-03-03"},{"lineNumber":76,"author":{"gitId":"L-K-Chng"},"content":"                throw new TaskAlreadyNotMarkedException();","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"L-K-Chng"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"L-K-Chng"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"L-K-Chng"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":80,"author":{"gitId":"L-K-Chng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"L-K-Chng"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":82,"author":{"gitId":"L-K-Chng"},"content":"     * Method to delete task from user\u0027s list of tasks.","lastModifiedDate":"2023-03-03"},{"lineNumber":83,"author":{"gitId":"L-K-Chng"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":84,"author":{"gitId":"L-K-Chng"},"content":"    public void deleteTask(int taskNum) {","lastModifiedDate":"2023-03-03"},{"lineNumber":85,"author":{"gitId":"L-K-Chng"},"content":"        String acknowledge \u003d DIVIDER + System.lineSeparator() + \"Noted. I\u0027ve removed this task: \"","lastModifiedDate":"2023-03-03"},{"lineNumber":86,"author":{"gitId":"L-K-Chng"},"content":"                + System.lineSeparator() + getTask(taskNum-1).toString() + System.lineSeparator()","lastModifiedDate":"2023-03-03"},{"lineNumber":87,"author":{"gitId":"L-K-Chng"},"content":"                + \"Now you have \" + (getSize()-1) + \" tasks in the list.\" + System.lineSeparator() + DIVIDER;","lastModifiedDate":"2023-03-03"},{"lineNumber":88,"author":{"gitId":"L-K-Chng"},"content":"        System.out.println(acknowledge);","lastModifiedDate":"2023-03-03"},{"lineNumber":89,"author":{"gitId":"L-K-Chng"},"content":"        list.remove(taskNum-1);","lastModifiedDate":"2023-03-03"},{"lineNumber":90,"author":{"gitId":"L-K-Chng"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":91,"author":{"gitId":"L-K-Chng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":92,"author":{"gitId":"L-K-Chng"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":93,"author":{"gitId":"L-K-Chng"},"content":"     * Output message each time a todo, event or deadline task has been added.","lastModifiedDate":"2023-03-03"},{"lineNumber":94,"author":{"gitId":"L-K-Chng"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":95,"author":{"gitId":"L-K-Chng"},"content":"    public void acknowledgementMessage() {","lastModifiedDate":"2023-03-03"},{"lineNumber":96,"author":{"gitId":"L-K-Chng"},"content":"        String acknowledgement \u003d DIVIDER + System.lineSeparator()","lastModifiedDate":"2023-03-03"},{"lineNumber":97,"author":{"gitId":"L-K-Chng"},"content":"                + \"Got it. I\u0027ve added this task: \" + System.lineSeparator()","lastModifiedDate":"2023-03-03"},{"lineNumber":98,"author":{"gitId":"L-K-Chng"},"content":"                + getTask(getSize()-1).toString();","lastModifiedDate":"2023-03-03"},{"lineNumber":99,"author":{"gitId":"L-K-Chng"},"content":"        System.out.println(acknowledgement);","lastModifiedDate":"2023-03-03"},{"lineNumber":100,"author":{"gitId":"L-K-Chng"},"content":"        System.out.println(\"Now you have \" + (getSize()) + \" task(s) in the list.\"","lastModifiedDate":"2023-03-03"},{"lineNumber":101,"author":{"gitId":"L-K-Chng"},"content":"                + System.lineSeparator() + DIVIDER);","lastModifiedDate":"2023-03-03"},{"lineNumber":102,"author":{"gitId":"L-K-Chng"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":103,"author":{"gitId":"L-K-Chng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":104,"author":{"gitId":"L-K-Chng"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":105,"author":{"gitId":"L-K-Chng"},"content":"     * Processes the user input and adds a todo to the user\u0027s list of tasks if valid.","lastModifiedDate":"2023-03-03"},{"lineNumber":106,"author":{"gitId":"L-K-Chng"},"content":"     * @param userInput The string representing the task currently being handled.","lastModifiedDate":"2023-03-03"},{"lineNumber":107,"author":{"gitId":"L-K-Chng"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":108,"author":{"gitId":"L-K-Chng"},"content":"    public void addTodo(String userInput) {","lastModifiedDate":"2023-03-03"},{"lineNumber":109,"author":{"gitId":"L-K-Chng"},"content":"        list.add(new Todo(userInput));","lastModifiedDate":"2023-03-03"},{"lineNumber":110,"author":{"gitId":"L-K-Chng"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":111,"author":{"gitId":"L-K-Chng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":112,"author":{"gitId":"L-K-Chng"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":113,"author":{"gitId":"L-K-Chng"},"content":"     * Processes the user input and adds an event to the user\u0027s list of tasks if valid.","lastModifiedDate":"2023-03-03"},{"lineNumber":114,"author":{"gitId":"L-K-Chng"},"content":"     * @param userInput The string representing the task currently being handled.","lastModifiedDate":"2023-03-03"},{"lineNumber":115,"author":{"gitId":"L-K-Chng"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":116,"author":{"gitId":"L-K-Chng"},"content":"    public void addEvent(String userInput) {","lastModifiedDate":"2023-03-03"},{"lineNumber":117,"author":{"gitId":"L-K-Chng"},"content":"        //use string.split to split the string into their different descriptions","lastModifiedDate":"2023-03-03"},{"lineNumber":118,"author":{"gitId":"L-K-Chng"},"content":"        String[] eventInput \u003d userInput.split(EVENT_START);","lastModifiedDate":"2023-03-03"},{"lineNumber":119,"author":{"gitId":"L-K-Chng"},"content":"        //split into task description and duration","lastModifiedDate":"2023-03-03"},{"lineNumber":120,"author":{"gitId":"L-K-Chng"},"content":"        String eventTaskDesc \u003d eventInput[0];","lastModifiedDate":"2023-03-03"},{"lineNumber":121,"author":{"gitId":"L-K-Chng"},"content":"        String eventDuration \u003d eventInput[1];","lastModifiedDate":"2023-03-03"},{"lineNumber":122,"author":{"gitId":"L-K-Chng"},"content":"        String[] eventStartAndEnd \u003d eventDuration.split(EVENT_END);","lastModifiedDate":"2023-03-03"},{"lineNumber":123,"author":{"gitId":"L-K-Chng"},"content":"        String eventStart \u003d eventStartAndEnd[0];","lastModifiedDate":"2023-03-03"},{"lineNumber":124,"author":{"gitId":"L-K-Chng"},"content":"        String eventEnd \u003d eventStartAndEnd[1];","lastModifiedDate":"2023-03-03"},{"lineNumber":125,"author":{"gitId":"L-K-Chng"},"content":"        list.add(new Event(eventTaskDesc,eventStart,eventEnd));","lastModifiedDate":"2023-03-03"},{"lineNumber":126,"author":{"gitId":"L-K-Chng"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":127,"author":{"gitId":"L-K-Chng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":128,"author":{"gitId":"L-K-Chng"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":129,"author":{"gitId":"L-K-Chng"},"content":"     * Processes the user input and adds a deadline to the user\u0027s list of tasks if valid.","lastModifiedDate":"2023-03-03"},{"lineNumber":130,"author":{"gitId":"L-K-Chng"},"content":"     * @param userInput The string representing the task currently being handled.","lastModifiedDate":"2023-03-03"},{"lineNumber":131,"author":{"gitId":"L-K-Chng"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":132,"author":{"gitId":"L-K-Chng"},"content":"    public void addDeadline(String userInput) {","lastModifiedDate":"2023-03-03"},{"lineNumber":133,"author":{"gitId":"L-K-Chng"},"content":"        //use string.split to split the string into their different descriptions","lastModifiedDate":"2023-03-03"},{"lineNumber":134,"author":{"gitId":"L-K-Chng"},"content":"        String[] deadlineInput \u003d userInput.split(DEADLINE_BY);","lastModifiedDate":"2023-03-03"},{"lineNumber":135,"author":{"gitId":"L-K-Chng"},"content":"        //split into task description and duration","lastModifiedDate":"2023-03-03"},{"lineNumber":136,"author":{"gitId":"L-K-Chng"},"content":"        String deadlineTaskDesc \u003d deadlineInput[0];","lastModifiedDate":"2023-03-03"},{"lineNumber":137,"author":{"gitId":"L-K-Chng"},"content":"        String deadlineDuration \u003d deadlineInput[1];","lastModifiedDate":"2023-03-03"},{"lineNumber":138,"author":{"gitId":"L-K-Chng"},"content":"        list.add(new Deadline(deadlineTaskDesc, deadlineDuration));","lastModifiedDate":"2023-03-03"},{"lineNumber":139,"author":{"gitId":"L-K-Chng"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":140,"author":{"gitId":"L-K-Chng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":141,"author":{"gitId":"L-K-Chng"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":142,"author":{"gitId":"L-K-Chng"},"content":"     * Finds and prints the list of tasks that coincide with the keyword the user inputs.","lastModifiedDate":"2023-03-03"},{"lineNumber":143,"author":{"gitId":"L-K-Chng"},"content":"     * @param keyWord is the string for which the user wants to find matching tasks.","lastModifiedDate":"2023-03-03"},{"lineNumber":144,"author":{"gitId":"L-K-Chng"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":145,"author":{"gitId":"L-K-Chng"},"content":"    public void findKeyword(String keyWord) {","lastModifiedDate":"2023-03-03"},{"lineNumber":146,"author":{"gitId":"L-K-Chng"},"content":"        ArrayList\u003cTask\u003e foundList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-03"},{"lineNumber":147,"author":{"gitId":"L-K-Chng"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-03-03"},{"lineNumber":148,"author":{"gitId":"L-K-Chng"},"content":"            String taskDesc \u003d getTask(i).toString();","lastModifiedDate":"2023-03-03"},{"lineNumber":149,"author":{"gitId":"L-K-Chng"},"content":"            if (taskDesc.contains(keyWord)) {","lastModifiedDate":"2023-03-03"},{"lineNumber":150,"author":{"gitId":"L-K-Chng"},"content":"                foundList.add(getTask(i));","lastModifiedDate":"2023-03-03"},{"lineNumber":151,"author":{"gitId":"L-K-Chng"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":152,"author":{"gitId":"L-K-Chng"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":153,"author":{"gitId":"L-K-Chng"},"content":"        if (foundList.size() \u003d\u003d 0) {","lastModifiedDate":"2023-03-03"},{"lineNumber":154,"author":{"gitId":"L-K-Chng"},"content":"            System.out.println(DIVIDER + System.lineSeparator()","lastModifiedDate":"2023-03-03"},{"lineNumber":155,"author":{"gitId":"L-K-Chng"},"content":"                    + \"There are no matching tasks in the list.\"","lastModifiedDate":"2023-03-03"},{"lineNumber":156,"author":{"gitId":"L-K-Chng"},"content":"                    + System.lineSeparator() + DIVIDER);","lastModifiedDate":"2023-03-03"},{"lineNumber":157,"author":{"gitId":"L-K-Chng"},"content":"        } else {","lastModifiedDate":"2023-03-03"},{"lineNumber":158,"author":{"gitId":"L-K-Chng"},"content":"            System.out.println(DIVIDER);","lastModifiedDate":"2023-03-03"},{"lineNumber":159,"author":{"gitId":"L-K-Chng"},"content":"            for (Task item: foundList) {","lastModifiedDate":"2023-03-03"},{"lineNumber":160,"author":{"gitId":"L-K-Chng"},"content":"                System.out.println((foundList.indexOf(item) + 1)","lastModifiedDate":"2023-03-03"},{"lineNumber":161,"author":{"gitId":"L-K-Chng"},"content":"                        + \".\" + item.toString());","lastModifiedDate":"2023-03-03"},{"lineNumber":162,"author":{"gitId":"L-K-Chng"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":163,"author":{"gitId":"L-K-Chng"},"content":"            System.out.println(DIVIDER);","lastModifiedDate":"2023-03-03"},{"lineNumber":164,"author":{"gitId":"L-K-Chng"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":165,"author":{"gitId":"L-K-Chng"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":166,"author":{"gitId":"L-K-Chng"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"L-K-Chng":166}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"L-K-Chng"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"L-K-Chng"},"content":" * Represents a task that the user wishes to complete.","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"L-K-Chng"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"L-K-Chng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"L-K-Chng"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"L-K-Chng"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"L-K-Chng"},"content":"        super(description);","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"L-K-Chng"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"L-K-Chng"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"L-K-Chng"},"content":"    public String getTaskIcon() {","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"L-K-Chng"},"content":"        return \"T\";","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"L-K-Chng"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"L-K-Chng"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"L-K-Chng"},"content":"     * Returns the task type and shows whether the task has been completed.","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"L-K-Chng"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"L-K-Chng"},"content":"    @Override","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"L-K-Chng"},"content":"    public String toString() {","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"L-K-Chng"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"L-K-Chng"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"L-K-Chng"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"L-K-Chng":20}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"L-K-Chng"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"L-K-Chng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"L-K-Chng"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"L-K-Chng"},"content":" * Class which helps to facilitate interactions with the user and improve user experience.","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"L-K-Chng"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"L-K-Chng"},"content":"public class Ui {","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"L-K-Chng"},"content":"    private static final String DIVIDER  \u003d \"______________________________\";","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"L-K-Chng"},"content":"    public static void printLogo() {","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"L-K-Chng"},"content":"        String logoMessage \u003d \"Hello from\\n\" +","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"L-K-Chng"},"content":"                \" ____        _        \\n\" +","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"L-K-Chng"},"content":"                \"|  _ \\\\ _   _| | _____ \\n\" +","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"L-K-Chng"},"content":"                \"| | | | | | | |/ / _ \\\\\\n\" +","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"L-K-Chng"},"content":"                \"| |_| | |_| |   \u003c  __/\\n\" +","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"L-K-Chng"},"content":"                \"|____/ \\\\__,_|_|\\\\_\\\\___|\";","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"L-K-Chng"},"content":"        System.out.println(logoMessage);","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"L-K-Chng"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"L-K-Chng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"L-K-Chng"},"content":"    public static void greetUser() {","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"L-K-Chng"},"content":"        String greeting \u003d DIVIDER + System.lineSeparator() + \"Hello! I\u0027m Jarvis!\"","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"L-K-Chng"},"content":"                + System.lineSeparator() + \"What can I do for you?\"","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"L-K-Chng"},"content":"                + System.lineSeparator() + DIVIDER + System.lineSeparator();","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"L-K-Chng"},"content":"        System.out.print(greeting);","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"L-K-Chng"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"L-K-Chng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"L-K-Chng"},"content":"    public static void sayByeToUser() {","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"L-K-Chng"},"content":"        String bye \u003d DIVIDER + System.lineSeparator() + \"Bye. Hope to see you again soon!\"","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"L-K-Chng"},"content":"                + System.lineSeparator() + DIVIDER + System.lineSeparator();","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"L-K-Chng"},"content":"        System.out.println(bye);","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"L-K-Chng"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"L-K-Chng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"L-K-Chng"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"L-K-Chng"},"content":"     * Prints the error message for when user does not specify a proper task type.","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"L-K-Chng"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"L-K-Chng"},"content":"    public static void unknownTaskError() {","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"L-K-Chng"},"content":"        System.out.println(DIVIDER + System.lineSeparator()","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"L-K-Chng"},"content":"                + \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\"","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"L-K-Chng"},"content":"                + System.lineSeparator() + DIVIDER);","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"L-K-Chng"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"L-K-Chng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"L-K-Chng"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"L-K-Chng"},"content":"     * Prints the error message for when user keys in a string instead of a number for mark, unmark or delete commands.","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"L-K-Chng"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"L-K-Chng"},"content":"    public static void invalidTaskNumberError() {","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"L-K-Chng"},"content":"        System.out.println(DIVIDER + System.lineSeparator()","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"L-K-Chng"},"content":"                + \"You did not key in a task number. Please key in a valid task number and try again!\"","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"L-K-Chng"},"content":"                + System.lineSeparator() + DIVIDER);","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"L-K-Chng"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"L-K-Chng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"L-K-Chng"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"L-K-Chng"},"content":"     * Prints the error message for when user does not specify the description for a todo task.","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"L-K-Chng"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"L-K-Chng"},"content":"    public static void emptyDescriptionTodo() {","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"L-K-Chng"},"content":"        String errorMessage \u003d DIVIDER + System.lineSeparator() +","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"L-K-Chng"},"content":"                \"☹ OOPS!!! The description of a todo cannot be empty.\"","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"L-K-Chng"},"content":"                + System.lineSeparator() + DIVIDER;","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"L-K-Chng"},"content":"        System.out.println(errorMessage);","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"L-K-Chng"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"L-K-Chng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"L-K-Chng"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"L-K-Chng"},"content":"     * Prints the error message for when user does not specify the description for a event task.","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"L-K-Chng"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"L-K-Chng"},"content":"    public static void emptyDescriptionEvent() {","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"L-K-Chng"},"content":"        String errorMessage \u003d DIVIDER + System.lineSeparator() +","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"L-K-Chng"},"content":"                \"☹ OOPS!!! The description of a event cannot be empty.\"","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"L-K-Chng"},"content":"                + System.lineSeparator() + DIVIDER;","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"L-K-Chng"},"content":"        System.out.println(errorMessage);","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"L-K-Chng"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"L-K-Chng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"L-K-Chng"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"L-K-Chng"},"content":"     * Prints the error message for when user does not specify the description for a deadline task.","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"L-K-Chng"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"L-K-Chng"},"content":"    public static void emptyDescriptionDeadline() {","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"L-K-Chng"},"content":"        String errorMessage \u003d DIVIDER + System.lineSeparator() +","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"L-K-Chng"},"content":"                \"☹ OOPS!!! The description of a deadline cannot be empty.\"","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"L-K-Chng"},"content":"                + System.lineSeparator() + DIVIDER;","lastModifiedDate":"2023-03-03"},{"lineNumber":76,"author":{"gitId":"L-K-Chng"},"content":"        System.out.println(errorMessage);","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"L-K-Chng"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"L-K-Chng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"L-K-Chng"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":80,"author":{"gitId":"L-K-Chng"},"content":"     * Prints the error message for when user does not specify the keyword for finding a matching task.","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"L-K-Chng"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":82,"author":{"gitId":"L-K-Chng"},"content":"    public static void emptyDescriptionKeyword() {","lastModifiedDate":"2023-03-03"},{"lineNumber":83,"author":{"gitId":"L-K-Chng"},"content":"        String errorMessage \u003d DIVIDER + System.lineSeparator()","lastModifiedDate":"2023-03-03"},{"lineNumber":84,"author":{"gitId":"L-K-Chng"},"content":"                + \"☹ OOPS!!! You did not specify a keyword.\";","lastModifiedDate":"2023-03-03"},{"lineNumber":85,"author":{"gitId":"L-K-Chng"},"content":"        System.out.println(errorMessage);","lastModifiedDate":"2023-03-03"},{"lineNumber":86,"author":{"gitId":"L-K-Chng"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":87,"author":{"gitId":"L-K-Chng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":88,"author":{"gitId":"L-K-Chng"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":89,"author":{"gitId":"L-K-Chng"},"content":"     * Prints the error message for when user does not specify the task number for either","lastModifiedDate":"2023-03-03"},{"lineNumber":90,"author":{"gitId":"L-K-Chng"},"content":"     * mark, unmark or delete tasks.","lastModifiedDate":"2023-03-03"},{"lineNumber":91,"author":{"gitId":"L-K-Chng"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":92,"author":{"gitId":"L-K-Chng"},"content":"    public static void emptyDescriptionNumber() {","lastModifiedDate":"2023-03-03"},{"lineNumber":93,"author":{"gitId":"L-K-Chng"},"content":"        String errorMessage \u003d DIVIDER + System.lineSeparator()","lastModifiedDate":"2023-03-03"},{"lineNumber":94,"author":{"gitId":"L-K-Chng"},"content":"                + \"☹ OOPS!!! The task number cannot be empty.\"","lastModifiedDate":"2023-03-03"},{"lineNumber":95,"author":{"gitId":"L-K-Chng"},"content":"                + System.lineSeparator() + DIVIDER;","lastModifiedDate":"2023-03-03"},{"lineNumber":96,"author":{"gitId":"L-K-Chng"},"content":"        System.out.println(errorMessage);","lastModifiedDate":"2023-03-03"},{"lineNumber":97,"author":{"gitId":"L-K-Chng"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":98,"author":{"gitId":"L-K-Chng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":99,"author":{"gitId":"L-K-Chng"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":100,"author":{"gitId":"L-K-Chng"},"content":"     * Prints the error message for when user tries to mark a task which has already been marked.","lastModifiedDate":"2023-03-03"},{"lineNumber":101,"author":{"gitId":"L-K-Chng"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":102,"author":{"gitId":"L-K-Chng"},"content":"    public static void taskAlreadyMarkedError() {","lastModifiedDate":"2023-03-03"},{"lineNumber":103,"author":{"gitId":"L-K-Chng"},"content":"        String errorMessage \u003d DIVIDER + System.lineSeparator()","lastModifiedDate":"2023-03-03"},{"lineNumber":104,"author":{"gitId":"L-K-Chng"},"content":"                + \"This task has already been marked!\" + System.lineSeparator() + DIVIDER;","lastModifiedDate":"2023-03-03"},{"lineNumber":105,"author":{"gitId":"L-K-Chng"},"content":"        System.out.println(errorMessage);","lastModifiedDate":"2023-03-03"},{"lineNumber":106,"author":{"gitId":"L-K-Chng"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":107,"author":{"gitId":"L-K-Chng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":108,"author":{"gitId":"L-K-Chng"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":109,"author":{"gitId":"L-K-Chng"},"content":"     * Prints the error message for when user tries to unmark a task which was","lastModifiedDate":"2023-03-03"},{"lineNumber":110,"author":{"gitId":"L-K-Chng"},"content":"     * already unmarked initially.","lastModifiedDate":"2023-03-03"},{"lineNumber":111,"author":{"gitId":"L-K-Chng"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":112,"author":{"gitId":"L-K-Chng"},"content":"    public static void taskAlreadyNotMarkedError() {","lastModifiedDate":"2023-03-03"},{"lineNumber":113,"author":{"gitId":"L-K-Chng"},"content":"        String errorMessage \u003d DIVIDER + System.lineSeparator()","lastModifiedDate":"2023-03-03"},{"lineNumber":114,"author":{"gitId":"L-K-Chng"},"content":"                + \"This task was already unmarked!\" + System.lineSeparator() + DIVIDER;","lastModifiedDate":"2023-03-03"},{"lineNumber":115,"author":{"gitId":"L-K-Chng"},"content":"        System.out.println(errorMessage);","lastModifiedDate":"2023-03-03"},{"lineNumber":116,"author":{"gitId":"L-K-Chng"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":117,"author":{"gitId":"L-K-Chng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":118,"author":{"gitId":"L-K-Chng"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":119,"author":{"gitId":"L-K-Chng"},"content":"     * Command to keep receiving user commands until condition is reached.","lastModifiedDate":"2023-03-03"},{"lineNumber":120,"author":{"gitId":"L-K-Chng"},"content":"     * @return the user\u0027s commands.","lastModifiedDate":"2023-03-03"},{"lineNumber":121,"author":{"gitId":"L-K-Chng"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":122,"author":{"gitId":"L-K-Chng"},"content":"    public static String getUserCommand() {","lastModifiedDate":"2023-03-03"},{"lineNumber":123,"author":{"gitId":"L-K-Chng"},"content":"        Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2023-03-03"},{"lineNumber":124,"author":{"gitId":"L-K-Chng"},"content":"        return input.nextLine();","lastModifiedDate":"2023-03-03"},{"lineNumber":125,"author":{"gitId":"L-K-Chng"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":126,"author":{"gitId":"L-K-Chng"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"L-K-Chng":126}}]
