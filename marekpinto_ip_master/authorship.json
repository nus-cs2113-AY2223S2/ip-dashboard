[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"marekpinto"},"content":"### Adding Tasks to List","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"marekpinto"},"content":"Add as many tasks as you\u0027d like to your Task List.","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"marekpinto"},"content":"### Removing Tasks from List","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"marekpinto"},"content":"If you no longer need to keep track of a task, you can remove it from the list.","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"marekpinto"},"content":"### Display All Tasks","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"marekpinto"},"content":"You can obtain a list of all current tasks. ","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"marekpinto"},"content":"### Mark/Unmark Tasks as Complete","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"marekpinto"},"content":"Mark tasks as complete when you finish them, or unmark them if you haven\u0027t finished yet. Completion is displayed as a checkbox next to the corresponding task.","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"marekpinto"},"content":"### Choose from Three Types of Tasks to Match Your Needs","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"marekpinto"},"content":"Tasks can be Todos (simple tasks with only a description), Deadlines (tasks with a specific due date), or Events (tasks that have a definite start and end date/time). Feel free to mix and match tasks of different types within your list!","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"marekpinto"},"content":"### Saving Task List across Multiple Sessions","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"marekpinto"},"content":"Your task list will automatically save in real time, so you don\u0027t need to worry about losing them when you close and re-open Duke.","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"marekpinto"},"content":"### Search for Tasks","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"marekpinto"},"content":"You can search for tasks by keywords to filter for tasks containing a specific keyword or date.","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":35,"author":{"gitId":"marekpinto"},"content":"### `list` - List all Tasks","lastModifiedDate":"2023-03-02"},{"lineNumber":36,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":37,"author":{"gitId":"marekpinto"},"content":"Lists all tasks currently in the list, along with their completion status (and any applicable dates).","lastModifiedDate":"2023-03-02"},{"lineNumber":38,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":39,"author":{"gitId":"marekpinto"},"content":"Example of usage: ","lastModifiedDate":"2023-03-02"},{"lineNumber":40,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":41,"author":{"gitId":"marekpinto"},"content":"`list`","lastModifiedDate":"2023-03-02"},{"lineNumber":42,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":43,"author":{"gitId":"marekpinto"},"content":"Expected outcome:","lastModifiedDate":"2023-03-02"},{"lineNumber":44,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":45,"author":{"gitId":"marekpinto"},"content":"List of tasks in the list. Tasks are listed with a letter indicating their type (D for deadline, T for Todo, or E for Event), a checkbox indicating whether they are complete or not, their description, and any corresponding dates.","lastModifiedDate":"2023-03-02"},{"lineNumber":46,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":47,"author":{"gitId":"marekpinto"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":48,"author":{"gitId":"marekpinto"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-02"},{"lineNumber":49,"author":{"gitId":"marekpinto"},"content":"Here are the tasks in your list:","lastModifiedDate":"2023-03-02"},{"lineNumber":50,"author":{"gitId":"marekpinto"},"content":"1.[T][ ] CS3230 PA2","lastModifiedDate":"2023-03-02"},{"lineNumber":51,"author":{"gitId":"marekpinto"},"content":"2.[D][X] IP (by: Friday)","lastModifiedDate":"2023-03-02"},{"lineNumber":52,"author":{"gitId":"marekpinto"},"content":"3.[T][ ] read book","lastModifiedDate":"2023-03-02"},{"lineNumber":53,"author":{"gitId":"marekpinto"},"content":"4.[D][ ] return book (by: Friday)","lastModifiedDate":"2023-03-02"},{"lineNumber":54,"author":{"gitId":"marekpinto"},"content":"5.[E][ ] taiwan (from: Mar 13 to: Mar 22)","lastModifiedDate":"2023-03-02"},{"lineNumber":55,"author":{"gitId":"marekpinto"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-02"},{"lineNumber":56,"author":{"gitId":"marekpinto"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":57,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":58,"author":{"gitId":"marekpinto"},"content":"### `mark` - Mark a Task as Complete","lastModifiedDate":"2023-03-02"},{"lineNumber":59,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":60,"author":{"gitId":"marekpinto"},"content":"Marks the task corresponding to the input index as complete.","lastModifiedDate":"2023-03-02"},{"lineNumber":61,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":62,"author":{"gitId":"marekpinto"},"content":"Example of usage: ","lastModifiedDate":"2023-03-02"},{"lineNumber":63,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":64,"author":{"gitId":"marekpinto"},"content":"`mark 1`","lastModifiedDate":"2023-03-02"},{"lineNumber":65,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":66,"author":{"gitId":"marekpinto"},"content":"Expected outcome:","lastModifiedDate":"2023-03-02"},{"lineNumber":67,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":68,"author":{"gitId":"marekpinto"},"content":"An \u0027X\u0027 is placed next to the task, indicating its completion. A confirmation message is outputted for your convenience.","lastModifiedDate":"2023-03-02"},{"lineNumber":69,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":70,"author":{"gitId":"marekpinto"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":71,"author":{"gitId":"marekpinto"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-02"},{"lineNumber":72,"author":{"gitId":"marekpinto"},"content":"Ok, I\u0027ve marked this task as done:","lastModifiedDate":"2023-03-02"},{"lineNumber":73,"author":{"gitId":"marekpinto"},"content":"[T][X] CS3230 PA2","lastModifiedDate":"2023-03-02"},{"lineNumber":74,"author":{"gitId":"marekpinto"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-02"},{"lineNumber":75,"author":{"gitId":"marekpinto"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":76,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":77,"author":{"gitId":"marekpinto"},"content":"### `unmark` - Mark a Task as Not Complete","lastModifiedDate":"2023-03-02"},{"lineNumber":78,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":79,"author":{"gitId":"marekpinto"},"content":"Marks the task corresponding to the input index as not complete. ","lastModifiedDate":"2023-03-02"},{"lineNumber":80,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":81,"author":{"gitId":"marekpinto"},"content":"Example of usage: ","lastModifiedDate":"2023-03-02"},{"lineNumber":82,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":83,"author":{"gitId":"marekpinto"},"content":"`unmark 1`","lastModifiedDate":"2023-03-02"},{"lineNumber":84,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":85,"author":{"gitId":"marekpinto"},"content":"Expected outcome:","lastModifiedDate":"2023-03-02"},{"lineNumber":86,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":87,"author":{"gitId":"marekpinto"},"content":"The \u0027X\u0027 is removed from next to the task, indicating the task as not complete. A confirmation message is outputted for your convenience.","lastModifiedDate":"2023-03-02"},{"lineNumber":88,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":89,"author":{"gitId":"marekpinto"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":90,"author":{"gitId":"marekpinto"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-02"},{"lineNumber":91,"author":{"gitId":"marekpinto"},"content":"Ok, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2023-03-02"},{"lineNumber":92,"author":{"gitId":"marekpinto"},"content":"[T][ ] CS3230 PA2","lastModifiedDate":"2023-03-02"},{"lineNumber":93,"author":{"gitId":"marekpinto"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-02"},{"lineNumber":94,"author":{"gitId":"marekpinto"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":95,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":96,"author":{"gitId":"marekpinto"},"content":"### `delete` - Delete a Task","lastModifiedDate":"2023-03-02"},{"lineNumber":97,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":98,"author":{"gitId":"marekpinto"},"content":"Removes the task corresponding to the input index from the task list. ","lastModifiedDate":"2023-03-02"},{"lineNumber":99,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":100,"author":{"gitId":"marekpinto"},"content":"Example of usage: ","lastModifiedDate":"2023-03-02"},{"lineNumber":101,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":102,"author":{"gitId":"marekpinto"},"content":"`delete 5`","lastModifiedDate":"2023-03-02"},{"lineNumber":103,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":104,"author":{"gitId":"marekpinto"},"content":"Expected outcome:","lastModifiedDate":"2023-03-02"},{"lineNumber":105,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":106,"author":{"gitId":"marekpinto"},"content":"Task is removed from the list. A confirmation message is outputted for your convenience.","lastModifiedDate":"2023-03-02"},{"lineNumber":107,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":108,"author":{"gitId":"marekpinto"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":109,"author":{"gitId":"marekpinto"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-02"},{"lineNumber":110,"author":{"gitId":"marekpinto"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2023-03-02"},{"lineNumber":111,"author":{"gitId":"marekpinto"},"content":"[E][ ] taiwan (from: Mar 13 to: Mar 22)","lastModifiedDate":"2023-03-02"},{"lineNumber":112,"author":{"gitId":"marekpinto"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-02"},{"lineNumber":113,"author":{"gitId":"marekpinto"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":114,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":115,"author":{"gitId":"marekpinto"},"content":"### `todo` - Add a Todo Task","lastModifiedDate":"2023-03-02"},{"lineNumber":116,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":117,"author":{"gitId":"marekpinto"},"content":"Adds a todo to the end of the task list. Requires a description of the todo.","lastModifiedDate":"2023-03-02"},{"lineNumber":118,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":119,"author":{"gitId":"marekpinto"},"content":"Example of usage: ","lastModifiedDate":"2023-03-02"},{"lineNumber":120,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":121,"author":{"gitId":"marekpinto"},"content":"`todo internship applications`","lastModifiedDate":"2023-03-02"},{"lineNumber":122,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":123,"author":{"gitId":"marekpinto"},"content":"Expected outcome:","lastModifiedDate":"2023-03-02"},{"lineNumber":124,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":125,"author":{"gitId":"marekpinto"},"content":"Adds a todo to the list. Prints out the new task and number of tasks in the list.","lastModifiedDate":"2023-03-02"},{"lineNumber":126,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":127,"author":{"gitId":"marekpinto"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":128,"author":{"gitId":"marekpinto"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-02"},{"lineNumber":129,"author":{"gitId":"marekpinto"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-03-02"},{"lineNumber":130,"author":{"gitId":"marekpinto"},"content":"[T][ ] internship applications","lastModifiedDate":"2023-03-02"},{"lineNumber":131,"author":{"gitId":"marekpinto"},"content":"Now you have 5 tasks in the list.","lastModifiedDate":"2023-03-02"},{"lineNumber":132,"author":{"gitId":"marekpinto"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-02"},{"lineNumber":133,"author":{"gitId":"marekpinto"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":134,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":135,"author":{"gitId":"marekpinto"},"content":"### `deadline` - Add a Deadline Task","lastModifiedDate":"2023-03-02"},{"lineNumber":136,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":137,"author":{"gitId":"marekpinto"},"content":"Adds a deadline to the end of the task list. Requires a description of the deadline, as well as a due date.","lastModifiedDate":"2023-03-02"},{"lineNumber":138,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":139,"author":{"gitId":"marekpinto"},"content":"Example of usage: ","lastModifiedDate":"2023-03-02"},{"lineNumber":140,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":141,"author":{"gitId":"marekpinto"},"content":"`deadline write essay /by Saturday 9pm`","lastModifiedDate":"2023-03-02"},{"lineNumber":142,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":143,"author":{"gitId":"marekpinto"},"content":"Expected outcome:","lastModifiedDate":"2023-03-02"},{"lineNumber":144,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":145,"author":{"gitId":"marekpinto"},"content":"Adds a deadline to the list with the corresponding description and due date. Prints out the new task and number of tasks in the list.","lastModifiedDate":"2023-03-02"},{"lineNumber":146,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":147,"author":{"gitId":"marekpinto"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":148,"author":{"gitId":"marekpinto"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-02"},{"lineNumber":149,"author":{"gitId":"marekpinto"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-03-02"},{"lineNumber":150,"author":{"gitId":"marekpinto"},"content":"[D][ ] write essay (by: Saturday 9pm)","lastModifiedDate":"2023-03-02"},{"lineNumber":151,"author":{"gitId":"marekpinto"},"content":"Now you have 6 tasks in the list.","lastModifiedDate":"2023-03-02"},{"lineNumber":152,"author":{"gitId":"marekpinto"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-02"},{"lineNumber":153,"author":{"gitId":"marekpinto"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":154,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":155,"author":{"gitId":"marekpinto"},"content":"### `event` - Add an Event Task","lastModifiedDate":"2023-03-02"},{"lineNumber":156,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":157,"author":{"gitId":"marekpinto"},"content":"Adds an event to the end of the task list. Requires a description of the event, start date/time, and end date/time.","lastModifiedDate":"2023-03-02"},{"lineNumber":158,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":159,"author":{"gitId":"marekpinto"},"content":"Example of usage: ","lastModifiedDate":"2023-03-02"},{"lineNumber":160,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":161,"author":{"gitId":"marekpinto"},"content":"`event work meeting /from Wednesday 2pm /to 4pm`","lastModifiedDate":"2023-03-02"},{"lineNumber":162,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":163,"author":{"gitId":"marekpinto"},"content":"Expected outcome:","lastModifiedDate":"2023-03-02"},{"lineNumber":164,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":165,"author":{"gitId":"marekpinto"},"content":"Adds an event to the list. Prints out the new task and number of tasks in the list.","lastModifiedDate":"2023-03-02"},{"lineNumber":166,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":167,"author":{"gitId":"marekpinto"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":168,"author":{"gitId":"marekpinto"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-02"},{"lineNumber":169,"author":{"gitId":"marekpinto"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-03-02"},{"lineNumber":170,"author":{"gitId":"marekpinto"},"content":"[E][ ] work meeting (from: Wednesday 2pm to: 4pm)","lastModifiedDate":"2023-03-02"},{"lineNumber":171,"author":{"gitId":"marekpinto"},"content":"Now you have 7 tasks in the list.","lastModifiedDate":"2023-03-02"},{"lineNumber":172,"author":{"gitId":"marekpinto"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-02"},{"lineNumber":173,"author":{"gitId":"marekpinto"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":174,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":175,"author":{"gitId":"marekpinto"},"content":"### `find` - Search for Tasks","lastModifiedDate":"2023-03-02"},{"lineNumber":176,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":177,"author":{"gitId":"marekpinto"},"content":"Searches for all tasks with descriptions or dates that contain the keyword in the argument.","lastModifiedDate":"2023-03-02"},{"lineNumber":178,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":179,"author":{"gitId":"marekpinto"},"content":"Example of usage: ","lastModifiedDate":"2023-03-02"},{"lineNumber":180,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":181,"author":{"gitId":"marekpinto"},"content":"`find book`","lastModifiedDate":"2023-03-02"},{"lineNumber":182,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":183,"author":{"gitId":"marekpinto"},"content":"Expected outcome:","lastModifiedDate":"2023-03-02"},{"lineNumber":184,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":185,"author":{"gitId":"marekpinto"},"content":"Lists all tasks that contain the keyword \"book\".","lastModifiedDate":"2023-03-02"},{"lineNumber":186,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":187,"author":{"gitId":"marekpinto"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":188,"author":{"gitId":"marekpinto"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-02"},{"lineNumber":189,"author":{"gitId":"marekpinto"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2023-03-02"},{"lineNumber":190,"author":{"gitId":"marekpinto"},"content":"3.[T][ ] read book","lastModifiedDate":"2023-03-02"},{"lineNumber":191,"author":{"gitId":"marekpinto"},"content":"4.[D][ ] return book (by: Friday)","lastModifiedDate":"2023-03-02"},{"lineNumber":192,"author":{"gitId":"marekpinto"},"content":"8.[E][ ] reading one chapter per day (from: today to: completion of book)","lastModifiedDate":"2023-03-02"},{"lineNumber":193,"author":{"gitId":"marekpinto"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-02"},{"lineNumber":194,"author":{"gitId":"marekpinto"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":195,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":196,"author":{"gitId":"marekpinto"},"content":"### `bye` - Exit Duke ","lastModifiedDate":"2023-03-02"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":198,"author":{"gitId":"marekpinto"},"content":"Exits Duke. Task list is stored so that when you come back, you\u0027ll keep all of your progress.","lastModifiedDate":"2023-03-02"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2019-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":202,"author":{"gitId":"marekpinto"},"content":"`bye`","lastModifiedDate":"2023-03-02"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":206,"author":{"gitId":"marekpinto"},"content":"Quits the program.","lastModifiedDate":"2023-03-02"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":208,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":209,"author":{"gitId":"marekpinto"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-02"},{"lineNumber":210,"author":{"gitId":"marekpinto"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2023-03-02"},{"lineNumber":211,"author":{"gitId":"marekpinto"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-02"},{"lineNumber":212,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"marekpinto":192,"-":20}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marekpinto"},"content":"package duke;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"marekpinto"},"content":"/**","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"marekpinto"},"content":" * Represents an upcoming deadline. A \u003ccode\u003eDeadline\u003c/code\u003e object corresponds to","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"marekpinto"},"content":" * a task with a corresponding due date.","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"marekpinto"},"content":" */","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"marekpinto"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"marekpinto"},"content":"    protected String by;","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"marekpinto"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"marekpinto"},"content":"     * Initializes Deadline class.","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"marekpinto"},"content":"     *","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"marekpinto"},"content":"     * @param description Description of deadline.","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"marekpinto"},"content":"     * @param by Date/time when deadline is due.","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"marekpinto"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"marekpinto"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"marekpinto"},"content":"        super(description);","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"marekpinto"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"marekpinto"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"marekpinto"},"content":"    @Override","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"marekpinto"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"marekpinto"},"content":"     * Returns standardized string to be stored on memory that can be read back into the program in the future.","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"marekpinto"},"content":"     *","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"marekpinto"},"content":"     * @return Standardized string to be stored in memory.","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"marekpinto"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"marekpinto"},"content":"    public String storeString() {","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"marekpinto"},"content":"        return super.storeString() + \"|D|\" + description + \"|\" + by + \"\\n\";","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"marekpinto"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"marekpinto"},"content":"    @Override","lastModifiedDate":"2023-03-02"},{"lineNumber":33,"author":{"gitId":"marekpinto"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":34,"author":{"gitId":"marekpinto"},"content":"     * Overrides matchesKeyword in Task. Searches through description and by field for a keyword.","lastModifiedDate":"2023-03-02"},{"lineNumber":35,"author":{"gitId":"marekpinto"},"content":"     *","lastModifiedDate":"2023-03-02"},{"lineNumber":36,"author":{"gitId":"marekpinto"},"content":"     * @param keyword Keyword to search for.","lastModifiedDate":"2023-03-02"},{"lineNumber":37,"author":{"gitId":"marekpinto"},"content":"     * @return True if Deadline matches the keyword, False otherwise.","lastModifiedDate":"2023-03-02"},{"lineNumber":38,"author":{"gitId":"marekpinto"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":39,"author":{"gitId":"marekpinto"},"content":"    public boolean matchesKeyword (String keyword) {","lastModifiedDate":"2023-03-02"},{"lineNumber":40,"author":{"gitId":"marekpinto"},"content":"        if (description.contains(keyword) || by.contains(keyword)) {","lastModifiedDate":"2023-03-02"},{"lineNumber":41,"author":{"gitId":"marekpinto"},"content":"            return true;","lastModifiedDate":"2023-03-02"},{"lineNumber":42,"author":{"gitId":"marekpinto"},"content":"        } else {","lastModifiedDate":"2023-03-02"},{"lineNumber":43,"author":{"gitId":"marekpinto"},"content":"            return false;","lastModifiedDate":"2023-03-02"},{"lineNumber":44,"author":{"gitId":"marekpinto"},"content":"        }","lastModifiedDate":"2023-03-02"},{"lineNumber":45,"author":{"gitId":"marekpinto"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":46,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":47,"author":{"gitId":"marekpinto"},"content":"    @Override","lastModifiedDate":"2023-02-07"},{"lineNumber":48,"author":{"gitId":"marekpinto"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":49,"author":{"gitId":"marekpinto"},"content":"     * Overrides string representation for deadlines, with a [D] to","lastModifiedDate":"2023-02-07"},{"lineNumber":50,"author":{"gitId":"marekpinto"},"content":"     * indicate deadline class and including by field.","lastModifiedDate":"2023-02-07"},{"lineNumber":51,"author":{"gitId":"marekpinto"},"content":"     *","lastModifiedDate":"2023-02-07"},{"lineNumber":52,"author":{"gitId":"marekpinto"},"content":"     * @return String Representation.","lastModifiedDate":"2023-02-07"},{"lineNumber":53,"author":{"gitId":"marekpinto"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":54,"author":{"gitId":"marekpinto"},"content":"    public String toString() {","lastModifiedDate":"2023-02-07"},{"lineNumber":55,"author":{"gitId":"marekpinto"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-02-07"},{"lineNumber":56,"author":{"gitId":"marekpinto"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":57,"author":{"gitId":"marekpinto"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"marekpinto":57}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marekpinto"},"content":"package duke;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"marekpinto"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"marekpinto"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"marekpinto"},"content":"/**","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"marekpinto"},"content":" * Primary class representing an instance of a Duke Chatbot.","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"marekpinto"},"content":" */","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"marekpinto"},"content":"public class Duke {","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"marekpinto"},"content":"    private Ui ui;","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"marekpinto"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"marekpinto"},"content":"    private Storage storage;","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"marekpinto"},"content":"    private Parser parser;","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"marekpinto"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"marekpinto"},"content":"     * Initializes other classes for use in the program. Reads tasks stored on memory from previous sessions.","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"marekpinto"},"content":"     *","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"marekpinto"},"content":"     * @param filePath Name of filepath where task data is stored.","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"marekpinto"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"marekpinto"},"content":"    public Duke (String filePath) {","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"marekpinto"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"marekpinto"},"content":"        storage \u003d new Storage(\"duke.txt\");","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"marekpinto"},"content":"        try {","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"marekpinto"},"content":"            tasks \u003d storage.readFromStorage();","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"marekpinto"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"marekpinto"},"content":"            ui.printSimpleMessage(\"Error reading from saved data.\");","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"marekpinto"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"marekpinto"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"marekpinto"},"content":"        parser \u003d new Parser(tasks);","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"marekpinto"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"marekpinto"},"content":"    /** ","lastModifiedDate":"2023-03-02"},{"lineNumber":34,"author":{"gitId":"marekpinto"},"content":"     * Takes input from standard input. Passes input into Parser to be processed.","lastModifiedDate":"2023-03-02"},{"lineNumber":35,"author":{"gitId":"marekpinto"},"content":"     * Finally, calls writeToFile method to store results on memory.","lastModifiedDate":"2023-03-02"},{"lineNumber":36,"author":{"gitId":"marekpinto"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":37,"author":{"gitId":"marekpinto"},"content":"    public void run () {","lastModifiedDate":"2023-03-02"},{"lineNumber":38,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"marekpinto"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"marekpinto"},"content":"        ui.printSimpleMessage(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");","lastModifiedDate":"2023-03-02"},{"lineNumber":41,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"marekpinto"},"content":"        boolean hasNotExited \u003d true;","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"marekpinto"},"content":"        while (hasNotExited) {","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"marekpinto"},"content":"            System.out.println();","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"marekpinto"},"content":"            String input \u003d in.nextLine();","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"marekpinto"},"content":"            hasNotExited \u003d parser.parseInput(input);","lastModifiedDate":"2023-03-02"},{"lineNumber":47,"author":{"gitId":"marekpinto"},"content":"            try {","lastModifiedDate":"2023-03-02"},{"lineNumber":48,"author":{"gitId":"marekpinto"},"content":"                storage.writeToFile(tasks);     ","lastModifiedDate":"2023-03-02"},{"lineNumber":49,"author":{"gitId":"marekpinto"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-03-02"},{"lineNumber":50,"author":{"gitId":"marekpinto"},"content":"                ui.printSimpleMessage(\"Error saving data. Task list may not be saved after program exits.\");","lastModifiedDate":"2023-03-02"},{"lineNumber":51,"author":{"gitId":"marekpinto"},"content":"            }      ","lastModifiedDate":"2023-03-02"},{"lineNumber":52,"author":{"gitId":"marekpinto"},"content":"        } ","lastModifiedDate":"2023-02-07"},{"lineNumber":53,"author":{"gitId":"marekpinto"},"content":"        in.close();","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"marekpinto"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":55,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":56,"author":{"gitId":"marekpinto"},"content":"    ","lastModifiedDate":"2023-03-02"},{"lineNumber":57,"author":{"gitId":"marekpinto"},"content":"    /** ","lastModifiedDate":"2023-03-02"},{"lineNumber":58,"author":{"gitId":"marekpinto"},"content":"     * Starts execution of program by creating an instance of the Duke class.","lastModifiedDate":"2023-03-02"},{"lineNumber":59,"author":{"gitId":"marekpinto"},"content":"     * @param args","lastModifiedDate":"2023-03-02"},{"lineNumber":60,"author":{"gitId":"marekpinto"},"content":"     * @throws IOException","lastModifiedDate":"2023-03-02"},{"lineNumber":61,"author":{"gitId":"marekpinto"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":62,"author":{"gitId":"marekpinto"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2023-03-02"},{"lineNumber":63,"author":{"gitId":"marekpinto"},"content":"        new Duke(\"duke.txt\").run();","lastModifiedDate":"2023-03-02"},{"lineNumber":64,"author":{"gitId":"marekpinto"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":65,"author":{"gitId":"marekpinto"},"content":"}","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"marekpinto":65}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marekpinto"},"content":"package duke;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"marekpinto"},"content":"/**","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"marekpinto"},"content":" * Represents an event. A \u003ccode\u003eEvent\u003c/code\u003e object corresponds to","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"marekpinto"},"content":" * a task with a concrete start and end date.","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"marekpinto"},"content":" */","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"marekpinto"},"content":"public class Event extends Task {","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"marekpinto"},"content":"    protected String from;","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"marekpinto"},"content":"    protected String to;","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"marekpinto"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"marekpinto"},"content":"     * Initializes Event class.","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"marekpinto"},"content":"     *","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"marekpinto"},"content":"     * @param description Description of event.","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"marekpinto"},"content":"     * @param from Date/time when event starts.","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"marekpinto"},"content":"     * @param to Date/time when event ends.","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"marekpinto"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"marekpinto"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"marekpinto"},"content":"        super(description);","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"marekpinto"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"marekpinto"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"marekpinto"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"marekpinto"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"marekpinto"},"content":"     * Returns standardized string to be stored on memory that can be read back into","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"marekpinto"},"content":"     * the program in the future.","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"marekpinto"},"content":"     *","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"marekpinto"},"content":"     * @return Standardized string to be stored in memory.","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"marekpinto"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"marekpinto"},"content":"    public String storeString() {","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"marekpinto"},"content":"        return super.storeString() + \"|E|\" + description + \"|\" + from + \"|\" + to + \"\\n\";","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"marekpinto"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"marekpinto"},"content":"    @Override","lastModifiedDate":"2023-03-02"},{"lineNumber":37,"author":{"gitId":"marekpinto"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":38,"author":{"gitId":"marekpinto"},"content":"     * Overrides matchesKeyword in Task. Searches through description, from, and to","lastModifiedDate":"2023-03-02"},{"lineNumber":39,"author":{"gitId":"marekpinto"},"content":"     * fields for a keyword.","lastModifiedDate":"2023-03-02"},{"lineNumber":40,"author":{"gitId":"marekpinto"},"content":"     *","lastModifiedDate":"2023-03-02"},{"lineNumber":41,"author":{"gitId":"marekpinto"},"content":"     * @param keyword Keyword to search for.","lastModifiedDate":"2023-03-02"},{"lineNumber":42,"author":{"gitId":"marekpinto"},"content":"     * @return True if Event matches the keyword, False otherwise.","lastModifiedDate":"2023-03-02"},{"lineNumber":43,"author":{"gitId":"marekpinto"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":44,"author":{"gitId":"marekpinto"},"content":"    public boolean matchesKeyword(String keyword) {","lastModifiedDate":"2023-03-02"},{"lineNumber":45,"author":{"gitId":"marekpinto"},"content":"        if (description.contains(keyword) || from.contains(keyword) || to.contains(keyword)) {","lastModifiedDate":"2023-03-02"},{"lineNumber":46,"author":{"gitId":"marekpinto"},"content":"            return true;","lastModifiedDate":"2023-03-02"},{"lineNumber":47,"author":{"gitId":"marekpinto"},"content":"        } else {","lastModifiedDate":"2023-03-02"},{"lineNumber":48,"author":{"gitId":"marekpinto"},"content":"            return false;","lastModifiedDate":"2023-03-02"},{"lineNumber":49,"author":{"gitId":"marekpinto"},"content":"        }","lastModifiedDate":"2023-03-02"},{"lineNumber":50,"author":{"gitId":"marekpinto"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":51,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":52,"author":{"gitId":"marekpinto"},"content":"    @Override","lastModifiedDate":"2023-02-07"},{"lineNumber":53,"author":{"gitId":"marekpinto"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":54,"author":{"gitId":"marekpinto"},"content":"     * Overrides string representation for todos, with a [E] to indicate event class","lastModifiedDate":"2023-02-16"},{"lineNumber":55,"author":{"gitId":"marekpinto"},"content":"     * and conveying information about time.","lastModifiedDate":"2023-03-02"},{"lineNumber":56,"author":{"gitId":"marekpinto"},"content":"     *","lastModifiedDate":"2023-02-07"},{"lineNumber":57,"author":{"gitId":"marekpinto"},"content":"     * @return String Representation.","lastModifiedDate":"2023-02-07"},{"lineNumber":58,"author":{"gitId":"marekpinto"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":59,"author":{"gitId":"marekpinto"},"content":"    public String toString() {","lastModifiedDate":"2023-02-07"},{"lineNumber":60,"author":{"gitId":"marekpinto"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.from + \" to: \" + this.to + \")\";","lastModifiedDate":"2023-02-07"},{"lineNumber":61,"author":{"gitId":"marekpinto"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":62,"author":{"gitId":"marekpinto"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"marekpinto":62}},{"path":"src/main/java/duke/IncorrectIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marekpinto"},"content":"package duke;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"marekpinto"},"content":"/**","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"marekpinto"},"content":" * A \u003ccode\u003eIncorrectIndexException\u003c/code\u003e represents an Exception ","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"marekpinto"},"content":" * that happens when a method receives an index parameter that is out of bounds.","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"marekpinto"},"content":" */","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"marekpinto"},"content":"public class IncorrectIndexException extends Exception {","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"marekpinto"},"content":"    ","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"marekpinto"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"marekpinto":9}},{"path":"src/main/java/duke/InsufficientParametersException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marekpinto"},"content":"package duke;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"marekpinto"},"content":"/**","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"marekpinto"},"content":" * A \u003ccode\u003eInsufficientParametersException\u003c/code\u003e object corresponds to an Exception","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"marekpinto"},"content":" * that happens when a user executes a command without all of the necessary parameters.","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"marekpinto"},"content":" */","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"marekpinto"},"content":"public class InsufficientParametersException extends Exception {","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"marekpinto"},"content":"    ","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"marekpinto"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"marekpinto":9}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marekpinto"},"content":"package duke;","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"marekpinto"},"content":"public class Parser {","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"marekpinto"},"content":"    Ui ui;","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"marekpinto"},"content":"    TaskList tasks;","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"marekpinto"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"marekpinto"},"content":"     * Initializes Parser class","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"marekpinto"},"content":"     *","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"marekpinto"},"content":"     * @param tasks Pointer to TaskList storing all tasks currently in the list.","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"marekpinto"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"marekpinto"},"content":"    public Parser(TaskList tasks) {","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"marekpinto"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"marekpinto"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"marekpinto"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"marekpinto"},"content":"    enum TaskType {","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"marekpinto"},"content":"        TODO,","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"marekpinto"},"content":"        DEADLINE,","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"marekpinto"},"content":"        EVENT","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"marekpinto"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"marekpinto"},"content":"    ","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"marekpinto"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"marekpinto"},"content":"     * Adds a new task to the TaskList and calls methods to print the appropriate output.","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"marekpinto"},"content":"     *","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"marekpinto"},"content":"     * @param type Enum type representing either a TODO, EVENT, or DEADLINE.","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"marekpinto"},"content":"     * @param argsSplit, String array of length 2 with command in first index and arguments in second index.","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"marekpinto"},"content":"     * @throws InsufficientParametersException If not enough parameters are passed in for a respective command.","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"marekpinto"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"marekpinto"},"content":"    private void handleAddTask(TaskType type, String[] argsSplit) throws InsufficientParametersException {","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"marekpinto"},"content":"        if (argsSplit.length \u003c 2) {","lastModifiedDate":"2023-03-02"},{"lineNumber":33,"author":{"gitId":"marekpinto"},"content":"            throw new InsufficientParametersException();","lastModifiedDate":"2023-03-02"},{"lineNumber":34,"author":{"gitId":"marekpinto"},"content":"        }","lastModifiedDate":"2023-03-02"},{"lineNumber":35,"author":{"gitId":"marekpinto"},"content":"        String args \u003d argsSplit[1];","lastModifiedDate":"2023-03-02"},{"lineNumber":36,"author":{"gitId":"marekpinto"},"content":"        ","lastModifiedDate":"2023-03-02"},{"lineNumber":37,"author":{"gitId":"marekpinto"},"content":"        Task task;","lastModifiedDate":"2023-03-02"},{"lineNumber":38,"author":{"gitId":"marekpinto"},"content":"        String[] argsList;","lastModifiedDate":"2023-03-02"},{"lineNumber":39,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":40,"author":{"gitId":"marekpinto"},"content":"        switch (type) {","lastModifiedDate":"2023-03-02"},{"lineNumber":41,"author":{"gitId":"marekpinto"},"content":"        case TODO:","lastModifiedDate":"2023-03-02"},{"lineNumber":42,"author":{"gitId":"marekpinto"},"content":"            task \u003d new Todo(args);","lastModifiedDate":"2023-03-02"},{"lineNumber":43,"author":{"gitId":"marekpinto"},"content":"            break;","lastModifiedDate":"2023-03-02"},{"lineNumber":44,"author":{"gitId":"marekpinto"},"content":"        case DEADLINE:","lastModifiedDate":"2023-03-02"},{"lineNumber":45,"author":{"gitId":"marekpinto"},"content":"            // Split into arguments for description and by field","lastModifiedDate":"2023-03-02"},{"lineNumber":46,"author":{"gitId":"marekpinto"},"content":"            argsList \u003d args.split(\" /by \");","lastModifiedDate":"2023-03-02"},{"lineNumber":47,"author":{"gitId":"marekpinto"},"content":"            if (argsList.length \u003c 2) {","lastModifiedDate":"2023-03-02"},{"lineNumber":48,"author":{"gitId":"marekpinto"},"content":"                throw new InsufficientParametersException();","lastModifiedDate":"2023-03-02"},{"lineNumber":49,"author":{"gitId":"marekpinto"},"content":"            }","lastModifiedDate":"2023-03-02"},{"lineNumber":50,"author":{"gitId":"marekpinto"},"content":"            task \u003d new Deadline(argsList[0], argsList[1]);","lastModifiedDate":"2023-03-02"},{"lineNumber":51,"author":{"gitId":"marekpinto"},"content":"            break;","lastModifiedDate":"2023-03-02"},{"lineNumber":52,"author":{"gitId":"marekpinto"},"content":"        case EVENT:","lastModifiedDate":"2023-03-02"},{"lineNumber":53,"author":{"gitId":"marekpinto"},"content":"            // Uses regex to split into arguments for description, from field, and to field.","lastModifiedDate":"2023-03-02"},{"lineNumber":54,"author":{"gitId":"marekpinto"},"content":"            argsList \u003d args.split(\" \\\\/(from|to) \");","lastModifiedDate":"2023-03-02"},{"lineNumber":55,"author":{"gitId":"marekpinto"},"content":"            if (argsList.length \u003c 3) {","lastModifiedDate":"2023-03-02"},{"lineNumber":56,"author":{"gitId":"marekpinto"},"content":"                throw new InsufficientParametersException();","lastModifiedDate":"2023-03-02"},{"lineNumber":57,"author":{"gitId":"marekpinto"},"content":"            }","lastModifiedDate":"2023-03-02"},{"lineNumber":58,"author":{"gitId":"marekpinto"},"content":"            task \u003d new Event(argsList[0], argsList[1], argsList[2]);","lastModifiedDate":"2023-03-02"},{"lineNumber":59,"author":{"gitId":"marekpinto"},"content":"            break;","lastModifiedDate":"2023-03-02"},{"lineNumber":60,"author":{"gitId":"marekpinto"},"content":"        default:","lastModifiedDate":"2023-03-02"},{"lineNumber":61,"author":{"gitId":"marekpinto"},"content":"            throw new RuntimeException(\"Unrecognized Task Type\");","lastModifiedDate":"2023-03-02"},{"lineNumber":62,"author":{"gitId":"marekpinto"},"content":"        }","lastModifiedDate":"2023-03-02"},{"lineNumber":63,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":64,"author":{"gitId":"marekpinto"},"content":"        tasks.addTask(task);","lastModifiedDate":"2023-03-02"},{"lineNumber":65,"author":{"gitId":"marekpinto"},"content":"        ui.printAddTaskConfirmation(task, tasks.length());","lastModifiedDate":"2023-03-02"},{"lineNumber":66,"author":{"gitId":"marekpinto"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":67,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":68,"author":{"gitId":"marekpinto"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":69,"author":{"gitId":"marekpinto"},"content":"     * Parses an input string, printing the appropriate output and handling any exceptions.","lastModifiedDate":"2023-03-02"},{"lineNumber":70,"author":{"gitId":"marekpinto"},"content":"     *","lastModifiedDate":"2023-03-02"},{"lineNumber":71,"author":{"gitId":"marekpinto"},"content":"     * @param input Line of input from the user.","lastModifiedDate":"2023-03-02"},{"lineNumber":72,"author":{"gitId":"marekpinto"},"content":"     * @return True if more input is expected, false if user sent \"bye\" command.","lastModifiedDate":"2023-03-02"},{"lineNumber":73,"author":{"gitId":"marekpinto"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":74,"author":{"gitId":"marekpinto"},"content":"    public boolean parseInput(String input) {","lastModifiedDate":"2023-03-02"},{"lineNumber":75,"author":{"gitId":"marekpinto"},"content":"        // Splits into only two sections, one for command name and one for arguments","lastModifiedDate":"2023-03-02"},{"lineNumber":76,"author":{"gitId":"marekpinto"},"content":"        try {","lastModifiedDate":"2023-03-02"},{"lineNumber":77,"author":{"gitId":"marekpinto"},"content":"            String[] splitIntoArgs \u003d input.split(\" \", 2);","lastModifiedDate":"2023-03-02"},{"lineNumber":78,"author":{"gitId":"marekpinto"},"content":"            String cmd \u003d splitIntoArgs[0];","lastModifiedDate":"2023-03-02"},{"lineNumber":79,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":80,"author":{"gitId":"marekpinto"},"content":"            switch (cmd) {","lastModifiedDate":"2023-03-02"},{"lineNumber":81,"author":{"gitId":"marekpinto"},"content":"            case \"bye\":","lastModifiedDate":"2023-03-02"},{"lineNumber":82,"author":{"gitId":"marekpinto"},"content":"                ui.printSimpleMessage(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-03-02"},{"lineNumber":83,"author":{"gitId":"marekpinto"},"content":"                return false;","lastModifiedDate":"2023-03-02"},{"lineNumber":84,"author":{"gitId":"marekpinto"},"content":"            case \"list\":","lastModifiedDate":"2023-03-02"},{"lineNumber":85,"author":{"gitId":"marekpinto"},"content":"                ui.printList(tasks);","lastModifiedDate":"2023-03-02"},{"lineNumber":86,"author":{"gitId":"marekpinto"},"content":"                break;","lastModifiedDate":"2023-03-02"},{"lineNumber":87,"author":{"gitId":"marekpinto"},"content":"            case \"mark\":","lastModifiedDate":"2023-03-02"},{"lineNumber":88,"author":{"gitId":"marekpinto"},"content":"                if (splitIntoArgs.length \u003c 2) {","lastModifiedDate":"2023-03-02"},{"lineNumber":89,"author":{"gitId":"marekpinto"},"content":"                    throw new InsufficientParametersException();","lastModifiedDate":"2023-03-02"},{"lineNumber":90,"author":{"gitId":"marekpinto"},"content":"                }","lastModifiedDate":"2023-03-02"},{"lineNumber":91,"author":{"gitId":"marekpinto"},"content":"                int toMark \u003d Integer.parseInt(splitIntoArgs[1]) - 1;","lastModifiedDate":"2023-03-02"},{"lineNumber":92,"author":{"gitId":"marekpinto"},"content":"                tasks.getTask(toMark).markDone();","lastModifiedDate":"2023-03-02"},{"lineNumber":93,"author":{"gitId":"marekpinto"},"content":"                ui.printMessageWithTask(\"Ok, I\u0027ve marked this task as done:\", tasks.getTask(toMark));","lastModifiedDate":"2023-03-02"},{"lineNumber":94,"author":{"gitId":"marekpinto"},"content":"                break;","lastModifiedDate":"2023-03-02"},{"lineNumber":95,"author":{"gitId":"marekpinto"},"content":"            case \"unmark\":","lastModifiedDate":"2023-03-02"},{"lineNumber":96,"author":{"gitId":"marekpinto"},"content":"                if (splitIntoArgs.length \u003c 2) {","lastModifiedDate":"2023-03-02"},{"lineNumber":97,"author":{"gitId":"marekpinto"},"content":"                    throw new InsufficientParametersException();","lastModifiedDate":"2023-03-02"},{"lineNumber":98,"author":{"gitId":"marekpinto"},"content":"                }","lastModifiedDate":"2023-03-02"},{"lineNumber":99,"author":{"gitId":"marekpinto"},"content":"                int toUnmark \u003d Integer.parseInt(splitIntoArgs[1]) - 1;","lastModifiedDate":"2023-03-02"},{"lineNumber":100,"author":{"gitId":"marekpinto"},"content":"                tasks.getTask(toUnmark).unmarkDone();","lastModifiedDate":"2023-03-02"},{"lineNumber":101,"author":{"gitId":"marekpinto"},"content":"                ui.printMessageWithTask(\"Ok, I\u0027ve marked this task as not done yet:\", tasks.getTask(toUnmark));","lastModifiedDate":"2023-03-02"},{"lineNumber":102,"author":{"gitId":"marekpinto"},"content":"                break;","lastModifiedDate":"2023-03-02"},{"lineNumber":103,"author":{"gitId":"marekpinto"},"content":"            case \"delete\":","lastModifiedDate":"2023-03-02"},{"lineNumber":104,"author":{"gitId":"marekpinto"},"content":"                if (splitIntoArgs.length \u003c 2) {","lastModifiedDate":"2023-03-02"},{"lineNumber":105,"author":{"gitId":"marekpinto"},"content":"                    throw new InsufficientParametersException();","lastModifiedDate":"2023-03-02"},{"lineNumber":106,"author":{"gitId":"marekpinto"},"content":"                }","lastModifiedDate":"2023-03-02"},{"lineNumber":107,"author":{"gitId":"marekpinto"},"content":"                int toDelete \u003d Integer.parseInt(splitIntoArgs[1]) - 1;","lastModifiedDate":"2023-03-02"},{"lineNumber":108,"author":{"gitId":"marekpinto"},"content":"                ui.printMessageWithTask(\"Noted. I\u0027ve removed this task:\", tasks.getTask(toDelete));","lastModifiedDate":"2023-03-02"},{"lineNumber":109,"author":{"gitId":"marekpinto"},"content":"                tasks.removeTask(toDelete);","lastModifiedDate":"2023-03-02"},{"lineNumber":110,"author":{"gitId":"marekpinto"},"content":"                break;","lastModifiedDate":"2023-03-02"},{"lineNumber":111,"author":{"gitId":"marekpinto"},"content":"            case \"todo\":","lastModifiedDate":"2023-03-02"},{"lineNumber":112,"author":{"gitId":"marekpinto"},"content":"                handleAddTask(TaskType.TODO, splitIntoArgs);                ","lastModifiedDate":"2023-03-02"},{"lineNumber":113,"author":{"gitId":"marekpinto"},"content":"                break;","lastModifiedDate":"2023-03-02"},{"lineNumber":114,"author":{"gitId":"marekpinto"},"content":"            case \"deadline\":","lastModifiedDate":"2023-03-02"},{"lineNumber":115,"author":{"gitId":"marekpinto"},"content":"                handleAddTask(TaskType.DEADLINE, splitIntoArgs);","lastModifiedDate":"2023-03-02"},{"lineNumber":116,"author":{"gitId":"marekpinto"},"content":"                break;","lastModifiedDate":"2023-03-02"},{"lineNumber":117,"author":{"gitId":"marekpinto"},"content":"            case \"event\":","lastModifiedDate":"2023-03-02"},{"lineNumber":118,"author":{"gitId":"marekpinto"},"content":"                handleAddTask(TaskType.EVENT, splitIntoArgs);","lastModifiedDate":"2023-03-02"},{"lineNumber":119,"author":{"gitId":"marekpinto"},"content":"                break;","lastModifiedDate":"2023-03-02"},{"lineNumber":120,"author":{"gitId":"marekpinto"},"content":"            case \"find\":","lastModifiedDate":"2023-03-02"},{"lineNumber":121,"author":{"gitId":"marekpinto"},"content":"                if (splitIntoArgs.length \u003c 2) {","lastModifiedDate":"2023-03-02"},{"lineNumber":122,"author":{"gitId":"marekpinto"},"content":"                    throw new InsufficientParametersException();","lastModifiedDate":"2023-03-02"},{"lineNumber":123,"author":{"gitId":"marekpinto"},"content":"                }","lastModifiedDate":"2023-03-02"},{"lineNumber":124,"author":{"gitId":"marekpinto"},"content":"                String keyword \u003d splitIntoArgs[1];","lastModifiedDate":"2023-03-02"},{"lineNumber":125,"author":{"gitId":"marekpinto"},"content":"                ui.printMatches(tasks, keyword);","lastModifiedDate":"2023-03-02"},{"lineNumber":126,"author":{"gitId":"marekpinto"},"content":"                break;","lastModifiedDate":"2023-03-02"},{"lineNumber":127,"author":{"gitId":"marekpinto"},"content":"            default:","lastModifiedDate":"2023-03-02"},{"lineNumber":128,"author":{"gitId":"marekpinto"},"content":"                throw new UnknownCommandException();","lastModifiedDate":"2023-03-02"},{"lineNumber":129,"author":{"gitId":"marekpinto"},"content":"            }","lastModifiedDate":"2023-03-02"},{"lineNumber":130,"author":{"gitId":"marekpinto"},"content":"            return true;","lastModifiedDate":"2023-03-02"},{"lineNumber":131,"author":{"gitId":"marekpinto"},"content":"        } catch (UnknownCommandException e) {","lastModifiedDate":"2023-03-02"},{"lineNumber":132,"author":{"gitId":"marekpinto"},"content":"            ui.printSimpleMessage(\"Command not found. Please enter a valid command!\");","lastModifiedDate":"2023-03-02"},{"lineNumber":133,"author":{"gitId":"marekpinto"},"content":"            return true;","lastModifiedDate":"2023-03-02"},{"lineNumber":134,"author":{"gitId":"marekpinto"},"content":"        } catch (InsufficientParametersException e) {","lastModifiedDate":"2023-03-02"},{"lineNumber":135,"author":{"gitId":"marekpinto"},"content":"            ui.printSimpleMessage(","lastModifiedDate":"2023-03-02"},{"lineNumber":136,"author":{"gitId":"marekpinto"},"content":"                \"You have not provided enough parameters for this command. Please recheck your syntax!\");","lastModifiedDate":"2023-03-02"},{"lineNumber":137,"author":{"gitId":"marekpinto"},"content":"            return true;","lastModifiedDate":"2023-03-02"},{"lineNumber":138,"author":{"gitId":"marekpinto"},"content":"        } catch (IncorrectIndexException e) {","lastModifiedDate":"2023-03-02"},{"lineNumber":139,"author":{"gitId":"marekpinto"},"content":"            ui.printSimpleMessage(\"Please enter a valid index.\");","lastModifiedDate":"2023-03-02"},{"lineNumber":140,"author":{"gitId":"marekpinto"},"content":"            return true;","lastModifiedDate":"2023-03-02"},{"lineNumber":141,"author":{"gitId":"marekpinto"},"content":"        }","lastModifiedDate":"2023-03-02"},{"lineNumber":142,"author":{"gitId":"marekpinto"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":143,"author":{"gitId":"marekpinto"},"content":"}","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"marekpinto":143}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marekpinto"},"content":"package duke;","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"marekpinto"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"marekpinto"},"content":"import java.io.File;","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"marekpinto"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"marekpinto"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"marekpinto"},"content":"/**","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"marekpinto"},"content":" * Handles reading and writing from memory to store TaskList across different chatbot sessions.","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"marekpinto"},"content":" */","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"marekpinto"},"content":"public class Storage {","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"marekpinto"},"content":"    String fileName;","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"marekpinto"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"marekpinto"},"content":"     * Initializes Storage class.","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"marekpinto"},"content":"     *","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"marekpinto"},"content":"     * @param fileName name of file where task list is stored on memory.","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"marekpinto"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"marekpinto"},"content":"    public Storage (String fileName) {","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"marekpinto"},"content":"        this.fileName \u003d fileName;","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"marekpinto"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"marekpinto"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"marekpinto"},"content":"     * Reads TaskList from stored memory based on standardized task storage format.","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"marekpinto"},"content":"     * ","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"marekpinto"},"content":"     * @return Initial TaskList.","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"marekpinto"},"content":"     * @throws IOException If there is an issue reading from the file.","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"marekpinto"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"marekpinto"},"content":"    public TaskList readFromStorage () throws IOException {","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"marekpinto"},"content":"        File f \u003d new File(fileName);","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":33,"author":{"gitId":"marekpinto"},"content":"        f.createNewFile();","lastModifiedDate":"2023-03-02"},{"lineNumber":34,"author":{"gitId":"marekpinto"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2023-03-02"},{"lineNumber":35,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":36,"author":{"gitId":"marekpinto"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-03-02"},{"lineNumber":37,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":38,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":39,"author":{"gitId":"marekpinto"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2023-03-02"},{"lineNumber":40,"author":{"gitId":"marekpinto"},"content":"            String task \u003d s.nextLine();","lastModifiedDate":"2023-03-02"},{"lineNumber":41,"author":{"gitId":"marekpinto"},"content":"            String[] taskSplit \u003d task.split(\"\\\\|\");","lastModifiedDate":"2023-03-02"},{"lineNumber":42,"author":{"gitId":"marekpinto"},"content":"            switch (taskSplit[1]) {","lastModifiedDate":"2023-03-02"},{"lineNumber":43,"author":{"gitId":"marekpinto"},"content":"                case \"T\":","lastModifiedDate":"2023-03-02"},{"lineNumber":44,"author":{"gitId":"marekpinto"},"content":"                    Todo todo \u003d new Todo(taskSplit[2]);","lastModifiedDate":"2023-03-02"},{"lineNumber":45,"author":{"gitId":"marekpinto"},"content":"                    tasks.addTask(todo);","lastModifiedDate":"2023-03-02"},{"lineNumber":46,"author":{"gitId":"marekpinto"},"content":"                    break;","lastModifiedDate":"2023-03-02"},{"lineNumber":47,"author":{"gitId":"marekpinto"},"content":"                case \"D\":","lastModifiedDate":"2023-03-02"},{"lineNumber":48,"author":{"gitId":"marekpinto"},"content":"                    Deadline deadline \u003d new Deadline(taskSplit[2], taskSplit[3]);","lastModifiedDate":"2023-03-02"},{"lineNumber":49,"author":{"gitId":"marekpinto"},"content":"                    tasks.addTask(deadline);","lastModifiedDate":"2023-03-02"},{"lineNumber":50,"author":{"gitId":"marekpinto"},"content":"                    break;","lastModifiedDate":"2023-03-02"},{"lineNumber":51,"author":{"gitId":"marekpinto"},"content":"                case \"E\":","lastModifiedDate":"2023-03-02"},{"lineNumber":52,"author":{"gitId":"marekpinto"},"content":"                    Event event \u003d new Event(taskSplit[2], taskSplit[3], taskSplit[4]);","lastModifiedDate":"2023-03-02"},{"lineNumber":53,"author":{"gitId":"marekpinto"},"content":"                    tasks.addTask(event);","lastModifiedDate":"2023-03-02"},{"lineNumber":54,"author":{"gitId":"marekpinto"},"content":"                    break;","lastModifiedDate":"2023-03-02"},{"lineNumber":55,"author":{"gitId":"marekpinto"},"content":"                default:","lastModifiedDate":"2023-03-02"},{"lineNumber":56,"author":{"gitId":"marekpinto"},"content":"                    break;","lastModifiedDate":"2023-03-02"},{"lineNumber":57,"author":{"gitId":"marekpinto"},"content":"            }","lastModifiedDate":"2023-03-02"},{"lineNumber":58,"author":{"gitId":"marekpinto"},"content":"            if (taskSplit[0].equals(\"1\")) {","lastModifiedDate":"2023-03-02"},{"lineNumber":59,"author":{"gitId":"marekpinto"},"content":"                try {","lastModifiedDate":"2023-03-02"},{"lineNumber":60,"author":{"gitId":"marekpinto"},"content":"                    tasks.getTask(tasks.length() - 1).markDone();","lastModifiedDate":"2023-03-02"},{"lineNumber":61,"author":{"gitId":"marekpinto"},"content":"                } catch (IncorrectIndexException e) { ","lastModifiedDate":"2023-03-02"},{"lineNumber":62,"author":{"gitId":"marekpinto"},"content":"                    //Will never be reached since we use tasks.length()","lastModifiedDate":"2023-03-02"},{"lineNumber":63,"author":{"gitId":"marekpinto"},"content":"                }","lastModifiedDate":"2023-03-02"},{"lineNumber":64,"author":{"gitId":"marekpinto"},"content":"            }","lastModifiedDate":"2023-03-02"},{"lineNumber":65,"author":{"gitId":"marekpinto"},"content":"        }","lastModifiedDate":"2023-03-02"},{"lineNumber":66,"author":{"gitId":"marekpinto"},"content":"        s.close();","lastModifiedDate":"2023-03-02"},{"lineNumber":67,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":68,"author":{"gitId":"marekpinto"},"content":"        return tasks;","lastModifiedDate":"2023-03-02"},{"lineNumber":69,"author":{"gitId":"marekpinto"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":70,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":71,"author":{"gitId":"marekpinto"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":72,"author":{"gitId":"marekpinto"},"content":"     * Writes TaskList to storage so it can be retrieved when the program is ran later.","lastModifiedDate":"2023-03-02"},{"lineNumber":73,"author":{"gitId":"marekpinto"},"content":"     *","lastModifiedDate":"2023-03-02"},{"lineNumber":74,"author":{"gitId":"marekpinto"},"content":"     * @param tasks TaskList to be written.","lastModifiedDate":"2023-03-02"},{"lineNumber":75,"author":{"gitId":"marekpinto"},"content":"     * @throws IOException If there is an issue writing to the file.","lastModifiedDate":"2023-03-02"},{"lineNumber":76,"author":{"gitId":"marekpinto"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":77,"author":{"gitId":"marekpinto"},"content":"    public void writeToFile (TaskList tasks) throws IOException {","lastModifiedDate":"2023-03-02"},{"lineNumber":78,"author":{"gitId":"marekpinto"},"content":"        new FileWriter(fileName).close(); // reset output file","lastModifiedDate":"2023-03-02"},{"lineNumber":79,"author":{"gitId":"marekpinto"},"content":"        FileWriter fw \u003d new FileWriter(fileName, true);","lastModifiedDate":"2023-03-02"},{"lineNumber":80,"author":{"gitId":"marekpinto"},"content":"        for (int i \u003d 0; i \u003c tasks.length(); i++) {","lastModifiedDate":"2023-03-02"},{"lineNumber":81,"author":{"gitId":"marekpinto"},"content":"            try {","lastModifiedDate":"2023-03-02"},{"lineNumber":82,"author":{"gitId":"marekpinto"},"content":"                Task task \u003d tasks.getTask(i);","lastModifiedDate":"2023-03-02"},{"lineNumber":83,"author":{"gitId":"marekpinto"},"content":"                fw.write(task.storeString());","lastModifiedDate":"2023-03-02"},{"lineNumber":84,"author":{"gitId":"marekpinto"},"content":"            } catch (IncorrectIndexException e) {","lastModifiedDate":"2023-03-02"},{"lineNumber":85,"author":{"gitId":"marekpinto"},"content":"                fw.close();","lastModifiedDate":"2023-03-02"},{"lineNumber":86,"author":{"gitId":"marekpinto"},"content":"                throw new RuntimeException(\"Wrong index passed in through for loop\");","lastModifiedDate":"2023-03-02"},{"lineNumber":87,"author":{"gitId":"marekpinto"},"content":"            }","lastModifiedDate":"2023-03-02"},{"lineNumber":88,"author":{"gitId":"marekpinto"},"content":"        }","lastModifiedDate":"2023-03-02"},{"lineNumber":89,"author":{"gitId":"marekpinto"},"content":"        fw.close();","lastModifiedDate":"2023-03-02"},{"lineNumber":90,"author":{"gitId":"marekpinto"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":91,"author":{"gitId":"marekpinto"},"content":"    ","lastModifiedDate":"2023-03-02"},{"lineNumber":92,"author":{"gitId":"marekpinto"},"content":"}","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"marekpinto":92}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marekpinto"},"content":"package duke;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"marekpinto"},"content":"/**","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"marekpinto"},"content":" * Abstract class representing a Task to be completed. Extended by Todo, Deadline, and Event classes.","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"marekpinto"},"content":" */","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"marekpinto"},"content":"public abstract class Task {","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"marekpinto"},"content":"    protected String description;","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"marekpinto"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"marekpinto"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"marekpinto"},"content":"     * Initializes Task.","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"marekpinto"},"content":"     *","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"marekpinto"},"content":"     * @param description Description of task.","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"marekpinto"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"marekpinto"},"content":"    public Task(String description) {","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"marekpinto"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"marekpinto"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"marekpinto"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"marekpinto"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"marekpinto"},"content":"     * Returns status icon for the task, either [X] if completed or [ ] if not.","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"marekpinto"},"content":"     *","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"marekpinto"},"content":"     * @return String representation of status icon.","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"marekpinto"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"marekpinto"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"marekpinto"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"marekpinto"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"marekpinto"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"marekpinto"},"content":"     * Marks a task as completed.","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"marekpinto"},"content":"     *","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"marekpinto"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"marekpinto"},"content":"    public void markDone() {","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"marekpinto"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-02-07"},{"lineNumber":35,"author":{"gitId":"marekpinto"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":36,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":37,"author":{"gitId":"marekpinto"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":38,"author":{"gitId":"marekpinto"},"content":"     * Marks a task as not completed.","lastModifiedDate":"2023-02-07"},{"lineNumber":39,"author":{"gitId":"marekpinto"},"content":"     *","lastModifiedDate":"2023-02-07"},{"lineNumber":40,"author":{"gitId":"marekpinto"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":41,"author":{"gitId":"marekpinto"},"content":"    public void unmarkDone() {","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"marekpinto"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-02-07"},{"lineNumber":43,"author":{"gitId":"marekpinto"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":44,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":45,"author":{"gitId":"marekpinto"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":46,"author":{"gitId":"marekpinto"},"content":"     * Returns the task description.","lastModifiedDate":"2023-02-07"},{"lineNumber":47,"author":{"gitId":"marekpinto"},"content":"     *","lastModifiedDate":"2023-02-07"},{"lineNumber":48,"author":{"gitId":"marekpinto"},"content":"     * @return Task Description","lastModifiedDate":"2023-02-07"},{"lineNumber":49,"author":{"gitId":"marekpinto"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":50,"author":{"gitId":"marekpinto"},"content":"    public String getDescription() {","lastModifiedDate":"2023-02-07"},{"lineNumber":51,"author":{"gitId":"marekpinto"},"content":"        return this.description;","lastModifiedDate":"2023-02-07"},{"lineNumber":52,"author":{"gitId":"marekpinto"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":53,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":54,"author":{"gitId":"marekpinto"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":55,"author":{"gitId":"marekpinto"},"content":"     * Returns standardized string to be stored on memory that can be read back into the program in the future.","lastModifiedDate":"2023-03-02"},{"lineNumber":56,"author":{"gitId":"marekpinto"},"content":"     *","lastModifiedDate":"2023-03-02"},{"lineNumber":57,"author":{"gitId":"marekpinto"},"content":"     * @return Standardized string to be stored in memory.","lastModifiedDate":"2023-03-02"},{"lineNumber":58,"author":{"gitId":"marekpinto"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":59,"author":{"gitId":"marekpinto"},"content":"    public String storeString() {","lastModifiedDate":"2023-02-16"},{"lineNumber":60,"author":{"gitId":"marekpinto"},"content":"        return (isDone ? \"1\" : \"0\");","lastModifiedDate":"2023-02-16"},{"lineNumber":61,"author":{"gitId":"marekpinto"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":62,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":63,"author":{"gitId":"marekpinto"},"content":"    @Override","lastModifiedDate":"2023-02-07"},{"lineNumber":64,"author":{"gitId":"marekpinto"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":65,"author":{"gitId":"marekpinto"},"content":"     * Returns string representation of the task, with status icon and description.","lastModifiedDate":"2023-02-07"},{"lineNumber":66,"author":{"gitId":"marekpinto"},"content":"     *","lastModifiedDate":"2023-02-07"},{"lineNumber":67,"author":{"gitId":"marekpinto"},"content":"     * @return String Representation.","lastModifiedDate":"2023-02-07"},{"lineNumber":68,"author":{"gitId":"marekpinto"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":69,"author":{"gitId":"marekpinto"},"content":"    public String toString() {","lastModifiedDate":"2023-02-07"},{"lineNumber":70,"author":{"gitId":"marekpinto"},"content":"        return this.getStatusIcon() + \" \" + this.description;","lastModifiedDate":"2023-02-07"},{"lineNumber":71,"author":{"gitId":"marekpinto"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":72,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":73,"author":{"gitId":"marekpinto"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":74,"author":{"gitId":"marekpinto"},"content":"     * Abstract method extended in Task, Event, and Todo classes. Checks whether Task matches with a keyword.","lastModifiedDate":"2023-03-02"},{"lineNumber":75,"author":{"gitId":"marekpinto"},"content":"     *","lastModifiedDate":"2023-03-02"},{"lineNumber":76,"author":{"gitId":"marekpinto"},"content":"     * @param keyword Keyword to search for.","lastModifiedDate":"2023-03-02"},{"lineNumber":77,"author":{"gitId":"marekpinto"},"content":"     * @return True if Task matches the keyword, False otherwise.","lastModifiedDate":"2023-03-02"},{"lineNumber":78,"author":{"gitId":"marekpinto"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":79,"author":{"gitId":"marekpinto"},"content":"    public abstract boolean matchesKeyword (String keyword);","lastModifiedDate":"2023-03-02"},{"lineNumber":80,"author":{"gitId":"marekpinto"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"marekpinto":80}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marekpinto"},"content":"package duke;","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"marekpinto"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"marekpinto"},"content":"/**","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"marekpinto"},"content":" * Encapsulates an ArrayList of Tasks. Contains methods to add, remove, and read from the TaskList.","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"marekpinto"},"content":" */","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"marekpinto"},"content":"public class TaskList {","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"marekpinto"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"marekpinto"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"marekpinto"},"content":"     * Initializes TaskList as an empty ArrayList of tasks.","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"marekpinto"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"marekpinto"},"content":"    public TaskList() {","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"marekpinto"},"content":"        tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"marekpinto"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"marekpinto"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"marekpinto"},"content":"     * Adds a task to the TaskList.","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"marekpinto"},"content":"     *","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"marekpinto"},"content":"     * @param task Task to be added.","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"marekpinto"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"marekpinto"},"content":"    public void addTask (Task task) {","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"marekpinto"},"content":"        tasks.add(task);","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"marekpinto"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"marekpinto"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"marekpinto"},"content":"     * Returns the task found at the index.","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"marekpinto"},"content":"     *","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"marekpinto"},"content":"     * @param index Index to retrieve task from.","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"marekpinto"},"content":"     * @return Task at the corresponding index.","lastModifiedDate":"2023-03-02"},{"lineNumber":33,"author":{"gitId":"marekpinto"},"content":"     * @throws IncorrectIndexException If index is out of bounds.","lastModifiedDate":"2023-03-02"},{"lineNumber":34,"author":{"gitId":"marekpinto"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":35,"author":{"gitId":"marekpinto"},"content":"    public Task getTask (int index) throws IncorrectIndexException {","lastModifiedDate":"2023-03-02"},{"lineNumber":36,"author":{"gitId":"marekpinto"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size()) {","lastModifiedDate":"2023-03-02"},{"lineNumber":37,"author":{"gitId":"marekpinto"},"content":"            return tasks.get(index);","lastModifiedDate":"2023-03-02"},{"lineNumber":38,"author":{"gitId":"marekpinto"},"content":"        } else {","lastModifiedDate":"2023-03-02"},{"lineNumber":39,"author":{"gitId":"marekpinto"},"content":"            throw new IncorrectIndexException();","lastModifiedDate":"2023-03-02"},{"lineNumber":40,"author":{"gitId":"marekpinto"},"content":"        }","lastModifiedDate":"2023-03-02"},{"lineNumber":41,"author":{"gitId":"marekpinto"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":42,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":43,"author":{"gitId":"marekpinto"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":44,"author":{"gitId":"marekpinto"},"content":"     * Removes the task found at the index.","lastModifiedDate":"2023-03-02"},{"lineNumber":45,"author":{"gitId":"marekpinto"},"content":"     *","lastModifiedDate":"2023-03-02"},{"lineNumber":46,"author":{"gitId":"marekpinto"},"content":"     * @param index Index of task to remove.","lastModifiedDate":"2023-03-02"},{"lineNumber":47,"author":{"gitId":"marekpinto"},"content":"     * @throws IncorrectIndexException If index is out of bounds.","lastModifiedDate":"2023-03-02"},{"lineNumber":48,"author":{"gitId":"marekpinto"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":49,"author":{"gitId":"marekpinto"},"content":"    public void removeTask (int index) throws IncorrectIndexException {","lastModifiedDate":"2023-03-02"},{"lineNumber":50,"author":{"gitId":"marekpinto"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size()) {","lastModifiedDate":"2023-03-02"},{"lineNumber":51,"author":{"gitId":"marekpinto"},"content":"            tasks.remove(index);","lastModifiedDate":"2023-03-02"},{"lineNumber":52,"author":{"gitId":"marekpinto"},"content":"        } else {","lastModifiedDate":"2023-03-02"},{"lineNumber":53,"author":{"gitId":"marekpinto"},"content":"            throw new IncorrectIndexException();","lastModifiedDate":"2023-03-02"},{"lineNumber":54,"author":{"gitId":"marekpinto"},"content":"        }","lastModifiedDate":"2023-03-02"},{"lineNumber":55,"author":{"gitId":"marekpinto"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":56,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":57,"author":{"gitId":"marekpinto"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":58,"author":{"gitId":"marekpinto"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2023-03-02"},{"lineNumber":59,"author":{"gitId":"marekpinto"},"content":"     *","lastModifiedDate":"2023-03-02"},{"lineNumber":60,"author":{"gitId":"marekpinto"},"content":"     * @return Length of tasks in the list.","lastModifiedDate":"2023-03-02"},{"lineNumber":61,"author":{"gitId":"marekpinto"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":62,"author":{"gitId":"marekpinto"},"content":"    public int length () {","lastModifiedDate":"2023-03-02"},{"lineNumber":63,"author":{"gitId":"marekpinto"},"content":"        return tasks.size();","lastModifiedDate":"2023-03-02"},{"lineNumber":64,"author":{"gitId":"marekpinto"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":65,"author":{"gitId":"marekpinto"},"content":"}","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"marekpinto":65}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marekpinto"},"content":"package duke;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"marekpinto"},"content":"/**","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"marekpinto"},"content":" * Represents a simple todo item. A \u003ccode\u003eTodo\u003c/code\u003e object corresponds to","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"marekpinto"},"content":" * a task with only a description.","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"marekpinto"},"content":" */","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"marekpinto"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"marekpinto"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"marekpinto"},"content":"     * Initializes Todo.","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"marekpinto"},"content":"     *","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"marekpinto"},"content":"     * @param description Description of todo.","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"marekpinto"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"marekpinto"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"marekpinto"},"content":"        super(description);","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"marekpinto"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"marekpinto"},"content":"    @Override","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"marekpinto"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"marekpinto"},"content":"     * Returns standardized string to be stored on memory that can be read back into the program in the future.","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"marekpinto"},"content":"     *","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"marekpinto"},"content":"     * @return Standardized string to be stored in memory.","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"marekpinto"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"marekpinto"},"content":"    public String storeString() {","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"marekpinto"},"content":"        return super.storeString() + \"|T|\" + description + \"\\n\";","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"marekpinto"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"marekpinto"},"content":"    @Override","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"marekpinto"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"marekpinto"},"content":"     * Overrides matchesKeyword in Task. Searches through description for a keyword.","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"marekpinto"},"content":"     *","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"marekpinto"},"content":"     * @param keyword Keyword to search for.","lastModifiedDate":"2023-03-02"},{"lineNumber":33,"author":{"gitId":"marekpinto"},"content":"     * @return True if Todo matches the keyword, False otherwise.","lastModifiedDate":"2023-03-02"},{"lineNumber":34,"author":{"gitId":"marekpinto"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":35,"author":{"gitId":"marekpinto"},"content":"    public boolean matchesKeyword(String keyword) {","lastModifiedDate":"2023-03-02"},{"lineNumber":36,"author":{"gitId":"marekpinto"},"content":"        if (description.contains(keyword)) {","lastModifiedDate":"2023-03-02"},{"lineNumber":37,"author":{"gitId":"marekpinto"},"content":"            return true;","lastModifiedDate":"2023-03-02"},{"lineNumber":38,"author":{"gitId":"marekpinto"},"content":"        } else {","lastModifiedDate":"2023-03-02"},{"lineNumber":39,"author":{"gitId":"marekpinto"},"content":"            return false;","lastModifiedDate":"2023-03-02"},{"lineNumber":40,"author":{"gitId":"marekpinto"},"content":"        }","lastModifiedDate":"2023-03-02"},{"lineNumber":41,"author":{"gitId":"marekpinto"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":42,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":43,"author":{"gitId":"marekpinto"},"content":"    @Override","lastModifiedDate":"2023-02-07"},{"lineNumber":44,"author":{"gitId":"marekpinto"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":45,"author":{"gitId":"marekpinto"},"content":"     * Overrides string representation for todos, with a [T] to indicate todo class.","lastModifiedDate":"2023-02-07"},{"lineNumber":46,"author":{"gitId":"marekpinto"},"content":"     *","lastModifiedDate":"2023-02-07"},{"lineNumber":47,"author":{"gitId":"marekpinto"},"content":"     * @return String Representation.","lastModifiedDate":"2023-02-07"},{"lineNumber":48,"author":{"gitId":"marekpinto"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":49,"author":{"gitId":"marekpinto"},"content":"    public String toString() {","lastModifiedDate":"2023-02-07"},{"lineNumber":50,"author":{"gitId":"marekpinto"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-02-07"},{"lineNumber":51,"author":{"gitId":"marekpinto"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":52,"author":{"gitId":"marekpinto"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"marekpinto":52}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marekpinto"},"content":"package duke;","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"marekpinto"},"content":"/**","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"marekpinto"},"content":" * Class used to handle output to the user. Contains a collection of methods used to print to standard output.","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"marekpinto"},"content":" */","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"marekpinto"},"content":"public class Ui {","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"marekpinto"},"content":"    static final String LINE \u003d \"_\".repeat(60);","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"marekpinto"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"marekpinto"},"content":"     * Encapsulates print statements for whenever a task is added","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"marekpinto"},"content":"     * (as either a todo, deadline, or event).","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"marekpinto"},"content":"     * ","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"marekpinto"},"content":"     * @param task     Reference to task that is added.","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"marekpinto"},"content":"     * @param numTasks Total number of tasks in the list.","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"marekpinto"},"content":"     *","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"marekpinto"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"marekpinto"},"content":"    public void printAddTaskConfirmation(Task task, int numTasks) {","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"marekpinto"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"marekpinto"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\\n\" + task + \"\\nNow you have \" + ","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"marekpinto"},"content":"            numTasks + \" tasks in the list.\");","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"marekpinto"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"marekpinto"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"marekpinto"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"marekpinto"},"content":"     * Prints any message, correctly separated by horizontal lines.","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"marekpinto"},"content":"     *","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"marekpinto"},"content":"     * @param message Message to be printed.","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"marekpinto"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"marekpinto"},"content":"    public void printSimpleMessage (String message) {","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"marekpinto"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"marekpinto"},"content":"        System.out.println(message);","lastModifiedDate":"2023-03-02"},{"lineNumber":33,"author":{"gitId":"marekpinto"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-03-02"},{"lineNumber":34,"author":{"gitId":"marekpinto"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":35,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":36,"author":{"gitId":"marekpinto"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":37,"author":{"gitId":"marekpinto"},"content":"     * Prints any message followed by a corresponding task, correctly separated by horizontal lines.","lastModifiedDate":"2023-03-02"},{"lineNumber":38,"author":{"gitId":"marekpinto"},"content":"     *","lastModifiedDate":"2023-03-02"},{"lineNumber":39,"author":{"gitId":"marekpinto"},"content":"     * @param message Message to be printed.","lastModifiedDate":"2023-03-02"},{"lineNumber":40,"author":{"gitId":"marekpinto"},"content":"     * @param task Task to be printed.","lastModifiedDate":"2023-03-02"},{"lineNumber":41,"author":{"gitId":"marekpinto"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":42,"author":{"gitId":"marekpinto"},"content":"    public void printMessageWithTask (String message, Task task) {","lastModifiedDate":"2023-03-02"},{"lineNumber":43,"author":{"gitId":"marekpinto"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-03-02"},{"lineNumber":44,"author":{"gitId":"marekpinto"},"content":"        System.out.println(message);","lastModifiedDate":"2023-03-02"},{"lineNumber":45,"author":{"gitId":"marekpinto"},"content":"        System.out.println(task);","lastModifiedDate":"2023-03-02"},{"lineNumber":46,"author":{"gitId":"marekpinto"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-03-02"},{"lineNumber":47,"author":{"gitId":"marekpinto"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":48,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":49,"author":{"gitId":"marekpinto"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":50,"author":{"gitId":"marekpinto"},"content":"     * Prints a list of all tasks currently in the list.","lastModifiedDate":"2023-03-02"},{"lineNumber":51,"author":{"gitId":"marekpinto"},"content":"     *","lastModifiedDate":"2023-03-02"},{"lineNumber":52,"author":{"gitId":"marekpinto"},"content":"     * @param tasks TaskList to print list for.","lastModifiedDate":"2023-03-02"},{"lineNumber":53,"author":{"gitId":"marekpinto"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":54,"author":{"gitId":"marekpinto"},"content":"    public void printList(TaskList tasks) {","lastModifiedDate":"2023-03-02"},{"lineNumber":55,"author":{"gitId":"marekpinto"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-03-02"},{"lineNumber":56,"author":{"gitId":"marekpinto"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-03-02"},{"lineNumber":57,"author":{"gitId":"marekpinto"},"content":"        for (int i \u003d 0; i \u003c tasks.length(); i++) {","lastModifiedDate":"2023-03-02"},{"lineNumber":58,"author":{"gitId":"marekpinto"},"content":"            try {","lastModifiedDate":"2023-03-02"},{"lineNumber":59,"author":{"gitId":"marekpinto"},"content":"                System.out.println(Integer.toString(i + 1) + \".\" + tasks.getTask(i));","lastModifiedDate":"2023-03-02"},{"lineNumber":60,"author":{"gitId":"marekpinto"},"content":"            } catch (IncorrectIndexException e) {","lastModifiedDate":"2023-03-02"},{"lineNumber":61,"author":{"gitId":"marekpinto"},"content":"                //Shouldn\u0027t happen since i is alway within valid limits due to for loop constraints","lastModifiedDate":"2023-03-02"},{"lineNumber":62,"author":{"gitId":"marekpinto"},"content":"                throw new RuntimeException (\"Unexpected Error While Listing.\");","lastModifiedDate":"2023-03-02"},{"lineNumber":63,"author":{"gitId":"marekpinto"},"content":"            }","lastModifiedDate":"2023-03-02"},{"lineNumber":64,"author":{"gitId":"marekpinto"},"content":"        }","lastModifiedDate":"2023-03-02"},{"lineNumber":65,"author":{"gitId":"marekpinto"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-03-02"},{"lineNumber":66,"author":{"gitId":"marekpinto"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":67,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":68,"author":{"gitId":"marekpinto"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":69,"author":{"gitId":"marekpinto"},"content":"     * Searches through TaskList for any Tasks that match with keyword and prints only those Tasks.","lastModifiedDate":"2023-03-02"},{"lineNumber":70,"author":{"gitId":"marekpinto"},"content":"     *","lastModifiedDate":"2023-03-02"},{"lineNumber":71,"author":{"gitId":"marekpinto"},"content":"     * @param tasks TaskList to search through.","lastModifiedDate":"2023-03-02"},{"lineNumber":72,"author":{"gitId":"marekpinto"},"content":"     * @param keyword Keyword to search for.","lastModifiedDate":"2023-03-02"},{"lineNumber":73,"author":{"gitId":"marekpinto"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":74,"author":{"gitId":"marekpinto"},"content":"    public void printMatches(TaskList tasks, String keyword) {","lastModifiedDate":"2023-03-02"},{"lineNumber":75,"author":{"gitId":"marekpinto"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-03-02"},{"lineNumber":76,"author":{"gitId":"marekpinto"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-03-02"},{"lineNumber":77,"author":{"gitId":"marekpinto"},"content":"        for (int i \u003d 0; i \u003c tasks.length(); i++) {","lastModifiedDate":"2023-03-02"},{"lineNumber":78,"author":{"gitId":"marekpinto"},"content":"            Task task;","lastModifiedDate":"2023-03-02"},{"lineNumber":79,"author":{"gitId":"marekpinto"},"content":"            ","lastModifiedDate":"2023-03-02"},{"lineNumber":80,"author":{"gitId":"marekpinto"},"content":"            try {","lastModifiedDate":"2023-03-02"},{"lineNumber":81,"author":{"gitId":"marekpinto"},"content":"                task \u003d tasks.getTask(i);","lastModifiedDate":"2023-03-02"},{"lineNumber":82,"author":{"gitId":"marekpinto"},"content":"            } catch (IncorrectIndexException e) {","lastModifiedDate":"2023-03-02"},{"lineNumber":83,"author":{"gitId":"marekpinto"},"content":"                //Shouldn\u0027t happen since i is alway within valid limits due to for loop constraints","lastModifiedDate":"2023-03-02"},{"lineNumber":84,"author":{"gitId":"marekpinto"},"content":"                throw new RuntimeException (\"Unexpected Error While Listing.\");","lastModifiedDate":"2023-03-02"},{"lineNumber":85,"author":{"gitId":"marekpinto"},"content":"            }","lastModifiedDate":"2023-03-02"},{"lineNumber":86,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":87,"author":{"gitId":"marekpinto"},"content":"            if(task.matchesKeyword(keyword)) {","lastModifiedDate":"2023-03-02"},{"lineNumber":88,"author":{"gitId":"marekpinto"},"content":"                System.out.println(Integer.toString(i + 1) + \".\" + task);","lastModifiedDate":"2023-03-02"},{"lineNumber":89,"author":{"gitId":"marekpinto"},"content":"            }","lastModifiedDate":"2023-03-02"},{"lineNumber":90,"author":{"gitId":"marekpinto"},"content":"        }","lastModifiedDate":"2023-03-02"},{"lineNumber":91,"author":{"gitId":"marekpinto"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-03-02"},{"lineNumber":92,"author":{"gitId":"marekpinto"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":93,"author":{"gitId":"marekpinto"},"content":"}","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"marekpinto":93}},{"path":"src/main/java/duke/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marekpinto"},"content":"package duke;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"marekpinto"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"marekpinto"},"content":"/**","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"marekpinto"},"content":" * A \u003ccode\u003eUnknownCommandException\u003c/code\u003e represents an Exception ","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"marekpinto"},"content":" * that happens when the user enters a command not recognized by the chatbot.","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"marekpinto"},"content":" */","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"marekpinto"},"content":"public class UnknownCommandException extends Exception {","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"marekpinto"},"content":"    ","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"marekpinto"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"marekpinto":9}}]
