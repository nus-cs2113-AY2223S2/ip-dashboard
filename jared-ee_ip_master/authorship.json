[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jared-ee"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"jared-ee"},"content":"    protected String by;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"jared-ee"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"jared-ee"},"content":"        super(description);","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"jared-ee"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"jared-ee"},"content":"    public String toString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"jared-ee"},"content":"        return super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"jared-ee"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"jared-ee":13}},{"path":"src/main/java/Duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jared-ee"},"content":"Here are the tasks in your list:","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"jared-ee"},"content":"1.[T][ ] hha","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"jared-ee":2}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jared-ee"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"jared-ee"},"content":"    ","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"jared-ee"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"jared-ee":3}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jared-ee"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"jared-ee"},"content":"    protected String from;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"jared-ee"},"content":"    protected String to;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"jared-ee"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"jared-ee"},"content":"        super(description);","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"jared-ee"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"jared-ee"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"jared-ee"},"content":"    public String toString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"jared-ee"},"content":"        return super.toString() + \" (from \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"jared-ee"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"jared-ee":16}},{"path":"src/main/java/Ignore.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jared-ee"},"content":"package PACKAGE_NAME;public class Ignore {","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"jared-ee"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"jared-ee":2}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jared-ee"},"content":"public class Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"jared-ee"},"content":"    protected String description;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"jared-ee"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"jared-ee"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"jared-ee"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"jared-ee"},"content":"        return description;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"jared-ee"},"content":"    public String toString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"jared-ee"},"content":"        return description;","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"jared-ee"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"jared-ee":16}},{"path":"src/main/java/level0.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jared-ee"},"content":"public class level0 {","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"jared-ee"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"jared-ee"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"jared-ee":7}},{"path":"src/main/java/level1.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jared-ee"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"jared-ee"},"content":"public class level1 {","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"jared-ee"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"jared-ee"},"content":"        String line;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"jared-ee"},"content":"        while (true) {","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"jared-ee"},"content":"            Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"jared-ee"},"content":"            line \u003d in.nextLine();","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"jared-ee"},"content":"            if (line.equals(\"bye\")){","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"jared-ee"},"content":"                break;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"jared-ee"},"content":"            System.out.println(line);","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"jared-ee"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"jared-ee"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"jared-ee":18}},{"path":"src/main/java/level2.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jared-ee"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"jared-ee"},"content":"public class level2 {","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"jared-ee"},"content":"    public static void main(String[] args){","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"jared-ee"},"content":"        String line;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"jared-ee"},"content":"        String[] lines \u003d new String[100];","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"jared-ee"},"content":"        boolean[] done \u003d new boolean[100];","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"jared-ee"},"content":"        int i \u003d 0;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"jared-ee"},"content":"        while (true) {","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"jared-ee"},"content":"            Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"jared-ee"},"content":"            line \u003d in.nextLine();","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"jared-ee"},"content":"            if (line.equals(\"bye\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"jared-ee"},"content":"                break;","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"jared-ee"},"content":"            if (line.equals(\"list\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"jared-ee"},"content":"                for (int j \u003d 0; j \u003c i; j++) {","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"jared-ee"},"content":"                    System.out.print(j+1);","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\". \" + lines[j]);","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"jared-ee"},"content":"                }","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"jared-ee"},"content":"            else {","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"jared-ee"},"content":"                lines[i] \u003d line;","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"jared-ee"},"content":"                i++;","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"jared-ee"},"content":"                System.out.println(\"added: \" + line);","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"jared-ee"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"jared-ee"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"jared-ee":31}},{"path":"src/main/java/level3.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jared-ee"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"jared-ee"},"content":"public class level3 {","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"jared-ee"},"content":"    public static void main(String[] args){","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"jared-ee"},"content":"        String line;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"jared-ee"},"content":"        String[] lines \u003d new String[100];","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"jared-ee"},"content":"        boolean[] done \u003d new boolean[100];","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"jared-ee"},"content":"        int i \u003d 0;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"jared-ee"},"content":"        while (true) {","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"jared-ee"},"content":"            Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"jared-ee"},"content":"            line \u003d in.nextLine();","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"jared-ee"},"content":"            if (line.equals(\"bye\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"jared-ee"},"content":"                break;","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"jared-ee"},"content":"            if (line.equals(\"list\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"jared-ee"},"content":"                for (int j \u003d 0; j \u003c i; j++) {","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Here are the tasks in your list: \");","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"jared-ee"},"content":"                    System.out.print(j+1);","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"jared-ee"},"content":"                    if (done[j]){","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"jared-ee"},"content":"                        System.out.print(\".[X] \");","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"jared-ee"},"content":"                    }","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"jared-ee"},"content":"                    if (!done[j]){","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"jared-ee"},"content":"                        System.out.print(\".[ ] \");","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"jared-ee"},"content":"                    }","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(lines[j]);","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"jared-ee"},"content":"                }","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"jared-ee"},"content":"            else if (line.startsWith(\"mark\")){","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"jared-ee"},"content":"                char numbchar \u003d line.charAt(line.length() - 1);","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"jared-ee"},"content":"                int number \u003d Character.getNumericValue(numbchar) - 1;","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"jared-ee"},"content":"                done[number] \u003d true;","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"jared-ee"},"content":"                System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"jared-ee"},"content":"                System.out.println(\"  [X] \" + lines[number]);","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"jared-ee"},"content":"            else if (line.startsWith(\"unmark\")){","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"jared-ee"},"content":"                char numbchar \u003d line.charAt(line.length() - 1);","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"jared-ee"},"content":"                int number \u003d Character.getNumericValue(numbchar) - 1;","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"jared-ee"},"content":"                done[number] \u003d false;","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"jared-ee"},"content":"                System.out.println(\"Ok, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"jared-ee"},"content":"                System.out.println(\"  [ ] \" + lines[number]);","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"jared-ee"},"content":"            else {","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"jared-ee"},"content":"                lines[i] \u003d line;","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"jared-ee"},"content":"                done[i] \u003d false;","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"jared-ee"},"content":"                i++;","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"jared-ee"},"content":"                System.out.println(\"added: \" + line);","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"jared-ee"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"jared-ee"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"jared-ee":53}},{"path":"src/main/java/level4.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jared-ee"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"jared-ee"},"content":"public class level4 {","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"jared-ee"},"content":"    public static void main(String[] args){","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"jared-ee"},"content":"        String line;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"jared-ee"},"content":"        Task[] tasks \u003d new Task[100];","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"jared-ee"},"content":"        boolean[] done \u003d new boolean[100];","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"jared-ee"},"content":"        String[] type \u003d new String[100];","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"jared-ee"},"content":"        int i \u003d 0;","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"jared-ee"},"content":"        while (true) {","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"jared-ee"},"content":"            Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"jared-ee"},"content":"            line \u003d in.nextLine();","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"jared-ee"},"content":"            if (line.equals(\"bye\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"jared-ee"},"content":"                break;","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"jared-ee"},"content":"            if (line.equals(\"list\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"jared-ee"},"content":"                System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"jared-ee"},"content":"                for (int j \u003d 0; j \u003c i; j++) {","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"jared-ee"},"content":"                    System.out.print(j+1);","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"jared-ee"},"content":"                    if (done[j]){","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"jared-ee"},"content":"                        System.out.print(\".\" + type[j] + \"[X]\");","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"jared-ee"},"content":"                    }","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"jared-ee"},"content":"                    if (!done[j]){","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"jared-ee"},"content":"                        System.out.print(\".\" + type[j] + \"[ ]\");","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"jared-ee"},"content":"                    }","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(tasks[j]);","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"jared-ee"},"content":"                }","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"jared-ee"},"content":"            else if (line.startsWith(\"mark\")){","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"jared-ee"},"content":"                char numbchar \u003d line.charAt(line.length() - 1);","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"jared-ee"},"content":"                int number \u003d Character.getNumericValue(numbchar) - 1;","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"jared-ee"},"content":"                done[number] \u003d true;","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"jared-ee"},"content":"                System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"jared-ee"},"content":"                System.out.println(\"  \" + type[number] + \"[X]\" + tasks[number]);","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"jared-ee"},"content":"            else if (line.startsWith(\"unmark\")){","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"jared-ee"},"content":"                char numbchar \u003d line.charAt(line.length() - 1);","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"jared-ee"},"content":"                int number \u003d Character.getNumericValue(numbchar) - 1;","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"jared-ee"},"content":"                done[number] \u003d false;","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"jared-ee"},"content":"                System.out.println(\"Ok, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"jared-ee"},"content":"                System.out.println(\"  \" + type[number] + \"[ ]\" + tasks[number]);","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"jared-ee"},"content":"            else{","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"jared-ee"},"content":"                if (line.startsWith(\"todo\")){","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"jared-ee"},"content":"                    tasks[i] \u003d new Task(line.substring(4));","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"jared-ee"},"content":"                    type[i] \u003d \"[T]\";","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"jared-ee"},"content":"                }","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"jared-ee"},"content":"                if (line.startsWith(\"deadline\")){","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"jared-ee"},"content":"                    int slash \u003d line.indexOf(\"/\");","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"jared-ee"},"content":"                    String description \u003d line.substring(8, slash-1);","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"jared-ee"},"content":"                    String by \u003d line.substring(slash+4);","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"jared-ee"},"content":"                    tasks[i] \u003d new Deadline(description, by);","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"jared-ee"},"content":"                    type[i] \u003d \"[D]\";","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"jared-ee"},"content":"                }","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"jared-ee"},"content":"                if (line.startsWith(\"event\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"jared-ee"},"content":"                    int slash1 \u003d line.indexOf(\"/\");","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"jared-ee"},"content":"                    int slash2 \u003d line.indexOf(\"/\", slash1+1);","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"jared-ee"},"content":"                    String description \u003d line.substring(5, slash1-1);","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"jared-ee"},"content":"                    String from \u003d line.substring(slash1+6, slash2-1);","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"jared-ee"},"content":"                    String to \u003d line.substring(slash2+4);","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"jared-ee"},"content":"                    tasks[i] \u003d new Event(description, from, to);","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"jared-ee"},"content":"                    type[i] \u003d \"[E]\";","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"jared-ee"},"content":"                }","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"jared-ee"},"content":"                System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"jared-ee"},"content":"                System.out.println(\"  \" + type[i] + \"[ ]\" + tasks[i]);","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"jared-ee"},"content":"                System.out.println(\"Now you have \" + (i + 1) + \" tasks in the list.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"jared-ee"},"content":"                done[i] \u003d false;","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"jared-ee"},"content":"                i++;","lastModifiedDate":"2023-01-31"},{"lineNumber":71,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"jared-ee"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":74,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":75,"author":{"gitId":"jared-ee"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"jared-ee":75}},{"path":"src/main/java/level5.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jared-ee"},"content":"import java.text.NumberFormat;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"jared-ee"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"jared-ee"},"content":"public class level5 {","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"jared-ee"},"content":"    public static void mark(int i, String line, Task[] tasks, boolean[] done, String[] type) throws DukeException {","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"jared-ee"},"content":"        int number \u003d Integer.parseInt(line.substring(5));","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"jared-ee"},"content":"        if (number \u003e i || number \u003c 1) {","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"jared-ee"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"jared-ee"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"jared-ee"},"content":"        done[number - 1] \u003d true;","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"  \" + type[number - 1] + \"[X]\" + tasks[number - 1]);","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"jared-ee"},"content":"    public static void unmark(int i, String line, Task[] tasks, boolean[] done, String[] type) throws DukeException {","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"jared-ee"},"content":"        int number \u003d Integer.parseInt(line.substring(7));","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"jared-ee"},"content":"        if (number \u003e i || number \u003c 1) {","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"jared-ee"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"jared-ee"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"jared-ee"},"content":"        done[number - 1] \u003d false;","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"Ok, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"  \" + type[number - 1] + \"[ ]\" + tasks[number - 1]);","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"jared-ee"},"content":"    public static void todo(int i, String line, Task[] tasks, boolean[] done, String[] type) throws DukeException {","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"jared-ee"},"content":"        if (line.equals(\"todo\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"jared-ee"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"jared-ee"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"jared-ee"},"content":"        tasks[i] \u003d new Task(line.substring(4));","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"jared-ee"},"content":"        type[i] \u003d \"[T]\";","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-02-09"},{"lineNumber":32,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"  \" + type[i] + \"[ ]\" + tasks[i]);","lastModifiedDate":"2023-02-09"},{"lineNumber":33,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"Now you have \" + (i + 1) + \" tasks in the list.\");","lastModifiedDate":"2023-02-09"},{"lineNumber":34,"author":{"gitId":"jared-ee"},"content":"        done[i] \u003d false;","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":36,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"jared-ee"},"content":"    public static void deadline(int i, String line, Task[] tasks, boolean[] done, String[] type) {","lastModifiedDate":"2023-02-09"},{"lineNumber":38,"author":{"gitId":"jared-ee"},"content":"        int slash \u003d line.indexOf(\"/\");","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"jared-ee"},"content":"        String description \u003d line.substring(8, slash-1);","lastModifiedDate":"2023-02-09"},{"lineNumber":40,"author":{"gitId":"jared-ee"},"content":"        String by \u003d line.substring(slash+4);","lastModifiedDate":"2023-02-09"},{"lineNumber":41,"author":{"gitId":"jared-ee"},"content":"        tasks[i] \u003d new Deadline(description, by);","lastModifiedDate":"2023-02-09"},{"lineNumber":42,"author":{"gitId":"jared-ee"},"content":"        type[i] \u003d \"[D]\";","lastModifiedDate":"2023-02-09"},{"lineNumber":43,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"  \" + type[i] + \"[ ]\" + tasks[i]);","lastModifiedDate":"2023-02-09"},{"lineNumber":45,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"Now you have \" + (i + 1) + \" tasks in the list.\");","lastModifiedDate":"2023-02-09"},{"lineNumber":46,"author":{"gitId":"jared-ee"},"content":"        done[i] \u003d false;","lastModifiedDate":"2023-02-09"},{"lineNumber":47,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":49,"author":{"gitId":"jared-ee"},"content":"    public static void event(int i, String line, Task[] tasks, boolean[] done, String[] type) {","lastModifiedDate":"2023-02-09"},{"lineNumber":50,"author":{"gitId":"jared-ee"},"content":"        int slash1 \u003d line.indexOf(\"/\");","lastModifiedDate":"2023-02-09"},{"lineNumber":51,"author":{"gitId":"jared-ee"},"content":"        int slash2 \u003d line.indexOf(\"/\", slash1+1);","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"jared-ee"},"content":"        String description \u003d line.substring(5, slash1-1);","lastModifiedDate":"2023-02-09"},{"lineNumber":53,"author":{"gitId":"jared-ee"},"content":"        String from \u003d line.substring(slash1+6, slash2-1);","lastModifiedDate":"2023-02-09"},{"lineNumber":54,"author":{"gitId":"jared-ee"},"content":"        String to \u003d line.substring(slash2+4);","lastModifiedDate":"2023-02-09"},{"lineNumber":55,"author":{"gitId":"jared-ee"},"content":"        tasks[i] \u003d new Event(description, from, to);","lastModifiedDate":"2023-02-09"},{"lineNumber":56,"author":{"gitId":"jared-ee"},"content":"        type[i] \u003d \"[E]\";","lastModifiedDate":"2023-02-09"},{"lineNumber":57,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-02-09"},{"lineNumber":58,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"  \" + type[i] + \"[ ]\" + tasks[i]);","lastModifiedDate":"2023-02-09"},{"lineNumber":59,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"Now you have \" + (i + 1) + \" tasks in the list.\");","lastModifiedDate":"2023-02-09"},{"lineNumber":60,"author":{"gitId":"jared-ee"},"content":"        done[i] \u003d false;","lastModifiedDate":"2023-02-09"},{"lineNumber":61,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":62,"author":{"gitId":"jared-ee"},"content":"    public static void main(String[] args){","lastModifiedDate":"2023-02-09"},{"lineNumber":63,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");","lastModifiedDate":"2023-02-09"},{"lineNumber":64,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-02-09"},{"lineNumber":65,"author":{"gitId":"jared-ee"},"content":"        String line;","lastModifiedDate":"2023-02-09"},{"lineNumber":66,"author":{"gitId":"jared-ee"},"content":"        Task[] tasks \u003d new Task[100];","lastModifiedDate":"2023-02-09"},{"lineNumber":67,"author":{"gitId":"jared-ee"},"content":"        boolean[] done \u003d new boolean[100];","lastModifiedDate":"2023-02-09"},{"lineNumber":68,"author":{"gitId":"jared-ee"},"content":"        String[] type \u003d new String[100];","lastModifiedDate":"2023-02-09"},{"lineNumber":69,"author":{"gitId":"jared-ee"},"content":"        int i \u003d 0;","lastModifiedDate":"2023-02-09"},{"lineNumber":70,"author":{"gitId":"jared-ee"},"content":"        while (true) {","lastModifiedDate":"2023-02-09"},{"lineNumber":71,"author":{"gitId":"jared-ee"},"content":"            Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-09"},{"lineNumber":72,"author":{"gitId":"jared-ee"},"content":"            line \u003d in.nextLine();","lastModifiedDate":"2023-02-09"},{"lineNumber":73,"author":{"gitId":"jared-ee"},"content":"            if (line.startsWith(\"bye\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":74,"author":{"gitId":"jared-ee"},"content":"                break;","lastModifiedDate":"2023-02-09"},{"lineNumber":75,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":76,"author":{"gitId":"jared-ee"},"content":"            if (line.startsWith(\"list\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":77,"author":{"gitId":"jared-ee"},"content":"                System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-02-09"},{"lineNumber":78,"author":{"gitId":"jared-ee"},"content":"                for (int j \u003d 0; j \u003c i; j++) {","lastModifiedDate":"2023-02-09"},{"lineNumber":79,"author":{"gitId":"jared-ee"},"content":"                    System.out.print(j+1);","lastModifiedDate":"2023-02-09"},{"lineNumber":80,"author":{"gitId":"jared-ee"},"content":"                    if (done[j]){","lastModifiedDate":"2023-02-09"},{"lineNumber":81,"author":{"gitId":"jared-ee"},"content":"                        System.out.print(\".\" + type[j] + \"[X]\");","lastModifiedDate":"2023-02-09"},{"lineNumber":82,"author":{"gitId":"jared-ee"},"content":"                    }","lastModifiedDate":"2023-02-09"},{"lineNumber":83,"author":{"gitId":"jared-ee"},"content":"                    if (!done[j]){","lastModifiedDate":"2023-02-09"},{"lineNumber":84,"author":{"gitId":"jared-ee"},"content":"                        System.out.print(\".\" + type[j] + \"[ ]\");","lastModifiedDate":"2023-02-09"},{"lineNumber":85,"author":{"gitId":"jared-ee"},"content":"                    }","lastModifiedDate":"2023-02-09"},{"lineNumber":86,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(tasks[j]);","lastModifiedDate":"2023-02-09"},{"lineNumber":87,"author":{"gitId":"jared-ee"},"content":"                }","lastModifiedDate":"2023-02-09"},{"lineNumber":88,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":89,"author":{"gitId":"jared-ee"},"content":"            else if (line.startsWith(\"mark\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":90,"author":{"gitId":"jared-ee"},"content":"                try {","lastModifiedDate":"2023-02-09"},{"lineNumber":91,"author":{"gitId":"jared-ee"},"content":"                    mark(i, line, tasks, done, type);","lastModifiedDate":"2023-02-09"},{"lineNumber":92,"author":{"gitId":"jared-ee"},"content":"                } catch (NumberFormatException | IndexOutOfBoundsException | DukeException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":93,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Oops! That isn\u0027t a task in your list.\");","lastModifiedDate":"2023-02-09"},{"lineNumber":94,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Please input only one integer after \u0027mark\u0027, separated by a single whitespace.\");","lastModifiedDate":"2023-02-09"},{"lineNumber":95,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"There are \" + i + \" tasks in your list, so do not input an integer \" +","lastModifiedDate":"2023-02-09"},{"lineNumber":96,"author":{"gitId":"jared-ee"},"content":"                            \"smaller than 1 or larger than \" + i + \".\");","lastModifiedDate":"2023-02-09"},{"lineNumber":97,"author":{"gitId":"jared-ee"},"content":"                }","lastModifiedDate":"2023-02-09"},{"lineNumber":98,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":99,"author":{"gitId":"jared-ee"},"content":"            else if (line.startsWith(\"unmark\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":100,"author":{"gitId":"jared-ee"},"content":"                 try {","lastModifiedDate":"2023-02-09"},{"lineNumber":101,"author":{"gitId":"jared-ee"},"content":"                     unmark(i, line, tasks, done, type);","lastModifiedDate":"2023-02-09"},{"lineNumber":102,"author":{"gitId":"jared-ee"},"content":"                 } catch (NumberFormatException | IndexOutOfBoundsException | DukeException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":103,"author":{"gitId":"jared-ee"},"content":"                     System.out.println(\"Oops! That isn\u0027t a task in your list.\");","lastModifiedDate":"2023-02-09"},{"lineNumber":104,"author":{"gitId":"jared-ee"},"content":"                     System.out.println(\"Please input only one integer after \u0027mark\u0027, separated by a single whitespace.\");","lastModifiedDate":"2023-02-09"},{"lineNumber":105,"author":{"gitId":"jared-ee"},"content":"                     System.out.println(\"There are \" + i + \" tasks in your list, so do not input an integer \" +","lastModifiedDate":"2023-02-09"},{"lineNumber":106,"author":{"gitId":"jared-ee"},"content":"                             \"smaller than 1 or larger than \" + i + \".\");","lastModifiedDate":"2023-02-09"},{"lineNumber":107,"author":{"gitId":"jared-ee"},"content":"                 }","lastModifiedDate":"2023-02-09"},{"lineNumber":108,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":109,"author":{"gitId":"jared-ee"},"content":"            else if (line.startsWith(\"todo\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":110,"author":{"gitId":"jared-ee"},"content":"                try {","lastModifiedDate":"2023-02-09"},{"lineNumber":111,"author":{"gitId":"jared-ee"},"content":"                    todo(i, line, tasks, done, type);","lastModifiedDate":"2023-02-09"},{"lineNumber":112,"author":{"gitId":"jared-ee"},"content":"                    i++;","lastModifiedDate":"2023-02-09"},{"lineNumber":113,"author":{"gitId":"jared-ee"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":114,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Oops! The description of a todo cannot be left empty.\");","lastModifiedDate":"2023-02-09"},{"lineNumber":115,"author":{"gitId":"jared-ee"},"content":"                }","lastModifiedDate":"2023-02-09"},{"lineNumber":116,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":117,"author":{"gitId":"jared-ee"},"content":"            else if (line.startsWith(\"deadline\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":118,"author":{"gitId":"jared-ee"},"content":"                try {","lastModifiedDate":"2023-02-09"},{"lineNumber":119,"author":{"gitId":"jared-ee"},"content":"                    deadline(i, line, tasks, done, type);","lastModifiedDate":"2023-02-09"},{"lineNumber":120,"author":{"gitId":"jared-ee"},"content":"                    i++;","lastModifiedDate":"2023-02-09"},{"lineNumber":121,"author":{"gitId":"jared-ee"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":122,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Oops! Did you forget the slash?\");","lastModifiedDate":"2023-02-09"},{"lineNumber":123,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"When specifying deadline, please follow the format below:\");","lastModifiedDate":"2023-02-09"},{"lineNumber":124,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"deadline (task) /by (deadline)\");","lastModifiedDate":"2023-02-09"},{"lineNumber":125,"author":{"gitId":"jared-ee"},"content":"                }","lastModifiedDate":"2023-02-09"},{"lineNumber":126,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":127,"author":{"gitId":"jared-ee"},"content":"            else if (line.startsWith(\"event\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":128,"author":{"gitId":"jared-ee"},"content":"                try {","lastModifiedDate":"2023-02-09"},{"lineNumber":129,"author":{"gitId":"jared-ee"},"content":"                    event(i, line, tasks, done, type);","lastModifiedDate":"2023-02-09"},{"lineNumber":130,"author":{"gitId":"jared-ee"},"content":"                    i++;","lastModifiedDate":"2023-02-09"},{"lineNumber":131,"author":{"gitId":"jared-ee"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":132,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Oops! Did you forget the slash?\");","lastModifiedDate":"2023-02-09"},{"lineNumber":133,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"When specifying timeframe, please follow the format below:\");","lastModifiedDate":"2023-02-09"},{"lineNumber":134,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"event (task) /from (starting time) /to (ending time)\");","lastModifiedDate":"2023-02-09"},{"lineNumber":135,"author":{"gitId":"jared-ee"},"content":"                }","lastModifiedDate":"2023-02-09"},{"lineNumber":136,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":137,"author":{"gitId":"jared-ee"},"content":"            else {","lastModifiedDate":"2023-02-09"},{"lineNumber":138,"author":{"gitId":"jared-ee"},"content":"                System.out.print(\"Oops! I\u0027m sorry, I don\u0027t understand that command. Try one of these instead:\");","lastModifiedDate":"2023-02-09"},{"lineNumber":139,"author":{"gitId":"jared-ee"},"content":"                System.out.println(\"list   mark   unmark   todo   deadline   event\");","lastModifiedDate":"2023-02-09"},{"lineNumber":140,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":141,"author":{"gitId":"jared-ee"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":142,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-02-09"},{"lineNumber":143,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":144,"author":{"gitId":"jared-ee"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"jared-ee":144}},{"path":"src/main/java/level6.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jared-ee"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"jared-ee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"jared-ee"},"content":"public class level6 {","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"jared-ee"},"content":"    public static void mark(int i, String line, ArrayList\u003cString\u003e tasks, ArrayList\u003cString\u003e done, ArrayList\u003cString\u003e type) throws DukeException {","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"jared-ee"},"content":"        int number \u003d Integer.parseInt(line.substring(5));","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"jared-ee"},"content":"        if (number \u003e i || number \u003c 1) {","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"jared-ee"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"jared-ee"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"jared-ee"},"content":"        done.remove(number - 1);","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"jared-ee"},"content":"        done.add(number - 1, \"[X]\");","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"  \" + type.get(number - 1) + \"[X]\" + tasks.get(number - 1));","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"jared-ee"},"content":"    public static void unmark(int i, String line, ArrayList\u003cString\u003e tasks, ArrayList\u003cString\u003e done, ArrayList\u003cString\u003e type) throws DukeException {","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"jared-ee"},"content":"        int number \u003d Integer.parseInt(line.substring(7));","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"jared-ee"},"content":"        if (number \u003e i || number \u003c 1) {","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"jared-ee"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"jared-ee"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"jared-ee"},"content":"        done.remove(number - 1);","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"jared-ee"},"content":"        done.add(number - 1, \"[ ]\");","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"Ok, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"  \" + type.get(number - 1) + \"[ ]\" + tasks.get(number - 1));","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"jared-ee"},"content":"    public static void delete(int i, String line, ArrayList\u003cString\u003e tasks, ArrayList\u003cString\u003e done, ArrayList\u003cString\u003e type) throws DukeException {","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"jared-ee"},"content":"        int number \u003d Integer.parseInt(line.substring(7));","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"jared-ee"},"content":"        if (number \u003e i || number \u003c 1) {","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"jared-ee"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"jared-ee"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":32,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-02-09"},{"lineNumber":33,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"  \" + type.get(number - 1) + done.get(number - 1) + tasks.get(number - 1));","lastModifiedDate":"2023-02-09"},{"lineNumber":34,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"Now you have \" + (i - 1) + \" tasks in the list.\");","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"jared-ee"},"content":"        tasks.remove(number - 1);","lastModifiedDate":"2023-02-09"},{"lineNumber":36,"author":{"gitId":"jared-ee"},"content":"        done.remove(number - 1);","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"jared-ee"},"content":"        type.remove(number - 1);","lastModifiedDate":"2023-02-09"},{"lineNumber":38,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"jared-ee"},"content":"    public static void todo(int i, String line, ArrayList\u003cString\u003e tasks, ArrayList\u003cString\u003e done, ArrayList\u003cString\u003e type) throws DukeException {","lastModifiedDate":"2023-02-09"},{"lineNumber":40,"author":{"gitId":"jared-ee"},"content":"        if (line.equals(\"todo\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":41,"author":{"gitId":"jared-ee"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-09"},{"lineNumber":42,"author":{"gitId":"jared-ee"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":43,"author":{"gitId":"jared-ee"},"content":"        tasks.add(line.substring(4));","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"jared-ee"},"content":"        type.add(\"[T]\");","lastModifiedDate":"2023-02-09"},{"lineNumber":45,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-02-09"},{"lineNumber":46,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"  \" + type.get(i) + \"[ ]\" + tasks.get(i));","lastModifiedDate":"2023-02-09"},{"lineNumber":47,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"Now you have \" + (i + 1) + \" tasks in the list.\");","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"jared-ee"},"content":"        done.add(\"[ ]\");","lastModifiedDate":"2023-02-09"},{"lineNumber":49,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":50,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":51,"author":{"gitId":"jared-ee"},"content":"    public static void deadline(int i, String line, ArrayList\u003cString\u003e tasks, ArrayList\u003cString\u003e done, ArrayList\u003cString\u003e type) {","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"jared-ee"},"content":"        int slash \u003d line.indexOf(\"/\");","lastModifiedDate":"2023-02-09"},{"lineNumber":53,"author":{"gitId":"jared-ee"},"content":"        String description \u003d line.substring(8, slash-1);","lastModifiedDate":"2023-02-09"},{"lineNumber":54,"author":{"gitId":"jared-ee"},"content":"        String by \u003d line.substring(slash+4);","lastModifiedDate":"2023-02-09"},{"lineNumber":55,"author":{"gitId":"jared-ee"},"content":"        tasks.add(description + \" (by: \" + by + \")\");","lastModifiedDate":"2023-02-09"},{"lineNumber":56,"author":{"gitId":"jared-ee"},"content":"        type.add(\"[D]\");","lastModifiedDate":"2023-02-09"},{"lineNumber":57,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-02-09"},{"lineNumber":58,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"  \" + type.get(i) + \"[ ]\" + tasks.get(i));","lastModifiedDate":"2023-02-09"},{"lineNumber":59,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"Now you have \" + (i + 1) + \" tasks in the list.\");","lastModifiedDate":"2023-02-09"},{"lineNumber":60,"author":{"gitId":"jared-ee"},"content":"        done.add(\"[ ]\");","lastModifiedDate":"2023-02-09"},{"lineNumber":61,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":62,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":63,"author":{"gitId":"jared-ee"},"content":"    public static void event(int i, String line, ArrayList\u003cString\u003e tasks, ArrayList\u003cString\u003e done, ArrayList\u003cString\u003e type) {","lastModifiedDate":"2023-02-09"},{"lineNumber":64,"author":{"gitId":"jared-ee"},"content":"        int slash1 \u003d line.indexOf(\"/\");","lastModifiedDate":"2023-02-09"},{"lineNumber":65,"author":{"gitId":"jared-ee"},"content":"        int slash2 \u003d line.indexOf(\"/\", slash1+1);","lastModifiedDate":"2023-02-09"},{"lineNumber":66,"author":{"gitId":"jared-ee"},"content":"        String description \u003d line.substring(5, slash1-1);","lastModifiedDate":"2023-02-09"},{"lineNumber":67,"author":{"gitId":"jared-ee"},"content":"        String from \u003d line.substring(slash1+6, slash2-1);","lastModifiedDate":"2023-02-09"},{"lineNumber":68,"author":{"gitId":"jared-ee"},"content":"        String to \u003d line.substring(slash2+4);","lastModifiedDate":"2023-02-09"},{"lineNumber":69,"author":{"gitId":"jared-ee"},"content":"        tasks.add(description + \" (from \" + from + \" to: \" + to + \")\");","lastModifiedDate":"2023-02-09"},{"lineNumber":70,"author":{"gitId":"jared-ee"},"content":"        type.add(\"[E]\");","lastModifiedDate":"2023-02-09"},{"lineNumber":71,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-02-09"},{"lineNumber":72,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"  \" + type.get(i) + \"[ ]\" + tasks.get(i));","lastModifiedDate":"2023-02-09"},{"lineNumber":73,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"Now you have \" + (i + 1) + \" tasks in the list.\");","lastModifiedDate":"2023-02-09"},{"lineNumber":74,"author":{"gitId":"jared-ee"},"content":"        done.add(\"[ ]\");","lastModifiedDate":"2023-02-09"},{"lineNumber":75,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":76,"author":{"gitId":"jared-ee"},"content":"    public static void main(String[] args){","lastModifiedDate":"2023-02-09"},{"lineNumber":77,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");","lastModifiedDate":"2023-02-09"},{"lineNumber":78,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-02-09"},{"lineNumber":79,"author":{"gitId":"jared-ee"},"content":"        String line;","lastModifiedDate":"2023-02-09"},{"lineNumber":80,"author":{"gitId":"jared-ee"},"content":"        ArrayList\u003cString\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-09"},{"lineNumber":81,"author":{"gitId":"jared-ee"},"content":"        ArrayList\u003cString\u003e done \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-09"},{"lineNumber":82,"author":{"gitId":"jared-ee"},"content":"        ArrayList\u003cString\u003e type \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-09"},{"lineNumber":83,"author":{"gitId":"jared-ee"},"content":"        int i \u003d 0;","lastModifiedDate":"2023-02-09"},{"lineNumber":84,"author":{"gitId":"jared-ee"},"content":"        while (true) {","lastModifiedDate":"2023-02-09"},{"lineNumber":85,"author":{"gitId":"jared-ee"},"content":"            Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-09"},{"lineNumber":86,"author":{"gitId":"jared-ee"},"content":"            line \u003d in.nextLine();","lastModifiedDate":"2023-02-09"},{"lineNumber":87,"author":{"gitId":"jared-ee"},"content":"            if (line.startsWith(\"bye\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":88,"author":{"gitId":"jared-ee"},"content":"                break;","lastModifiedDate":"2023-02-09"},{"lineNumber":89,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":90,"author":{"gitId":"jared-ee"},"content":"            if (line.startsWith(\"list\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":91,"author":{"gitId":"jared-ee"},"content":"                System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-02-09"},{"lineNumber":92,"author":{"gitId":"jared-ee"},"content":"                for (int j \u003d 0; j \u003c i; j++) {","lastModifiedDate":"2023-02-09"},{"lineNumber":93,"author":{"gitId":"jared-ee"},"content":"                    try {","lastModifiedDate":"2023-02-09"},{"lineNumber":94,"author":{"gitId":"jared-ee"},"content":"                        System.out.print((j+1) + \".\" + type.get(j) + done.get(j));","lastModifiedDate":"2023-02-09"},{"lineNumber":95,"author":{"gitId":"jared-ee"},"content":"                        System.out.println(tasks.get(j));","lastModifiedDate":"2023-02-09"},{"lineNumber":96,"author":{"gitId":"jared-ee"},"content":"                    } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":97,"author":{"gitId":"jared-ee"},"content":"                        j++;","lastModifiedDate":"2023-02-09"},{"lineNumber":98,"author":{"gitId":"jared-ee"},"content":"                    }","lastModifiedDate":"2023-02-09"},{"lineNumber":99,"author":{"gitId":"jared-ee"},"content":"                }","lastModifiedDate":"2023-02-09"},{"lineNumber":100,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":101,"author":{"gitId":"jared-ee"},"content":"            else if (line.startsWith(\"mark\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":102,"author":{"gitId":"jared-ee"},"content":"                try {","lastModifiedDate":"2023-02-09"},{"lineNumber":103,"author":{"gitId":"jared-ee"},"content":"                    mark(i, line, tasks, done, type);","lastModifiedDate":"2023-02-09"},{"lineNumber":104,"author":{"gitId":"jared-ee"},"content":"                } catch (NumberFormatException | IndexOutOfBoundsException | DukeException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":105,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Oops! That isn\u0027t a task in your list.\");","lastModifiedDate":"2023-02-09"},{"lineNumber":106,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Please input only one integer after \u0027mark\u0027, separated by a single whitespace.\");","lastModifiedDate":"2023-02-09"},{"lineNumber":107,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"There are \" + i + \" tasks in your list, so do not input an integer \" +","lastModifiedDate":"2023-02-09"},{"lineNumber":108,"author":{"gitId":"jared-ee"},"content":"                            \"smaller than 1 or larger than \" + i + \".\");","lastModifiedDate":"2023-02-09"},{"lineNumber":109,"author":{"gitId":"jared-ee"},"content":"                }","lastModifiedDate":"2023-02-09"},{"lineNumber":110,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":111,"author":{"gitId":"jared-ee"},"content":"            else if (line.startsWith(\"unmark\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":112,"author":{"gitId":"jared-ee"},"content":"                try {","lastModifiedDate":"2023-02-09"},{"lineNumber":113,"author":{"gitId":"jared-ee"},"content":"                    unmark(i, line, tasks, done, type);","lastModifiedDate":"2023-02-09"},{"lineNumber":114,"author":{"gitId":"jared-ee"},"content":"                } catch (NumberFormatException | IndexOutOfBoundsException | DukeException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":115,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Oops! That isn\u0027t a task in your list.\");","lastModifiedDate":"2023-02-09"},{"lineNumber":116,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Please input only one integer after \u0027mark\u0027, separated by a single whitespace.\");","lastModifiedDate":"2023-02-09"},{"lineNumber":117,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"There are \" + i + \" tasks in your list, so do not input an integer \" +","lastModifiedDate":"2023-02-09"},{"lineNumber":118,"author":{"gitId":"jared-ee"},"content":"                            \"smaller than 1 or larger than \" + i + \".\");","lastModifiedDate":"2023-02-09"},{"lineNumber":119,"author":{"gitId":"jared-ee"},"content":"                }","lastModifiedDate":"2023-02-09"},{"lineNumber":120,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":121,"author":{"gitId":"jared-ee"},"content":"            else if (line.startsWith(\"todo\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":122,"author":{"gitId":"jared-ee"},"content":"                try {","lastModifiedDate":"2023-02-09"},{"lineNumber":123,"author":{"gitId":"jared-ee"},"content":"                    todo(i, line, tasks, done, type);","lastModifiedDate":"2023-02-09"},{"lineNumber":124,"author":{"gitId":"jared-ee"},"content":"                    i++;","lastModifiedDate":"2023-02-09"},{"lineNumber":125,"author":{"gitId":"jared-ee"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":126,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Oops! The description of a todo cannot be left empty.\");","lastModifiedDate":"2023-02-09"},{"lineNumber":127,"author":{"gitId":"jared-ee"},"content":"                }","lastModifiedDate":"2023-02-09"},{"lineNumber":128,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":129,"author":{"gitId":"jared-ee"},"content":"            else if (line.startsWith(\"deadline\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":130,"author":{"gitId":"jared-ee"},"content":"                try {","lastModifiedDate":"2023-02-09"},{"lineNumber":131,"author":{"gitId":"jared-ee"},"content":"                    deadline(i, line, tasks, done, type);","lastModifiedDate":"2023-02-09"},{"lineNumber":132,"author":{"gitId":"jared-ee"},"content":"                    i++;","lastModifiedDate":"2023-02-09"},{"lineNumber":133,"author":{"gitId":"jared-ee"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":134,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Oops! Did you forget the slash?\");","lastModifiedDate":"2023-02-09"},{"lineNumber":135,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"When specifying deadline, please follow the format below:\");","lastModifiedDate":"2023-02-09"},{"lineNumber":136,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"deadline (task) /by (deadline)\");","lastModifiedDate":"2023-02-09"},{"lineNumber":137,"author":{"gitId":"jared-ee"},"content":"                }","lastModifiedDate":"2023-02-09"},{"lineNumber":138,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":139,"author":{"gitId":"jared-ee"},"content":"            else if (line.startsWith(\"event\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":140,"author":{"gitId":"jared-ee"},"content":"                try {","lastModifiedDate":"2023-02-09"},{"lineNumber":141,"author":{"gitId":"jared-ee"},"content":"                    event(i, line, tasks, done, type);","lastModifiedDate":"2023-02-09"},{"lineNumber":142,"author":{"gitId":"jared-ee"},"content":"                    i++;","lastModifiedDate":"2023-02-09"},{"lineNumber":143,"author":{"gitId":"jared-ee"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":144,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Oops! Did you forget the slash?\");","lastModifiedDate":"2023-02-09"},{"lineNumber":145,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"When specifying timeframe, please follow the format below:\");","lastModifiedDate":"2023-02-09"},{"lineNumber":146,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"event (task) /from (starting time) /to (ending time)\");","lastModifiedDate":"2023-02-09"},{"lineNumber":147,"author":{"gitId":"jared-ee"},"content":"                }","lastModifiedDate":"2023-02-09"},{"lineNumber":148,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":149,"author":{"gitId":"jared-ee"},"content":"            else if (line.startsWith(\"delete\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":150,"author":{"gitId":"jared-ee"},"content":"                try {","lastModifiedDate":"2023-02-09"},{"lineNumber":151,"author":{"gitId":"jared-ee"},"content":"                    delete(i, line, tasks, done, type);","lastModifiedDate":"2023-02-09"},{"lineNumber":152,"author":{"gitId":"jared-ee"},"content":"                    i--;","lastModifiedDate":"2023-02-09"},{"lineNumber":153,"author":{"gitId":"jared-ee"},"content":"                } catch (NumberFormatException | IndexOutOfBoundsException | DukeException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":154,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Oops! That isn\u0027t a task in your list.\");","lastModifiedDate":"2023-02-09"},{"lineNumber":155,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Please input only one integer after \u0027delete\u0027, separated by a single whitespace.\");","lastModifiedDate":"2023-02-09"},{"lineNumber":156,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"There are \" + i + \" tasks in your list, so do not input an integer \" +","lastModifiedDate":"2023-02-09"},{"lineNumber":157,"author":{"gitId":"jared-ee"},"content":"                            \"smaller than 1 or larger than \" + i + \".\");","lastModifiedDate":"2023-02-09"},{"lineNumber":158,"author":{"gitId":"jared-ee"},"content":"                }","lastModifiedDate":"2023-02-09"},{"lineNumber":159,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":160,"author":{"gitId":"jared-ee"},"content":"            else {","lastModifiedDate":"2023-02-09"},{"lineNumber":161,"author":{"gitId":"jared-ee"},"content":"                System.out.print(\"Oops! I\u0027m sorry, I don\u0027t understand that command. Try one of these instead:\");","lastModifiedDate":"2023-02-09"},{"lineNumber":162,"author":{"gitId":"jared-ee"},"content":"                System.out.println(\"list   mark   unmark   todo   deadline   event\");","lastModifiedDate":"2023-02-09"},{"lineNumber":163,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":164,"author":{"gitId":"jared-ee"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":165,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-02-09"},{"lineNumber":166,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":167,"author":{"gitId":"jared-ee"},"content":"}","lastModifiedDate":"2023-02-09"},{"lineNumber":168,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"jared-ee":168}},{"path":"src/main/java/level7.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jared-ee"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"jared-ee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"jared-ee"},"content":"import java.io.File;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"jared-ee"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"jared-ee"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"jared-ee"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"jared-ee"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"jared-ee"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"jared-ee"},"content":"public class level7 {","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"jared-ee"},"content":"    private static void writeToFile(String filePath, String textToAdd) throws IOException {","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"jared-ee"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"jared-ee"},"content":"        fw.write(textToAdd);","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"jared-ee"},"content":"        fw.close();","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"jared-ee"},"content":"    private static void readFileContents(String filePath, int i, ArrayList\u003cString\u003e tasks, ArrayList\u003cString\u003e done, ArrayList\u003cString\u003e type) throws FileNotFoundException, DukeException {","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"jared-ee"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"jared-ee"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"jared-ee"},"content":"        String line \u003d s.nextLine();","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"jared-ee"},"content":"        String line2;","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"jared-ee"},"content":"        int j \u003d i;","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"jared-ee"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"jared-ee"},"content":"            line \u003d s.nextLine();","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"jared-ee"},"content":"            if (line.charAt(3) \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"jared-ee"},"content":"                line2 \u003d \"todo \" + line.substring(9);","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"jared-ee"},"content":"                todo(j, line2, tasks, done, type);","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"jared-ee"},"content":"            else if (line.charAt(3) \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"jared-ee"},"content":"                int bracket \u003d line.indexOf(\u0027(\u0027);","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"jared-ee"},"content":"                line2 \u003d \"deadline \" + line.substring(9, bracket) + \"/by \" + line.substring(bracket+5, line.length()-1);","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"jared-ee"},"content":"                deadline(j, line2, tasks, done, type);","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"jared-ee"},"content":"            else {","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"jared-ee"},"content":"                int bracket \u003d line.indexOf(\u0027(\u0027);","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"jared-ee"},"content":"                int colon \u003d line.indexOf(\u0027:\u0027);","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"jared-ee"},"content":"                line2 \u003d \"event \" + line.substring(9, bracket) + \"/from \"","lastModifiedDate":"2023-02-16"},{"lineNumber":39,"author":{"gitId":"jared-ee"},"content":"                        + line.substring(bracket+6, colon-2) + \"/to \" + line.substring(colon+2, line.length()-1);","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"jared-ee"},"content":"                event(j, line2, tasks, done, type);","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-16"},{"lineNumber":42,"author":{"gitId":"jared-ee"},"content":"            if (line.charAt(6) \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2023-02-16"},{"lineNumber":43,"author":{"gitId":"jared-ee"},"content":"                done.remove(j);","lastModifiedDate":"2023-02-16"},{"lineNumber":44,"author":{"gitId":"jared-ee"},"content":"                done.add(j, \"[X]\");","lastModifiedDate":"2023-02-16"},{"lineNumber":45,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-16"},{"lineNumber":46,"author":{"gitId":"jared-ee"},"content":"            j++;","lastModifiedDate":"2023-02-16"},{"lineNumber":47,"author":{"gitId":"jared-ee"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":49,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":50,"author":{"gitId":"jared-ee"},"content":"    public static void mark(int i, String line, ArrayList\u003cString\u003e tasks, ArrayList\u003cString\u003e done, ArrayList\u003cString\u003e type) throws DukeException {","lastModifiedDate":"2023-02-09"},{"lineNumber":51,"author":{"gitId":"jared-ee"},"content":"        int number \u003d Integer.parseInt(line.substring(5));","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"jared-ee"},"content":"        if (number \u003e i || number \u003c 1) {","lastModifiedDate":"2023-02-09"},{"lineNumber":53,"author":{"gitId":"jared-ee"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-09"},{"lineNumber":54,"author":{"gitId":"jared-ee"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":55,"author":{"gitId":"jared-ee"},"content":"        done.remove(number - 1);","lastModifiedDate":"2023-02-09"},{"lineNumber":56,"author":{"gitId":"jared-ee"},"content":"        done.add(number - 1, \"[X]\");","lastModifiedDate":"2023-02-09"},{"lineNumber":57,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-02-09"},{"lineNumber":58,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"  \" + type.get(number - 1) + \"[X]\" + tasks.get(number - 1));","lastModifiedDate":"2023-02-09"},{"lineNumber":59,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":60,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":61,"author":{"gitId":"jared-ee"},"content":"    public static void unmark(int i, String line, ArrayList\u003cString\u003e tasks, ArrayList\u003cString\u003e done, ArrayList\u003cString\u003e type) throws DukeException {","lastModifiedDate":"2023-02-09"},{"lineNumber":62,"author":{"gitId":"jared-ee"},"content":"        int number \u003d Integer.parseInt(line.substring(7));","lastModifiedDate":"2023-02-09"},{"lineNumber":63,"author":{"gitId":"jared-ee"},"content":"        if (number \u003e i || number \u003c 1) {","lastModifiedDate":"2023-02-09"},{"lineNumber":64,"author":{"gitId":"jared-ee"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-09"},{"lineNumber":65,"author":{"gitId":"jared-ee"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":66,"author":{"gitId":"jared-ee"},"content":"        done.remove(number - 1);","lastModifiedDate":"2023-02-09"},{"lineNumber":67,"author":{"gitId":"jared-ee"},"content":"        done.add(number - 1, \"[ ]\");","lastModifiedDate":"2023-02-09"},{"lineNumber":68,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"Ok, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-02-09"},{"lineNumber":69,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"  \" + type.get(number - 1) + \"[ ]\" + tasks.get(number - 1));","lastModifiedDate":"2023-02-09"},{"lineNumber":70,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":71,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":72,"author":{"gitId":"jared-ee"},"content":"    public static void delete(int i, String line, ArrayList\u003cString\u003e tasks, ArrayList\u003cString\u003e done, ArrayList\u003cString\u003e type) throws DukeException {","lastModifiedDate":"2023-02-09"},{"lineNumber":73,"author":{"gitId":"jared-ee"},"content":"        int number \u003d Integer.parseInt(line.substring(7));","lastModifiedDate":"2023-02-09"},{"lineNumber":74,"author":{"gitId":"jared-ee"},"content":"        if (number \u003e i || number \u003c 1) {","lastModifiedDate":"2023-02-09"},{"lineNumber":75,"author":{"gitId":"jared-ee"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-09"},{"lineNumber":76,"author":{"gitId":"jared-ee"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":77,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-02-09"},{"lineNumber":78,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"  \" + type.get(number - 1) + done.get(number - 1) + tasks.get(number - 1));","lastModifiedDate":"2023-02-09"},{"lineNumber":79,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"Now you have \" + (i - 1) + \" tasks in the list.\");","lastModifiedDate":"2023-02-09"},{"lineNumber":80,"author":{"gitId":"jared-ee"},"content":"        tasks.remove(number - 1);","lastModifiedDate":"2023-02-09"},{"lineNumber":81,"author":{"gitId":"jared-ee"},"content":"        done.remove(number - 1);","lastModifiedDate":"2023-02-09"},{"lineNumber":82,"author":{"gitId":"jared-ee"},"content":"        type.remove(number - 1);","lastModifiedDate":"2023-02-09"},{"lineNumber":83,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":84,"author":{"gitId":"jared-ee"},"content":"    public static void todo(int i, String line, ArrayList\u003cString\u003e tasks, ArrayList\u003cString\u003e done, ArrayList\u003cString\u003e type) throws DukeException {","lastModifiedDate":"2023-02-09"},{"lineNumber":85,"author":{"gitId":"jared-ee"},"content":"        if (line.equals(\"todo\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":86,"author":{"gitId":"jared-ee"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-09"},{"lineNumber":87,"author":{"gitId":"jared-ee"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":88,"author":{"gitId":"jared-ee"},"content":"        tasks.add(line.substring(4));","lastModifiedDate":"2023-02-09"},{"lineNumber":89,"author":{"gitId":"jared-ee"},"content":"        type.add(\"[T]\");","lastModifiedDate":"2023-02-09"},{"lineNumber":90,"author":{"gitId":"jared-ee"},"content":"        done.add(\"[ ]\");","lastModifiedDate":"2023-02-09"},{"lineNumber":91,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":92,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":93,"author":{"gitId":"jared-ee"},"content":"    public static void deadline(int i, String line, ArrayList\u003cString\u003e tasks, ArrayList\u003cString\u003e done, ArrayList\u003cString\u003e type) {","lastModifiedDate":"2023-02-09"},{"lineNumber":94,"author":{"gitId":"jared-ee"},"content":"        int slash \u003d line.indexOf(\"/\");","lastModifiedDate":"2023-02-09"},{"lineNumber":95,"author":{"gitId":"jared-ee"},"content":"        String description \u003d line.substring(8, slash-1);","lastModifiedDate":"2023-02-09"},{"lineNumber":96,"author":{"gitId":"jared-ee"},"content":"        String by \u003d line.substring(slash+4);","lastModifiedDate":"2023-02-09"},{"lineNumber":97,"author":{"gitId":"jared-ee"},"content":"        tasks.add(description + \" (by: \" + by + \")\");","lastModifiedDate":"2023-02-09"},{"lineNumber":98,"author":{"gitId":"jared-ee"},"content":"        type.add(\"[D]\");","lastModifiedDate":"2023-02-09"},{"lineNumber":99,"author":{"gitId":"jared-ee"},"content":"        done.add(\"[ ]\");","lastModifiedDate":"2023-02-09"},{"lineNumber":100,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":101,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":102,"author":{"gitId":"jared-ee"},"content":"    public static void event(int i, String line, ArrayList\u003cString\u003e tasks, ArrayList\u003cString\u003e done, ArrayList\u003cString\u003e type) {","lastModifiedDate":"2023-02-09"},{"lineNumber":103,"author":{"gitId":"jared-ee"},"content":"        int slash1 \u003d line.indexOf(\"/\");","lastModifiedDate":"2023-02-09"},{"lineNumber":104,"author":{"gitId":"jared-ee"},"content":"        int slash2 \u003d line.indexOf(\"/\", slash1+1);","lastModifiedDate":"2023-02-09"},{"lineNumber":105,"author":{"gitId":"jared-ee"},"content":"        String description \u003d line.substring(5, slash1-1);","lastModifiedDate":"2023-02-09"},{"lineNumber":106,"author":{"gitId":"jared-ee"},"content":"        String from \u003d line.substring(slash1+6, slash2-1);","lastModifiedDate":"2023-02-09"},{"lineNumber":107,"author":{"gitId":"jared-ee"},"content":"        String to \u003d line.substring(slash2+4);","lastModifiedDate":"2023-02-09"},{"lineNumber":108,"author":{"gitId":"jared-ee"},"content":"        tasks.add(description + \" (from \" + from + \" to: \" + to + \")\");","lastModifiedDate":"2023-02-09"},{"lineNumber":109,"author":{"gitId":"jared-ee"},"content":"        type.add(\"[E]\");","lastModifiedDate":"2023-02-09"},{"lineNumber":110,"author":{"gitId":"jared-ee"},"content":"        done.add(\"[ ]\");","lastModifiedDate":"2023-02-09"},{"lineNumber":111,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":112,"author":{"gitId":"jared-ee"},"content":"    public static void main(String[] args){","lastModifiedDate":"2023-02-09"},{"lineNumber":113,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");","lastModifiedDate":"2023-02-09"},{"lineNumber":114,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-02-09"},{"lineNumber":115,"author":{"gitId":"jared-ee"},"content":"        String filePath \u003d \"Duke.txt\";","lastModifiedDate":"2023-02-16"},{"lineNumber":116,"author":{"gitId":"jared-ee"},"content":"        String line;","lastModifiedDate":"2023-02-09"},{"lineNumber":117,"author":{"gitId":"jared-ee"},"content":"        ArrayList\u003cString\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-09"},{"lineNumber":118,"author":{"gitId":"jared-ee"},"content":"        ArrayList\u003cString\u003e done \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-09"},{"lineNumber":119,"author":{"gitId":"jared-ee"},"content":"        ArrayList\u003cString\u003e type \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-09"},{"lineNumber":120,"author":{"gitId":"jared-ee"},"content":"        int i \u003d 0;","lastModifiedDate":"2023-02-09"},{"lineNumber":121,"author":{"gitId":"jared-ee"},"content":"        try {","lastModifiedDate":"2023-02-16"},{"lineNumber":122,"author":{"gitId":"jared-ee"},"content":"            readFileContents(filePath, i, tasks, done, type);","lastModifiedDate":"2023-02-16"},{"lineNumber":123,"author":{"gitId":"jared-ee"},"content":"            i \u003d tasks.size();","lastModifiedDate":"2023-02-16"},{"lineNumber":124,"author":{"gitId":"jared-ee"},"content":"        } catch (FileNotFoundException | DukeException e) {","lastModifiedDate":"2023-02-16"},{"lineNumber":125,"author":{"gitId":"jared-ee"},"content":"            i \u003d 0;","lastModifiedDate":"2023-02-16"},{"lineNumber":126,"author":{"gitId":"jared-ee"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":127,"author":{"gitId":"jared-ee"},"content":"        while (true) {","lastModifiedDate":"2023-02-09"},{"lineNumber":128,"author":{"gitId":"jared-ee"},"content":"            Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-09"},{"lineNumber":129,"author":{"gitId":"jared-ee"},"content":"            line \u003d in.nextLine();","lastModifiedDate":"2023-02-09"},{"lineNumber":130,"author":{"gitId":"jared-ee"},"content":"            if (line.startsWith(\"bye\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":131,"author":{"gitId":"jared-ee"},"content":"                String toFile \u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2023-02-09"},{"lineNumber":132,"author":{"gitId":"jared-ee"},"content":"                for (int j \u003d 0; j \u003c i; j++) {","lastModifiedDate":"2023-02-09"},{"lineNumber":133,"author":{"gitId":"jared-ee"},"content":"                    try {","lastModifiedDate":"2023-02-09"},{"lineNumber":134,"author":{"gitId":"jared-ee"},"content":"                        toFile \u003d toFile + System.lineSeparator() + (j + 1) + \".\" + type.get(j) + done.get(j) + tasks.get(j);","lastModifiedDate":"2023-02-09"},{"lineNumber":135,"author":{"gitId":"jared-ee"},"content":"                    } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":136,"author":{"gitId":"jared-ee"},"content":"                        j++;","lastModifiedDate":"2023-02-09"},{"lineNumber":137,"author":{"gitId":"jared-ee"},"content":"                    }","lastModifiedDate":"2023-02-09"},{"lineNumber":138,"author":{"gitId":"jared-ee"},"content":"                }","lastModifiedDate":"2023-02-09"},{"lineNumber":139,"author":{"gitId":"jared-ee"},"content":"                try {","lastModifiedDate":"2023-02-09"},{"lineNumber":140,"author":{"gitId":"jared-ee"},"content":"                    writeToFile(filePath, toFile);","lastModifiedDate":"2023-02-09"},{"lineNumber":141,"author":{"gitId":"jared-ee"},"content":"                    break;","lastModifiedDate":"2023-02-09"},{"lineNumber":142,"author":{"gitId":"jared-ee"},"content":"                } catch (IOException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":143,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2023-02-09"},{"lineNumber":144,"author":{"gitId":"jared-ee"},"content":"                }","lastModifiedDate":"2023-02-09"},{"lineNumber":145,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":146,"author":{"gitId":"jared-ee"},"content":"            if (line.startsWith(\"list\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":147,"author":{"gitId":"jared-ee"},"content":"                System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-02-09"},{"lineNumber":148,"author":{"gitId":"jared-ee"},"content":"                for (int j \u003d 0; j \u003c i; j++) {","lastModifiedDate":"2023-02-09"},{"lineNumber":149,"author":{"gitId":"jared-ee"},"content":"                    try {","lastModifiedDate":"2023-02-09"},{"lineNumber":150,"author":{"gitId":"jared-ee"},"content":"                        System.out.println((j + 1) + \".\" + type.get(j) + done.get(j) + tasks.get(j));","lastModifiedDate":"2023-02-09"},{"lineNumber":151,"author":{"gitId":"jared-ee"},"content":"                    } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":152,"author":{"gitId":"jared-ee"},"content":"                        j++;","lastModifiedDate":"2023-02-09"},{"lineNumber":153,"author":{"gitId":"jared-ee"},"content":"                    }","lastModifiedDate":"2023-02-09"},{"lineNumber":154,"author":{"gitId":"jared-ee"},"content":"                }","lastModifiedDate":"2023-02-09"},{"lineNumber":155,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":156,"author":{"gitId":"jared-ee"},"content":"            else if (line.startsWith(\"mark\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":157,"author":{"gitId":"jared-ee"},"content":"                try {","lastModifiedDate":"2023-02-09"},{"lineNumber":158,"author":{"gitId":"jared-ee"},"content":"                    mark(i, line, tasks, done, type);","lastModifiedDate":"2023-02-09"},{"lineNumber":159,"author":{"gitId":"jared-ee"},"content":"                } catch (NumberFormatException | IndexOutOfBoundsException | DukeException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":160,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Oops! That isn\u0027t a task in your list.\");","lastModifiedDate":"2023-02-09"},{"lineNumber":161,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Please input only one integer after \u0027mark\u0027, separated by a single whitespace.\");","lastModifiedDate":"2023-02-09"},{"lineNumber":162,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"There are \" + i + \" tasks in your list, so do not input an integer \" +","lastModifiedDate":"2023-02-09"},{"lineNumber":163,"author":{"gitId":"jared-ee"},"content":"                            \"smaller than 1 or larger than \" + i + \".\");","lastModifiedDate":"2023-02-09"},{"lineNumber":164,"author":{"gitId":"jared-ee"},"content":"                }","lastModifiedDate":"2023-02-09"},{"lineNumber":165,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":166,"author":{"gitId":"jared-ee"},"content":"            else if (line.startsWith(\"unmark\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":167,"author":{"gitId":"jared-ee"},"content":"                try {","lastModifiedDate":"2023-02-09"},{"lineNumber":168,"author":{"gitId":"jared-ee"},"content":"                    unmark(i, line, tasks, done, type);","lastModifiedDate":"2023-02-09"},{"lineNumber":169,"author":{"gitId":"jared-ee"},"content":"                } catch (NumberFormatException | IndexOutOfBoundsException | DukeException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":170,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Oops! That isn\u0027t a task in your list.\");","lastModifiedDate":"2023-02-09"},{"lineNumber":171,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Please input only one integer after \u0027mark\u0027, separated by a single whitespace.\");","lastModifiedDate":"2023-02-09"},{"lineNumber":172,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"There are \" + i + \" tasks in your list, so do not input an integer \" +","lastModifiedDate":"2023-02-09"},{"lineNumber":173,"author":{"gitId":"jared-ee"},"content":"                            \"smaller than 1 or larger than \" + i + \".\");","lastModifiedDate":"2023-02-09"},{"lineNumber":174,"author":{"gitId":"jared-ee"},"content":"                }","lastModifiedDate":"2023-02-09"},{"lineNumber":175,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":176,"author":{"gitId":"jared-ee"},"content":"            else if (line.startsWith(\"todo\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":177,"author":{"gitId":"jared-ee"},"content":"                try {","lastModifiedDate":"2023-02-09"},{"lineNumber":178,"author":{"gitId":"jared-ee"},"content":"                    todo(i, line, tasks, done, type);","lastModifiedDate":"2023-02-09"},{"lineNumber":179,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-02-16"},{"lineNumber":180,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"  \" + type.get(i) + \"[ ]\" + tasks.get(i));","lastModifiedDate":"2023-02-16"},{"lineNumber":181,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Now you have \" + (i + 1) + \" tasks in the list.\");","lastModifiedDate":"2023-02-16"},{"lineNumber":182,"author":{"gitId":"jared-ee"},"content":"                    i++;","lastModifiedDate":"2023-02-09"},{"lineNumber":183,"author":{"gitId":"jared-ee"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":184,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Oops! The description of a todo cannot be left empty.\");","lastModifiedDate":"2023-02-09"},{"lineNumber":185,"author":{"gitId":"jared-ee"},"content":"                }","lastModifiedDate":"2023-02-09"},{"lineNumber":186,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":187,"author":{"gitId":"jared-ee"},"content":"            else if (line.startsWith(\"deadline\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":188,"author":{"gitId":"jared-ee"},"content":"                try {","lastModifiedDate":"2023-02-09"},{"lineNumber":189,"author":{"gitId":"jared-ee"},"content":"                    deadline(i, line, tasks, done, type);","lastModifiedDate":"2023-02-09"},{"lineNumber":190,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-02-16"},{"lineNumber":191,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"  \" + type.get(i) + \"[ ]\" + tasks.get(i));","lastModifiedDate":"2023-02-16"},{"lineNumber":192,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Now you have \" + (i + 1) + \" tasks in the list.\");","lastModifiedDate":"2023-02-16"},{"lineNumber":193,"author":{"gitId":"jared-ee"},"content":"                    i++;","lastModifiedDate":"2023-02-09"},{"lineNumber":194,"author":{"gitId":"jared-ee"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":195,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Oops! Did you forget the slash?\");","lastModifiedDate":"2023-02-09"},{"lineNumber":196,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"When specifying deadline, please follow the format below:\");","lastModifiedDate":"2023-02-09"},{"lineNumber":197,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"deadline (task) /by (deadline)\");","lastModifiedDate":"2023-02-09"},{"lineNumber":198,"author":{"gitId":"jared-ee"},"content":"                }","lastModifiedDate":"2023-02-09"},{"lineNumber":199,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":200,"author":{"gitId":"jared-ee"},"content":"            else if (line.startsWith(\"event\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":201,"author":{"gitId":"jared-ee"},"content":"                try {","lastModifiedDate":"2023-02-09"},{"lineNumber":202,"author":{"gitId":"jared-ee"},"content":"                    event(i, line, tasks, done, type);","lastModifiedDate":"2023-02-09"},{"lineNumber":203,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-02-16"},{"lineNumber":204,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"  \" + type.get(i) + \"[ ]\" + tasks.get(i));","lastModifiedDate":"2023-02-16"},{"lineNumber":205,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Now you have \" + (i + 1) + \" tasks in the list.\");","lastModifiedDate":"2023-02-16"},{"lineNumber":206,"author":{"gitId":"jared-ee"},"content":"                    i++;","lastModifiedDate":"2023-02-09"},{"lineNumber":207,"author":{"gitId":"jared-ee"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":208,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Oops! Did you forget the slash?\");","lastModifiedDate":"2023-02-09"},{"lineNumber":209,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"When specifying timeframe, please follow the format below:\");","lastModifiedDate":"2023-02-09"},{"lineNumber":210,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"event (task) /from (starting time) /to (ending time)\");","lastModifiedDate":"2023-02-09"},{"lineNumber":211,"author":{"gitId":"jared-ee"},"content":"                }","lastModifiedDate":"2023-02-09"},{"lineNumber":212,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":213,"author":{"gitId":"jared-ee"},"content":"            else if (line.startsWith(\"delete\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":214,"author":{"gitId":"jared-ee"},"content":"                try {","lastModifiedDate":"2023-02-09"},{"lineNumber":215,"author":{"gitId":"jared-ee"},"content":"                    delete(i, line, tasks, done, type);","lastModifiedDate":"2023-02-09"},{"lineNumber":216,"author":{"gitId":"jared-ee"},"content":"                    i--;","lastModifiedDate":"2023-02-09"},{"lineNumber":217,"author":{"gitId":"jared-ee"},"content":"                } catch (NumberFormatException | IndexOutOfBoundsException | DukeException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":218,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Oops! That isn\u0027t a task in your list.\");","lastModifiedDate":"2023-02-09"},{"lineNumber":219,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Please input only one integer after \u0027delete\u0027, separated by a single whitespace.\");","lastModifiedDate":"2023-02-09"},{"lineNumber":220,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"There are \" + i + \" tasks in your list, so do not input an integer \" +","lastModifiedDate":"2023-02-09"},{"lineNumber":221,"author":{"gitId":"jared-ee"},"content":"                            \"smaller than 1 or larger than \" + i + \".\");","lastModifiedDate":"2023-02-09"},{"lineNumber":222,"author":{"gitId":"jared-ee"},"content":"                }","lastModifiedDate":"2023-02-09"},{"lineNumber":223,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":224,"author":{"gitId":"jared-ee"},"content":"            else {","lastModifiedDate":"2023-02-09"},{"lineNumber":225,"author":{"gitId":"jared-ee"},"content":"                if (!line.startsWith(\"bye\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":226,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Oops! I\u0027m sorry, I don\u0027t understand that command. Try one of these instead:\");","lastModifiedDate":"2023-02-16"},{"lineNumber":227,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"list   mark   unmark   todo   deadline   event\");","lastModifiedDate":"2023-02-09"},{"lineNumber":228,"author":{"gitId":"jared-ee"},"content":"                }","lastModifiedDate":"2023-02-09"},{"lineNumber":229,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":230,"author":{"gitId":"jared-ee"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":231,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-02-09"},{"lineNumber":232,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":233,"author":{"gitId":"jared-ee"},"content":"}","lastModifiedDate":"2023-02-09"},{"lineNumber":234,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"jared-ee":234}},{"path":"src/main/java/level8.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jared-ee"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"jared-ee"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"jared-ee"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"jared-ee"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"jared-ee"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"jared-ee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"jared-ee"},"content":"import java.io.File;","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"jared-ee"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"jared-ee"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"jared-ee"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"jared-ee"},"content":"public class level8 {","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"jared-ee"},"content":"    private static void writeToFile(String filePath, String textToAdd) throws IOException {","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"jared-ee"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"jared-ee"},"content":"        fw.write(textToAdd);","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"jared-ee"},"content":"        fw.close();","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"jared-ee"},"content":"    private static void readFileContents(ArrayList\u003cString\u003e filecontents, String filePath, int i, ArrayList\u003cLocalDateTime\u003e dates_and_times, DateTimeFormatter formatter, ArrayList\u003cString\u003e tasks, ArrayList\u003cString\u003e done, ArrayList\u003cString\u003e type) throws FileNotFoundException, DukeException {","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"jared-ee"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"jared-ee"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"jared-ee"},"content":"        String line;","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"jared-ee"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"jared-ee"},"content":"            line \u003d s.nextLine();","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"jared-ee"},"content":"            filecontents.add(line);","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"jared-ee"},"content":"            if (line.startsWith(\"todo\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"jared-ee"},"content":"                todo(dates_and_times, formatter, line, tasks, done, type);","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"jared-ee"},"content":"                i++;","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"jared-ee"},"content":"            else if (line.startsWith(\"deadline\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"jared-ee"},"content":"                try {","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"jared-ee"},"content":"                    deadline(dates_and_times, formatter, line, tasks, done, type);","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"jared-ee"},"content":"                    i++;","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"jared-ee"},"content":"                } catch (Ignore e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"jared-ee"},"content":"                    System.out.print(\"\");","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"jared-ee"},"content":"                }","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"jared-ee"},"content":"            else if (line.startsWith(\"event\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"jared-ee"},"content":"                try {","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"jared-ee"},"content":"                    event(dates_and_times, formatter, line, tasks, done, type);","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"jared-ee"},"content":"                    i++;","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"jared-ee"},"content":"                }","lastModifiedDate":"2023-02-17"},{"lineNumber":44,"author":{"gitId":"jared-ee"},"content":"                catch (Ignore e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":45,"author":{"gitId":"jared-ee"},"content":"                    System.out.print(\"\");","lastModifiedDate":"2023-02-17"},{"lineNumber":46,"author":{"gitId":"jared-ee"},"content":"                }","lastModifiedDate":"2023-02-17"},{"lineNumber":47,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":48,"author":{"gitId":"jared-ee"},"content":"            else if (line.startsWith(\"delete\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":49,"author":{"gitId":"jared-ee"},"content":"                delete(dates_and_times, i, line, tasks, done, type);","lastModifiedDate":"2023-02-17"},{"lineNumber":50,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":51,"author":{"gitId":"jared-ee"},"content":"            else if (line.startsWith(\"mark\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":52,"author":{"gitId":"jared-ee"},"content":"                mark(i, line, done);","lastModifiedDate":"2023-02-17"},{"lineNumber":53,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":54,"author":{"gitId":"jared-ee"},"content":"            else if (line.startsWith(\"unmark\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":55,"author":{"gitId":"jared-ee"},"content":"                unmark(i, line, done);","lastModifiedDate":"2023-02-17"},{"lineNumber":56,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":57,"author":{"gitId":"jared-ee"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":58,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":59,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":60,"author":{"gitId":"jared-ee"},"content":"    public static String Date(String datestr) {","lastModifiedDate":"2023-02-17"},{"lineNumber":61,"author":{"gitId":"jared-ee"},"content":"        String datestr2 \u003d datestr;","lastModifiedDate":"2023-02-17"},{"lineNumber":62,"author":{"gitId":"jared-ee"},"content":"        if (datestr.indexOf(\u0027-\u0027) !\u003d 4) {","lastModifiedDate":"2023-02-17"},{"lineNumber":63,"author":{"gitId":"jared-ee"},"content":"            int month \u003d Integer.parseInt(datestr.substring(3, 5));","lastModifiedDate":"2023-02-17"},{"lineNumber":64,"author":{"gitId":"jared-ee"},"content":"            if (month \u003e 12) {","lastModifiedDate":"2023-02-17"},{"lineNumber":65,"author":{"gitId":"jared-ee"},"content":"                datestr2 \u003d datestr.substring(6) + \"-\" + datestr.substring(0, 3) + datestr.substring(3, 5);","lastModifiedDate":"2023-02-17"},{"lineNumber":66,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":67,"author":{"gitId":"jared-ee"},"content":"            else {","lastModifiedDate":"2023-02-17"},{"lineNumber":68,"author":{"gitId":"jared-ee"},"content":"                datestr2 \u003d datestr.substring(6) + \"-\" + datestr.substring(3, 6) + datestr.substring(0, 2);","lastModifiedDate":"2023-02-17"},{"lineNumber":69,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":70,"author":{"gitId":"jared-ee"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":71,"author":{"gitId":"jared-ee"},"content":"        return datestr2;","lastModifiedDate":"2023-02-17"},{"lineNumber":72,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":73,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":74,"author":{"gitId":"jared-ee"},"content":"    public static String Time(String timestr) {","lastModifiedDate":"2023-02-17"},{"lineNumber":75,"author":{"gitId":"jared-ee"},"content":"        String timestr2 \u003d timestr;","lastModifiedDate":"2023-02-17"},{"lineNumber":76,"author":{"gitId":"jared-ee"},"content":"        if (timestr.endsWith(\"PM\") \u0026\u0026 timestr.charAt(0) \u003d\u003d \u00270\u0027) {","lastModifiedDate":"2023-02-17"},{"lineNumber":77,"author":{"gitId":"jared-ee"},"content":"            int hour \u003d Character.getNumericValue(timestr.charAt(1));","lastModifiedDate":"2023-02-17"},{"lineNumber":78,"author":{"gitId":"jared-ee"},"content":"            hour \u003d hour + 12;","lastModifiedDate":"2023-02-17"},{"lineNumber":79,"author":{"gitId":"jared-ee"},"content":"            timestr2 \u003d hour + timestr.substring(2, 5);","lastModifiedDate":"2023-02-17"},{"lineNumber":80,"author":{"gitId":"jared-ee"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":81,"author":{"gitId":"jared-ee"},"content":"        else if (timestr.endsWith(\"AM\") \u0026\u0026 timestr.startsWith(\"12\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":82,"author":{"gitId":"jared-ee"},"content":"            timestr2 \u003d \"00:00\";","lastModifiedDate":"2023-02-17"},{"lineNumber":83,"author":{"gitId":"jared-ee"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":84,"author":{"gitId":"jared-ee"},"content":"        else {","lastModifiedDate":"2023-02-17"},{"lineNumber":85,"author":{"gitId":"jared-ee"},"content":"            timestr2 \u003d timestr.substring(0, 5);","lastModifiedDate":"2023-02-17"},{"lineNumber":86,"author":{"gitId":"jared-ee"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":87,"author":{"gitId":"jared-ee"},"content":"        return timestr2;","lastModifiedDate":"2023-02-17"},{"lineNumber":88,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":89,"author":{"gitId":"jared-ee"},"content":"    ","lastModifiedDate":"2023-02-17"},{"lineNumber":90,"author":{"gitId":"jared-ee"},"content":"    public static void DateTime(ArrayList\u003cLocalDateTime\u003e dates_and_times, String str, DateTimeFormatter formatter) {","lastModifiedDate":"2023-02-17"},{"lineNumber":91,"author":{"gitId":"jared-ee"},"content":"        String datestr;","lastModifiedDate":"2023-02-17"},{"lineNumber":92,"author":{"gitId":"jared-ee"},"content":"        String timestr;","lastModifiedDate":"2023-02-17"},{"lineNumber":93,"author":{"gitId":"jared-ee"},"content":"        String datetimestr;","lastModifiedDate":"2023-02-17"},{"lineNumber":94,"author":{"gitId":"jared-ee"},"content":"        if (str.length() \u003d\u003d 10) {","lastModifiedDate":"2023-02-17"},{"lineNumber":95,"author":{"gitId":"jared-ee"},"content":"            datestr \u003d Date(str);","lastModifiedDate":"2023-02-17"},{"lineNumber":96,"author":{"gitId":"jared-ee"},"content":"            timestr \u003d \"00:00\";","lastModifiedDate":"2023-02-17"},{"lineNumber":97,"author":{"gitId":"jared-ee"},"content":"            datetimestr \u003d datestr + \"T\" + timestr;","lastModifiedDate":"2023-02-17"},{"lineNumber":98,"author":{"gitId":"jared-ee"},"content":"            LocalDateTime datetime \u003d LocalDateTime.parse(datetimestr, formatter);","lastModifiedDate":"2023-02-17"},{"lineNumber":99,"author":{"gitId":"jared-ee"},"content":"            dates_and_times.add(datetime);","lastModifiedDate":"2023-02-17"},{"lineNumber":100,"author":{"gitId":"jared-ee"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":101,"author":{"gitId":"jared-ee"},"content":"        else if (str.length() \u003c\u003d 8) {","lastModifiedDate":"2023-02-17"},{"lineNumber":102,"author":{"gitId":"jared-ee"},"content":"            datestr \u003d (LocalDate.now()).toString();","lastModifiedDate":"2023-02-17"},{"lineNumber":103,"author":{"gitId":"jared-ee"},"content":"            timestr \u003d Time(str);","lastModifiedDate":"2023-02-17"},{"lineNumber":104,"author":{"gitId":"jared-ee"},"content":"            datetimestr \u003d datestr + \"T\" + timestr;","lastModifiedDate":"2023-02-17"},{"lineNumber":105,"author":{"gitId":"jared-ee"},"content":"            LocalDateTime datetime \u003d LocalDateTime.parse(datetimestr, formatter);","lastModifiedDate":"2023-02-17"},{"lineNumber":106,"author":{"gitId":"jared-ee"},"content":"            dates_and_times.add(datetime);","lastModifiedDate":"2023-02-17"},{"lineNumber":107,"author":{"gitId":"jared-ee"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":108,"author":{"gitId":"jared-ee"},"content":"        else {","lastModifiedDate":"2023-02-17"},{"lineNumber":109,"author":{"gitId":"jared-ee"},"content":"            datestr \u003d str.substring(0, 10);","lastModifiedDate":"2023-02-17"},{"lineNumber":110,"author":{"gitId":"jared-ee"},"content":"            datestr \u003d Date(datestr);","lastModifiedDate":"2023-02-17"},{"lineNumber":111,"author":{"gitId":"jared-ee"},"content":"            timestr \u003d str.substring(11);","lastModifiedDate":"2023-02-17"},{"lineNumber":112,"author":{"gitId":"jared-ee"},"content":"            timestr \u003d Time(timestr);","lastModifiedDate":"2023-02-17"},{"lineNumber":113,"author":{"gitId":"jared-ee"},"content":"            datetimestr \u003d datestr + \"T\" + timestr;","lastModifiedDate":"2023-02-17"},{"lineNumber":114,"author":{"gitId":"jared-ee"},"content":"            LocalDateTime datetime \u003d LocalDateTime.parse(datetimestr, formatter);","lastModifiedDate":"2023-02-17"},{"lineNumber":115,"author":{"gitId":"jared-ee"},"content":"            dates_and_times.add(datetime);","lastModifiedDate":"2023-02-17"},{"lineNumber":116,"author":{"gitId":"jared-ee"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":117,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":118,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":119,"author":{"gitId":"jared-ee"},"content":"    public static void mark(int i, String line, ArrayList\u003cString\u003e done) throws DukeException {","lastModifiedDate":"2023-02-17"},{"lineNumber":120,"author":{"gitId":"jared-ee"},"content":"        int number \u003d Integer.parseInt(line.substring(5));","lastModifiedDate":"2023-02-17"},{"lineNumber":121,"author":{"gitId":"jared-ee"},"content":"        if (number \u003e i || number \u003c 1) {","lastModifiedDate":"2023-02-17"},{"lineNumber":122,"author":{"gitId":"jared-ee"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-17"},{"lineNumber":123,"author":{"gitId":"jared-ee"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":124,"author":{"gitId":"jared-ee"},"content":"        done.remove(number - 1);","lastModifiedDate":"2023-02-17"},{"lineNumber":125,"author":{"gitId":"jared-ee"},"content":"        done.add(number - 1, \"[X]\");","lastModifiedDate":"2023-02-17"},{"lineNumber":126,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":127,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":128,"author":{"gitId":"jared-ee"},"content":"    public static void unmark(int i, String line, ArrayList\u003cString\u003e done) throws DukeException {","lastModifiedDate":"2023-02-17"},{"lineNumber":129,"author":{"gitId":"jared-ee"},"content":"        int number \u003d Integer.parseInt(line.substring(7));","lastModifiedDate":"2023-02-17"},{"lineNumber":130,"author":{"gitId":"jared-ee"},"content":"        if (number \u003e i || number \u003c 1) {","lastModifiedDate":"2023-02-17"},{"lineNumber":131,"author":{"gitId":"jared-ee"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-17"},{"lineNumber":132,"author":{"gitId":"jared-ee"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":133,"author":{"gitId":"jared-ee"},"content":"        done.remove(number - 1);","lastModifiedDate":"2023-02-17"},{"lineNumber":134,"author":{"gitId":"jared-ee"},"content":"        done.add(number - 1, \"[ ]\");","lastModifiedDate":"2023-02-17"},{"lineNumber":135,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":136,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":137,"author":{"gitId":"jared-ee"},"content":"    public static void delete(ArrayList\u003cLocalDateTime\u003e dates_and_times, int i, String line, ArrayList\u003cString\u003e tasks, ArrayList\u003cString\u003e done, ArrayList\u003cString\u003e type) throws DukeException {","lastModifiedDate":"2023-02-17"},{"lineNumber":138,"author":{"gitId":"jared-ee"},"content":"        int number \u003d Integer.parseInt(line.substring(7));","lastModifiedDate":"2023-02-17"},{"lineNumber":139,"author":{"gitId":"jared-ee"},"content":"        if (number \u003e i || number \u003c 1) {","lastModifiedDate":"2023-02-17"},{"lineNumber":140,"author":{"gitId":"jared-ee"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-17"},{"lineNumber":141,"author":{"gitId":"jared-ee"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":142,"author":{"gitId":"jared-ee"},"content":"        tasks.remove(number - 1);","lastModifiedDate":"2023-02-17"},{"lineNumber":143,"author":{"gitId":"jared-ee"},"content":"        done.remove(number - 1);","lastModifiedDate":"2023-02-17"},{"lineNumber":144,"author":{"gitId":"jared-ee"},"content":"        type.remove(number - 1);","lastModifiedDate":"2023-02-17"},{"lineNumber":145,"author":{"gitId":"jared-ee"},"content":"        dates_and_times.remove(2*(number-1));","lastModifiedDate":"2023-02-17"},{"lineNumber":146,"author":{"gitId":"jared-ee"},"content":"        dates_and_times.remove(2*(number-1));","lastModifiedDate":"2023-02-17"},{"lineNumber":147,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":148,"author":{"gitId":"jared-ee"},"content":"    public static void todo(ArrayList\u003cLocalDateTime\u003e dates_and_times, DateTimeFormatter formatter, String line, ArrayList\u003cString\u003e tasks, ArrayList\u003cString\u003e done, ArrayList\u003cString\u003e type) throws DukeException {","lastModifiedDate":"2023-02-17"},{"lineNumber":149,"author":{"gitId":"jared-ee"},"content":"        if (line.equals(\"todo\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":150,"author":{"gitId":"jared-ee"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-17"},{"lineNumber":151,"author":{"gitId":"jared-ee"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":152,"author":{"gitId":"jared-ee"},"content":"        tasks.add(line.substring(4));","lastModifiedDate":"2023-02-17"},{"lineNumber":153,"author":{"gitId":"jared-ee"},"content":"        type.add(\"[T]\");","lastModifiedDate":"2023-02-17"},{"lineNumber":154,"author":{"gitId":"jared-ee"},"content":"        done.add(\"[ ]\");","lastModifiedDate":"2023-02-17"},{"lineNumber":155,"author":{"gitId":"jared-ee"},"content":"        DateTime(dates_and_times, \"2015-10-23T03:34\", formatter);","lastModifiedDate":"2023-02-17"},{"lineNumber":156,"author":{"gitId":"jared-ee"},"content":"        DateTime(dates_and_times, \"2015-10-23T03:34\", formatter);","lastModifiedDate":"2023-02-17"},{"lineNumber":157,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":158,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":159,"author":{"gitId":"jared-ee"},"content":"    public static void deadline(ArrayList\u003cLocalDateTime\u003e dates_and_times, DateTimeFormatter formatter, String line, ArrayList\u003cString\u003e tasks, ArrayList\u003cString\u003e done, ArrayList\u003cString\u003e type) throws DukeException, Ignore {","lastModifiedDate":"2023-02-17"},{"lineNumber":160,"author":{"gitId":"jared-ee"},"content":"        int slash \u003d line.indexOf(\"/\");","lastModifiedDate":"2023-02-17"},{"lineNumber":161,"author":{"gitId":"jared-ee"},"content":"        String description \u003d line.substring(8, slash-1);","lastModifiedDate":"2023-02-17"},{"lineNumber":162,"author":{"gitId":"jared-ee"},"content":"        if (description.equals(\"\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":163,"author":{"gitId":"jared-ee"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-17"},{"lineNumber":164,"author":{"gitId":"jared-ee"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":165,"author":{"gitId":"jared-ee"},"content":"        String by \u003d line.substring(slash+4);","lastModifiedDate":"2023-02-17"},{"lineNumber":166,"author":{"gitId":"jared-ee"},"content":"        try {","lastModifiedDate":"2023-02-17"},{"lineNumber":167,"author":{"gitId":"jared-ee"},"content":"            DateTime(dates_and_times, by, formatter);","lastModifiedDate":"2023-02-17"},{"lineNumber":168,"author":{"gitId":"jared-ee"},"content":"            tasks.add(description);","lastModifiedDate":"2023-02-17"},{"lineNumber":169,"author":{"gitId":"jared-ee"},"content":"            type.add(\"[D]\");","lastModifiedDate":"2023-02-17"},{"lineNumber":170,"author":{"gitId":"jared-ee"},"content":"            done.add(\"[ ]\");","lastModifiedDate":"2023-02-17"},{"lineNumber":171,"author":{"gitId":"jared-ee"},"content":"            DateTime(dates_and_times, \"2015-10-23T03:34\", formatter);","lastModifiedDate":"2023-02-17"},{"lineNumber":172,"author":{"gitId":"jared-ee"},"content":"        } catch (DateTimeParseException | NumberFormatException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":173,"author":{"gitId":"jared-ee"},"content":"            System.out.println(\"Oops! You\u0027ve entered an invalid date/time.\");","lastModifiedDate":"2023-02-17"},{"lineNumber":174,"author":{"gitId":"jared-ee"},"content":"            System.out.println(\"Date format-\u003e YYYY-MM-DD or DD-MM-YYYY or MM-DD-YYYY\");","lastModifiedDate":"2023-02-17"},{"lineNumber":175,"author":{"gitId":"jared-ee"},"content":"            System.out.println(\"Time format-\u003e 18:00 or 06:00 PM\");","lastModifiedDate":"2023-02-17"},{"lineNumber":176,"author":{"gitId":"jared-ee"},"content":"            System.out.println(\"Example: 2015-10-23 03:34\");","lastModifiedDate":"2023-02-17"},{"lineNumber":177,"author":{"gitId":"jared-ee"},"content":"            throw new Ignore();","lastModifiedDate":"2023-02-17"},{"lineNumber":178,"author":{"gitId":"jared-ee"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":179,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":180,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":181,"author":{"gitId":"jared-ee"},"content":"    public static void event(ArrayList\u003cLocalDateTime\u003e dates_and_times, DateTimeFormatter formatter, String line, ArrayList\u003cString\u003e tasks, ArrayList\u003cString\u003e done, ArrayList\u003cString\u003e type) throws DukeException, Ignore {","lastModifiedDate":"2023-02-17"},{"lineNumber":182,"author":{"gitId":"jared-ee"},"content":"        int slash1 \u003d line.indexOf(\"/\");","lastModifiedDate":"2023-02-17"},{"lineNumber":183,"author":{"gitId":"jared-ee"},"content":"        int slash2 \u003d line.indexOf(\"/\", slash1+1);","lastModifiedDate":"2023-02-17"},{"lineNumber":184,"author":{"gitId":"jared-ee"},"content":"        String description \u003d line.substring(5, slash1-1);","lastModifiedDate":"2023-02-17"},{"lineNumber":185,"author":{"gitId":"jared-ee"},"content":"        if (description.equals(\"\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":186,"author":{"gitId":"jared-ee"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-17"},{"lineNumber":187,"author":{"gitId":"jared-ee"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":188,"author":{"gitId":"jared-ee"},"content":"        String from \u003d line.substring(slash1+6, slash2-1);","lastModifiedDate":"2023-02-17"},{"lineNumber":189,"author":{"gitId":"jared-ee"},"content":"        String to \u003d line.substring(slash2+4);","lastModifiedDate":"2023-02-17"},{"lineNumber":190,"author":{"gitId":"jared-ee"},"content":"        try {","lastModifiedDate":"2023-02-17"},{"lineNumber":191,"author":{"gitId":"jared-ee"},"content":"            DateTime(dates_and_times, from, formatter);","lastModifiedDate":"2023-02-17"},{"lineNumber":192,"author":{"gitId":"jared-ee"},"content":"            DateTime(dates_and_times, to, formatter);","lastModifiedDate":"2023-02-17"},{"lineNumber":193,"author":{"gitId":"jared-ee"},"content":"            tasks.add(description);","lastModifiedDate":"2023-02-17"},{"lineNumber":194,"author":{"gitId":"jared-ee"},"content":"            type.add(\"[E]\");","lastModifiedDate":"2023-02-17"},{"lineNumber":195,"author":{"gitId":"jared-ee"},"content":"            done.add(\"[ ]\");","lastModifiedDate":"2023-02-17"},{"lineNumber":196,"author":{"gitId":"jared-ee"},"content":"        } catch (DateTimeParseException | NumberFormatException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":197,"author":{"gitId":"jared-ee"},"content":"            System.out.println(\"Oops! You\u0027ve entered an invalid date/time.\");","lastModifiedDate":"2023-02-17"},{"lineNumber":198,"author":{"gitId":"jared-ee"},"content":"            System.out.println(\"Date format-\u003e YYYY-MM-DD or DD-MM-YYYY or MM-DD-YYYY\");","lastModifiedDate":"2023-02-17"},{"lineNumber":199,"author":{"gitId":"jared-ee"},"content":"            System.out.println(\"Time format-\u003e 18:00 or 06:00 PM\");","lastModifiedDate":"2023-02-17"},{"lineNumber":200,"author":{"gitId":"jared-ee"},"content":"            System.out.println(\"Example: 2015-10-23 03:34\");","lastModifiedDate":"2023-02-17"},{"lineNumber":201,"author":{"gitId":"jared-ee"},"content":"            System.out.println(\"If time is left out, I\u0027ll assume it to be 00:00.\");","lastModifiedDate":"2023-02-17"},{"lineNumber":202,"author":{"gitId":"jared-ee"},"content":"            System.out.println(\"If date is left out, I\u0027ll assume it to be today.\");","lastModifiedDate":"2023-02-17"},{"lineNumber":203,"author":{"gitId":"jared-ee"},"content":"            throw new  Ignore();","lastModifiedDate":"2023-02-17"},{"lineNumber":204,"author":{"gitId":"jared-ee"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":205,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":206,"author":{"gitId":"jared-ee"},"content":"    public static void main(String[] args){","lastModifiedDate":"2023-02-17"},{"lineNumber":207,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");","lastModifiedDate":"2023-02-17"},{"lineNumber":208,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-02-17"},{"lineNumber":209,"author":{"gitId":"jared-ee"},"content":"        String filePath \u003d \"Duke.txt\";","lastModifiedDate":"2023-02-17"},{"lineNumber":210,"author":{"gitId":"jared-ee"},"content":"        String line;","lastModifiedDate":"2023-02-17"},{"lineNumber":211,"author":{"gitId":"jared-ee"},"content":"        ArrayList\u003cString\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-17"},{"lineNumber":212,"author":{"gitId":"jared-ee"},"content":"        ArrayList\u003cString\u003e done \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-17"},{"lineNumber":213,"author":{"gitId":"jared-ee"},"content":"        ArrayList\u003cString\u003e type \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-17"},{"lineNumber":214,"author":{"gitId":"jared-ee"},"content":"        ArrayList\u003cLocalDateTime\u003e dates_and_times \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-17"},{"lineNumber":215,"author":{"gitId":"jared-ee"},"content":"        ArrayList\u003cString\u003e filecontents \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-17"},{"lineNumber":216,"author":{"gitId":"jared-ee"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\u0027T\u0027HH:mm\");","lastModifiedDate":"2023-02-17"},{"lineNumber":217,"author":{"gitId":"jared-ee"},"content":"        int i \u003d 0;","lastModifiedDate":"2023-02-17"},{"lineNumber":218,"author":{"gitId":"jared-ee"},"content":"        try {","lastModifiedDate":"2023-02-17"},{"lineNumber":219,"author":{"gitId":"jared-ee"},"content":"            readFileContents(filecontents, filePath, i, dates_and_times, formatter, tasks, done, type);","lastModifiedDate":"2023-02-17"},{"lineNumber":220,"author":{"gitId":"jared-ee"},"content":"            i \u003d tasks.size();","lastModifiedDate":"2023-02-17"},{"lineNumber":221,"author":{"gitId":"jared-ee"},"content":"        } catch (FileNotFoundException | DukeException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":222,"author":{"gitId":"jared-ee"},"content":"            i \u003d 0;","lastModifiedDate":"2023-02-17"},{"lineNumber":223,"author":{"gitId":"jared-ee"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":224,"author":{"gitId":"jared-ee"},"content":"        while (true) {","lastModifiedDate":"2023-02-17"},{"lineNumber":225,"author":{"gitId":"jared-ee"},"content":"            Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-17"},{"lineNumber":226,"author":{"gitId":"jared-ee"},"content":"            line \u003d in.nextLine();","lastModifiedDate":"2023-02-17"},{"lineNumber":227,"author":{"gitId":"jared-ee"},"content":"            if (line.startsWith(\"bye\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":228,"author":{"gitId":"jared-ee"},"content":"                String toFile \u003d \"\";","lastModifiedDate":"2023-02-17"},{"lineNumber":229,"author":{"gitId":"jared-ee"},"content":"                for (String filecontent : filecontents) {","lastModifiedDate":"2023-02-17"},{"lineNumber":230,"author":{"gitId":"jared-ee"},"content":"                    toFile \u003d toFile + filecontent + System.lineSeparator();","lastModifiedDate":"2023-02-17"},{"lineNumber":231,"author":{"gitId":"jared-ee"},"content":"                }","lastModifiedDate":"2023-02-17"},{"lineNumber":232,"author":{"gitId":"jared-ee"},"content":"                try {","lastModifiedDate":"2023-02-17"},{"lineNumber":233,"author":{"gitId":"jared-ee"},"content":"                    writeToFile(filePath, toFile);","lastModifiedDate":"2023-02-17"},{"lineNumber":234,"author":{"gitId":"jared-ee"},"content":"                    break;","lastModifiedDate":"2023-02-17"},{"lineNumber":235,"author":{"gitId":"jared-ee"},"content":"                } catch (IOException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":236,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2023-02-17"},{"lineNumber":237,"author":{"gitId":"jared-ee"},"content":"                }","lastModifiedDate":"2023-02-17"},{"lineNumber":238,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":239,"author":{"gitId":"jared-ee"},"content":"            if (line.startsWith(\"list\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":240,"author":{"gitId":"jared-ee"},"content":"                System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-02-17"},{"lineNumber":241,"author":{"gitId":"jared-ee"},"content":"                for (int j \u003d 0; j \u003c i; j++) {","lastModifiedDate":"2023-02-17"},{"lineNumber":242,"author":{"gitId":"jared-ee"},"content":"                    try {","lastModifiedDate":"2023-02-17"},{"lineNumber":243,"author":{"gitId":"jared-ee"},"content":"                        System.out.print((j + 1) + \".\" + type.get(j) + done.get(j) + tasks.get(j));","lastModifiedDate":"2023-02-17"},{"lineNumber":244,"author":{"gitId":"jared-ee"},"content":"                        if ((type.get(j)).equals(\"[T]\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":245,"author":{"gitId":"jared-ee"},"content":"                            System.out.println(\"\");","lastModifiedDate":"2023-02-17"},{"lineNumber":246,"author":{"gitId":"jared-ee"},"content":"                        }","lastModifiedDate":"2023-02-17"},{"lineNumber":247,"author":{"gitId":"jared-ee"},"content":"                        if ((type.get(j)).equals(\"[D]\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":248,"author":{"gitId":"jared-ee"},"content":"                            System.out.println(\" (by: \" + DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm a\").format(dates_and_times.get(2*j)) + \")\");","lastModifiedDate":"2023-02-17"},{"lineNumber":249,"author":{"gitId":"jared-ee"},"content":"                        }","lastModifiedDate":"2023-02-17"},{"lineNumber":250,"author":{"gitId":"jared-ee"},"content":"                        if ((type.get(j)).equals(\"[E]\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":251,"author":{"gitId":"jared-ee"},"content":"                            System.out.print(\" (from \" + DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm a\").format(dates_and_times.get(2*j)) + \" to: \");","lastModifiedDate":"2023-02-17"},{"lineNumber":252,"author":{"gitId":"jared-ee"},"content":"                            System.out.println(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm a\").format(dates_and_times.get(2*j+1)) + \")\");","lastModifiedDate":"2023-02-17"},{"lineNumber":253,"author":{"gitId":"jared-ee"},"content":"                        }","lastModifiedDate":"2023-02-17"},{"lineNumber":254,"author":{"gitId":"jared-ee"},"content":"                    } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":255,"author":{"gitId":"jared-ee"},"content":"                        j++;","lastModifiedDate":"2023-02-17"},{"lineNumber":256,"author":{"gitId":"jared-ee"},"content":"                    }","lastModifiedDate":"2023-02-17"},{"lineNumber":257,"author":{"gitId":"jared-ee"},"content":"                }","lastModifiedDate":"2023-02-17"},{"lineNumber":258,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":259,"author":{"gitId":"jared-ee"},"content":"            else if (line.startsWith(\"mark\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":260,"author":{"gitId":"jared-ee"},"content":"                try {","lastModifiedDate":"2023-02-17"},{"lineNumber":261,"author":{"gitId":"jared-ee"},"content":"                    mark(i, line, done);","lastModifiedDate":"2023-02-17"},{"lineNumber":262,"author":{"gitId":"jared-ee"},"content":"                    int number \u003d Integer.parseInt(line.substring(5));","lastModifiedDate":"2023-02-17"},{"lineNumber":263,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-02-17"},{"lineNumber":264,"author":{"gitId":"jared-ee"},"content":"                    System.out.print(\"  \" + type.get(number - 1) + \"[X]\" + tasks.get(number - 1) + \" \");","lastModifiedDate":"2023-02-17"},{"lineNumber":265,"author":{"gitId":"jared-ee"},"content":"                    if ((type.get(number-1)).equals(\"[T]\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":266,"author":{"gitId":"jared-ee"},"content":"                        System.out.println(\"\");","lastModifiedDate":"2023-02-17"},{"lineNumber":267,"author":{"gitId":"jared-ee"},"content":"                    }","lastModifiedDate":"2023-02-17"},{"lineNumber":268,"author":{"gitId":"jared-ee"},"content":"                    if ((type.get(number-1)).equals(\"[D]\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":269,"author":{"gitId":"jared-ee"},"content":"                        System.out.println(\"(by: \" + DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm a\").format(dates_and_times.get(2*(number-1))) + \")\");","lastModifiedDate":"2023-02-17"},{"lineNumber":270,"author":{"gitId":"jared-ee"},"content":"                    }","lastModifiedDate":"2023-02-17"},{"lineNumber":271,"author":{"gitId":"jared-ee"},"content":"                    if ((type.get(number-1)).equals(\"[E]\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":272,"author":{"gitId":"jared-ee"},"content":"                        System.out.print(\"(from \" + DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm a\").format(dates_and_times.get(2*(number-1))) + \" to: \");","lastModifiedDate":"2023-02-17"},{"lineNumber":273,"author":{"gitId":"jared-ee"},"content":"                        System.out.println(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm a\").format(dates_and_times.get(2*(number-1)+1)) + \")\");","lastModifiedDate":"2023-02-17"},{"lineNumber":274,"author":{"gitId":"jared-ee"},"content":"                    }","lastModifiedDate":"2023-02-17"},{"lineNumber":275,"author":{"gitId":"jared-ee"},"content":"                    filecontents.add(line);","lastModifiedDate":"2023-02-17"},{"lineNumber":276,"author":{"gitId":"jared-ee"},"content":"                } catch (NumberFormatException | IndexOutOfBoundsException | DukeException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":277,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Oops! That isn\u0027t a task in your list.\");","lastModifiedDate":"2023-02-17"},{"lineNumber":278,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Please input only one integer after \u0027mark\u0027, separated by a single whitespace.\");","lastModifiedDate":"2023-02-17"},{"lineNumber":279,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"There are \" + i + \" tasks in your list, so do not input an integer \" +","lastModifiedDate":"2023-02-17"},{"lineNumber":280,"author":{"gitId":"jared-ee"},"content":"                            \"smaller than 1 or larger than \" + i + \".\");","lastModifiedDate":"2023-02-17"},{"lineNumber":281,"author":{"gitId":"jared-ee"},"content":"                }","lastModifiedDate":"2023-02-17"},{"lineNumber":282,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":283,"author":{"gitId":"jared-ee"},"content":"            else if (line.startsWith(\"unmark\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":284,"author":{"gitId":"jared-ee"},"content":"                try {","lastModifiedDate":"2023-02-17"},{"lineNumber":285,"author":{"gitId":"jared-ee"},"content":"                    unmark(i, line, done);","lastModifiedDate":"2023-02-17"},{"lineNumber":286,"author":{"gitId":"jared-ee"},"content":"                    int number \u003d Integer.parseInt(line.substring(7));","lastModifiedDate":"2023-02-17"},{"lineNumber":287,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Ok, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-02-17"},{"lineNumber":288,"author":{"gitId":"jared-ee"},"content":"                    System.out.print(\"  \" + type.get(number - 1) + \"[ ]\" + tasks.get(number - 1) + \" \");","lastModifiedDate":"2023-02-17"},{"lineNumber":289,"author":{"gitId":"jared-ee"},"content":"                    if ((type.get(number-1)).equals(\"[T]\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":290,"author":{"gitId":"jared-ee"},"content":"                        System.out.println(\"\");","lastModifiedDate":"2023-02-17"},{"lineNumber":291,"author":{"gitId":"jared-ee"},"content":"                    }","lastModifiedDate":"2023-02-17"},{"lineNumber":292,"author":{"gitId":"jared-ee"},"content":"                    if ((type.get(number-1)).equals(\"[D]\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":293,"author":{"gitId":"jared-ee"},"content":"                        System.out.println(\"(by: \" + DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm a\").format(dates_and_times.get(2*(number-1))) + \")\");","lastModifiedDate":"2023-02-17"},{"lineNumber":294,"author":{"gitId":"jared-ee"},"content":"                    }","lastModifiedDate":"2023-02-17"},{"lineNumber":295,"author":{"gitId":"jared-ee"},"content":"                    if ((type.get(number-1)).equals(\"[E]\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":296,"author":{"gitId":"jared-ee"},"content":"                        System.out.print(\"(from \" + DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm a\").format(dates_and_times.get(2*(number-1))) + \" to: \");","lastModifiedDate":"2023-02-17"},{"lineNumber":297,"author":{"gitId":"jared-ee"},"content":"                        System.out.println(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm a\").format(dates_and_times.get(2*(number-1)+1)) + \")\");","lastModifiedDate":"2023-02-17"},{"lineNumber":298,"author":{"gitId":"jared-ee"},"content":"                    }","lastModifiedDate":"2023-02-17"},{"lineNumber":299,"author":{"gitId":"jared-ee"},"content":"                    filecontents.add(line);","lastModifiedDate":"2023-02-17"},{"lineNumber":300,"author":{"gitId":"jared-ee"},"content":"                } catch (NumberFormatException | IndexOutOfBoundsException | DukeException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":301,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Oops! That isn\u0027t a task in your list.\");","lastModifiedDate":"2023-02-17"},{"lineNumber":302,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Please input only one integer after \u0027mark\u0027, separated by a single whitespace.\");","lastModifiedDate":"2023-02-17"},{"lineNumber":303,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"There are \" + i + \" tasks in your list, so do not input an integer \" +","lastModifiedDate":"2023-02-17"},{"lineNumber":304,"author":{"gitId":"jared-ee"},"content":"                            \"smaller than 1 or larger than \" + i + \".\");","lastModifiedDate":"2023-02-17"},{"lineNumber":305,"author":{"gitId":"jared-ee"},"content":"                }","lastModifiedDate":"2023-02-17"},{"lineNumber":306,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":307,"author":{"gitId":"jared-ee"},"content":"            else if (line.startsWith(\"todo\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":308,"author":{"gitId":"jared-ee"},"content":"                try {","lastModifiedDate":"2023-02-17"},{"lineNumber":309,"author":{"gitId":"jared-ee"},"content":"                    todo(dates_and_times, formatter, line, tasks, done, type);","lastModifiedDate":"2023-02-17"},{"lineNumber":310,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-02-17"},{"lineNumber":311,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"  \" + type.get(i) + \"[ ]\" + tasks.get(i));","lastModifiedDate":"2023-02-17"},{"lineNumber":312,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Now you have \" + (i + 1) + \" tasks in the list.\");","lastModifiedDate":"2023-02-17"},{"lineNumber":313,"author":{"gitId":"jared-ee"},"content":"                    filecontents.add(line);","lastModifiedDate":"2023-02-17"},{"lineNumber":314,"author":{"gitId":"jared-ee"},"content":"                    i++;","lastModifiedDate":"2023-02-17"},{"lineNumber":315,"author":{"gitId":"jared-ee"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":316,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Oops! The description of a todo cannot be left empty.\");","lastModifiedDate":"2023-02-17"},{"lineNumber":317,"author":{"gitId":"jared-ee"},"content":"                }","lastModifiedDate":"2023-02-17"},{"lineNumber":318,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":319,"author":{"gitId":"jared-ee"},"content":"            else if (line.startsWith(\"deadline\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":320,"author":{"gitId":"jared-ee"},"content":"                try {","lastModifiedDate":"2023-02-17"},{"lineNumber":321,"author":{"gitId":"jared-ee"},"content":"                    deadline(dates_and_times, formatter, line, tasks, done, type);","lastModifiedDate":"2023-02-17"},{"lineNumber":322,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-02-17"},{"lineNumber":323,"author":{"gitId":"jared-ee"},"content":"                    System.out.print(\"  \" + type.get(i) + \"[ ]\" + tasks.get(i) + \" (by: \");","lastModifiedDate":"2023-02-17"},{"lineNumber":324,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm a\").format(dates_and_times.get(2*i)) + \")\");","lastModifiedDate":"2023-02-17"},{"lineNumber":325,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Now you have \" + (i + 1) + \" tasks in the list.\");","lastModifiedDate":"2023-02-17"},{"lineNumber":326,"author":{"gitId":"jared-ee"},"content":"                    filecontents.add(line);","lastModifiedDate":"2023-02-17"},{"lineNumber":327,"author":{"gitId":"jared-ee"},"content":"                    i++;","lastModifiedDate":"2023-02-17"},{"lineNumber":328,"author":{"gitId":"jared-ee"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":329,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Invalid format. When specifying deadline, please follow the format below:\");","lastModifiedDate":"2023-02-17"},{"lineNumber":330,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"deadline (task) /by (deadline)\");","lastModifiedDate":"2023-02-17"},{"lineNumber":331,"author":{"gitId":"jared-ee"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":332,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"You might have left the description empty.\");","lastModifiedDate":"2023-02-17"},{"lineNumber":333,"author":{"gitId":"jared-ee"},"content":"                } catch (Ignore e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":334,"author":{"gitId":"jared-ee"},"content":"                    System.out.print(\"\");","lastModifiedDate":"2023-02-17"},{"lineNumber":335,"author":{"gitId":"jared-ee"},"content":"                }","lastModifiedDate":"2023-02-17"},{"lineNumber":336,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":337,"author":{"gitId":"jared-ee"},"content":"            else if (line.startsWith(\"event\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":338,"author":{"gitId":"jared-ee"},"content":"                try {","lastModifiedDate":"2023-02-17"},{"lineNumber":339,"author":{"gitId":"jared-ee"},"content":"                    event(dates_and_times, formatter, line, tasks, done, type);","lastModifiedDate":"2023-02-17"},{"lineNumber":340,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-02-17"},{"lineNumber":341,"author":{"gitId":"jared-ee"},"content":"                    System.out.print(\"  \" + type.get(i) + \"[ ]\" + tasks.get(i) + \" (from: \");","lastModifiedDate":"2023-02-17"},{"lineNumber":342,"author":{"gitId":"jared-ee"},"content":"                    System.out.print(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm a\").format(dates_and_times.get(2*i)) + \" to: \");","lastModifiedDate":"2023-02-17"},{"lineNumber":343,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm a\").format(dates_and_times.get(2*i+1)) + \")\");","lastModifiedDate":"2023-02-17"},{"lineNumber":344,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Now you have \" + (i + 1) + \" tasks in the list.\");","lastModifiedDate":"2023-02-17"},{"lineNumber":345,"author":{"gitId":"jared-ee"},"content":"                    filecontents.add(line);","lastModifiedDate":"2023-02-17"},{"lineNumber":346,"author":{"gitId":"jared-ee"},"content":"                    i++;","lastModifiedDate":"2023-02-17"},{"lineNumber":347,"author":{"gitId":"jared-ee"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":348,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Invalid format. When specifying timeframe, please follow the format below:\");","lastModifiedDate":"2023-02-17"},{"lineNumber":349,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"event (task) /from (starting time) /to (ending time)\");","lastModifiedDate":"2023-02-17"},{"lineNumber":350,"author":{"gitId":"jared-ee"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":351,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"You might have left the description empty.\");","lastModifiedDate":"2023-02-17"},{"lineNumber":352,"author":{"gitId":"jared-ee"},"content":"                } catch (Ignore e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":353,"author":{"gitId":"jared-ee"},"content":"                    System.out.print(\"\");","lastModifiedDate":"2023-02-17"},{"lineNumber":354,"author":{"gitId":"jared-ee"},"content":"                }","lastModifiedDate":"2023-02-17"},{"lineNumber":355,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":356,"author":{"gitId":"jared-ee"},"content":"            else if (line.startsWith(\"delete\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":357,"author":{"gitId":"jared-ee"},"content":"                try {","lastModifiedDate":"2023-02-17"},{"lineNumber":358,"author":{"gitId":"jared-ee"},"content":"                    delete(dates_and_times, i, line, tasks, done, type);","lastModifiedDate":"2023-02-17"},{"lineNumber":359,"author":{"gitId":"jared-ee"},"content":"                    int number \u003d Integer.parseInt(line.substring(7));","lastModifiedDate":"2023-02-17"},{"lineNumber":360,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-02-17"},{"lineNumber":361,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"  \" + type.get(number - 1) + done.get(number - 1) + tasks.get(number - 1));","lastModifiedDate":"2023-02-17"},{"lineNumber":362,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Now you have \" + (i - 1) + \" tasks in the list.\");","lastModifiedDate":"2023-02-17"},{"lineNumber":363,"author":{"gitId":"jared-ee"},"content":"                    filecontents.add(line);","lastModifiedDate":"2023-02-17"},{"lineNumber":364,"author":{"gitId":"jared-ee"},"content":"                    i--;","lastModifiedDate":"2023-02-17"},{"lineNumber":365,"author":{"gitId":"jared-ee"},"content":"                } catch (NumberFormatException | IndexOutOfBoundsException | DukeException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":366,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Oops! That isn\u0027t a task in your list.\");","lastModifiedDate":"2023-02-17"},{"lineNumber":367,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Please input only one integer after \u0027delete\u0027, separated by a single whitespace.\");","lastModifiedDate":"2023-02-17"},{"lineNumber":368,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"There are \" + i + \" tasks in your list, so do not input an integer \" +","lastModifiedDate":"2023-02-17"},{"lineNumber":369,"author":{"gitId":"jared-ee"},"content":"                            \"smaller than 1 or larger than \" + i + \".\");","lastModifiedDate":"2023-02-17"},{"lineNumber":370,"author":{"gitId":"jared-ee"},"content":"                }","lastModifiedDate":"2023-02-17"},{"lineNumber":371,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":372,"author":{"gitId":"jared-ee"},"content":"            else {","lastModifiedDate":"2023-02-17"},{"lineNumber":373,"author":{"gitId":"jared-ee"},"content":"                if (!line.startsWith(\"bye\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":374,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Oops! I\u0027m sorry, I don\u0027t understand that command. Try one of these instead:\");","lastModifiedDate":"2023-02-17"},{"lineNumber":375,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"list   mark   unmark   todo   deadline   event\");","lastModifiedDate":"2023-02-17"},{"lineNumber":376,"author":{"gitId":"jared-ee"},"content":"                }","lastModifiedDate":"2023-02-17"},{"lineNumber":377,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":378,"author":{"gitId":"jared-ee"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":379,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-02-17"},{"lineNumber":380,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":381,"author":{"gitId":"jared-ee"},"content":"}","lastModifiedDate":"2023-02-17"},{"lineNumber":382,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"jared-ee":382}},{"path":"src/main/java/level9.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jared-ee"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"jared-ee"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"jared-ee"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"jared-ee"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"jared-ee"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"jared-ee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"jared-ee"},"content":"import java.io.File;","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"jared-ee"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"jared-ee"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"jared-ee"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"jared-ee"},"content":"import java.lang.String;","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"jared-ee"},"content":"public class level9 {","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"jared-ee"},"content":"    private static void writeToFile(String filePath, String textToAdd) throws IOException {","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"jared-ee"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"jared-ee"},"content":"        fw.write(textToAdd);","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"jared-ee"},"content":"        fw.close();","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"jared-ee"},"content":"    private static void readFileContents(ArrayList\u003cString\u003e filecontents, String filePath, int i, ArrayList\u003cLocalDateTime\u003e dates_and_times, DateTimeFormatter formatter, ArrayList\u003cString\u003e tasks, ArrayList\u003cString\u003e done, ArrayList\u003cString\u003e type) throws FileNotFoundException, DukeException {","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"jared-ee"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"jared-ee"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"jared-ee"},"content":"        String line;","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"jared-ee"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"jared-ee"},"content":"            line \u003d s.nextLine();","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"jared-ee"},"content":"            filecontents.add(line);","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"jared-ee"},"content":"            if (line.startsWith(\"todo\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"jared-ee"},"content":"                todo(dates_and_times, formatter, line, tasks, done, type);","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"jared-ee"},"content":"                i++;","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"jared-ee"},"content":"            else if (line.startsWith(\"deadline\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"jared-ee"},"content":"                try {","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"jared-ee"},"content":"                    deadline(dates_and_times, formatter, line, tasks, done, type);","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"jared-ee"},"content":"                    i++;","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"jared-ee"},"content":"                } catch (Ignore e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"jared-ee"},"content":"                    System.out.print(\"\");","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"jared-ee"},"content":"                }","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"jared-ee"},"content":"            else if (line.startsWith(\"event\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"jared-ee"},"content":"                try {","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"jared-ee"},"content":"                    event(dates_and_times, formatter, line, tasks, done, type);","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"jared-ee"},"content":"                    i++;","lastModifiedDate":"2023-02-17"},{"lineNumber":44,"author":{"gitId":"jared-ee"},"content":"                }","lastModifiedDate":"2023-02-17"},{"lineNumber":45,"author":{"gitId":"jared-ee"},"content":"                catch (Ignore e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":46,"author":{"gitId":"jared-ee"},"content":"                    System.out.print(\"\");","lastModifiedDate":"2023-02-17"},{"lineNumber":47,"author":{"gitId":"jared-ee"},"content":"                }","lastModifiedDate":"2023-02-17"},{"lineNumber":48,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":49,"author":{"gitId":"jared-ee"},"content":"            else if (line.startsWith(\"delete\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":50,"author":{"gitId":"jared-ee"},"content":"                delete(dates_and_times, i, line, tasks, done, type);","lastModifiedDate":"2023-02-17"},{"lineNumber":51,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":52,"author":{"gitId":"jared-ee"},"content":"            else if (line.startsWith(\"mark\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":53,"author":{"gitId":"jared-ee"},"content":"                mark(i, line, done);","lastModifiedDate":"2023-02-17"},{"lineNumber":54,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":55,"author":{"gitId":"jared-ee"},"content":"            else if (line.startsWith(\"unmark\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":56,"author":{"gitId":"jared-ee"},"content":"                unmark(i, line, done);","lastModifiedDate":"2023-02-17"},{"lineNumber":57,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":58,"author":{"gitId":"jared-ee"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":59,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":60,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":61,"author":{"gitId":"jared-ee"},"content":"    public static String Date(String datestr) {","lastModifiedDate":"2023-02-17"},{"lineNumber":62,"author":{"gitId":"jared-ee"},"content":"        String datestr2 \u003d datestr;","lastModifiedDate":"2023-02-17"},{"lineNumber":63,"author":{"gitId":"jared-ee"},"content":"        if (datestr.indexOf(\u0027-\u0027) !\u003d 4) {","lastModifiedDate":"2023-02-17"},{"lineNumber":64,"author":{"gitId":"jared-ee"},"content":"            int month \u003d Integer.parseInt(datestr.substring(3, 5));","lastModifiedDate":"2023-02-17"},{"lineNumber":65,"author":{"gitId":"jared-ee"},"content":"            if (month \u003e 12) {","lastModifiedDate":"2023-02-17"},{"lineNumber":66,"author":{"gitId":"jared-ee"},"content":"                datestr2 \u003d datestr.substring(6) + \"-\" + datestr.substring(0, 3) + datestr.substring(3, 5);","lastModifiedDate":"2023-02-17"},{"lineNumber":67,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":68,"author":{"gitId":"jared-ee"},"content":"            else {","lastModifiedDate":"2023-02-17"},{"lineNumber":69,"author":{"gitId":"jared-ee"},"content":"                datestr2 \u003d datestr.substring(6) + \"-\" + datestr.substring(3, 6) + datestr.substring(0, 2);","lastModifiedDate":"2023-02-17"},{"lineNumber":70,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":71,"author":{"gitId":"jared-ee"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":72,"author":{"gitId":"jared-ee"},"content":"        return datestr2;","lastModifiedDate":"2023-02-17"},{"lineNumber":73,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":74,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":75,"author":{"gitId":"jared-ee"},"content":"    public static String Time(String timestr) {","lastModifiedDate":"2023-02-17"},{"lineNumber":76,"author":{"gitId":"jared-ee"},"content":"        String timestr2 \u003d timestr;","lastModifiedDate":"2023-02-17"},{"lineNumber":77,"author":{"gitId":"jared-ee"},"content":"        if (timestr.endsWith(\"PM\") \u0026\u0026 timestr.charAt(0) \u003d\u003d \u00270\u0027) {","lastModifiedDate":"2023-02-17"},{"lineNumber":78,"author":{"gitId":"jared-ee"},"content":"            int hour \u003d Character.getNumericValue(timestr.charAt(1));","lastModifiedDate":"2023-02-17"},{"lineNumber":79,"author":{"gitId":"jared-ee"},"content":"            hour \u003d hour + 12;","lastModifiedDate":"2023-02-17"},{"lineNumber":80,"author":{"gitId":"jared-ee"},"content":"            timestr2 \u003d hour + timestr.substring(2, 5);","lastModifiedDate":"2023-02-17"},{"lineNumber":81,"author":{"gitId":"jared-ee"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":82,"author":{"gitId":"jared-ee"},"content":"        else if (timestr.endsWith(\"AM\") \u0026\u0026 timestr.startsWith(\"12\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":83,"author":{"gitId":"jared-ee"},"content":"            timestr2 \u003d \"00:00\";","lastModifiedDate":"2023-02-17"},{"lineNumber":84,"author":{"gitId":"jared-ee"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":85,"author":{"gitId":"jared-ee"},"content":"        else {","lastModifiedDate":"2023-02-17"},{"lineNumber":86,"author":{"gitId":"jared-ee"},"content":"            timestr2 \u003d timestr.substring(0, 5);","lastModifiedDate":"2023-02-17"},{"lineNumber":87,"author":{"gitId":"jared-ee"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":88,"author":{"gitId":"jared-ee"},"content":"        return timestr2;","lastModifiedDate":"2023-02-17"},{"lineNumber":89,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":90,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":91,"author":{"gitId":"jared-ee"},"content":"    public static String DT(String str) {","lastModifiedDate":"2023-02-17"},{"lineNumber":92,"author":{"gitId":"jared-ee"},"content":"        String datestr;","lastModifiedDate":"2023-02-17"},{"lineNumber":93,"author":{"gitId":"jared-ee"},"content":"        String timestr;","lastModifiedDate":"2023-02-17"},{"lineNumber":94,"author":{"gitId":"jared-ee"},"content":"        String datetimestr;","lastModifiedDate":"2023-02-17"},{"lineNumber":95,"author":{"gitId":"jared-ee"},"content":"        if (str.length() \u003d\u003d 10) {","lastModifiedDate":"2023-02-17"},{"lineNumber":96,"author":{"gitId":"jared-ee"},"content":"            datestr \u003d Date(str);","lastModifiedDate":"2023-02-17"},{"lineNumber":97,"author":{"gitId":"jared-ee"},"content":"            timestr \u003d \"00:00\";","lastModifiedDate":"2023-02-17"},{"lineNumber":98,"author":{"gitId":"jared-ee"},"content":"            datetimestr \u003d datestr + \"T\" + timestr;","lastModifiedDate":"2023-02-17"},{"lineNumber":99,"author":{"gitId":"jared-ee"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":100,"author":{"gitId":"jared-ee"},"content":"        else if (str.length() \u003c\u003d 8) {","lastModifiedDate":"2023-02-17"},{"lineNumber":101,"author":{"gitId":"jared-ee"},"content":"            datestr \u003d (LocalDate.now()).toString();","lastModifiedDate":"2023-02-17"},{"lineNumber":102,"author":{"gitId":"jared-ee"},"content":"            timestr \u003d Time(str);","lastModifiedDate":"2023-02-17"},{"lineNumber":103,"author":{"gitId":"jared-ee"},"content":"            datetimestr \u003d datestr + \"T\" + timestr;","lastModifiedDate":"2023-02-17"},{"lineNumber":104,"author":{"gitId":"jared-ee"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":105,"author":{"gitId":"jared-ee"},"content":"        else {","lastModifiedDate":"2023-02-17"},{"lineNumber":106,"author":{"gitId":"jared-ee"},"content":"            datestr \u003d str.substring(0, 10);","lastModifiedDate":"2023-02-17"},{"lineNumber":107,"author":{"gitId":"jared-ee"},"content":"            datestr \u003d Date(datestr);","lastModifiedDate":"2023-02-17"},{"lineNumber":108,"author":{"gitId":"jared-ee"},"content":"            timestr \u003d str.substring(11);","lastModifiedDate":"2023-02-17"},{"lineNumber":109,"author":{"gitId":"jared-ee"},"content":"            timestr \u003d Time(timestr);","lastModifiedDate":"2023-02-17"},{"lineNumber":110,"author":{"gitId":"jared-ee"},"content":"            datetimestr \u003d datestr + \"T\" + timestr;","lastModifiedDate":"2023-02-17"},{"lineNumber":111,"author":{"gitId":"jared-ee"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":112,"author":{"gitId":"jared-ee"},"content":"        return datetimestr;","lastModifiedDate":"2023-02-17"},{"lineNumber":113,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":114,"author":{"gitId":"jared-ee"},"content":"    public static void DateTime(ArrayList\u003cLocalDateTime\u003e dates_and_times, String str, DateTimeFormatter formatter) {","lastModifiedDate":"2023-02-17"},{"lineNumber":115,"author":{"gitId":"jared-ee"},"content":"        String datetimestr \u003d DT(str);","lastModifiedDate":"2023-02-17"},{"lineNumber":116,"author":{"gitId":"jared-ee"},"content":"        LocalDateTime datetime \u003d LocalDateTime.parse(datetimestr, formatter);","lastModifiedDate":"2023-02-17"},{"lineNumber":117,"author":{"gitId":"jared-ee"},"content":"        dates_and_times.add(datetime);","lastModifiedDate":"2023-02-17"},{"lineNumber":118,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":119,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":120,"author":{"gitId":"jared-ee"},"content":"    public static void mark(int i, String line, ArrayList\u003cString\u003e done) throws DukeException {","lastModifiedDate":"2023-02-17"},{"lineNumber":121,"author":{"gitId":"jared-ee"},"content":"        int number \u003d Integer.parseInt(line.substring(5));","lastModifiedDate":"2023-02-17"},{"lineNumber":122,"author":{"gitId":"jared-ee"},"content":"        if (number \u003e i || number \u003c 1) {","lastModifiedDate":"2023-02-17"},{"lineNumber":123,"author":{"gitId":"jared-ee"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-17"},{"lineNumber":124,"author":{"gitId":"jared-ee"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":125,"author":{"gitId":"jared-ee"},"content":"        done.remove(number - 1);","lastModifiedDate":"2023-02-17"},{"lineNumber":126,"author":{"gitId":"jared-ee"},"content":"        done.add(number - 1, \"[X]\");","lastModifiedDate":"2023-02-17"},{"lineNumber":127,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":128,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":129,"author":{"gitId":"jared-ee"},"content":"    public static void unmark(int i, String line, ArrayList\u003cString\u003e done) throws DukeException {","lastModifiedDate":"2023-02-17"},{"lineNumber":130,"author":{"gitId":"jared-ee"},"content":"        int number \u003d Integer.parseInt(line.substring(7));","lastModifiedDate":"2023-02-17"},{"lineNumber":131,"author":{"gitId":"jared-ee"},"content":"        if (number \u003e i || number \u003c 1) {","lastModifiedDate":"2023-02-17"},{"lineNumber":132,"author":{"gitId":"jared-ee"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-17"},{"lineNumber":133,"author":{"gitId":"jared-ee"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":134,"author":{"gitId":"jared-ee"},"content":"        done.remove(number - 1);","lastModifiedDate":"2023-02-17"},{"lineNumber":135,"author":{"gitId":"jared-ee"},"content":"        done.add(number - 1, \"[ ]\");","lastModifiedDate":"2023-02-17"},{"lineNumber":136,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":137,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":138,"author":{"gitId":"jared-ee"},"content":"    public static void delete(ArrayList\u003cLocalDateTime\u003e dates_and_times, int i, String line, ArrayList\u003cString\u003e tasks, ArrayList\u003cString\u003e done, ArrayList\u003cString\u003e type) throws DukeException {","lastModifiedDate":"2023-02-17"},{"lineNumber":139,"author":{"gitId":"jared-ee"},"content":"        int number \u003d Integer.parseInt(line.substring(7));","lastModifiedDate":"2023-02-17"},{"lineNumber":140,"author":{"gitId":"jared-ee"},"content":"        if (number \u003e i || number \u003c 1) {","lastModifiedDate":"2023-02-17"},{"lineNumber":141,"author":{"gitId":"jared-ee"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-17"},{"lineNumber":142,"author":{"gitId":"jared-ee"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":143,"author":{"gitId":"jared-ee"},"content":"        tasks.remove(number - 1);","lastModifiedDate":"2023-02-17"},{"lineNumber":144,"author":{"gitId":"jared-ee"},"content":"        done.remove(number - 1);","lastModifiedDate":"2023-02-17"},{"lineNumber":145,"author":{"gitId":"jared-ee"},"content":"        type.remove(number - 1);","lastModifiedDate":"2023-02-17"},{"lineNumber":146,"author":{"gitId":"jared-ee"},"content":"        dates_and_times.remove(2*(number-1));","lastModifiedDate":"2023-02-17"},{"lineNumber":147,"author":{"gitId":"jared-ee"},"content":"        dates_and_times.remove(2*(number-1));","lastModifiedDate":"2023-02-17"},{"lineNumber":148,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":149,"author":{"gitId":"jared-ee"},"content":"    public static void todo(ArrayList\u003cLocalDateTime\u003e dates_and_times, DateTimeFormatter formatter, String line, ArrayList\u003cString\u003e tasks, ArrayList\u003cString\u003e done, ArrayList\u003cString\u003e type) throws DukeException {","lastModifiedDate":"2023-02-17"},{"lineNumber":150,"author":{"gitId":"jared-ee"},"content":"        String description \u003d line.substring(4);","lastModifiedDate":"2023-02-17"},{"lineNumber":151,"author":{"gitId":"jared-ee"},"content":"        if (description.isBlank()) {","lastModifiedDate":"2023-02-17"},{"lineNumber":152,"author":{"gitId":"jared-ee"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-17"},{"lineNumber":153,"author":{"gitId":"jared-ee"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":154,"author":{"gitId":"jared-ee"},"content":"        tasks.add(description);","lastModifiedDate":"2023-02-17"},{"lineNumber":155,"author":{"gitId":"jared-ee"},"content":"        type.add(\"[T]\");","lastModifiedDate":"2023-02-17"},{"lineNumber":156,"author":{"gitId":"jared-ee"},"content":"        done.add(\"[ ]\");","lastModifiedDate":"2023-02-17"},{"lineNumber":157,"author":{"gitId":"jared-ee"},"content":"        DateTime(dates_and_times, \"2015-10-23T03:34\", formatter);","lastModifiedDate":"2023-02-17"},{"lineNumber":158,"author":{"gitId":"jared-ee"},"content":"        DateTime(dates_and_times, \"2015-10-23T03:34\", formatter);","lastModifiedDate":"2023-02-17"},{"lineNumber":159,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":160,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":161,"author":{"gitId":"jared-ee"},"content":"    public static void deadline(ArrayList\u003cLocalDateTime\u003e dates_and_times, DateTimeFormatter formatter, String line, ArrayList\u003cString\u003e tasks, ArrayList\u003cString\u003e done, ArrayList\u003cString\u003e type) throws DukeException, Ignore {","lastModifiedDate":"2023-02-17"},{"lineNumber":162,"author":{"gitId":"jared-ee"},"content":"        int slash \u003d line.indexOf(\"/\");","lastModifiedDate":"2023-02-17"},{"lineNumber":163,"author":{"gitId":"jared-ee"},"content":"        String description \u003d line.substring(8, slash-1);","lastModifiedDate":"2023-02-17"},{"lineNumber":164,"author":{"gitId":"jared-ee"},"content":"        if (description.isBlank()) {","lastModifiedDate":"2023-02-17"},{"lineNumber":165,"author":{"gitId":"jared-ee"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-17"},{"lineNumber":166,"author":{"gitId":"jared-ee"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":167,"author":{"gitId":"jared-ee"},"content":"        String by \u003d line.substring(slash+4);","lastModifiedDate":"2023-02-17"},{"lineNumber":168,"author":{"gitId":"jared-ee"},"content":"        try {","lastModifiedDate":"2023-02-17"},{"lineNumber":169,"author":{"gitId":"jared-ee"},"content":"            DateTime(dates_and_times, by, formatter);","lastModifiedDate":"2023-02-17"},{"lineNumber":170,"author":{"gitId":"jared-ee"},"content":"            tasks.add(description);","lastModifiedDate":"2023-02-17"},{"lineNumber":171,"author":{"gitId":"jared-ee"},"content":"            type.add(\"[D]\");","lastModifiedDate":"2023-02-17"},{"lineNumber":172,"author":{"gitId":"jared-ee"},"content":"            done.add(\"[ ]\");","lastModifiedDate":"2023-02-17"},{"lineNumber":173,"author":{"gitId":"jared-ee"},"content":"            DateTime(dates_and_times, \"2015-10-23T03:34\", formatter);","lastModifiedDate":"2023-02-17"},{"lineNumber":174,"author":{"gitId":"jared-ee"},"content":"        } catch (DateTimeParseException | NumberFormatException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":175,"author":{"gitId":"jared-ee"},"content":"            System.out.println(\"Oops! You\u0027ve entered an invalid date/time.\");","lastModifiedDate":"2023-02-17"},{"lineNumber":176,"author":{"gitId":"jared-ee"},"content":"            System.out.println(\"Date format-\u003e YYYY-MM-DD or DD-MM-YYYY or MM-DD-YYYY\");","lastModifiedDate":"2023-02-17"},{"lineNumber":177,"author":{"gitId":"jared-ee"},"content":"            System.out.println(\"Time format-\u003e 18:00 or 06:00 PM\");","lastModifiedDate":"2023-02-17"},{"lineNumber":178,"author":{"gitId":"jared-ee"},"content":"            System.out.println(\"Example: 2015-10-23 03:34\");","lastModifiedDate":"2023-02-17"},{"lineNumber":179,"author":{"gitId":"jared-ee"},"content":"            throw new Ignore();","lastModifiedDate":"2023-02-17"},{"lineNumber":180,"author":{"gitId":"jared-ee"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":181,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":182,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":183,"author":{"gitId":"jared-ee"},"content":"    public static void event(ArrayList\u003cLocalDateTime\u003e dates_and_times, DateTimeFormatter formatter, String line, ArrayList\u003cString\u003e tasks, ArrayList\u003cString\u003e done, ArrayList\u003cString\u003e type) throws DukeException, Ignore {","lastModifiedDate":"2023-02-17"},{"lineNumber":184,"author":{"gitId":"jared-ee"},"content":"        int slash1 \u003d line.indexOf(\"/\");","lastModifiedDate":"2023-02-17"},{"lineNumber":185,"author":{"gitId":"jared-ee"},"content":"        int slash2 \u003d line.indexOf(\"/\", slash1+1);","lastModifiedDate":"2023-02-17"},{"lineNumber":186,"author":{"gitId":"jared-ee"},"content":"        String description \u003d line.substring(5, slash1-1);","lastModifiedDate":"2023-02-17"},{"lineNumber":187,"author":{"gitId":"jared-ee"},"content":"        if (description.isBlank()) {","lastModifiedDate":"2023-02-17"},{"lineNumber":188,"author":{"gitId":"jared-ee"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-17"},{"lineNumber":189,"author":{"gitId":"jared-ee"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":190,"author":{"gitId":"jared-ee"},"content":"        String from \u003d line.substring(slash1+6, slash2-1);","lastModifiedDate":"2023-02-17"},{"lineNumber":191,"author":{"gitId":"jared-ee"},"content":"        String to \u003d line.substring(slash2+4);","lastModifiedDate":"2023-02-17"},{"lineNumber":192,"author":{"gitId":"jared-ee"},"content":"        try {","lastModifiedDate":"2023-02-17"},{"lineNumber":193,"author":{"gitId":"jared-ee"},"content":"            DateTime(dates_and_times, from, formatter);","lastModifiedDate":"2023-02-17"},{"lineNumber":194,"author":{"gitId":"jared-ee"},"content":"            DateTime(dates_and_times, to, formatter);","lastModifiedDate":"2023-02-17"},{"lineNumber":195,"author":{"gitId":"jared-ee"},"content":"            tasks.add(description);","lastModifiedDate":"2023-02-17"},{"lineNumber":196,"author":{"gitId":"jared-ee"},"content":"            type.add(\"[E]\");","lastModifiedDate":"2023-02-17"},{"lineNumber":197,"author":{"gitId":"jared-ee"},"content":"            done.add(\"[ ]\");","lastModifiedDate":"2023-02-17"},{"lineNumber":198,"author":{"gitId":"jared-ee"},"content":"        } catch (DateTimeParseException | NumberFormatException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":199,"author":{"gitId":"jared-ee"},"content":"            System.out.println(\"Oops! You\u0027ve entered an invalid date/time.\");","lastModifiedDate":"2023-02-17"},{"lineNumber":200,"author":{"gitId":"jared-ee"},"content":"            System.out.println(\"Date format-\u003e YYYY-MM-DD or DD-MM-YYYY or MM-DD-YYYY\");","lastModifiedDate":"2023-02-17"},{"lineNumber":201,"author":{"gitId":"jared-ee"},"content":"            System.out.println(\"Time format-\u003e 18:00 or 06:00 PM\");","lastModifiedDate":"2023-02-17"},{"lineNumber":202,"author":{"gitId":"jared-ee"},"content":"            System.out.println(\"Example: 2015-10-23 03:34\");","lastModifiedDate":"2023-02-17"},{"lineNumber":203,"author":{"gitId":"jared-ee"},"content":"            System.out.println(\"If time is left out, I\u0027ll assume it to be 00:00.\");","lastModifiedDate":"2023-02-17"},{"lineNumber":204,"author":{"gitId":"jared-ee"},"content":"            System.out.println(\"If date is left out, I\u0027ll assume it to be today.\");","lastModifiedDate":"2023-02-17"},{"lineNumber":205,"author":{"gitId":"jared-ee"},"content":"            throw new  Ignore();","lastModifiedDate":"2023-02-17"},{"lineNumber":206,"author":{"gitId":"jared-ee"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":207,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":208,"author":{"gitId":"jared-ee"},"content":"    public static void main(String[] args){","lastModifiedDate":"2023-02-17"},{"lineNumber":209,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");","lastModifiedDate":"2023-02-17"},{"lineNumber":210,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-02-17"},{"lineNumber":211,"author":{"gitId":"jared-ee"},"content":"        String filePath \u003d \"Duke.txt\";","lastModifiedDate":"2023-02-17"},{"lineNumber":212,"author":{"gitId":"jared-ee"},"content":"        String line;","lastModifiedDate":"2023-02-17"},{"lineNumber":213,"author":{"gitId":"jared-ee"},"content":"        ArrayList\u003cString\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-17"},{"lineNumber":214,"author":{"gitId":"jared-ee"},"content":"        ArrayList\u003cString\u003e done \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-17"},{"lineNumber":215,"author":{"gitId":"jared-ee"},"content":"        ArrayList\u003cString\u003e type \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-17"},{"lineNumber":216,"author":{"gitId":"jared-ee"},"content":"        ArrayList\u003cLocalDateTime\u003e dates_and_times \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-17"},{"lineNumber":217,"author":{"gitId":"jared-ee"},"content":"        ArrayList\u003cString\u003e filecontents \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-17"},{"lineNumber":218,"author":{"gitId":"jared-ee"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\u0027T\u0027HH:mm\");","lastModifiedDate":"2023-02-17"},{"lineNumber":219,"author":{"gitId":"jared-ee"},"content":"        int i \u003d 0;","lastModifiedDate":"2023-02-17"},{"lineNumber":220,"author":{"gitId":"jared-ee"},"content":"        try {","lastModifiedDate":"2023-02-17"},{"lineNumber":221,"author":{"gitId":"jared-ee"},"content":"            readFileContents(filecontents, filePath, i, dates_and_times, formatter, tasks, done, type);","lastModifiedDate":"2023-02-17"},{"lineNumber":222,"author":{"gitId":"jared-ee"},"content":"            i \u003d tasks.size();","lastModifiedDate":"2023-02-17"},{"lineNumber":223,"author":{"gitId":"jared-ee"},"content":"        } catch (FileNotFoundException | DukeException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":224,"author":{"gitId":"jared-ee"},"content":"            i \u003d 0;","lastModifiedDate":"2023-02-17"},{"lineNumber":225,"author":{"gitId":"jared-ee"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":226,"author":{"gitId":"jared-ee"},"content":"        while (true) {","lastModifiedDate":"2023-02-17"},{"lineNumber":227,"author":{"gitId":"jared-ee"},"content":"            Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-17"},{"lineNumber":228,"author":{"gitId":"jared-ee"},"content":"            line \u003d in.nextLine();","lastModifiedDate":"2023-02-17"},{"lineNumber":229,"author":{"gitId":"jared-ee"},"content":"            if (line.startsWith(\"bye\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":230,"author":{"gitId":"jared-ee"},"content":"                String toFile \u003d \"\";","lastModifiedDate":"2023-02-17"},{"lineNumber":231,"author":{"gitId":"jared-ee"},"content":"                for (String filecontent : filecontents) {","lastModifiedDate":"2023-02-17"},{"lineNumber":232,"author":{"gitId":"jared-ee"},"content":"                    toFile \u003d toFile + filecontent + System.lineSeparator();","lastModifiedDate":"2023-02-17"},{"lineNumber":233,"author":{"gitId":"jared-ee"},"content":"                }","lastModifiedDate":"2023-02-17"},{"lineNumber":234,"author":{"gitId":"jared-ee"},"content":"                try {","lastModifiedDate":"2023-02-17"},{"lineNumber":235,"author":{"gitId":"jared-ee"},"content":"                    writeToFile(filePath, toFile);","lastModifiedDate":"2023-02-17"},{"lineNumber":236,"author":{"gitId":"jared-ee"},"content":"                    break;","lastModifiedDate":"2023-02-17"},{"lineNumber":237,"author":{"gitId":"jared-ee"},"content":"                } catch (IOException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":238,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2023-02-17"},{"lineNumber":239,"author":{"gitId":"jared-ee"},"content":"                }","lastModifiedDate":"2023-02-17"},{"lineNumber":240,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":241,"author":{"gitId":"jared-ee"},"content":"            if (line.startsWith(\"list\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":242,"author":{"gitId":"jared-ee"},"content":"                System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-02-17"},{"lineNumber":243,"author":{"gitId":"jared-ee"},"content":"                for (int j \u003d 0; j \u003c i; j++) {","lastModifiedDate":"2023-02-17"},{"lineNumber":244,"author":{"gitId":"jared-ee"},"content":"                    try {","lastModifiedDate":"2023-02-17"},{"lineNumber":245,"author":{"gitId":"jared-ee"},"content":"                        System.out.print((j + 1) + \".\" + type.get(j) + done.get(j) + tasks.get(j));","lastModifiedDate":"2023-02-17"},{"lineNumber":246,"author":{"gitId":"jared-ee"},"content":"                        if ((type.get(j)).equals(\"[T]\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":247,"author":{"gitId":"jared-ee"},"content":"                            System.out.println(\"\");","lastModifiedDate":"2023-02-17"},{"lineNumber":248,"author":{"gitId":"jared-ee"},"content":"                        }","lastModifiedDate":"2023-02-17"},{"lineNumber":249,"author":{"gitId":"jared-ee"},"content":"                        if ((type.get(j)).equals(\"[D]\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":250,"author":{"gitId":"jared-ee"},"content":"                            System.out.println(\" (by: \" +","lastModifiedDate":"2023-02-17"},{"lineNumber":251,"author":{"gitId":"jared-ee"},"content":"                                    DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm a\").format(dates_and_times.get(2*j)) + \")\");","lastModifiedDate":"2023-02-17"},{"lineNumber":252,"author":{"gitId":"jared-ee"},"content":"                        }","lastModifiedDate":"2023-02-17"},{"lineNumber":253,"author":{"gitId":"jared-ee"},"content":"                        if ((type.get(j)).equals(\"[E]\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":254,"author":{"gitId":"jared-ee"},"content":"                            System.out.print(\" (from \" +","lastModifiedDate":"2023-02-17"},{"lineNumber":255,"author":{"gitId":"jared-ee"},"content":"                                    DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm a\").format(dates_and_times.get(2*j)) + \" to: \");","lastModifiedDate":"2023-02-17"},{"lineNumber":256,"author":{"gitId":"jared-ee"},"content":"                            System.out.println(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm a\").format(dates_and_times.get(2*j+1)) + \")\");","lastModifiedDate":"2023-02-17"},{"lineNumber":257,"author":{"gitId":"jared-ee"},"content":"                        }","lastModifiedDate":"2023-02-17"},{"lineNumber":258,"author":{"gitId":"jared-ee"},"content":"                    } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":259,"author":{"gitId":"jared-ee"},"content":"                        j++;","lastModifiedDate":"2023-02-17"},{"lineNumber":260,"author":{"gitId":"jared-ee"},"content":"                    }","lastModifiedDate":"2023-02-17"},{"lineNumber":261,"author":{"gitId":"jared-ee"},"content":"                }","lastModifiedDate":"2023-02-17"},{"lineNumber":262,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":263,"author":{"gitId":"jared-ee"},"content":"            else if (line.startsWith(\"mark\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":264,"author":{"gitId":"jared-ee"},"content":"                try {","lastModifiedDate":"2023-02-17"},{"lineNumber":265,"author":{"gitId":"jared-ee"},"content":"                    mark(i, line, done);","lastModifiedDate":"2023-02-17"},{"lineNumber":266,"author":{"gitId":"jared-ee"},"content":"                    int number \u003d Integer.parseInt(line.substring(5));","lastModifiedDate":"2023-02-17"},{"lineNumber":267,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-02-17"},{"lineNumber":268,"author":{"gitId":"jared-ee"},"content":"                    System.out.print(\"  \" + type.get(number - 1) + \"[X]\" + tasks.get(number - 1) + \" \");","lastModifiedDate":"2023-02-17"},{"lineNumber":269,"author":{"gitId":"jared-ee"},"content":"                    if ((type.get(number-1)).equals(\"[T]\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":270,"author":{"gitId":"jared-ee"},"content":"                        System.out.println(\"\");","lastModifiedDate":"2023-02-17"},{"lineNumber":271,"author":{"gitId":"jared-ee"},"content":"                    }","lastModifiedDate":"2023-02-17"},{"lineNumber":272,"author":{"gitId":"jared-ee"},"content":"                    if ((type.get(number-1)).equals(\"[D]\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":273,"author":{"gitId":"jared-ee"},"content":"                        System.out.println(\"(by: \" + DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm a\").format(dates_and_times.get(2*(number-1))) + \")\");","lastModifiedDate":"2023-02-17"},{"lineNumber":274,"author":{"gitId":"jared-ee"},"content":"                    }","lastModifiedDate":"2023-02-17"},{"lineNumber":275,"author":{"gitId":"jared-ee"},"content":"                    if ((type.get(number-1)).equals(\"[E]\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":276,"author":{"gitId":"jared-ee"},"content":"                        System.out.print(\"(from \" + DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm a\").format(dates_and_times.get(2*(number-1))) + \" to: \");","lastModifiedDate":"2023-02-17"},{"lineNumber":277,"author":{"gitId":"jared-ee"},"content":"                        System.out.println(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm a\").format(dates_and_times.get(2*(number-1)+1)) + \")\");","lastModifiedDate":"2023-02-17"},{"lineNumber":278,"author":{"gitId":"jared-ee"},"content":"                    }","lastModifiedDate":"2023-02-17"},{"lineNumber":279,"author":{"gitId":"jared-ee"},"content":"                    filecontents.add(line);","lastModifiedDate":"2023-02-17"},{"lineNumber":280,"author":{"gitId":"jared-ee"},"content":"                } catch (NumberFormatException | IndexOutOfBoundsException | DukeException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":281,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Oops! That isn\u0027t a task in your list.\");","lastModifiedDate":"2023-02-17"},{"lineNumber":282,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Please input only one integer after \u0027mark\u0027, separated by a single whitespace.\");","lastModifiedDate":"2023-02-17"},{"lineNumber":283,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"There are \" + i + \" tasks in your list, so do not input an integer \" +","lastModifiedDate":"2023-02-17"},{"lineNumber":284,"author":{"gitId":"jared-ee"},"content":"                            \"smaller than 1 or larger than \" + i + \".\");","lastModifiedDate":"2023-02-17"},{"lineNumber":285,"author":{"gitId":"jared-ee"},"content":"                }","lastModifiedDate":"2023-02-17"},{"lineNumber":286,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":287,"author":{"gitId":"jared-ee"},"content":"            else if (line.startsWith(\"unmark\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":288,"author":{"gitId":"jared-ee"},"content":"                try {","lastModifiedDate":"2023-02-17"},{"lineNumber":289,"author":{"gitId":"jared-ee"},"content":"                    unmark(i, line, done);","lastModifiedDate":"2023-02-17"},{"lineNumber":290,"author":{"gitId":"jared-ee"},"content":"                    int number \u003d Integer.parseInt(line.substring(7));","lastModifiedDate":"2023-02-17"},{"lineNumber":291,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Ok, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-02-17"},{"lineNumber":292,"author":{"gitId":"jared-ee"},"content":"                    System.out.print(\"  \" + type.get(number - 1) + \"[ ]\" + tasks.get(number - 1) + \" \");","lastModifiedDate":"2023-02-17"},{"lineNumber":293,"author":{"gitId":"jared-ee"},"content":"                    if ((type.get(number-1)).equals(\"[T]\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":294,"author":{"gitId":"jared-ee"},"content":"                        System.out.println(\"\");","lastModifiedDate":"2023-02-17"},{"lineNumber":295,"author":{"gitId":"jared-ee"},"content":"                    }","lastModifiedDate":"2023-02-17"},{"lineNumber":296,"author":{"gitId":"jared-ee"},"content":"                    if ((type.get(number-1)).equals(\"[D]\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":297,"author":{"gitId":"jared-ee"},"content":"                        System.out.println(\"(by: \" + DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm a\").format(dates_and_times.get(2*(number-1))) + \")\");","lastModifiedDate":"2023-02-17"},{"lineNumber":298,"author":{"gitId":"jared-ee"},"content":"                    }","lastModifiedDate":"2023-02-17"},{"lineNumber":299,"author":{"gitId":"jared-ee"},"content":"                    if ((type.get(number-1)).equals(\"[E]\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":300,"author":{"gitId":"jared-ee"},"content":"                        System.out.print(\"(from \" + DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm a\").format(dates_and_times.get(2*(number-1))) + \" to: \");","lastModifiedDate":"2023-02-17"},{"lineNumber":301,"author":{"gitId":"jared-ee"},"content":"                        System.out.println(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm a\").format(dates_and_times.get(2*(number-1)+1)) + \")\");","lastModifiedDate":"2023-02-17"},{"lineNumber":302,"author":{"gitId":"jared-ee"},"content":"                    }","lastModifiedDate":"2023-02-17"},{"lineNumber":303,"author":{"gitId":"jared-ee"},"content":"                    filecontents.add(line);","lastModifiedDate":"2023-02-17"},{"lineNumber":304,"author":{"gitId":"jared-ee"},"content":"                } catch (NumberFormatException | IndexOutOfBoundsException | DukeException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":305,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Oops! That isn\u0027t a task in your list.\");","lastModifiedDate":"2023-02-17"},{"lineNumber":306,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Please input only one integer after \u0027mark\u0027, separated by a single whitespace.\");","lastModifiedDate":"2023-02-17"},{"lineNumber":307,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"There are \" + i + \" tasks in your list, so do not input an integer \" +","lastModifiedDate":"2023-02-17"},{"lineNumber":308,"author":{"gitId":"jared-ee"},"content":"                            \"smaller than 1 or larger than \" + i + \".\");","lastModifiedDate":"2023-02-17"},{"lineNumber":309,"author":{"gitId":"jared-ee"},"content":"                }","lastModifiedDate":"2023-02-17"},{"lineNumber":310,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":311,"author":{"gitId":"jared-ee"},"content":"            else if (line.startsWith(\"todo\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":312,"author":{"gitId":"jared-ee"},"content":"                try {","lastModifiedDate":"2023-02-17"},{"lineNumber":313,"author":{"gitId":"jared-ee"},"content":"                    todo(dates_and_times, formatter, line, tasks, done, type);","lastModifiedDate":"2023-02-17"},{"lineNumber":314,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-02-17"},{"lineNumber":315,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"  \" + type.get(i) + \"[ ]\" + tasks.get(i));","lastModifiedDate":"2023-02-17"},{"lineNumber":316,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Now you have \" + (i + 1) + \" tasks in the list.\");","lastModifiedDate":"2023-02-17"},{"lineNumber":317,"author":{"gitId":"jared-ee"},"content":"                    filecontents.add(line);","lastModifiedDate":"2023-02-17"},{"lineNumber":318,"author":{"gitId":"jared-ee"},"content":"                    i++;","lastModifiedDate":"2023-02-17"},{"lineNumber":319,"author":{"gitId":"jared-ee"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":320,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Oops! The description of a todo cannot be left empty.\");","lastModifiedDate":"2023-02-17"},{"lineNumber":321,"author":{"gitId":"jared-ee"},"content":"                }","lastModifiedDate":"2023-02-17"},{"lineNumber":322,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":323,"author":{"gitId":"jared-ee"},"content":"            else if (line.startsWith(\"deadline\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":324,"author":{"gitId":"jared-ee"},"content":"                try {","lastModifiedDate":"2023-02-17"},{"lineNumber":325,"author":{"gitId":"jared-ee"},"content":"                    deadline(dates_and_times, formatter, line, tasks, done, type);","lastModifiedDate":"2023-02-17"},{"lineNumber":326,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-02-17"},{"lineNumber":327,"author":{"gitId":"jared-ee"},"content":"                    System.out.print(\"  \" + type.get(i) + \"[ ]\" + tasks.get(i) + \" (by: \");","lastModifiedDate":"2023-02-17"},{"lineNumber":328,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm a\").format(dates_and_times.get(2*i)) + \")\");","lastModifiedDate":"2023-02-17"},{"lineNumber":329,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Now you have \" + (i + 1) + \" tasks in the list.\");","lastModifiedDate":"2023-02-17"},{"lineNumber":330,"author":{"gitId":"jared-ee"},"content":"                    filecontents.add(line);","lastModifiedDate":"2023-02-17"},{"lineNumber":331,"author":{"gitId":"jared-ee"},"content":"                    i++;","lastModifiedDate":"2023-02-17"},{"lineNumber":332,"author":{"gitId":"jared-ee"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":333,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Invalid format. When specifying deadline, please follow the format below:\");","lastModifiedDate":"2023-02-17"},{"lineNumber":334,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"deadline (task) /by (deadline)\");","lastModifiedDate":"2023-02-17"},{"lineNumber":335,"author":{"gitId":"jared-ee"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":336,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"You might have left the description empty.\");","lastModifiedDate":"2023-02-17"},{"lineNumber":337,"author":{"gitId":"jared-ee"},"content":"                } catch (Ignore e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":338,"author":{"gitId":"jared-ee"},"content":"                    System.out.print(\"\");","lastModifiedDate":"2023-02-17"},{"lineNumber":339,"author":{"gitId":"jared-ee"},"content":"                }","lastModifiedDate":"2023-02-17"},{"lineNumber":340,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":341,"author":{"gitId":"jared-ee"},"content":"            else if (line.startsWith(\"event\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":342,"author":{"gitId":"jared-ee"},"content":"                try {","lastModifiedDate":"2023-02-17"},{"lineNumber":343,"author":{"gitId":"jared-ee"},"content":"                    event(dates_and_times, formatter, line, tasks, done, type);","lastModifiedDate":"2023-02-17"},{"lineNumber":344,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-02-17"},{"lineNumber":345,"author":{"gitId":"jared-ee"},"content":"                    System.out.print(\"  \" + type.get(i) + \"[ ]\" + tasks.get(i) + \" (from: \");","lastModifiedDate":"2023-02-17"},{"lineNumber":346,"author":{"gitId":"jared-ee"},"content":"                    System.out.print(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm a\").format(dates_and_times.get(2*i)) + \" to: \");","lastModifiedDate":"2023-02-17"},{"lineNumber":347,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm a\").format(dates_and_times.get(2*i+1)) + \")\");","lastModifiedDate":"2023-02-17"},{"lineNumber":348,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Now you have \" + (i + 1) + \" tasks in the list.\");","lastModifiedDate":"2023-02-17"},{"lineNumber":349,"author":{"gitId":"jared-ee"},"content":"                    filecontents.add(line);","lastModifiedDate":"2023-02-17"},{"lineNumber":350,"author":{"gitId":"jared-ee"},"content":"                    i++;","lastModifiedDate":"2023-02-17"},{"lineNumber":351,"author":{"gitId":"jared-ee"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":352,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Invalid format. When specifying timeframe, please follow the format below:\");","lastModifiedDate":"2023-02-17"},{"lineNumber":353,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"event (task) /from (starting time) /to (ending time)\");","lastModifiedDate":"2023-02-17"},{"lineNumber":354,"author":{"gitId":"jared-ee"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":355,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"You might have left the description empty.\");","lastModifiedDate":"2023-02-17"},{"lineNumber":356,"author":{"gitId":"jared-ee"},"content":"                } catch (Ignore e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":357,"author":{"gitId":"jared-ee"},"content":"                    System.out.print(\"\");","lastModifiedDate":"2023-02-17"},{"lineNumber":358,"author":{"gitId":"jared-ee"},"content":"                }","lastModifiedDate":"2023-02-17"},{"lineNumber":359,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":360,"author":{"gitId":"jared-ee"},"content":"            else if (line.startsWith(\"delete\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":361,"author":{"gitId":"jared-ee"},"content":"                try {","lastModifiedDate":"2023-02-17"},{"lineNumber":362,"author":{"gitId":"jared-ee"},"content":"                    delete(dates_and_times, i, line, tasks, done, type);","lastModifiedDate":"2023-02-17"},{"lineNumber":363,"author":{"gitId":"jared-ee"},"content":"                    int number \u003d Integer.parseInt(line.substring(7));","lastModifiedDate":"2023-02-17"},{"lineNumber":364,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-02-17"},{"lineNumber":365,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"  \" + type.get(number - 1) + done.get(number - 1) + tasks.get(number - 1));","lastModifiedDate":"2023-02-17"},{"lineNumber":366,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Now you have \" + (i - 1) + \" tasks in the list.\");","lastModifiedDate":"2023-02-17"},{"lineNumber":367,"author":{"gitId":"jared-ee"},"content":"                    filecontents.add(line);","lastModifiedDate":"2023-02-17"},{"lineNumber":368,"author":{"gitId":"jared-ee"},"content":"                    i--;","lastModifiedDate":"2023-02-17"},{"lineNumber":369,"author":{"gitId":"jared-ee"},"content":"                } catch (NumberFormatException | IndexOutOfBoundsException | DukeException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":370,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Oops! That isn\u0027t a task in your list.\");","lastModifiedDate":"2023-02-17"},{"lineNumber":371,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Please input only one integer after \u0027delete\u0027, separated by a single whitespace.\");","lastModifiedDate":"2023-02-17"},{"lineNumber":372,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"There are \" + i + \" tasks in your list, so do not input an integer \" +","lastModifiedDate":"2023-02-17"},{"lineNumber":373,"author":{"gitId":"jared-ee"},"content":"                            \"smaller than 1 or larger than \" + i + \".\");","lastModifiedDate":"2023-02-17"},{"lineNumber":374,"author":{"gitId":"jared-ee"},"content":"                }","lastModifiedDate":"2023-02-17"},{"lineNumber":375,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":376,"author":{"gitId":"jared-ee"},"content":"            else if (line.startsWith(\"find\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":377,"author":{"gitId":"jared-ee"},"content":"                if (line.equals(\"find\") || (line.substring(5)).isBlank()) {","lastModifiedDate":"2023-02-17"},{"lineNumber":378,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Oops! The description cannot be left empty.\");","lastModifiedDate":"2023-02-17"},{"lineNumber":379,"author":{"gitId":"jared-ee"},"content":"                }","lastModifiedDate":"2023-02-17"},{"lineNumber":380,"author":{"gitId":"jared-ee"},"content":"                else {","lastModifiedDate":"2023-02-17"},{"lineNumber":381,"author":{"gitId":"jared-ee"},"content":"                    String find \u003d line.substring(5);","lastModifiedDate":"2023-02-17"},{"lineNumber":382,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-02-17"},{"lineNumber":383,"author":{"gitId":"jared-ee"},"content":"                    int b \u003d 1;","lastModifiedDate":"2023-02-17"},{"lineNumber":384,"author":{"gitId":"jared-ee"},"content":"                    for (int j \u003d 0; j \u003c tasks.size(); j++) {","lastModifiedDate":"2023-02-17"},{"lineNumber":385,"author":{"gitId":"jared-ee"},"content":"                        String task \u003d tasks.get(j);","lastModifiedDate":"2023-02-17"},{"lineNumber":386,"author":{"gitId":"jared-ee"},"content":"                        if (task.contains(find)) {","lastModifiedDate":"2023-02-17"},{"lineNumber":387,"author":{"gitId":"jared-ee"},"content":"                            try {","lastModifiedDate":"2023-02-17"},{"lineNumber":388,"author":{"gitId":"jared-ee"},"content":"                                System.out.print(b + \".\" + type.get(j) + done.get(j) + tasks.get(j));","lastModifiedDate":"2023-02-17"},{"lineNumber":389,"author":{"gitId":"jared-ee"},"content":"                                if ((type.get(j)).equals(\"[T]\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":390,"author":{"gitId":"jared-ee"},"content":"                                    System.out.println(\"\");","lastModifiedDate":"2023-02-17"},{"lineNumber":391,"author":{"gitId":"jared-ee"},"content":"                                }","lastModifiedDate":"2023-02-17"},{"lineNumber":392,"author":{"gitId":"jared-ee"},"content":"                                if ((type.get(j)).equals(\"[D]\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":393,"author":{"gitId":"jared-ee"},"content":"                                    System.out.println(\" (by: \" +","lastModifiedDate":"2023-02-17"},{"lineNumber":394,"author":{"gitId":"jared-ee"},"content":"                                            DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm a\").format(dates_and_times.get(2 * j)) + \")\");","lastModifiedDate":"2023-02-17"},{"lineNumber":395,"author":{"gitId":"jared-ee"},"content":"                                }","lastModifiedDate":"2023-02-17"},{"lineNumber":396,"author":{"gitId":"jared-ee"},"content":"                                if ((type.get(j)).equals(\"[E]\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":397,"author":{"gitId":"jared-ee"},"content":"                                    System.out.print(\" (from \" +","lastModifiedDate":"2023-02-17"},{"lineNumber":398,"author":{"gitId":"jared-ee"},"content":"                                            DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm a\").format(dates_and_times.get(2 * j)) + \" to: \");","lastModifiedDate":"2023-02-17"},{"lineNumber":399,"author":{"gitId":"jared-ee"},"content":"                                    System.out.println(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm a\").format(dates_and_times.get(2 * j + 1)) + \")\");","lastModifiedDate":"2023-02-17"},{"lineNumber":400,"author":{"gitId":"jared-ee"},"content":"                                }","lastModifiedDate":"2023-02-17"},{"lineNumber":401,"author":{"gitId":"jared-ee"},"content":"                                b++;","lastModifiedDate":"2023-02-17"},{"lineNumber":402,"author":{"gitId":"jared-ee"},"content":"                            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":403,"author":{"gitId":"jared-ee"},"content":"                                j++;","lastModifiedDate":"2023-02-17"},{"lineNumber":404,"author":{"gitId":"jared-ee"},"content":"                            }","lastModifiedDate":"2023-02-17"},{"lineNumber":405,"author":{"gitId":"jared-ee"},"content":"                        }","lastModifiedDate":"2023-02-17"},{"lineNumber":406,"author":{"gitId":"jared-ee"},"content":"                    }","lastModifiedDate":"2023-02-17"},{"lineNumber":407,"author":{"gitId":"jared-ee"},"content":"                }","lastModifiedDate":"2023-02-17"},{"lineNumber":408,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":409,"author":{"gitId":"jared-ee"},"content":"            else if (line.startsWith(\"dated\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":410,"author":{"gitId":"jared-ee"},"content":"                if (line.equals(\"dated\") || (line.substring(5)).isBlank()) {","lastModifiedDate":"2023-02-17"},{"lineNumber":411,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Oops! The description cannot be left empty.\");","lastModifiedDate":"2023-02-17"},{"lineNumber":412,"author":{"gitId":"jared-ee"},"content":"                }","lastModifiedDate":"2023-02-17"},{"lineNumber":413,"author":{"gitId":"jared-ee"},"content":"                else {","lastModifiedDate":"2023-02-17"},{"lineNumber":414,"author":{"gitId":"jared-ee"},"content":"                    String description \u003d line.substring(6);","lastModifiedDate":"2023-02-17"},{"lineNumber":415,"author":{"gitId":"jared-ee"},"content":"                    try {","lastModifiedDate":"2023-02-17"},{"lineNumber":416,"author":{"gitId":"jared-ee"},"content":"                        String datetimestr \u003d DT(description);","lastModifiedDate":"2023-02-17"},{"lineNumber":417,"author":{"gitId":"jared-ee"},"content":"                        LocalDateTime datetime \u003d LocalDateTime.parse(datetimestr, formatter);","lastModifiedDate":"2023-02-17"},{"lineNumber":418,"author":{"gitId":"jared-ee"},"content":"                        System.out.println(\"Tasks during this time period:\");","lastModifiedDate":"2023-02-17"},{"lineNumber":419,"author":{"gitId":"jared-ee"},"content":"                        int b \u003d 1;","lastModifiedDate":"2023-02-17"},{"lineNumber":420,"author":{"gitId":"jared-ee"},"content":"                        for (int j \u003d 0; j \u003c tasks.size(); j++) {","lastModifiedDate":"2023-02-17"},{"lineNumber":421,"author":{"gitId":"jared-ee"},"content":"                            LocalDateTime dt \u003d dates_and_times.get(j*2);","lastModifiedDate":"2023-02-17"},{"lineNumber":422,"author":{"gitId":"jared-ee"},"content":"                            if (dt.equals(datetime)) {","lastModifiedDate":"2023-02-17"},{"lineNumber":423,"author":{"gitId":"jared-ee"},"content":"                                try {","lastModifiedDate":"2023-02-17"},{"lineNumber":424,"author":{"gitId":"jared-ee"},"content":"                                    System.out.print(b + \".\" + type.get(j) + done.get(j) + tasks.get(j));","lastModifiedDate":"2023-02-17"},{"lineNumber":425,"author":{"gitId":"jared-ee"},"content":"                                    if ((type.get(j)).equals(\"[T]\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":426,"author":{"gitId":"jared-ee"},"content":"                                        System.out.println(\"\");","lastModifiedDate":"2023-02-17"},{"lineNumber":427,"author":{"gitId":"jared-ee"},"content":"                                    }","lastModifiedDate":"2023-02-17"},{"lineNumber":428,"author":{"gitId":"jared-ee"},"content":"                                    if ((type.get(j)).equals(\"[D]\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":429,"author":{"gitId":"jared-ee"},"content":"                                        System.out.println(\" (by: \" +","lastModifiedDate":"2023-02-17"},{"lineNumber":430,"author":{"gitId":"jared-ee"},"content":"                                                DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm a\").format(dates_and_times.get(2*j)) + \")\");","lastModifiedDate":"2023-02-17"},{"lineNumber":431,"author":{"gitId":"jared-ee"},"content":"                                    }","lastModifiedDate":"2023-02-17"},{"lineNumber":432,"author":{"gitId":"jared-ee"},"content":"                                    if ((type.get(j)).equals(\"[E]\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":433,"author":{"gitId":"jared-ee"},"content":"                                        System.out.print(\" (from \" +","lastModifiedDate":"2023-02-17"},{"lineNumber":434,"author":{"gitId":"jared-ee"},"content":"                                                DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm a\").format(dates_and_times.get(2*j)) + \" to: \");","lastModifiedDate":"2023-02-17"},{"lineNumber":435,"author":{"gitId":"jared-ee"},"content":"                                        System.out.println(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm a\").format(dates_and_times.get(2*j+1)) + \")\");","lastModifiedDate":"2023-02-17"},{"lineNumber":436,"author":{"gitId":"jared-ee"},"content":"                                    }","lastModifiedDate":"2023-02-17"},{"lineNumber":437,"author":{"gitId":"jared-ee"},"content":"                                    b++;","lastModifiedDate":"2023-02-17"},{"lineNumber":438,"author":{"gitId":"jared-ee"},"content":"                                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":439,"author":{"gitId":"jared-ee"},"content":"                                    j++;","lastModifiedDate":"2023-02-17"},{"lineNumber":440,"author":{"gitId":"jared-ee"},"content":"                                }","lastModifiedDate":"2023-02-17"},{"lineNumber":441,"author":{"gitId":"jared-ee"},"content":"                            }","lastModifiedDate":"2023-02-17"},{"lineNumber":442,"author":{"gitId":"jared-ee"},"content":"                        }","lastModifiedDate":"2023-02-17"},{"lineNumber":443,"author":{"gitId":"jared-ee"},"content":"                    } catch (DateTimeParseException | NumberFormatException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":444,"author":{"gitId":"jared-ee"},"content":"                        System.out.println(\"Oops! You\u0027ve entered an invalid date/time.\");","lastModifiedDate":"2023-02-17"},{"lineNumber":445,"author":{"gitId":"jared-ee"},"content":"                        System.out.println(\"Date format-\u003e YYYY-MM-DD or DD-MM-YYYY or MM-DD-YYYY\");","lastModifiedDate":"2023-02-17"},{"lineNumber":446,"author":{"gitId":"jared-ee"},"content":"                        System.out.println(\"Time format-\u003e 18:00 or 06:00 PM\");","lastModifiedDate":"2023-02-17"},{"lineNumber":447,"author":{"gitId":"jared-ee"},"content":"                        System.out.println(\"Example: 2015-10-23 03:34\");","lastModifiedDate":"2023-02-17"},{"lineNumber":448,"author":{"gitId":"jared-ee"},"content":"                        System.out.println(\"If time is left out, I\u0027ll assume it to be 00:00.\");","lastModifiedDate":"2023-02-17"},{"lineNumber":449,"author":{"gitId":"jared-ee"},"content":"                        System.out.println(\"If date is left out, I\u0027ll assume it to be today.\");","lastModifiedDate":"2023-02-17"},{"lineNumber":450,"author":{"gitId":"jared-ee"},"content":"                    }","lastModifiedDate":"2023-02-17"},{"lineNumber":451,"author":{"gitId":"jared-ee"},"content":"                }","lastModifiedDate":"2023-02-17"},{"lineNumber":452,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":453,"author":{"gitId":"jared-ee"},"content":"            else {","lastModifiedDate":"2023-02-17"},{"lineNumber":454,"author":{"gitId":"jared-ee"},"content":"                if (!line.startsWith(\"bye\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":455,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Oops! I\u0027m sorry, I don\u0027t understand that command. Try one of these instead:\");","lastModifiedDate":"2023-02-17"},{"lineNumber":456,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"list   mark   unmark   todo   deadline   event   find   dated\");","lastModifiedDate":"2023-02-17"},{"lineNumber":457,"author":{"gitId":"jared-ee"},"content":"                }","lastModifiedDate":"2023-02-17"},{"lineNumber":458,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":459,"author":{"gitId":"jared-ee"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":460,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-02-17"},{"lineNumber":461,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":462,"author":{"gitId":"jared-ee"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"jared-ee":462}}]
