[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jared-ee"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"jared-ee"},"content":"    protected String by;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"jared-ee"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"jared-ee"},"content":"        super(description);","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"jared-ee"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"jared-ee"},"content":"    public String toString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"jared-ee"},"content":"        return super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"jared-ee"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"jared-ee":13}},{"path":"src/main/java/Duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jared-ee"},"content":"Here are the tasks in your list:","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"jared-ee"},"content":"1.[T][ ] hha","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"jared-ee":2}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jared-ee"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"jared-ee"},"content":"    ","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"jared-ee"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"jared-ee":3}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jared-ee"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"jared-ee"},"content":"    protected String from;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"jared-ee"},"content":"    protected String to;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"jared-ee"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"jared-ee"},"content":"        super(description);","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"jared-ee"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"jared-ee"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"jared-ee"},"content":"    public String toString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"jared-ee"},"content":"        return super.toString() + \" (from \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"jared-ee"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"jared-ee":16}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jared-ee"},"content":"public class Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"jared-ee"},"content":"    protected String description;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"jared-ee"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"jared-ee"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"jared-ee"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"jared-ee"},"content":"        return description;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"jared-ee"},"content":"    public String toString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"jared-ee"},"content":"        return description;","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"jared-ee"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"jared-ee":16}},{"path":"src/main/java/level0.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jared-ee"},"content":"public class level0 {","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"jared-ee"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"jared-ee"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"jared-ee":7}},{"path":"src/main/java/level1.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jared-ee"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"jared-ee"},"content":"public class level1 {","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"jared-ee"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"jared-ee"},"content":"        String line;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"jared-ee"},"content":"        while (true) {","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"jared-ee"},"content":"            Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"jared-ee"},"content":"            line \u003d in.nextLine();","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"jared-ee"},"content":"            if (line.equals(\"bye\")){","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"jared-ee"},"content":"                break;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"jared-ee"},"content":"            System.out.println(line);","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"jared-ee"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"jared-ee"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"jared-ee":18}},{"path":"src/main/java/level2.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jared-ee"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"jared-ee"},"content":"public class level2 {","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"jared-ee"},"content":"    public static void main(String[] args){","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"jared-ee"},"content":"        String line;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"jared-ee"},"content":"        String[] lines \u003d new String[100];","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"jared-ee"},"content":"        boolean[] done \u003d new boolean[100];","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"jared-ee"},"content":"        int i \u003d 0;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"jared-ee"},"content":"        while (true) {","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"jared-ee"},"content":"            Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"jared-ee"},"content":"            line \u003d in.nextLine();","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"jared-ee"},"content":"            if (line.equals(\"bye\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"jared-ee"},"content":"                break;","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"jared-ee"},"content":"            if (line.equals(\"list\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"jared-ee"},"content":"                for (int j \u003d 0; j \u003c i; j++) {","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"jared-ee"},"content":"                    System.out.print(j+1);","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\". \" + lines[j]);","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"jared-ee"},"content":"                }","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"jared-ee"},"content":"            else {","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"jared-ee"},"content":"                lines[i] \u003d line;","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"jared-ee"},"content":"                i++;","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"jared-ee"},"content":"                System.out.println(\"added: \" + line);","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"jared-ee"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"jared-ee"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"jared-ee":31}},{"path":"src/main/java/level3.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jared-ee"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"jared-ee"},"content":"public class level3 {","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"jared-ee"},"content":"    public static void main(String[] args){","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"jared-ee"},"content":"        String line;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"jared-ee"},"content":"        String[] lines \u003d new String[100];","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"jared-ee"},"content":"        boolean[] done \u003d new boolean[100];","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"jared-ee"},"content":"        int i \u003d 0;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"jared-ee"},"content":"        while (true) {","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"jared-ee"},"content":"            Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"jared-ee"},"content":"            line \u003d in.nextLine();","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"jared-ee"},"content":"            if (line.equals(\"bye\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"jared-ee"},"content":"                break;","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"jared-ee"},"content":"            if (line.equals(\"list\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"jared-ee"},"content":"                for (int j \u003d 0; j \u003c i; j++) {","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Here are the tasks in your list: \");","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"jared-ee"},"content":"                    System.out.print(j+1);","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"jared-ee"},"content":"                    if (done[j]){","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"jared-ee"},"content":"                        System.out.print(\".[X] \");","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"jared-ee"},"content":"                    }","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"jared-ee"},"content":"                    if (!done[j]){","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"jared-ee"},"content":"                        System.out.print(\".[ ] \");","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"jared-ee"},"content":"                    }","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(lines[j]);","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"jared-ee"},"content":"                }","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"jared-ee"},"content":"            else if (line.startsWith(\"mark\")){","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"jared-ee"},"content":"                char numbchar \u003d line.charAt(line.length() - 1);","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"jared-ee"},"content":"                int number \u003d Character.getNumericValue(numbchar) - 1;","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"jared-ee"},"content":"                done[number] \u003d true;","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"jared-ee"},"content":"                System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"jared-ee"},"content":"                System.out.println(\"  [X] \" + lines[number]);","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"jared-ee"},"content":"            else if (line.startsWith(\"unmark\")){","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"jared-ee"},"content":"                char numbchar \u003d line.charAt(line.length() - 1);","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"jared-ee"},"content":"                int number \u003d Character.getNumericValue(numbchar) - 1;","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"jared-ee"},"content":"                done[number] \u003d false;","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"jared-ee"},"content":"                System.out.println(\"Ok, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"jared-ee"},"content":"                System.out.println(\"  [ ] \" + lines[number]);","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"jared-ee"},"content":"            else {","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"jared-ee"},"content":"                lines[i] \u003d line;","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"jared-ee"},"content":"                done[i] \u003d false;","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"jared-ee"},"content":"                i++;","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"jared-ee"},"content":"                System.out.println(\"added: \" + line);","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"jared-ee"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"jared-ee"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"jared-ee":53}},{"path":"src/main/java/level4.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jared-ee"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"jared-ee"},"content":"public class level4 {","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"jared-ee"},"content":"    public static void main(String[] args){","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"jared-ee"},"content":"        String line;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"jared-ee"},"content":"        Task[] tasks \u003d new Task[100];","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"jared-ee"},"content":"        boolean[] done \u003d new boolean[100];","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"jared-ee"},"content":"        String[] type \u003d new String[100];","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"jared-ee"},"content":"        int i \u003d 0;","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"jared-ee"},"content":"        while (true) {","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"jared-ee"},"content":"            Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"jared-ee"},"content":"            line \u003d in.nextLine();","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"jared-ee"},"content":"            if (line.equals(\"bye\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"jared-ee"},"content":"                break;","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"jared-ee"},"content":"            if (line.equals(\"list\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"jared-ee"},"content":"                System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"jared-ee"},"content":"                for (int j \u003d 0; j \u003c i; j++) {","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"jared-ee"},"content":"                    System.out.print(j+1);","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"jared-ee"},"content":"                    if (done[j]){","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"jared-ee"},"content":"                        System.out.print(\".\" + type[j] + \"[X]\");","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"jared-ee"},"content":"                    }","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"jared-ee"},"content":"                    if (!done[j]){","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"jared-ee"},"content":"                        System.out.print(\".\" + type[j] + \"[ ]\");","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"jared-ee"},"content":"                    }","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(tasks[j]);","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"jared-ee"},"content":"                }","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"jared-ee"},"content":"            else if (line.startsWith(\"mark\")){","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"jared-ee"},"content":"                char numbchar \u003d line.charAt(line.length() - 1);","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"jared-ee"},"content":"                int number \u003d Character.getNumericValue(numbchar) - 1;","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"jared-ee"},"content":"                done[number] \u003d true;","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"jared-ee"},"content":"                System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"jared-ee"},"content":"                System.out.println(\"  \" + type[number] + \"[X]\" + tasks[number]);","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"jared-ee"},"content":"            else if (line.startsWith(\"unmark\")){","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"jared-ee"},"content":"                char numbchar \u003d line.charAt(line.length() - 1);","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"jared-ee"},"content":"                int number \u003d Character.getNumericValue(numbchar) - 1;","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"jared-ee"},"content":"                done[number] \u003d false;","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"jared-ee"},"content":"                System.out.println(\"Ok, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"jared-ee"},"content":"                System.out.println(\"  \" + type[number] + \"[ ]\" + tasks[number]);","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"jared-ee"},"content":"            else{","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"jared-ee"},"content":"                if (line.startsWith(\"todo\")){","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"jared-ee"},"content":"                    tasks[i] \u003d new Task(line.substring(4));","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"jared-ee"},"content":"                    type[i] \u003d \"[T]\";","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"jared-ee"},"content":"                }","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"jared-ee"},"content":"                if (line.startsWith(\"deadline\")){","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"jared-ee"},"content":"                    int slash \u003d line.indexOf(\"/\");","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"jared-ee"},"content":"                    String description \u003d line.substring(8, slash-1);","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"jared-ee"},"content":"                    String by \u003d line.substring(slash+4);","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"jared-ee"},"content":"                    tasks[i] \u003d new Deadline(description, by);","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"jared-ee"},"content":"                    type[i] \u003d \"[D]\";","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"jared-ee"},"content":"                }","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"jared-ee"},"content":"                if (line.startsWith(\"event\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"jared-ee"},"content":"                    int slash1 \u003d line.indexOf(\"/\");","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"jared-ee"},"content":"                    int slash2 \u003d line.indexOf(\"/\", slash1+1);","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"jared-ee"},"content":"                    String description \u003d line.substring(5, slash1-1);","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"jared-ee"},"content":"                    String from \u003d line.substring(slash1+6, slash2-1);","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"jared-ee"},"content":"                    String to \u003d line.substring(slash2+4);","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"jared-ee"},"content":"                    tasks[i] \u003d new Event(description, from, to);","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"jared-ee"},"content":"                    type[i] \u003d \"[E]\";","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"jared-ee"},"content":"                }","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"jared-ee"},"content":"                System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"jared-ee"},"content":"                System.out.println(\"  \" + type[i] + \"[ ]\" + tasks[i]);","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"jared-ee"},"content":"                System.out.println(\"Now you have \" + (i + 1) + \" tasks in the list.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"jared-ee"},"content":"                done[i] \u003d false;","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"jared-ee"},"content":"                i++;","lastModifiedDate":"2023-01-31"},{"lineNumber":71,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"jared-ee"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":74,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":75,"author":{"gitId":"jared-ee"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"jared-ee":75}},{"path":"src/main/java/level5.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jared-ee"},"content":"import java.text.NumberFormat;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"jared-ee"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"jared-ee"},"content":"public class level5 {","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"jared-ee"},"content":"    public static void mark(int i, String line, Task[] tasks, boolean[] done, String[] type) throws DukeException {","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"jared-ee"},"content":"        int number \u003d Integer.parseInt(line.substring(5));","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"jared-ee"},"content":"        if (number \u003e i || number \u003c 1) {","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"jared-ee"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"jared-ee"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"jared-ee"},"content":"        done[number - 1] \u003d true;","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"  \" + type[number - 1] + \"[X]\" + tasks[number - 1]);","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"jared-ee"},"content":"    public static void unmark(int i, String line, Task[] tasks, boolean[] done, String[] type) throws DukeException {","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"jared-ee"},"content":"        int number \u003d Integer.parseInt(line.substring(7));","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"jared-ee"},"content":"        if (number \u003e i || number \u003c 1) {","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"jared-ee"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"jared-ee"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"jared-ee"},"content":"        done[number - 1] \u003d false;","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"Ok, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"  \" + type[number - 1] + \"[ ]\" + tasks[number - 1]);","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"jared-ee"},"content":"    public static void todo(int i, String line, Task[] tasks, boolean[] done, String[] type) throws DukeException {","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"jared-ee"},"content":"        if (line.equals(\"todo\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"jared-ee"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"jared-ee"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"jared-ee"},"content":"        tasks[i] \u003d new Task(line.substring(4));","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"jared-ee"},"content":"        type[i] \u003d \"[T]\";","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-02-09"},{"lineNumber":32,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"  \" + type[i] + \"[ ]\" + tasks[i]);","lastModifiedDate":"2023-02-09"},{"lineNumber":33,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"Now you have \" + (i + 1) + \" tasks in the list.\");","lastModifiedDate":"2023-02-09"},{"lineNumber":34,"author":{"gitId":"jared-ee"},"content":"        done[i] \u003d false;","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":36,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"jared-ee"},"content":"    public static void deadline(int i, String line, Task[] tasks, boolean[] done, String[] type) {","lastModifiedDate":"2023-02-09"},{"lineNumber":38,"author":{"gitId":"jared-ee"},"content":"        int slash \u003d line.indexOf(\"/\");","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"jared-ee"},"content":"        String description \u003d line.substring(8, slash-1);","lastModifiedDate":"2023-02-09"},{"lineNumber":40,"author":{"gitId":"jared-ee"},"content":"        String by \u003d line.substring(slash+4);","lastModifiedDate":"2023-02-09"},{"lineNumber":41,"author":{"gitId":"jared-ee"},"content":"        tasks[i] \u003d new Deadline(description, by);","lastModifiedDate":"2023-02-09"},{"lineNumber":42,"author":{"gitId":"jared-ee"},"content":"        type[i] \u003d \"[D]\";","lastModifiedDate":"2023-02-09"},{"lineNumber":43,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"  \" + type[i] + \"[ ]\" + tasks[i]);","lastModifiedDate":"2023-02-09"},{"lineNumber":45,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"Now you have \" + (i + 1) + \" tasks in the list.\");","lastModifiedDate":"2023-02-09"},{"lineNumber":46,"author":{"gitId":"jared-ee"},"content":"        done[i] \u003d false;","lastModifiedDate":"2023-02-09"},{"lineNumber":47,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":49,"author":{"gitId":"jared-ee"},"content":"    public static void event(int i, String line, Task[] tasks, boolean[] done, String[] type) {","lastModifiedDate":"2023-02-09"},{"lineNumber":50,"author":{"gitId":"jared-ee"},"content":"        int slash1 \u003d line.indexOf(\"/\");","lastModifiedDate":"2023-02-09"},{"lineNumber":51,"author":{"gitId":"jared-ee"},"content":"        int slash2 \u003d line.indexOf(\"/\", slash1+1);","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"jared-ee"},"content":"        String description \u003d line.substring(5, slash1-1);","lastModifiedDate":"2023-02-09"},{"lineNumber":53,"author":{"gitId":"jared-ee"},"content":"        String from \u003d line.substring(slash1+6, slash2-1);","lastModifiedDate":"2023-02-09"},{"lineNumber":54,"author":{"gitId":"jared-ee"},"content":"        String to \u003d line.substring(slash2+4);","lastModifiedDate":"2023-02-09"},{"lineNumber":55,"author":{"gitId":"jared-ee"},"content":"        tasks[i] \u003d new Event(description, from, to);","lastModifiedDate":"2023-02-09"},{"lineNumber":56,"author":{"gitId":"jared-ee"},"content":"        type[i] \u003d \"[E]\";","lastModifiedDate":"2023-02-09"},{"lineNumber":57,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-02-09"},{"lineNumber":58,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"  \" + type[i] + \"[ ]\" + tasks[i]);","lastModifiedDate":"2023-02-09"},{"lineNumber":59,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"Now you have \" + (i + 1) + \" tasks in the list.\");","lastModifiedDate":"2023-02-09"},{"lineNumber":60,"author":{"gitId":"jared-ee"},"content":"        done[i] \u003d false;","lastModifiedDate":"2023-02-09"},{"lineNumber":61,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":62,"author":{"gitId":"jared-ee"},"content":"    public static void main(String[] args){","lastModifiedDate":"2023-02-09"},{"lineNumber":63,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");","lastModifiedDate":"2023-02-09"},{"lineNumber":64,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-02-09"},{"lineNumber":65,"author":{"gitId":"jared-ee"},"content":"        String line;","lastModifiedDate":"2023-02-09"},{"lineNumber":66,"author":{"gitId":"jared-ee"},"content":"        Task[] tasks \u003d new Task[100];","lastModifiedDate":"2023-02-09"},{"lineNumber":67,"author":{"gitId":"jared-ee"},"content":"        boolean[] done \u003d new boolean[100];","lastModifiedDate":"2023-02-09"},{"lineNumber":68,"author":{"gitId":"jared-ee"},"content":"        String[] type \u003d new String[100];","lastModifiedDate":"2023-02-09"},{"lineNumber":69,"author":{"gitId":"jared-ee"},"content":"        int i \u003d 0;","lastModifiedDate":"2023-02-09"},{"lineNumber":70,"author":{"gitId":"jared-ee"},"content":"        while (true) {","lastModifiedDate":"2023-02-09"},{"lineNumber":71,"author":{"gitId":"jared-ee"},"content":"            Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-09"},{"lineNumber":72,"author":{"gitId":"jared-ee"},"content":"            line \u003d in.nextLine();","lastModifiedDate":"2023-02-09"},{"lineNumber":73,"author":{"gitId":"jared-ee"},"content":"            if (line.startsWith(\"bye\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":74,"author":{"gitId":"jared-ee"},"content":"                break;","lastModifiedDate":"2023-02-09"},{"lineNumber":75,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":76,"author":{"gitId":"jared-ee"},"content":"            if (line.startsWith(\"list\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":77,"author":{"gitId":"jared-ee"},"content":"                System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-02-09"},{"lineNumber":78,"author":{"gitId":"jared-ee"},"content":"                for (int j \u003d 0; j \u003c i; j++) {","lastModifiedDate":"2023-02-09"},{"lineNumber":79,"author":{"gitId":"jared-ee"},"content":"                    System.out.print(j+1);","lastModifiedDate":"2023-02-09"},{"lineNumber":80,"author":{"gitId":"jared-ee"},"content":"                    if (done[j]){","lastModifiedDate":"2023-02-09"},{"lineNumber":81,"author":{"gitId":"jared-ee"},"content":"                        System.out.print(\".\" + type[j] + \"[X]\");","lastModifiedDate":"2023-02-09"},{"lineNumber":82,"author":{"gitId":"jared-ee"},"content":"                    }","lastModifiedDate":"2023-02-09"},{"lineNumber":83,"author":{"gitId":"jared-ee"},"content":"                    if (!done[j]){","lastModifiedDate":"2023-02-09"},{"lineNumber":84,"author":{"gitId":"jared-ee"},"content":"                        System.out.print(\".\" + type[j] + \"[ ]\");","lastModifiedDate":"2023-02-09"},{"lineNumber":85,"author":{"gitId":"jared-ee"},"content":"                    }","lastModifiedDate":"2023-02-09"},{"lineNumber":86,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(tasks[j]);","lastModifiedDate":"2023-02-09"},{"lineNumber":87,"author":{"gitId":"jared-ee"},"content":"                }","lastModifiedDate":"2023-02-09"},{"lineNumber":88,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":89,"author":{"gitId":"jared-ee"},"content":"            else if (line.startsWith(\"mark\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":90,"author":{"gitId":"jared-ee"},"content":"                try {","lastModifiedDate":"2023-02-09"},{"lineNumber":91,"author":{"gitId":"jared-ee"},"content":"                    mark(i, line, tasks, done, type);","lastModifiedDate":"2023-02-09"},{"lineNumber":92,"author":{"gitId":"jared-ee"},"content":"                } catch (NumberFormatException | IndexOutOfBoundsException | DukeException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":93,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Oops! That isn\u0027t a task in your list.\");","lastModifiedDate":"2023-02-09"},{"lineNumber":94,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Please input only one integer after \u0027mark\u0027, separated by a single whitespace.\");","lastModifiedDate":"2023-02-09"},{"lineNumber":95,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"There are \" + i + \" tasks in your list, so do not input an integer \" +","lastModifiedDate":"2023-02-09"},{"lineNumber":96,"author":{"gitId":"jared-ee"},"content":"                            \"smaller than 1 or larger than \" + i + \".\");","lastModifiedDate":"2023-02-09"},{"lineNumber":97,"author":{"gitId":"jared-ee"},"content":"                }","lastModifiedDate":"2023-02-09"},{"lineNumber":98,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":99,"author":{"gitId":"jared-ee"},"content":"            else if (line.startsWith(\"unmark\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":100,"author":{"gitId":"jared-ee"},"content":"                 try {","lastModifiedDate":"2023-02-09"},{"lineNumber":101,"author":{"gitId":"jared-ee"},"content":"                     unmark(i, line, tasks, done, type);","lastModifiedDate":"2023-02-09"},{"lineNumber":102,"author":{"gitId":"jared-ee"},"content":"                 } catch (NumberFormatException | IndexOutOfBoundsException | DukeException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":103,"author":{"gitId":"jared-ee"},"content":"                     System.out.println(\"Oops! That isn\u0027t a task in your list.\");","lastModifiedDate":"2023-02-09"},{"lineNumber":104,"author":{"gitId":"jared-ee"},"content":"                     System.out.println(\"Please input only one integer after \u0027mark\u0027, separated by a single whitespace.\");","lastModifiedDate":"2023-02-09"},{"lineNumber":105,"author":{"gitId":"jared-ee"},"content":"                     System.out.println(\"There are \" + i + \" tasks in your list, so do not input an integer \" +","lastModifiedDate":"2023-02-09"},{"lineNumber":106,"author":{"gitId":"jared-ee"},"content":"                             \"smaller than 1 or larger than \" + i + \".\");","lastModifiedDate":"2023-02-09"},{"lineNumber":107,"author":{"gitId":"jared-ee"},"content":"                 }","lastModifiedDate":"2023-02-09"},{"lineNumber":108,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":109,"author":{"gitId":"jared-ee"},"content":"            else if (line.startsWith(\"todo\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":110,"author":{"gitId":"jared-ee"},"content":"                try {","lastModifiedDate":"2023-02-09"},{"lineNumber":111,"author":{"gitId":"jared-ee"},"content":"                    todo(i, line, tasks, done, type);","lastModifiedDate":"2023-02-09"},{"lineNumber":112,"author":{"gitId":"jared-ee"},"content":"                    i++;","lastModifiedDate":"2023-02-09"},{"lineNumber":113,"author":{"gitId":"jared-ee"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":114,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Oops! The description of a todo cannot be left empty.\");","lastModifiedDate":"2023-02-09"},{"lineNumber":115,"author":{"gitId":"jared-ee"},"content":"                }","lastModifiedDate":"2023-02-09"},{"lineNumber":116,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":117,"author":{"gitId":"jared-ee"},"content":"            else if (line.startsWith(\"deadline\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":118,"author":{"gitId":"jared-ee"},"content":"                try {","lastModifiedDate":"2023-02-09"},{"lineNumber":119,"author":{"gitId":"jared-ee"},"content":"                    deadline(i, line, tasks, done, type);","lastModifiedDate":"2023-02-09"},{"lineNumber":120,"author":{"gitId":"jared-ee"},"content":"                    i++;","lastModifiedDate":"2023-02-09"},{"lineNumber":121,"author":{"gitId":"jared-ee"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":122,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Oops! Did you forget the slash?\");","lastModifiedDate":"2023-02-09"},{"lineNumber":123,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"When specifying deadline, please follow the format below:\");","lastModifiedDate":"2023-02-09"},{"lineNumber":124,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"deadline (task) /by (deadline)\");","lastModifiedDate":"2023-02-09"},{"lineNumber":125,"author":{"gitId":"jared-ee"},"content":"                }","lastModifiedDate":"2023-02-09"},{"lineNumber":126,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":127,"author":{"gitId":"jared-ee"},"content":"            else if (line.startsWith(\"event\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":128,"author":{"gitId":"jared-ee"},"content":"                try {","lastModifiedDate":"2023-02-09"},{"lineNumber":129,"author":{"gitId":"jared-ee"},"content":"                    event(i, line, tasks, done, type);","lastModifiedDate":"2023-02-09"},{"lineNumber":130,"author":{"gitId":"jared-ee"},"content":"                    i++;","lastModifiedDate":"2023-02-09"},{"lineNumber":131,"author":{"gitId":"jared-ee"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":132,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Oops! Did you forget the slash?\");","lastModifiedDate":"2023-02-09"},{"lineNumber":133,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"When specifying timeframe, please follow the format below:\");","lastModifiedDate":"2023-02-09"},{"lineNumber":134,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"event (task) /from (starting time) /to (ending time)\");","lastModifiedDate":"2023-02-09"},{"lineNumber":135,"author":{"gitId":"jared-ee"},"content":"                }","lastModifiedDate":"2023-02-09"},{"lineNumber":136,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":137,"author":{"gitId":"jared-ee"},"content":"            else {","lastModifiedDate":"2023-02-09"},{"lineNumber":138,"author":{"gitId":"jared-ee"},"content":"                System.out.print(\"Oops! I\u0027m sorry, I don\u0027t understand that command. Try one of these instead:\");","lastModifiedDate":"2023-02-09"},{"lineNumber":139,"author":{"gitId":"jared-ee"},"content":"                System.out.println(\"list   mark   unmark   todo   deadline   event\");","lastModifiedDate":"2023-02-09"},{"lineNumber":140,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":141,"author":{"gitId":"jared-ee"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":142,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-02-09"},{"lineNumber":143,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":144,"author":{"gitId":"jared-ee"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"jared-ee":144}},{"path":"src/main/java/level6.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jared-ee"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"jared-ee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"jared-ee"},"content":"public class level6 {","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"jared-ee"},"content":"    public static void mark(int i, String line, ArrayList\u003cString\u003e tasks, ArrayList\u003cString\u003e done, ArrayList\u003cString\u003e type) throws DukeException {","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"jared-ee"},"content":"        int number \u003d Integer.parseInt(line.substring(5));","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"jared-ee"},"content":"        if (number \u003e i || number \u003c 1) {","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"jared-ee"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"jared-ee"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"jared-ee"},"content":"        done.remove(number - 1);","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"jared-ee"},"content":"        done.add(number - 1, \"[X]\");","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"  \" + type.get(number - 1) + \"[X]\" + tasks.get(number - 1));","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"jared-ee"},"content":"    public static void unmark(int i, String line, ArrayList\u003cString\u003e tasks, ArrayList\u003cString\u003e done, ArrayList\u003cString\u003e type) throws DukeException {","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"jared-ee"},"content":"        int number \u003d Integer.parseInt(line.substring(7));","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"jared-ee"},"content":"        if (number \u003e i || number \u003c 1) {","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"jared-ee"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"jared-ee"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"jared-ee"},"content":"        done.remove(number - 1);","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"jared-ee"},"content":"        done.add(number - 1, \"[ ]\");","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"Ok, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"  \" + type.get(number - 1) + \"[ ]\" + tasks.get(number - 1));","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"jared-ee"},"content":"    public static void delete(int i, String line, ArrayList\u003cString\u003e tasks, ArrayList\u003cString\u003e done, ArrayList\u003cString\u003e type) throws DukeException {","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"jared-ee"},"content":"        int number \u003d Integer.parseInt(line.substring(7));","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"jared-ee"},"content":"        if (number \u003e i || number \u003c 1) {","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"jared-ee"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"jared-ee"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":32,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-02-09"},{"lineNumber":33,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"  \" + type.get(number - 1) + done.get(number - 1) + tasks.get(number - 1));","lastModifiedDate":"2023-02-09"},{"lineNumber":34,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"Now you have \" + (i - 1) + \" tasks in the list.\");","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"jared-ee"},"content":"        tasks.remove(number - 1);","lastModifiedDate":"2023-02-09"},{"lineNumber":36,"author":{"gitId":"jared-ee"},"content":"        done.remove(number - 1);","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"jared-ee"},"content":"        type.remove(number - 1);","lastModifiedDate":"2023-02-09"},{"lineNumber":38,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"jared-ee"},"content":"    public static void todo(int i, String line, ArrayList\u003cString\u003e tasks, ArrayList\u003cString\u003e done, ArrayList\u003cString\u003e type) throws DukeException {","lastModifiedDate":"2023-02-09"},{"lineNumber":40,"author":{"gitId":"jared-ee"},"content":"        if (line.equals(\"todo\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":41,"author":{"gitId":"jared-ee"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-09"},{"lineNumber":42,"author":{"gitId":"jared-ee"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":43,"author":{"gitId":"jared-ee"},"content":"        tasks.add(line.substring(4));","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"jared-ee"},"content":"        type.add(\"[T]\");","lastModifiedDate":"2023-02-09"},{"lineNumber":45,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-02-09"},{"lineNumber":46,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"  \" + type.get(i) + \"[ ]\" + tasks.get(i));","lastModifiedDate":"2023-02-09"},{"lineNumber":47,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"Now you have \" + (i + 1) + \" tasks in the list.\");","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"jared-ee"},"content":"        done.add(\"[ ]\");","lastModifiedDate":"2023-02-09"},{"lineNumber":49,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":50,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":51,"author":{"gitId":"jared-ee"},"content":"    public static void deadline(int i, String line, ArrayList\u003cString\u003e tasks, ArrayList\u003cString\u003e done, ArrayList\u003cString\u003e type) {","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"jared-ee"},"content":"        int slash \u003d line.indexOf(\"/\");","lastModifiedDate":"2023-02-09"},{"lineNumber":53,"author":{"gitId":"jared-ee"},"content":"        String description \u003d line.substring(8, slash-1);","lastModifiedDate":"2023-02-09"},{"lineNumber":54,"author":{"gitId":"jared-ee"},"content":"        String by \u003d line.substring(slash+4);","lastModifiedDate":"2023-02-09"},{"lineNumber":55,"author":{"gitId":"jared-ee"},"content":"        tasks.add(description + \" (by: \" + by + \")\");","lastModifiedDate":"2023-02-09"},{"lineNumber":56,"author":{"gitId":"jared-ee"},"content":"        type.add(\"[D]\");","lastModifiedDate":"2023-02-09"},{"lineNumber":57,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-02-09"},{"lineNumber":58,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"  \" + type.get(i) + \"[ ]\" + tasks.get(i));","lastModifiedDate":"2023-02-09"},{"lineNumber":59,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"Now you have \" + (i + 1) + \" tasks in the list.\");","lastModifiedDate":"2023-02-09"},{"lineNumber":60,"author":{"gitId":"jared-ee"},"content":"        done.add(\"[ ]\");","lastModifiedDate":"2023-02-09"},{"lineNumber":61,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":62,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":63,"author":{"gitId":"jared-ee"},"content":"    public static void event(int i, String line, ArrayList\u003cString\u003e tasks, ArrayList\u003cString\u003e done, ArrayList\u003cString\u003e type) {","lastModifiedDate":"2023-02-09"},{"lineNumber":64,"author":{"gitId":"jared-ee"},"content":"        int slash1 \u003d line.indexOf(\"/\");","lastModifiedDate":"2023-02-09"},{"lineNumber":65,"author":{"gitId":"jared-ee"},"content":"        int slash2 \u003d line.indexOf(\"/\", slash1+1);","lastModifiedDate":"2023-02-09"},{"lineNumber":66,"author":{"gitId":"jared-ee"},"content":"        String description \u003d line.substring(5, slash1-1);","lastModifiedDate":"2023-02-09"},{"lineNumber":67,"author":{"gitId":"jared-ee"},"content":"        String from \u003d line.substring(slash1+6, slash2-1);","lastModifiedDate":"2023-02-09"},{"lineNumber":68,"author":{"gitId":"jared-ee"},"content":"        String to \u003d line.substring(slash2+4);","lastModifiedDate":"2023-02-09"},{"lineNumber":69,"author":{"gitId":"jared-ee"},"content":"        tasks.add(description + \" (from \" + from + \" to: \" + to + \")\");","lastModifiedDate":"2023-02-09"},{"lineNumber":70,"author":{"gitId":"jared-ee"},"content":"        type.add(\"[E]\");","lastModifiedDate":"2023-02-09"},{"lineNumber":71,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-02-09"},{"lineNumber":72,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"  \" + type.get(i) + \"[ ]\" + tasks.get(i));","lastModifiedDate":"2023-02-09"},{"lineNumber":73,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"Now you have \" + (i + 1) + \" tasks in the list.\");","lastModifiedDate":"2023-02-09"},{"lineNumber":74,"author":{"gitId":"jared-ee"},"content":"        done.add(\"[ ]\");","lastModifiedDate":"2023-02-09"},{"lineNumber":75,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":76,"author":{"gitId":"jared-ee"},"content":"    public static void main(String[] args){","lastModifiedDate":"2023-02-09"},{"lineNumber":77,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");","lastModifiedDate":"2023-02-09"},{"lineNumber":78,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-02-09"},{"lineNumber":79,"author":{"gitId":"jared-ee"},"content":"        String line;","lastModifiedDate":"2023-02-09"},{"lineNumber":80,"author":{"gitId":"jared-ee"},"content":"        ArrayList\u003cString\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-09"},{"lineNumber":81,"author":{"gitId":"jared-ee"},"content":"        ArrayList\u003cString\u003e done \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-09"},{"lineNumber":82,"author":{"gitId":"jared-ee"},"content":"        ArrayList\u003cString\u003e type \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-09"},{"lineNumber":83,"author":{"gitId":"jared-ee"},"content":"        int i \u003d 0;","lastModifiedDate":"2023-02-09"},{"lineNumber":84,"author":{"gitId":"jared-ee"},"content":"        while (true) {","lastModifiedDate":"2023-02-09"},{"lineNumber":85,"author":{"gitId":"jared-ee"},"content":"            Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-09"},{"lineNumber":86,"author":{"gitId":"jared-ee"},"content":"            line \u003d in.nextLine();","lastModifiedDate":"2023-02-09"},{"lineNumber":87,"author":{"gitId":"jared-ee"},"content":"            if (line.startsWith(\"bye\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":88,"author":{"gitId":"jared-ee"},"content":"                break;","lastModifiedDate":"2023-02-09"},{"lineNumber":89,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":90,"author":{"gitId":"jared-ee"},"content":"            if (line.startsWith(\"list\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":91,"author":{"gitId":"jared-ee"},"content":"                System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-02-09"},{"lineNumber":92,"author":{"gitId":"jared-ee"},"content":"                for (int j \u003d 0; j \u003c i; j++) {","lastModifiedDate":"2023-02-09"},{"lineNumber":93,"author":{"gitId":"jared-ee"},"content":"                    try {","lastModifiedDate":"2023-02-09"},{"lineNumber":94,"author":{"gitId":"jared-ee"},"content":"                        System.out.print((j+1) + \".\" + type.get(j) + done.get(j));","lastModifiedDate":"2023-02-09"},{"lineNumber":95,"author":{"gitId":"jared-ee"},"content":"                        System.out.println(tasks.get(j));","lastModifiedDate":"2023-02-09"},{"lineNumber":96,"author":{"gitId":"jared-ee"},"content":"                    } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":97,"author":{"gitId":"jared-ee"},"content":"                        j++;","lastModifiedDate":"2023-02-09"},{"lineNumber":98,"author":{"gitId":"jared-ee"},"content":"                    }","lastModifiedDate":"2023-02-09"},{"lineNumber":99,"author":{"gitId":"jared-ee"},"content":"                }","lastModifiedDate":"2023-02-09"},{"lineNumber":100,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":101,"author":{"gitId":"jared-ee"},"content":"            else if (line.startsWith(\"mark\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":102,"author":{"gitId":"jared-ee"},"content":"                try {","lastModifiedDate":"2023-02-09"},{"lineNumber":103,"author":{"gitId":"jared-ee"},"content":"                    mark(i, line, tasks, done, type);","lastModifiedDate":"2023-02-09"},{"lineNumber":104,"author":{"gitId":"jared-ee"},"content":"                } catch (NumberFormatException | IndexOutOfBoundsException | DukeException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":105,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Oops! That isn\u0027t a task in your list.\");","lastModifiedDate":"2023-02-09"},{"lineNumber":106,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Please input only one integer after \u0027mark\u0027, separated by a single whitespace.\");","lastModifiedDate":"2023-02-09"},{"lineNumber":107,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"There are \" + i + \" tasks in your list, so do not input an integer \" +","lastModifiedDate":"2023-02-09"},{"lineNumber":108,"author":{"gitId":"jared-ee"},"content":"                            \"smaller than 1 or larger than \" + i + \".\");","lastModifiedDate":"2023-02-09"},{"lineNumber":109,"author":{"gitId":"jared-ee"},"content":"                }","lastModifiedDate":"2023-02-09"},{"lineNumber":110,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":111,"author":{"gitId":"jared-ee"},"content":"            else if (line.startsWith(\"unmark\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":112,"author":{"gitId":"jared-ee"},"content":"                try {","lastModifiedDate":"2023-02-09"},{"lineNumber":113,"author":{"gitId":"jared-ee"},"content":"                    unmark(i, line, tasks, done, type);","lastModifiedDate":"2023-02-09"},{"lineNumber":114,"author":{"gitId":"jared-ee"},"content":"                } catch (NumberFormatException | IndexOutOfBoundsException | DukeException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":115,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Oops! That isn\u0027t a task in your list.\");","lastModifiedDate":"2023-02-09"},{"lineNumber":116,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Please input only one integer after \u0027mark\u0027, separated by a single whitespace.\");","lastModifiedDate":"2023-02-09"},{"lineNumber":117,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"There are \" + i + \" tasks in your list, so do not input an integer \" +","lastModifiedDate":"2023-02-09"},{"lineNumber":118,"author":{"gitId":"jared-ee"},"content":"                            \"smaller than 1 or larger than \" + i + \".\");","lastModifiedDate":"2023-02-09"},{"lineNumber":119,"author":{"gitId":"jared-ee"},"content":"                }","lastModifiedDate":"2023-02-09"},{"lineNumber":120,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":121,"author":{"gitId":"jared-ee"},"content":"            else if (line.startsWith(\"todo\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":122,"author":{"gitId":"jared-ee"},"content":"                try {","lastModifiedDate":"2023-02-09"},{"lineNumber":123,"author":{"gitId":"jared-ee"},"content":"                    todo(i, line, tasks, done, type);","lastModifiedDate":"2023-02-09"},{"lineNumber":124,"author":{"gitId":"jared-ee"},"content":"                    i++;","lastModifiedDate":"2023-02-09"},{"lineNumber":125,"author":{"gitId":"jared-ee"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":126,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Oops! The description of a todo cannot be left empty.\");","lastModifiedDate":"2023-02-09"},{"lineNumber":127,"author":{"gitId":"jared-ee"},"content":"                }","lastModifiedDate":"2023-02-09"},{"lineNumber":128,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":129,"author":{"gitId":"jared-ee"},"content":"            else if (line.startsWith(\"deadline\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":130,"author":{"gitId":"jared-ee"},"content":"                try {","lastModifiedDate":"2023-02-09"},{"lineNumber":131,"author":{"gitId":"jared-ee"},"content":"                    deadline(i, line, tasks, done, type);","lastModifiedDate":"2023-02-09"},{"lineNumber":132,"author":{"gitId":"jared-ee"},"content":"                    i++;","lastModifiedDate":"2023-02-09"},{"lineNumber":133,"author":{"gitId":"jared-ee"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":134,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Oops! Did you forget the slash?\");","lastModifiedDate":"2023-02-09"},{"lineNumber":135,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"When specifying deadline, please follow the format below:\");","lastModifiedDate":"2023-02-09"},{"lineNumber":136,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"deadline (task) /by (deadline)\");","lastModifiedDate":"2023-02-09"},{"lineNumber":137,"author":{"gitId":"jared-ee"},"content":"                }","lastModifiedDate":"2023-02-09"},{"lineNumber":138,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":139,"author":{"gitId":"jared-ee"},"content":"            else if (line.startsWith(\"event\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":140,"author":{"gitId":"jared-ee"},"content":"                try {","lastModifiedDate":"2023-02-09"},{"lineNumber":141,"author":{"gitId":"jared-ee"},"content":"                    event(i, line, tasks, done, type);","lastModifiedDate":"2023-02-09"},{"lineNumber":142,"author":{"gitId":"jared-ee"},"content":"                    i++;","lastModifiedDate":"2023-02-09"},{"lineNumber":143,"author":{"gitId":"jared-ee"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":144,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Oops! Did you forget the slash?\");","lastModifiedDate":"2023-02-09"},{"lineNumber":145,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"When specifying timeframe, please follow the format below:\");","lastModifiedDate":"2023-02-09"},{"lineNumber":146,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"event (task) /from (starting time) /to (ending time)\");","lastModifiedDate":"2023-02-09"},{"lineNumber":147,"author":{"gitId":"jared-ee"},"content":"                }","lastModifiedDate":"2023-02-09"},{"lineNumber":148,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":149,"author":{"gitId":"jared-ee"},"content":"            else if (line.startsWith(\"delete\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":150,"author":{"gitId":"jared-ee"},"content":"                try {","lastModifiedDate":"2023-02-09"},{"lineNumber":151,"author":{"gitId":"jared-ee"},"content":"                    delete(i, line, tasks, done, type);","lastModifiedDate":"2023-02-09"},{"lineNumber":152,"author":{"gitId":"jared-ee"},"content":"                    i--;","lastModifiedDate":"2023-02-09"},{"lineNumber":153,"author":{"gitId":"jared-ee"},"content":"                } catch (NumberFormatException | IndexOutOfBoundsException | DukeException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":154,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Oops! That isn\u0027t a task in your list.\");","lastModifiedDate":"2023-02-09"},{"lineNumber":155,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Please input only one integer after \u0027delete\u0027, separated by a single whitespace.\");","lastModifiedDate":"2023-02-09"},{"lineNumber":156,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"There are \" + i + \" tasks in your list, so do not input an integer \" +","lastModifiedDate":"2023-02-09"},{"lineNumber":157,"author":{"gitId":"jared-ee"},"content":"                            \"smaller than 1 or larger than \" + i + \".\");","lastModifiedDate":"2023-02-09"},{"lineNumber":158,"author":{"gitId":"jared-ee"},"content":"                }","lastModifiedDate":"2023-02-09"},{"lineNumber":159,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":160,"author":{"gitId":"jared-ee"},"content":"            else {","lastModifiedDate":"2023-02-09"},{"lineNumber":161,"author":{"gitId":"jared-ee"},"content":"                System.out.print(\"Oops! I\u0027m sorry, I don\u0027t understand that command. Try one of these instead:\");","lastModifiedDate":"2023-02-09"},{"lineNumber":162,"author":{"gitId":"jared-ee"},"content":"                System.out.println(\"list   mark   unmark   todo   deadline   event\");","lastModifiedDate":"2023-02-09"},{"lineNumber":163,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":164,"author":{"gitId":"jared-ee"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":165,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-02-09"},{"lineNumber":166,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":167,"author":{"gitId":"jared-ee"},"content":"}","lastModifiedDate":"2023-02-09"},{"lineNumber":168,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"jared-ee":168}},{"path":"src/main/java/level7.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jared-ee"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"jared-ee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"jared-ee"},"content":"import java.io.File;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"jared-ee"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"jared-ee"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"jared-ee"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"jared-ee"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"jared-ee"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"jared-ee"},"content":"public class level7 {","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"jared-ee"},"content":"    private static void writeToFile(String filePath, String textToAdd) throws IOException {","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"jared-ee"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"jared-ee"},"content":"        fw.write(textToAdd);","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"jared-ee"},"content":"        fw.close();","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"jared-ee"},"content":"    private static void readFileContents(String filePath, int i, ArrayList\u003cString\u003e tasks, ArrayList\u003cString\u003e done, ArrayList\u003cString\u003e type) throws FileNotFoundException, DukeException {","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"jared-ee"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"jared-ee"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"jared-ee"},"content":"        String line \u003d s.nextLine();","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"jared-ee"},"content":"        String line2;","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"jared-ee"},"content":"        int j \u003d i;","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"jared-ee"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"jared-ee"},"content":"            line \u003d s.nextLine();","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"jared-ee"},"content":"            if (line.charAt(3) \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"jared-ee"},"content":"                line2 \u003d \"todo \" + line.substring(9);","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"jared-ee"},"content":"                todo(j, line2, tasks, done, type);","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"jared-ee"},"content":"            else if (line.charAt(3) \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"jared-ee"},"content":"                int bracket \u003d line.indexOf(\u0027(\u0027);","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"jared-ee"},"content":"                line2 \u003d \"deadline \" + line.substring(9, bracket) + \"/by \" + line.substring(bracket+5, line.length()-1);","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"jared-ee"},"content":"                deadline(j, line2, tasks, done, type);","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"jared-ee"},"content":"            else {","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"jared-ee"},"content":"                int bracket \u003d line.indexOf(\u0027(\u0027);","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"jared-ee"},"content":"                int colon \u003d line.indexOf(\u0027:\u0027);","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"jared-ee"},"content":"                line2 \u003d \"event \" + line.substring(9, bracket) + \"/from \"","lastModifiedDate":"2023-02-16"},{"lineNumber":39,"author":{"gitId":"jared-ee"},"content":"                        + line.substring(bracket+6, colon-2) + \"/to \" + line.substring(colon+2, line.length()-1);","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"jared-ee"},"content":"                event(j, line2, tasks, done, type);","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-16"},{"lineNumber":42,"author":{"gitId":"jared-ee"},"content":"            if (line.charAt(6) \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2023-02-16"},{"lineNumber":43,"author":{"gitId":"jared-ee"},"content":"                done.remove(j);","lastModifiedDate":"2023-02-16"},{"lineNumber":44,"author":{"gitId":"jared-ee"},"content":"                done.add(j, \"[X]\");","lastModifiedDate":"2023-02-16"},{"lineNumber":45,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-16"},{"lineNumber":46,"author":{"gitId":"jared-ee"},"content":"            j++;","lastModifiedDate":"2023-02-16"},{"lineNumber":47,"author":{"gitId":"jared-ee"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":49,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":50,"author":{"gitId":"jared-ee"},"content":"    public static void mark(int i, String line, ArrayList\u003cString\u003e tasks, ArrayList\u003cString\u003e done, ArrayList\u003cString\u003e type) throws DukeException {","lastModifiedDate":"2023-02-09"},{"lineNumber":51,"author":{"gitId":"jared-ee"},"content":"        int number \u003d Integer.parseInt(line.substring(5));","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"jared-ee"},"content":"        if (number \u003e i || number \u003c 1) {","lastModifiedDate":"2023-02-09"},{"lineNumber":53,"author":{"gitId":"jared-ee"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-09"},{"lineNumber":54,"author":{"gitId":"jared-ee"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":55,"author":{"gitId":"jared-ee"},"content":"        done.remove(number - 1);","lastModifiedDate":"2023-02-09"},{"lineNumber":56,"author":{"gitId":"jared-ee"},"content":"        done.add(number - 1, \"[X]\");","lastModifiedDate":"2023-02-09"},{"lineNumber":57,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-02-09"},{"lineNumber":58,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"  \" + type.get(number - 1) + \"[X]\" + tasks.get(number - 1));","lastModifiedDate":"2023-02-09"},{"lineNumber":59,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":60,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":61,"author":{"gitId":"jared-ee"},"content":"    public static void unmark(int i, String line, ArrayList\u003cString\u003e tasks, ArrayList\u003cString\u003e done, ArrayList\u003cString\u003e type) throws DukeException {","lastModifiedDate":"2023-02-09"},{"lineNumber":62,"author":{"gitId":"jared-ee"},"content":"        int number \u003d Integer.parseInt(line.substring(7));","lastModifiedDate":"2023-02-09"},{"lineNumber":63,"author":{"gitId":"jared-ee"},"content":"        if (number \u003e i || number \u003c 1) {","lastModifiedDate":"2023-02-09"},{"lineNumber":64,"author":{"gitId":"jared-ee"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-09"},{"lineNumber":65,"author":{"gitId":"jared-ee"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":66,"author":{"gitId":"jared-ee"},"content":"        done.remove(number - 1);","lastModifiedDate":"2023-02-09"},{"lineNumber":67,"author":{"gitId":"jared-ee"},"content":"        done.add(number - 1, \"[ ]\");","lastModifiedDate":"2023-02-09"},{"lineNumber":68,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"Ok, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-02-09"},{"lineNumber":69,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"  \" + type.get(number - 1) + \"[ ]\" + tasks.get(number - 1));","lastModifiedDate":"2023-02-09"},{"lineNumber":70,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":71,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":72,"author":{"gitId":"jared-ee"},"content":"    public static void delete(int i, String line, ArrayList\u003cString\u003e tasks, ArrayList\u003cString\u003e done, ArrayList\u003cString\u003e type) throws DukeException {","lastModifiedDate":"2023-02-09"},{"lineNumber":73,"author":{"gitId":"jared-ee"},"content":"        int number \u003d Integer.parseInt(line.substring(7));","lastModifiedDate":"2023-02-09"},{"lineNumber":74,"author":{"gitId":"jared-ee"},"content":"        if (number \u003e i || number \u003c 1) {","lastModifiedDate":"2023-02-09"},{"lineNumber":75,"author":{"gitId":"jared-ee"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-09"},{"lineNumber":76,"author":{"gitId":"jared-ee"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":77,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-02-09"},{"lineNumber":78,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"  \" + type.get(number - 1) + done.get(number - 1) + tasks.get(number - 1));","lastModifiedDate":"2023-02-09"},{"lineNumber":79,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"Now you have \" + (i - 1) + \" tasks in the list.\");","lastModifiedDate":"2023-02-09"},{"lineNumber":80,"author":{"gitId":"jared-ee"},"content":"        tasks.remove(number - 1);","lastModifiedDate":"2023-02-09"},{"lineNumber":81,"author":{"gitId":"jared-ee"},"content":"        done.remove(number - 1);","lastModifiedDate":"2023-02-09"},{"lineNumber":82,"author":{"gitId":"jared-ee"},"content":"        type.remove(number - 1);","lastModifiedDate":"2023-02-09"},{"lineNumber":83,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":84,"author":{"gitId":"jared-ee"},"content":"    public static void todo(int i, String line, ArrayList\u003cString\u003e tasks, ArrayList\u003cString\u003e done, ArrayList\u003cString\u003e type) throws DukeException {","lastModifiedDate":"2023-02-09"},{"lineNumber":85,"author":{"gitId":"jared-ee"},"content":"        if (line.equals(\"todo\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":86,"author":{"gitId":"jared-ee"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-09"},{"lineNumber":87,"author":{"gitId":"jared-ee"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":88,"author":{"gitId":"jared-ee"},"content":"        tasks.add(line.substring(4));","lastModifiedDate":"2023-02-09"},{"lineNumber":89,"author":{"gitId":"jared-ee"},"content":"        type.add(\"[T]\");","lastModifiedDate":"2023-02-09"},{"lineNumber":90,"author":{"gitId":"jared-ee"},"content":"        done.add(\"[ ]\");","lastModifiedDate":"2023-02-09"},{"lineNumber":91,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":92,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":93,"author":{"gitId":"jared-ee"},"content":"    public static void deadline(int i, String line, ArrayList\u003cString\u003e tasks, ArrayList\u003cString\u003e done, ArrayList\u003cString\u003e type) {","lastModifiedDate":"2023-02-09"},{"lineNumber":94,"author":{"gitId":"jared-ee"},"content":"        int slash \u003d line.indexOf(\"/\");","lastModifiedDate":"2023-02-09"},{"lineNumber":95,"author":{"gitId":"jared-ee"},"content":"        String description \u003d line.substring(8, slash-1);","lastModifiedDate":"2023-02-09"},{"lineNumber":96,"author":{"gitId":"jared-ee"},"content":"        String by \u003d line.substring(slash+4);","lastModifiedDate":"2023-02-09"},{"lineNumber":97,"author":{"gitId":"jared-ee"},"content":"        tasks.add(description + \" (by: \" + by + \")\");","lastModifiedDate":"2023-02-09"},{"lineNumber":98,"author":{"gitId":"jared-ee"},"content":"        type.add(\"[D]\");","lastModifiedDate":"2023-02-09"},{"lineNumber":99,"author":{"gitId":"jared-ee"},"content":"        done.add(\"[ ]\");","lastModifiedDate":"2023-02-09"},{"lineNumber":100,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":101,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":102,"author":{"gitId":"jared-ee"},"content":"    public static void event(int i, String line, ArrayList\u003cString\u003e tasks, ArrayList\u003cString\u003e done, ArrayList\u003cString\u003e type) {","lastModifiedDate":"2023-02-09"},{"lineNumber":103,"author":{"gitId":"jared-ee"},"content":"        int slash1 \u003d line.indexOf(\"/\");","lastModifiedDate":"2023-02-09"},{"lineNumber":104,"author":{"gitId":"jared-ee"},"content":"        int slash2 \u003d line.indexOf(\"/\", slash1+1);","lastModifiedDate":"2023-02-09"},{"lineNumber":105,"author":{"gitId":"jared-ee"},"content":"        String description \u003d line.substring(5, slash1-1);","lastModifiedDate":"2023-02-09"},{"lineNumber":106,"author":{"gitId":"jared-ee"},"content":"        String from \u003d line.substring(slash1+6, slash2-1);","lastModifiedDate":"2023-02-09"},{"lineNumber":107,"author":{"gitId":"jared-ee"},"content":"        String to \u003d line.substring(slash2+4);","lastModifiedDate":"2023-02-09"},{"lineNumber":108,"author":{"gitId":"jared-ee"},"content":"        tasks.add(description + \" (from \" + from + \" to: \" + to + \")\");","lastModifiedDate":"2023-02-09"},{"lineNumber":109,"author":{"gitId":"jared-ee"},"content":"        type.add(\"[E]\");","lastModifiedDate":"2023-02-09"},{"lineNumber":110,"author":{"gitId":"jared-ee"},"content":"        done.add(\"[ ]\");","lastModifiedDate":"2023-02-09"},{"lineNumber":111,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":112,"author":{"gitId":"jared-ee"},"content":"    public static void main(String[] args){","lastModifiedDate":"2023-02-09"},{"lineNumber":113,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");","lastModifiedDate":"2023-02-09"},{"lineNumber":114,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-02-09"},{"lineNumber":115,"author":{"gitId":"jared-ee"},"content":"        String filePath \u003d \"Duke.txt\";","lastModifiedDate":"2023-02-16"},{"lineNumber":116,"author":{"gitId":"jared-ee"},"content":"        String line;","lastModifiedDate":"2023-02-09"},{"lineNumber":117,"author":{"gitId":"jared-ee"},"content":"        ArrayList\u003cString\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-09"},{"lineNumber":118,"author":{"gitId":"jared-ee"},"content":"        ArrayList\u003cString\u003e done \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-09"},{"lineNumber":119,"author":{"gitId":"jared-ee"},"content":"        ArrayList\u003cString\u003e type \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-09"},{"lineNumber":120,"author":{"gitId":"jared-ee"},"content":"        int i \u003d 0;","lastModifiedDate":"2023-02-09"},{"lineNumber":121,"author":{"gitId":"jared-ee"},"content":"        try {","lastModifiedDate":"2023-02-16"},{"lineNumber":122,"author":{"gitId":"jared-ee"},"content":"            readFileContents(filePath, i, tasks, done, type);","lastModifiedDate":"2023-02-16"},{"lineNumber":123,"author":{"gitId":"jared-ee"},"content":"            i \u003d tasks.size();","lastModifiedDate":"2023-02-16"},{"lineNumber":124,"author":{"gitId":"jared-ee"},"content":"        } catch (FileNotFoundException | DukeException e) {","lastModifiedDate":"2023-02-16"},{"lineNumber":125,"author":{"gitId":"jared-ee"},"content":"            i \u003d 0;","lastModifiedDate":"2023-02-16"},{"lineNumber":126,"author":{"gitId":"jared-ee"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":127,"author":{"gitId":"jared-ee"},"content":"        while (true) {","lastModifiedDate":"2023-02-09"},{"lineNumber":128,"author":{"gitId":"jared-ee"},"content":"            Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-09"},{"lineNumber":129,"author":{"gitId":"jared-ee"},"content":"            line \u003d in.nextLine();","lastModifiedDate":"2023-02-09"},{"lineNumber":130,"author":{"gitId":"jared-ee"},"content":"            if (line.startsWith(\"bye\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":131,"author":{"gitId":"jared-ee"},"content":"                String toFile \u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2023-02-09"},{"lineNumber":132,"author":{"gitId":"jared-ee"},"content":"                for (int j \u003d 0; j \u003c i; j++) {","lastModifiedDate":"2023-02-09"},{"lineNumber":133,"author":{"gitId":"jared-ee"},"content":"                    try {","lastModifiedDate":"2023-02-09"},{"lineNumber":134,"author":{"gitId":"jared-ee"},"content":"                        toFile \u003d toFile + System.lineSeparator() + (j + 1) + \".\" + type.get(j) + done.get(j) + tasks.get(j);","lastModifiedDate":"2023-02-09"},{"lineNumber":135,"author":{"gitId":"jared-ee"},"content":"                    } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":136,"author":{"gitId":"jared-ee"},"content":"                        j++;","lastModifiedDate":"2023-02-09"},{"lineNumber":137,"author":{"gitId":"jared-ee"},"content":"                    }","lastModifiedDate":"2023-02-09"},{"lineNumber":138,"author":{"gitId":"jared-ee"},"content":"                }","lastModifiedDate":"2023-02-09"},{"lineNumber":139,"author":{"gitId":"jared-ee"},"content":"                try {","lastModifiedDate":"2023-02-09"},{"lineNumber":140,"author":{"gitId":"jared-ee"},"content":"                    writeToFile(filePath, toFile);","lastModifiedDate":"2023-02-09"},{"lineNumber":141,"author":{"gitId":"jared-ee"},"content":"                    break;","lastModifiedDate":"2023-02-09"},{"lineNumber":142,"author":{"gitId":"jared-ee"},"content":"                } catch (IOException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":143,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2023-02-09"},{"lineNumber":144,"author":{"gitId":"jared-ee"},"content":"                }","lastModifiedDate":"2023-02-09"},{"lineNumber":145,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":146,"author":{"gitId":"jared-ee"},"content":"            if (line.startsWith(\"list\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":147,"author":{"gitId":"jared-ee"},"content":"                System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-02-09"},{"lineNumber":148,"author":{"gitId":"jared-ee"},"content":"                for (int j \u003d 0; j \u003c i; j++) {","lastModifiedDate":"2023-02-09"},{"lineNumber":149,"author":{"gitId":"jared-ee"},"content":"                    try {","lastModifiedDate":"2023-02-09"},{"lineNumber":150,"author":{"gitId":"jared-ee"},"content":"                        System.out.println((j + 1) + \".\" + type.get(j) + done.get(j) + tasks.get(j));","lastModifiedDate":"2023-02-09"},{"lineNumber":151,"author":{"gitId":"jared-ee"},"content":"                    } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":152,"author":{"gitId":"jared-ee"},"content":"                        j++;","lastModifiedDate":"2023-02-09"},{"lineNumber":153,"author":{"gitId":"jared-ee"},"content":"                    }","lastModifiedDate":"2023-02-09"},{"lineNumber":154,"author":{"gitId":"jared-ee"},"content":"                }","lastModifiedDate":"2023-02-09"},{"lineNumber":155,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":156,"author":{"gitId":"jared-ee"},"content":"            else if (line.startsWith(\"mark\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":157,"author":{"gitId":"jared-ee"},"content":"                try {","lastModifiedDate":"2023-02-09"},{"lineNumber":158,"author":{"gitId":"jared-ee"},"content":"                    mark(i, line, tasks, done, type);","lastModifiedDate":"2023-02-09"},{"lineNumber":159,"author":{"gitId":"jared-ee"},"content":"                } catch (NumberFormatException | IndexOutOfBoundsException | DukeException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":160,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Oops! That isn\u0027t a task in your list.\");","lastModifiedDate":"2023-02-09"},{"lineNumber":161,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Please input only one integer after \u0027mark\u0027, separated by a single whitespace.\");","lastModifiedDate":"2023-02-09"},{"lineNumber":162,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"There are \" + i + \" tasks in your list, so do not input an integer \" +","lastModifiedDate":"2023-02-09"},{"lineNumber":163,"author":{"gitId":"jared-ee"},"content":"                            \"smaller than 1 or larger than \" + i + \".\");","lastModifiedDate":"2023-02-09"},{"lineNumber":164,"author":{"gitId":"jared-ee"},"content":"                }","lastModifiedDate":"2023-02-09"},{"lineNumber":165,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":166,"author":{"gitId":"jared-ee"},"content":"            else if (line.startsWith(\"unmark\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":167,"author":{"gitId":"jared-ee"},"content":"                try {","lastModifiedDate":"2023-02-09"},{"lineNumber":168,"author":{"gitId":"jared-ee"},"content":"                    unmark(i, line, tasks, done, type);","lastModifiedDate":"2023-02-09"},{"lineNumber":169,"author":{"gitId":"jared-ee"},"content":"                } catch (NumberFormatException | IndexOutOfBoundsException | DukeException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":170,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Oops! That isn\u0027t a task in your list.\");","lastModifiedDate":"2023-02-09"},{"lineNumber":171,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Please input only one integer after \u0027mark\u0027, separated by a single whitespace.\");","lastModifiedDate":"2023-02-09"},{"lineNumber":172,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"There are \" + i + \" tasks in your list, so do not input an integer \" +","lastModifiedDate":"2023-02-09"},{"lineNumber":173,"author":{"gitId":"jared-ee"},"content":"                            \"smaller than 1 or larger than \" + i + \".\");","lastModifiedDate":"2023-02-09"},{"lineNumber":174,"author":{"gitId":"jared-ee"},"content":"                }","lastModifiedDate":"2023-02-09"},{"lineNumber":175,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":176,"author":{"gitId":"jared-ee"},"content":"            else if (line.startsWith(\"todo\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":177,"author":{"gitId":"jared-ee"},"content":"                try {","lastModifiedDate":"2023-02-09"},{"lineNumber":178,"author":{"gitId":"jared-ee"},"content":"                    todo(i, line, tasks, done, type);","lastModifiedDate":"2023-02-09"},{"lineNumber":179,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-02-16"},{"lineNumber":180,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"  \" + type.get(i) + \"[ ]\" + tasks.get(i));","lastModifiedDate":"2023-02-16"},{"lineNumber":181,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Now you have \" + (i + 1) + \" tasks in the list.\");","lastModifiedDate":"2023-02-16"},{"lineNumber":182,"author":{"gitId":"jared-ee"},"content":"                    i++;","lastModifiedDate":"2023-02-09"},{"lineNumber":183,"author":{"gitId":"jared-ee"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":184,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Oops! The description of a todo cannot be left empty.\");","lastModifiedDate":"2023-02-09"},{"lineNumber":185,"author":{"gitId":"jared-ee"},"content":"                }","lastModifiedDate":"2023-02-09"},{"lineNumber":186,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":187,"author":{"gitId":"jared-ee"},"content":"            else if (line.startsWith(\"deadline\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":188,"author":{"gitId":"jared-ee"},"content":"                try {","lastModifiedDate":"2023-02-09"},{"lineNumber":189,"author":{"gitId":"jared-ee"},"content":"                    deadline(i, line, tasks, done, type);","lastModifiedDate":"2023-02-09"},{"lineNumber":190,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-02-16"},{"lineNumber":191,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"  \" + type.get(i) + \"[ ]\" + tasks.get(i));","lastModifiedDate":"2023-02-16"},{"lineNumber":192,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Now you have \" + (i + 1) + \" tasks in the list.\");","lastModifiedDate":"2023-02-16"},{"lineNumber":193,"author":{"gitId":"jared-ee"},"content":"                    i++;","lastModifiedDate":"2023-02-09"},{"lineNumber":194,"author":{"gitId":"jared-ee"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":195,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Oops! Did you forget the slash?\");","lastModifiedDate":"2023-02-09"},{"lineNumber":196,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"When specifying deadline, please follow the format below:\");","lastModifiedDate":"2023-02-09"},{"lineNumber":197,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"deadline (task) /by (deadline)\");","lastModifiedDate":"2023-02-09"},{"lineNumber":198,"author":{"gitId":"jared-ee"},"content":"                }","lastModifiedDate":"2023-02-09"},{"lineNumber":199,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":200,"author":{"gitId":"jared-ee"},"content":"            else if (line.startsWith(\"event\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":201,"author":{"gitId":"jared-ee"},"content":"                try {","lastModifiedDate":"2023-02-09"},{"lineNumber":202,"author":{"gitId":"jared-ee"},"content":"                    event(i, line, tasks, done, type);","lastModifiedDate":"2023-02-09"},{"lineNumber":203,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-02-16"},{"lineNumber":204,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"  \" + type.get(i) + \"[ ]\" + tasks.get(i));","lastModifiedDate":"2023-02-16"},{"lineNumber":205,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Now you have \" + (i + 1) + \" tasks in the list.\");","lastModifiedDate":"2023-02-16"},{"lineNumber":206,"author":{"gitId":"jared-ee"},"content":"                    i++;","lastModifiedDate":"2023-02-09"},{"lineNumber":207,"author":{"gitId":"jared-ee"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":208,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Oops! Did you forget the slash?\");","lastModifiedDate":"2023-02-09"},{"lineNumber":209,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"When specifying timeframe, please follow the format below:\");","lastModifiedDate":"2023-02-09"},{"lineNumber":210,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"event (task) /from (starting time) /to (ending time)\");","lastModifiedDate":"2023-02-09"},{"lineNumber":211,"author":{"gitId":"jared-ee"},"content":"                }","lastModifiedDate":"2023-02-09"},{"lineNumber":212,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":213,"author":{"gitId":"jared-ee"},"content":"            else if (line.startsWith(\"delete\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":214,"author":{"gitId":"jared-ee"},"content":"                try {","lastModifiedDate":"2023-02-09"},{"lineNumber":215,"author":{"gitId":"jared-ee"},"content":"                    delete(i, line, tasks, done, type);","lastModifiedDate":"2023-02-09"},{"lineNumber":216,"author":{"gitId":"jared-ee"},"content":"                    i--;","lastModifiedDate":"2023-02-09"},{"lineNumber":217,"author":{"gitId":"jared-ee"},"content":"                } catch (NumberFormatException | IndexOutOfBoundsException | DukeException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":218,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Oops! That isn\u0027t a task in your list.\");","lastModifiedDate":"2023-02-09"},{"lineNumber":219,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Please input only one integer after \u0027delete\u0027, separated by a single whitespace.\");","lastModifiedDate":"2023-02-09"},{"lineNumber":220,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"There are \" + i + \" tasks in your list, so do not input an integer \" +","lastModifiedDate":"2023-02-09"},{"lineNumber":221,"author":{"gitId":"jared-ee"},"content":"                            \"smaller than 1 or larger than \" + i + \".\");","lastModifiedDate":"2023-02-09"},{"lineNumber":222,"author":{"gitId":"jared-ee"},"content":"                }","lastModifiedDate":"2023-02-09"},{"lineNumber":223,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":224,"author":{"gitId":"jared-ee"},"content":"            else {","lastModifiedDate":"2023-02-09"},{"lineNumber":225,"author":{"gitId":"jared-ee"},"content":"                if (!line.startsWith(\"bye\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":226,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"Oops! I\u0027m sorry, I don\u0027t understand that command. Try one of these instead:\");","lastModifiedDate":"2023-02-16"},{"lineNumber":227,"author":{"gitId":"jared-ee"},"content":"                    System.out.println(\"list   mark   unmark   todo   deadline   event\");","lastModifiedDate":"2023-02-09"},{"lineNumber":228,"author":{"gitId":"jared-ee"},"content":"                }","lastModifiedDate":"2023-02-09"},{"lineNumber":229,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":230,"author":{"gitId":"jared-ee"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":231,"author":{"gitId":"jared-ee"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-02-09"},{"lineNumber":232,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":233,"author":{"gitId":"jared-ee"},"content":"}","lastModifiedDate":"2023-02-09"},{"lineNumber":234,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"jared-ee":234}}]
