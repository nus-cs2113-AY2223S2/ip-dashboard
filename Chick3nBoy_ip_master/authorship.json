[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Chick3nBoy"},"content":"# Duke.Duke project template","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Chick3nBoy"},"content":"3. After that, locate the `src/main/java/Duke.Duke.java` file, right-click it, and choose `Run Duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Chick3nBoy":2,"-":22}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"Chick3nBoy"},"content":"Duke is a to-do list that serves as a reminder for you to keep track of the various types of tasks you may have.","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"##Features","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"Chick3nBoy"},"content":"Duke stores 3 types of tasks, todo, deadline and event.","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"Chick3nBoy"},"content":"Todo only requires the task description, deadline additionally requires the time the task is due, and event requires the start and the end timing of the event on top of the description.","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"Chick3nBoy"},"content":"##Todo list are automically saved when duke terminates","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Chick3nBoy"},"content":"The list of tasks is always saved when closing duke, allowing the user to close duke and reaccess the task list in the future.","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":12,"author":{"gitId":"Chick3nBoy"},"content":"#Usage","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"Chick3nBoy"},"content":"###todo - Adds a todo task into the list","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"Chick3nBoy"},"content":"todo TASK_NAME","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":16,"author":{"gitId":"Chick3nBoy"},"content":"###### Example of usage:","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"Chick3nBoy"},"content":"`todo A-JavaDoc`","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"Chick3nBoy"},"content":"###### Expected outcome:","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"Chick3nBoy"},"content":"Adds a todo task with the label T to represent todo and an empty [ ] which indicates its status.","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"Chick3nBoy"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"Chick3nBoy"},"content":"    Added to list:","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"Chick3nBoy"},"content":"    [T][ ] A-JavaDoc","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"Chick3nBoy"},"content":"    Number of tasks: 1","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"Chick3nBoy"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":31,"author":{"gitId":"Chick3nBoy"},"content":"###`deadline` - Adds a deadline task into the list","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"Chick3nBoy"},"content":"deadline TASK_NAME /by DEADLINE","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":34,"author":{"gitId":"Chick3nBoy"},"content":"###### Example of usage:","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":36,"author":{"gitId":"Chick3nBoy"},"content":"`deadline Submit the final version /by Fri, Mar 3rd 2359`","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"Chick3nBoy"},"content":"###### Expected outcome:","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"Chick3nBoy"},"content":"Adds a deadline task with the label D to representing deadline and an empty [ ] which indicates its status.","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"Chick3nBoy"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"Chick3nBoy"},"content":"    Added to list:","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"Chick3nBoy"},"content":"    [D][ ] Submit the final version (by:Fri, Mar 3rd 2359)","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"Chick3nBoy"},"content":"    Number of tasks: 2","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"Chick3nBoy"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"Chick3nBoy"},"content":"### `event` - Adds an event into the list","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"Chick3nBoy"},"content":"event TASK_NAME /from START /to END.","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"Chick3nBoy"},"content":"###### Example of usage:","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"Chick3nBoy"},"content":"`event attend lecture /from 16:00 /to 18:00`","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"Chick3nBoy"},"content":"###### Expected outcome:","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"Chick3nBoy"},"content":"Adds an event into the list with an E to indicate event, [ ] indicates the status of the event.","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"Chick3nBoy"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"Chick3nBoy"},"content":"    Added to list:","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"Chick3nBoy"},"content":"    [E][ ] attend lecture (from: 16:00  to: 18:00)","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"Chick3nBoy"},"content":"    Number of tasks: 3","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"Chick3nBoy"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"Chick3nBoy"},"content":"##`list` - Lists all the tasks recorded","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"Chick3nBoy"},"content":"list","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"Chick3nBoy"},"content":"###### Example of usage:","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"Chick3nBoy"},"content":"`list`","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"Chick3nBoy"},"content":"###### Expected outcome:","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"Chick3nBoy"},"content":"Shows all the existing items in the list. In this test case, the 3 tasks added prior to calling the command list will be shown.","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"Chick3nBoy"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":76,"author":{"gitId":"Chick3nBoy"},"content":"    1.[T][ ] A-JavaDoc","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"Chick3nBoy"},"content":"    2.[D][ ] Submit the final version (by:Fri, Mar 3rd 2359)","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"Chick3nBoy"},"content":"    3.[E][ ] attend lecture (from: 16:00  to: 18:00)","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"Chick3nBoy"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":80,"author":{"gitId":"Chick3nBoy"},"content":"## `mark`- Mark specified task","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"Chick3nBoy"},"content":"mark TASK_INDEX","lastModifiedDate":"2023-03-03"},{"lineNumber":82,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":83,"author":{"gitId":"Chick3nBoy"},"content":"###### Example of usage:","lastModifiedDate":"2023-03-03"},{"lineNumber":84,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":85,"author":{"gitId":"Chick3nBoy"},"content":"`mark 2`","lastModifiedDate":"2023-03-03"},{"lineNumber":86,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":87,"author":{"gitId":"Chick3nBoy"},"content":"This marks the second item in the list as complete, indicated with a [X].","lastModifiedDate":"2023-03-03"},{"lineNumber":88,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":89,"author":{"gitId":"Chick3nBoy"},"content":"###### Expected outcome:","lastModifiedDate":"2023-03-03"},{"lineNumber":90,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":91,"author":{"gitId":"Chick3nBoy"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":92,"author":{"gitId":"Chick3nBoy"},"content":"    Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2023-03-03"},{"lineNumber":93,"author":{"gitId":"Chick3nBoy"},"content":"    [D][X] Submit the final version (by:Fri, Mar 3rd 2359)","lastModifiedDate":"2023-03-03"},{"lineNumber":94,"author":{"gitId":"Chick3nBoy"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":95,"author":{"gitId":"Chick3nBoy"},"content":"##`unmark` - Unmark specified task","lastModifiedDate":"2023-03-03"},{"lineNumber":96,"author":{"gitId":"Chick3nBoy"},"content":"unmark POS_OF_TASK","lastModifiedDate":"2023-03-03"},{"lineNumber":97,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":98,"author":{"gitId":"Chick3nBoy"},"content":"###### Example of usage:","lastModifiedDate":"2023-03-03"},{"lineNumber":99,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":100,"author":{"gitId":"Chick3nBoy"},"content":"`unmark 2`","lastModifiedDate":"2023-03-03"},{"lineNumber":101,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":102,"author":{"gitId":"Chick3nBoy"},"content":"This marks the second item in the list as incomplete, indicated with a [ ].","lastModifiedDate":"2023-03-03"},{"lineNumber":103,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":104,"author":{"gitId":"Chick3nBoy"},"content":"###### Expected outcome:","lastModifiedDate":"2023-03-03"},{"lineNumber":105,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":106,"author":{"gitId":"Chick3nBoy"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":107,"author":{"gitId":"Chick3nBoy"},"content":"        OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2023-03-03"},{"lineNumber":108,"author":{"gitId":"Chick3nBoy"},"content":"    [D][ ] Submit the final version (by:Fri, Mar 3rd 2359)","lastModifiedDate":"2023-03-03"},{"lineNumber":109,"author":{"gitId":"Chick3nBoy"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":110,"author":{"gitId":"Chick3nBoy"},"content":"## `find` - Find tasks that contains the keyword","lastModifiedDate":"2023-03-03"},{"lineNumber":111,"author":{"gitId":"Chick3nBoy"},"content":"find KEYWORD","lastModifiedDate":"2023-03-03"},{"lineNumber":112,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":113,"author":{"gitId":"Chick3nBoy"},"content":"###### Example of usage:","lastModifiedDate":"2023-03-03"},{"lineNumber":114,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":115,"author":{"gitId":"Chick3nBoy"},"content":"`find ice-skating`","lastModifiedDate":"2023-03-03"},{"lineNumber":116,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":117,"author":{"gitId":"Chick3nBoy"},"content":"###### Expected outcome:","lastModifiedDate":"2023-03-03"},{"lineNumber":118,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":119,"author":{"gitId":"Chick3nBoy"},"content":"Lists only the tasks containing the keyword in its TASK_NAME.","lastModifiedDate":"2023-03-03"},{"lineNumber":120,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":121,"author":{"gitId":"Chick3nBoy"},"content":"Here are the matches in your list!","lastModifiedDate":"2023-03-03"},{"lineNumber":122,"author":{"gitId":"Chick3nBoy"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":123,"author":{"gitId":"Chick3nBoy"},"content":"    2.[D][ ] Submit the final version (by:Fri, Mar 3rd 2359)","lastModifiedDate":"2023-03-03"},{"lineNumber":124,"author":{"gitId":"Chick3nBoy"},"content":"    3.[E][ ] attend the lecture (from: 16:00  to: 18:00)","lastModifiedDate":"2023-03-03"},{"lineNumber":125,"author":{"gitId":"Chick3nBoy"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":126,"author":{"gitId":"Chick3nBoy"},"content":"## `delete` - Delete task specified from duke","lastModifiedDate":"2023-03-03"},{"lineNumber":127,"author":{"gitId":"Chick3nBoy"},"content":"delete POS_OF_TASK","lastModifiedDate":"2023-03-03"},{"lineNumber":128,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":129,"author":{"gitId":"Chick3nBoy"},"content":"###### Example of usage:","lastModifiedDate":"2023-03-03"},{"lineNumber":130,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":131,"author":{"gitId":"Chick3nBoy"},"content":"`delete 3`","lastModifiedDate":"2023-03-03"},{"lineNumber":132,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":133,"author":{"gitId":"Chick3nBoy"},"content":"###### Expected outcome:","lastModifiedDate":"2023-03-03"},{"lineNumber":134,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":135,"author":{"gitId":"Chick3nBoy"},"content":"This deletes the third task in the list.","lastModifiedDate":"2023-03-03"},{"lineNumber":136,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":137,"author":{"gitId":"Chick3nBoy"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":138,"author":{"gitId":"Chick3nBoy"},"content":"    Deleting from list:","lastModifiedDate":"2023-03-03"},{"lineNumber":139,"author":{"gitId":"Chick3nBoy"},"content":"    [E][ ] attend the lecture (from: 16:00  to: 18:00)","lastModifiedDate":"2023-03-03"},{"lineNumber":140,"author":{"gitId":"Chick3nBoy"},"content":"    Number of tasks: 2","lastModifiedDate":"2023-03-03"},{"lineNumber":141,"author":{"gitId":"Chick3nBoy"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":142,"author":{"gitId":"Chick3nBoy"},"content":"## `bye` - Shuts down Duke","lastModifiedDate":"2023-03-03"},{"lineNumber":143,"author":{"gitId":"Chick3nBoy"},"content":"bye","lastModifiedDate":"2023-03-03"},{"lineNumber":144,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":145,"author":{"gitId":"Chick3nBoy"},"content":"###### Example of usage:","lastModifiedDate":"2023-03-03"},{"lineNumber":146,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":147,"author":{"gitId":"Chick3nBoy"},"content":"`bye`","lastModifiedDate":"2023-03-03"},{"lineNumber":148,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":149,"author":{"gitId":"Chick3nBoy"},"content":"###### Expected outcome:","lastModifiedDate":"2023-03-03"},{"lineNumber":150,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":151,"author":{"gitId":"Chick3nBoy"},"content":"Closes duke","lastModifiedDate":"2023-03-03"},{"lineNumber":152,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":153,"author":{"gitId":"Chick3nBoy"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":154,"author":{"gitId":"Chick3nBoy"},"content":"    Bye. Hope to see you again soon!","lastModifiedDate":"2023-03-03"},{"lineNumber":155,"author":{"gitId":"Chick3nBoy"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"Chick3nBoy":140,"-":15}},{"path":"src/Storage.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Chick3nBoy"},"content":"Tt/Ym/A-JavaDoc","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"Chick3nBoy"},"content":"Dt/Ym/Submit the final version n/Fri, Mar 3rd 2359","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"Chick3nBoy":2}},{"path":"src/main/java/Duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chick3nBoy"},"content":"package Duke;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"Chick3nBoy"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"Chick3nBoy"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"Chick3nBoy"},"content":"public class Duke {","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"Chick3nBoy"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"Chick3nBoy"},"content":"        Ui.printWelcome();","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"Chick3nBoy"},"content":"        TaskList.initializeTaskNumberAndList();","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Chick3nBoy"},"content":"        run();","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"Chick3nBoy"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"Chick3nBoy"},"content":"    /***","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"Chick3nBoy"},"content":"     * Continuously runs and takes in commands until \"bye\" command has been issued.","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"Chick3nBoy"},"content":"     * @throws IndexOutOfBoundsException when illegal index of task was issued or insufficient command arguments.","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"Chick3nBoy"},"content":"     * @throws NumberFormatException when non-number strings were issued for number only arguments.","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"Chick3nBoy"},"content":"     * @throws DukeException","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"Chick3nBoy"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"Chick3nBoy"},"content":"    private static void run() {","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"Chick3nBoy"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"Chick3nBoy"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"Chick3nBoy"},"content":"        while (!isExit) {","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"Chick3nBoy"},"content":"            try {","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"Chick3nBoy"},"content":"                if (Parser.handleInput(in.nextLine())) {","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"Chick3nBoy"},"content":"                    isExit \u003d true;","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"Chick3nBoy"},"content":"                }","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"Chick3nBoy"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"Chick3nBoy"},"content":"                System.out.println(\"Command used wrongly\");","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"Chick3nBoy"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"Chick3nBoy"},"content":"                System.out.println(\"Number only for argument\");","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"Chick3nBoy"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"Chick3nBoy"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"Chick3nBoy"},"content":"                System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"Chick3nBoy"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"Chick3nBoy"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"Chick3nBoy"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"Chick3nBoy"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"Chick3nBoy":37}},{"path":"src/main/java/Duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chick3nBoy"},"content":"package Duke;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"Chick3nBoy"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"Chick3nBoy"},"content":"}","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"Chick3nBoy":5}},{"path":"src/main/java/Duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chick3nBoy"},"content":"package Duke;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"Chick3nBoy"},"content":"import Duke.Tasks.Task;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"Chick3nBoy"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"Chick3nBoy"},"content":"public class Parser {","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Chick3nBoy"},"content":"    private static final String listCommand \u003d \"list\";","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"Chick3nBoy"},"content":"    private static final String findCommand \u003d \"find\";","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"Chick3nBoy"},"content":"    private static final String byeCommand \u003d \"bye\";","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"Chick3nBoy"},"content":"    private static final String deleteCommand \u003d \"delete\";","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"Chick3nBoy"},"content":"    private static final String markCommand \u003d \"mark\";","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"Chick3nBoy"},"content":"    private static final String unmarkCommand \u003d \"unmark\";","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"Chick3nBoy"},"content":"    private static final String todoCommand \u003d \"todo\";","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"Chick3nBoy"},"content":"    private static final String deadlineCommand \u003d \"deadline\";","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"Chick3nBoy"},"content":"    private static final String eventCommand \u003d \"event\";","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"Chick3nBoy"},"content":"    /***","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"Chick3nBoy"},"content":"     * Takes in user input and carries out respective method based on command type.","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"Chick3nBoy"},"content":"     * @return true if bye command is issued, else returns false","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"Chick3nBoy"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"Chick3nBoy"},"content":"    static boolean handleInput(String inputString) throws IOException, DukeException {","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"Chick3nBoy"},"content":"        String[] command \u003d inputString.split(\" \", 2);","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"Chick3nBoy"},"content":"        switch (command[0]) {","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"Chick3nBoy"},"content":"        case listCommand:","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"Chick3nBoy"},"content":"            TaskList.doList();","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"Chick3nBoy"},"content":"            break;","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"Chick3nBoy"},"content":"        case findCommand:","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"Chick3nBoy"},"content":"            Ui.doFind(TaskList.taskList, command[1]);","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"Chick3nBoy"},"content":"            break;","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"Chick3nBoy"},"content":"        case byeCommand:","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"Chick3nBoy"},"content":"            Ui.doExit();","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"Chick3nBoy"},"content":"            Storage.saveTaskList(TaskList.taskList, TaskList.numberOfTasks);","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"Chick3nBoy"},"content":"            return true;","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"Chick3nBoy"},"content":"        case \"delete\":","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"Chick3nBoy"},"content":"            TaskList.deleteTask(Integer.parseInt(command[1]) - 1);","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"Chick3nBoy"},"content":"            TaskList.numberOfTasks -\u003d 1;","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"Chick3nBoy"},"content":"            break;","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"Chick3nBoy"},"content":"        //mark/unmark command","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"Chick3nBoy"},"content":"        case \"mark\":","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"Chick3nBoy"},"content":"        case \"unmark\":","lastModifiedDate":"2023-02-28"},{"lineNumber":52,"author":{"gitId":"Chick3nBoy"},"content":"            TaskList.doMarkOrUnmarked(command);","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"Chick3nBoy"},"content":"            break;","lastModifiedDate":"2023-02-28"},{"lineNumber":54,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":55,"author":{"gitId":"Chick3nBoy"},"content":"        case \"todo\":","lastModifiedDate":"2023-02-28"},{"lineNumber":56,"author":{"gitId":"Chick3nBoy"},"content":"            TaskList.addTodo(command);","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"Chick3nBoy"},"content":"            TaskList.numberOfTasks +\u003d 1;","lastModifiedDate":"2023-02-28"},{"lineNumber":58,"author":{"gitId":"Chick3nBoy"},"content":"            break;","lastModifiedDate":"2023-02-28"},{"lineNumber":59,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":60,"author":{"gitId":"Chick3nBoy"},"content":"        case \"deadline\":","lastModifiedDate":"2023-02-28"},{"lineNumber":61,"author":{"gitId":"Chick3nBoy"},"content":"            TaskList.addDeadline(command);","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"Chick3nBoy"},"content":"            TaskList.numberOfTasks +\u003d 1;","lastModifiedDate":"2023-02-28"},{"lineNumber":63,"author":{"gitId":"Chick3nBoy"},"content":"            break;","lastModifiedDate":"2023-02-28"},{"lineNumber":64,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":65,"author":{"gitId":"Chick3nBoy"},"content":"        case \"event\":","lastModifiedDate":"2023-02-28"},{"lineNumber":66,"author":{"gitId":"Chick3nBoy"},"content":"            TaskList.addEvent(command);","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"Chick3nBoy"},"content":"            TaskList.numberOfTasks +\u003d 1;","lastModifiedDate":"2023-02-28"},{"lineNumber":68,"author":{"gitId":"Chick3nBoy"},"content":"            break;","lastModifiedDate":"2023-02-28"},{"lineNumber":69,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":70,"author":{"gitId":"Chick3nBoy"},"content":"        /**","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"Chick3nBoy"},"content":"         * Prints unknown command issued when command not detected","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"Chick3nBoy"},"content":"         */","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"Chick3nBoy"},"content":"        default:","lastModifiedDate":"2023-02-28"},{"lineNumber":74,"author":{"gitId":"Chick3nBoy"},"content":"            System.out.println(\"Unknown command issued\");","lastModifiedDate":"2023-02-28"},{"lineNumber":75,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":76,"author":{"gitId":"Chick3nBoy"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":77,"author":{"gitId":"Chick3nBoy"},"content":"        return false;","lastModifiedDate":"2023-02-28"},{"lineNumber":78,"author":{"gitId":"Chick3nBoy"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":79,"author":{"gitId":"Chick3nBoy"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"Chick3nBoy":79}},{"path":"src/main/java/Duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chick3nBoy"},"content":"package Duke;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"Chick3nBoy"},"content":"import Duke.Tasks.Deadline;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"Chick3nBoy"},"content":"import Duke.Tasks.Event;","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"Chick3nBoy"},"content":"import Duke.Tasks.Task;","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"Chick3nBoy"},"content":"import Duke.Tasks.Todo;","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"Chick3nBoy"},"content":"import java.io.File;","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"Chick3nBoy"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"Chick3nBoy"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"Chick3nBoy"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"Chick3nBoy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"Chick3nBoy"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"Chick3nBoy"},"content":"public class Storage {","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"Chick3nBoy"},"content":"    static final String storagePath \u003d \"src/Storage.txt\";","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"Chick3nBoy"},"content":"    static void appendToFile(String filePath, String textToAppend) throws IOException {","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"Chick3nBoy"},"content":"        FileWriter fw \u003d new FileWriter(filePath, true); // create a FileWriter in append mode","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"Chick3nBoy"},"content":"        fw.write(textToAppend);","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"Chick3nBoy"},"content":"        fw.close();","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"Chick3nBoy"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"Chick3nBoy"},"content":"    static void writeToFile(String filePath, String textToAdd) throws IOException {","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"Chick3nBoy"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"Chick3nBoy"},"content":"        fw.write(textToAdd);","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"Chick3nBoy"},"content":"        fw.close();","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"Chick3nBoy"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"Chick3nBoy"},"content":"    /***","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"Chick3nBoy"},"content":"     * Iterates through save file and initializes saved data into taskList and returns","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"Chick3nBoy"},"content":"     * @param taskList","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"Chick3nBoy"},"content":"     * @return int representing number of tasks initialized","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"Chick3nBoy"},"content":"     * @throws FileNotFoundException","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"Chick3nBoy"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"Chick3nBoy"},"content":"    static int initializeTaskList(ArrayList\u003cTask\u003e taskList) throws FileNotFoundException {","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"Chick3nBoy"},"content":"        File f \u003d new File(storagePath); // create a File for the given file path","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"Chick3nBoy"},"content":"        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"Chick3nBoy"},"content":"        int numberOfSaves \u003d 0;","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"Chick3nBoy"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"Chick3nBoy"},"content":"            String saveString \u003d s.nextLine();","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"Chick3nBoy"},"content":"            String[] saveData \u003d saveString.split(\"t/|m/|n/|s/\");","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"Chick3nBoy"},"content":"            switch (saveData[0]) {","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"Chick3nBoy"},"content":"            case \"T\":","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"Chick3nBoy"},"content":"                taskList.add(new Todo(saveData[2]));","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"Chick3nBoy"},"content":"                if (saveData[1].startsWith(\"m/\")) {","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"Chick3nBoy"},"content":"                    if (saveData[1].substring(2).equals(\"X\")) {","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"Chick3nBoy"},"content":"                        taskList.get(numberOfSaves).setDone();","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"Chick3nBoy"},"content":"                    }","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"Chick3nBoy"},"content":"                }","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"Chick3nBoy"},"content":"                numberOfSaves +\u003d 1;","lastModifiedDate":"2023-02-28"},{"lineNumber":52,"author":{"gitId":"Chick3nBoy"},"content":"                break;","lastModifiedDate":"2023-02-28"},{"lineNumber":53,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":54,"author":{"gitId":"Chick3nBoy"},"content":"            case \"D\":","lastModifiedDate":"2023-02-28"},{"lineNumber":55,"author":{"gitId":"Chick3nBoy"},"content":"                taskList.add(new Deadline(saveData[2], saveData[3]));","lastModifiedDate":"2023-02-28"},{"lineNumber":56,"author":{"gitId":"Chick3nBoy"},"content":"                if (saveData[1].startsWith(\"m/\")) {","lastModifiedDate":"2023-02-28"},{"lineNumber":57,"author":{"gitId":"Chick3nBoy"},"content":"                    if (saveData[1].substring(2).equals(\"X\")) {","lastModifiedDate":"2023-02-28"},{"lineNumber":58,"author":{"gitId":"Chick3nBoy"},"content":"                        taskList.get(numberOfSaves).setDone();","lastModifiedDate":"2023-02-28"},{"lineNumber":59,"author":{"gitId":"Chick3nBoy"},"content":"                    }","lastModifiedDate":"2023-02-28"},{"lineNumber":60,"author":{"gitId":"Chick3nBoy"},"content":"                }","lastModifiedDate":"2023-02-28"},{"lineNumber":61,"author":{"gitId":"Chick3nBoy"},"content":"                numberOfSaves +\u003d 1;","lastModifiedDate":"2023-02-28"},{"lineNumber":62,"author":{"gitId":"Chick3nBoy"},"content":"                break;","lastModifiedDate":"2023-02-28"},{"lineNumber":63,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":64,"author":{"gitId":"Chick3nBoy"},"content":"            case \"E\":","lastModifiedDate":"2023-02-28"},{"lineNumber":65,"author":{"gitId":"Chick3nBoy"},"content":"                taskList.add(new Event(saveData[2], saveData[3], saveData[4]));","lastModifiedDate":"2023-02-28"},{"lineNumber":66,"author":{"gitId":"Chick3nBoy"},"content":"                if (saveData[1].startsWith(\"m/\")) {","lastModifiedDate":"2023-02-28"},{"lineNumber":67,"author":{"gitId":"Chick3nBoy"},"content":"                    if (saveData[1].substring(2).equals(\"X\")) {","lastModifiedDate":"2023-02-28"},{"lineNumber":68,"author":{"gitId":"Chick3nBoy"},"content":"                        taskList.get(numberOfSaves).setDone();","lastModifiedDate":"2023-02-28"},{"lineNumber":69,"author":{"gitId":"Chick3nBoy"},"content":"                    }","lastModifiedDate":"2023-02-28"},{"lineNumber":70,"author":{"gitId":"Chick3nBoy"},"content":"                }","lastModifiedDate":"2023-02-28"},{"lineNumber":71,"author":{"gitId":"Chick3nBoy"},"content":"                numberOfSaves +\u003d 1;","lastModifiedDate":"2023-02-28"},{"lineNumber":72,"author":{"gitId":"Chick3nBoy"},"content":"                break;","lastModifiedDate":"2023-02-28"},{"lineNumber":73,"author":{"gitId":"Chick3nBoy"},"content":"            }","lastModifiedDate":"2023-02-28"},{"lineNumber":74,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":75,"author":{"gitId":"Chick3nBoy"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":76,"author":{"gitId":"Chick3nBoy"},"content":"        return numberOfSaves;","lastModifiedDate":"2023-02-28"},{"lineNumber":77,"author":{"gitId":"Chick3nBoy"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":78,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":79,"author":{"gitId":"Chick3nBoy"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":80,"author":{"gitId":"Chick3nBoy"},"content":"     * Write save data of taskList to text file.","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"Chick3nBoy"},"content":"     * @param taskList Array list of task","lastModifiedDate":"2023-03-03"},{"lineNumber":82,"author":{"gitId":"Chick3nBoy"},"content":"     * @param numberOfTasks number of tasks in taskList","lastModifiedDate":"2023-03-03"},{"lineNumber":83,"author":{"gitId":"Chick3nBoy"},"content":"     * @throws IOException when appendToFile gives errors","lastModifiedDate":"2023-03-03"},{"lineNumber":84,"author":{"gitId":"Chick3nBoy"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":85,"author":{"gitId":"Chick3nBoy"},"content":"    static void saveTaskList(ArrayList\u003cTask\u003e taskList, int numberOfTasks) throws IOException {","lastModifiedDate":"2023-02-28"},{"lineNumber":86,"author":{"gitId":"Chick3nBoy"},"content":"        writeToFile(storagePath, \"\");","lastModifiedDate":"2023-02-28"},{"lineNumber":87,"author":{"gitId":"Chick3nBoy"},"content":"        for (int i \u003d 0; i \u003c numberOfTasks; i +\u003d 1) {","lastModifiedDate":"2023-02-28"},{"lineNumber":88,"author":{"gitId":"Chick3nBoy"},"content":"            Task taskIndex \u003d taskList.get(i);","lastModifiedDate":"2023-02-28"},{"lineNumber":89,"author":{"gitId":"Chick3nBoy"},"content":"            appendToFile(storagePath, taskIndex.saveInfo());","lastModifiedDate":"2023-02-28"},{"lineNumber":90,"author":{"gitId":"Chick3nBoy"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":91,"author":{"gitId":"Chick3nBoy"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":92,"author":{"gitId":"Chick3nBoy"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"Chick3nBoy":92}},{"path":"src/main/java/Duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chick3nBoy"},"content":"package Duke;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"Chick3nBoy"},"content":"import Duke.Tasks.Deadline;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"Chick3nBoy"},"content":"import Duke.Tasks.Event;","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"Chick3nBoy"},"content":"import Duke.Tasks.Task;","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"Chick3nBoy"},"content":"import Duke.Tasks.Todo;","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"Chick3nBoy"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"Chick3nBoy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"Chick3nBoy"},"content":"public class TaskList {","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"Chick3nBoy"},"content":"    static int numberOfTasks \u003d 0;","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"Chick3nBoy"},"content":"    static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"Chick3nBoy"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"Chick3nBoy"},"content":"     * Adds Todo to taskList and prints add task message.","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"Chick3nBoy"},"content":"     * @param command Array of string containing command arguments.","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"Chick3nBoy"},"content":"     * @throws DukeException Thrown when illegal arguments are give.","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"Chick3nBoy"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"Chick3nBoy"},"content":"    public static void addTodo(String[] command) {","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"Chick3nBoy"},"content":"        taskList.add(new Todo(command[1]));","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"Chick3nBoy"},"content":"        taskList.get(numberOfTasks).printAddTask(numberOfTasks);","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"Chick3nBoy"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"Chick3nBoy"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"Chick3nBoy"},"content":"     * Adds Deadline to taskList and prints add task message.","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"Chick3nBoy"},"content":"     * @param command Array of string containing command arguments.","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"Chick3nBoy"},"content":"     * @throws DukeException Thrown when illegal arguments are give.","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"Chick3nBoy"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"Chick3nBoy"},"content":"    public static void addDeadline(String[] command) throws DukeException {","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"Chick3nBoy"},"content":"        if (!command[1].contains(\"/by\")) {","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"Chick3nBoy"},"content":"            System.out.println(\"Error: Use /by\");","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"Chick3nBoy"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"Chick3nBoy"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"Chick3nBoy"},"content":"        String[] deadLineInputs \u003d command[1].split(\"/by \", 2);","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"Chick3nBoy"},"content":"        taskList.add(new Deadline(deadLineInputs[0], deadLineInputs[1]));","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"Chick3nBoy"},"content":"        taskList.get(numberOfTasks).printAddTask(numberOfTasks);","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"Chick3nBoy"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"Chick3nBoy"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"Chick3nBoy"},"content":"     * Adds event to taskList and prints add task message.","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"Chick3nBoy"},"content":"     * @param command Array of string containing command arguments.","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"Chick3nBoy"},"content":"     * @throws DukeException Thrown when illegal arguments are give.","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"Chick3nBoy"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"Chick3nBoy"},"content":"    public static void addEvent(String[] command) throws DukeException {","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"Chick3nBoy"},"content":"        if (!(command[1].contains(\"/from \") \u0026\u0026 command[1].contains(\"/to \"))) {","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"Chick3nBoy"},"content":"            System.out.println(\"Error: Use /from and /to\");","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"Chick3nBoy"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"Chick3nBoy"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"Chick3nBoy"},"content":"        String[] eventInputs \u003d command[1].split(\"/from|/to\");","lastModifiedDate":"2023-02-28"},{"lineNumber":52,"author":{"gitId":"Chick3nBoy"},"content":"        taskList.add(new Event(eventInputs[0], eventInputs[1], eventInputs[2]));","lastModifiedDate":"2023-02-28"},{"lineNumber":53,"author":{"gitId":"Chick3nBoy"},"content":"        taskList.get(numberOfTasks).printAddTask(numberOfTasks);","lastModifiedDate":"2023-02-28"},{"lineNumber":54,"author":{"gitId":"Chick3nBoy"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":55,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":56,"author":{"gitId":"Chick3nBoy"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"Chick3nBoy"},"content":"     * Marks or unmarks specified task in taskList based on command and","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"Chick3nBoy"},"content":"     * prints mark or unmark message respectively.","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"Chick3nBoy"},"content":"     * @param command Array of string containing command arguments.","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"Chick3nBoy"},"content":"     * @throws DukeException Thrown when illegal index is given.","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"Chick3nBoy"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"Chick3nBoy"},"content":"    public static void doMarkOrUnmarked(String[] command) throws DukeException {","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"Chick3nBoy"},"content":"        int indexToChange \u003d Integer.parseInt(command[1]) - 1;","lastModifiedDate":"2023-02-28"},{"lineNumber":64,"author":{"gitId":"Chick3nBoy"},"content":"        //Check for error","lastModifiedDate":"2023-02-28"},{"lineNumber":65,"author":{"gitId":"Chick3nBoy"},"content":"        if (indexToChange \u003e\u003d numberOfTasks || indexToChange \u003c 0) {","lastModifiedDate":"2023-02-28"},{"lineNumber":66,"author":{"gitId":"Chick3nBoy"},"content":"            System.out.println(\"Index not found\");","lastModifiedDate":"2023-02-28"},{"lineNumber":67,"author":{"gitId":"Chick3nBoy"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-28"},{"lineNumber":68,"author":{"gitId":"Chick3nBoy"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":69,"author":{"gitId":"Chick3nBoy"},"content":"        if (command[0].equals(\"mark\")) {","lastModifiedDate":"2023-02-28"},{"lineNumber":70,"author":{"gitId":"Chick3nBoy"},"content":"            taskList.get(indexToChange).setDone();","lastModifiedDate":"2023-02-28"},{"lineNumber":71,"author":{"gitId":"Chick3nBoy"},"content":"            taskList.get(indexToChange).printMarkedTask();","lastModifiedDate":"2023-02-28"},{"lineNumber":72,"author":{"gitId":"Chick3nBoy"},"content":"        } else {","lastModifiedDate":"2023-02-28"},{"lineNumber":73,"author":{"gitId":"Chick3nBoy"},"content":"            taskList.get(indexToChange).setNotDone();","lastModifiedDate":"2023-02-28"},{"lineNumber":74,"author":{"gitId":"Chick3nBoy"},"content":"            taskList.get(indexToChange).printUnmarkedTask();","lastModifiedDate":"2023-02-28"},{"lineNumber":75,"author":{"gitId":"Chick3nBoy"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":76,"author":{"gitId":"Chick3nBoy"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":77,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":78,"author":{"gitId":"Chick3nBoy"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"Chick3nBoy"},"content":"     * Removes task of specified index from taskList and prints delete message.","lastModifiedDate":"2023-03-03"},{"lineNumber":80,"author":{"gitId":"Chick3nBoy"},"content":"     * @param indexToDelete Index of task to delete","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"Chick3nBoy"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":82,"author":{"gitId":"Chick3nBoy"},"content":"    public static void deleteTask(int indexToDelete) {","lastModifiedDate":"2023-03-03"},{"lineNumber":83,"author":{"gitId":"Chick3nBoy"},"content":"        taskList.get(indexToDelete).printDeleteTask(numberOfTasks);","lastModifiedDate":"2023-03-03"},{"lineNumber":84,"author":{"gitId":"Chick3nBoy"},"content":"        taskList.remove(indexToDelete);","lastModifiedDate":"2023-03-03"},{"lineNumber":85,"author":{"gitId":"Chick3nBoy"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":86,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":87,"author":{"gitId":"Chick3nBoy"},"content":"    /***","lastModifiedDate":"2023-03-03"},{"lineNumber":88,"author":{"gitId":"Chick3nBoy"},"content":"     * Iterates taskList and prints each tasks with respective information","lastModifiedDate":"2023-03-03"},{"lineNumber":89,"author":{"gitId":"Chick3nBoy"},"content":"     * when \"list\" command is issued.","lastModifiedDate":"2023-03-03"},{"lineNumber":90,"author":{"gitId":"Chick3nBoy"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":91,"author":{"gitId":"Chick3nBoy"},"content":"    static void doList() {","lastModifiedDate":"2023-03-03"},{"lineNumber":92,"author":{"gitId":"Chick3nBoy"},"content":"        System.out.println(Ui.BLANK + Ui.LINE);","lastModifiedDate":"2023-03-03"},{"lineNumber":93,"author":{"gitId":"Chick3nBoy"},"content":"        for (int i \u003d 0; i \u003c numberOfTasks; i +\u003d 1) {","lastModifiedDate":"2023-03-03"},{"lineNumber":94,"author":{"gitId":"Chick3nBoy"},"content":"            System.out.print(Ui.BLANK + (i + 1) + \".\");","lastModifiedDate":"2023-03-03"},{"lineNumber":95,"author":{"gitId":"Chick3nBoy"},"content":"            taskList.get(i).printTask();","lastModifiedDate":"2023-03-03"},{"lineNumber":96,"author":{"gitId":"Chick3nBoy"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":97,"author":{"gitId":"Chick3nBoy"},"content":"        System.out.println(Ui.BLANK + Ui.LINE);","lastModifiedDate":"2023-03-03"},{"lineNumber":98,"author":{"gitId":"Chick3nBoy"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":99,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":100,"author":{"gitId":"Chick3nBoy"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":101,"author":{"gitId":"Chick3nBoy"},"content":"     * Initializes numberOfTasks and taskList when running duke.","lastModifiedDate":"2023-03-03"},{"lineNumber":102,"author":{"gitId":"Chick3nBoy"},"content":"     * @throws FileNotFoundException Thrown when save file is not found","lastModifiedDate":"2023-03-03"},{"lineNumber":103,"author":{"gitId":"Chick3nBoy"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":104,"author":{"gitId":"Chick3nBoy"},"content":"    static void initializeTaskNumberAndList() {","lastModifiedDate":"2023-03-03"},{"lineNumber":105,"author":{"gitId":"Chick3nBoy"},"content":"        try {","lastModifiedDate":"2023-02-28"},{"lineNumber":106,"author":{"gitId":"Chick3nBoy"},"content":"            numberOfTasks +\u003d Storage.initializeTaskList(taskList);","lastModifiedDate":"2023-02-28"},{"lineNumber":107,"author":{"gitId":"Chick3nBoy"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-02-28"},{"lineNumber":108,"author":{"gitId":"Chick3nBoy"},"content":"            System.out.println(\"Save file not found\");","lastModifiedDate":"2023-02-28"},{"lineNumber":109,"author":{"gitId":"Chick3nBoy"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":110,"author":{"gitId":"Chick3nBoy"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":111,"author":{"gitId":"Chick3nBoy"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"Chick3nBoy":111}},{"path":"src/main/java/Duke/Tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chick3nBoy"},"content":"package Duke.Tasks;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"Chick3nBoy"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"Chick3nBoy"},"content":"    protected String dueDate;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"Chick3nBoy"},"content":"    public Deadline(String taskName, String dueDate) {","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"Chick3nBoy"},"content":"        super(taskName);","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"Chick3nBoy"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"Chick3nBoy"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"Chick3nBoy"},"content":"    /***","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"Chick3nBoy"},"content":"     * Outputs task type","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"Chick3nBoy"},"content":"     * @return String representing task type.","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"Chick3nBoy"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"Chick3nBoy"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"Chick3nBoy"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"Chick3nBoy"},"content":"        return \"D\";","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"Chick3nBoy"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"Chick3nBoy"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"Chick3nBoy"},"content":"     * Prints information of task with format.","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"Chick3nBoy"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"Chick3nBoy"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"Chick3nBoy"},"content":"    public void printTask() {","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"Chick3nBoy"},"content":"        System.out.print(\"[\");","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"Chick3nBoy"},"content":"        System.out.print(getTaskType());","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"Chick3nBoy"},"content":"        System.out.print(\"][\");","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"Chick3nBoy"},"content":"        if (super.isDone) {","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"Chick3nBoy"},"content":"            System.out.print(\"X\");","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"Chick3nBoy"},"content":"        } else {","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"Chick3nBoy"},"content":"            System.out.print(\" \");","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"Chick3nBoy"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"Chick3nBoy"},"content":"        System.out.println(\"] \" + this.getTaskName() + \"(by:\" + dueDate + \")\");","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"Chick3nBoy"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"Chick3nBoy"},"content":"    /***","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"Chick3nBoy"},"content":"     * Outputs a formatted String containing information of the task saved in a text file.","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"Chick3nBoy"},"content":"     * @return String containing information of the task.","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"Chick3nBoy"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"Chick3nBoy"},"content":"    @Override","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"Chick3nBoy"},"content":"    public String saveInfo() {","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"Chick3nBoy"},"content":"        return getTaskType() + \"t/\" +","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"Chick3nBoy"},"content":"                (isDone ? \"X\" : \"Y\") + \"m/\" +","lastModifiedDate":"2023-02-17"},{"lineNumber":44,"author":{"gitId":"Chick3nBoy"},"content":"                taskName + \"n/\" +","lastModifiedDate":"2023-02-17"},{"lineNumber":45,"author":{"gitId":"Chick3nBoy"},"content":"                dueDate + \"\\n\";","lastModifiedDate":"2023-02-17"},{"lineNumber":46,"author":{"gitId":"Chick3nBoy"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":47,"author":{"gitId":"Chick3nBoy"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"Chick3nBoy":47}},{"path":"src/main/java/Duke/Tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chick3nBoy"},"content":"package Duke.Tasks;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"Chick3nBoy"},"content":"public class Event extends Task {","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"Chick3nBoy"},"content":"    protected String startDate;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"Chick3nBoy"},"content":"    protected String endDate;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"Chick3nBoy"},"content":"    public Event(String taskName, String startDate, String endDate) {","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"Chick3nBoy"},"content":"        super(taskName);","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"Chick3nBoy"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"Chick3nBoy"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"Chick3nBoy"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"Chick3nBoy"},"content":"    /***","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"Chick3nBoy"},"content":"     * Outputs task type","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"Chick3nBoy"},"content":"     * @return String representing task type.","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"Chick3nBoy"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"Chick3nBoy"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"Chick3nBoy"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"Chick3nBoy"},"content":"        return \"E\";","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"Chick3nBoy"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"Chick3nBoy"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"Chick3nBoy"},"content":"     * Prints information of task with format.","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"Chick3nBoy"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"Chick3nBoy"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"Chick3nBoy"},"content":"    public void printTask() {","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"Chick3nBoy"},"content":"        System.out.print(\"[\");","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"Chick3nBoy"},"content":"        System.out.print(getTaskType());","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"Chick3nBoy"},"content":"        System.out.print(\"][\");","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"Chick3nBoy"},"content":"        if (super.isDone) {","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"Chick3nBoy"},"content":"            System.out.print(\"X\");","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"Chick3nBoy"},"content":"        } else {","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"Chick3nBoy"},"content":"            System.out.print(\" \");","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"Chick3nBoy"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"Chick3nBoy"},"content":"        System.out.println(\"] \" + this.getTaskName() + \"(from:\" + startDate + \" to:\" + endDate + \")\");","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"Chick3nBoy"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"Chick3nBoy"},"content":"    /***","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"Chick3nBoy"},"content":"     * Outputs a formatted String containing information of the task saved in a text file.","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"Chick3nBoy"},"content":"     * @return String containing information of the task.","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"Chick3nBoy"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"Chick3nBoy"},"content":"    @Override","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"Chick3nBoy"},"content":"    public String saveInfo() {","lastModifiedDate":"2023-02-17"},{"lineNumber":44,"author":{"gitId":"Chick3nBoy"},"content":"        return getTaskType() + \"t/\" +","lastModifiedDate":"2023-02-17"},{"lineNumber":45,"author":{"gitId":"Chick3nBoy"},"content":"                (isDone ? \"X\" : \"Y\") + \"m/\" +","lastModifiedDate":"2023-02-17"},{"lineNumber":46,"author":{"gitId":"Chick3nBoy"},"content":"                taskName + \"n/\" +","lastModifiedDate":"2023-02-17"},{"lineNumber":47,"author":{"gitId":"Chick3nBoy"},"content":"                startDate + \"s/\" +","lastModifiedDate":"2023-02-17"},{"lineNumber":48,"author":{"gitId":"Chick3nBoy"},"content":"                endDate + \"\\n\";","lastModifiedDate":"2023-02-17"},{"lineNumber":49,"author":{"gitId":"Chick3nBoy"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":50,"author":{"gitId":"Chick3nBoy"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"Chick3nBoy":50}},{"path":"src/main/java/Duke/Tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chick3nBoy"},"content":"package Duke.Tasks;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"Chick3nBoy"},"content":"public class Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"Chick3nBoy"},"content":"    private static final String LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"Chick3nBoy"},"content":"    private static final String BLANK \u003d \"    \";","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"Chick3nBoy"},"content":"    protected String taskName;","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"Chick3nBoy"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"Chick3nBoy"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Chick3nBoy"},"content":"     * Instantiation of task","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"Chick3nBoy"},"content":"     * @param taskName Name of task","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"Chick3nBoy"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"Chick3nBoy"},"content":"    public Task(String taskName) {","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"Chick3nBoy"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"Chick3nBoy"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"Chick3nBoy"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"Chick3nBoy"},"content":"    public void setDone() {","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"Chick3nBoy"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"Chick3nBoy"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"Chick3nBoy"},"content":"    public void setNotDone() {","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"Chick3nBoy"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"Chick3nBoy"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"Chick3nBoy"},"content":"    public String getTaskName() {","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"Chick3nBoy"},"content":"        return taskName;","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"Chick3nBoy"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"Chick3nBoy"},"content":"    /***","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"Chick3nBoy"},"content":"     * Outputs task type","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"Chick3nBoy"},"content":"     * @return String representing task type. Method is overridden in children classes.","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"Chick3nBoy"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"Chick3nBoy"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"Chick3nBoy"},"content":"        return \"error with print task type override\";","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"Chick3nBoy"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"Chick3nBoy"},"content":"    ;","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"Chick3nBoy"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"Chick3nBoy"},"content":"     * Prints information of task with format. Overridden by deadline and event.","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"Chick3nBoy"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"Chick3nBoy"},"content":"    public void printTask() {","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"Chick3nBoy"},"content":"        System.out.print(\"[\");","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"Chick3nBoy"},"content":"        System.out.print(getTaskType());","lastModifiedDate":"2023-02-17"},{"lineNumber":47,"author":{"gitId":"Chick3nBoy"},"content":"        System.out.print(\"][\");","lastModifiedDate":"2023-02-02"},{"lineNumber":48,"author":{"gitId":"Chick3nBoy"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-02-02"},{"lineNumber":49,"author":{"gitId":"Chick3nBoy"},"content":"            System.out.print(\"X\");","lastModifiedDate":"2023-02-02"},{"lineNumber":50,"author":{"gitId":"Chick3nBoy"},"content":"        } else {","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"Chick3nBoy"},"content":"            System.out.print(\" \");","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"Chick3nBoy"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":53,"author":{"gitId":"Chick3nBoy"},"content":"        System.out.println(\"] \" + this.getTaskName());","lastModifiedDate":"2023-02-02"},{"lineNumber":54,"author":{"gitId":"Chick3nBoy"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":55,"author":{"gitId":"Chick3nBoy"},"content":"    /***","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"Chick3nBoy"},"content":"     * Prints message with information of task being added to taskList.","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"Chick3nBoy"},"content":"     * @param taskNumber int representing index of task in taskList","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"Chick3nBoy"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"Chick3nBoy"},"content":"    public void printAddTask(int taskNumber) {","lastModifiedDate":"2023-02-17"},{"lineNumber":60,"author":{"gitId":"Chick3nBoy"},"content":"        System.out.println(BLANK + LINE);","lastModifiedDate":"2023-02-02"},{"lineNumber":61,"author":{"gitId":"Chick3nBoy"},"content":"        System.out.println(BLANK + \"Added to list:\");","lastModifiedDate":"2023-02-02"},{"lineNumber":62,"author":{"gitId":"Chick3nBoy"},"content":"        System.out.print(BLANK);","lastModifiedDate":"2023-02-02"},{"lineNumber":63,"author":{"gitId":"Chick3nBoy"},"content":"        printTask();","lastModifiedDate":"2023-02-02"},{"lineNumber":64,"author":{"gitId":"Chick3nBoy"},"content":"        System.out.println(BLANK + \"Number of tasks: \" + (taskNumber + 1));","lastModifiedDate":"2023-02-17"},{"lineNumber":65,"author":{"gitId":"Chick3nBoy"},"content":"        System.out.println(BLANK + LINE);","lastModifiedDate":"2023-02-17"},{"lineNumber":66,"author":{"gitId":"Chick3nBoy"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":67,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":68,"author":{"gitId":"Chick3nBoy"},"content":"    /***","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"Chick3nBoy"},"content":"     * Prints message with information of task being deleted from taskList.","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"Chick3nBoy"},"content":"     * @param numberOfTask int representing number of task in list","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"Chick3nBoy"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"Chick3nBoy"},"content":"    public void printDeleteTask(int numberOfTask) {","lastModifiedDate":"2023-02-17"},{"lineNumber":73,"author":{"gitId":"Chick3nBoy"},"content":"        System.out.println(BLANK + LINE);","lastModifiedDate":"2023-02-17"},{"lineNumber":74,"author":{"gitId":"Chick3nBoy"},"content":"        System.out.println(BLANK + \"Deleting from list:\");","lastModifiedDate":"2023-02-17"},{"lineNumber":75,"author":{"gitId":"Chick3nBoy"},"content":"        System.out.print(BLANK);","lastModifiedDate":"2023-02-17"},{"lineNumber":76,"author":{"gitId":"Chick3nBoy"},"content":"        printTask();","lastModifiedDate":"2023-02-17"},{"lineNumber":77,"author":{"gitId":"Chick3nBoy"},"content":"        System.out.println(BLANK + \"Number of tasks: \" + (numberOfTask - 1));","lastModifiedDate":"2023-02-17"},{"lineNumber":78,"author":{"gitId":"Chick3nBoy"},"content":"        System.out.println(BLANK + LINE);","lastModifiedDate":"2023-02-02"},{"lineNumber":79,"author":{"gitId":"Chick3nBoy"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":80,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":81,"author":{"gitId":"Chick3nBoy"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":82,"author":{"gitId":"Chick3nBoy"},"content":"     * Prints message of task being marked.","lastModifiedDate":"2023-03-03"},{"lineNumber":83,"author":{"gitId":"Chick3nBoy"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":84,"author":{"gitId":"Chick3nBoy"},"content":"    public void printMarkedTask() {","lastModifiedDate":"2023-02-02"},{"lineNumber":85,"author":{"gitId":"Chick3nBoy"},"content":"        System.out.println(BLANK + LINE);","lastModifiedDate":"2023-02-02"},{"lineNumber":86,"author":{"gitId":"Chick3nBoy"},"content":"        System.out.println(BLANK + \"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-02-02"},{"lineNumber":87,"author":{"gitId":"Chick3nBoy"},"content":"        System.out.print(BLANK);","lastModifiedDate":"2023-02-02"},{"lineNumber":88,"author":{"gitId":"Chick3nBoy"},"content":"        printTask();","lastModifiedDate":"2023-02-02"},{"lineNumber":89,"author":{"gitId":"Chick3nBoy"},"content":"        System.out.println(BLANK + LINE);","lastModifiedDate":"2023-02-02"},{"lineNumber":90,"author":{"gitId":"Chick3nBoy"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":91,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":92,"author":{"gitId":"Chick3nBoy"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":93,"author":{"gitId":"Chick3nBoy"},"content":"     * Prints message of task being unmarked.","lastModifiedDate":"2023-03-03"},{"lineNumber":94,"author":{"gitId":"Chick3nBoy"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":95,"author":{"gitId":"Chick3nBoy"},"content":"    public void printUnmarkedTask() {","lastModifiedDate":"2023-02-02"},{"lineNumber":96,"author":{"gitId":"Chick3nBoy"},"content":"        System.out.println(BLANK + LINE);","lastModifiedDate":"2023-02-02"},{"lineNumber":97,"author":{"gitId":"Chick3nBoy"},"content":"        System.out.println(BLANK + \"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-02-02"},{"lineNumber":98,"author":{"gitId":"Chick3nBoy"},"content":"        System.out.print(BLANK);","lastModifiedDate":"2023-02-02"},{"lineNumber":99,"author":{"gitId":"Chick3nBoy"},"content":"        printTask();","lastModifiedDate":"2023-02-02"},{"lineNumber":100,"author":{"gitId":"Chick3nBoy"},"content":"        System.out.println(BLANK + LINE);","lastModifiedDate":"2023-02-02"},{"lineNumber":101,"author":{"gitId":"Chick3nBoy"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":102,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":103,"author":{"gitId":"Chick3nBoy"},"content":"    /***","lastModifiedDate":"2023-03-03"},{"lineNumber":104,"author":{"gitId":"Chick3nBoy"},"content":"     * Outputs a formatted String containing information of the task saved in a text file.","lastModifiedDate":"2023-03-03"},{"lineNumber":105,"author":{"gitId":"Chick3nBoy"},"content":"     * Overridden by respective children classes.","lastModifiedDate":"2023-03-03"},{"lineNumber":106,"author":{"gitId":"Chick3nBoy"},"content":"     * @return String containing information of the task.","lastModifiedDate":"2023-03-03"},{"lineNumber":107,"author":{"gitId":"Chick3nBoy"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":108,"author":{"gitId":"Chick3nBoy"},"content":"    public String saveInfo() {","lastModifiedDate":"2023-02-17"},{"lineNumber":109,"author":{"gitId":"Chick3nBoy"},"content":"        return \"error with save info override\" + \"\\n\";","lastModifiedDate":"2023-02-17"},{"lineNumber":110,"author":{"gitId":"Chick3nBoy"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":111,"author":{"gitId":"Chick3nBoy"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"Chick3nBoy":111}},{"path":"src/main/java/Duke/Tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chick3nBoy"},"content":"package Duke.Tasks;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"Chick3nBoy"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"Chick3nBoy"},"content":"    public Todo(String taskName) {","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"Chick3nBoy"},"content":"        super(taskName);","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"Chick3nBoy"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"Chick3nBoy"},"content":"    /***","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Chick3nBoy"},"content":"     * Outputs task type","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Chick3nBoy"},"content":"     * @return String representing task type.","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Chick3nBoy"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"Chick3nBoy"},"content":"    @Override","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"Chick3nBoy"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"Chick3nBoy"},"content":"        return \"T\";","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"Chick3nBoy"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"Chick3nBoy"},"content":"    /***","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"Chick3nBoy"},"content":"     * Outputs a formatted String containing information of the task saved in a text file.","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"Chick3nBoy"},"content":"     * @return String containing information of the task.","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"Chick3nBoy"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"Chick3nBoy"},"content":"    @Override","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"Chick3nBoy"},"content":"    public String saveInfo() {","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"Chick3nBoy"},"content":"        return getTaskType() + \"t/\" +","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"Chick3nBoy"},"content":"                (isDone ? \"X\" : \"Y\") + \"m/\" +","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"Chick3nBoy"},"content":"                taskName + \"\\n\";","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"Chick3nBoy"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"Chick3nBoy"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"Chick3nBoy":27}},{"path":"src/main/java/Duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chick3nBoy"},"content":"package Duke;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"Chick3nBoy"},"content":"import Duke.Tasks.Task;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"Chick3nBoy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"Chick3nBoy"},"content":"public class Ui {","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"Chick3nBoy"},"content":"    static final String LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"Chick3nBoy"},"content":"    static final String BLANK \u003d \"    \";","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"Chick3nBoy"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"Chick3nBoy"},"content":"     * Prints run message when by is called","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"Chick3nBoy"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"Chick3nBoy"},"content":"    static void printWelcome() {","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"Chick3nBoy"},"content":"        String logo \u003d BLANK + LINE + \"\\n\"","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"Chick3nBoy"},"content":"                + BLANK + \"Hello! I\u0027m Duke.Duke\\n\"","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"Chick3nBoy"},"content":"                + BLANK + \"What can I do for you?\\n\"","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"Chick3nBoy"},"content":"                + BLANK + LINE;","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"Chick3nBoy"},"content":"        System.out.println(\"\\n\" + logo);","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"Chick3nBoy"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"Chick3nBoy"},"content":"    static void doFind(ArrayList\u003cTask\u003e taskList, String keyString) {","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"Chick3nBoy"},"content":"        System.out.println(BLANK + LINE);","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"Chick3nBoy"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i +\u003d 1) {","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"Chick3nBoy"},"content":"            if (taskList.get(i).getTaskName().contains(keyString)) {","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"Chick3nBoy"},"content":"                System.out.print(BLANK + (i + 1) + \".\");","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"Chick3nBoy"},"content":"                taskList.get(i).printTask();","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"Chick3nBoy"},"content":"            }","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"Chick3nBoy"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"Chick3nBoy"},"content":"        System.out.println(BLANK + LINE);","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"Chick3nBoy"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"Chick3nBoy"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"Chick3nBoy"},"content":"     * Prints goodbye message when by is called","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"Chick3nBoy"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"Chick3nBoy"},"content":"    static void doExit() {","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"Chick3nBoy"},"content":"        System.out.println(BLANK + LINE);","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"Chick3nBoy"},"content":"        System.out.println(BLANK + \"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"Chick3nBoy"},"content":"        System.out.println(BLANK + LINE);","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"Chick3nBoy"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"Chick3nBoy"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"Chick3nBoy":42}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Chick3nBoy"},"content":"java -classpath ..\\bin Duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Chick3nBoy":1,"-":20}}]
