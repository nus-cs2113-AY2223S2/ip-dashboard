[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Chick3nBoy"},"content":"# Duke.Duke project template","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Chick3nBoy"},"content":"3. After that, locate the `src/main/java/Duke.Duke.java` file, right-click it, and choose `Run Duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Chick3nBoy":2,"-":22}},{"path":"src/Storage.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Chick3nBoy"},"content":"Tt/Ym/hello","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"Chick3nBoy"},"content":"Dt/Ym/bye n/now","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"Chick3nBoy"},"content":"Et/Ym/hi n/ now s/ later","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"Chick3nBoy":3}},{"path":"src/main/java/Duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chick3nBoy"},"content":"package Duke;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"Chick3nBoy"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"Chick3nBoy"},"content":"    protected String dueDate;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"Chick3nBoy"},"content":"    Deadline(String taskName, String dueDate) {","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"Chick3nBoy"},"content":"        super(taskName);","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"Chick3nBoy"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"Chick3nBoy"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"Chick3nBoy"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"Chick3nBoy"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"Chick3nBoy"},"content":"        return \"D\";","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"Chick3nBoy"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"Chick3nBoy"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"Chick3nBoy"},"content":"    public void printTask() {","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"Chick3nBoy"},"content":"        System.out.print(\"[\");","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"Chick3nBoy"},"content":"        System.out.print(getTaskType());","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"Chick3nBoy"},"content":"        System.out.print(\"][\");","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"Chick3nBoy"},"content":"        if (super.isDone) {","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"Chick3nBoy"},"content":"            System.out.print(\"X\");","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"Chick3nBoy"},"content":"        } else {","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"Chick3nBoy"},"content":"            System.out.print(\" \");","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"Chick3nBoy"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"Chick3nBoy"},"content":"        System.out.println(\"] \" + this.getTaskName() + \"(by:\" + dueDate + \")\");","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"Chick3nBoy"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"Chick3nBoy"},"content":"    @Override","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"Chick3nBoy"},"content":"    public String saveInfo () {","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"Chick3nBoy"},"content":"        return  getTaskType() + \"t/\" +","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"Chick3nBoy"},"content":"                (isDone ? \"X\" : \"Y\") + \"m/\" +","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"Chick3nBoy"},"content":"                taskName + \"n/\" +","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"Chick3nBoy"},"content":"                dueDate + \"\\n\";","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"Chick3nBoy"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"Chick3nBoy"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"Chick3nBoy":33}},{"path":"src/main/java/Duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chick3nBoy"},"content":"package Duke;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"Chick3nBoy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"Chick3nBoy"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"Chick3nBoy"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"Chick3nBoy"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"Chick3nBoy"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"Chick3nBoy"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"Chick3nBoy"},"content":"import java.io.File;","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"Chick3nBoy"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"Chick3nBoy"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"Chick3nBoy"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"Chick3nBoy"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"Chick3nBoy"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"Chick3nBoy"},"content":"public class Duke {","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"Chick3nBoy"},"content":"    private static final String LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"Chick3nBoy"},"content":"    private static final String BLANK \u003d \"    \";","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"Chick3nBoy"},"content":"    private static final String storagePath \u003d \"src/Storage.txt\";","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"Chick3nBoy"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"Chick3nBoy"},"content":"        printWelcome();","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"Chick3nBoy"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"Chick3nBoy"},"content":"        String inputString;","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"Chick3nBoy"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"Chick3nBoy"},"content":"        int numberOfTasks \u003d 0;","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"Chick3nBoy"},"content":"        try {","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"Chick3nBoy"},"content":"            numberOfTasks +\u003d initializeTaskList(storagePath, taskList);","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"Chick3nBoy"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"Chick3nBoy"},"content":"            System.out.println(\"Save file not found\");","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"Chick3nBoy"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"Chick3nBoy"},"content":"        while (true) {","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"Chick3nBoy"},"content":"            try {","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"Chick3nBoy"},"content":"                inputString \u003d in.nextLine();","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"Chick3nBoy"},"content":"                String[] command \u003d inputString.split(\" \", 2);","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"Chick3nBoy"},"content":"                switch (command[0]) {","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"Chick3nBoy"},"content":"                case \"list\":","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"Chick3nBoy"},"content":"                    doList(taskList, numberOfTasks);","lastModifiedDate":"2023-02-17"},{"lineNumber":44,"author":{"gitId":"Chick3nBoy"},"content":"                    break;","lastModifiedDate":"2023-02-17"},{"lineNumber":45,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":46,"author":{"gitId":"Chick3nBoy"},"content":"                case \"bye\":","lastModifiedDate":"2023-02-17"},{"lineNumber":47,"author":{"gitId":"Chick3nBoy"},"content":"                    doExit();","lastModifiedDate":"2023-02-17"},{"lineNumber":48,"author":{"gitId":"Chick3nBoy"},"content":"                    saveTaskList(taskList, numberOfTasks);","lastModifiedDate":"2023-02-17"},{"lineNumber":49,"author":{"gitId":"Chick3nBoy"},"content":"                    return;","lastModifiedDate":"2023-02-17"},{"lineNumber":50,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":51,"author":{"gitId":"Chick3nBoy"},"content":"                case \"delete\":","lastModifiedDate":"2023-02-17"},{"lineNumber":52,"author":{"gitId":"Chick3nBoy"},"content":"                    deleteTask(taskList, Integer.parseInt(command[1]) - 1   , numberOfTasks);","lastModifiedDate":"2023-02-17"},{"lineNumber":53,"author":{"gitId":"Chick3nBoy"},"content":"                    numberOfTasks -\u003d 1;","lastModifiedDate":"2023-02-17"},{"lineNumber":54,"author":{"gitId":"Chick3nBoy"},"content":"                    break;","lastModifiedDate":"2023-02-17"},{"lineNumber":55,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":56,"author":{"gitId":"Chick3nBoy"},"content":"                //mark/unmark command","lastModifiedDate":"2023-02-17"},{"lineNumber":57,"author":{"gitId":"Chick3nBoy"},"content":"                case \"mark\":","lastModifiedDate":"2023-02-17"},{"lineNumber":58,"author":{"gitId":"Chick3nBoy"},"content":"                case \"unmark\":","lastModifiedDate":"2023-02-17"},{"lineNumber":59,"author":{"gitId":"Chick3nBoy"},"content":"                    doMarkOrUnmarked(taskList, numberOfTasks, command);","lastModifiedDate":"2023-02-17"},{"lineNumber":60,"author":{"gitId":"Chick3nBoy"},"content":"                    break;","lastModifiedDate":"2023-02-17"},{"lineNumber":61,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":62,"author":{"gitId":"Chick3nBoy"},"content":"                //add task to list","lastModifiedDate":"2023-02-17"},{"lineNumber":63,"author":{"gitId":"Chick3nBoy"},"content":"                case \"todo\":","lastModifiedDate":"2023-02-17"},{"lineNumber":64,"author":{"gitId":"Chick3nBoy"},"content":"                    addTodo(taskList, numberOfTasks, command);","lastModifiedDate":"2023-02-17"},{"lineNumber":65,"author":{"gitId":"Chick3nBoy"},"content":"                    numberOfTasks +\u003d 1;","lastModifiedDate":"2023-02-17"},{"lineNumber":66,"author":{"gitId":"Chick3nBoy"},"content":"                    break;","lastModifiedDate":"2023-02-17"},{"lineNumber":67,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":68,"author":{"gitId":"Chick3nBoy"},"content":"                case \"deadline\":","lastModifiedDate":"2023-02-17"},{"lineNumber":69,"author":{"gitId":"Chick3nBoy"},"content":"                    addDeadline(taskList, numberOfTasks, command);","lastModifiedDate":"2023-02-17"},{"lineNumber":70,"author":{"gitId":"Chick3nBoy"},"content":"                    numberOfTasks +\u003d 1;","lastModifiedDate":"2023-02-17"},{"lineNumber":71,"author":{"gitId":"Chick3nBoy"},"content":"                    break;","lastModifiedDate":"2023-02-17"},{"lineNumber":72,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":73,"author":{"gitId":"Chick3nBoy"},"content":"                case \"event\":","lastModifiedDate":"2023-02-17"},{"lineNumber":74,"author":{"gitId":"Chick3nBoy"},"content":"                    addEvent(taskList, numberOfTasks, command);","lastModifiedDate":"2023-02-17"},{"lineNumber":75,"author":{"gitId":"Chick3nBoy"},"content":"                    numberOfTasks +\u003d 1;","lastModifiedDate":"2023-02-17"},{"lineNumber":76,"author":{"gitId":"Chick3nBoy"},"content":"                    break;","lastModifiedDate":"2023-02-17"},{"lineNumber":77,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":78,"author":{"gitId":"Chick3nBoy"},"content":"                default:","lastModifiedDate":"2023-02-17"},{"lineNumber":79,"author":{"gitId":"Chick3nBoy"},"content":"                    System.out.println(\"Unknown command issued\");","lastModifiedDate":"2023-02-17"},{"lineNumber":80,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":81,"author":{"gitId":"Chick3nBoy"},"content":"                }","lastModifiedDate":"2023-02-17"},{"lineNumber":82,"author":{"gitId":"Chick3nBoy"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":83,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":84,"author":{"gitId":"Chick3nBoy"},"content":"            catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":85,"author":{"gitId":"Chick3nBoy"},"content":"                System.out.println(\"Wrong index\");","lastModifiedDate":"2023-02-17"},{"lineNumber":86,"author":{"gitId":"Chick3nBoy"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":87,"author":{"gitId":"Chick3nBoy"},"content":"            catch (NumberFormatException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":88,"author":{"gitId":"Chick3nBoy"},"content":"                System.out.println(\"Number only for argument\");","lastModifiedDate":"2023-02-17"},{"lineNumber":89,"author":{"gitId":"Chick3nBoy"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":90,"author":{"gitId":"Chick3nBoy"},"content":"            catch (DukeException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":91,"author":{"gitId":"Chick3nBoy"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":92,"author":{"gitId":"Chick3nBoy"},"content":"            catch (IOException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":93,"author":{"gitId":"Chick3nBoy"},"content":"                System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2023-02-17"},{"lineNumber":94,"author":{"gitId":"Chick3nBoy"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":95,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":96,"author":{"gitId":"Chick3nBoy"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":97,"author":{"gitId":"Chick3nBoy"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":98,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":99,"author":{"gitId":"Chick3nBoy"},"content":"    private static void saveTaskList(ArrayList\u003cTask\u003e taskList, int numberOfTasks) throws IOException {","lastModifiedDate":"2023-02-17"},{"lineNumber":100,"author":{"gitId":"Chick3nBoy"},"content":"        writeToFile(storagePath, \"\");","lastModifiedDate":"2023-02-17"},{"lineNumber":101,"author":{"gitId":"Chick3nBoy"},"content":"        for (int i \u003d 0; i \u003c numberOfTasks; i +\u003d 1) {","lastModifiedDate":"2023-02-17"},{"lineNumber":102,"author":{"gitId":"Chick3nBoy"},"content":"            Task taskIndex \u003d taskList.get(i);","lastModifiedDate":"2023-02-17"},{"lineNumber":103,"author":{"gitId":"Chick3nBoy"},"content":"            appendToFile(storagePath, taskIndex.saveInfo());","lastModifiedDate":"2023-02-17"},{"lineNumber":104,"author":{"gitId":"Chick3nBoy"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":105,"author":{"gitId":"Chick3nBoy"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":106,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":107,"author":{"gitId":"Chick3nBoy"},"content":"    private static int initializeTaskList(String filePath, ArrayList\u003cTask\u003e taskList) throws FileNotFoundException {","lastModifiedDate":"2023-02-17"},{"lineNumber":108,"author":{"gitId":"Chick3nBoy"},"content":"        File f \u003d new File(filePath); // create a File for the given file path","lastModifiedDate":"2023-02-17"},{"lineNumber":109,"author":{"gitId":"Chick3nBoy"},"content":"        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source","lastModifiedDate":"2023-02-17"},{"lineNumber":110,"author":{"gitId":"Chick3nBoy"},"content":"        int numberOfSaves \u003d 0;","lastModifiedDate":"2023-02-17"},{"lineNumber":111,"author":{"gitId":"Chick3nBoy"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2023-02-17"},{"lineNumber":112,"author":{"gitId":"Chick3nBoy"},"content":"            String saveString \u003d s.nextLine();","lastModifiedDate":"2023-02-17"},{"lineNumber":113,"author":{"gitId":"Chick3nBoy"},"content":"            String[] saveData \u003d saveString.split(\"t/|m/|n/|s/\");","lastModifiedDate":"2023-02-17"},{"lineNumber":114,"author":{"gitId":"Chick3nBoy"},"content":"            switch (saveData[0]) {","lastModifiedDate":"2023-02-17"},{"lineNumber":115,"author":{"gitId":"Chick3nBoy"},"content":"            case \"T\":","lastModifiedDate":"2023-02-17"},{"lineNumber":116,"author":{"gitId":"Chick3nBoy"},"content":"                taskList.add(new Todo(saveData[2]));","lastModifiedDate":"2023-02-17"},{"lineNumber":117,"author":{"gitId":"Chick3nBoy"},"content":"                if (saveData[1].startsWith(\"m/\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":118,"author":{"gitId":"Chick3nBoy"},"content":"                    if (saveData[1].substring(2) \u003d\u003d \"X\") {","lastModifiedDate":"2023-02-17"},{"lineNumber":119,"author":{"gitId":"Chick3nBoy"},"content":"                        taskList.get(numberOfSaves).setDone();","lastModifiedDate":"2023-02-17"},{"lineNumber":120,"author":{"gitId":"Chick3nBoy"},"content":"                    }","lastModifiedDate":"2023-02-17"},{"lineNumber":121,"author":{"gitId":"Chick3nBoy"},"content":"                }","lastModifiedDate":"2023-02-17"},{"lineNumber":122,"author":{"gitId":"Chick3nBoy"},"content":"                numberOfSaves +\u003d 1;","lastModifiedDate":"2023-02-17"},{"lineNumber":123,"author":{"gitId":"Chick3nBoy"},"content":"                break;","lastModifiedDate":"2023-02-17"},{"lineNumber":124,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":125,"author":{"gitId":"Chick3nBoy"},"content":"            case \"D\":","lastModifiedDate":"2023-02-17"},{"lineNumber":126,"author":{"gitId":"Chick3nBoy"},"content":"                taskList.add(new Deadline(saveData[2], saveData[3]));","lastModifiedDate":"2023-02-17"},{"lineNumber":127,"author":{"gitId":"Chick3nBoy"},"content":"                if (saveData[1].startsWith(\"m/\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":128,"author":{"gitId":"Chick3nBoy"},"content":"                    if (saveData[1].substring(2) \u003d\u003d \"X\") {","lastModifiedDate":"2023-02-17"},{"lineNumber":129,"author":{"gitId":"Chick3nBoy"},"content":"                        taskList.get(numberOfSaves).setDone();","lastModifiedDate":"2023-02-17"},{"lineNumber":130,"author":{"gitId":"Chick3nBoy"},"content":"                    }","lastModifiedDate":"2023-02-17"},{"lineNumber":131,"author":{"gitId":"Chick3nBoy"},"content":"                }","lastModifiedDate":"2023-02-17"},{"lineNumber":132,"author":{"gitId":"Chick3nBoy"},"content":"                numberOfSaves +\u003d 1;","lastModifiedDate":"2023-02-17"},{"lineNumber":133,"author":{"gitId":"Chick3nBoy"},"content":"                break;","lastModifiedDate":"2023-02-17"},{"lineNumber":134,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":135,"author":{"gitId":"Chick3nBoy"},"content":"            case \"E\":","lastModifiedDate":"2023-02-17"},{"lineNumber":136,"author":{"gitId":"Chick3nBoy"},"content":"                taskList.add(new Event(saveData[2], saveData[3], saveData[4]));","lastModifiedDate":"2023-02-17"},{"lineNumber":137,"author":{"gitId":"Chick3nBoy"},"content":"                if (saveData[1].startsWith(\"m/\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":138,"author":{"gitId":"Chick3nBoy"},"content":"                    if (saveData[1].substring(2) \u003d\u003d \"X\") {","lastModifiedDate":"2023-02-17"},{"lineNumber":139,"author":{"gitId":"Chick3nBoy"},"content":"                        taskList.get(numberOfSaves).setDone();","lastModifiedDate":"2023-02-17"},{"lineNumber":140,"author":{"gitId":"Chick3nBoy"},"content":"                    }","lastModifiedDate":"2023-02-17"},{"lineNumber":141,"author":{"gitId":"Chick3nBoy"},"content":"                }","lastModifiedDate":"2023-02-17"},{"lineNumber":142,"author":{"gitId":"Chick3nBoy"},"content":"                numberOfSaves +\u003d 1;","lastModifiedDate":"2023-02-17"},{"lineNumber":143,"author":{"gitId":"Chick3nBoy"},"content":"                break;","lastModifiedDate":"2023-02-17"},{"lineNumber":144,"author":{"gitId":"Chick3nBoy"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":145,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":146,"author":{"gitId":"Chick3nBoy"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":147,"author":{"gitId":"Chick3nBoy"},"content":"        return numberOfSaves;","lastModifiedDate":"2023-02-17"},{"lineNumber":148,"author":{"gitId":"Chick3nBoy"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":149,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":150,"author":{"gitId":"Chick3nBoy"},"content":"    private static void appendToFile(String filePath, String textToAppend) throws IOException {","lastModifiedDate":"2023-02-17"},{"lineNumber":151,"author":{"gitId":"Chick3nBoy"},"content":"        FileWriter fw \u003d new FileWriter(filePath, true); // create a FileWriter in append mode","lastModifiedDate":"2023-02-17"},{"lineNumber":152,"author":{"gitId":"Chick3nBoy"},"content":"        fw.write(textToAppend);","lastModifiedDate":"2023-02-17"},{"lineNumber":153,"author":{"gitId":"Chick3nBoy"},"content":"        fw.close();","lastModifiedDate":"2023-02-17"},{"lineNumber":154,"author":{"gitId":"Chick3nBoy"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":155,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":156,"author":{"gitId":"Chick3nBoy"},"content":"    private static void writeToFile(String filePath, String textToAdd) throws IOException {","lastModifiedDate":"2023-02-17"},{"lineNumber":157,"author":{"gitId":"Chick3nBoy"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2023-02-17"},{"lineNumber":158,"author":{"gitId":"Chick3nBoy"},"content":"        fw.write(textToAdd);","lastModifiedDate":"2023-02-17"},{"lineNumber":159,"author":{"gitId":"Chick3nBoy"},"content":"        fw.close();","lastModifiedDate":"2023-02-17"},{"lineNumber":160,"author":{"gitId":"Chick3nBoy"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":161,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":162,"author":{"gitId":"Chick3nBoy"},"content":"    private static void addTodo(ArrayList\u003cTask\u003e taskList, int numberOfTasks, String[] command) {","lastModifiedDate":"2023-02-17"},{"lineNumber":163,"author":{"gitId":"Chick3nBoy"},"content":"            taskList.add(new Todo(command[1]));","lastModifiedDate":"2023-02-17"},{"lineNumber":164,"author":{"gitId":"Chick3nBoy"},"content":"            taskList.get(numberOfTasks).printAddTask(numberOfTasks);","lastModifiedDate":"2023-02-17"},{"lineNumber":165,"author":{"gitId":"Chick3nBoy"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":166,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":167,"author":{"gitId":"Chick3nBoy"},"content":"    private static void addDeadline (ArrayList\u003cTask\u003e taskList, int numberOfTasks, String[] command) throws DukeException {","lastModifiedDate":"2023-02-17"},{"lineNumber":168,"author":{"gitId":"Chick3nBoy"},"content":"            if (!command[1].contains(\"/by\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":169,"author":{"gitId":"Chick3nBoy"},"content":"                System.out.println(\"Error: Use /by\");","lastModifiedDate":"2023-02-17"},{"lineNumber":170,"author":{"gitId":"Chick3nBoy"},"content":"                throw new DukeException();","lastModifiedDate":"2023-02-17"},{"lineNumber":171,"author":{"gitId":"Chick3nBoy"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":172,"author":{"gitId":"Chick3nBoy"},"content":"            String[] deadLineInputs \u003d command[1].split(\"/by \", 2);","lastModifiedDate":"2023-02-17"},{"lineNumber":173,"author":{"gitId":"Chick3nBoy"},"content":"            taskList.add(new Deadline(deadLineInputs[0],deadLineInputs[1]));","lastModifiedDate":"2023-02-17"},{"lineNumber":174,"author":{"gitId":"Chick3nBoy"},"content":"            taskList.get(numberOfTasks).printAddTask(numberOfTasks);","lastModifiedDate":"2023-02-17"},{"lineNumber":175,"author":{"gitId":"Chick3nBoy"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":176,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":177,"author":{"gitId":"Chick3nBoy"},"content":"    private static void addEvent(ArrayList\u003cTask\u003e taskList, int numberOfTasks, String[] command) throws DukeException {","lastModifiedDate":"2023-02-17"},{"lineNumber":178,"author":{"gitId":"Chick3nBoy"},"content":"        if (!(command[1].contains(\"/from \") \u0026\u0026 command[1].contains(\"/to \"))) {","lastModifiedDate":"2023-02-17"},{"lineNumber":179,"author":{"gitId":"Chick3nBoy"},"content":"            System.out.println(\"Error: Use /from and /to\");","lastModifiedDate":"2023-02-17"},{"lineNumber":180,"author":{"gitId":"Chick3nBoy"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-17"},{"lineNumber":181,"author":{"gitId":"Chick3nBoy"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":182,"author":{"gitId":"Chick3nBoy"},"content":"            String[] eventInputs \u003d command[1].split(\"/from|/to\");","lastModifiedDate":"2023-02-17"},{"lineNumber":183,"author":{"gitId":"Chick3nBoy"},"content":"            taskList.add(new Event(eventInputs[0], eventInputs[1], eventInputs[2]));","lastModifiedDate":"2023-02-17"},{"lineNumber":184,"author":{"gitId":"Chick3nBoy"},"content":"            taskList.get(numberOfTasks).printAddTask(numberOfTasks);","lastModifiedDate":"2023-02-17"},{"lineNumber":185,"author":{"gitId":"Chick3nBoy"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":186,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":187,"author":{"gitId":"Chick3nBoy"},"content":"    private static void doMarkOrUnmarked (ArrayList\u003cTask\u003e taskList, int numberOfTasks, String[] command) throws DukeException{","lastModifiedDate":"2023-02-17"},{"lineNumber":188,"author":{"gitId":"Chick3nBoy"},"content":"        int indexToChange \u003d Integer.parseInt(command[1]) - 1;","lastModifiedDate":"2023-02-17"},{"lineNumber":189,"author":{"gitId":"Chick3nBoy"},"content":"        //Check for error","lastModifiedDate":"2023-02-17"},{"lineNumber":190,"author":{"gitId":"Chick3nBoy"},"content":"        if (indexToChange \u003e\u003d numberOfTasks || indexToChange \u003c 0) {","lastModifiedDate":"2023-02-17"},{"lineNumber":191,"author":{"gitId":"Chick3nBoy"},"content":"            System.out.println(\"Index not found\");","lastModifiedDate":"2023-02-17"},{"lineNumber":192,"author":{"gitId":"Chick3nBoy"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-17"},{"lineNumber":193,"author":{"gitId":"Chick3nBoy"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":194,"author":{"gitId":"Chick3nBoy"},"content":"        if (command[0].equals(\"mark\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":195,"author":{"gitId":"Chick3nBoy"},"content":"            taskList.get(indexToChange).setDone();","lastModifiedDate":"2023-02-17"},{"lineNumber":196,"author":{"gitId":"Chick3nBoy"},"content":"            taskList.get(indexToChange).printMarkedTask();","lastModifiedDate":"2023-02-17"},{"lineNumber":197,"author":{"gitId":"Chick3nBoy"},"content":"        } else {","lastModifiedDate":"2023-02-17"},{"lineNumber":198,"author":{"gitId":"Chick3nBoy"},"content":"            taskList.get(indexToChange).setNotDone();","lastModifiedDate":"2023-02-17"},{"lineNumber":199,"author":{"gitId":"Chick3nBoy"},"content":"            taskList.get(indexToChange).printUnmarkedTask();","lastModifiedDate":"2023-02-17"},{"lineNumber":200,"author":{"gitId":"Chick3nBoy"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":201,"author":{"gitId":"Chick3nBoy"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":202,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":203,"author":{"gitId":"Chick3nBoy"},"content":"    private static void printWelcome() {","lastModifiedDate":"2023-02-17"},{"lineNumber":204,"author":{"gitId":"Chick3nBoy"},"content":"        String logo \u003d BLANK + LINE + \"\\n\"","lastModifiedDate":"2023-02-17"},{"lineNumber":205,"author":{"gitId":"Chick3nBoy"},"content":"                + BLANK + \"Hello! I\u0027m Duke.Duke\\n\"","lastModifiedDate":"2023-02-17"},{"lineNumber":206,"author":{"gitId":"Chick3nBoy"},"content":"                + BLANK + \"What can I do for you?\\n\"","lastModifiedDate":"2023-02-17"},{"lineNumber":207,"author":{"gitId":"Chick3nBoy"},"content":"                + BLANK + LINE;","lastModifiedDate":"2023-02-17"},{"lineNumber":208,"author":{"gitId":"Chick3nBoy"},"content":"        System.out.println(\"\\n\" + logo);","lastModifiedDate":"2023-02-17"},{"lineNumber":209,"author":{"gitId":"Chick3nBoy"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":210,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":211,"author":{"gitId":"Chick3nBoy"},"content":"    private static void doList(ArrayList\u003cTask\u003e taskList, int numberOfTasks) {","lastModifiedDate":"2023-02-17"},{"lineNumber":212,"author":{"gitId":"Chick3nBoy"},"content":"        System.out.println(BLANK + LINE);","lastModifiedDate":"2023-02-17"},{"lineNumber":213,"author":{"gitId":"Chick3nBoy"},"content":"        for (int i \u003d 0; i \u003c numberOfTasks; i +\u003d 1) {","lastModifiedDate":"2023-02-17"},{"lineNumber":214,"author":{"gitId":"Chick3nBoy"},"content":"            System.out.print(BLANK + (i + 1) + \".\");","lastModifiedDate":"2023-02-17"},{"lineNumber":215,"author":{"gitId":"Chick3nBoy"},"content":"            taskList.get(i).printTask();","lastModifiedDate":"2023-02-17"},{"lineNumber":216,"author":{"gitId":"Chick3nBoy"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":217,"author":{"gitId":"Chick3nBoy"},"content":"        System.out.println(BLANK + LINE);","lastModifiedDate":"2023-02-17"},{"lineNumber":218,"author":{"gitId":"Chick3nBoy"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":219,"author":{"gitId":"Chick3nBoy"},"content":"    private static void doExit() {","lastModifiedDate":"2023-02-17"},{"lineNumber":220,"author":{"gitId":"Chick3nBoy"},"content":"        System.out.println(BLANK + LINE);","lastModifiedDate":"2023-02-17"},{"lineNumber":221,"author":{"gitId":"Chick3nBoy"},"content":"        System.out.println(BLANK + \"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-02-17"},{"lineNumber":222,"author":{"gitId":"Chick3nBoy"},"content":"        System.out.println(BLANK + LINE);","lastModifiedDate":"2023-02-17"},{"lineNumber":223,"author":{"gitId":"Chick3nBoy"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":224,"author":{"gitId":"Chick3nBoy"},"content":"    private static void deleteTask(ArrayList\u003cTask\u003e tasks, int indexToDelete, int numberOfTasks) {","lastModifiedDate":"2023-02-17"},{"lineNumber":225,"author":{"gitId":"Chick3nBoy"},"content":"        tasks.get(indexToDelete).printDeleteTask(numberOfTasks);","lastModifiedDate":"2023-02-17"},{"lineNumber":226,"author":{"gitId":"Chick3nBoy"},"content":"        tasks.remove(indexToDelete);","lastModifiedDate":"2023-02-17"},{"lineNumber":227,"author":{"gitId":"Chick3nBoy"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":228,"author":{"gitId":"Chick3nBoy"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"Chick3nBoy":228}},{"path":"src/main/java/Duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chick3nBoy"},"content":"package Duke;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"Chick3nBoy"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"Chick3nBoy"},"content":"}","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"Chick3nBoy":5}},{"path":"src/main/java/Duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chick3nBoy"},"content":"package Duke;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"Chick3nBoy"},"content":"public class Event extends Task {","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"Chick3nBoy"},"content":"    protected String startDate;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"Chick3nBoy"},"content":"    protected String endDate;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"Chick3nBoy"},"content":"    Event(String taskName, String startDate, String endDate) {","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"Chick3nBoy"},"content":"        super(taskName);","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"Chick3nBoy"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"Chick3nBoy"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"Chick3nBoy"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"Chick3nBoy"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"Chick3nBoy"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"Chick3nBoy"},"content":"        return \"E\";","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"Chick3nBoy"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"Chick3nBoy"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"Chick3nBoy"},"content":"    public void printTask() {","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"Chick3nBoy"},"content":"        System.out.print(\"[\");","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"Chick3nBoy"},"content":"        System.out.print(getTaskType());","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"Chick3nBoy"},"content":"        System.out.print(\"][\");","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"Chick3nBoy"},"content":"        if (super.isDone) {","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"Chick3nBoy"},"content":"            System.out.print(\"X\");","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"Chick3nBoy"},"content":"        } else {","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"Chick3nBoy"},"content":"            System.out.print(\" \");","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"Chick3nBoy"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"Chick3nBoy"},"content":"        System.out.println(\"] \" + this.getTaskName() + \"(from:\" + startDate + \" to:\" + endDate + \")\");","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"Chick3nBoy"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"Chick3nBoy"},"content":"    @Override","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"Chick3nBoy"},"content":"    public String saveInfo () {","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"Chick3nBoy"},"content":"        return getTaskType() + \"t/\" +","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"Chick3nBoy"},"content":"                (isDone ? \"X\" : \"Y\") + \"m/\" +","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"Chick3nBoy"},"content":"                taskName + \"n/\" +","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"Chick3nBoy"},"content":"                startDate + \"s/\" +","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"Chick3nBoy"},"content":"                endDate + \"\\n\";","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"Chick3nBoy"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"Chick3nBoy"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"Chick3nBoy":37}},{"path":"src/main/java/Duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chick3nBoy"},"content":"package Duke;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"Chick3nBoy"},"content":"public class Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"Chick3nBoy"},"content":"    //Instantiate","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"Chick3nBoy"},"content":"    private static final String LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"Chick3nBoy"},"content":"    private static final String BLANK \u003d \"    \";","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"Chick3nBoy"},"content":"    protected String taskName;","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"Chick3nBoy"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"Chick3nBoy"},"content":"    public Task(String taskName) {","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"Chick3nBoy"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"Chick3nBoy"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"Chick3nBoy"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"Chick3nBoy"},"content":"    public void setDone() {","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"Chick3nBoy"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"Chick3nBoy"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"Chick3nBoy"},"content":"    public void setNotDone() {","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"Chick3nBoy"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"Chick3nBoy"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"Chick3nBoy"},"content":"    public String getTaskName() {","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"Chick3nBoy"},"content":"        return taskName;","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"Chick3nBoy"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"Chick3nBoy"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"Chick3nBoy"},"content":"        return \"error with print task type override\";","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"Chick3nBoy"},"content":"    };","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"Chick3nBoy"},"content":"    public void printTask() {","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"Chick3nBoy"},"content":"        System.out.print(\"[\");","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"Chick3nBoy"},"content":"        System.out.print(getTaskType());","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"Chick3nBoy"},"content":"        System.out.print(\"][\");","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"Chick3nBoy"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"Chick3nBoy"},"content":"            System.out.print(\"X\");","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"Chick3nBoy"},"content":"        } else {","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"Chick3nBoy"},"content":"            System.out.print(\" \");","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"Chick3nBoy"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"Chick3nBoy"},"content":"        System.out.println(\"] \" + this.getTaskName());","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"Chick3nBoy"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"Chick3nBoy"},"content":"    public void printAddTask(int taskNumber) {","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"Chick3nBoy"},"content":"        System.out.println(BLANK + LINE);","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"Chick3nBoy"},"content":"        System.out.println(BLANK + \"Added to list:\");","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"Chick3nBoy"},"content":"        System.out.print(BLANK);","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"Chick3nBoy"},"content":"        printTask();","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"Chick3nBoy"},"content":"        System.out.println(BLANK + \"Number of tasks: \" + (taskNumber + 1));","lastModifiedDate":"2023-02-17"},{"lineNumber":47,"author":{"gitId":"Chick3nBoy"},"content":"        System.out.println(BLANK + LINE);","lastModifiedDate":"2023-02-17"},{"lineNumber":48,"author":{"gitId":"Chick3nBoy"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":49,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":50,"author":{"gitId":"Chick3nBoy"},"content":"    public void printDeleteTask(int numberOfTask) {","lastModifiedDate":"2023-02-17"},{"lineNumber":51,"author":{"gitId":"Chick3nBoy"},"content":"        System.out.println(BLANK + LINE);","lastModifiedDate":"2023-02-17"},{"lineNumber":52,"author":{"gitId":"Chick3nBoy"},"content":"        System.out.println(BLANK + \"Deleting from list:\");","lastModifiedDate":"2023-02-17"},{"lineNumber":53,"author":{"gitId":"Chick3nBoy"},"content":"        System.out.print(BLANK);","lastModifiedDate":"2023-02-17"},{"lineNumber":54,"author":{"gitId":"Chick3nBoy"},"content":"        printTask();","lastModifiedDate":"2023-02-17"},{"lineNumber":55,"author":{"gitId":"Chick3nBoy"},"content":"        System.out.println(BLANK + \"Number of tasks: \" + (numberOfTask - 1));","lastModifiedDate":"2023-02-17"},{"lineNumber":56,"author":{"gitId":"Chick3nBoy"},"content":"        System.out.println(BLANK + LINE);","lastModifiedDate":"2023-02-02"},{"lineNumber":57,"author":{"gitId":"Chick3nBoy"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":58,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":59,"author":{"gitId":"Chick3nBoy"},"content":"    public void printMarkedTask() {","lastModifiedDate":"2023-02-02"},{"lineNumber":60,"author":{"gitId":"Chick3nBoy"},"content":"        System.out.println(BLANK + LINE);","lastModifiedDate":"2023-02-02"},{"lineNumber":61,"author":{"gitId":"Chick3nBoy"},"content":"        System.out.println(BLANK + \"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-02-02"},{"lineNumber":62,"author":{"gitId":"Chick3nBoy"},"content":"        System.out.print(BLANK);","lastModifiedDate":"2023-02-02"},{"lineNumber":63,"author":{"gitId":"Chick3nBoy"},"content":"        printTask();","lastModifiedDate":"2023-02-02"},{"lineNumber":64,"author":{"gitId":"Chick3nBoy"},"content":"        System.out.println(BLANK + LINE);","lastModifiedDate":"2023-02-02"},{"lineNumber":65,"author":{"gitId":"Chick3nBoy"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":66,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":67,"author":{"gitId":"Chick3nBoy"},"content":"    public void printUnmarkedTask() {","lastModifiedDate":"2023-02-02"},{"lineNumber":68,"author":{"gitId":"Chick3nBoy"},"content":"        System.out.println(BLANK + LINE);","lastModifiedDate":"2023-02-02"},{"lineNumber":69,"author":{"gitId":"Chick3nBoy"},"content":"        System.out.print(BLANK);","lastModifiedDate":"2023-02-02"},{"lineNumber":70,"author":{"gitId":"Chick3nBoy"},"content":"        System.out.println(BLANK + \"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-02-02"},{"lineNumber":71,"author":{"gitId":"Chick3nBoy"},"content":"        System.out.print(BLANK);","lastModifiedDate":"2023-02-02"},{"lineNumber":72,"author":{"gitId":"Chick3nBoy"},"content":"        printTask();","lastModifiedDate":"2023-02-02"},{"lineNumber":73,"author":{"gitId":"Chick3nBoy"},"content":"        System.out.println(BLANK + LINE);","lastModifiedDate":"2023-02-02"},{"lineNumber":74,"author":{"gitId":"Chick3nBoy"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":75,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":76,"author":{"gitId":"Chick3nBoy"},"content":"    public String saveInfo () {","lastModifiedDate":"2023-02-17"},{"lineNumber":77,"author":{"gitId":"Chick3nBoy"},"content":"        return \"error with save info override\" + \"\\n\";","lastModifiedDate":"2023-02-17"},{"lineNumber":78,"author":{"gitId":"Chick3nBoy"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":79,"author":{"gitId":"Chick3nBoy"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"Chick3nBoy":79}},{"path":"src/main/java/Duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chick3nBoy"},"content":"package Duke;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"Chick3nBoy"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"Chick3nBoy"},"content":"    Todo(String taskName) {","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"Chick3nBoy"},"content":"        super(taskName);","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"Chick3nBoy"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"Chick3nBoy"},"content":"    @Override","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"Chick3nBoy"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"Chick3nBoy"},"content":"        return \"T\";","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"Chick3nBoy"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"Chick3nBoy"},"content":"    @Override","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"Chick3nBoy"},"content":"    public String saveInfo () {","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"Chick3nBoy"},"content":"        return getTaskType() + \"t/\" +","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"Chick3nBoy"},"content":"                (isDone ? \"X\" : \"Y\") + \"m/\" +","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"Chick3nBoy"},"content":"                taskName + \"\\n\";","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"Chick3nBoy"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"Chick3nBoy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"Chick3nBoy"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"Chick3nBoy":19}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Chick3nBoy"},"content":"java -classpath ..\\bin Duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Chick3nBoy":1,"-":20}}]
