[{"path":"data/save.example.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jinxuan-owyong"},"content":"{\"from\":\"2023-02-27 1400\",\"to\":\"2023-02-27 1600\",\"name\":\"ie2141 midterms\",\"isCompleted\":false,\"type\":\"EVENT\"}","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"jinxuan-owyong"},"content":"{\"by\":\"2023-02-23 2359\",\"name\":\"complete cs2113 ip w7\",\"isCompleted\":true,\"type\":\"DEADLINE\"}","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"jinxuan-owyong"},"content":"{\"name\":\"buy mangoes\",\"isCompleted\":false,\"type\":\"TODO\"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"jinxuan-owyong":3}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinxuan-owyong"},"content":"package duke;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"jinxuan-owyong"},"content":"import duke.command.Command;","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"jinxuan-owyong"},"content":"import duke.parser.InputParser;","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"jinxuan-owyong"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"jinxuan-owyong"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"jinxuan-owyong"},"content":"import duke.ui.UI;","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"jinxuan-owyong"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"jinxuan-owyong"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"jinxuan-owyong"},"content":" * The main controller for the task manager. Runs indefinitely until the exit keyword is input by the user. Input","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"jinxuan-owyong"},"content":" * data is saved in the JSON format under the directory {projectDirectory}/data/save.txt.","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"jinxuan-owyong"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"jinxuan-owyong"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"jinxuan-owyong"},"content":"        UI ui \u003d new UI();","lastModifiedDate":"2023-02-22"},{"lineNumber":19,"author":{"gitId":"jinxuan-owyong"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2023-02-22"},{"lineNumber":20,"author":{"gitId":"jinxuan-owyong"},"content":"        TaskList tasks \u003d new TaskList(storage.read());","lastModifiedDate":"2023-02-22"},{"lineNumber":21,"author":{"gitId":"jinxuan-owyong"},"content":"        InputParser inputParser \u003d new InputParser();","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"jinxuan-owyong"},"content":"        Scanner scan \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"jinxuan-owyong"},"content":"        ui.printLogo();","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"jinxuan-owyong"},"content":"        ui.greet();","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"jinxuan-owyong"},"content":"        String input;","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"jinxuan-owyong"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-02-19"},{"lineNumber":29,"author":{"gitId":"jinxuan-owyong"},"content":"        do {","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"jinxuan-owyong"},"content":"            try {","lastModifiedDate":"2023-02-19"},{"lineNumber":31,"author":{"gitId":"jinxuan-owyong"},"content":"                input \u003d scan.nextLine();","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"jinxuan-owyong"},"content":"                ui.printLine();","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"jinxuan-owyong"},"content":"                Command command \u003d inputParser.parse(input);","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"jinxuan-owyong"},"content":"                // tasks saved after every command execution","lastModifiedDate":"2023-02-19"},{"lineNumber":35,"author":{"gitId":"jinxuan-owyong"},"content":"                command.execute(tasks, ui, storage);","lastModifiedDate":"2023-02-19"},{"lineNumber":36,"author":{"gitId":"jinxuan-owyong"},"content":"                isExit \u003d command.isExit();","lastModifiedDate":"2023-02-19"},{"lineNumber":37,"author":{"gitId":"jinxuan-owyong"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-02-04"},{"lineNumber":38,"author":{"gitId":"jinxuan-owyong"},"content":"                ui.print(e.getMessage());","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"jinxuan-owyong"},"content":"                ui.printLine();","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"jinxuan-owyong"},"content":"            }","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"jinxuan-owyong"},"content":"        } while (!isExit);","lastModifiedDate":"2023-02-19"},{"lineNumber":42,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"jinxuan-owyong"},"content":"        scan.close();","lastModifiedDate":"2023-02-19"},{"lineNumber":44,"author":{"gitId":"jinxuan-owyong"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":45,"author":{"gitId":"jinxuan-owyong"},"content":"}","lastModifiedDate":"2023-02-14"},{"lineNumber":46,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"jinxuan-owyong":45,"-":1}},{"path":"src/main/java/duke/command/AddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinxuan-owyong"},"content":"package duke.command;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"jinxuan-owyong"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"jinxuan-owyong"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"jinxuan-owyong"},"content":"import duke.ui.UI;","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"jinxuan-owyong"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"jinxuan-owyong"},"content":" * Adds a new task to the list.","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"jinxuan-owyong"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"jinxuan-owyong"},"content":"public class AddTaskCommand extends Command {","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"jinxuan-owyong"},"content":"    private Task taskObj;","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"jinxuan-owyong"},"content":"    public AddTaskCommand(Task taskObj) {","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"jinxuan-owyong"},"content":"        this.taskObj \u003d taskObj;","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"jinxuan-owyong"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"jinxuan-owyong"},"content":"    @Override","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"jinxuan-owyong"},"content":"    public void executor(TaskList tasks, UI ui) {","lastModifiedDate":"2023-02-22"},{"lineNumber":19,"author":{"gitId":"jinxuan-owyong"},"content":"        tasks.add(taskObj);","lastModifiedDate":"2023-02-19"},{"lineNumber":20,"author":{"gitId":"jinxuan-owyong"},"content":"        ui.printTaskAdded(taskObj.describe(), tasks.size());","lastModifiedDate":"2023-02-19"},{"lineNumber":21,"author":{"gitId":"jinxuan-owyong"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":22,"author":{"gitId":"jinxuan-owyong"},"content":"}","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"jinxuan-owyong":22}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinxuan-owyong"},"content":"package duke.command;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"jinxuan-owyong"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"jinxuan-owyong"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"jinxuan-owyong"},"content":"import duke.ui.UI;","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"jinxuan-owyong"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"jinxuan-owyong"},"content":" * Base class for all commands. Runs the required actions in the overridden method `executor()`. Performs the save","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"jinxuan-owyong"},"content":" * operation every time a command is executed.","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"jinxuan-owyong"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"jinxuan-owyong"},"content":"public class Command {","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"jinxuan-owyong"},"content":"    public boolean isExitCommand \u003d false;","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"jinxuan-owyong"},"content":"    public void executor(TaskList tasks, UI ui) throws Exception {","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"jinxuan-owyong"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"jinxuan-owyong"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) throws Exception {","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"jinxuan-owyong"},"content":"        executor(tasks, ui);","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"jinxuan-owyong"},"content":"        storage.save(tasks.toJson());","lastModifiedDate":"2023-02-19"},{"lineNumber":20,"author":{"gitId":"jinxuan-owyong"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":21,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":22,"author":{"gitId":"jinxuan-owyong"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"jinxuan-owyong"},"content":"        return isExitCommand;","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"jinxuan-owyong"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"jinxuan-owyong"},"content":"}","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"jinxuan-owyong":25}},{"path":"src/main/java/duke/command/CommandMarking.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinxuan-owyong"},"content":"package duke.command;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"jinxuan-owyong"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"jinxuan-owyong"},"content":"import duke.ui.UI;","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"jinxuan-owyong"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"jinxuan-owyong"},"content":" * Updates the status of a task in the list.","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"jinxuan-owyong"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"jinxuan-owyong"},"content":"public class CommandMarking extends Command {","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"jinxuan-owyong"},"content":"    private final int taskNum;","lastModifiedDate":"2023-02-22"},{"lineNumber":11,"author":{"gitId":"jinxuan-owyong"},"content":"    private final boolean isMark;","lastModifiedDate":"2023-02-22"},{"lineNumber":12,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"jinxuan-owyong"},"content":"    public CommandMarking(int taskNum, boolean isMark) {","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"jinxuan-owyong"},"content":"        this.taskNum \u003d taskNum;","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"jinxuan-owyong"},"content":"        this.isMark \u003d isMark;","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"jinxuan-owyong"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"jinxuan-owyong"},"content":"    @Override","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"jinxuan-owyong"},"content":"    public void executor(TaskList tasks, UI ui) throws Exception {","lastModifiedDate":"2023-02-19"},{"lineNumber":20,"author":{"gitId":"jinxuan-owyong"},"content":"        String result \u003d tasks.setStatus(taskNum - 1, isMark);","lastModifiedDate":"2023-02-19"},{"lineNumber":21,"author":{"gitId":"jinxuan-owyong"},"content":"        ui.print(result);","lastModifiedDate":"2023-02-19"},{"lineNumber":22,"author":{"gitId":"jinxuan-owyong"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"jinxuan-owyong"},"content":"}","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"jinxuan-owyong":23}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinxuan-owyong"},"content":"package duke.command;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"jinxuan-owyong"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"jinxuan-owyong"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"jinxuan-owyong"},"content":"import duke.ui.UI;","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"jinxuan-owyong"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"jinxuan-owyong"},"content":" * Deletes the task ID from the list.","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"jinxuan-owyong"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"jinxuan-owyong"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"jinxuan-owyong"},"content":"    private final int deleteId;","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"jinxuan-owyong"},"content":"    public DeleteCommand(int deleteId) {","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"jinxuan-owyong"},"content":"        this.deleteId \u003d deleteId;","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"jinxuan-owyong"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"jinxuan-owyong"},"content":"    @Override","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"jinxuan-owyong"},"content":"    public void executor(TaskList tasks, UI ui) throws Exception {","lastModifiedDate":"2023-02-19"},{"lineNumber":20,"author":{"gitId":"jinxuan-owyong"},"content":"        Task toDelete \u003d tasks.delete(deleteId);","lastModifiedDate":"2023-02-19"},{"lineNumber":21,"author":{"gitId":"jinxuan-owyong"},"content":"        ui.printTaskDeleted(toDelete.describe(), tasks.size());","lastModifiedDate":"2023-02-19"},{"lineNumber":22,"author":{"gitId":"jinxuan-owyong"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"jinxuan-owyong"},"content":"}","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"jinxuan-owyong":23}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinxuan-owyong"},"content":"package duke.command;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"jinxuan-owyong"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"jinxuan-owyong"},"content":"import duke.ui.UI;","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"jinxuan-owyong"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"jinxuan-owyong"},"content":" * Exits the program.","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"jinxuan-owyong"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"jinxuan-owyong"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"jinxuan-owyong"},"content":"    public ExitCommand() {","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"jinxuan-owyong"},"content":"        this.isExitCommand \u003d true;","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"jinxuan-owyong"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"jinxuan-owyong"},"content":"    @Override","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"jinxuan-owyong"},"content":"    public void executor(TaskList tasks, UI ui) {","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"jinxuan-owyong"},"content":"        ui.printExit();","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"jinxuan-owyong"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"jinxuan-owyong"},"content":"}","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"jinxuan-owyong":18}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinxuan-owyong"},"content":"package duke.command;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"jinxuan-owyong"},"content":"import duke.exceptions.NoTaskException;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"jinxuan-owyong"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"jinxuan-owyong"},"content":"import duke.ui.UI;","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"jinxuan-owyong"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"jinxuan-owyong"},"content":"    private final String keyword;","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"jinxuan-owyong"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"jinxuan-owyong"},"content":"        this.keyword \u003d keyword.trim();","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"jinxuan-owyong"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"jinxuan-owyong"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"jinxuan-owyong"},"content":"    public void executor(TaskList tasks, UI ui) throws NoTaskException {","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"jinxuan-owyong"},"content":"        String result \u003d tasks.find(keyword);","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"jinxuan-owyong"},"content":"        ui.print(\"Showing matches for keyword: \" + keyword + \"\\n\");","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"jinxuan-owyong"},"content":"        ui.print(result);","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"jinxuan-owyong"},"content":"        ui.printLine();","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"jinxuan-owyong"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"jinxuan-owyong"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"jinxuan-owyong":21}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinxuan-owyong"},"content":"package duke.command;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"jinxuan-owyong"},"content":"import duke.exceptions.NoTaskException;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"jinxuan-owyong"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"jinxuan-owyong"},"content":"import duke.ui.UI;","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"jinxuan-owyong"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"jinxuan-owyong"},"content":" * Lists all the tasks available.","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"jinxuan-owyong"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"jinxuan-owyong"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"jinxuan-owyong"},"content":"    @Override","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"jinxuan-owyong"},"content":"    public void executor(TaskList tasks, UI ui) throws NoTaskException {","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"jinxuan-owyong"},"content":"        String output \u003d tasks.listAll();","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"jinxuan-owyong"},"content":"        ui.print(output);","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"jinxuan-owyong"},"content":"        ui.printLine();","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"jinxuan-owyong"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"jinxuan-owyong"},"content":"}","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"jinxuan-owyong":17}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinxuan-owyong"},"content":"package duke.command;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"jinxuan-owyong"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"jinxuan-owyong"},"content":" * Set the status of the task as not completed.","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"jinxuan-owyong"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"jinxuan-owyong"},"content":"public class MarkCommand extends CommandMarking {","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"jinxuan-owyong"},"content":"    public MarkCommand(int taskNum) {","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"jinxuan-owyong"},"content":"        super(taskNum, true);","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"jinxuan-owyong"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"jinxuan-owyong"},"content":"}","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"jinxuan-owyong":10}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinxuan-owyong"},"content":"package duke.command;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"jinxuan-owyong"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"jinxuan-owyong"},"content":" * Set the status of the task as not completed.","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"jinxuan-owyong"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"jinxuan-owyong"},"content":"public class UnmarkCommand extends CommandMarking {","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"jinxuan-owyong"},"content":"    public UnmarkCommand(int taskNum) {","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"jinxuan-owyong"},"content":"        super(taskNum, false);","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"jinxuan-owyong"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"jinxuan-owyong"},"content":"}","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"jinxuan-owyong":10}},{"path":"src/main/java/duke/exceptions/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinxuan-owyong"},"content":"package duke.exceptions;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"jinxuan-owyong"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"jinxuan-owyong"},"content":" * Exception thrown if the user inputs a command not supported.","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"jinxuan-owyong"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"jinxuan-owyong"},"content":"public class InvalidCommandException extends Exception {","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"jinxuan-owyong"},"content":"    private static final String MESSAGE \u003d \"Unrecognised command, try again.\";","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"jinxuan-owyong"},"content":"    public InvalidCommandException() {","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"jinxuan-owyong"},"content":"        super(MESSAGE);","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"jinxuan-owyong"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"jinxuan-owyong"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"jinxuan-owyong":12}},{"path":"src/main/java/duke/exceptions/InvalidDateTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinxuan-owyong"},"content":"package duke.exceptions;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"jinxuan-owyong"},"content":"import duke.parser.DateTimeParser;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"jinxuan-owyong"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"jinxuan-owyong"},"content":" * Exception when the user inputs an invalid date and time.","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"jinxuan-owyong"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"jinxuan-owyong"},"content":"public class InvalidDateTimeException extends Exception {","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"jinxuan-owyong"},"content":"    private static final String MESSAGE \u003d \"Invalid date or time format. Please use the following format:\\n\"","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"jinxuan-owyong"},"content":"            + \"\u003c\" + DateTimeParser.getFormat() + \"\u003e and ensure that time is in 24-hour format\";","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"jinxuan-owyong"},"content":"    public InvalidDateTimeException() {","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"jinxuan-owyong"},"content":"        super(MESSAGE);","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"jinxuan-owyong"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"jinxuan-owyong"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"jinxuan-owyong":15}},{"path":"src/main/java/duke/exceptions/InvalidInputIDException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinxuan-owyong"},"content":"package duke.exceptions;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"jinxuan-owyong"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"jinxuan-owyong"},"content":" * Exception thrown if the ID of the task is out of range of the tasks in the list.","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"jinxuan-owyong"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"jinxuan-owyong"},"content":"public class InvalidInputIDException extends Exception {","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"jinxuan-owyong"},"content":"    private static final String MESSAGE \u003d \"Invalid task ID entered.\";","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"jinxuan-owyong"},"content":"    public InvalidInputIDException() {","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"jinxuan-owyong"},"content":"        super(MESSAGE);","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"jinxuan-owyong"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"jinxuan-owyong"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"jinxuan-owyong":12}},{"path":"src/main/java/duke/exceptions/InvalidTaskFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinxuan-owyong"},"content":"package duke.exceptions;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"jinxuan-owyong"},"content":"import duke.parser.DateTimeParser;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"jinxuan-owyong"},"content":"import duke.tasks.TaskEnum;","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"jinxuan-owyong"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"jinxuan-owyong"},"content":" * Exception when the input task command does not follow the required format.","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"jinxuan-owyong"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"jinxuan-owyong"},"content":"public class InvalidTaskFormatException extends Exception {","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"jinxuan-owyong"},"content":"    private static final String MESSAGE_HEADER \u003d \"Invalid input format!\\n\"","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"jinxuan-owyong"},"content":"            + \"Use the following format to create a new task:\\n\";","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"jinxuan-owyong"},"content":"    private static final String DATE_FORMAT \u003d DateTimeParser.getFormat();","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"jinxuan-owyong"},"content":"    private static final String FORMAT_TODO \u003d \"Todo - todo \u003ctask details\u003e\\n\";","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"jinxuan-owyong"},"content":"    private static final String FORMAT_DEADLINE \u003d \"Deadline - deadline \u003ctask details\u003e \"","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"jinxuan-owyong"},"content":"            + \"/by \u003c\" + DATE_FORMAT + \"\u003e\\n\";","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"jinxuan-owyong"},"content":"    private static final String FORMAT_EVENT \u003d \"Event - event \u003ctask details\u003e\"","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"jinxuan-owyong"},"content":"            + \"/from \u003c\" + DATE_FORMAT + \"\u003e \"","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"jinxuan-owyong"},"content":"            + \"/to \u003c\" + DATE_FORMAT + \"\u003e\\n\";","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"jinxuan-owyong"},"content":"    private final TaskEnum id;","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"jinxuan-owyong"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"jinxuan-owyong"},"content":"     * Class constructor for the task the user is trying to create.","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"jinxuan-owyong"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"jinxuan-owyong"},"content":"     * @param t TaskEnum corresponding to the task type","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"jinxuan-owyong"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"jinxuan-owyong"},"content":"    public InvalidTaskFormatException(TaskEnum t) {","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"jinxuan-owyong"},"content":"        this.id \u003d t;","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"jinxuan-owyong"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"jinxuan-owyong"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"jinxuan-owyong"},"content":"     * Get the input format of the task the user is attempting to create.","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"jinxuan-owyong"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"jinxuan-owyong"},"content":"     * @return The error message","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"jinxuan-owyong"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"jinxuan-owyong"},"content":"    @Override","lastModifiedDate":"2023-02-04"},{"lineNumber":36,"author":{"gitId":"jinxuan-owyong"},"content":"    public String getMessage() {","lastModifiedDate":"2023-02-04"},{"lineNumber":37,"author":{"gitId":"jinxuan-owyong"},"content":"        String msg \u003d MESSAGE_HEADER;","lastModifiedDate":"2023-02-04"},{"lineNumber":38,"author":{"gitId":"jinxuan-owyong"},"content":"        switch (id) {","lastModifiedDate":"2023-02-04"},{"lineNumber":39,"author":{"gitId":"jinxuan-owyong"},"content":"        case TODO:","lastModifiedDate":"2023-02-04"},{"lineNumber":40,"author":{"gitId":"jinxuan-owyong"},"content":"            msg +\u003d FORMAT_TODO;","lastModifiedDate":"2023-02-04"},{"lineNumber":41,"author":{"gitId":"jinxuan-owyong"},"content":"            break;","lastModifiedDate":"2023-02-04"},{"lineNumber":42,"author":{"gitId":"jinxuan-owyong"},"content":"        case DEADLINE:","lastModifiedDate":"2023-02-04"},{"lineNumber":43,"author":{"gitId":"jinxuan-owyong"},"content":"            msg +\u003d FORMAT_DEADLINE;","lastModifiedDate":"2023-02-04"},{"lineNumber":44,"author":{"gitId":"jinxuan-owyong"},"content":"            break;","lastModifiedDate":"2023-02-04"},{"lineNumber":45,"author":{"gitId":"jinxuan-owyong"},"content":"        case EVENT:","lastModifiedDate":"2023-02-04"},{"lineNumber":46,"author":{"gitId":"jinxuan-owyong"},"content":"            msg +\u003d FORMAT_EVENT;","lastModifiedDate":"2023-02-04"},{"lineNumber":47,"author":{"gitId":"jinxuan-owyong"},"content":"            break;","lastModifiedDate":"2023-02-04"},{"lineNumber":48,"author":{"gitId":"jinxuan-owyong"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":49,"author":{"gitId":"jinxuan-owyong"},"content":"        return msg;","lastModifiedDate":"2023-02-04"},{"lineNumber":50,"author":{"gitId":"jinxuan-owyong"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":51,"author":{"gitId":"jinxuan-owyong"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"jinxuan-owyong":51}},{"path":"src/main/java/duke/exceptions/NoTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinxuan-owyong"},"content":"package duke.exceptions;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"jinxuan-owyong"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"jinxuan-owyong"},"content":" * Exception thrown when there are no tasks in the list.","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"jinxuan-owyong"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"jinxuan-owyong"},"content":"public class NoTaskException extends Exception {","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"jinxuan-owyong"},"content":"    private static final String MESSAGE \u003d \"There are no tasks available.\";","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"jinxuan-owyong"},"content":"    public NoTaskException() {","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"jinxuan-owyong"},"content":"        super(MESSAGE);","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"jinxuan-owyong"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"jinxuan-owyong"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"jinxuan-owyong":12}},{"path":"src/main/java/duke/parser/DateTimeParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinxuan-owyong"},"content":"package duke.parser;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"jinxuan-owyong"},"content":"import duke.exceptions.InvalidDateTimeException;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"jinxuan-owyong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"jinxuan-owyong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"jinxuan-owyong"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"jinxuan-owyong"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"jinxuan-owyong"},"content":" * Helper class for parsing LocalDateTime object","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"jinxuan-owyong"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"jinxuan-owyong"},"content":"public class DateTimeParser {","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"jinxuan-owyong"},"content":"    private static final String FORMAT \u003d \"yyyy-MM-dd HHmm\";","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"jinxuan-owyong"},"content":"    private static final DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(FORMAT);","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"jinxuan-owyong"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"jinxuan-owyong"},"content":"     * Convert the user input date into LocalDateTime object.","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"jinxuan-owyong"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"jinxuan-owyong"},"content":"     * @param input String to be processed","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"jinxuan-owyong"},"content":"     * @return LocalDateTime object corresponding to the input","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"jinxuan-owyong"},"content":"     * @throws InvalidDateTimeException If input string does not match the required format","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"jinxuan-owyong"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"jinxuan-owyong"},"content":"    public static LocalDateTime parse(String input) throws InvalidDateTimeException {","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"jinxuan-owyong"},"content":"        LocalDateTime dateTime;","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"jinxuan-owyong"},"content":"        try {","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"jinxuan-owyong"},"content":"            dateTime \u003d LocalDateTime.parse(input.trim(), FORMATTER);","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"jinxuan-owyong"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"jinxuan-owyong"},"content":"            throw new InvalidDateTimeException();","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"jinxuan-owyong"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"jinxuan-owyong"},"content":"        return dateTime;","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"jinxuan-owyong"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"jinxuan-owyong"},"content":"    public static String getFormat() {","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"jinxuan-owyong"},"content":"        return FORMAT;","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"jinxuan-owyong"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"jinxuan-owyong"},"content":"    public static DateTimeFormatter getFormatter() {","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"jinxuan-owyong"},"content":"        return FORMATTER;","lastModifiedDate":"2023-02-23"},{"lineNumber":40,"author":{"gitId":"jinxuan-owyong"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"jinxuan-owyong"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"jinxuan-owyong":41}},{"path":"src/main/java/duke/parser/InputParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinxuan-owyong"},"content":"package duke.parser;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"jinxuan-owyong"},"content":"import duke.command.*;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"jinxuan-owyong"},"content":"import duke.exceptions.InvalidCommandException;","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"jinxuan-owyong"},"content":"import duke.exceptions.InvalidDateTimeException;","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"jinxuan-owyong"},"content":"import duke.exceptions.InvalidInputIDException;","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"jinxuan-owyong"},"content":"import duke.exceptions.InvalidTaskFormatException;","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"jinxuan-owyong"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"jinxuan-owyong"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"jinxuan-owyong"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"jinxuan-owyong"},"content":"import duke.tasks.TaskEnum;","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"jinxuan-owyong"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"jinxuan-owyong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"jinxuan-owyong"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"jinxuan-owyong"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-02-22"},{"lineNumber":17,"author":{"gitId":"jinxuan-owyong"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-02-22"},{"lineNumber":18,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"jinxuan-owyong"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"jinxuan-owyong"},"content":" * Processes user input","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"jinxuan-owyong"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"jinxuan-owyong"},"content":"public class InputParser {","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"jinxuan-owyong"},"content":"    private static final String CHAR_SPACE \u003d \" \";","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"jinxuan-owyong"},"content":"    private static final String COMMAND_DEADLINE \u003d \"deadline\";","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"jinxuan-owyong"},"content":"    private static final String COMMAND_DELETE \u003d \"delete\";","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"jinxuan-owyong"},"content":"    private static final String COMMAND_EVENT \u003d \"event\";","lastModifiedDate":"2023-02-19"},{"lineNumber":27,"author":{"gitId":"jinxuan-owyong"},"content":"    private static final String COMMAND_EXIT \u003d \"bye\";","lastModifiedDate":"2023-02-19"},{"lineNumber":28,"author":{"gitId":"jinxuan-owyong"},"content":"    private static final String COMMAND_FIND \u003d \"find\";","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"jinxuan-owyong"},"content":"    private static final String COMMAND_LIST \u003d \"list\";","lastModifiedDate":"2023-02-19"},{"lineNumber":30,"author":{"gitId":"jinxuan-owyong"},"content":"    private static final String COMMAND_MARK \u003d \"mark\";","lastModifiedDate":"2023-02-19"},{"lineNumber":31,"author":{"gitId":"jinxuan-owyong"},"content":"    private static final String COMMAND_TODO \u003d \"todo\";","lastModifiedDate":"2023-02-19"},{"lineNumber":32,"author":{"gitId":"jinxuan-owyong"},"content":"    private static final String COMMAND_UNMARK \u003d \"unmark\";","lastModifiedDate":"2023-02-19"},{"lineNumber":33,"author":{"gitId":"jinxuan-owyong"},"content":"    private static final String KEYWORD_BY \u003d \"/by\";","lastModifiedDate":"2023-02-22"},{"lineNumber":34,"author":{"gitId":"jinxuan-owyong"},"content":"    private static final String KEYWORD_FROM \u003d \"/from\";","lastModifiedDate":"2023-02-22"},{"lineNumber":35,"author":{"gitId":"jinxuan-owyong"},"content":"    private static final String KEYWORD_TO \u003d \"/to\";","lastModifiedDate":"2023-02-22"},{"lineNumber":36,"author":{"gitId":"jinxuan-owyong"},"content":"    private static final Pattern patternToDo \u003d Pattern.compile(","lastModifiedDate":"2023-02-22"},{"lineNumber":37,"author":{"gitId":"jinxuan-owyong"},"content":"            \"^(\\\\S+[\\\\S\\\\s]*)$\",","lastModifiedDate":"2023-02-22"},{"lineNumber":38,"author":{"gitId":"jinxuan-owyong"},"content":"            Pattern.CASE_INSENSITIVE);","lastModifiedDate":"2023-02-22"},{"lineNumber":39,"author":{"gitId":"jinxuan-owyong"},"content":"    private static final Pattern patternDeadline \u003d Pattern.compile(","lastModifiedDate":"2023-02-22"},{"lineNumber":40,"author":{"gitId":"jinxuan-owyong"},"content":"            \"^(\\\\S+[\\\\S\\\\s]*)(\\\\s+/by\\\\s+)(\\\\S+[\\\\S\\\\s]*)$\",","lastModifiedDate":"2023-02-22"},{"lineNumber":41,"author":{"gitId":"jinxuan-owyong"},"content":"            Pattern.CASE_INSENSITIVE);","lastModifiedDate":"2023-02-22"},{"lineNumber":42,"author":{"gitId":"jinxuan-owyong"},"content":"    private static final Pattern patternEvent \u003d Pattern.compile(","lastModifiedDate":"2023-02-22"},{"lineNumber":43,"author":{"gitId":"jinxuan-owyong"},"content":"            \"^(\\\\S+[\\\\S\\\\s]*)(\\\\s+/from\\\\s+)(\\\\S+[\\\\S\\\\s]*)(\\\\s+/to\\\\s+)(\\\\S+[\\\\S\\\\s]*)$\",","lastModifiedDate":"2023-02-22"},{"lineNumber":44,"author":{"gitId":"jinxuan-owyong"},"content":"            Pattern.CASE_INSENSITIVE);","lastModifiedDate":"2023-02-22"},{"lineNumber":45,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":46,"author":{"gitId":"jinxuan-owyong"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":47,"author":{"gitId":"jinxuan-owyong"},"content":"     * Reads the task ID input by the user.","lastModifiedDate":"2023-02-23"},{"lineNumber":48,"author":{"gitId":"jinxuan-owyong"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":49,"author":{"gitId":"jinxuan-owyong"},"content":"     * @param scanner Scanner with the ID to be read","lastModifiedDate":"2023-02-23"},{"lineNumber":50,"author":{"gitId":"jinxuan-owyong"},"content":"     * @return Task ID","lastModifiedDate":"2023-02-23"},{"lineNumber":51,"author":{"gitId":"jinxuan-owyong"},"content":"     * @throws InvalidInputIDException If the given ID is invalid","lastModifiedDate":"2023-02-23"},{"lineNumber":52,"author":{"gitId":"jinxuan-owyong"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":53,"author":{"gitId":"jinxuan-owyong"},"content":"    private static int getID(Scanner scanner) throws InvalidInputIDException {","lastModifiedDate":"2023-02-19"},{"lineNumber":54,"author":{"gitId":"jinxuan-owyong"},"content":"        if (!scanner.hasNextInt()) {","lastModifiedDate":"2023-02-19"},{"lineNumber":55,"author":{"gitId":"jinxuan-owyong"},"content":"            throw new InvalidInputIDException();","lastModifiedDate":"2023-02-19"},{"lineNumber":56,"author":{"gitId":"jinxuan-owyong"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":57,"author":{"gitId":"jinxuan-owyong"},"content":"        return scanner.nextInt();","lastModifiedDate":"2023-02-19"},{"lineNumber":58,"author":{"gitId":"jinxuan-owyong"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":59,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":60,"author":{"gitId":"jinxuan-owyong"},"content":"    public static void checkValidInput(String input, Pattern pattern, TaskEnum taskType) throws InvalidTaskFormatException {","lastModifiedDate":"2023-02-22"},{"lineNumber":61,"author":{"gitId":"jinxuan-owyong"},"content":"        Matcher matcher \u003d pattern.matcher(input.trim());","lastModifiedDate":"2023-02-22"},{"lineNumber":62,"author":{"gitId":"jinxuan-owyong"},"content":"        if (input.trim().isEmpty() || !matcher.find()) {","lastModifiedDate":"2023-02-22"},{"lineNumber":63,"author":{"gitId":"jinxuan-owyong"},"content":"            throw new InvalidTaskFormatException(taskType);","lastModifiedDate":"2023-02-22"},{"lineNumber":64,"author":{"gitId":"jinxuan-owyong"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":65,"author":{"gitId":"jinxuan-owyong"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":66,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":67,"author":{"gitId":"jinxuan-owyong"},"content":"    private static ToDo parseToDoInput(String input) throws InvalidTaskFormatException {","lastModifiedDate":"2023-02-22"},{"lineNumber":68,"author":{"gitId":"jinxuan-owyong"},"content":"        checkValidInput(input, patternToDo, TaskEnum.TODO);","lastModifiedDate":"2023-02-22"},{"lineNumber":69,"author":{"gitId":"jinxuan-owyong"},"content":"        return new ToDo(input);","lastModifiedDate":"2023-02-22"},{"lineNumber":70,"author":{"gitId":"jinxuan-owyong"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":71,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":72,"author":{"gitId":"jinxuan-owyong"},"content":"    private static Event parseEventInput(String input) throws InvalidTaskFormatException, InvalidDateTimeException {","lastModifiedDate":"2023-02-23"},{"lineNumber":73,"author":{"gitId":"jinxuan-owyong"},"content":"        checkValidInput(input, patternEvent, TaskEnum.EVENT);","lastModifiedDate":"2023-02-22"},{"lineNumber":74,"author":{"gitId":"jinxuan-owyong"},"content":"        int fromStartIndex \u003d input.indexOf(KEYWORD_FROM);","lastModifiedDate":"2023-02-22"},{"lineNumber":75,"author":{"gitId":"jinxuan-owyong"},"content":"        int toStartIndex \u003d input.indexOf(KEYWORD_TO);","lastModifiedDate":"2023-02-22"},{"lineNumber":76,"author":{"gitId":"jinxuan-owyong"},"content":"        String description \u003d input.substring(0, fromStartIndex).trim();","lastModifiedDate":"2023-02-22"},{"lineNumber":77,"author":{"gitId":"jinxuan-owyong"},"content":"        String fromString \u003d input.substring(fromStartIndex + KEYWORD_FROM.length(), toStartIndex).trim();","lastModifiedDate":"2023-02-23"},{"lineNumber":78,"author":{"gitId":"jinxuan-owyong"},"content":"        String toString \u003d input.substring(toStartIndex + KEYWORD_TO.length()).trim();","lastModifiedDate":"2023-02-23"},{"lineNumber":79,"author":{"gitId":"jinxuan-owyong"},"content":"        LocalDateTime fromDateTime \u003d DateTimeParser.parse(fromString);","lastModifiedDate":"2023-02-23"},{"lineNumber":80,"author":{"gitId":"jinxuan-owyong"},"content":"        LocalDateTime toDateTime \u003d DateTimeParser.parse(toString);","lastModifiedDate":"2023-02-23"},{"lineNumber":81,"author":{"gitId":"jinxuan-owyong"},"content":"        return new Event(description, fromDateTime, toDateTime);","lastModifiedDate":"2023-02-23"},{"lineNumber":82,"author":{"gitId":"jinxuan-owyong"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":83,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":84,"author":{"gitId":"jinxuan-owyong"},"content":"    private static Deadline parseDeadlineInput(String input) throws InvalidTaskFormatException, InvalidDateTimeException {","lastModifiedDate":"2023-02-23"},{"lineNumber":85,"author":{"gitId":"jinxuan-owyong"},"content":"        checkValidInput(input, patternDeadline, TaskEnum.DEADLINE);","lastModifiedDate":"2023-02-22"},{"lineNumber":86,"author":{"gitId":"jinxuan-owyong"},"content":"        int byStartIndex \u003d input.indexOf(KEYWORD_BY);","lastModifiedDate":"2023-02-22"},{"lineNumber":87,"author":{"gitId":"jinxuan-owyong"},"content":"        String description \u003d input.substring(0, byStartIndex).trim();","lastModifiedDate":"2023-02-22"},{"lineNumber":88,"author":{"gitId":"jinxuan-owyong"},"content":"        String byString \u003d input.substring(byStartIndex + KEYWORD_BY.length()).trim();","lastModifiedDate":"2023-02-23"},{"lineNumber":89,"author":{"gitId":"jinxuan-owyong"},"content":"        LocalDateTime byDateTime \u003d DateTimeParser.parse(byString);","lastModifiedDate":"2023-02-23"},{"lineNumber":90,"author":{"gitId":"jinxuan-owyong"},"content":"        return new Deadline(description, byDateTime);","lastModifiedDate":"2023-02-23"},{"lineNumber":91,"author":{"gitId":"jinxuan-owyong"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":92,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":93,"author":{"gitId":"jinxuan-owyong"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":94,"author":{"gitId":"jinxuan-owyong"},"content":"     * Reads the user input and creates the corresponding task.","lastModifiedDate":"2023-02-23"},{"lineNumber":95,"author":{"gitId":"jinxuan-owyong"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":96,"author":{"gitId":"jinxuan-owyong"},"content":"     * @param input User input","lastModifiedDate":"2023-02-23"},{"lineNumber":97,"author":{"gitId":"jinxuan-owyong"},"content":"     * @param type  TaskEnum, for deserializing from JSON","lastModifiedDate":"2023-02-23"},{"lineNumber":98,"author":{"gitId":"jinxuan-owyong"},"content":"     * @return The Task object corresponding to user input","lastModifiedDate":"2023-02-23"},{"lineNumber":99,"author":{"gitId":"jinxuan-owyong"},"content":"     * @throws InvalidTaskFormatException If user input does not match the required format.","lastModifiedDate":"2023-02-23"},{"lineNumber":100,"author":{"gitId":"jinxuan-owyong"},"content":"     *                                    Exception message will describe the required format.","lastModifiedDate":"2023-02-23"},{"lineNumber":101,"author":{"gitId":"jinxuan-owyong"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":102,"author":{"gitId":"jinxuan-owyong"},"content":"    private static Task getTaskFromInput(Scanner input, TaskEnum type) throws InvalidTaskFormatException, InvalidDateTimeException {","lastModifiedDate":"2023-02-23"},{"lineNumber":103,"author":{"gitId":"jinxuan-owyong"},"content":"        // validate input","lastModifiedDate":"2023-02-19"},{"lineNumber":104,"author":{"gitId":"jinxuan-owyong"},"content":"        if (!input.hasNextLine()) {","lastModifiedDate":"2023-02-19"},{"lineNumber":105,"author":{"gitId":"jinxuan-owyong"},"content":"            throw new InvalidTaskFormatException(type);","lastModifiedDate":"2023-02-19"},{"lineNumber":106,"author":{"gitId":"jinxuan-owyong"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":107,"author":{"gitId":"jinxuan-owyong"},"content":"        String taskDetails \u003d input.nextLine().trim();","lastModifiedDate":"2023-02-19"},{"lineNumber":108,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":109,"author":{"gitId":"jinxuan-owyong"},"content":"        Task task;","lastModifiedDate":"2023-02-19"},{"lineNumber":110,"author":{"gitId":"jinxuan-owyong"},"content":"        switch (type) {","lastModifiedDate":"2023-02-19"},{"lineNumber":111,"author":{"gitId":"jinxuan-owyong"},"content":"        case TODO:","lastModifiedDate":"2023-02-19"},{"lineNumber":112,"author":{"gitId":"jinxuan-owyong"},"content":"            task \u003d parseToDoInput(taskDetails);","lastModifiedDate":"2023-02-22"},{"lineNumber":113,"author":{"gitId":"jinxuan-owyong"},"content":"            break;","lastModifiedDate":"2023-02-19"},{"lineNumber":114,"author":{"gitId":"jinxuan-owyong"},"content":"        case EVENT:","lastModifiedDate":"2023-02-19"},{"lineNumber":115,"author":{"gitId":"jinxuan-owyong"},"content":"            task \u003d parseEventInput(taskDetails);","lastModifiedDate":"2023-02-22"},{"lineNumber":116,"author":{"gitId":"jinxuan-owyong"},"content":"            break;","lastModifiedDate":"2023-02-19"},{"lineNumber":117,"author":{"gitId":"jinxuan-owyong"},"content":"        case DEADLINE:","lastModifiedDate":"2023-02-19"},{"lineNumber":118,"author":{"gitId":"jinxuan-owyong"},"content":"            task \u003d parseDeadlineInput(taskDetails);","lastModifiedDate":"2023-02-22"},{"lineNumber":119,"author":{"gitId":"jinxuan-owyong"},"content":"            break;","lastModifiedDate":"2023-02-19"},{"lineNumber":120,"author":{"gitId":"jinxuan-owyong"},"content":"        default:","lastModifiedDate":"2023-02-19"},{"lineNumber":121,"author":{"gitId":"jinxuan-owyong"},"content":"            if (taskDetails.isEmpty()) {","lastModifiedDate":"2023-02-22"},{"lineNumber":122,"author":{"gitId":"jinxuan-owyong"},"content":"                throw new InvalidTaskFormatException(TaskEnum.UNDEFINED);","lastModifiedDate":"2023-02-22"},{"lineNumber":123,"author":{"gitId":"jinxuan-owyong"},"content":"            }","lastModifiedDate":"2023-02-22"},{"lineNumber":124,"author":{"gitId":"jinxuan-owyong"},"content":"            task \u003d new Task(taskDetails, TaskEnum.UNDEFINED);","lastModifiedDate":"2023-02-22"},{"lineNumber":125,"author":{"gitId":"jinxuan-owyong"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":126,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":127,"author":{"gitId":"jinxuan-owyong"},"content":"        return task;","lastModifiedDate":"2023-02-19"},{"lineNumber":128,"author":{"gitId":"jinxuan-owyong"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":129,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":130,"author":{"gitId":"jinxuan-owyong"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":131,"author":{"gitId":"jinxuan-owyong"},"content":"     * Reads user input and creates the corresponding Command object to be executed","lastModifiedDate":"2023-02-23"},{"lineNumber":132,"author":{"gitId":"jinxuan-owyong"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":133,"author":{"gitId":"jinxuan-owyong"},"content":"     * @param input String containing the command and parameters","lastModifiedDate":"2023-02-23"},{"lineNumber":134,"author":{"gitId":"jinxuan-owyong"},"content":"     * @throws InvalidTaskFormatException If user input does not match the required format.","lastModifiedDate":"2023-02-23"},{"lineNumber":135,"author":{"gitId":"jinxuan-owyong"},"content":"     *                                    Exception message will describe the required format.","lastModifiedDate":"2023-02-23"},{"lineNumber":136,"author":{"gitId":"jinxuan-owyong"},"content":"     * @throws InvalidInputIDException    If the given ID is invalid","lastModifiedDate":"2023-02-23"},{"lineNumber":137,"author":{"gitId":"jinxuan-owyong"},"content":"     * @throws InvalidCommandException    If the command does not match any supported commands","lastModifiedDate":"2023-02-23"},{"lineNumber":138,"author":{"gitId":"jinxuan-owyong"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":139,"author":{"gitId":"jinxuan-owyong"},"content":"    public Command parse(String input) throws Exception {","lastModifiedDate":"2023-02-19"},{"lineNumber":140,"author":{"gitId":"jinxuan-owyong"},"content":"        boolean isExit \u003d input.split(CHAR_SPACE)[0].equals(COMMAND_EXIT);","lastModifiedDate":"2023-02-19"},{"lineNumber":141,"author":{"gitId":"jinxuan-owyong"},"content":"        if (isExit) {","lastModifiedDate":"2023-02-19"},{"lineNumber":142,"author":{"gitId":"jinxuan-owyong"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-02-19"},{"lineNumber":143,"author":{"gitId":"jinxuan-owyong"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":144,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":145,"author":{"gitId":"jinxuan-owyong"},"content":"        if (input.isEmpty()) { // do nothing","lastModifiedDate":"2023-02-19"},{"lineNumber":146,"author":{"gitId":"jinxuan-owyong"},"content":"            return new Command();","lastModifiedDate":"2023-02-19"},{"lineNumber":147,"author":{"gitId":"jinxuan-owyong"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":148,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":149,"author":{"gitId":"jinxuan-owyong"},"content":"        Scanner scanner \u003d new Scanner(input);","lastModifiedDate":"2023-02-19"},{"lineNumber":150,"author":{"gitId":"jinxuan-owyong"},"content":"        String command \u003d scanner.next().toLowerCase();","lastModifiedDate":"2023-02-19"},{"lineNumber":151,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":152,"author":{"gitId":"jinxuan-owyong"},"content":"        Command result;","lastModifiedDate":"2023-02-19"},{"lineNumber":153,"author":{"gitId":"jinxuan-owyong"},"content":"        switch (command) {","lastModifiedDate":"2023-02-19"},{"lineNumber":154,"author":{"gitId":"jinxuan-owyong"},"content":"        case COMMAND_LIST:","lastModifiedDate":"2023-02-19"},{"lineNumber":155,"author":{"gitId":"jinxuan-owyong"},"content":"            result \u003d new ListCommand();","lastModifiedDate":"2023-02-19"},{"lineNumber":156,"author":{"gitId":"jinxuan-owyong"},"content":"            break;","lastModifiedDate":"2023-02-19"},{"lineNumber":157,"author":{"gitId":"jinxuan-owyong"},"content":"        case COMMAND_MARK:","lastModifiedDate":"2023-02-19"},{"lineNumber":158,"author":{"gitId":"jinxuan-owyong"},"content":"            result \u003d new MarkCommand(getID(scanner));","lastModifiedDate":"2023-02-19"},{"lineNumber":159,"author":{"gitId":"jinxuan-owyong"},"content":"            break;","lastModifiedDate":"2023-02-19"},{"lineNumber":160,"author":{"gitId":"jinxuan-owyong"},"content":"        case COMMAND_UNMARK:","lastModifiedDate":"2023-02-19"},{"lineNumber":161,"author":{"gitId":"jinxuan-owyong"},"content":"            result \u003d new UnmarkCommand(getID(scanner));","lastModifiedDate":"2023-02-19"},{"lineNumber":162,"author":{"gitId":"jinxuan-owyong"},"content":"            break;","lastModifiedDate":"2023-02-19"},{"lineNumber":163,"author":{"gitId":"jinxuan-owyong"},"content":"        case COMMAND_TODO:","lastModifiedDate":"2023-02-19"},{"lineNumber":164,"author":{"gitId":"jinxuan-owyong"},"content":"            result \u003d new AddTaskCommand(getTaskFromInput(scanner, TaskEnum.TODO));","lastModifiedDate":"2023-02-19"},{"lineNumber":165,"author":{"gitId":"jinxuan-owyong"},"content":"            break;","lastModifiedDate":"2023-02-19"},{"lineNumber":166,"author":{"gitId":"jinxuan-owyong"},"content":"        case COMMAND_DEADLINE:","lastModifiedDate":"2023-02-19"},{"lineNumber":167,"author":{"gitId":"jinxuan-owyong"},"content":"            result \u003d new AddTaskCommand(getTaskFromInput(scanner, TaskEnum.DEADLINE));","lastModifiedDate":"2023-02-19"},{"lineNumber":168,"author":{"gitId":"jinxuan-owyong"},"content":"            break;","lastModifiedDate":"2023-02-19"},{"lineNumber":169,"author":{"gitId":"jinxuan-owyong"},"content":"        case COMMAND_EVENT:","lastModifiedDate":"2023-02-19"},{"lineNumber":170,"author":{"gitId":"jinxuan-owyong"},"content":"            result \u003d new AddTaskCommand(getTaskFromInput(scanner, TaskEnum.EVENT));","lastModifiedDate":"2023-02-19"},{"lineNumber":171,"author":{"gitId":"jinxuan-owyong"},"content":"            break;","lastModifiedDate":"2023-02-19"},{"lineNumber":172,"author":{"gitId":"jinxuan-owyong"},"content":"        case COMMAND_DELETE:","lastModifiedDate":"2023-02-19"},{"lineNumber":173,"author":{"gitId":"jinxuan-owyong"},"content":"            result \u003d new DeleteCommand(getID(scanner));","lastModifiedDate":"2023-02-19"},{"lineNumber":174,"author":{"gitId":"jinxuan-owyong"},"content":"            break;","lastModifiedDate":"2023-02-19"},{"lineNumber":175,"author":{"gitId":"jinxuan-owyong"},"content":"        case COMMAND_FIND:","lastModifiedDate":"2023-02-23"},{"lineNumber":176,"author":{"gitId":"jinxuan-owyong"},"content":"            result \u003d new FindCommand(scanner.nextLine());","lastModifiedDate":"2023-02-23"},{"lineNumber":177,"author":{"gitId":"jinxuan-owyong"},"content":"            break;","lastModifiedDate":"2023-02-23"},{"lineNumber":178,"author":{"gitId":"jinxuan-owyong"},"content":"        default:","lastModifiedDate":"2023-02-19"},{"lineNumber":179,"author":{"gitId":"jinxuan-owyong"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2023-02-19"},{"lineNumber":180,"author":{"gitId":"jinxuan-owyong"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":181,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":182,"author":{"gitId":"jinxuan-owyong"},"content":"        return result;","lastModifiedDate":"2023-02-19"},{"lineNumber":183,"author":{"gitId":"jinxuan-owyong"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":184,"author":{"gitId":"jinxuan-owyong"},"content":"}","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"jinxuan-owyong":184}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinxuan-owyong"},"content":"package duke.storage;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"jinxuan-owyong"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"jinxuan-owyong"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"jinxuan-owyong"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"jinxuan-owyong"},"content":"import java.io.File;","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"jinxuan-owyong"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"jinxuan-owyong"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"jinxuan-owyong"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"jinxuan-owyong"},"content":" * Used for read/write operations to the default save directory: {projectDir}/data/save.txt","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"jinxuan-owyong"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"jinxuan-owyong"},"content":"public class Storage {","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"jinxuan-owyong"},"content":"    private static final String home \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"jinxuan-owyong"},"content":"    private static final Path SAVE_DIR \u003d Paths.get(home, \"data\");","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"jinxuan-owyong"},"content":"    private static final Path SAVE_FILE \u003d Paths.get(SAVE_DIR.toString(), \"save.txt\");","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"jinxuan-owyong"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"jinxuan-owyong"},"content":"     * Checks if the save data directory exists. Creates the directory if is does not exist.","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"jinxuan-owyong"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"jinxuan-owyong"},"content":"    private static void checkSaveDir() {","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"jinxuan-owyong"},"content":"        // check if file/directory exists","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"jinxuan-owyong"},"content":"        File dir \u003d new File(SAVE_DIR.toUri());","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"jinxuan-owyong"},"content":"        if (!dir.exists()) { // create directory if required","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"jinxuan-owyong"},"content":"            dir.mkdir();","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"jinxuan-owyong"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":27,"author":{"gitId":"jinxuan-owyong"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":28,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":29,"author":{"gitId":"jinxuan-owyong"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"jinxuan-owyong"},"content":"     * Writes the given string to the path provided. Overwrites the file if already existing.","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"jinxuan-owyong"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"jinxuan-owyong"},"content":"     * @param filePath  Path of the destination file","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"jinxuan-owyong"},"content":"     * @param textToAdd String to be written in the file","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"jinxuan-owyong"},"content":"     * @throws IOException If the write operation fails","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"jinxuan-owyong"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"jinxuan-owyong"},"content":"    private static void writeToFile(String filePath, String textToAdd) throws IOException {","lastModifiedDate":"2023-02-14"},{"lineNumber":37,"author":{"gitId":"jinxuan-owyong"},"content":"        checkSaveDir();","lastModifiedDate":"2023-02-14"},{"lineNumber":38,"author":{"gitId":"jinxuan-owyong"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2023-02-14"},{"lineNumber":39,"author":{"gitId":"jinxuan-owyong"},"content":"        fw.write(textToAdd);","lastModifiedDate":"2023-02-14"},{"lineNumber":40,"author":{"gitId":"jinxuan-owyong"},"content":"        fw.close();","lastModifiedDate":"2023-02-14"},{"lineNumber":41,"author":{"gitId":"jinxuan-owyong"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":42,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":43,"author":{"gitId":"jinxuan-owyong"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":44,"author":{"gitId":"jinxuan-owyong"},"content":"     * Reads the save data from the default save directory","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"jinxuan-owyong"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"jinxuan-owyong"},"content":"     * @return String containing JSON data of the saved items. Empty string if no data is saved.","lastModifiedDate":"2023-02-23"},{"lineNumber":47,"author":{"gitId":"jinxuan-owyong"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":48,"author":{"gitId":"jinxuan-owyong"},"content":"    public String read() {","lastModifiedDate":"2023-02-19"},{"lineNumber":49,"author":{"gitId":"jinxuan-owyong"},"content":"        checkSaveDir();","lastModifiedDate":"2023-02-17"},{"lineNumber":50,"author":{"gitId":"jinxuan-owyong"},"content":"        try {","lastModifiedDate":"2023-02-17"},{"lineNumber":51,"author":{"gitId":"jinxuan-owyong"},"content":"            return Files.readString(SAVE_FILE);","lastModifiedDate":"2023-02-19"},{"lineNumber":52,"author":{"gitId":"jinxuan-owyong"},"content":"        } catch (IOException err) {","lastModifiedDate":"2023-02-17"},{"lineNumber":53,"author":{"gitId":"jinxuan-owyong"},"content":"            return \"\";","lastModifiedDate":"2023-02-17"},{"lineNumber":54,"author":{"gitId":"jinxuan-owyong"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":55,"author":{"gitId":"jinxuan-owyong"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":56,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":57,"author":{"gitId":"jinxuan-owyong"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":58,"author":{"gitId":"jinxuan-owyong"},"content":"     * Saves the given String to the default save directory.","lastModifiedDate":"2023-02-23"},{"lineNumber":59,"author":{"gitId":"jinxuan-owyong"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":60,"author":{"gitId":"jinxuan-owyong"},"content":"     * @param saveData String to be saved","lastModifiedDate":"2023-02-23"},{"lineNumber":61,"author":{"gitId":"jinxuan-owyong"},"content":"     * @throws IOException If the save operation fails","lastModifiedDate":"2023-02-23"},{"lineNumber":62,"author":{"gitId":"jinxuan-owyong"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":63,"author":{"gitId":"jinxuan-owyong"},"content":"    public void save(String saveData) throws IOException {","lastModifiedDate":"2023-02-19"},{"lineNumber":64,"author":{"gitId":"jinxuan-owyong"},"content":"        writeToFile(SAVE_FILE.toString(), saveData);","lastModifiedDate":"2023-02-19"},{"lineNumber":65,"author":{"gitId":"jinxuan-owyong"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":66,"author":{"gitId":"jinxuan-owyong"},"content":"}","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"jinxuan-owyong":66}},{"path":"src/main/java/duke/tasklist/JsonParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinxuan-owyong"},"content":"package duke.tasklist;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"jinxuan-owyong"},"content":"import com.google.gson.*;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"jinxuan-owyong"},"content":"import duke.parser.DateTimeParser;","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"jinxuan-owyong"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"jinxuan-owyong"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"jinxuan-owyong"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"jinxuan-owyong"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"jinxuan-owyong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"jinxuan-owyong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"jinxuan-owyong"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"jinxuan-owyong"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"jinxuan-owyong"},"content":" * Serializes and deserializes tasks using the Gson library.","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"jinxuan-owyong"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"jinxuan-owyong"},"content":"public class JsonParser {","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"jinxuan-owyong"},"content":"    private static final GsonBuilder builder \u003d new GsonBuilder()","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"jinxuan-owyong"},"content":"            .registerTypeAdapter(LocalDateTime.class,","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"jinxuan-owyong"},"content":"                                 (JsonSerializer\u003cLocalDateTime\u003e) (json, type, jsonDeserializationContext)","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"jinxuan-owyong"},"content":"                                         -\u003e new JsonPrimitive(json.format(DateTimeParser.getFormatter())))","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"jinxuan-owyong"},"content":"            .registerTypeAdapter(LocalDateTime.class,","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"jinxuan-owyong"},"content":"                                 (JsonDeserializer\u003cLocalDateTime\u003e) (json, type, jsonDeserializationContext)","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"jinxuan-owyong"},"content":"                                         -\u003e LocalDateTime.parse(json.getAsJsonPrimitive().getAsString(),","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"jinxuan-owyong"},"content":"                                                                DateTimeParser.getFormatter()))","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"jinxuan-owyong"},"content":"            .create().newBuilder();","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"jinxuan-owyong"},"content":"    static final Gson gson \u003d builder.create();","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"jinxuan-owyong"},"content":"    private static final String TASK_TODO \u003d \"TODO\";","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"jinxuan-owyong"},"content":"    private static final String TASK_DEADLINE \u003d \"DEADLINE\";","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"jinxuan-owyong"},"content":"    private static final String TASK_EVENT \u003d \"EVENT\";","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"jinxuan-owyong"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"jinxuan-owyong"},"content":"     * Deserializes the given string in JSON format.","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"jinxuan-owyong"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"jinxuan-owyong"},"content":"     * @param json Tasks to be deserialized","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"jinxuan-owyong"},"content":"     * @return ArrayList containing Task objects corresponding to the saved data","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"jinxuan-owyong"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"jinxuan-owyong"},"content":"    public static ArrayList\u003cTask\u003e fromJson(String json) {","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"jinxuan-owyong"},"content":"        Scanner scanner \u003d new Scanner(json);","lastModifiedDate":"2023-02-23"},{"lineNumber":40,"author":{"gitId":"jinxuan-owyong"},"content":"        ArrayList\u003cTask\u003e savedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"jinxuan-owyong"},"content":"        while (scanner.hasNextLine()) {","lastModifiedDate":"2023-02-23"},{"lineNumber":42,"author":{"gitId":"jinxuan-owyong"},"content":"            String task \u003d scanner.nextLine();","lastModifiedDate":"2023-02-23"},{"lineNumber":43,"author":{"gitId":"jinxuan-owyong"},"content":"            savedTasks.add(deserializeJSON(task));","lastModifiedDate":"2023-02-23"},{"lineNumber":44,"author":{"gitId":"jinxuan-owyong"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"jinxuan-owyong"},"content":"        return savedTasks;","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"jinxuan-owyong"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":47,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":48,"author":{"gitId":"jinxuan-owyong"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":49,"author":{"gitId":"jinxuan-owyong"},"content":"     * Serializes the given tasks into JSON format.","lastModifiedDate":"2023-02-23"},{"lineNumber":50,"author":{"gitId":"jinxuan-owyong"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":51,"author":{"gitId":"jinxuan-owyong"},"content":"     * @param tasks Tasks to be serialized","lastModifiedDate":"2023-02-23"},{"lineNumber":52,"author":{"gitId":"jinxuan-owyong"},"content":"     * @return String containing serialized tasks in JSON format","lastModifiedDate":"2023-02-23"},{"lineNumber":53,"author":{"gitId":"jinxuan-owyong"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":54,"author":{"gitId":"jinxuan-owyong"},"content":"    public static String toJson(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-23"},{"lineNumber":55,"author":{"gitId":"jinxuan-owyong"},"content":"        StringBuilder saveData \u003d new StringBuilder();","lastModifiedDate":"2023-02-23"},{"lineNumber":56,"author":{"gitId":"jinxuan-owyong"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2023-02-23"},{"lineNumber":57,"author":{"gitId":"jinxuan-owyong"},"content":"            String json \u003d gson.toJson(t);","lastModifiedDate":"2023-02-23"},{"lineNumber":58,"author":{"gitId":"jinxuan-owyong"},"content":"            saveData.append(json);","lastModifiedDate":"2023-02-23"},{"lineNumber":59,"author":{"gitId":"jinxuan-owyong"},"content":"            saveData.append(System.lineSeparator());","lastModifiedDate":"2023-02-23"},{"lineNumber":60,"author":{"gitId":"jinxuan-owyong"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":61,"author":{"gitId":"jinxuan-owyong"},"content":"        return saveData.toString();","lastModifiedDate":"2023-02-23"},{"lineNumber":62,"author":{"gitId":"jinxuan-owyong"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":63,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":64,"author":{"gitId":"jinxuan-owyong"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":65,"author":{"gitId":"jinxuan-owyong"},"content":"     * Convert the JSON string into the corresponding task. If the data is corrupted, a generic Task object is returned.","lastModifiedDate":"2023-02-23"},{"lineNumber":66,"author":{"gitId":"jinxuan-owyong"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":67,"author":{"gitId":"jinxuan-owyong"},"content":"     * @param json Task to be deserialized","lastModifiedDate":"2023-02-23"},{"lineNumber":68,"author":{"gitId":"jinxuan-owyong"},"content":"     * @return Task object corresponding to the JSON string","lastModifiedDate":"2023-02-23"},{"lineNumber":69,"author":{"gitId":"jinxuan-owyong"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":70,"author":{"gitId":"jinxuan-owyong"},"content":"    public static Task deserializeJSON(String json) {","lastModifiedDate":"2023-02-23"},{"lineNumber":71,"author":{"gitId":"jinxuan-owyong"},"content":"        JsonObject j \u003d gson.fromJson(json, JsonObject.class);","lastModifiedDate":"2023-02-23"},{"lineNumber":72,"author":{"gitId":"jinxuan-owyong"},"content":"        Task t;","lastModifiedDate":"2023-02-23"},{"lineNumber":73,"author":{"gitId":"jinxuan-owyong"},"content":"        String taskType \u003d j.get(\"type\").getAsString();","lastModifiedDate":"2023-02-23"},{"lineNumber":74,"author":{"gitId":"jinxuan-owyong"},"content":"        switch (taskType) {","lastModifiedDate":"2023-02-23"},{"lineNumber":75,"author":{"gitId":"jinxuan-owyong"},"content":"        case TASK_TODO:","lastModifiedDate":"2023-02-23"},{"lineNumber":76,"author":{"gitId":"jinxuan-owyong"},"content":"            t \u003d gson.fromJson(j, ToDo.class);","lastModifiedDate":"2023-02-23"},{"lineNumber":77,"author":{"gitId":"jinxuan-owyong"},"content":"            break;","lastModifiedDate":"2023-02-23"},{"lineNumber":78,"author":{"gitId":"jinxuan-owyong"},"content":"        case TASK_EVENT:","lastModifiedDate":"2023-02-23"},{"lineNumber":79,"author":{"gitId":"jinxuan-owyong"},"content":"            t \u003d gson.fromJson(j, Event.class);","lastModifiedDate":"2023-02-23"},{"lineNumber":80,"author":{"gitId":"jinxuan-owyong"},"content":"            break;","lastModifiedDate":"2023-02-23"},{"lineNumber":81,"author":{"gitId":"jinxuan-owyong"},"content":"        case TASK_DEADLINE:","lastModifiedDate":"2023-02-23"},{"lineNumber":82,"author":{"gitId":"jinxuan-owyong"},"content":"            t \u003d gson.fromJson(j, Deadline.class);","lastModifiedDate":"2023-02-23"},{"lineNumber":83,"author":{"gitId":"jinxuan-owyong"},"content":"            break;","lastModifiedDate":"2023-02-23"},{"lineNumber":84,"author":{"gitId":"jinxuan-owyong"},"content":"        default:","lastModifiedDate":"2023-02-23"},{"lineNumber":85,"author":{"gitId":"jinxuan-owyong"},"content":"            t \u003d gson.fromJson(j, Task.class);","lastModifiedDate":"2023-02-23"},{"lineNumber":86,"author":{"gitId":"jinxuan-owyong"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":87,"author":{"gitId":"jinxuan-owyong"},"content":"        return t;","lastModifiedDate":"2023-02-23"},{"lineNumber":88,"author":{"gitId":"jinxuan-owyong"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":89,"author":{"gitId":"jinxuan-owyong"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"jinxuan-owyong":89}},{"path":"src/main/java/duke/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinxuan-owyong"},"content":"package duke.tasklist;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"jinxuan-owyong"},"content":"import duke.exceptions.InvalidInputIDException;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"jinxuan-owyong"},"content":"import duke.exceptions.NoTaskException;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"jinxuan-owyong"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"jinxuan-owyong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"jinxuan-owyong"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"jinxuan-owyong"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"jinxuan-owyong"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"jinxuan-owyong"},"content":" * A list used to store and access all tasks created.","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"jinxuan-owyong"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"jinxuan-owyong"},"content":"public class TaskList {","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"jinxuan-owyong"},"content":"    private static final String MESSAGE_TASKS_MARKED \u003d \"Nice! I\u0027ve marked this task as done:\";","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"jinxuan-owyong"},"content":"    private static final String MESSAGE_TASKS_UNMARKED \u003d \"OK, I\u0027ve marked this task as not done yet:\";","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"jinxuan-owyong"},"content":"    private static final String MESSAGE_TASKS_AVAILABLE \u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"jinxuan-owyong"},"content":"    private static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"jinxuan-owyong"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"jinxuan-owyong"},"content":"     * Initialise the object using JSON string.","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"jinxuan-owyong"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"jinxuan-owyong"},"content":"     * @param json String to be deserialized","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"jinxuan-owyong"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"jinxuan-owyong"},"content":"    public TaskList(String json) {","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"jinxuan-owyong"},"content":"        tasks \u003d JsonParser.fromJson(json);","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"jinxuan-owyong"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"jinxuan-owyong"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"jinxuan-owyong"},"content":"     * Add a task to the list.","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"jinxuan-owyong"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"jinxuan-owyong"},"content":"     * @param taskObj Task object to be added","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"jinxuan-owyong"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"jinxuan-owyong"},"content":"    public void add(Task taskObj) {","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"jinxuan-owyong"},"content":"        tasks.add(taskObj);","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"jinxuan-owyong"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"jinxuan-owyong"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"jinxuan-owyong"},"content":"     * Get the size of the list.","lastModifiedDate":"2023-02-23"},{"lineNumber":40,"author":{"gitId":"jinxuan-owyong"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"jinxuan-owyong"},"content":"     * @return Integer","lastModifiedDate":"2023-02-23"},{"lineNumber":42,"author":{"gitId":"jinxuan-owyong"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":43,"author":{"gitId":"jinxuan-owyong"},"content":"    public int size() {","lastModifiedDate":"2023-02-17"},{"lineNumber":44,"author":{"gitId":"jinxuan-owyong"},"content":"        return tasks.size();","lastModifiedDate":"2023-02-17"},{"lineNumber":45,"author":{"gitId":"jinxuan-owyong"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":46,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":47,"author":{"gitId":"jinxuan-owyong"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":48,"author":{"gitId":"jinxuan-owyong"},"content":"     * Delete a task from the list.","lastModifiedDate":"2023-02-23"},{"lineNumber":49,"author":{"gitId":"jinxuan-owyong"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":50,"author":{"gitId":"jinxuan-owyong"},"content":"     * @param id 1-based ID corresponding to the task","lastModifiedDate":"2023-02-23"},{"lineNumber":51,"author":{"gitId":"jinxuan-owyong"},"content":"     * @return Copy of the task deleted","lastModifiedDate":"2023-02-23"},{"lineNumber":52,"author":{"gitId":"jinxuan-owyong"},"content":"     * @throws InvalidInputIDException If the given ID is invalid","lastModifiedDate":"2023-02-23"},{"lineNumber":53,"author":{"gitId":"jinxuan-owyong"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":54,"author":{"gitId":"jinxuan-owyong"},"content":"    public Task delete(int id) throws InvalidInputIDException {","lastModifiedDate":"2023-02-19"},{"lineNumber":55,"author":{"gitId":"jinxuan-owyong"},"content":"        if (id \u003c 1 || id \u003e tasks.size()) {","lastModifiedDate":"2023-02-19"},{"lineNumber":56,"author":{"gitId":"jinxuan-owyong"},"content":"            throw new InvalidInputIDException();","lastModifiedDate":"2023-02-19"},{"lineNumber":57,"author":{"gitId":"jinxuan-owyong"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":58,"author":{"gitId":"jinxuan-owyong"},"content":"        Task temp \u003d tasks.get(id - 1);","lastModifiedDate":"2023-02-17"},{"lineNumber":59,"author":{"gitId":"jinxuan-owyong"},"content":"        tasks.remove(id - 1);","lastModifiedDate":"2023-02-17"},{"lineNumber":60,"author":{"gitId":"jinxuan-owyong"},"content":"        return temp;","lastModifiedDate":"2023-02-17"},{"lineNumber":61,"author":{"gitId":"jinxuan-owyong"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":62,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":63,"author":{"gitId":"jinxuan-owyong"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":64,"author":{"gitId":"jinxuan-owyong"},"content":"     * Set the completion status of a task","lastModifiedDate":"2023-02-23"},{"lineNumber":65,"author":{"gitId":"jinxuan-owyong"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":66,"author":{"gitId":"jinxuan-owyong"},"content":"     * @param id          1-based ID corresponding to the task","lastModifiedDate":"2023-02-23"},{"lineNumber":67,"author":{"gitId":"jinxuan-owyong"},"content":"     * @param isCompleted The completion status","lastModifiedDate":"2023-02-23"},{"lineNumber":68,"author":{"gitId":"jinxuan-owyong"},"content":"     * @return String describing the action completed and task changed","lastModifiedDate":"2023-02-23"},{"lineNumber":69,"author":{"gitId":"jinxuan-owyong"},"content":"     * @throws NoTaskException         If the list is empty","lastModifiedDate":"2023-02-23"},{"lineNumber":70,"author":{"gitId":"jinxuan-owyong"},"content":"     * @throws InvalidInputIDException If the given ID is invalid","lastModifiedDate":"2023-02-23"},{"lineNumber":71,"author":{"gitId":"jinxuan-owyong"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":72,"author":{"gitId":"jinxuan-owyong"},"content":"    public String setStatus(int id, boolean isCompleted) throws NoTaskException, InvalidInputIDException {","lastModifiedDate":"2023-02-23"},{"lineNumber":73,"author":{"gitId":"jinxuan-owyong"},"content":"        try {","lastModifiedDate":"2023-02-17"},{"lineNumber":74,"author":{"gitId":"jinxuan-owyong"},"content":"            if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-02-23"},{"lineNumber":75,"author":{"gitId":"jinxuan-owyong"},"content":"                throw new NoTaskException();","lastModifiedDate":"2023-02-23"},{"lineNumber":76,"author":{"gitId":"jinxuan-owyong"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":77,"author":{"gitId":"jinxuan-owyong"},"content":"            tasks.get(id).setIsCompleted(isCompleted);","lastModifiedDate":"2023-02-17"},{"lineNumber":78,"author":{"gitId":"jinxuan-owyong"},"content":"            String output \u003d isCompleted","lastModifiedDate":"2023-02-17"},{"lineNumber":79,"author":{"gitId":"jinxuan-owyong"},"content":"                            ? MESSAGE_TASKS_MARKED + \"\\n\"","lastModifiedDate":"2023-02-17"},{"lineNumber":80,"author":{"gitId":"jinxuan-owyong"},"content":"                            : MESSAGE_TASKS_UNMARKED + \"\\n\";","lastModifiedDate":"2023-02-17"},{"lineNumber":81,"author":{"gitId":"jinxuan-owyong"},"content":"            output +\u003d tasks.get(id).describe();","lastModifiedDate":"2023-02-17"},{"lineNumber":82,"author":{"gitId":"jinxuan-owyong"},"content":"            return output;","lastModifiedDate":"2023-02-17"},{"lineNumber":83,"author":{"gitId":"jinxuan-owyong"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":84,"author":{"gitId":"jinxuan-owyong"},"content":"            throw new InvalidInputIDException();","lastModifiedDate":"2023-02-23"},{"lineNumber":85,"author":{"gitId":"jinxuan-owyong"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":86,"author":{"gitId":"jinxuan-owyong"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":87,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":88,"author":{"gitId":"jinxuan-owyong"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":89,"author":{"gitId":"jinxuan-owyong"},"content":"     * Lists all the tasks available in the list with their corresponding id","lastModifiedDate":"2023-02-23"},{"lineNumber":90,"author":{"gitId":"jinxuan-owyong"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":91,"author":{"gitId":"jinxuan-owyong"},"content":"     * @return String containing the tasks","lastModifiedDate":"2023-02-23"},{"lineNumber":92,"author":{"gitId":"jinxuan-owyong"},"content":"     * @throws NoTaskException If the list is empty","lastModifiedDate":"2023-02-23"},{"lineNumber":93,"author":{"gitId":"jinxuan-owyong"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":94,"author":{"gitId":"jinxuan-owyong"},"content":"    public String listAll() throws NoTaskException {","lastModifiedDate":"2023-02-23"},{"lineNumber":95,"author":{"gitId":"jinxuan-owyong"},"content":"        return listAll(tasks);","lastModifiedDate":"2023-02-23"},{"lineNumber":96,"author":{"gitId":"jinxuan-owyong"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":97,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":98,"author":{"gitId":"jinxuan-owyong"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":99,"author":{"gitId":"jinxuan-owyong"},"content":"     * Lists all the tasks available in the list with their corresponding id","lastModifiedDate":"2023-02-23"},{"lineNumber":100,"author":{"gitId":"jinxuan-owyong"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":101,"author":{"gitId":"jinxuan-owyong"},"content":"     * @param tasks ArrayList containing the tasks","lastModifiedDate":"2023-02-23"},{"lineNumber":102,"author":{"gitId":"jinxuan-owyong"},"content":"     * @return String containing the tasks","lastModifiedDate":"2023-02-23"},{"lineNumber":103,"author":{"gitId":"jinxuan-owyong"},"content":"     * @throws NoTaskException If the list is empty","lastModifiedDate":"2023-02-23"},{"lineNumber":104,"author":{"gitId":"jinxuan-owyong"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":105,"author":{"gitId":"jinxuan-owyong"},"content":"    public static String listAll(ArrayList\u003cTask\u003e tasks) throws NoTaskException {","lastModifiedDate":"2023-02-23"},{"lineNumber":106,"author":{"gitId":"jinxuan-owyong"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-02-23"},{"lineNumber":107,"author":{"gitId":"jinxuan-owyong"},"content":"            throw new NoTaskException();","lastModifiedDate":"2023-02-23"},{"lineNumber":108,"author":{"gitId":"jinxuan-owyong"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":109,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":110,"author":{"gitId":"jinxuan-owyong"},"content":"        // adds tasks to output, if any","lastModifiedDate":"2023-02-17"},{"lineNumber":111,"author":{"gitId":"jinxuan-owyong"},"content":"        // combine details of tasks into a single string","lastModifiedDate":"2023-02-17"},{"lineNumber":112,"author":{"gitId":"jinxuan-owyong"},"content":"        StringBuilder output \u003d new StringBuilder(MESSAGE_TASKS_AVAILABLE);","lastModifiedDate":"2023-02-23"},{"lineNumber":113,"author":{"gitId":"jinxuan-owyong"},"content":"        output.append(System.lineSeparator());","lastModifiedDate":"2023-02-23"},{"lineNumber":114,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":115,"author":{"gitId":"jinxuan-owyong"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); ++i) {","lastModifiedDate":"2023-02-17"},{"lineNumber":116,"author":{"gitId":"jinxuan-owyong"},"content":"            output.append(i + 1)","lastModifiedDate":"2023-02-17"},{"lineNumber":117,"author":{"gitId":"jinxuan-owyong"},"content":"                  .append(\".\") // number","lastModifiedDate":"2023-02-17"},{"lineNumber":118,"author":{"gitId":"jinxuan-owyong"},"content":"                  .append(tasks.get(i).describe())","lastModifiedDate":"2023-02-17"},{"lineNumber":119,"author":{"gitId":"jinxuan-owyong"},"content":"                  .append(System.lineSeparator());","lastModifiedDate":"2023-02-23"},{"lineNumber":120,"author":{"gitId":"jinxuan-owyong"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":121,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":122,"author":{"gitId":"jinxuan-owyong"},"content":"        return output.toString();","lastModifiedDate":"2023-02-17"},{"lineNumber":123,"author":{"gitId":"jinxuan-owyong"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":124,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":125,"author":{"gitId":"jinxuan-owyong"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":126,"author":{"gitId":"jinxuan-owyong"},"content":"     * Searches for the keyword specified by the user.","lastModifiedDate":"2023-02-23"},{"lineNumber":127,"author":{"gitId":"jinxuan-owyong"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":128,"author":{"gitId":"jinxuan-owyong"},"content":"     * @param keyword The string to be searched (Supports RegEx format, search is case-insensitive)","lastModifiedDate":"2023-02-23"},{"lineNumber":129,"author":{"gitId":"jinxuan-owyong"},"content":"     * @return String containing matching tasks","lastModifiedDate":"2023-02-23"},{"lineNumber":130,"author":{"gitId":"jinxuan-owyong"},"content":"     * @throws NoTaskException If there are no tasks in the list","lastModifiedDate":"2023-02-23"},{"lineNumber":131,"author":{"gitId":"jinxuan-owyong"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":132,"author":{"gitId":"jinxuan-owyong"},"content":"    public String find(String keyword) throws NoTaskException {","lastModifiedDate":"2023-02-23"},{"lineNumber":133,"author":{"gitId":"jinxuan-owyong"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-23"},{"lineNumber":134,"author":{"gitId":"jinxuan-owyong"},"content":"        Pattern pattern \u003d Pattern.compile(keyword, Pattern.CASE_INSENSITIVE);","lastModifiedDate":"2023-02-23"},{"lineNumber":135,"author":{"gitId":"jinxuan-owyong"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-02-23"},{"lineNumber":136,"author":{"gitId":"jinxuan-owyong"},"content":"            Matcher matcher \u003d pattern.matcher(task.describe());","lastModifiedDate":"2023-02-23"},{"lineNumber":137,"author":{"gitId":"jinxuan-owyong"},"content":"            if (matcher.find()) {","lastModifiedDate":"2023-02-23"},{"lineNumber":138,"author":{"gitId":"jinxuan-owyong"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2023-02-23"},{"lineNumber":139,"author":{"gitId":"jinxuan-owyong"},"content":"            }","lastModifiedDate":"2023-02-23"},{"lineNumber":140,"author":{"gitId":"jinxuan-owyong"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":141,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":142,"author":{"gitId":"jinxuan-owyong"},"content":"        if (matchingTasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-02-23"},{"lineNumber":143,"author":{"gitId":"jinxuan-owyong"},"content":"            throw new NoTaskException();","lastModifiedDate":"2023-02-23"},{"lineNumber":144,"author":{"gitId":"jinxuan-owyong"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":145,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":146,"author":{"gitId":"jinxuan-owyong"},"content":"        return listAll(matchingTasks);","lastModifiedDate":"2023-02-23"},{"lineNumber":147,"author":{"gitId":"jinxuan-owyong"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":148,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":149,"author":{"gitId":"jinxuan-owyong"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":150,"author":{"gitId":"jinxuan-owyong"},"content":"     * Serializes the stored tasks into JSON format.","lastModifiedDate":"2023-02-23"},{"lineNumber":151,"author":{"gitId":"jinxuan-owyong"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":152,"author":{"gitId":"jinxuan-owyong"},"content":"     * @return String in JSON format","lastModifiedDate":"2023-02-23"},{"lineNumber":153,"author":{"gitId":"jinxuan-owyong"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":154,"author":{"gitId":"jinxuan-owyong"},"content":"    public String toJson() {","lastModifiedDate":"2023-02-17"},{"lineNumber":155,"author":{"gitId":"jinxuan-owyong"},"content":"        return JsonParser.toJson(tasks);","lastModifiedDate":"2023-02-23"},{"lineNumber":156,"author":{"gitId":"jinxuan-owyong"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":157,"author":{"gitId":"jinxuan-owyong"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"jinxuan-owyong":157}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinxuan-owyong"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"jinxuan-owyong"},"content":"import duke.parser.DateTimeParser;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"jinxuan-owyong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"jinxuan-owyong"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"jinxuan-owyong"},"content":"    public static final String MARKER \u003d \"D\";","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"jinxuan-owyong"},"content":"    private final LocalDateTime by;","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"jinxuan-owyong"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"jinxuan-owyong"},"content":"        super(description, TaskEnum.DEADLINE);","lastModifiedDate":"2023-02-22"},{"lineNumber":13,"author":{"gitId":"jinxuan-owyong"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-02-22"},{"lineNumber":14,"author":{"gitId":"jinxuan-owyong"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"jinxuan-owyong"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"jinxuan-owyong"},"content":"     * Describes the task with its task type, status, description and completion deadline.","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"jinxuan-owyong"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"jinxuan-owyong"},"content":"     * @return String describing the task","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"jinxuan-owyong"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"jinxuan-owyong"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"jinxuan-owyong"},"content":"    public String describe() {","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"jinxuan-owyong"},"content":"        return getCheckbox(true, MARKER)","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"jinxuan-owyong"},"content":"                + super.describe()","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"jinxuan-owyong"},"content":"                + \" (by: \" + by.format(DateTimeParser.getFormatter())","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"jinxuan-owyong"},"content":"                + \")\";","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"jinxuan-owyong"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"jinxuan-owyong"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"jinxuan-owyong":28}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinxuan-owyong"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"jinxuan-owyong"},"content":"import duke.parser.DateTimeParser;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"jinxuan-owyong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"jinxuan-owyong"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"jinxuan-owyong"},"content":"    public static final String MARKER \u003d \"E\";","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"jinxuan-owyong"},"content":"    private final LocalDateTime from, to;","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"jinxuan-owyong"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"jinxuan-owyong"},"content":"        super(description, TaskEnum.EVENT);","lastModifiedDate":"2023-02-22"},{"lineNumber":13,"author":{"gitId":"jinxuan-owyong"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-02-22"},{"lineNumber":14,"author":{"gitId":"jinxuan-owyong"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-02-22"},{"lineNumber":15,"author":{"gitId":"jinxuan-owyong"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"jinxuan-owyong"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"jinxuan-owyong"},"content":"     * Describes the task with its task type, status, description, event start and end details.","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"jinxuan-owyong"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"jinxuan-owyong"},"content":"     * @return String describing the task","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"jinxuan-owyong"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"jinxuan-owyong"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"jinxuan-owyong"},"content":"    public String describe() {","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"jinxuan-owyong"},"content":"        return getCheckbox(true, MARKER)","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"jinxuan-owyong"},"content":"                + super.describe()","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"jinxuan-owyong"},"content":"                + \" (from: \" + from.format(DateTimeParser.getFormatter())","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"jinxuan-owyong"},"content":"                + \" to: \" + to.format(DateTimeParser.getFormatter())","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"jinxuan-owyong"},"content":"                + \")\";","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"jinxuan-owyong"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"jinxuan-owyong"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"jinxuan-owyong":30}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinxuan-owyong"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"jinxuan-owyong"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"jinxuan-owyong"},"content":" * Parent class for all tasks created. Can be initialised as a generic task","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"jinxuan-owyong"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"jinxuan-owyong"},"content":"public class Task {","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"jinxuan-owyong"},"content":"    private final String name;","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"jinxuan-owyong"},"content":"    private boolean isCompleted;","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"jinxuan-owyong"},"content":"    private final TaskEnum type;","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"jinxuan-owyong"},"content":"    private static final String checkbox \u003d \"X\";","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"jinxuan-owyong"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"jinxuan-owyong"},"content":"     * Initialise the Task object.","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"jinxuan-owyong"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"jinxuan-owyong"},"content":"     * @param name Description of the task","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"jinxuan-owyong"},"content":"     * @param type TaskEnum, for deserializing from JSON","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"jinxuan-owyong"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"jinxuan-owyong"},"content":"    public Task(String name, TaskEnum type) {","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"jinxuan-owyong"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"jinxuan-owyong"},"content":"        isCompleted \u003d false;","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"jinxuan-owyong"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"jinxuan-owyong"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"jinxuan-owyong"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"jinxuan-owyong"},"content":"     * Set whether the task is completed or not.","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"jinxuan-owyong"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"jinxuan-owyong"},"content":"     * @param state true if task is completed, false otherwise","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"jinxuan-owyong"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"jinxuan-owyong"},"content":"    public void setIsCompleted(boolean state) {","lastModifiedDate":"2023-01-21"},{"lineNumber":30,"author":{"gitId":"jinxuan-owyong"},"content":"        isCompleted \u003d state;","lastModifiedDate":"2023-01-21"},{"lineNumber":31,"author":{"gitId":"jinxuan-owyong"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":32,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"jinxuan-owyong"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"jinxuan-owyong"},"content":"     * A helper function which visualises the task status, uses the default marker X.","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"jinxuan-owyong"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"jinxuan-owyong"},"content":"     * @param checked Status of the task","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"jinxuan-owyong"},"content":"     * @return String visualising if the task is checked [X] or not [ ]","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"jinxuan-owyong"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"jinxuan-owyong"},"content":"    public static String getCheckbox(boolean checked) {","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"jinxuan-owyong"},"content":"        return \"[\" + (checked ? checkbox : \" \") + \"]\";","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"jinxuan-owyong"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"jinxuan-owyong"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":44,"author":{"gitId":"jinxuan-owyong"},"content":"     * A helper function which visualises the task status, uses the marker provided.","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"jinxuan-owyong"},"content":"     * Is also used for showing the type of the task - [T], [D], [E].","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"jinxuan-owyong"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":47,"author":{"gitId":"jinxuan-owyong"},"content":"     * @param checked Status of the checkbox","lastModifiedDate":"2023-02-23"},{"lineNumber":48,"author":{"gitId":"jinxuan-owyong"},"content":"     * @param marker  Marker to be shown","lastModifiedDate":"2023-02-23"},{"lineNumber":49,"author":{"gitId":"jinxuan-owyong"},"content":"     * @return String showing checkbox with marker if true, without if false","lastModifiedDate":"2023-02-23"},{"lineNumber":50,"author":{"gitId":"jinxuan-owyong"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":51,"author":{"gitId":"jinxuan-owyong"},"content":"    public static String getCheckbox(boolean checked, String marker) {","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"jinxuan-owyong"},"content":"        return \"[\" + (checked ? marker : \" \") + \"]\";","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"jinxuan-owyong"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":54,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"jinxuan-owyong"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":56,"author":{"gitId":"jinxuan-owyong"},"content":"     * Describes the task with its status and description.","lastModifiedDate":"2023-02-23"},{"lineNumber":57,"author":{"gitId":"jinxuan-owyong"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":58,"author":{"gitId":"jinxuan-owyong"},"content":"     * @return String describing the task","lastModifiedDate":"2023-02-23"},{"lineNumber":59,"author":{"gitId":"jinxuan-owyong"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":60,"author":{"gitId":"jinxuan-owyong"},"content":"    public String describe() {","lastModifiedDate":"2023-01-30"},{"lineNumber":61,"author":{"gitId":"jinxuan-owyong"},"content":"        return getCheckbox(isCompleted) + \" \" + name;","lastModifiedDate":"2023-01-30"},{"lineNumber":62,"author":{"gitId":"jinxuan-owyong"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":63,"author":{"gitId":"jinxuan-owyong"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"jinxuan-owyong":63}},{"path":"src/main/java/duke/tasks/TaskEnum.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinxuan-owyong"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"jinxuan-owyong"},"content":"public enum TaskEnum {","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"jinxuan-owyong"},"content":"    TODO, DEADLINE, EVENT, UNDEFINED","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"jinxuan-owyong"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"jinxuan-owyong":5}},{"path":"src/main/java/duke/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinxuan-owyong"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"jinxuan-owyong"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"jinxuan-owyong"},"content":"    public static final String MARKER \u003d \"T\";","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"jinxuan-owyong"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-02-22"},{"lineNumber":7,"author":{"gitId":"jinxuan-owyong"},"content":"        super(description, TaskEnum.TODO);","lastModifiedDate":"2023-02-22"},{"lineNumber":8,"author":{"gitId":"jinxuan-owyong"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"jinxuan-owyong"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"jinxuan-owyong"},"content":"     * Describes the task with its task type, status and description.","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"jinxuan-owyong"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"jinxuan-owyong"},"content":"     * @return String describing the task","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"jinxuan-owyong"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"jinxuan-owyong"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"jinxuan-owyong"},"content":"    public String describe() {","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"jinxuan-owyong"},"content":"        return getCheckbox(true, MARKER) + super.describe();","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"jinxuan-owyong"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"jinxuan-owyong"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"jinxuan-owyong":19}},{"path":"src/main/java/duke/ui/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinxuan-owyong"},"content":"package duke.ui;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"jinxuan-owyong"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"jinxuan-owyong"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"jinxuan-owyong"},"content":" * Handles all UI outputs","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"jinxuan-owyong"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"jinxuan-owyong"},"content":"public class UI {","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"jinxuan-owyong"},"content":"    private static final String INDENT \u003d \"    \";","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"jinxuan-owyong"},"content":"    private static final String LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"jinxuan-owyong"},"content":"    private static final String LOGO \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"jinxuan-owyong"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"jinxuan-owyong"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"jinxuan-owyong"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"jinxuan-owyong"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"jinxuan-owyong"},"content":"    private static final String MESSAGE_EXIT \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"jinxuan-owyong"},"content":"    private static final String MESSAGE_GREET \u003d \"Hello! I\u0027m Duke\\nWhat can I do for you?\";","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"jinxuan-owyong"},"content":"    private static final String MESSAGE_LOGO \u003d \"Hello from\";","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"jinxuan-owyong"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"jinxuan-owyong"},"content":"     * Prints the given string with indentation.","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"jinxuan-owyong"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"jinxuan-owyong"},"content":"     * @param output String to be printed","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"jinxuan-owyong"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"jinxuan-owyong"},"content":"    public void print(String output) {","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"jinxuan-owyong"},"content":"        Scanner scan \u003d new Scanner(output);","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"jinxuan-owyong"},"content":"        while (scan.hasNextLine()) { // add indentation","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"jinxuan-owyong"},"content":"            System.out.println(INDENT + scan.nextLine());","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"jinxuan-owyong"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"jinxuan-owyong"},"content":"        scan.close();","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"jinxuan-owyong"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"jinxuan-owyong"},"content":"    public void printLogo() {","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"jinxuan-owyong"},"content":"        print(MESSAGE_LOGO + System.lineSeparator() + LOGO);","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"jinxuan-owyong"},"content":"        printLine();","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"jinxuan-owyong"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"jinxuan-owyong"},"content":"    public void printLine() {","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"jinxuan-owyong"},"content":"        print(LINE + \"\\n\");","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"jinxuan-owyong"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"jinxuan-owyong"},"content":"    public void greet() {","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"jinxuan-owyong"},"content":"        print(MESSAGE_GREET);","lastModifiedDate":"2023-02-17"},{"lineNumber":44,"author":{"gitId":"jinxuan-owyong"},"content":"        printLine();","lastModifiedDate":"2023-02-17"},{"lineNumber":45,"author":{"gitId":"jinxuan-owyong"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":46,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":47,"author":{"gitId":"jinxuan-owyong"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":48,"author":{"gitId":"jinxuan-owyong"},"content":"     * Prints the message after a new task is created.","lastModifiedDate":"2023-02-23"},{"lineNumber":49,"author":{"gitId":"jinxuan-owyong"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":50,"author":{"gitId":"jinxuan-owyong"},"content":"     * @param description Description of the task added","lastModifiedDate":"2023-02-23"},{"lineNumber":51,"author":{"gitId":"jinxuan-owyong"},"content":"     * @param numTasks    Number of tasks in the list","lastModifiedDate":"2023-02-23"},{"lineNumber":52,"author":{"gitId":"jinxuan-owyong"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":53,"author":{"gitId":"jinxuan-owyong"},"content":"    public void printTaskAdded(String description, int numTasks) {","lastModifiedDate":"2023-02-17"},{"lineNumber":54,"author":{"gitId":"jinxuan-owyong"},"content":"        String output \u003d \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2023-02-17"},{"lineNumber":55,"author":{"gitId":"jinxuan-owyong"},"content":"                + INDENT + description + \"\\n\"","lastModifiedDate":"2023-02-17"},{"lineNumber":56,"author":{"gitId":"jinxuan-owyong"},"content":"                + \"Now you have \" + numTasks + \" tasks in the list\";","lastModifiedDate":"2023-02-17"},{"lineNumber":57,"author":{"gitId":"jinxuan-owyong"},"content":"        print(output);","lastModifiedDate":"2023-02-17"},{"lineNumber":58,"author":{"gitId":"jinxuan-owyong"},"content":"        printLine();","lastModifiedDate":"2023-02-17"},{"lineNumber":59,"author":{"gitId":"jinxuan-owyong"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":60,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":61,"author":{"gitId":"jinxuan-owyong"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":62,"author":{"gitId":"jinxuan-owyong"},"content":"     * Prints the message after a task is deleted.","lastModifiedDate":"2023-02-23"},{"lineNumber":63,"author":{"gitId":"jinxuan-owyong"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":64,"author":{"gitId":"jinxuan-owyong"},"content":"     * @param description Description of the task deleted","lastModifiedDate":"2023-02-23"},{"lineNumber":65,"author":{"gitId":"jinxuan-owyong"},"content":"     * @param numTasks    Number of tasks in the list","lastModifiedDate":"2023-02-23"},{"lineNumber":66,"author":{"gitId":"jinxuan-owyong"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":67,"author":{"gitId":"jinxuan-owyong"},"content":"    public void printTaskDeleted(String description, int numTasks) {","lastModifiedDate":"2023-02-17"},{"lineNumber":68,"author":{"gitId":"jinxuan-owyong"},"content":"        String output \u003d \"Noted. I have removed this task:\\n\"","lastModifiedDate":"2023-02-17"},{"lineNumber":69,"author":{"gitId":"jinxuan-owyong"},"content":"                + INDENT + description + \"\\n\"","lastModifiedDate":"2023-02-17"},{"lineNumber":70,"author":{"gitId":"jinxuan-owyong"},"content":"                + \"Now you have \" + numTasks + \" tasks in the list.\";","lastModifiedDate":"2023-02-17"},{"lineNumber":71,"author":{"gitId":"jinxuan-owyong"},"content":"        print(output);","lastModifiedDate":"2023-02-17"},{"lineNumber":72,"author":{"gitId":"jinxuan-owyong"},"content":"        printLine();","lastModifiedDate":"2023-02-17"},{"lineNumber":73,"author":{"gitId":"jinxuan-owyong"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":74,"author":{"gitId":"jinxuan-owyong"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":75,"author":{"gitId":"jinxuan-owyong"},"content":"    public void printExit() {","lastModifiedDate":"2023-02-17"},{"lineNumber":76,"author":{"gitId":"jinxuan-owyong"},"content":"        print(MESSAGE_EXIT);","lastModifiedDate":"2023-02-17"},{"lineNumber":77,"author":{"gitId":"jinxuan-owyong"},"content":"        printLine();","lastModifiedDate":"2023-02-17"},{"lineNumber":78,"author":{"gitId":"jinxuan-owyong"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":79,"author":{"gitId":"jinxuan-owyong"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"jinxuan-owyong":79}},{"path":"text-ui-test/data/save.example.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jinxuan-owyong"},"content":"{\"name\":\"Bake cookies\",\"isCompleted\":true,\"type\":\"TODO\"}","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"jinxuan-owyong"},"content":"{\"by\":\"tomorrow 4pm\",\"name\":\"Submit application form\",\"isCompleted\":false,\"type\":\"DEADLINE\"}","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"jinxuan-owyong"},"content":"{\"from\":\"2pm\",\"to\":\"6pm\",\"name\":\"Christmas celebration\",\"isCompleted\":false,\"type\":\"EVENT\"}","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"jinxuan-owyong":3}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jinxuan-owyong"},"content":"todo buy mango","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"jinxuan-owyong"},"content":"deadline submit CS2113 assignment /by tomorrow 2359","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"jinxuan-owyong"},"content":"list","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"jinxuan-owyong"},"content":"mark 2","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"jinxuan-owyong"},"content":"event recess week /from 18 feb /to 26 feb","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"jinxuan-owyong"},"content":"mark 1","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"jinxuan-owyong"},"content":"unmark 2","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"jinxuan-owyong"},"content":"mark 3","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"jinxuan-owyong"},"content":"list","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"jinxuan-owyong"},"content":"bye","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"jinxuan-owyong":10}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"jinxuan-owyong"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*\\*.java","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"jinxuan-owyong"},"content":"java -classpath ..\\bin duke\\Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jinxuan-owyong":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"jinxuan-owyong"},"content":"if ! javac --release 11 -cp ../src/main/java:../lib/gson/gson-2.10.1.jar -Xlint:none -d ../bin ../src/main/java/*/*.java ","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"jinxuan-owyong"},"content":"# copy the save file","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"jinxuan-owyong"},"content":"cp data/save.example.txt data/save.txt","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"jinxuan-owyong"},"content":"java -classpath ../bin:../lib/gson/gson-2.10.1.jar duke/Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jinxuan-owyong":4,"-":36}}]
