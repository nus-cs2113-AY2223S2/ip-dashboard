[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"notbingsu"},"content":"Users can add, mark, unmark, list tasks as needed.","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"notbingsu"},"content":"### Add task","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"notbingsu"},"content":"Users can add new tasks to the list. Tasks have 3 available types, Event, Todo and Deadline","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"notbingsu"},"content":"Format: `type of task` `name of task` date-attribute of task","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"notbingsu"},"content":"Example: deadline do tutorial /by Sunday","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"notbingsu"},"content":"Expected outcome:","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"notbingsu"},"content":"New tasks of correct type and description is added to task list","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"notbingsu"},"content":"### Add Todo (task subclass)","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"notbingsu"},"content":"Users can add todo tasks to the list.","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"notbingsu"},"content":"Format: todo `name of task`","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"notbingsu"},"content":"Example: todo eat","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"notbingsu"},"content":"Expected: task of type T is added to task list","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"notbingsu"},"content":"### Add Event (task subclass)","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"notbingsu"},"content":"Users can add Events to the list.","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"notbingsu"},"content":"Format: event `name of event` /from `start time` /to `end time`","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"notbingsu"},"content":"Example: event eat /from morning /to night","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"notbingsu"},"content":"Expected: task of type E is added to task list","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"notbingsu"},"content":"### Add Deadline (task subclass)","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"notbingsu"},"content":"Users can add Deadline to the list.","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"notbingsu"},"content":"Format: deadline `name of deadline` /by `due date`","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"notbingsu"},"content":"Example (correct LocalDate format): deadline return books /by 2022-03-05","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"notbingsu"},"content":"Example (incorrect LocalDate format): deadline return books /by next week","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"notbingsu"},"content":"Expected: task of type D is added to task list, user is alerted if date was not stored as LocalDate format","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"notbingsu"},"content":"### Mark task","lastModifiedDate":"2023-03-07"},{"lineNumber":46,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":47,"author":{"gitId":"notbingsu"},"content":"Users can mark tasks as done.","lastModifiedDate":"2023-03-07"},{"lineNumber":48,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":49,"author":{"gitId":"notbingsu"},"content":"Format: mark `task index`","lastModifiedDate":"2023-03-07"},{"lineNumber":50,"author":{"gitId":"notbingsu"},"content":"Example: mark 3","lastModifiedDate":"2023-03-07"},{"lineNumber":51,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":52,"author":{"gitId":"notbingsu"},"content":"Expected outcome:","lastModifiedDate":"2023-03-07"},{"lineNumber":53,"author":{"gitId":"notbingsu"},"content":"[ ] state of task(s) changes to [x] when marked as done.","lastModifiedDate":"2023-03-07"},{"lineNumber":54,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":55,"author":{"gitId":"notbingsu"},"content":"### Unmark task","lastModifiedDate":"2023-03-07"},{"lineNumber":56,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":57,"author":{"gitId":"notbingsu"},"content":"Users can mark tasks as undone.","lastModifiedDate":"2023-03-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":59,"author":{"gitId":"notbingsu"},"content":"Format: unmark `task index`","lastModifiedDate":"2023-03-07"},{"lineNumber":60,"author":{"gitId":"notbingsu"},"content":"Example: mark 3","lastModifiedDate":"2023-03-07"},{"lineNumber":61,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":62,"author":{"gitId":"notbingsu"},"content":"Expected outcome:","lastModifiedDate":"2023-03-07"},{"lineNumber":63,"author":{"gitId":"notbingsu"},"content":"[x] state of task(s) changes to [ ] when marked as done.","lastModifiedDate":"2023-03-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":65,"author":{"gitId":"notbingsu"},"content":"### List task(s)","lastModifiedDate":"2023-03-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":67,"author":{"gitId":"notbingsu"},"content":"Users can list and view all tasks currently in the task list","lastModifiedDate":"2023-03-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":69,"author":{"gitId":"notbingsu"},"content":"Format: list","lastModifiedDate":"2023-03-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2023-03-07"},{"lineNumber":72,"author":{"gitId":"notbingsu"},"content":"If task list is empty, \"Tasklist is empty.\"","lastModifiedDate":"2023-03-07"},{"lineNumber":73,"author":{"gitId":"notbingsu"},"content":"Indexed list of `index`, `done state`, `description`","lastModifiedDate":"2023-03-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":75,"author":{"gitId":"notbingsu"},"content":"### List overdue task(s)","lastModifiedDate":"2023-03-07"},{"lineNumber":76,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":77,"author":{"gitId":"notbingsu"},"content":"Users can list and view all tasks that are currently overdue in the task list","lastModifiedDate":"2023-03-07"},{"lineNumber":78,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":79,"author":{"gitId":"notbingsu"},"content":"Format: list overdue","lastModifiedDate":"2023-03-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":82,"author":{"gitId":"notbingsu"},"content":"If task list is empty, \"Tasklist is empty.\"","lastModifiedDate":"2023-03-07"},{"lineNumber":83,"author":{"gitId":"notbingsu"},"content":"Indexed list of overdue tasks `index`, `done state`, `description`","lastModifiedDate":"2023-03-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":85,"author":{"gitId":"notbingsu"},"content":"### Find","lastModifiedDate":"2023-03-07"},{"lineNumber":86,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":87,"author":{"gitId":"notbingsu"},"content":"Users can find and list all tasks by inputting keyword to be searched","lastModifiedDate":"2023-03-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":89,"author":{"gitId":"notbingsu"},"content":"Format: find `string to be searched`","lastModifiedDate":"2023-03-07"},{"lineNumber":90,"author":{"gitId":"notbingsu"},"content":"Example: find food","lastModifiedDate":"2023-03-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":92,"author":{"gitId":"notbingsu"},"content":"Expected outcome:","lastModifiedDate":"2023-03-07"},{"lineNumber":93,"author":{"gitId":"notbingsu"},"content":"If task lsit is empty, \"Tasklist is empty.\"","lastModifiedDate":"2023-03-07"},{"lineNumber":94,"author":{"gitId":"notbingsu"},"content":"Indexed list of tasks with description containing searched string","lastModifiedDate":"2023-03-07"},{"lineNumber":95,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":96,"author":{"gitId":"notbingsu"},"content":"### Delete","lastModifiedDate":"2023-03-07"},{"lineNumber":97,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":98,"author":{"gitId":"notbingsu"},"content":"Users can remove tasks from task list","lastModifiedDate":"2023-03-07"},{"lineNumber":99,"author":{"gitId":"notbingsu"},"content":"Format: delete `index`","lastModifiedDate":"2023-03-07"},{"lineNumber":100,"author":{"gitId":"notbingsu"},"content":"Example: delete 3","lastModifiedDate":"2023-03-07"},{"lineNumber":101,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":102,"author":{"gitId":"notbingsu"},"content":"Expected outcome:","lastModifiedDate":"2023-03-07"},{"lineNumber":103,"author":{"gitId":"notbingsu"},"content":"If index out of bounds, \"Please input valid task number!\"","lastModifiedDate":"2023-03-07"},{"lineNumber":104,"author":{"gitId":"notbingsu"},"content":"\"Noted. I\u0027ve removed this task:\" `index`","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"notbingsu":84,"-":20}},{"path":"duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"notbingsu"},"content":"D|false|eat  /by tmr","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"notbingsu":1}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"notbingsu"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"notbingsu"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"notbingsu"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"notbingsu"},"content":"//import java.time.temporal.ChronoUnit;","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"notbingsu"},"content":"/*","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"notbingsu"},"content":" * Sub-class of super-class \u003ccode\u003eTask\u003c/code\u003e, represents a task that has a deadline,","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"notbingsu"},"content":" * Contains attributes due, info, deadline name and evaluates attribute whether Deadline task is overdue","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"notbingsu"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"notbingsu"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"notbingsu"},"content":"    public LocalDate due;","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"notbingsu"},"content":"    public String dueText;","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"notbingsu"},"content":"    public String[] info;","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"notbingsu"},"content":"    public String deadlineName;","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"notbingsu"},"content":"    public boolean isOverdue;","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"notbingsu"},"content":"    public Deadline(String description) {","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"notbingsu"},"content":"        super(description);","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"notbingsu"},"content":"        this.info \u003d this.description.split(\"/by\", 2);","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"notbingsu"},"content":"        this.deadlineName \u003d info[0];","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"notbingsu"},"content":"        this.due \u003d isValid((info[1]).trim());","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"notbingsu"},"content":"        if (this.due \u003d\u003d null) {","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"notbingsu"},"content":"            this.dueText \u003d (info[1]).trim();","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"notbingsu"},"content":"            System.out.println(\"Due date is not in yyyy-MM-dd format, will be saved as text\");","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"notbingsu"},"content":"        } else if (this.due.isBefore(LocalDate.now())) {","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"notbingsu"},"content":"            this.isOverdue \u003d true;","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"notbingsu"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"notbingsu"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"notbingsu"},"content":"    private LocalDate isValid(String date) {","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"notbingsu"},"content":"        try {","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"notbingsu"},"content":"            return LocalDate.parse(date);","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"notbingsu"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"notbingsu"},"content":"            return null;","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"notbingsu"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"notbingsu"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":38,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"notbingsu"},"content":"    @Override","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"notbingsu"},"content":"    public String fileFormat() {","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"notbingsu"},"content":"        DateTimeFormatter yyyyMMdd \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"notbingsu"},"content":"        if (this.due !\u003d null) {","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"notbingsu"},"content":"            return (String.format(\"D|%b|%s /by %s\\n\", super.isDone, this.deadlineName,","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"notbingsu"},"content":"                    due.format(yyyyMMdd)));","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"notbingsu"},"content":"        } else {","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"notbingsu"},"content":"            return (String.format(\"D|%b|%s /by %s\\n\", super.isDone, this.deadlineName, this.dueText));","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"notbingsu"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"notbingsu"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":49,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":50,"author":{"gitId":"notbingsu"},"content":"    @Override","lastModifiedDate":"2023-02-09"},{"lineNumber":51,"author":{"gitId":"notbingsu"},"content":"    public String toString() {","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"notbingsu"},"content":"        DateTimeFormatter yyyyMMdd \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-03-21"},{"lineNumber":53,"author":{"gitId":"notbingsu"},"content":"        if (this.due !\u003d null) {","lastModifiedDate":"2023-03-21"},{"lineNumber":54,"author":{"gitId":"notbingsu"},"content":"            return (\"[D][\" + super.getStatusIcon() + \"] \" + this.deadlineName) +","lastModifiedDate":"2023-03-21"},{"lineNumber":55,"author":{"gitId":"notbingsu"},"content":"                    \" (by: \" + this.due.format(yyyyMMdd) + \")\";","lastModifiedDate":"2023-03-21"},{"lineNumber":56,"author":{"gitId":"notbingsu"},"content":"        } else {","lastModifiedDate":"2023-03-21"},{"lineNumber":57,"author":{"gitId":"notbingsu"},"content":"            return (\"[D][\" + super.getStatusIcon() + \"] \" + this.deadlineName) +","lastModifiedDate":"2023-03-21"},{"lineNumber":58,"author":{"gitId":"notbingsu"},"content":"                    \" (by: \" + this.dueText + \")\";","lastModifiedDate":"2023-03-21"},{"lineNumber":59,"author":{"gitId":"notbingsu"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":60,"author":{"gitId":"notbingsu"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":61,"author":{"gitId":"notbingsu"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"notbingsu":61}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"notbingsu"},"content":"/*","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"notbingsu"},"content":" * Duke is an instance of the bot which has several subclasses,","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"notbingsu"},"content":" * storage for file management, ui for communicating with user for input/output, tasklist for managing tasks and task-related commands","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"notbingsu"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"notbingsu"},"content":"    private String fileName \u003d \"duke.txt\";","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"notbingsu"},"content":"    public Storage storage;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"notbingsu"},"content":"    private UI ui;","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"notbingsu"},"content":"    public TaskList tasks;","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"notbingsu"},"content":"    public Duke() {","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"notbingsu"},"content":"        ui \u003d new UI();","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"notbingsu"},"content":"        storage \u003d new Storage(fileName);","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"notbingsu"},"content":"        this.tasks \u003d new TaskList();","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"notbingsu"},"content":"        storage.load(tasks);","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"notbingsu"},"content":"        ui.greet(tasks);","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"notbingsu"},"content":"    // public void addTask(String taskName){","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"notbingsu"},"content":"    // Task t \u003d new Task(taskName);","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"notbingsu"},"content":"    // taskList.add(t);","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"notbingsu"},"content":"    // System.out.printf(","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"notbingsu"},"content":"    // \"Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"notbingsu"},"content":"    // String.format(\"added: %s\\n\", taskName)","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"notbingsu"},"content":"    // );","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"notbingsu"},"content":"    // }","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"notbingsu":27,"-":3}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"notbingsu"},"content":"/*","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"notbingsu"},"content":" * Sub-class of super-class \u003ccode\u003eTask\u003c/code\u003e, represents a task that is an event,","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"notbingsu"},"content":" * Contains attributes event name, start and end time","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"notbingsu"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"notbingsu"},"content":"public class Event extends Task {","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"notbingsu"},"content":"    public String startTime, endTime, eventName;","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"notbingsu"},"content":"    public String[] info;","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"notbingsu"},"content":"    public Event(String description) {","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"notbingsu"},"content":"        super(description);","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"notbingsu"},"content":"        this.info \u003d this.description.split(\"/from\", 2);","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"notbingsu"},"content":"        this.eventName \u003d info[0];","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"notbingsu"},"content":"        this.startTime \u003d info[1].split(\"/to\", 2)[0];","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"notbingsu"},"content":"        this.endTime \u003d info[1].split(\"/to\", 2)[1];","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"notbingsu"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"notbingsu"},"content":"    @Override","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"notbingsu"},"content":"    public String fileFormat() {","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"notbingsu"},"content":"        return (String.format(\"E|%b|%s /from %s /to %s\\n\", super.isDone, this.eventName, this.startTime, this.endTime));","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"notbingsu"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"notbingsu"},"content":"    @Override","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"notbingsu"},"content":"    public String toString() {","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"notbingsu"},"content":"        return (\"[E][\" + super.getStatusIcon() + \"] \" + this.eventName) +","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"notbingsu"},"content":"                \" (from: \" + this.startTime + \" to: \" + this.endTime + \")\";","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"notbingsu"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"notbingsu"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"notbingsu":27}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"notbingsu"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"notbingsu"},"content":"/*","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"notbingsu"},"content":" * Initialises Duke class","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"notbingsu"},"content":" * If earlier written file exists, displays files","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"notbingsu"},"content":" * Continuously promtps user for input until specified terminating input is received","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"notbingsu"},"content":" * List of inputs include bye, list, mark, unmark, event, todo, deadline, delete, find","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"notbingsu"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"notbingsu"},"content":"public class Main {","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"notbingsu"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"notbingsu"},"content":"        Duke Duke \u003d new Duke();","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"notbingsu"},"content":"        Scanner userInput \u003d new Scanner(System.in); // create Scanner object","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"notbingsu"},"content":"        String inputCommand; // read user input","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"notbingsu"},"content":"        String[] commandPhrase;","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"notbingsu"},"content":"        String command, phrase;","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"notbingsu"},"content":"        while (true) {","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"notbingsu"},"content":"            inputCommand \u003d userInput.nextLine();","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"notbingsu"},"content":"            commandPhrase \u003d inputCommand.split(\" \", 2);","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"notbingsu"},"content":"            command \u003d commandPhrase[0];","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"notbingsu"},"content":"            if (commandPhrase.length \u003c 2) {","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"notbingsu"},"content":"                if (command.equals(\"bye\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"notbingsu"},"content":"                    break;","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"notbingsu"},"content":"                } else if (command.equals(\"clear\")) {","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"notbingsu"},"content":"                    Duke.tasks.clearTaskList();","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"notbingsu"},"content":"                } else if (command.equals(\"list\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"notbingsu"},"content":"                    Duke.tasks.list();","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"notbingsu"},"content":"                } else if (command.equals(\"overdue\")) {","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"notbingsu"},"content":"                    Duke.tasks.listOverdue();","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"notbingsu"},"content":"                } else {","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"notbingsu"},"content":"                    System.out.println(\"Invalid command\");","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"notbingsu"},"content":"                }","lastModifiedDate":"2023-02-09"},{"lineNumber":32,"author":{"gitId":"notbingsu"},"content":"            } else {","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"notbingsu"},"content":"                phrase \u003d commandPhrase[1];","lastModifiedDate":"2023-02-09"},{"lineNumber":34,"author":{"gitId":"notbingsu"},"content":"                if (command.equals(\"mark\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"notbingsu"},"content":"                    Duke.tasks.changeTaskState(true, Integer.parseInt(phrase));","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"notbingsu"},"content":"                } else if (command.equals(\"unmark\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"notbingsu"},"content":"                    Duke.tasks.changeTaskState(false, Integer.parseInt(phrase));","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"notbingsu"},"content":"                } else if (command.equals(\"event\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"notbingsu"},"content":"                    Duke.tasks.addEvent(phrase);","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"notbingsu"},"content":"                } else if (command.equals(\"todo\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":41,"author":{"gitId":"notbingsu"},"content":"                    Duke.tasks.addTodo(phrase);","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"notbingsu"},"content":"                } else if (command.equals(\"deadline\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":43,"author":{"gitId":"notbingsu"},"content":"                    Duke.tasks.addDeadline(phrase);","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"notbingsu"},"content":"                } else if (command.equals(\"delete\")) {","lastModifiedDate":"2023-02-16"},{"lineNumber":45,"author":{"gitId":"notbingsu"},"content":"                    Duke.tasks.delete(Integer.parseInt(phrase));","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"notbingsu"},"content":"                } else if (command.equals(\"find\")) {","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"notbingsu"},"content":"                    Duke.tasks.find(phrase);","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"notbingsu"},"content":"                } else {","lastModifiedDate":"2023-02-09"},{"lineNumber":49,"author":{"gitId":"notbingsu"},"content":"                    System.out.println(\"Invalid command\");","lastModifiedDate":"2023-02-09"},{"lineNumber":50,"author":{"gitId":"notbingsu"},"content":"                }","lastModifiedDate":"2023-02-09"},{"lineNumber":51,"author":{"gitId":"notbingsu"},"content":"            }","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"notbingsu"},"content":"            Duke.storage.saveToFile(Duke.tasks);","lastModifiedDate":"2023-03-21"},{"lineNumber":53,"author":{"gitId":"notbingsu"},"content":"            UI.horizontalLine();","lastModifiedDate":"2023-02-28"},{"lineNumber":54,"author":{"gitId":"notbingsu"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"notbingsu"},"content":"        userInput.close();","lastModifiedDate":"2023-02-09"},{"lineNumber":56,"author":{"gitId":"notbingsu"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-02-03"},{"lineNumber":57,"author":{"gitId":"notbingsu"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":58,"author":{"gitId":"notbingsu"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"notbingsu":58}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"notbingsu"},"content":"import java.io.File;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"notbingsu"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"notbingsu"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"notbingsu"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"notbingsu"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"notbingsu"},"content":"/*","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"notbingsu"},"content":" * Storage class handles all file methods of Duke, it only has the attribute fileName","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"notbingsu"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"notbingsu"},"content":"public class Storage {","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"notbingsu"},"content":"    private String fileName;","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"notbingsu"},"content":"    public Storage(String inputFileName) {","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"notbingsu"},"content":"        this.fileName \u003d inputFileName;","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"notbingsu"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"notbingsu"},"content":"    /*","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"notbingsu"},"content":"     * Loads file from location specified by \u003ccode\u003efileName\u003c/code\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"notbingsu"},"content":"     * ","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"notbingsu"},"content":"     * @param none","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"notbingsu"},"content":"     * ","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"notbingsu"},"content":"     * @return File object file from the location","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"notbingsu"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"notbingsu"},"content":"    public void load(TaskList taskList) {","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"notbingsu"},"content":"        File file \u003d new File(fileName);","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"notbingsu"},"content":"        String data;","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"notbingsu"},"content":"        try {","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"notbingsu"},"content":"            if (!file.createNewFile()) {","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"notbingsu"},"content":"                Scanner fileData \u003d new Scanner(file);","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"notbingsu"},"content":"                while (fileData.hasNext()) {","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"notbingsu"},"content":"                    data \u003d fileData.nextLine();","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"notbingsu"},"content":"                    String[] inputArgs \u003d data.split(\"\\\\|\");","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"notbingsu"},"content":"                    addFileData(inputArgs, taskList);","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"notbingsu"},"content":"                    for (String arg : inputArgs) {","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"notbingsu"},"content":"                        System.out.print(arg + \" \");","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"notbingsu"},"content":"                    }","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"notbingsu"},"content":"                }","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"notbingsu"},"content":"            }","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"notbingsu"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"notbingsu"},"content":"            System.out.print(\"\\nError getting file data\");","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"notbingsu"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"notbingsu"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"notbingsu"},"content":"    public void addFileData(String[] inputArgs, TaskList taskList) {","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"notbingsu"},"content":"        Task newTask;","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"notbingsu"},"content":"        String command \u003d inputArgs[0];","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"notbingsu"},"content":"        boolean taskStatus \u003d Boolean.parseBoolean(inputArgs[1]);","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"notbingsu"},"content":"        switch (command) {","lastModifiedDate":"2023-03-21"},{"lineNumber":49,"author":{"gitId":"notbingsu"},"content":"            case \"T\":","lastModifiedDate":"2023-03-21"},{"lineNumber":50,"author":{"gitId":"notbingsu"},"content":"                newTask \u003d new Todo(inputArgs[2]);","lastModifiedDate":"2023-03-21"},{"lineNumber":51,"author":{"gitId":"notbingsu"},"content":"                break;","lastModifiedDate":"2023-03-21"},{"lineNumber":52,"author":{"gitId":"notbingsu"},"content":"            case \"D\":","lastModifiedDate":"2023-03-21"},{"lineNumber":53,"author":{"gitId":"notbingsu"},"content":"                newTask \u003d new Deadline(inputArgs[2]);","lastModifiedDate":"2023-03-21"},{"lineNumber":54,"author":{"gitId":"notbingsu"},"content":"                break;","lastModifiedDate":"2023-03-21"},{"lineNumber":55,"author":{"gitId":"notbingsu"},"content":"            case \"E\":","lastModifiedDate":"2023-03-21"},{"lineNumber":56,"author":{"gitId":"notbingsu"},"content":"                newTask \u003d new Event(inputArgs[2]);","lastModifiedDate":"2023-03-21"},{"lineNumber":57,"author":{"gitId":"notbingsu"},"content":"                break;","lastModifiedDate":"2023-03-21"},{"lineNumber":58,"author":{"gitId":"notbingsu"},"content":"            default:","lastModifiedDate":"2023-03-21"},{"lineNumber":59,"author":{"gitId":"notbingsu"},"content":"                throw new IllegalStateException(\"File contents are invalid\");","lastModifiedDate":"2023-03-21"},{"lineNumber":60,"author":{"gitId":"notbingsu"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":61,"author":{"gitId":"notbingsu"},"content":"        if (taskStatus) {","lastModifiedDate":"2023-03-21"},{"lineNumber":62,"author":{"gitId":"notbingsu"},"content":"            newTask.markAsDone();","lastModifiedDate":"2023-03-21"},{"lineNumber":63,"author":{"gitId":"notbingsu"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":64,"author":{"gitId":"notbingsu"},"content":"        taskList.returnTaskList().add(newTask);","lastModifiedDate":"2023-03-21"},{"lineNumber":65,"author":{"gitId":"notbingsu"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":66,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":67,"author":{"gitId":"notbingsu"},"content":"    /*","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"notbingsu"},"content":"     * Saves file to destination specified by \u003ccode\u003efileName\u003c/code\u003e, the same","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"notbingsu"},"content":"     * location where file is retrieved from","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"notbingsu"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"notbingsu"},"content":"    public void saveToFile(TaskList taskList) {","lastModifiedDate":"2023-03-21"},{"lineNumber":72,"author":{"gitId":"notbingsu"},"content":"        try {","lastModifiedDate":"2023-02-28"},{"lineNumber":73,"author":{"gitId":"notbingsu"},"content":"            FileWriter fWriter \u003d new FileWriter(fileName);","lastModifiedDate":"2023-02-28"},{"lineNumber":74,"author":{"gitId":"notbingsu"},"content":"            for (Task task : taskList.returnTaskList()) {","lastModifiedDate":"2023-03-21"},{"lineNumber":75,"author":{"gitId":"notbingsu"},"content":"                fWriter.write(task.fileFormat());","lastModifiedDate":"2023-02-28"},{"lineNumber":76,"author":{"gitId":"notbingsu"},"content":"            }","lastModifiedDate":"2023-02-28"},{"lineNumber":77,"author":{"gitId":"notbingsu"},"content":"            fWriter.close();","lastModifiedDate":"2023-02-28"},{"lineNumber":78,"author":{"gitId":"notbingsu"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-28"},{"lineNumber":79,"author":{"gitId":"notbingsu"},"content":"            System.out.print(\"IOException Error: data not saved to file\\n\");","lastModifiedDate":"2023-02-28"},{"lineNumber":80,"author":{"gitId":"notbingsu"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":81,"author":{"gitId":"notbingsu"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":82,"author":{"gitId":"notbingsu"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"notbingsu":82}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"notbingsu"},"content":"/*","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"notbingsu"},"content":" * Superclass Task extends to subtasks Deadline, Event and Todo","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"notbingsu"},"content":" * Task has 2 attributes, description and isDone, which toggles whether the task is done or not done","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"notbingsu"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"notbingsu"},"content":"public class Task {","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"notbingsu"},"content":"    protected String description;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"notbingsu"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"notbingsu"},"content":"    public Task(String description) {","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"notbingsu"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"notbingsu"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"notbingsu"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"notbingsu"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"notbingsu"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"notbingsu"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"notbingsu"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"notbingsu"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"notbingsu"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"notbingsu"},"content":"        System.out.println(this.toString());","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"notbingsu"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"notbingsu"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"notbingsu"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"notbingsu"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"notbingsu"},"content":"        System.out.println(this.toString());","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"notbingsu"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"notbingsu"},"content":"    public String fileFormat() {","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"notbingsu"},"content":"        return (String.format(\" |%b|%s\", this.isDone, this.description));","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"notbingsu"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"notbingsu"},"content":"    @Override","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"notbingsu"},"content":"    public String toString() {","lastModifiedDate":"2023-02-09"},{"lineNumber":36,"author":{"gitId":"notbingsu"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"notbingsu"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":38,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"notbingsu"},"content":"    // ...","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"notbingsu"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"notbingsu":40}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"notbingsu"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"notbingsu"},"content":"import java.util.List;","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"notbingsu"},"content":"import java.io.File;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"notbingsu"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"notbingsu"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"notbingsu"},"content":"/*","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"notbingsu"},"content":" * TaskList is the class of Duke which contains the list of tasks and methods to makes changes to the list","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"notbingsu"},"content":" * It contains only the ArrayList tasks","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"notbingsu"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"notbingsu"},"content":"public class TaskList {","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"notbingsu"},"content":"    private List\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"notbingsu"},"content":"    /*","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"notbingsu"},"content":"     * Writes file data from file scanned from file to tasks object","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"notbingsu"},"content":"     * Uses \u003ccode\u003eScanner\u003c/code\u003e to read contents from file, splits content into","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"notbingsu"},"content":"     * String[]","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"notbingsu"},"content":"     * ","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"notbingsu"},"content":"     * @param File file with contents of previously created tasklist","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"notbingsu"},"content":"     * ","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"notbingsu"},"content":"     * @throws IOException if file data is not formatted as specified","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"notbingsu"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"notbingsu"},"content":"    public void Tasklist() {","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"notbingsu"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"notbingsu"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"notbingsu"},"content":"    /*","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"notbingsu"},"content":"     * Formats file data retrieved by Tasklist, parses String[] and adds them to","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"notbingsu"},"content":"     * tasks as Todo, Event or Deadline subclasses","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"notbingsu"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"notbingsu"},"content":"    public List\u003cTask\u003e returnTaskList() {","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"notbingsu"},"content":"        return tasks;","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"notbingsu"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"notbingsu"},"content":"    public void clearTaskList() {","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"notbingsu"},"content":"        tasks.clear();","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"notbingsu"},"content":"        System.out.println(\"Task list cleared!\");","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"notbingsu"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"notbingsu"},"content":"    public void addEvent(String taskName) {","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"notbingsu"},"content":"        Event t \u003d new Event(taskName);","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"notbingsu"},"content":"        tasks.add(t);","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"notbingsu"},"content":"        System.out.printf(","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"notbingsu"},"content":"                \"Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"notbingsu"},"content":"                        t.toString() +","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"notbingsu"},"content":"                        String.format(\"\\nNow you have %d tasks in the list.\\n\", tasks.size()));","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"notbingsu"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"notbingsu"},"content":"    public void addTodo(String taskName) {","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"notbingsu"},"content":"        Todo t \u003d new Todo(taskName);","lastModifiedDate":"2023-02-28"},{"lineNumber":52,"author":{"gitId":"notbingsu"},"content":"        tasks.add(t);","lastModifiedDate":"2023-03-21"},{"lineNumber":53,"author":{"gitId":"notbingsu"},"content":"        System.out.printf(","lastModifiedDate":"2023-02-28"},{"lineNumber":54,"author":{"gitId":"notbingsu"},"content":"                \"Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2023-02-28"},{"lineNumber":55,"author":{"gitId":"notbingsu"},"content":"                        t.toString() +","lastModifiedDate":"2023-02-28"},{"lineNumber":56,"author":{"gitId":"notbingsu"},"content":"                        String.format(\"\\nNow you have %d tasks in the list.\\n\", tasks.size()));","lastModifiedDate":"2023-03-21"},{"lineNumber":57,"author":{"gitId":"notbingsu"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":58,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":59,"author":{"gitId":"notbingsu"},"content":"    public void addDeadline(String taskName) {","lastModifiedDate":"2023-02-28"},{"lineNumber":60,"author":{"gitId":"notbingsu"},"content":"        Deadline t \u003d new Deadline(taskName);","lastModifiedDate":"2023-02-28"},{"lineNumber":61,"author":{"gitId":"notbingsu"},"content":"        tasks.add(t);","lastModifiedDate":"2023-03-21"},{"lineNumber":62,"author":{"gitId":"notbingsu"},"content":"        System.out.printf(","lastModifiedDate":"2023-02-28"},{"lineNumber":63,"author":{"gitId":"notbingsu"},"content":"                \"Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2023-02-28"},{"lineNumber":64,"author":{"gitId":"notbingsu"},"content":"                        t.toString() +","lastModifiedDate":"2023-02-28"},{"lineNumber":65,"author":{"gitId":"notbingsu"},"content":"                        String.format(\"\\nNow you have %d tasks in the list.\\n\", tasks.size()));","lastModifiedDate":"2023-03-21"},{"lineNumber":66,"author":{"gitId":"notbingsu"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":67,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":68,"author":{"gitId":"notbingsu"},"content":"    public void changeTaskState(boolean doneState, Integer index) {","lastModifiedDate":"2023-02-28"},{"lineNumber":69,"author":{"gitId":"notbingsu"},"content":"        if (index \u003e tasks.size() || index \u003c 1) {","lastModifiedDate":"2023-03-21"},{"lineNumber":70,"author":{"gitId":"notbingsu"},"content":"            System.out.println(\"Please input valid task number!\");","lastModifiedDate":"2023-02-28"},{"lineNumber":71,"author":{"gitId":"notbingsu"},"content":"        } else {","lastModifiedDate":"2023-02-28"},{"lineNumber":72,"author":{"gitId":"notbingsu"},"content":"            index--;","lastModifiedDate":"2023-02-28"},{"lineNumber":73,"author":{"gitId":"notbingsu"},"content":"            if (doneState) {","lastModifiedDate":"2023-02-28"},{"lineNumber":74,"author":{"gitId":"notbingsu"},"content":"                tasks.get(index).markAsDone();","lastModifiedDate":"2023-03-21"},{"lineNumber":75,"author":{"gitId":"notbingsu"},"content":"            } else {","lastModifiedDate":"2023-02-28"},{"lineNumber":76,"author":{"gitId":"notbingsu"},"content":"                tasks.get(index).markAsUndone();","lastModifiedDate":"2023-03-21"},{"lineNumber":77,"author":{"gitId":"notbingsu"},"content":"            }","lastModifiedDate":"2023-02-28"},{"lineNumber":78,"author":{"gitId":"notbingsu"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":79,"author":{"gitId":"notbingsu"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":80,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":81,"author":{"gitId":"notbingsu"},"content":"    public void delete(int index) {","lastModifiedDate":"2023-02-28"},{"lineNumber":82,"author":{"gitId":"notbingsu"},"content":"        if (index \u003e tasks.size() || index \u003c 1) {","lastModifiedDate":"2023-03-21"},{"lineNumber":83,"author":{"gitId":"notbingsu"},"content":"            System.out.println(\"Please input valid task number!\");","lastModifiedDate":"2023-02-28"},{"lineNumber":84,"author":{"gitId":"notbingsu"},"content":"        } else {","lastModifiedDate":"2023-02-28"},{"lineNumber":85,"author":{"gitId":"notbingsu"},"content":"            index--;","lastModifiedDate":"2023-02-28"},{"lineNumber":86,"author":{"gitId":"notbingsu"},"content":"            System.out.printf(\"Noted. I\u0027ve removed this task:\" +","lastModifiedDate":"2023-02-28"},{"lineNumber":87,"author":{"gitId":"notbingsu"},"content":"                    tasks.get(index).toString());","lastModifiedDate":"2023-03-21"},{"lineNumber":88,"author":{"gitId":"notbingsu"},"content":"            tasks.remove(index);","lastModifiedDate":"2023-03-21"},{"lineNumber":89,"author":{"gitId":"notbingsu"},"content":"            System.out.println(String.format(\"\\nNow you have %d tasks in the list.\\n\", tasks.size()));","lastModifiedDate":"2023-03-21"},{"lineNumber":90,"author":{"gitId":"notbingsu"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":91,"author":{"gitId":"notbingsu"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":92,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":93,"author":{"gitId":"notbingsu"},"content":"    /*","lastModifiedDate":"2023-03-03"},{"lineNumber":94,"author":{"gitId":"notbingsu"},"content":"     * Main list method, lists all contents of tasklist","lastModifiedDate":"2023-03-03"},{"lineNumber":95,"author":{"gitId":"notbingsu"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":96,"author":{"gitId":"notbingsu"},"content":"    public void list() {","lastModifiedDate":"2023-02-28"},{"lineNumber":97,"author":{"gitId":"notbingsu"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-03-21"},{"lineNumber":98,"author":{"gitId":"notbingsu"},"content":"            System.out.println(\"Task list is empty.\");","lastModifiedDate":"2023-02-28"},{"lineNumber":99,"author":{"gitId":"notbingsu"},"content":"        } else {","lastModifiedDate":"2023-02-28"},{"lineNumber":100,"author":{"gitId":"notbingsu"},"content":"            System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-02-28"},{"lineNumber":101,"author":{"gitId":"notbingsu"},"content":"            Integer i \u003d 0;","lastModifiedDate":"2023-02-28"},{"lineNumber":102,"author":{"gitId":"notbingsu"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-03-21"},{"lineNumber":103,"author":{"gitId":"notbingsu"},"content":"                System.out.printf(String.format(\"%d.%s\\n\", i + 1, task.toString()));","lastModifiedDate":"2023-02-28"},{"lineNumber":104,"author":{"gitId":"notbingsu"},"content":"                i++;","lastModifiedDate":"2023-02-28"},{"lineNumber":105,"author":{"gitId":"notbingsu"},"content":"            }","lastModifiedDate":"2023-02-28"},{"lineNumber":106,"author":{"gitId":"notbingsu"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":107,"author":{"gitId":"notbingsu"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":108,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":109,"author":{"gitId":"notbingsu"},"content":"    /*","lastModifiedDate":"2023-03-03"},{"lineNumber":110,"author":{"gitId":"notbingsu"},"content":"     * Lists overdue deadline subclass objects in tasklist","lastModifiedDate":"2023-03-03"},{"lineNumber":111,"author":{"gitId":"notbingsu"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":112,"author":{"gitId":"notbingsu"},"content":"    public void listOverdue() {","lastModifiedDate":"2023-03-02"},{"lineNumber":113,"author":{"gitId":"notbingsu"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-03-21"},{"lineNumber":114,"author":{"gitId":"notbingsu"},"content":"            System.out.println(\"Task list is empty.\");","lastModifiedDate":"2023-03-02"},{"lineNumber":115,"author":{"gitId":"notbingsu"},"content":"        } else {","lastModifiedDate":"2023-03-02"},{"lineNumber":116,"author":{"gitId":"notbingsu"},"content":"            System.out.println(\"Here are the overdue deadlines in your list:\");","lastModifiedDate":"2023-03-02"},{"lineNumber":117,"author":{"gitId":"notbingsu"},"content":"            Integer i \u003d 0;","lastModifiedDate":"2023-03-02"},{"lineNumber":118,"author":{"gitId":"notbingsu"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-03-21"},{"lineNumber":119,"author":{"gitId":"notbingsu"},"content":"                if (task instanceof Deadline \u0026\u0026 ((Deadline) task).isOverdue) {","lastModifiedDate":"2023-03-21"},{"lineNumber":120,"author":{"gitId":"notbingsu"},"content":"                    System.out.printf(String.format(\"%d.%s\\n\", i + 1, task.toString()));","lastModifiedDate":"2023-03-02"},{"lineNumber":121,"author":{"gitId":"notbingsu"},"content":"                    i++;","lastModifiedDate":"2023-03-02"},{"lineNumber":122,"author":{"gitId":"notbingsu"},"content":"                }","lastModifiedDate":"2023-03-02"},{"lineNumber":123,"author":{"gitId":"notbingsu"},"content":"            }","lastModifiedDate":"2023-03-02"},{"lineNumber":124,"author":{"gitId":"notbingsu"},"content":"        }","lastModifiedDate":"2023-03-02"},{"lineNumber":125,"author":{"gitId":"notbingsu"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":126,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":127,"author":{"gitId":"notbingsu"},"content":"    /*","lastModifiedDate":"2023-03-03"},{"lineNumber":128,"author":{"gitId":"notbingsu"},"content":"     * lists all tasks in task list containing \u003ccode\u003ekeyword\u003c/code\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":129,"author":{"gitId":"notbingsu"},"content":"     * ","lastModifiedDate":"2023-03-03"},{"lineNumber":130,"author":{"gitId":"notbingsu"},"content":"     * @param keyword to be searched for","lastModifiedDate":"2023-03-03"},{"lineNumber":131,"author":{"gitId":"notbingsu"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":132,"author":{"gitId":"notbingsu"},"content":"    public void find(String keyword) {","lastModifiedDate":"2023-03-03"},{"lineNumber":133,"author":{"gitId":"notbingsu"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-03-21"},{"lineNumber":134,"author":{"gitId":"notbingsu"},"content":"            System.out.println(\"Task list is empty.\");","lastModifiedDate":"2023-03-03"},{"lineNumber":135,"author":{"gitId":"notbingsu"},"content":"        } else {","lastModifiedDate":"2023-03-03"},{"lineNumber":136,"author":{"gitId":"notbingsu"},"content":"            System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-03-03"},{"lineNumber":137,"author":{"gitId":"notbingsu"},"content":"            Integer i \u003d 0;","lastModifiedDate":"2023-03-03"},{"lineNumber":138,"author":{"gitId":"notbingsu"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-03-21"},{"lineNumber":139,"author":{"gitId":"notbingsu"},"content":"                if (task.description.contains(keyword)) {","lastModifiedDate":"2023-03-03"},{"lineNumber":140,"author":{"gitId":"notbingsu"},"content":"                    System.out.printf(String.format(\"%d.%s\\n\", i + 1, task.toString()));","lastModifiedDate":"2023-03-03"},{"lineNumber":141,"author":{"gitId":"notbingsu"},"content":"                    i++;","lastModifiedDate":"2023-03-03"},{"lineNumber":142,"author":{"gitId":"notbingsu"},"content":"                }","lastModifiedDate":"2023-03-03"},{"lineNumber":143,"author":{"gitId":"notbingsu"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":144,"author":{"gitId":"notbingsu"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":145,"author":{"gitId":"notbingsu"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":146,"author":{"gitId":"notbingsu"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"notbingsu":146}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"notbingsu"},"content":"/*","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"notbingsu"},"content":" * Sub-class of super-class \u003ccode\u003eTask\u003c/code\u003e, represents a todo task,","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"notbingsu"},"content":" * only inherits task description attribute from parent Task class","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"notbingsu"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"notbingsu"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"notbingsu"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"notbingsu"},"content":"        super(description);","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"notbingsu"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"notbingsu"},"content":"    @Override","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"notbingsu"},"content":"    public String toString() {","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"notbingsu"},"content":"        return (\"[T][\" + super.getStatusIcon() + \"] \" + super.description);","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"notbingsu"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"notbingsu"},"content":"    @Override","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"notbingsu"},"content":"    public String fileFormat() {","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"notbingsu"},"content":"        return (String.format(\"T|%b|%s\\n\", super.isDone, this.description));","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"notbingsu"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"notbingsu"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"notbingsu":19}},{"path":"src/main/java/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"notbingsu"},"content":"/*","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"notbingsu"},"content":" * UI class contains methods that interact with user through text","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"notbingsu"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"notbingsu"},"content":"public class UI {","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"notbingsu"},"content":"    /*","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"notbingsu"},"content":"     * Prints greeting statement and logo to terminal","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"notbingsu"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"notbingsu"},"content":"    public void greet(TaskList taskList) {","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"notbingsu"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"notbingsu"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"notbingsu"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"notbingsu"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"notbingsu"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"notbingsu"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"notbingsu"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"notbingsu"},"content":"        taskList.list();","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"notbingsu"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"notbingsu"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"notbingsu"},"content":"    public static void horizontalLine() {","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"notbingsu"},"content":"        System.out.println(\"------------------------------------\");","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"notbingsu"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"notbingsu"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"notbingsu":23}}]
