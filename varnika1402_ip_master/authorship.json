[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"varnika1402"},"content":"# User Guide - Duke","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"varnika1402"},"content":"**Duke** is a Command Line Interface (CLI) based desktop application. It is a **Personal Assistant Chatbot** which can help the user to keep a track of their scheduled tasks and store the data.","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"varnika1402"},"content":"### Add task","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"varnika1402"},"content":"Adds a task to the current list of tasks. The application supports three types of tasks: todo, deadline and event.","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"varnika1402"},"content":"### Delete task","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"varnika1402"},"content":"Deletes a task from the current list of tasks.","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"varnika1402"},"content":"### Mark task","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":17,"author":{"gitId":"varnika1402"},"content":"Marks a particular task as done in the task list.","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":19,"author":{"gitId":"varnika1402"},"content":"### Unmark task","lastModifiedDate":"2023-02-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":21,"author":{"gitId":"varnika1402"},"content":"Marks a particular task as not done in the task list.","lastModifiedDate":"2023-02-19"},{"lineNumber":22,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"varnika1402"},"content":"### List tasks","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"varnika1402"},"content":"Displays all the tasks in the current task list.","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":27,"author":{"gitId":"varnika1402"},"content":"### Find task","lastModifiedDate":"2023-02-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":29,"author":{"gitId":"varnika1402"},"content":"Finds all tasks in the task list that contain the word entered by the user.","lastModifiedDate":"2023-02-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":34,"author":{"gitId":"varnika1402"},"content":"### `todo`","lastModifiedDate":"2023-02-19"},{"lineNumber":35,"author":{"gitId":"varnika1402"},"content":"creates a ToDo and adds it to the task list","lastModifiedDate":"2023-02-19"},{"lineNumber":36,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":37,"author":{"gitId":"varnika1402"},"content":"**Format:**","lastModifiedDate":"2023-02-19"},{"lineNumber":38,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":39,"author":{"gitId":"varnika1402"},"content":"`todo \u003cdescription\u003e`","lastModifiedDate":"2023-02-19"},{"lineNumber":40,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":41,"author":{"gitId":"varnika1402"},"content":"**Example:**","lastModifiedDate":"2023-02-19"},{"lineNumber":42,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":43,"author":{"gitId":"varnika1402"},"content":"`todo read book`","lastModifiedDate":"2023-02-19"},{"lineNumber":44,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":45,"author":{"gitId":"varnika1402"},"content":"**Expected outcome:**","lastModifiedDate":"2023-02-19"},{"lineNumber":46,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":47,"author":{"gitId":"varnika1402"},"content":"\u0027read book\u0027 will be added to the task list as a todo and currently be marked as not done.","lastModifiedDate":"2023-02-19"},{"lineNumber":48,"author":{"gitId":"varnika1402"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":49,"author":{"gitId":"varnika1402"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-19"},{"lineNumber":50,"author":{"gitId":"varnika1402"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-02-19"},{"lineNumber":51,"author":{"gitId":"varnika1402"},"content":"\t[T][ ] read book","lastModifiedDate":"2023-02-19"},{"lineNumber":52,"author":{"gitId":"varnika1402"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2023-02-19"},{"lineNumber":53,"author":{"gitId":"varnika1402"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-19"},{"lineNumber":54,"author":{"gitId":"varnika1402"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":55,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":56,"author":{"gitId":"varnika1402"},"content":"### `deadline`","lastModifiedDate":"2023-02-19"},{"lineNumber":57,"author":{"gitId":"varnika1402"},"content":"creates a Deadline and adds it to the task list","lastModifiedDate":"2023-02-19"},{"lineNumber":58,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":59,"author":{"gitId":"varnika1402"},"content":"**Format:**","lastModifiedDate":"2023-02-19"},{"lineNumber":60,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":61,"author":{"gitId":"varnika1402"},"content":"`deadline \u003cdescription\u003e /by \u003cdeadline\u003e`","lastModifiedDate":"2023-02-19"},{"lineNumber":62,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":63,"author":{"gitId":"varnika1402"},"content":"**Example:**","lastModifiedDate":"2023-02-19"},{"lineNumber":64,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":65,"author":{"gitId":"varnika1402"},"content":"`deadline return book /by Sunday`","lastModifiedDate":"2023-02-19"},{"lineNumber":66,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":67,"author":{"gitId":"varnika1402"},"content":"**Expected outcome:**","lastModifiedDate":"2023-02-19"},{"lineNumber":68,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":69,"author":{"gitId":"varnika1402"},"content":"\u0027return book\u0027 will be added to the task list as a deadline and currently be marked as not done. The deadline of the event will be stored as \u0027Sunday\u0027.","lastModifiedDate":"2023-02-19"},{"lineNumber":70,"author":{"gitId":"varnika1402"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":71,"author":{"gitId":"varnika1402"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-19"},{"lineNumber":72,"author":{"gitId":"varnika1402"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-02-19"},{"lineNumber":73,"author":{"gitId":"varnika1402"},"content":"\t[D][ ] return book (by: Sunday)","lastModifiedDate":"2023-02-19"},{"lineNumber":74,"author":{"gitId":"varnika1402"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2023-02-19"},{"lineNumber":75,"author":{"gitId":"varnika1402"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-19"},{"lineNumber":76,"author":{"gitId":"varnika1402"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":77,"author":{"gitId":"varnika1402"},"content":"### `event`","lastModifiedDate":"2023-02-19"},{"lineNumber":78,"author":{"gitId":"varnika1402"},"content":"creates an Event and adds it to the task list","lastModifiedDate":"2023-02-19"},{"lineNumber":79,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":80,"author":{"gitId":"varnika1402"},"content":"**Format:**","lastModifiedDate":"2023-02-19"},{"lineNumber":81,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":82,"author":{"gitId":"varnika1402"},"content":"`event \u003cdescription\u003e /from \u003cstart date/time\u003e /to \u003cend date/time\u003e`","lastModifiedDate":"2023-02-19"},{"lineNumber":83,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":84,"author":{"gitId":"varnika1402"},"content":"**Example:**","lastModifiedDate":"2023-02-19"},{"lineNumber":85,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":86,"author":{"gitId":"varnika1402"},"content":"`event project meeting /from Mon 2pm /to 4pm`","lastModifiedDate":"2023-02-19"},{"lineNumber":87,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":88,"author":{"gitId":"varnika1402"},"content":"**Expected outcome:**","lastModifiedDate":"2023-02-19"},{"lineNumber":89,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":90,"author":{"gitId":"varnika1402"},"content":"\u0027project meeting\u0027 will be added to the task list as event and currently be marked as not done. The start date/time will be stored as \u0027Mon 2pm\u0027 and end date/time will be stored as \u00274pm\u0027.","lastModifiedDate":"2023-02-19"},{"lineNumber":91,"author":{"gitId":"varnika1402"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":92,"author":{"gitId":"varnika1402"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-19"},{"lineNumber":93,"author":{"gitId":"varnika1402"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-02-19"},{"lineNumber":94,"author":{"gitId":"varnika1402"},"content":"\t[E][ ] project meeting (from: Mon 2pm to: 4pm)","lastModifiedDate":"2023-02-19"},{"lineNumber":95,"author":{"gitId":"varnika1402"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2023-02-19"},{"lineNumber":96,"author":{"gitId":"varnika1402"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-19"},{"lineNumber":97,"author":{"gitId":"varnika1402"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":98,"author":{"gitId":"varnika1402"},"content":"### `delete`","lastModifiedDate":"2023-02-19"},{"lineNumber":99,"author":{"gitId":"varnika1402"},"content":"removes a task from the list","lastModifiedDate":"2023-02-19"},{"lineNumber":100,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":101,"author":{"gitId":"varnika1402"},"content":"**Format:**","lastModifiedDate":"2023-02-19"},{"lineNumber":102,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":103,"author":{"gitId":"varnika1402"},"content":"`delete \u003cindex\u003e`","lastModifiedDate":"2023-02-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":105,"author":{"gitId":"varnika1402"},"content":"**Example:**","lastModifiedDate":"2023-02-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":107,"author":{"gitId":"varnika1402"},"content":"`delete 1`","lastModifiedDate":"2023-02-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":109,"author":{"gitId":"varnika1402"},"content":"**Expected outcome:**","lastModifiedDate":"2023-02-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":111,"author":{"gitId":"varnika1402"},"content":"The task at index 1 is a todo: \u0027return book\u0027. This task will be deleted.","lastModifiedDate":"2023-02-19"},{"lineNumber":112,"author":{"gitId":"varnika1402"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":113,"author":{"gitId":"varnika1402"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-19"},{"lineNumber":114,"author":{"gitId":"varnika1402"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2023-02-19"},{"lineNumber":115,"author":{"gitId":"varnika1402"},"content":"\t[T][ ] read book","lastModifiedDate":"2023-02-19"},{"lineNumber":116,"author":{"gitId":"varnika1402"},"content":"Now you have 2 tasks in your list.","lastModifiedDate":"2023-02-19"},{"lineNumber":117,"author":{"gitId":"varnika1402"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-19"},{"lineNumber":118,"author":{"gitId":"varnika1402"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":119,"author":{"gitId":"varnika1402"},"content":"### `mark`","lastModifiedDate":"2023-02-19"},{"lineNumber":120,"author":{"gitId":"varnika1402"},"content":"marks a task as done","lastModifiedDate":"2023-02-19"},{"lineNumber":121,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":122,"author":{"gitId":"varnika1402"},"content":"**Format:**","lastModifiedDate":"2023-02-19"},{"lineNumber":123,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":124,"author":{"gitId":"varnika1402"},"content":"`mark \u003cindex\u003e`","lastModifiedDate":"2023-02-19"},{"lineNumber":125,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":126,"author":{"gitId":"varnika1402"},"content":"**Example:**","lastModifiedDate":"2023-02-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":128,"author":{"gitId":"varnika1402"},"content":"`mark 2`","lastModifiedDate":"2023-02-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":130,"author":{"gitId":"varnika1402"},"content":"**Expected outcome:**","lastModifiedDate":"2023-02-19"},{"lineNumber":131,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":132,"author":{"gitId":"varnika1402"},"content":"The task at index 2 is an event: \u0027project meeting\u0027. This task will marked as done.","lastModifiedDate":"2023-02-19"},{"lineNumber":133,"author":{"gitId":"varnika1402"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":134,"author":{"gitId":"varnika1402"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-19"},{"lineNumber":135,"author":{"gitId":"varnika1402"},"content":"Great! I have marked this task as done:","lastModifiedDate":"2023-02-19"},{"lineNumber":136,"author":{"gitId":"varnika1402"},"content":"\t[E][X] project meeting (from: Mon 2pm to: 4pm)","lastModifiedDate":"2023-02-19"},{"lineNumber":137,"author":{"gitId":"varnika1402"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":139,"author":{"gitId":"varnika1402"},"content":"### `unmark`","lastModifiedDate":"2023-02-19"},{"lineNumber":140,"author":{"gitId":"varnika1402"},"content":"marks a task as not done","lastModifiedDate":"2023-02-19"},{"lineNumber":141,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":142,"author":{"gitId":"varnika1402"},"content":"**Format:**","lastModifiedDate":"2023-02-19"},{"lineNumber":143,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":144,"author":{"gitId":"varnika1402"},"content":"`unmark \u003cindex\u003e`","lastModifiedDate":"2023-02-19"},{"lineNumber":145,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":146,"author":{"gitId":"varnika1402"},"content":"**Example:**","lastModifiedDate":"2023-02-19"},{"lineNumber":147,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":148,"author":{"gitId":"varnika1402"},"content":"`unmark 2`","lastModifiedDate":"2023-02-19"},{"lineNumber":149,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":150,"author":{"gitId":"varnika1402"},"content":"**Expected outcome:**","lastModifiedDate":"2023-02-19"},{"lineNumber":151,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":152,"author":{"gitId":"varnika1402"},"content":"The task at index 2 is an event: \u0027project meeting\u0027. This task will marked as not done.","lastModifiedDate":"2023-02-19"},{"lineNumber":153,"author":{"gitId":"varnika1402"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":154,"author":{"gitId":"varnika1402"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-19"},{"lineNumber":155,"author":{"gitId":"varnika1402"},"content":"OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2023-02-19"},{"lineNumber":156,"author":{"gitId":"varnika1402"},"content":"\t[E][ ] project meeting (from: Mon 2pm to: 4pm)","lastModifiedDate":"2023-02-19"},{"lineNumber":157,"author":{"gitId":"varnika1402"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-19"},{"lineNumber":158,"author":{"gitId":"varnika1402"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":159,"author":{"gitId":"varnika1402"},"content":"### `list`","lastModifiedDate":"2023-02-19"},{"lineNumber":160,"author":{"gitId":"varnika1402"},"content":"displays all tasks in the current task list","lastModifiedDate":"2023-02-19"},{"lineNumber":161,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":162,"author":{"gitId":"varnika1402"},"content":"**Format:**","lastModifiedDate":"2023-02-19"},{"lineNumber":163,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":164,"author":{"gitId":"varnika1402"},"content":"`list`","lastModifiedDate":"2023-02-19"},{"lineNumber":165,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":166,"author":{"gitId":"varnika1402"},"content":"**Example:**","lastModifiedDate":"2023-02-19"},{"lineNumber":167,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":168,"author":{"gitId":"varnika1402"},"content":"`list`","lastModifiedDate":"2023-02-19"},{"lineNumber":169,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":170,"author":{"gitId":"varnika1402"},"content":"**Expected outcome:**","lastModifiedDate":"2023-02-19"},{"lineNumber":171,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":172,"author":{"gitId":"varnika1402"},"content":"The current list has 2 tasks which will be displayed.","lastModifiedDate":"2023-02-19"},{"lineNumber":173,"author":{"gitId":"varnika1402"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":174,"author":{"gitId":"varnika1402"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-19"},{"lineNumber":175,"author":{"gitId":"varnika1402"},"content":"Here are the tasks in your list:","lastModifiedDate":"2023-02-19"},{"lineNumber":176,"author":{"gitId":"varnika1402"},"content":"\t1.[D][ ] return book (by: Sunday)","lastModifiedDate":"2023-02-19"},{"lineNumber":177,"author":{"gitId":"varnika1402"},"content":"\t2.[E][ ] project meeting (from: Mon 2pm to: 4pm)","lastModifiedDate":"2023-02-19"},{"lineNumber":178,"author":{"gitId":"varnika1402"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-19"},{"lineNumber":179,"author":{"gitId":"varnika1402"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":180,"author":{"gitId":"varnika1402"},"content":"### `find`","lastModifiedDate":"2023-02-19"},{"lineNumber":181,"author":{"gitId":"varnika1402"},"content":"displays all tasks in the current task list containing the specified keyword","lastModifiedDate":"2023-02-19"},{"lineNumber":182,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":183,"author":{"gitId":"varnika1402"},"content":"**Format:**","lastModifiedDate":"2023-02-19"},{"lineNumber":184,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":185,"author":{"gitId":"varnika1402"},"content":"`find \u003csubstring\u003e`","lastModifiedDate":"2023-02-19"},{"lineNumber":186,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":187,"author":{"gitId":"varnika1402"},"content":"**Example:**","lastModifiedDate":"2023-02-19"},{"lineNumber":188,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":189,"author":{"gitId":"varnika1402"},"content":"`find book`","lastModifiedDate":"2023-02-19"},{"lineNumber":190,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":191,"author":{"gitId":"varnika1402"},"content":"**Expected outcome:**","lastModifiedDate":"2023-02-19"},{"lineNumber":192,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":193,"author":{"gitId":"varnika1402"},"content":"The first task is the only task which contains the keyword \u0027book\u0027 so that will be displayed.","lastModifiedDate":"2023-02-19"},{"lineNumber":194,"author":{"gitId":"varnika1402"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":195,"author":{"gitId":"varnika1402"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-19"},{"lineNumber":196,"author":{"gitId":"varnika1402"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2023-02-19"},{"lineNumber":197,"author":{"gitId":"varnika1402"},"content":"\t1.[D][ ] return book (by: Sunday)","lastModifiedDate":"2023-02-19"},{"lineNumber":198,"author":{"gitId":"varnika1402"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-19"},{"lineNumber":199,"author":{"gitId":"varnika1402"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":200,"author":{"gitId":"varnika1402"},"content":"### `bye`","lastModifiedDate":"2023-02-19"},{"lineNumber":201,"author":{"gitId":"varnika1402"},"content":"exits the application","lastModifiedDate":"2023-02-19"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":203,"author":{"gitId":"varnika1402"},"content":"**Format:**","lastModifiedDate":"2023-02-19"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":205,"author":{"gitId":"varnika1402"},"content":"`bye`","lastModifiedDate":"2023-02-19"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":207,"author":{"gitId":"varnika1402"},"content":"**Example:**","lastModifiedDate":"2023-02-19"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":209,"author":{"gitId":"varnika1402"},"content":"`bye`","lastModifiedDate":"2023-02-19"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":211,"author":{"gitId":"varnika1402"},"content":"**Expected outcome:**","lastModifiedDate":"2023-02-19"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":213,"author":{"gitId":"varnika1402"},"content":"Greets the user with a bye message and exits the application.","lastModifiedDate":"2023-02-19"},{"lineNumber":214,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":215,"author":{"gitId":"varnika1402"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-19"},{"lineNumber":216,"author":{"gitId":"varnika1402"},"content":"Bye. Hope to see you again soon! :)","lastModifiedDate":"2023-02-19"},{"lineNumber":217,"author":{"gitId":"varnika1402"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-19"},{"lineNumber":218,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"varnika1402":191,"-":27}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"varnika1402"},"content":"package duke;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"varnika1402"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"varnika1402"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"varnika1402"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"varnika1402"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"varnika1402"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"varnika1402"},"content":"import java.io.File;","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"varnika1402"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"varnika1402"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"varnika1402"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"varnika1402"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"varnika1402"},"content":"    private static final Ui ui \u003d new Ui();","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"varnika1402"},"content":"    public static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"varnika1402"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"varnika1402"},"content":"     * Takes input from the user and parses it.","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"varnika1402"},"content":"     * Executes Duke until user inputs the bye command.","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"varnika1402"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"varnika1402"},"content":"    private static void runDuke() {","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"varnika1402"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"varnika1402"},"content":"        String input;","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"varnika1402"},"content":"        input \u003d in.nextLine();","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"varnika1402"},"content":"        while (!input.equals(\"bye\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"varnika1402"},"content":"            Parser.handleCommand(input, tasks);","lastModifiedDate":"2023-02-18"},{"lineNumber":30,"author":{"gitId":"varnika1402"},"content":"            input \u003d in.nextLine();","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"varnika1402"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"varnika1402"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"varnika1402"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":35,"author":{"gitId":"varnika1402"},"content":"     * Reads the file and loads the saved data to the task list.","lastModifiedDate":"2023-02-18"},{"lineNumber":36,"author":{"gitId":"varnika1402"},"content":"     * Greets the user and runs duke to execute user\u0027s commands.","lastModifiedDate":"2023-02-18"},{"lineNumber":37,"author":{"gitId":"varnika1402"},"content":"     * Exits Duke by greeting the user with a bye message.","lastModifiedDate":"2023-02-18"},{"lineNumber":38,"author":{"gitId":"varnika1402"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":39,"author":{"gitId":"varnika1402"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"varnika1402"},"content":"        Storage.loadData(tasks);","lastModifiedDate":"2023-02-18"},{"lineNumber":41,"author":{"gitId":"varnika1402"},"content":"        ui.printWelcomeMessage();","lastModifiedDate":"2023-02-18"},{"lineNumber":42,"author":{"gitId":"varnika1402"},"content":"        runDuke();","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"varnika1402"},"content":"        ui.printByeMessage();","lastModifiedDate":"2023-02-18"},{"lineNumber":44,"author":{"gitId":"varnika1402"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":46,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"varnika1402":44,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"varnika1402"},"content":"package duke;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"varnika1402"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"varnika1402"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"varnika1402"},"content":"        super(message);","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"varnika1402"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"varnika1402"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"varnika1402":7}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"varnika1402"},"content":"package duke;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":3,"author":{"gitId":"varnika1402"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"varnika1402"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"varnika1402"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"varnika1402"},"content":"public class Parser {","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"varnika1402"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"varnika1402"},"content":"     * Parses the user input and performs action based on the command","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"varnika1402"},"content":"     * provided by user.","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"varnika1402"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"varnika1402"},"content":"     * @param input Input stores the command entered by user.","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"varnika1402"},"content":"     * @param tasks Arraylist used to store the tasks.","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"varnika1402"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"varnika1402"},"content":"    public static void handleCommand(String input, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"varnika1402"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"varnika1402"},"content":"        TaskList taskList \u003d new TaskList(tasks);","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"varnika1402"},"content":"        try {","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"varnika1402"},"content":"            String[] words \u003d input.split(\" \");","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"varnika1402"},"content":"            switch (words[0]) {","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"varnika1402"},"content":"            case \"list\":","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"varnika1402"},"content":"                taskList.printList();","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"varnika1402"},"content":"                break;","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"varnika1402"},"content":"            case \"mark\":","lastModifiedDate":"2023-02-18"},{"lineNumber":29,"author":{"gitId":"varnika1402"},"content":"                taskList.markAsDone(input);","lastModifiedDate":"2023-02-18"},{"lineNumber":30,"author":{"gitId":"varnika1402"},"content":"                break;","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"varnika1402"},"content":"            case \"unmark\":","lastModifiedDate":"2023-02-18"},{"lineNumber":33,"author":{"gitId":"varnika1402"},"content":"                taskList.markAsUndone(input);","lastModifiedDate":"2023-02-18"},{"lineNumber":34,"author":{"gitId":"varnika1402"},"content":"                break;","lastModifiedDate":"2023-02-18"},{"lineNumber":35,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":36,"author":{"gitId":"varnika1402"},"content":"            case \"todo\":","lastModifiedDate":"2023-02-18"},{"lineNumber":37,"author":{"gitId":"varnika1402"},"content":"                taskList.addTodo(input);","lastModifiedDate":"2023-02-18"},{"lineNumber":38,"author":{"gitId":"varnika1402"},"content":"                break;","lastModifiedDate":"2023-02-18"},{"lineNumber":39,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":40,"author":{"gitId":"varnika1402"},"content":"            case \"deadline\":","lastModifiedDate":"2023-02-18"},{"lineNumber":41,"author":{"gitId":"varnika1402"},"content":"                taskList.addDeadline(input);","lastModifiedDate":"2023-02-18"},{"lineNumber":42,"author":{"gitId":"varnika1402"},"content":"                break;","lastModifiedDate":"2023-02-18"},{"lineNumber":43,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":44,"author":{"gitId":"varnika1402"},"content":"            case \"event\":","lastModifiedDate":"2023-02-18"},{"lineNumber":45,"author":{"gitId":"varnika1402"},"content":"                taskList.addEvent(input);","lastModifiedDate":"2023-02-18"},{"lineNumber":46,"author":{"gitId":"varnika1402"},"content":"                break;","lastModifiedDate":"2023-02-18"},{"lineNumber":47,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":48,"author":{"gitId":"varnika1402"},"content":"            case \"delete\":","lastModifiedDate":"2023-02-18"},{"lineNumber":49,"author":{"gitId":"varnika1402"},"content":"                taskList.deleteTask(input);","lastModifiedDate":"2023-02-18"},{"lineNumber":50,"author":{"gitId":"varnika1402"},"content":"                break;","lastModifiedDate":"2023-02-18"},{"lineNumber":51,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":52,"author":{"gitId":"varnika1402"},"content":"            case \"find\":","lastModifiedDate":"2023-02-18"},{"lineNumber":53,"author":{"gitId":"varnika1402"},"content":"                taskList.findTask(input);","lastModifiedDate":"2023-02-18"},{"lineNumber":54,"author":{"gitId":"varnika1402"},"content":"                break;","lastModifiedDate":"2023-02-18"},{"lineNumber":55,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":56,"author":{"gitId":"varnika1402"},"content":"            default:","lastModifiedDate":"2023-02-18"},{"lineNumber":57,"author":{"gitId":"varnika1402"},"content":"                throw new DukeException(\" ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-02-18"},{"lineNumber":58,"author":{"gitId":"varnika1402"},"content":"            }","lastModifiedDate":"2023-02-18"},{"lineNumber":59,"author":{"gitId":"varnika1402"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-18"},{"lineNumber":60,"author":{"gitId":"varnika1402"},"content":"            ui.printLine();","lastModifiedDate":"2023-02-18"},{"lineNumber":61,"author":{"gitId":"varnika1402"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-02-18"},{"lineNumber":62,"author":{"gitId":"varnika1402"},"content":"            ui.printLine();","lastModifiedDate":"2023-02-18"},{"lineNumber":63,"author":{"gitId":"varnika1402"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2023-02-18"},{"lineNumber":64,"author":{"gitId":"varnika1402"},"content":"            ui.printLine();","lastModifiedDate":"2023-02-18"},{"lineNumber":65,"author":{"gitId":"varnika1402"},"content":"            System.out.println(\"Unable to save data\");","lastModifiedDate":"2023-02-18"},{"lineNumber":66,"author":{"gitId":"varnika1402"},"content":"            ui.printLine();","lastModifiedDate":"2023-02-18"},{"lineNumber":67,"author":{"gitId":"varnika1402"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":68,"author":{"gitId":"varnika1402"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":69,"author":{"gitId":"varnika1402"},"content":"}","lastModifiedDate":"2023-02-18"}],"authorContributionMap":{"varnika1402":69}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"varnika1402"},"content":"package duke;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":3,"author":{"gitId":"varnika1402"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"varnika1402"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"varnika1402"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"varnika1402"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"varnika1402"},"content":"import java.io.File;","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"varnika1402"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"varnika1402"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"varnika1402"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"varnika1402"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"varnika1402"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"varnika1402"},"content":"/**","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"varnika1402"},"content":" * Loads previous tasks fom file into the task list.","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"varnika1402"},"content":" * Saves the tasks to the file and updates the file on deletion","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"varnika1402"},"content":" * or completion of tasks.","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"varnika1402"},"content":" */","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"varnika1402"},"content":"public class Storage {","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"varnika1402"},"content":"    private static final String FILE_PATH \u003d \"duke.txt\";","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"varnika1402"},"content":"    public static ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"varnika1402"},"content":"    public Storage(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"varnika1402"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"varnika1402"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"varnika1402"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":29,"author":{"gitId":"varnika1402"},"content":"     * Calls loadTasks function to load the tasks from file into","lastModifiedDate":"2023-02-18"},{"lineNumber":30,"author":{"gitId":"varnika1402"},"content":"     * the task list.","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"varnika1402"},"content":"     * Creates new file, if file not found and catches any encountered","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"varnika1402"},"content":"     * exceptions.","lastModifiedDate":"2023-02-18"},{"lineNumber":33,"author":{"gitId":"varnika1402"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":34,"author":{"gitId":"varnika1402"},"content":"     * @param tasks Arraylist used to store the tasks.","lastModifiedDate":"2023-02-18"},{"lineNumber":35,"author":{"gitId":"varnika1402"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":36,"author":{"gitId":"varnika1402"},"content":"    public static void loadData(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-18"},{"lineNumber":37,"author":{"gitId":"varnika1402"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-02-18"},{"lineNumber":38,"author":{"gitId":"varnika1402"},"content":"        try {","lastModifiedDate":"2023-02-18"},{"lineNumber":39,"author":{"gitId":"varnika1402"},"content":"            File file \u003d new File(FILE_PATH);","lastModifiedDate":"2023-02-18"},{"lineNumber":40,"author":{"gitId":"varnika1402"},"content":"            Scanner in \u003d new Scanner(file);","lastModifiedDate":"2023-02-18"},{"lineNumber":41,"author":{"gitId":"varnika1402"},"content":"            while (in.hasNext()) {","lastModifiedDate":"2023-02-18"},{"lineNumber":42,"author":{"gitId":"varnika1402"},"content":"                loadTasks(in.nextLine(), tasks);","lastModifiedDate":"2023-02-18"},{"lineNumber":43,"author":{"gitId":"varnika1402"},"content":"            }","lastModifiedDate":"2023-02-18"},{"lineNumber":44,"author":{"gitId":"varnika1402"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-02-18"},{"lineNumber":45,"author":{"gitId":"varnika1402"},"content":"            File file \u003d new File(FILE_PATH);","lastModifiedDate":"2023-02-18"},{"lineNumber":46,"author":{"gitId":"varnika1402"},"content":"            try {","lastModifiedDate":"2023-02-18"},{"lineNumber":47,"author":{"gitId":"varnika1402"},"content":"                file.createNewFile();","lastModifiedDate":"2023-02-18"},{"lineNumber":48,"author":{"gitId":"varnika1402"},"content":"            } catch (IOException ex) {","lastModifiedDate":"2023-02-18"},{"lineNumber":49,"author":{"gitId":"varnika1402"},"content":"                ui.printLine();","lastModifiedDate":"2023-02-18"},{"lineNumber":50,"author":{"gitId":"varnika1402"},"content":"                System.out.println(\"New file cannot be created\");","lastModifiedDate":"2023-02-18"},{"lineNumber":51,"author":{"gitId":"varnika1402"},"content":"                ui.printLine();","lastModifiedDate":"2023-02-18"},{"lineNumber":52,"author":{"gitId":"varnika1402"},"content":"            }","lastModifiedDate":"2023-02-18"},{"lineNumber":53,"author":{"gitId":"varnika1402"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":54,"author":{"gitId":"varnika1402"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":55,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":56,"author":{"gitId":"varnika1402"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":57,"author":{"gitId":"varnika1402"},"content":"     * Loads the tasks from duke.txt file into the task list.","lastModifiedDate":"2023-02-18"},{"lineNumber":58,"author":{"gitId":"varnika1402"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":59,"author":{"gitId":"varnika1402"},"content":"     * @param input Stores the contents of the file line by line.","lastModifiedDate":"2023-02-18"},{"lineNumber":60,"author":{"gitId":"varnika1402"},"content":"     * @param tasks Arraylist used to store the tasks.","lastModifiedDate":"2023-02-18"},{"lineNumber":61,"author":{"gitId":"varnika1402"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":62,"author":{"gitId":"varnika1402"},"content":"    public static void loadTasks(String input, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-18"},{"lineNumber":63,"author":{"gitId":"varnika1402"},"content":"        String[] splitInput \u003d input.split(\"-\u003e\");","lastModifiedDate":"2023-02-18"},{"lineNumber":64,"author":{"gitId":"varnika1402"},"content":"        String taskType \u003d splitInput[0].trim();","lastModifiedDate":"2023-02-18"},{"lineNumber":65,"author":{"gitId":"varnika1402"},"content":"        String status \u003d splitInput[1].trim();","lastModifiedDate":"2023-02-18"},{"lineNumber":66,"author":{"gitId":"varnika1402"},"content":"        String taskDescription \u003d splitInput[2].trim();","lastModifiedDate":"2023-02-18"},{"lineNumber":67,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":68,"author":{"gitId":"varnika1402"},"content":"        switch (taskType) {","lastModifiedDate":"2023-02-18"},{"lineNumber":69,"author":{"gitId":"varnika1402"},"content":"        case \"T\":","lastModifiedDate":"2023-02-18"},{"lineNumber":70,"author":{"gitId":"varnika1402"},"content":"            tasks.add(new Todo(taskDescription));","lastModifiedDate":"2023-02-18"},{"lineNumber":71,"author":{"gitId":"varnika1402"},"content":"            break;","lastModifiedDate":"2023-02-18"},{"lineNumber":72,"author":{"gitId":"varnika1402"},"content":"        case \"D\":","lastModifiedDate":"2023-02-18"},{"lineNumber":73,"author":{"gitId":"varnika1402"},"content":"            String by \u003d splitInput[3].trim();","lastModifiedDate":"2023-02-18"},{"lineNumber":74,"author":{"gitId":"varnika1402"},"content":"            tasks.add(new Deadline(taskDescription, by));","lastModifiedDate":"2023-02-18"},{"lineNumber":75,"author":{"gitId":"varnika1402"},"content":"            break;","lastModifiedDate":"2023-02-18"},{"lineNumber":76,"author":{"gitId":"varnika1402"},"content":"        case \"E\":","lastModifiedDate":"2023-02-18"},{"lineNumber":77,"author":{"gitId":"varnika1402"},"content":"            String from \u003d splitInput[3].trim();","lastModifiedDate":"2023-02-18"},{"lineNumber":78,"author":{"gitId":"varnika1402"},"content":"            String to \u003d splitInput[4].trim();","lastModifiedDate":"2023-02-18"},{"lineNumber":79,"author":{"gitId":"varnika1402"},"content":"            tasks.add(new Event(taskDescription, from, to));","lastModifiedDate":"2023-02-18"},{"lineNumber":80,"author":{"gitId":"varnika1402"},"content":"            break;","lastModifiedDate":"2023-02-18"},{"lineNumber":81,"author":{"gitId":"varnika1402"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":82,"author":{"gitId":"varnika1402"},"content":"        if (status.equals(\"1\")) {","lastModifiedDate":"2023-02-18"},{"lineNumber":83,"author":{"gitId":"varnika1402"},"content":"            tasks.get(tasks.size() - 1).markDone();","lastModifiedDate":"2023-02-18"},{"lineNumber":84,"author":{"gitId":"varnika1402"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":85,"author":{"gitId":"varnika1402"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":86,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":87,"author":{"gitId":"varnika1402"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":88,"author":{"gitId":"varnika1402"},"content":"     * Writes the tasks from the task list to duke.txt file.","lastModifiedDate":"2023-02-18"},{"lineNumber":89,"author":{"gitId":"varnika1402"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":90,"author":{"gitId":"varnika1402"},"content":"     * @param tasks Arraylist used to store the tasks.","lastModifiedDate":"2023-02-18"},{"lineNumber":91,"author":{"gitId":"varnika1402"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":92,"author":{"gitId":"varnika1402"},"content":"    public static void saveTask(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-18"},{"lineNumber":93,"author":{"gitId":"varnika1402"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-02-18"},{"lineNumber":94,"author":{"gitId":"varnika1402"},"content":"        try {","lastModifiedDate":"2023-02-18"},{"lineNumber":95,"author":{"gitId":"varnika1402"},"content":"            FileWriter fw \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2023-02-18"},{"lineNumber":96,"author":{"gitId":"varnika1402"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-02-18"},{"lineNumber":97,"author":{"gitId":"varnika1402"},"content":"                String status;","lastModifiedDate":"2023-02-18"},{"lineNumber":98,"author":{"gitId":"varnika1402"},"content":"                String lineToAdd \u003d \"\";","lastModifiedDate":"2023-02-18"},{"lineNumber":99,"author":{"gitId":"varnika1402"},"content":"                if (task.getStatusIcon().equals(\"X\")) {","lastModifiedDate":"2023-02-18"},{"lineNumber":100,"author":{"gitId":"varnika1402"},"content":"                    status \u003d \"1\";","lastModifiedDate":"2023-02-18"},{"lineNumber":101,"author":{"gitId":"varnika1402"},"content":"                } else {","lastModifiedDate":"2023-02-18"},{"lineNumber":102,"author":{"gitId":"varnika1402"},"content":"                    status \u003d \"0\";","lastModifiedDate":"2023-02-18"},{"lineNumber":103,"author":{"gitId":"varnika1402"},"content":"                }","lastModifiedDate":"2023-02-18"},{"lineNumber":104,"author":{"gitId":"varnika1402"},"content":"                if (task instanceof Todo) {","lastModifiedDate":"2023-02-18"},{"lineNumber":105,"author":{"gitId":"varnika1402"},"content":"                    lineToAdd \u003d \"T\" + \" -\u003e \" + status + \" -\u003e \" + task.description + \"\\n\";","lastModifiedDate":"2023-02-18"},{"lineNumber":106,"author":{"gitId":"varnika1402"},"content":"                }","lastModifiedDate":"2023-02-18"},{"lineNumber":107,"author":{"gitId":"varnika1402"},"content":"                if (task instanceof Deadline) {","lastModifiedDate":"2023-02-18"},{"lineNumber":108,"author":{"gitId":"varnika1402"},"content":"                    lineToAdd \u003d \"D\" + \" -\u003e \" + status + \" -\u003e \" + task.description + \" -\u003e \" + ((Deadline) task).by + \"\\n\";","lastModifiedDate":"2023-02-18"},{"lineNumber":109,"author":{"gitId":"varnika1402"},"content":"                }","lastModifiedDate":"2023-02-18"},{"lineNumber":110,"author":{"gitId":"varnika1402"},"content":"                if (task instanceof Event) {","lastModifiedDate":"2023-02-18"},{"lineNumber":111,"author":{"gitId":"varnika1402"},"content":"                    String time \u003d ((Event) task).from + \" -\u003e \" + ((Event) task).to;","lastModifiedDate":"2023-02-18"},{"lineNumber":112,"author":{"gitId":"varnika1402"},"content":"                    lineToAdd \u003d \"E\" + \" -\u003e \" + status + \" -\u003e \" + task.description + \" -\u003e \" + time + \"\\n\";","lastModifiedDate":"2023-02-18"},{"lineNumber":113,"author":{"gitId":"varnika1402"},"content":"                }","lastModifiedDate":"2023-02-18"},{"lineNumber":114,"author":{"gitId":"varnika1402"},"content":"                fw.write(lineToAdd);","lastModifiedDate":"2023-02-18"},{"lineNumber":115,"author":{"gitId":"varnika1402"},"content":"            }","lastModifiedDate":"2023-02-18"},{"lineNumber":116,"author":{"gitId":"varnika1402"},"content":"            fw.close();","lastModifiedDate":"2023-02-18"},{"lineNumber":117,"author":{"gitId":"varnika1402"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-18"},{"lineNumber":118,"author":{"gitId":"varnika1402"},"content":"            ui.printLine();","lastModifiedDate":"2023-02-18"},{"lineNumber":119,"author":{"gitId":"varnika1402"},"content":"            System.out.println(\"Unable to save data\");","lastModifiedDate":"2023-02-18"},{"lineNumber":120,"author":{"gitId":"varnika1402"},"content":"            ui.printLine();","lastModifiedDate":"2023-02-18"},{"lineNumber":121,"author":{"gitId":"varnika1402"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":122,"author":{"gitId":"varnika1402"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":123,"author":{"gitId":"varnika1402"},"content":"}","lastModifiedDate":"2023-02-18"}],"authorContributionMap":{"varnika1402":123}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"varnika1402"},"content":"package duke;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":3,"author":{"gitId":"varnika1402"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"varnika1402"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"varnika1402"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"varnika1402"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"varnika1402"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"varnika1402"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"varnika1402"},"content":"public class TaskList {","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"varnika1402"},"content":"    private static final Ui ui \u003d new Ui();","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"varnika1402"},"content":"    public static ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"varnika1402"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"varnika1402"},"content":"     * Constructor to initialise the task list.","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"varnika1402"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"varnika1402"},"content":"     * @param tasks Arraylist used to store the tasks.","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"varnika1402"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"varnika1402"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"varnika1402"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"varnika1402"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"varnika1402"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"varnika1402"},"content":"     * Marks a particular task as done.","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"varnika1402"},"content":"     * Prints the completed task.","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"varnika1402"},"content":"     * Updates the text file based on the task status.","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"varnika1402"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":29,"author":{"gitId":"varnika1402"},"content":"     * @param input Stores the User input.","lastModifiedDate":"2023-02-18"},{"lineNumber":30,"author":{"gitId":"varnika1402"},"content":"     * @throws DukeException if the taskNumber is invalid.","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"varnika1402"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"varnika1402"},"content":"    public static void markAsDone(String input) throws DukeException {","lastModifiedDate":"2023-02-18"},{"lineNumber":33,"author":{"gitId":"varnika1402"},"content":"        String taskNum \u003d input.substring(input.indexOf(\" \") + 1);","lastModifiedDate":"2023-02-18"},{"lineNumber":34,"author":{"gitId":"varnika1402"},"content":"        int taskNumber \u003d Integer.parseInt(taskNum);","lastModifiedDate":"2023-02-18"},{"lineNumber":35,"author":{"gitId":"varnika1402"},"content":"        if (taskNumber \u003e tasks.size()) {","lastModifiedDate":"2023-02-18"},{"lineNumber":36,"author":{"gitId":"varnika1402"},"content":"            throw new DukeException(\"This task does not exist. Please provide a valid task index.\");","lastModifiedDate":"2023-02-18"},{"lineNumber":37,"author":{"gitId":"varnika1402"},"content":"        } else {","lastModifiedDate":"2023-02-18"},{"lineNumber":38,"author":{"gitId":"varnika1402"},"content":"            ui.printLine();","lastModifiedDate":"2023-02-18"},{"lineNumber":39,"author":{"gitId":"varnika1402"},"content":"            tasks.get(taskNumber - 1).markDone();","lastModifiedDate":"2023-02-18"},{"lineNumber":40,"author":{"gitId":"varnika1402"},"content":"            System.out.println(\"Great! I have marked this task as done:\");","lastModifiedDate":"2023-02-18"},{"lineNumber":41,"author":{"gitId":"varnika1402"},"content":"            System.out.print(\"\\t\");","lastModifiedDate":"2023-02-18"},{"lineNumber":42,"author":{"gitId":"varnika1402"},"content":"            System.out.println(tasks.get(taskNumber - 1));","lastModifiedDate":"2023-02-18"},{"lineNumber":43,"author":{"gitId":"varnika1402"},"content":"            ui.printLine();","lastModifiedDate":"2023-02-18"},{"lineNumber":44,"author":{"gitId":"varnika1402"},"content":"            Storage.saveTask(tasks);","lastModifiedDate":"2023-02-18"},{"lineNumber":45,"author":{"gitId":"varnika1402"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":46,"author":{"gitId":"varnika1402"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":47,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":48,"author":{"gitId":"varnika1402"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":49,"author":{"gitId":"varnika1402"},"content":"     * Marks a particular task as undone.","lastModifiedDate":"2023-02-18"},{"lineNumber":50,"author":{"gitId":"varnika1402"},"content":"     * Prints the incomplete task.","lastModifiedDate":"2023-02-18"},{"lineNumber":51,"author":{"gitId":"varnika1402"},"content":"     * Updates the text file based on the task status.","lastModifiedDate":"2023-02-18"},{"lineNumber":52,"author":{"gitId":"varnika1402"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":53,"author":{"gitId":"varnika1402"},"content":"     * @param input Stores the User input.","lastModifiedDate":"2023-02-18"},{"lineNumber":54,"author":{"gitId":"varnika1402"},"content":"     * @throws DukeException if the taskNumber is invalid.","lastModifiedDate":"2023-02-18"},{"lineNumber":55,"author":{"gitId":"varnika1402"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":56,"author":{"gitId":"varnika1402"},"content":"    public static void markAsUndone(String input) throws DukeException {","lastModifiedDate":"2023-02-18"},{"lineNumber":57,"author":{"gitId":"varnika1402"},"content":"        String taskNum \u003d input.substring(input.indexOf(\" \") + 1);","lastModifiedDate":"2023-02-18"},{"lineNumber":58,"author":{"gitId":"varnika1402"},"content":"        int taskNumber \u003d Integer.parseInt(taskNum);","lastModifiedDate":"2023-02-18"},{"lineNumber":59,"author":{"gitId":"varnika1402"},"content":"        if (taskNumber \u003e tasks.size()) {","lastModifiedDate":"2023-02-18"},{"lineNumber":60,"author":{"gitId":"varnika1402"},"content":"            throw new DukeException(\"This task does not exist. Please provide a valid task index.\");","lastModifiedDate":"2023-02-18"},{"lineNumber":61,"author":{"gitId":"varnika1402"},"content":"        } else {","lastModifiedDate":"2023-02-18"},{"lineNumber":62,"author":{"gitId":"varnika1402"},"content":"            ui.printLine();","lastModifiedDate":"2023-02-18"},{"lineNumber":63,"author":{"gitId":"varnika1402"},"content":"            tasks.get(taskNumber - 1).markUndone();","lastModifiedDate":"2023-02-18"},{"lineNumber":64,"author":{"gitId":"varnika1402"},"content":"            System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-02-18"},{"lineNumber":65,"author":{"gitId":"varnika1402"},"content":"            System.out.print(\"\\t\");","lastModifiedDate":"2023-02-18"},{"lineNumber":66,"author":{"gitId":"varnika1402"},"content":"            System.out.println(tasks.get(taskNumber - 1));","lastModifiedDate":"2023-02-18"},{"lineNumber":67,"author":{"gitId":"varnika1402"},"content":"            ui.printLine();","lastModifiedDate":"2023-02-18"},{"lineNumber":68,"author":{"gitId":"varnika1402"},"content":"            Storage.saveTask(tasks);","lastModifiedDate":"2023-02-18"},{"lineNumber":69,"author":{"gitId":"varnika1402"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":70,"author":{"gitId":"varnika1402"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":71,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":72,"author":{"gitId":"varnika1402"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":73,"author":{"gitId":"varnika1402"},"content":"     * Deletes a particular task.","lastModifiedDate":"2023-02-18"},{"lineNumber":74,"author":{"gitId":"varnika1402"},"content":"     * Prints the deleted task.","lastModifiedDate":"2023-02-18"},{"lineNumber":75,"author":{"gitId":"varnika1402"},"content":"     * Updates the text file by removing the deleted task.","lastModifiedDate":"2023-02-18"},{"lineNumber":76,"author":{"gitId":"varnika1402"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":77,"author":{"gitId":"varnika1402"},"content":"     * @param input Stores the User input.","lastModifiedDate":"2023-02-18"},{"lineNumber":78,"author":{"gitId":"varnika1402"},"content":"     * @throws DukeException if the taskNumber is invalid.","lastModifiedDate":"2023-02-18"},{"lineNumber":79,"author":{"gitId":"varnika1402"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":80,"author":{"gitId":"varnika1402"},"content":"    public static void deleteTask(String input) throws DukeException, IOException {","lastModifiedDate":"2023-02-18"},{"lineNumber":81,"author":{"gitId":"varnika1402"},"content":"        String taskNum \u003d input.substring(input.indexOf(\" \") + 1);","lastModifiedDate":"2023-02-18"},{"lineNumber":82,"author":{"gitId":"varnika1402"},"content":"        int taskNumber \u003d Integer.parseInt(taskNum);","lastModifiedDate":"2023-02-18"},{"lineNumber":83,"author":{"gitId":"varnika1402"},"content":"        if (taskNumber \u003e tasks.size()) {","lastModifiedDate":"2023-02-18"},{"lineNumber":84,"author":{"gitId":"varnika1402"},"content":"            throw new DukeException(\"This task does not exist. Please provide a valid task index.\");","lastModifiedDate":"2023-02-18"},{"lineNumber":85,"author":{"gitId":"varnika1402"},"content":"        } else {","lastModifiedDate":"2023-02-18"},{"lineNumber":86,"author":{"gitId":"varnika1402"},"content":"            ui.printLine();","lastModifiedDate":"2023-02-18"},{"lineNumber":87,"author":{"gitId":"varnika1402"},"content":"            Task deletedTask \u003d tasks.get(taskNumber - 1);","lastModifiedDate":"2023-02-18"},{"lineNumber":88,"author":{"gitId":"varnika1402"},"content":"            tasks.remove(taskNumber - 1);","lastModifiedDate":"2023-02-18"},{"lineNumber":89,"author":{"gitId":"varnika1402"},"content":"            System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-02-18"},{"lineNumber":90,"author":{"gitId":"varnika1402"},"content":"            System.out.print(\"\\t\");","lastModifiedDate":"2023-02-18"},{"lineNumber":91,"author":{"gitId":"varnika1402"},"content":"            System.out.println(deletedTask);","lastModifiedDate":"2023-02-18"},{"lineNumber":92,"author":{"gitId":"varnika1402"},"content":"            System.out.println(\"Now you have \" + tasks.size() + \" tasks in your list.\");","lastModifiedDate":"2023-02-18"},{"lineNumber":93,"author":{"gitId":"varnika1402"},"content":"            ui.printLine();","lastModifiedDate":"2023-02-18"},{"lineNumber":94,"author":{"gitId":"varnika1402"},"content":"            Storage.saveTask(tasks);","lastModifiedDate":"2023-02-18"},{"lineNumber":95,"author":{"gitId":"varnika1402"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":96,"author":{"gitId":"varnika1402"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":97,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":98,"author":{"gitId":"varnika1402"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":99,"author":{"gitId":"varnika1402"},"content":"     * Displays all the tasks in the task list to the user.","lastModifiedDate":"2023-02-18"},{"lineNumber":100,"author":{"gitId":"varnika1402"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":101,"author":{"gitId":"varnika1402"},"content":"     * @throws DukeException if the task list is empty.","lastModifiedDate":"2023-02-18"},{"lineNumber":102,"author":{"gitId":"varnika1402"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":103,"author":{"gitId":"varnika1402"},"content":"    public static void printList() throws DukeException {","lastModifiedDate":"2023-02-18"},{"lineNumber":104,"author":{"gitId":"varnika1402"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-02-18"},{"lineNumber":105,"author":{"gitId":"varnika1402"},"content":"            throw new DukeException(\"Sorry, there are no tasks in the list currently.\");","lastModifiedDate":"2023-02-18"},{"lineNumber":106,"author":{"gitId":"varnika1402"},"content":"        } else {","lastModifiedDate":"2023-02-18"},{"lineNumber":107,"author":{"gitId":"varnika1402"},"content":"            ui.printLine();","lastModifiedDate":"2023-02-18"},{"lineNumber":108,"author":{"gitId":"varnika1402"},"content":"            System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-02-18"},{"lineNumber":109,"author":{"gitId":"varnika1402"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-02-18"},{"lineNumber":110,"author":{"gitId":"varnika1402"},"content":"                System.out.print(\"\\t\" + (i + 1) + \".\");","lastModifiedDate":"2023-02-18"},{"lineNumber":111,"author":{"gitId":"varnika1402"},"content":"                System.out.println(tasks.get(i));","lastModifiedDate":"2023-02-18"},{"lineNumber":112,"author":{"gitId":"varnika1402"},"content":"            }","lastModifiedDate":"2023-02-18"},{"lineNumber":113,"author":{"gitId":"varnika1402"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":114,"author":{"gitId":"varnika1402"},"content":"        ui.printLine();","lastModifiedDate":"2023-02-18"},{"lineNumber":115,"author":{"gitId":"varnika1402"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":116,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":117,"author":{"gitId":"varnika1402"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":118,"author":{"gitId":"varnika1402"},"content":"     * Adds the todo to task list.","lastModifiedDate":"2023-02-18"},{"lineNumber":119,"author":{"gitId":"varnika1402"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":120,"author":{"gitId":"varnika1402"},"content":"     * @param input Stores the user input.","lastModifiedDate":"2023-02-18"},{"lineNumber":121,"author":{"gitId":"varnika1402"},"content":"     * @throws DukeException if the description is empty.","lastModifiedDate":"2023-02-18"},{"lineNumber":122,"author":{"gitId":"varnika1402"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":123,"author":{"gitId":"varnika1402"},"content":"    public static void addTodo(String input) throws DukeException {","lastModifiedDate":"2023-02-18"},{"lineNumber":124,"author":{"gitId":"varnika1402"},"content":"        String[] words \u003d input.split(\" \");","lastModifiedDate":"2023-02-18"},{"lineNumber":125,"author":{"gitId":"varnika1402"},"content":"        if (words.length \u003c 2) {","lastModifiedDate":"2023-02-18"},{"lineNumber":126,"author":{"gitId":"varnika1402"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-02-18"},{"lineNumber":127,"author":{"gitId":"varnika1402"},"content":"        } else {","lastModifiedDate":"2023-02-18"},{"lineNumber":128,"author":{"gitId":"varnika1402"},"content":"            Todo todo \u003d new Todo(input.substring(5));","lastModifiedDate":"2023-02-18"},{"lineNumber":129,"author":{"gitId":"varnika1402"},"content":"            tasks.add(todo);","lastModifiedDate":"2023-02-18"},{"lineNumber":130,"author":{"gitId":"varnika1402"},"content":"            ui.printLine();","lastModifiedDate":"2023-02-18"},{"lineNumber":131,"author":{"gitId":"varnika1402"},"content":"            System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-02-18"},{"lineNumber":132,"author":{"gitId":"varnika1402"},"content":"            System.out.print(\"\\t\");","lastModifiedDate":"2023-02-18"},{"lineNumber":133,"author":{"gitId":"varnika1402"},"content":"            System.out.println(todo);","lastModifiedDate":"2023-02-18"},{"lineNumber":134,"author":{"gitId":"varnika1402"},"content":"            System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-02-18"},{"lineNumber":135,"author":{"gitId":"varnika1402"},"content":"            ui.printLine();","lastModifiedDate":"2023-02-18"},{"lineNumber":136,"author":{"gitId":"varnika1402"},"content":"            Storage.saveTask(tasks);","lastModifiedDate":"2023-02-18"},{"lineNumber":137,"author":{"gitId":"varnika1402"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":138,"author":{"gitId":"varnika1402"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":139,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":140,"author":{"gitId":"varnika1402"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":141,"author":{"gitId":"varnika1402"},"content":"     * Adds the deadline to task list.","lastModifiedDate":"2023-02-18"},{"lineNumber":142,"author":{"gitId":"varnika1402"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":143,"author":{"gitId":"varnika1402"},"content":"     * @param input Stores the user input.","lastModifiedDate":"2023-02-18"},{"lineNumber":144,"author":{"gitId":"varnika1402"},"content":"     * @throws DukeException if the description or date is empty.","lastModifiedDate":"2023-02-18"},{"lineNumber":145,"author":{"gitId":"varnika1402"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":146,"author":{"gitId":"varnika1402"},"content":"    public static void addDeadline(String input) throws DukeException {","lastModifiedDate":"2023-02-18"},{"lineNumber":147,"author":{"gitId":"varnika1402"},"content":"        String[] words \u003d input.split(\" \");","lastModifiedDate":"2023-02-18"},{"lineNumber":148,"author":{"gitId":"varnika1402"},"content":"        int index \u003d input.indexOf(\"/\");","lastModifiedDate":"2023-02-18"},{"lineNumber":149,"author":{"gitId":"varnika1402"},"content":"        if (words.length \u003c 2 || index \u003d\u003d -1) {","lastModifiedDate":"2023-02-18"},{"lineNumber":150,"author":{"gitId":"varnika1402"},"content":"            throw new DukeException(\"☹ OOPS!!! The description or date of a deadline cannot be empty.\");","lastModifiedDate":"2023-02-18"},{"lineNumber":151,"author":{"gitId":"varnika1402"},"content":"        } else {","lastModifiedDate":"2023-02-18"},{"lineNumber":152,"author":{"gitId":"varnika1402"},"content":"            String[] wordDeadline \u003d input.substring(9).split(\"/\");","lastModifiedDate":"2023-02-18"},{"lineNumber":153,"author":{"gitId":"varnika1402"},"content":"            Deadline deadline \u003d new Deadline(wordDeadline[0].trim(), wordDeadline[1].substring(3));","lastModifiedDate":"2023-02-18"},{"lineNumber":154,"author":{"gitId":"varnika1402"},"content":"            tasks.add(deadline);","lastModifiedDate":"2023-02-18"},{"lineNumber":155,"author":{"gitId":"varnika1402"},"content":"            ui.printLine();","lastModifiedDate":"2023-02-18"},{"lineNumber":156,"author":{"gitId":"varnika1402"},"content":"            System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-02-18"},{"lineNumber":157,"author":{"gitId":"varnika1402"},"content":"            System.out.print(\"\\t\");","lastModifiedDate":"2023-02-18"},{"lineNumber":158,"author":{"gitId":"varnika1402"},"content":"            System.out.println(deadline);","lastModifiedDate":"2023-02-18"},{"lineNumber":159,"author":{"gitId":"varnika1402"},"content":"            System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-02-18"},{"lineNumber":160,"author":{"gitId":"varnika1402"},"content":"            ui.printLine();","lastModifiedDate":"2023-02-18"},{"lineNumber":161,"author":{"gitId":"varnika1402"},"content":"            Storage.saveTask(tasks);","lastModifiedDate":"2023-02-18"},{"lineNumber":162,"author":{"gitId":"varnika1402"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":163,"author":{"gitId":"varnika1402"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":164,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":165,"author":{"gitId":"varnika1402"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":166,"author":{"gitId":"varnika1402"},"content":"     * Adds the event to task list.","lastModifiedDate":"2023-02-18"},{"lineNumber":167,"author":{"gitId":"varnika1402"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":168,"author":{"gitId":"varnika1402"},"content":"     * @param input Stores the user input.","lastModifiedDate":"2023-02-18"},{"lineNumber":169,"author":{"gitId":"varnika1402"},"content":"     * @throws DukeException if the description or time is empty.","lastModifiedDate":"2023-02-18"},{"lineNumber":170,"author":{"gitId":"varnika1402"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":171,"author":{"gitId":"varnika1402"},"content":"    public static void addEvent(String input) throws DukeException {","lastModifiedDate":"2023-02-18"},{"lineNumber":172,"author":{"gitId":"varnika1402"},"content":"        String[] words \u003d input.split(\" \");","lastModifiedDate":"2023-02-18"},{"lineNumber":173,"author":{"gitId":"varnika1402"},"content":"        int index \u003d input.indexOf(\"/\");","lastModifiedDate":"2023-02-18"},{"lineNumber":174,"author":{"gitId":"varnika1402"},"content":"        if (words.length \u003c 2 || index \u003d\u003d -1) {","lastModifiedDate":"2023-02-18"},{"lineNumber":175,"author":{"gitId":"varnika1402"},"content":"            throw new DukeException(\"☹ OOPS!!! The description or time of an event cannot be empty.\");","lastModifiedDate":"2023-02-18"},{"lineNumber":176,"author":{"gitId":"varnika1402"},"content":"        } else {","lastModifiedDate":"2023-02-18"},{"lineNumber":177,"author":{"gitId":"varnika1402"},"content":"            String[] wordEvent \u003d input.substring(5).split(\"/\", 3);","lastModifiedDate":"2023-02-18"},{"lineNumber":178,"author":{"gitId":"varnika1402"},"content":"            Event event \u003d new Event(wordEvent[0].trim(), wordEvent[1].substring(5).trim(), wordEvent[2].substring(3).trim());","lastModifiedDate":"2023-02-18"},{"lineNumber":179,"author":{"gitId":"varnika1402"},"content":"            tasks.add(event);","lastModifiedDate":"2023-02-18"},{"lineNumber":180,"author":{"gitId":"varnika1402"},"content":"            ui.printLine();","lastModifiedDate":"2023-02-18"},{"lineNumber":181,"author":{"gitId":"varnika1402"},"content":"            System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-02-18"},{"lineNumber":182,"author":{"gitId":"varnika1402"},"content":"            System.out.print(\"\\t\");","lastModifiedDate":"2023-02-18"},{"lineNumber":183,"author":{"gitId":"varnika1402"},"content":"            System.out.println(event);","lastModifiedDate":"2023-02-18"},{"lineNumber":184,"author":{"gitId":"varnika1402"},"content":"            System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-02-18"},{"lineNumber":185,"author":{"gitId":"varnika1402"},"content":"            ui.printLine();","lastModifiedDate":"2023-02-18"},{"lineNumber":186,"author":{"gitId":"varnika1402"},"content":"            Storage.saveTask(tasks);","lastModifiedDate":"2023-02-18"},{"lineNumber":187,"author":{"gitId":"varnika1402"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":188,"author":{"gitId":"varnika1402"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":189,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":190,"author":{"gitId":"varnika1402"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":191,"author":{"gitId":"varnika1402"},"content":"     * Find a task in the task list that contains the text specified by the user.","lastModifiedDate":"2023-02-18"},{"lineNumber":192,"author":{"gitId":"varnika1402"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":193,"author":{"gitId":"varnika1402"},"content":"     * @param input Stores the user input.","lastModifiedDate":"2023-02-18"},{"lineNumber":194,"author":{"gitId":"varnika1402"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":195,"author":{"gitId":"varnika1402"},"content":"    public static void findTask(String input) {","lastModifiedDate":"2023-02-18"},{"lineNumber":196,"author":{"gitId":"varnika1402"},"content":"        int currentIndex \u003d 1;","lastModifiedDate":"2023-02-18"},{"lineNumber":197,"author":{"gitId":"varnika1402"},"content":"        ui.printLine();","lastModifiedDate":"2023-02-18"},{"lineNumber":198,"author":{"gitId":"varnika1402"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-02-18"},{"lineNumber":199,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":200,"author":{"gitId":"varnika1402"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-02-18"},{"lineNumber":201,"author":{"gitId":"varnika1402"},"content":"            if (task.description.contains(input.substring(5))) {","lastModifiedDate":"2023-02-18"},{"lineNumber":202,"author":{"gitId":"varnika1402"},"content":"                System.out.println(\"\\t\" + currentIndex + \".\" + task);","lastModifiedDate":"2023-02-18"},{"lineNumber":203,"author":{"gitId":"varnika1402"},"content":"                currentIndex++;","lastModifiedDate":"2023-02-18"},{"lineNumber":204,"author":{"gitId":"varnika1402"},"content":"            }","lastModifiedDate":"2023-02-18"},{"lineNumber":205,"author":{"gitId":"varnika1402"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":206,"author":{"gitId":"varnika1402"},"content":"        ui.printLine();","lastModifiedDate":"2023-02-18"},{"lineNumber":207,"author":{"gitId":"varnika1402"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":208,"author":{"gitId":"varnika1402"},"content":"}","lastModifiedDate":"2023-02-18"}],"authorContributionMap":{"varnika1402":208}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"varnika1402"},"content":"package duke;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":3,"author":{"gitId":"varnika1402"},"content":"public class Ui {","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"varnika1402"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"varnika1402"},"content":"     * Displays the divider line.","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"varnika1402"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"varnika1402"},"content":"    public static void printLine() {","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"varnika1402"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"varnika1402"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"varnika1402"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"varnika1402"},"content":"     * Displays the welcome message to the user.","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"varnika1402"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"varnika1402"},"content":"    public static void printWelcomeMessage() {","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"varnika1402"},"content":"        printLine();","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"varnika1402"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"varnika1402"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"varnika1402"},"content":"        printLine();","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"varnika1402"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"varnika1402"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"varnika1402"},"content":"     * Displays the exit message to the user.","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"varnika1402"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"varnika1402"},"content":"    public static void printByeMessage() {","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"varnika1402"},"content":"        printLine();","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"varnika1402"},"content":"        System.out.println(\"Bye. Hope to see you again soon! :)\");","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"varnika1402"},"content":"        printLine();","lastModifiedDate":"2023-02-18"},{"lineNumber":29,"author":{"gitId":"varnika1402"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":30,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"varnika1402"},"content":"}","lastModifiedDate":"2023-02-18"}],"authorContributionMap":{"varnika1402":31}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"varnika1402"},"content":"package duke.task;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"varnika1402"},"content":"/**","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"varnika1402"},"content":" * Contains the description and due date of deadline.","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"varnika1402"},"content":" */","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"varnika1402"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"varnika1402"},"content":"    public String by;","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"varnika1402"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"varnika1402"},"content":"     * Constructor to initialise task description and due date.","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"varnika1402"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"varnika1402"},"content":"     * @param description Description of the deadline task.","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"varnika1402"},"content":"     * @param by          Due date of the deadline.","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"varnika1402"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"varnika1402"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"varnika1402"},"content":"        super(description);","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"varnika1402"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"varnika1402"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"varnika1402"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"varnika1402"},"content":"     * Returns the string in the required format.","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"varnika1402"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"varnika1402"},"content":"     * @return Task description and due date of deadline in","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"varnika1402"},"content":"     * the required format.","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"varnika1402"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"varnika1402"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"varnika1402"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"varnika1402"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"varnika1402"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"varnika1402"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"varnika1402":31}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"varnika1402"},"content":"package duke.task;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"varnika1402"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"varnika1402"},"content":"    public String from;","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"varnika1402"},"content":"    public String to;","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"varnika1402"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"varnika1402"},"content":"     * Constructor to initialise description, start time and end time","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"varnika1402"},"content":"     * of event task.","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"varnika1402"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"varnika1402"},"content":"     * @param description Description of the event.","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"varnika1402"},"content":"     * @param from Start date/time of event.","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"varnika1402"},"content":"     * @param to End date/time of event.","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"varnika1402"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"varnika1402"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"varnika1402"},"content":"        super(description);","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"varnika1402"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"varnika1402"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"varnika1402"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"varnika1402"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"varnika1402"},"content":"     * Returns the string in the required format.","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"varnika1402"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"varnika1402"},"content":"     * @return Event description, start, end date/time in the required format.","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"varnika1402"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"varnika1402"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"varnika1402"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"varnika1402"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"varnika1402"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"varnika1402"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"varnika1402":31}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"varnika1402"},"content":"package duke.task;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"varnika1402"},"content":"public class Task {","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"varnika1402"},"content":"    public String description;","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"varnika1402"},"content":"    public boolean isDone;","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"varnika1402"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"varnika1402"},"content":"     * Constructor to initialise description and task completion status.","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"varnika1402"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"varnika1402"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"varnika1402"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"varnika1402"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"varnika1402"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"varnika1402"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"varnika1402"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"varnika1402"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"varnika1402"},"content":"     * Returns string \"X\" if the task is completed else returns space.","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"varnika1402"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"varnika1402"},"content":"     * @return Task Completion Status.","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"varnika1402"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"varnika1402"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"varnika1402"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"varnika1402"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"varnika1402"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"varnika1402"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"varnika1402"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":29,"author":{"gitId":"varnika1402"},"content":"    public void markDone() {","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"varnika1402"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"varnika1402"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"varnika1402"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":34,"author":{"gitId":"varnika1402"},"content":"     * Marks the task as not done.","lastModifiedDate":"2023-02-18"},{"lineNumber":35,"author":{"gitId":"varnika1402"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":36,"author":{"gitId":"varnika1402"},"content":"    public void markUndone() {","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"varnika1402"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"varnika1402"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"varnika1402"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":41,"author":{"gitId":"varnika1402"},"content":"     * Returns the task completion status in the required format.","lastModifiedDate":"2023-02-18"},{"lineNumber":42,"author":{"gitId":"varnika1402"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":43,"author":{"gitId":"varnika1402"},"content":"     * @return Task completion Status in the required String format.","lastModifiedDate":"2023-02-18"},{"lineNumber":44,"author":{"gitId":"varnika1402"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":45,"author":{"gitId":"varnika1402"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"varnika1402"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"varnika1402"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"varnika1402"},"content":"}","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"varnika1402":49}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"varnika1402"},"content":"package duke.task;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"varnika1402"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"varnika1402"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"varnika1402"},"content":"     * Constructor to initialise description of todo task.","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"varnika1402"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"varnika1402"},"content":"     * @param description Description of the todo.","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"varnika1402"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"varnika1402"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"varnika1402"},"content":"        super(description);","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"varnika1402"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"varnika1402"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"varnika1402"},"content":"     * Returns the string in the required format.","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"varnika1402"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"varnika1402"},"content":"     * @return Task description in the required format.","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"varnika1402"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"varnika1402"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"varnika1402"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"varnika1402"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"varnika1402"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"varnika1402"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"varnika1402":24}}]
