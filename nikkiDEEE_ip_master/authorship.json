[{"path":"data/data.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nikkiDEEE"},"content":"D%[ ]%ee2211 as2 %march 17","lastModifiedDate":"2023-02-24"},{"lineNumber":2,"author":{"gitId":"nikkiDEEE"},"content":"E%[ ]%spend time with habibi %fri night %sat morning","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"nikkiDEEE"},"content":"T%[X]%get lunch","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"nikkiDEEE"},"content":"T%[X]%refill bottle","lastModifiedDate":"2023-02-25"},{"lineNumber":5,"author":{"gitId":"nikkiDEEE"},"content":"E%[ ]%parents\u0027 anniversary %march 10 evening %march 10 night","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"nikkiDEEE"},"content":"T%[ ]%get flowers","lastModifiedDate":"2023-02-25"},{"lineNumber":7,"author":{"gitId":"nikkiDEEE"},"content":"D%[ ]%lab submission %sunday 2359","lastModifiedDate":"2023-02-25"},{"lineNumber":8,"author":{"gitId":"nikkiDEEE"},"content":"E%[ ]%jetbrains hackathon %3 march %7 march","lastModifiedDate":"2023-02-25"}],"authorContributionMap":{"nikkiDEEE":8}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"nikkiDEEE"},"content":"## Quick Start","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"nikkiDEEE"},"content":"- Ensure you have `Java 11` installed on your computer. You can check your Java version using the following command in the terminal.","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"nikkiDEEE"},"content":"`java --version`","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"nikkiDEEE"},"content":"- Download the `.jar` file from here: https://github.com/nikkiDEEE/ip/releases","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"nikkiDEEE"},"content":"- To run `ThomasShelby`, open the terminal and change the current directory to same one as the jar file.","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"nikkiDEEE"},"content":"- Run the following command in the terminal:","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"nikkiDEEE"},"content":"`java -jar ip.jar`","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"nikkiDEEE"},"content":"### Task Manager","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"nikkiDEEE"},"content":"Core features of `ThomasShelby` include adding tasks of the following 3 types to a list:","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"nikkiDEEE"},"content":"- `todo`: `[T]`","lastModifiedDate":"2023-02-25"},{"lineNumber":22,"author":{"gitId":"nikkiDEEE"},"content":"  - Simple tasks with a `description`","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"nikkiDEEE"},"content":"- `deadline`: `[D]`","lastModifiedDate":"2023-02-25"},{"lineNumber":24,"author":{"gitId":"nikkiDEEE"},"content":"  - Tasks with a `description` and (do) `by`","lastModifiedDate":"2023-02-25"},{"lineNumber":25,"author":{"gitId":"nikkiDEEE"},"content":"- `event`: `[E]` ","lastModifiedDate":"2023-02-25"},{"lineNumber":26,"author":{"gitId":"nikkiDEEE"},"content":"  - Tasks with a `description` that have a `start` and `end` date","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":28,"author":{"gitId":"nikkiDEEE"},"content":"You can also `add`, `delete`, `mark`, `unmark`, and `find` by keyword.","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":30,"author":{"gitId":"nikkiDEEE"},"content":"### Save data","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":32,"author":{"gitId":"nikkiDEEE"},"content":"- Any changes to tasks are saved locally in the relative file path `/data/data.txt` upon exiting the program. ","lastModifiedDate":"2023-02-25"},{"lineNumber":33,"author":{"gitId":"nikkiDEEE"},"content":"- These saved tasks will be loaded automatically upon starting the program again.","lastModifiedDate":"2023-02-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2023-02-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":37,"author":{"gitId":"nikkiDEEE"},"content":"### `todo` - Adds a ToDo task","lastModifiedDate":"2023-02-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":39,"author":{"gitId":"nikkiDEEE"},"content":"This command adds a ToDo task to the list.","lastModifiedDate":"2023-02-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":41,"author":{"gitId":"nikkiDEEE"},"content":"Format:","lastModifiedDate":"2023-02-25"},{"lineNumber":42,"author":{"gitId":"nikkiDEEE"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":43,"author":{"gitId":"nikkiDEEE"},"content":"todo TASK_DESCRIPTION","lastModifiedDate":"2023-02-25"},{"lineNumber":44,"author":{"gitId":"nikkiDEEE"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":46,"author":{"gitId":"nikkiDEEE"},"content":"**Compulsory:** `TASK_DESCRIPTION` corresponds to the description of the task.","lastModifiedDate":"2023-02-25"},{"lineNumber":47,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":48,"author":{"gitId":"nikkiDEEE"},"content":"Example of usage: ","lastModifiedDate":"2023-02-25"},{"lineNumber":49,"author":{"gitId":"nikkiDEEE"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":50,"author":{"gitId":"nikkiDEEE"},"content":"todo grocery shopping","lastModifiedDate":"2023-02-25"},{"lineNumber":51,"author":{"gitId":"nikkiDEEE"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2023-02-25"},{"lineNumber":54,"author":{"gitId":"nikkiDEEE"},"content":"- a symbol denoting the task type `T`","lastModifiedDate":"2023-02-25"},{"lineNumber":55,"author":{"gitId":"nikkiDEEE"},"content":"- the status of completion `[ ]`","lastModifiedDate":"2023-02-25"},{"lineNumber":56,"author":{"gitId":"nikkiDEEE"},"content":"- the `TASK_DESCRIPTION`","lastModifiedDate":"2023-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Description of the outcome.","lastModifiedDate":"2023-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":61,"author":{"gitId":"nikkiDEEE"},"content":"Don\u0027t sleep on it.","lastModifiedDate":"2023-02-25"},{"lineNumber":62,"author":{"gitId":"nikkiDEEE"},"content":"added: [T][ ] grocery shopping","lastModifiedDate":"2023-02-25"},{"lineNumber":63,"author":{"gitId":"nikkiDEEE"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":64,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":65,"author":{"gitId":"nikkiDEEE"},"content":"### `deadline` - Adds a Deadline task","lastModifiedDate":"2023-02-25"},{"lineNumber":66,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":67,"author":{"gitId":"nikkiDEEE"},"content":"This command adds a Deadline task to the list.","lastModifiedDate":"2023-02-25"},{"lineNumber":68,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":69,"author":{"gitId":"nikkiDEEE"},"content":"Format:","lastModifiedDate":"2023-02-25"},{"lineNumber":70,"author":{"gitId":"nikkiDEEE"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":71,"author":{"gitId":"nikkiDEEE"},"content":"deadline TASK_DESCRIPTION /DEADLINE","lastModifiedDate":"2023-02-25"},{"lineNumber":72,"author":{"gitId":"nikkiDEEE"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":73,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":74,"author":{"gitId":"nikkiDEEE"},"content":"**Compulsory:** ","lastModifiedDate":"2023-02-25"},{"lineNumber":75,"author":{"gitId":"nikkiDEEE"},"content":"- `TASK_DESCRIPTION` corresponds to the description of the task","lastModifiedDate":"2023-02-25"},{"lineNumber":76,"author":{"gitId":"nikkiDEEE"},"content":"- `\\ `before the `DEADLINE`","lastModifiedDate":"2023-02-25"},{"lineNumber":77,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":78,"author":{"gitId":"nikkiDEEE"},"content":"Example of usage:","lastModifiedDate":"2023-02-25"},{"lineNumber":79,"author":{"gitId":"nikkiDEEE"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":80,"author":{"gitId":"nikkiDEEE"},"content":"deadline lab submission /sunday 2359","lastModifiedDate":"2023-02-25"},{"lineNumber":81,"author":{"gitId":"nikkiDEEE"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":82,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":83,"author":{"gitId":"nikkiDEEE"},"content":"Expected outcome:","lastModifiedDate":"2023-02-25"},{"lineNumber":84,"author":{"gitId":"nikkiDEEE"},"content":"- a symbol denoting the task type `D`","lastModifiedDate":"2023-02-25"},{"lineNumber":85,"author":{"gitId":"nikkiDEEE"},"content":"- the status of completion `[ ]`","lastModifiedDate":"2023-02-25"},{"lineNumber":86,"author":{"gitId":"nikkiDEEE"},"content":"- the `TASK_DESCRIPTION`","lastModifiedDate":"2023-02-25"},{"lineNumber":87,"author":{"gitId":"nikkiDEEE"},"content":"- the `DEADLINE` details","lastModifiedDate":"2023-02-25"},{"lineNumber":88,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":89,"author":{"gitId":"nikkiDEEE"},"content":"Description of the outcome:","lastModifiedDate":"2023-02-25"},{"lineNumber":90,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":91,"author":{"gitId":"nikkiDEEE"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":92,"author":{"gitId":"nikkiDEEE"},"content":"Time is money, chop chop!","lastModifiedDate":"2023-02-25"},{"lineNumber":93,"author":{"gitId":"nikkiDEEE"},"content":"added: [D][ ] lab submission (by: sunday 2359)","lastModifiedDate":"2023-02-25"},{"lineNumber":94,"author":{"gitId":"nikkiDEEE"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":95,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":96,"author":{"gitId":"nikkiDEEE"},"content":"### `event` - Adds an Event task","lastModifiedDate":"2023-02-25"},{"lineNumber":97,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":98,"author":{"gitId":"nikkiDEEE"},"content":"This command adds an Event task to the list","lastModifiedDate":"2023-02-25"},{"lineNumber":99,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":100,"author":{"gitId":"nikkiDEEE"},"content":"Format:","lastModifiedDate":"2023-02-25"},{"lineNumber":101,"author":{"gitId":"nikkiDEEE"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":102,"author":{"gitId":"nikkiDEEE"},"content":"event TASK_DESCRIPTION \\START \\END","lastModifiedDate":"2023-02-25"},{"lineNumber":103,"author":{"gitId":"nikkiDEEE"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":104,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":105,"author":{"gitId":"nikkiDEEE"},"content":"**Compulsory:**","lastModifiedDate":"2023-02-25"},{"lineNumber":106,"author":{"gitId":"nikkiDEEE"},"content":"- `TASK_DESCRIPTION` corresponds to the description of the task","lastModifiedDate":"2023-02-25"},{"lineNumber":107,"author":{"gitId":"nikkiDEEE"},"content":"- `\\ `before the `START` and `END`","lastModifiedDate":"2023-02-25"},{"lineNumber":108,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":109,"author":{"gitId":"nikkiDEEE"},"content":"Example of usage:","lastModifiedDate":"2023-02-25"},{"lineNumber":110,"author":{"gitId":"nikkiDEEE"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":111,"author":{"gitId":"nikkiDEEE"},"content":"event jetbrains hackathon /3 march /7 march","lastModifiedDate":"2023-02-25"},{"lineNumber":112,"author":{"gitId":"nikkiDEEE"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":113,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":114,"author":{"gitId":"nikkiDEEE"},"content":"Expected outcome:","lastModifiedDate":"2023-02-25"},{"lineNumber":115,"author":{"gitId":"nikkiDEEE"},"content":"- a symbol denoting the task type `E`","lastModifiedDate":"2023-02-25"},{"lineNumber":116,"author":{"gitId":"nikkiDEEE"},"content":"- the status of completion `[ ]`","lastModifiedDate":"2023-02-25"},{"lineNumber":117,"author":{"gitId":"nikkiDEEE"},"content":"- the `TASK_DESCRIPTION`","lastModifiedDate":"2023-02-25"},{"lineNumber":118,"author":{"gitId":"nikkiDEEE"},"content":"- the `START` and `END` details","lastModifiedDate":"2023-02-25"},{"lineNumber":119,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":120,"author":{"gitId":"nikkiDEEE"},"content":"Description of the outcome:","lastModifiedDate":"2023-02-25"},{"lineNumber":121,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":122,"author":{"gitId":"nikkiDEEE"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":123,"author":{"gitId":"nikkiDEEE"},"content":"I\u0027ll see you there.","lastModifiedDate":"2023-02-25"},{"lineNumber":124,"author":{"gitId":"nikkiDEEE"},"content":"added: [E][ ] jetbrains hackathon (3 march - 7 march)","lastModifiedDate":"2023-02-25"},{"lineNumber":125,"author":{"gitId":"nikkiDEEE"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":126,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":127,"author":{"gitId":"nikkiDEEE"},"content":"### `list` - Prints tasks","lastModifiedDate":"2023-02-25"},{"lineNumber":128,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":129,"author":{"gitId":"nikkiDEEE"},"content":"Print a list of all the tasks.","lastModifiedDate":"2023-02-25"},{"lineNumber":130,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":131,"author":{"gitId":"nikkiDEEE"},"content":"Format:","lastModifiedDate":"2023-02-25"},{"lineNumber":132,"author":{"gitId":"nikkiDEEE"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":133,"author":{"gitId":"nikkiDEEE"},"content":"list","lastModifiedDate":"2023-02-25"},{"lineNumber":134,"author":{"gitId":"nikkiDEEE"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":135,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":136,"author":{"gitId":"nikkiDEEE"},"content":"Example of usage:","lastModifiedDate":"2023-02-25"},{"lineNumber":137,"author":{"gitId":"nikkiDEEE"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":138,"author":{"gitId":"nikkiDEEE"},"content":"list","lastModifiedDate":"2023-02-25"},{"lineNumber":139,"author":{"gitId":"nikkiDEEE"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":140,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":141,"author":{"gitId":"nikkiDEEE"},"content":"Expected outcome:","lastModifiedDate":"2023-02-25"},{"lineNumber":142,"author":{"gitId":"nikkiDEEE"},"content":"- `TASK_SERIAL_NUMBER` (e.g., `1.`, `2.` etc)","lastModifiedDate":"2023-02-25"},{"lineNumber":143,"author":{"gitId":"nikkiDEEE"},"content":"- followed by the respective task details (description is unique to each task)","lastModifiedDate":"2023-02-25"},{"lineNumber":144,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":145,"author":{"gitId":"nikkiDEEE"},"content":"Description of the outcome:","lastModifiedDate":"2023-02-25"},{"lineNumber":146,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":147,"author":{"gitId":"nikkiDEEE"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":148,"author":{"gitId":"nikkiDEEE"},"content":"Here are the tasks in your list:","lastModifiedDate":"2023-02-25"},{"lineNumber":149,"author":{"gitId":"nikkiDEEE"},"content":"1. [T][ ] grocery shopping","lastModifiedDate":"2023-02-25"},{"lineNumber":150,"author":{"gitId":"nikkiDEEE"},"content":"2. [D][ ] lab submission (by: sunday 2359)","lastModifiedDate":"2023-02-25"},{"lineNumber":151,"author":{"gitId":"nikkiDEEE"},"content":"3. [E][ ] jetbrains hackathon (3 march - 7 march)","lastModifiedDate":"2023-02-25"},{"lineNumber":152,"author":{"gitId":"nikkiDEEE"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":153,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":154,"author":{"gitId":"nikkiDEEE"},"content":"### `mark` - Marks tasks","lastModifiedDate":"2023-02-25"},{"lineNumber":155,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":156,"author":{"gitId":"nikkiDEEE"},"content":"Marks the task by user-specific `TASK_SERIAL_NUMBER` with an `X`, denoting task completion.","lastModifiedDate":"2023-02-25"},{"lineNumber":157,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":158,"author":{"gitId":"nikkiDEEE"},"content":"Format:","lastModifiedDate":"2023-02-25"},{"lineNumber":159,"author":{"gitId":"nikkiDEEE"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":160,"author":{"gitId":"nikkiDEEE"},"content":"mark TASK_SERIAL_NUMBER","lastModifiedDate":"2023-02-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":162,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":163,"author":{"gitId":"nikkiDEEE"},"content":"**Compulsory:** `TASK_SERIAL_NUMBER` corresponds to the task to be marked (follow the list S/N)","lastModifiedDate":"2023-02-25"},{"lineNumber":164,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":165,"author":{"gitId":"nikkiDEEE"},"content":"Example of usage:","lastModifiedDate":"2023-02-25"},{"lineNumber":166,"author":{"gitId":"nikkiDEEE"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":167,"author":{"gitId":"nikkiDEEE"},"content":"mark 2","lastModifiedDate":"2023-02-25"},{"lineNumber":168,"author":{"gitId":"nikkiDEEE"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":169,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":170,"author":{"gitId":"nikkiDEEE"},"content":"Expected outcome:","lastModifiedDate":"2023-02-25"},{"lineNumber":171,"author":{"gitId":"nikkiDEEE"},"content":"- Marks the task corresponding to `TASK_SERIAL_NUMBER` as complete.","lastModifiedDate":"2023-02-25"},{"lineNumber":172,"author":{"gitId":"nikkiDEEE"},"content":"- Quip for completing the task","lastModifiedDate":"2023-02-25"},{"lineNumber":173,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":174,"author":{"gitId":"nikkiDEEE"},"content":"Description of the outcome:","lastModifiedDate":"2023-02-25"},{"lineNumber":175,"author":{"gitId":"nikkiDEEE"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":176,"author":{"gitId":"nikkiDEEE"},"content":"That was long due, well done.","lastModifiedDate":"2023-02-25"},{"lineNumber":177,"author":{"gitId":"nikkiDEEE"},"content":"[D][X] lab submission (by: sunday 2359)","lastModifiedDate":"2023-02-25"},{"lineNumber":178,"author":{"gitId":"nikkiDEEE"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":179,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":180,"author":{"gitId":"nikkiDEEE"},"content":"### `unmark` - Unmarks tasks","lastModifiedDate":"2023-02-25"},{"lineNumber":181,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":182,"author":{"gitId":"nikkiDEEE"},"content":"Unmarks the task by user-specific `TASK_SERIAL_NUMBER` with an `X`, denoting task completion.","lastModifiedDate":"2023-02-25"},{"lineNumber":183,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":184,"author":{"gitId":"nikkiDEEE"},"content":"Format:","lastModifiedDate":"2023-02-25"},{"lineNumber":185,"author":{"gitId":"nikkiDEEE"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":186,"author":{"gitId":"nikkiDEEE"},"content":"unmark TASK_SERIAL_NUMBER","lastModifiedDate":"2023-02-25"},{"lineNumber":187,"author":{"gitId":"nikkiDEEE"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":188,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":189,"author":{"gitId":"nikkiDEEE"},"content":"**Compulsory:** `TASK_SERIAL_NUMBER` corresponds to the task to be unmarked (follow the list S/N)","lastModifiedDate":"2023-02-25"},{"lineNumber":190,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":191,"author":{"gitId":"nikkiDEEE"},"content":"Example of usage:","lastModifiedDate":"2023-02-25"},{"lineNumber":192,"author":{"gitId":"nikkiDEEE"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":193,"author":{"gitId":"nikkiDEEE"},"content":"unmark 2","lastModifiedDate":"2023-02-25"},{"lineNumber":194,"author":{"gitId":"nikkiDEEE"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":195,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":196,"author":{"gitId":"nikkiDEEE"},"content":"Expected outcome:","lastModifiedDate":"2023-02-25"},{"lineNumber":197,"author":{"gitId":"nikkiDEEE"},"content":"- Unmarks the task corresponding to `TASK_SERIAL_NUMBER` as incomplete.","lastModifiedDate":"2023-02-25"},{"lineNumber":198,"author":{"gitId":"nikkiDEEE"},"content":"- Quip upon unmarking the task","lastModifiedDate":"2023-02-25"},{"lineNumber":199,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":200,"author":{"gitId":"nikkiDEEE"},"content":"Description of the outcome:","lastModifiedDate":"2023-02-25"},{"lineNumber":201,"author":{"gitId":"nikkiDEEE"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":202,"author":{"gitId":"nikkiDEEE"},"content":"You\u0027ve gotten lazy.","lastModifiedDate":"2023-02-25"},{"lineNumber":203,"author":{"gitId":"nikkiDEEE"},"content":"[D][ ] lab submission (by: sunday 2359)","lastModifiedDate":"2023-02-25"},{"lineNumber":204,"author":{"gitId":"nikkiDEEE"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":205,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":206,"author":{"gitId":"nikkiDEEE"},"content":"### `delete` - Deletes tasks","lastModifiedDate":"2023-02-25"},{"lineNumber":207,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":208,"author":{"gitId":"nikkiDEEE"},"content":"Deletes a task from the list.","lastModifiedDate":"2023-02-25"},{"lineNumber":209,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":210,"author":{"gitId":"nikkiDEEE"},"content":"Format:","lastModifiedDate":"2023-02-25"},{"lineNumber":211,"author":{"gitId":"nikkiDEEE"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":212,"author":{"gitId":"nikkiDEEE"},"content":"delete TASK_SERIAL_NUMBER","lastModifiedDate":"2023-02-25"},{"lineNumber":213,"author":{"gitId":"nikkiDEEE"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":214,"author":{"gitId":"nikkiDEEE"},"content":"**Compulsory:** `TASK_SERIAL_NUMBER` corresponds to the task to be deleted (follow the list S/N)","lastModifiedDate":"2023-02-25"},{"lineNumber":215,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":216,"author":{"gitId":"nikkiDEEE"},"content":"Example of usage:","lastModifiedDate":"2023-02-25"},{"lineNumber":217,"author":{"gitId":"nikkiDEEE"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":218,"author":{"gitId":"nikkiDEEE"},"content":"delete 2","lastModifiedDate":"2023-02-25"},{"lineNumber":219,"author":{"gitId":"nikkiDEEE"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":220,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":221,"author":{"gitId":"nikkiDEEE"},"content":"Expected outcome:","lastModifiedDate":"2023-02-25"},{"lineNumber":222,"author":{"gitId":"nikkiDEEE"},"content":"- Deletes the task corresponding to \u0027TASK_SERIAL_NUMBER\u0027 from the list","lastModifiedDate":"2023-02-25"},{"lineNumber":223,"author":{"gitId":"nikkiDEEE"},"content":"- Quip upon deleting the task","lastModifiedDate":"2023-02-25"},{"lineNumber":224,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":225,"author":{"gitId":"nikkiDEEE"},"content":"Description of the outcome:","lastModifiedDate":"2023-02-25"},{"lineNumber":226,"author":{"gitId":"nikkiDEEE"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":227,"author":{"gitId":"nikkiDEEE"},"content":"That\u0027s off the list: ","lastModifiedDate":"2023-02-25"},{"lineNumber":228,"author":{"gitId":"nikkiDEEE"},"content":"[D][ ] lab submission (by: sunday 2359)","lastModifiedDate":"2023-02-25"},{"lineNumber":229,"author":{"gitId":"nikkiDEEE"},"content":"You\u0027re left with 2 task(s).","lastModifiedDate":"2023-02-25"},{"lineNumber":230,"author":{"gitId":"nikkiDEEE"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":231,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":232,"author":{"gitId":"nikkiDEEE"},"content":"### `find` - Finds task(s)","lastModifiedDate":"2023-02-25"},{"lineNumber":233,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":234,"author":{"gitId":"nikkiDEEE"},"content":"Finds and lists all tasks that contain the user-specific keyword(s).","lastModifiedDate":"2023-02-25"},{"lineNumber":235,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":236,"author":{"gitId":"nikkiDEEE"},"content":"Format:","lastModifiedDate":"2023-02-25"},{"lineNumber":237,"author":{"gitId":"nikkiDEEE"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":238,"author":{"gitId":"nikkiDEEE"},"content":"find TASK_QUERY","lastModifiedDate":"2023-02-25"},{"lineNumber":239,"author":{"gitId":"nikkiDEEE"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":240,"author":{"gitId":"nikkiDEEE"},"content":"**Compulsory:** `TASK_QUERY` corresponds to the related tasks to be found","lastModifiedDate":"2023-02-25"},{"lineNumber":241,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":242,"author":{"gitId":"nikkiDEEE"},"content":"Example of usage:","lastModifiedDate":"2023-02-25"},{"lineNumber":243,"author":{"gitId":"nikkiDEEE"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":244,"author":{"gitId":"nikkiDEEE"},"content":"find shopping","lastModifiedDate":"2023-02-25"},{"lineNumber":245,"author":{"gitId":"nikkiDEEE"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":246,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":247,"author":{"gitId":"nikkiDEEE"},"content":"Expected outcome:","lastModifiedDate":"2023-02-25"},{"lineNumber":248,"author":{"gitId":"nikkiDEEE"},"content":"- Prints a list of tasks if `TASK_DESCRIPTION` contains the `TASK_QUERY` keyword.","lastModifiedDate":"2023-02-25"},{"lineNumber":249,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":250,"author":{"gitId":"nikkiDEEE"},"content":"Description of the outcome:","lastModifiedDate":"2023-02-25"},{"lineNumber":251,"author":{"gitId":"nikkiDEEE"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":252,"author":{"gitId":"nikkiDEEE"},"content":"Here are the tasks in your list:","lastModifiedDate":"2023-02-25"},{"lineNumber":253,"author":{"gitId":"nikkiDEEE"},"content":"1. [T][ ] grocery shopping","lastModifiedDate":"2023-02-25"},{"lineNumber":254,"author":{"gitId":"nikkiDEEE"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":255,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":256,"author":{"gitId":"nikkiDEEE"},"content":"### `bye` - Exits the program","lastModifiedDate":"2023-02-25"},{"lineNumber":257,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":258,"author":{"gitId":"nikkiDEEE"},"content":"Exits ThomasShelby.","lastModifiedDate":"2023-02-25"},{"lineNumber":259,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":260,"author":{"gitId":"nikkiDEEE"},"content":"Format:","lastModifiedDate":"2023-02-25"},{"lineNumber":261,"author":{"gitId":"nikkiDEEE"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":262,"author":{"gitId":"nikkiDEEE"},"content":"bye","lastModifiedDate":"2023-02-25"},{"lineNumber":263,"author":{"gitId":"nikkiDEEE"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":264,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":265,"author":{"gitId":"nikkiDEEE"},"content":"Example of usage:","lastModifiedDate":"2023-02-25"},{"lineNumber":266,"author":{"gitId":"nikkiDEEE"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":267,"author":{"gitId":"nikkiDEEE"},"content":"bye","lastModifiedDate":"2023-02-25"},{"lineNumber":268,"author":{"gitId":"nikkiDEEE"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":269,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":270,"author":{"gitId":"nikkiDEEE"},"content":"Expected outcome:","lastModifiedDate":"2023-02-25"},{"lineNumber":271,"author":{"gitId":"nikkiDEEE"},"content":"- Exclusive ThomasShelby quip.","lastModifiedDate":"2023-02-25"},{"lineNumber":272,"author":{"gitId":"nikkiDEEE"},"content":"- Prompt to ensure data has been saved.","lastModifiedDate":"2023-02-25"},{"lineNumber":273,"author":{"gitId":"nikkiDEEE"},"content":"- Exits the program.","lastModifiedDate":"2023-02-25"},{"lineNumber":274,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":275,"author":{"gitId":"nikkiDEEE"},"content":"Description of the outcome:","lastModifiedDate":"2023-02-25"},{"lineNumber":276,"author":{"gitId":"nikkiDEEE"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":277,"author":{"gitId":"nikkiDEEE"},"content":"Successful. Tasks saved to \u0027data.txt\u0027 file","lastModifiedDate":"2023-02-25"},{"lineNumber":278,"author":{"gitId":"nikkiDEEE"},"content":"Cheers.","lastModifiedDate":"2023-02-25"},{"lineNumber":279,"author":{"gitId":"nikkiDEEE"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":280,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"nikkiDEEE":259,"-":22}},{"path":"src/main/java/Data.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nikkiDEEE"},"content":"import java.io.File;","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"nikkiDEEE"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"nikkiDEEE"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"nikkiDEEE"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"nikkiDEEE"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"nikkiDEEE"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"nikkiDEEE"},"content":"import tasks.Task;","lastModifiedDate":"2023-02-25"},{"lineNumber":8,"author":{"gitId":"nikkiDEEE"},"content":"import tasks.ToDo;","lastModifiedDate":"2023-02-25"},{"lineNumber":9,"author":{"gitId":"nikkiDEEE"},"content":"import tasks.Deadline;","lastModifiedDate":"2023-02-25"},{"lineNumber":10,"author":{"gitId":"nikkiDEEE"},"content":"import tasks.Event;","lastModifiedDate":"2023-02-25"},{"lineNumber":11,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"nikkiDEEE"},"content":"/**","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"nikkiDEEE"},"content":" * This \u003ccode\u003eData\u003c/code\u003e class handles the creation, saving and loading of data on the users local machine.","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"nikkiDEEE"},"content":" * @version v0.2","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"nikkiDEEE"},"content":" * @since 2023-02-24","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"nikkiDEEE"},"content":" */","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"nikkiDEEE"},"content":"public class Data {","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"nikkiDEEE"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"nikkiDEEE"},"content":"     * Creates a new directory and a new file if they do not already exist.","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"nikkiDEEE"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"nikkiDEEE"},"content":"     * @throws IOException If there is an error creating the file or directory.","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"nikkiDEEE"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"nikkiDEEE"},"content":"    public static void createFile() throws IOException {","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"nikkiDEEE"},"content":"        try {","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"nikkiDEEE"},"content":"            if (new File(\"data\").mkdirs()) {","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"nikkiDEEE"},"content":"                File data \u003d new File(\"data/data.txt\");","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"nikkiDEEE"},"content":"                data.createNewFile();","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"nikkiDEEE"},"content":"            }","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"nikkiDEEE"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"nikkiDEEE"},"content":"            System.out.println(\"An error occurred: \" + e);","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"nikkiDEEE"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"nikkiDEEE"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"nikkiDEEE"},"content":"     * Saves all the tasks in the task manager to a text file.","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"nikkiDEEE"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"nikkiDEEE"},"content":"     * @param taskManager The task manager containing the list of tasks to be saved.","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"nikkiDEEE"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"nikkiDEEE"},"content":"    public static void saveData(ArrayList\u003cTask\u003e taskManager) {","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"nikkiDEEE"},"content":"        try {","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"nikkiDEEE"},"content":"            createFile();","lastModifiedDate":"2023-02-16"},{"lineNumber":42,"author":{"gitId":"nikkiDEEE"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-16"},{"lineNumber":43,"author":{"gitId":"nikkiDEEE"},"content":"            System.out.println(\"An error occurred: + e\");","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"nikkiDEEE"},"content":"            System.out.println(\"Directory probably exists\");","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"nikkiDEEE"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":46,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":47,"author":{"gitId":"nikkiDEEE"},"content":"        try {","lastModifiedDate":"2023-02-16"},{"lineNumber":48,"author":{"gitId":"nikkiDEEE"},"content":"            FileWriter myWriter \u003d new FileWriter(\"data/data.txt\");","lastModifiedDate":"2023-02-16"},{"lineNumber":49,"author":{"gitId":"nikkiDEEE"},"content":"            for (Task task : taskManager) {","lastModifiedDate":"2023-02-18"},{"lineNumber":50,"author":{"gitId":"nikkiDEEE"},"content":"                if (task.getType().equals(\"T\")) {","lastModifiedDate":"2023-02-16"},{"lineNumber":51,"author":{"gitId":"nikkiDEEE"},"content":"                    myWriter.write(task.getType() + \"%\" + task.getStatusIcon()","lastModifiedDate":"2023-02-24"},{"lineNumber":52,"author":{"gitId":"nikkiDEEE"},"content":"                                    + \"%\" + task.getDescription() + \u0027\\n\u0027);","lastModifiedDate":"2023-02-24"},{"lineNumber":53,"author":{"gitId":"nikkiDEEE"},"content":"                } else if (task.getType().equals(\"D\")) {","lastModifiedDate":"2023-02-16"},{"lineNumber":54,"author":{"gitId":"nikkiDEEE"},"content":"                    Deadline obj \u003d (Deadline) task;","lastModifiedDate":"2023-02-16"},{"lineNumber":55,"author":{"gitId":"nikkiDEEE"},"content":"                    myWriter.write(task.getType() + \"%\" + task.getStatusIcon()","lastModifiedDate":"2023-02-24"},{"lineNumber":56,"author":{"gitId":"nikkiDEEE"},"content":"                                    + \"%\" + task.getDescription() + \"%\" + obj.by + \u0027\\n\u0027);","lastModifiedDate":"2023-02-24"},{"lineNumber":57,"author":{"gitId":"nikkiDEEE"},"content":"                } else if (task.getType().equals(\"E\")) {","lastModifiedDate":"2023-02-16"},{"lineNumber":58,"author":{"gitId":"nikkiDEEE"},"content":"                    Event obj \u003d (Event) task;","lastModifiedDate":"2023-02-16"},{"lineNumber":59,"author":{"gitId":"nikkiDEEE"},"content":"                    myWriter.write(task.getType() + \"%\" + task.getStatusIcon() + \"%\"","lastModifiedDate":"2023-02-24"},{"lineNumber":60,"author":{"gitId":"nikkiDEEE"},"content":"                                    + task.getDescription() + \"%\" + obj.start + \"%\" + obj.end + \u0027\\n\u0027);","lastModifiedDate":"2023-02-24"},{"lineNumber":61,"author":{"gitId":"nikkiDEEE"},"content":"                }","lastModifiedDate":"2023-02-16"},{"lineNumber":62,"author":{"gitId":"nikkiDEEE"},"content":"            }","lastModifiedDate":"2023-02-16"},{"lineNumber":63,"author":{"gitId":"nikkiDEEE"},"content":"            myWriter.close();","lastModifiedDate":"2023-02-16"},{"lineNumber":64,"author":{"gitId":"nikkiDEEE"},"content":"            System.out.println(\"Successful. Tasks saved to \u0027data.txt\u0027 file\");","lastModifiedDate":"2023-02-16"},{"lineNumber":65,"author":{"gitId":"nikkiDEEE"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-16"},{"lineNumber":66,"author":{"gitId":"nikkiDEEE"},"content":"            System.out.println(\"An error occurred: \" + e);","lastModifiedDate":"2023-02-24"},{"lineNumber":67,"author":{"gitId":"nikkiDEEE"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":68,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":69,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":70,"author":{"gitId":"nikkiDEEE"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":71,"author":{"gitId":"nikkiDEEE"},"content":"     * Loads tasks from the \u003ccode\u003edata.txt\u003c/code\u003e file into the task manager.","lastModifiedDate":"2023-02-24"},{"lineNumber":72,"author":{"gitId":"nikkiDEEE"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":73,"author":{"gitId":"nikkiDEEE"},"content":"     * @param taskManager The task manager to which tasks are to be added.","lastModifiedDate":"2023-02-24"},{"lineNumber":74,"author":{"gitId":"nikkiDEEE"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":75,"author":{"gitId":"nikkiDEEE"},"content":"     * @throws IOException If there is an error loading data from the file.","lastModifiedDate":"2023-02-24"},{"lineNumber":76,"author":{"gitId":"nikkiDEEE"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":77,"author":{"gitId":"nikkiDEEE"},"content":"    public static void loadData(ArrayList\u003cTask\u003e taskManager) throws IOException {","lastModifiedDate":"2023-02-18"},{"lineNumber":78,"author":{"gitId":"nikkiDEEE"},"content":"        try {","lastModifiedDate":"2023-02-16"},{"lineNumber":79,"author":{"gitId":"nikkiDEEE"},"content":"            File data \u003d new File(\"data/data.txt\");","lastModifiedDate":"2023-02-18"},{"lineNumber":80,"author":{"gitId":"nikkiDEEE"},"content":"            Scanner sc \u003d new Scanner(data);","lastModifiedDate":"2023-02-18"},{"lineNumber":81,"author":{"gitId":"nikkiDEEE"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2023-02-16"},{"lineNumber":82,"author":{"gitId":"nikkiDEEE"},"content":"                String[] str \u003d sc.nextLine().split(\"%\");","lastModifiedDate":"2023-02-16"},{"lineNumber":83,"author":{"gitId":"nikkiDEEE"},"content":"                String taskType \u003d str[0];","lastModifiedDate":"2023-02-16"},{"lineNumber":84,"author":{"gitId":"nikkiDEEE"},"content":"                boolean isDone \u003d str[1].equals(\"[X]\");","lastModifiedDate":"2023-02-16"},{"lineNumber":85,"author":{"gitId":"nikkiDEEE"},"content":"                String description \u003d str[2];","lastModifiedDate":"2023-02-16"},{"lineNumber":86,"author":{"gitId":"nikkiDEEE"},"content":"                switch (taskType) {","lastModifiedDate":"2023-02-16"},{"lineNumber":87,"author":{"gitId":"nikkiDEEE"},"content":"                case \"T\":","lastModifiedDate":"2023-02-16"},{"lineNumber":88,"author":{"gitId":"nikkiDEEE"},"content":"                    ToDo newToDo \u003d new ToDo(description);","lastModifiedDate":"2023-02-16"},{"lineNumber":89,"author":{"gitId":"nikkiDEEE"},"content":"                    newToDo.setIsDone(isDone);","lastModifiedDate":"2023-02-16"},{"lineNumber":90,"author":{"gitId":"nikkiDEEE"},"content":"                    taskManager.add(newToDo);","lastModifiedDate":"2023-02-16"},{"lineNumber":91,"author":{"gitId":"nikkiDEEE"},"content":"                    break;","lastModifiedDate":"2023-02-16"},{"lineNumber":92,"author":{"gitId":"nikkiDEEE"},"content":"                case \"D\":","lastModifiedDate":"2023-02-16"},{"lineNumber":93,"author":{"gitId":"nikkiDEEE"},"content":"                    Deadline newDeadline \u003d new Deadline(description, str[3]);","lastModifiedDate":"2023-02-16"},{"lineNumber":94,"author":{"gitId":"nikkiDEEE"},"content":"                    newDeadline.setIsDone(isDone);","lastModifiedDate":"2023-02-16"},{"lineNumber":95,"author":{"gitId":"nikkiDEEE"},"content":"                    taskManager.add(newDeadline);","lastModifiedDate":"2023-02-16"},{"lineNumber":96,"author":{"gitId":"nikkiDEEE"},"content":"                    break;","lastModifiedDate":"2023-02-16"},{"lineNumber":97,"author":{"gitId":"nikkiDEEE"},"content":"                case \"E\":","lastModifiedDate":"2023-02-16"},{"lineNumber":98,"author":{"gitId":"nikkiDEEE"},"content":"                    Event newEvent \u003d new Event(description, str[3], str[4]);","lastModifiedDate":"2023-02-16"},{"lineNumber":99,"author":{"gitId":"nikkiDEEE"},"content":"                    newEvent.setIsDone(isDone);","lastModifiedDate":"2023-02-16"},{"lineNumber":100,"author":{"gitId":"nikkiDEEE"},"content":"                    taskManager.add(newEvent);","lastModifiedDate":"2023-02-16"},{"lineNumber":101,"author":{"gitId":"nikkiDEEE"},"content":"                    break;","lastModifiedDate":"2023-02-16"},{"lineNumber":102,"author":{"gitId":"nikkiDEEE"},"content":"                default:","lastModifiedDate":"2023-02-16"},{"lineNumber":103,"author":{"gitId":"nikkiDEEE"},"content":"                    System.out.println(\"Invalid task.\");","lastModifiedDate":"2023-02-16"},{"lineNumber":104,"author":{"gitId":"nikkiDEEE"},"content":"                }","lastModifiedDate":"2023-02-16"},{"lineNumber":105,"author":{"gitId":"nikkiDEEE"},"content":"            }","lastModifiedDate":"2023-02-16"},{"lineNumber":106,"author":{"gitId":"nikkiDEEE"},"content":"            sc.close();","lastModifiedDate":"2023-02-16"},{"lineNumber":107,"author":{"gitId":"nikkiDEEE"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-02-16"},{"lineNumber":108,"author":{"gitId":"nikkiDEEE"},"content":"            createFile();","lastModifiedDate":"2023-02-16"},{"lineNumber":109,"author":{"gitId":"nikkiDEEE"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":110,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":111,"author":{"gitId":"nikkiDEEE"},"content":"}","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"nikkiDEEE":111}},{"path":"src/main/java/IncompleteTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nikkiDEEE"},"content":"/**","lastModifiedDate":"2023-02-24"},{"lineNumber":2,"author":{"gitId":"nikkiDEEE"},"content":" This \u003ccode\u003eIncompleteTaskException\u003c/code\u003e class is thrown when a user attempts to perform an operation on a task","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"nikkiDEEE"},"content":" without providing all the necessary information (e.g., attempting to add a deadline without specifying a deadline).","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"nikkiDEEE"},"content":" */","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"nikkiDEEE"},"content":"public class IncompleteTaskException extends Exception {","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"nikkiDEEE"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"nikkiDEEE":6}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nikkiDEEE"},"content":"/**","lastModifiedDate":"2023-02-24"},{"lineNumber":2,"author":{"gitId":"nikkiDEEE"},"content":" * This \u003ccode\u003eParser\u003c/code\u003e class is used to parse the user input into individual strings to be used by other classes.","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"nikkiDEEE"},"content":" * It provides a single static method, \u003ccode\u003eparseCommand\u003c/code\u003e, which takes in a String of user input and returns an","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"nikkiDEEE"},"content":" * array of Strings.","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"nikkiDEEE"},"content":" * The returned array contains the first word in the user input as the first element (the user command), and the","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"nikkiDEEE"},"content":" * remainder of the input as the second element.","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"nikkiDEEE"},"content":" * @version v0.2","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"nikkiDEEE"},"content":" * @since 2023-02-24","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"nikkiDEEE"},"content":" */","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"nikkiDEEE"},"content":"public class Parser {","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"nikkiDEEE"},"content":"    public static String[] parseCommand(String userInput) {","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"nikkiDEEE"},"content":"        return userInput.split(\" \", 2);","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"nikkiDEEE"},"content":"}","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"nikkiDEEE":14}},{"path":"src/main/java/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nikkiDEEE"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-24"},{"lineNumber":2,"author":{"gitId":"nikkiDEEE"},"content":"import tasks.Deadline;","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"nikkiDEEE"},"content":"import tasks.Event;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"nikkiDEEE"},"content":"import tasks.Task;","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"nikkiDEEE"},"content":"import tasks.ToDo;","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"nikkiDEEE"},"content":"import static java.util.stream.Collectors.toList;","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"nikkiDEEE"},"content":"/**","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"nikkiDEEE"},"content":" * This \u003ccode\u003eTaskManager\u003c/code\u003e class is used to manage a list of \u003ccode\u003eTask\u003c/code\u003e objects.","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"nikkiDEEE"},"content":" * It provides methods to list, add, mark, unmark, delete, and find tasks by keyword.","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"nikkiDEEE"},"content":" * @version v0.2","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"nikkiDEEE"},"content":" * @since 2023-02-24","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"nikkiDEEE"},"content":" *","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"nikkiDEEE"},"content":" * @see ThomasShelby","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"nikkiDEEE"},"content":" * @see Ui","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"nikkiDEEE"},"content":" */","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"nikkiDEEE"},"content":"public class TaskManager {","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"nikkiDEEE"},"content":"    static ArrayList\u003cTask\u003e taskManager \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"nikkiDEEE"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"nikkiDEEE"},"content":"     * Prints a list of tasks to the console.","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"nikkiDEEE"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"nikkiDEEE"},"content":"     * @param tasksToPrint the list of tasks to print","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"nikkiDEEE"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"nikkiDEEE"},"content":"    public static void listTasks(ArrayList\u003cTask\u003e tasksToPrint) {","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"nikkiDEEE"},"content":"        Ui.printTasksMessage();","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"nikkiDEEE"},"content":"        for (int i \u003d 0; i \u003c tasksToPrint.size(); i++) {","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"nikkiDEEE"},"content":"            System.out.println((i + 1) + \". \"","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"nikkiDEEE"},"content":"                    + tasksToPrint.get(i));","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"nikkiDEEE"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"nikkiDEEE"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"nikkiDEEE"},"content":"     * Adds a new \u003ccode\u003etodo\u003c/code\u003e task to the task manager.","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"nikkiDEEE"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"nikkiDEEE"},"content":"     * @param parsedCommand an array of strings containing the user\u0027s command (\u003ccode\u003etodo\u003c/code\u003e) and task description","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"nikkiDEEE"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"nikkiDEEE"},"content":"    public static void addToDo(String[] parsedCommand) {","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"nikkiDEEE"},"content":"        ToDo newToDo \u003d new ToDo(parsedCommand[1]);","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"nikkiDEEE"},"content":"        taskManager.add(newToDo);","lastModifiedDate":"2023-02-24"},{"lineNumber":41,"author":{"gitId":"nikkiDEEE"},"content":"        Ui.printToDoMessage(newToDo);","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"nikkiDEEE"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"nikkiDEEE"},"content":"     * Adds a new \u003ccode\u003edeadline\u003c/code\u003e task to the task manager.","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"nikkiDEEE"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":47,"author":{"gitId":"nikkiDEEE"},"content":"     * @param parsedCommand an array of strings containing the user\u0027s command (\u003ccode\u003edeadline\u003c/code\u003e) and task","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"nikkiDEEE"},"content":"     *                      description with deadline","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"nikkiDEEE"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":50,"author":{"gitId":"nikkiDEEE"},"content":"    public static void addDeadline(String[] parsedCommand) {","lastModifiedDate":"2023-02-24"},{"lineNumber":51,"author":{"gitId":"nikkiDEEE"},"content":"        String[] taskAndDeadline \u003d parsedCommand[1].split(\"/\", 2);","lastModifiedDate":"2023-02-24"},{"lineNumber":52,"author":{"gitId":"nikkiDEEE"},"content":"        Deadline newDeadline \u003d new Deadline(taskAndDeadline[0], taskAndDeadline[1]);","lastModifiedDate":"2023-02-24"},{"lineNumber":53,"author":{"gitId":"nikkiDEEE"},"content":"        taskManager.add(newDeadline);","lastModifiedDate":"2023-02-24"},{"lineNumber":54,"author":{"gitId":"nikkiDEEE"},"content":"        Ui.printDeadlineMessage(newDeadline);","lastModifiedDate":"2023-02-24"},{"lineNumber":55,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":56,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":57,"author":{"gitId":"nikkiDEEE"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":58,"author":{"gitId":"nikkiDEEE"},"content":"     * Adds a new \u003ccode\u003eevent\u003c/code\u003e task to the task manager.","lastModifiedDate":"2023-02-24"},{"lineNumber":59,"author":{"gitId":"nikkiDEEE"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":60,"author":{"gitId":"nikkiDEEE"},"content":"     * @param parsedCommand an array of strings containing the user\u0027s command (\u003ccode\u003eevent\u003c/code\u003e) and task description","lastModifiedDate":"2023-02-24"},{"lineNumber":61,"author":{"gitId":"nikkiDEEE"},"content":"     *                      with event timing","lastModifiedDate":"2023-02-24"},{"lineNumber":62,"author":{"gitId":"nikkiDEEE"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":63,"author":{"gitId":"nikkiDEEE"},"content":"    public static void addEvent(String[] parsedCommand) {","lastModifiedDate":"2023-02-24"},{"lineNumber":64,"author":{"gitId":"nikkiDEEE"},"content":"        String[] taskAndDuration \u003d parsedCommand[1].split(\"/\");","lastModifiedDate":"2023-02-24"},{"lineNumber":65,"author":{"gitId":"nikkiDEEE"},"content":"        Event newEvent \u003d new Event(taskAndDuration[0], taskAndDuration[1], taskAndDuration[2]);","lastModifiedDate":"2023-02-24"},{"lineNumber":66,"author":{"gitId":"nikkiDEEE"},"content":"        taskManager.add(newEvent);","lastModifiedDate":"2023-02-24"},{"lineNumber":67,"author":{"gitId":"nikkiDEEE"},"content":"        Ui.printEventMessage(newEvent);","lastModifiedDate":"2023-02-24"},{"lineNumber":68,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":69,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":70,"author":{"gitId":"nikkiDEEE"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":71,"author":{"gitId":"nikkiDEEE"},"content":"     * \u003ccode\u003emark\u003c/code\u003e a task in the task manager as done.","lastModifiedDate":"2023-02-24"},{"lineNumber":72,"author":{"gitId":"nikkiDEEE"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":73,"author":{"gitId":"nikkiDEEE"},"content":"     * @param parsedCommand an array of strings containing the user\u0027s command (\u003ccode\u003emark\u003c/code\u003e) and task number","lastModifiedDate":"2023-02-24"},{"lineNumber":74,"author":{"gitId":"nikkiDEEE"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":75,"author":{"gitId":"nikkiDEEE"},"content":"    public static void markTask(String[] parsedCommand) {","lastModifiedDate":"2023-02-24"},{"lineNumber":76,"author":{"gitId":"nikkiDEEE"},"content":"        int taskNumber \u003d Integer.parseInt(parsedCommand[1]) - 1; // shift back index","lastModifiedDate":"2023-02-24"},{"lineNumber":77,"author":{"gitId":"nikkiDEEE"},"content":"        taskManager.get(taskNumber).setIsDone(true);","lastModifiedDate":"2023-02-24"},{"lineNumber":78,"author":{"gitId":"nikkiDEEE"},"content":"        Ui.printMarkTaskMessage(taskNumber);","lastModifiedDate":"2023-02-24"},{"lineNumber":79,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":80,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":81,"author":{"gitId":"nikkiDEEE"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":82,"author":{"gitId":"nikkiDEEE"},"content":"     * \u003ccode\u003eunmark\u003c/code\u003e a task in the task manager as done.","lastModifiedDate":"2023-02-24"},{"lineNumber":83,"author":{"gitId":"nikkiDEEE"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":84,"author":{"gitId":"nikkiDEEE"},"content":"     * @param parsedCommand an array of strings containing the user\u0027s command (\u003ccode\u003eunmark\u003c/code\u003e) and task number","lastModifiedDate":"2023-02-24"},{"lineNumber":85,"author":{"gitId":"nikkiDEEE"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":86,"author":{"gitId":"nikkiDEEE"},"content":"    public static void unmarkTask(String[] parsedCommand) {","lastModifiedDate":"2023-02-24"},{"lineNumber":87,"author":{"gitId":"nikkiDEEE"},"content":"        int taskNumber \u003d Integer.parseInt(parsedCommand[1]) - 1; // shift back index","lastModifiedDate":"2023-02-24"},{"lineNumber":88,"author":{"gitId":"nikkiDEEE"},"content":"        taskManager.get(taskNumber).setIsDone(false);","lastModifiedDate":"2023-02-24"},{"lineNumber":89,"author":{"gitId":"nikkiDEEE"},"content":"        Ui.printUnmarkTaskMessage(taskNumber);","lastModifiedDate":"2023-02-24"},{"lineNumber":90,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":91,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":92,"author":{"gitId":"nikkiDEEE"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":93,"author":{"gitId":"nikkiDEEE"},"content":"     * \u003ccode\u003edelete\u003c/code\u003e a task in the task manager as done.","lastModifiedDate":"2023-02-24"},{"lineNumber":94,"author":{"gitId":"nikkiDEEE"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":95,"author":{"gitId":"nikkiDEEE"},"content":"     * @param parsedCommand an array of strings containing the user\u0027s command (\u003ccode\u003edelete\u003c/code\u003e) and task number","lastModifiedDate":"2023-02-24"},{"lineNumber":96,"author":{"gitId":"nikkiDEEE"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":97,"author":{"gitId":"nikkiDEEE"},"content":"    public static void deleteTask(String[] parsedCommand) {","lastModifiedDate":"2023-02-24"},{"lineNumber":98,"author":{"gitId":"nikkiDEEE"},"content":"        int taskNumber \u003d Integer.parseInt(parsedCommand[1]) - 1; // shift back index","lastModifiedDate":"2023-02-24"},{"lineNumber":99,"author":{"gitId":"nikkiDEEE"},"content":"        Task taskToDelete \u003d taskManager.get(taskNumber); // store in temp var to print later","lastModifiedDate":"2023-02-24"},{"lineNumber":100,"author":{"gitId":"nikkiDEEE"},"content":"        taskManager.remove(taskNumber);","lastModifiedDate":"2023-02-24"},{"lineNumber":101,"author":{"gitId":"nikkiDEEE"},"content":"        Ui.printDeleteTaskMessage(taskToDelete);","lastModifiedDate":"2023-02-24"},{"lineNumber":102,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":103,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":104,"author":{"gitId":"nikkiDEEE"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":105,"author":{"gitId":"nikkiDEEE"},"content":"     * \u003ccode\u003efind\u003c/code\u003e a task in the task manager as done.","lastModifiedDate":"2023-02-24"},{"lineNumber":106,"author":{"gitId":"nikkiDEEE"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":107,"author":{"gitId":"nikkiDEEE"},"content":"     * @param parsedCommand an array of strings containing the user\u0027s command (\u003ccode\u003efind\u003c/code\u003e) and task description","lastModifiedDate":"2023-02-24"},{"lineNumber":108,"author":{"gitId":"nikkiDEEE"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":109,"author":{"gitId":"nikkiDEEE"},"content":"    public static ArrayList\u003cTask\u003e findTask(String[] parsedCommand) {","lastModifiedDate":"2023-02-24"},{"lineNumber":110,"author":{"gitId":"nikkiDEEE"},"content":"        return (ArrayList\u003cTask\u003e) taskManager.stream()","lastModifiedDate":"2023-02-24"},{"lineNumber":111,"author":{"gitId":"nikkiDEEE"},"content":"                .filter(task -\u003e task.getDescription().contains(parsedCommand[1]))","lastModifiedDate":"2023-02-24"},{"lineNumber":112,"author":{"gitId":"nikkiDEEE"},"content":"                .collect(toList());","lastModifiedDate":"2023-02-24"},{"lineNumber":113,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":114,"author":{"gitId":"nikkiDEEE"},"content":"}","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"nikkiDEEE":114}},{"path":"src/main/java/ThomasShelby.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nikkiDEEE"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"nikkiDEEE"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"nikkiDEEE"},"content":"/**","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"nikkiDEEE"},"content":" * This \u003ccode\u003eThomasShelby\u003c/code\u003e class is used to run the entire ThomasShelby bot application.","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"nikkiDEEE"},"content":" * It calls methods from various classes (TaskManager, Ui, Parser, and Data) to provide full feature functionality","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"nikkiDEEE"},"content":" * @version v0.2","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"nikkiDEEE"},"content":" * @since 2023-02-24","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"nikkiDEEE"},"content":" *","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"nikkiDEEE"},"content":" * @see TaskManager","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"nikkiDEEE"},"content":" * @see Ui","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"nikkiDEEE"},"content":" * @see Parser","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"nikkiDEEE"},"content":" * @see Data","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"nikkiDEEE"},"content":" */","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"nikkiDEEE"},"content":"public class ThomasShelby {","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"nikkiDEEE"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"nikkiDEEE"},"content":"        Ui.printWelcomeMessage();","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"nikkiDEEE"},"content":"        Data.loadData(TaskManager.taskManager);","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"nikkiDEEE"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"nikkiDEEE"},"content":"        while (true) {","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"nikkiDEEE"},"content":"            try {","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"nikkiDEEE"},"content":"                String command \u003d in.nextLine();","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"nikkiDEEE"},"content":"                String[] parsedCommand \u003d Parser.parseCommand(command);","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"nikkiDEEE"},"content":"                switch (parsedCommand[0]) {","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"nikkiDEEE"},"content":"                case \"bye\":","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"nikkiDEEE"},"content":"                    Data.saveData(TaskManager.taskManager);","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"nikkiDEEE"},"content":"                    System.out.println(\"Cheers.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"nikkiDEEE"},"content":"                    return;","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"nikkiDEEE"},"content":"                case \"list\":","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"nikkiDEEE"},"content":"                    TaskManager.listTasks(TaskManager.taskManager);","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"nikkiDEEE"},"content":"                    break;","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"nikkiDEEE"},"content":"                case \"todo\":","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"nikkiDEEE"},"content":"                    TaskManager.addToDo(parsedCommand);","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"nikkiDEEE"},"content":"                    break;","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"nikkiDEEE"},"content":"                case \"deadline\":","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"nikkiDEEE"},"content":"                    TaskManager.addDeadline(parsedCommand);","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"nikkiDEEE"},"content":"                    break;","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"nikkiDEEE"},"content":"                case \"event\":","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"nikkiDEEE"},"content":"                    TaskManager.addEvent(parsedCommand);","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"nikkiDEEE"},"content":"                    break;","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"nikkiDEEE"},"content":"                case \"mark\":","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"nikkiDEEE"},"content":"                    TaskManager.markTask(parsedCommand);","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"nikkiDEEE"},"content":"                    break;","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"nikkiDEEE"},"content":"                case \"unmark\":","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"nikkiDEEE"},"content":"                    TaskManager.unmarkTask(parsedCommand);","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"nikkiDEEE"},"content":"                    break;","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"nikkiDEEE"},"content":"                case \"delete\":","lastModifiedDate":"2023-02-11"},{"lineNumber":48,"author":{"gitId":"nikkiDEEE"},"content":"                    TaskManager.deleteTask(parsedCommand);","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"nikkiDEEE"},"content":"                    break;","lastModifiedDate":"2023-02-11"},{"lineNumber":50,"author":{"gitId":"nikkiDEEE"},"content":"                case \"find\":","lastModifiedDate":"2023-02-24"},{"lineNumber":51,"author":{"gitId":"nikkiDEEE"},"content":"                    TaskManager.listTasks(TaskManager.findTask(parsedCommand));","lastModifiedDate":"2023-02-24"},{"lineNumber":52,"author":{"gitId":"nikkiDEEE"},"content":"                    break;","lastModifiedDate":"2023-02-24"},{"lineNumber":53,"author":{"gitId":"nikkiDEEE"},"content":"                default:","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"nikkiDEEE"},"content":"                    throw new IncompleteTaskException();","lastModifiedDate":"2023-02-24"},{"lineNumber":55,"author":{"gitId":"nikkiDEEE"},"content":"                }","lastModifiedDate":"2023-02-07"},{"lineNumber":56,"author":{"gitId":"nikkiDEEE"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-07"},{"lineNumber":57,"author":{"gitId":"nikkiDEEE"},"content":"                Ui.printArrayIndexOutOfBoundsExceptionErrorMessage(e);","lastModifiedDate":"2023-02-24"},{"lineNumber":58,"author":{"gitId":"nikkiDEEE"},"content":"            } catch (IncompleteTaskException e) {","lastModifiedDate":"2023-02-24"},{"lineNumber":59,"author":{"gitId":"nikkiDEEE"},"content":"                Ui.printIncompleteTaskExceptionErrorMessage();","lastModifiedDate":"2023-02-24"},{"lineNumber":60,"author":{"gitId":"nikkiDEEE"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"nikkiDEEE"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"nikkiDEEE"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"nikkiDEEE":63}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nikkiDEEE"},"content":"import tasks.Task;","lastModifiedDate":"2023-02-24"},{"lineNumber":2,"author":{"gitId":"nikkiDEEE"},"content":"import tasks.ToDo;","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"nikkiDEEE"},"content":"import tasks.Deadline;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"nikkiDEEE"},"content":"import tasks.Event;","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"nikkiDEEE"},"content":"/**","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"nikkiDEEE"},"content":" * The \u003ccode\u003eUi\u003c/code\u003e class contains methods to print various messages to the console for user interaction","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"nikkiDEEE"},"content":" *It provides messages for the welcome screen, listing, adding, marking, unmarking, deletion,","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"nikkiDEEE"},"content":" * and error handling for ArrayIndexOutOfBoundsException and IncompleteTaskException","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"nikkiDEEE"},"content":" * @version v0.2","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"nikkiDEEE"},"content":" * @since 2023-02-24","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"nikkiDEEE"},"content":" *","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"nikkiDEEE"},"content":" * @see TaskManager","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"nikkiDEEE"},"content":" * @see Task","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"nikkiDEEE"},"content":" * @see ToDo","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"nikkiDEEE"},"content":" * @see Deadline","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"nikkiDEEE"},"content":" * @see Event","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"nikkiDEEE"},"content":" */","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"nikkiDEEE"},"content":"public class Ui {","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"nikkiDEEE"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"nikkiDEEE"},"content":"    * Prints a welcome message to the console when the program is started","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"nikkiDEEE"},"content":"    */","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"nikkiDEEE"},"content":"    public static void printWelcomeMessage() {","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"nikkiDEEE"},"content":"        System.out.println(\"Good day, I\u0027m Thomas Shelby.\");","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"nikkiDEEE"},"content":"        System.out.println(\"To what do I owe the pleasure?\");","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"nikkiDEEE"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"nikkiDEEE"},"content":"     * Prints a message to the console before all the tasks in the \u003ccode\u003eTaskManager\u003c/code\u003e ArrayList are listed","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"nikkiDEEE"},"content":"     * @see TaskManager","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"nikkiDEEE"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"nikkiDEEE"},"content":"    public static void printTasksMessage() {","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"nikkiDEEE"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"nikkiDEEE"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"nikkiDEEE"},"content":"     * Prints a message to the console when a new \u003ccode\u003eToDo\u003c/code\u003e task is added to the \u003ccode\u003eTaskManager\u003c/code\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"nikkiDEEE"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"nikkiDEEE"},"content":"     * @param newToDo the newly added \u003ccode\u003eToDo\u003c/code\u003e task","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"nikkiDEEE"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":41,"author":{"gitId":"nikkiDEEE"},"content":"    public static void printToDoMessage(ToDo newToDo) {","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"nikkiDEEE"},"content":"        System.out.println(\"Don\u0027t sleep on it.\\n\" + \"added: \" + newToDo);","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"nikkiDEEE"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"nikkiDEEE"},"content":"     * Prints a message to the console when a new \u003ccode\u003eDeadline\u003c/code\u003e task is added to the \u003ccode\u003eTaskManager\u003c/code\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":47,"author":{"gitId":"nikkiDEEE"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"nikkiDEEE"},"content":"     * @param newDeadline the newly added \u003ccode\u003eDeadline\u003c/code\u003e task","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"nikkiDEEE"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":50,"author":{"gitId":"nikkiDEEE"},"content":"    public static void printDeadlineMessage(Deadline newDeadline) {","lastModifiedDate":"2023-02-24"},{"lineNumber":51,"author":{"gitId":"nikkiDEEE"},"content":"        System.out.println(\"Time is money, chop chop!\\n\" + \"added: \" + newDeadline);","lastModifiedDate":"2023-02-24"},{"lineNumber":52,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":53,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":54,"author":{"gitId":"nikkiDEEE"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":55,"author":{"gitId":"nikkiDEEE"},"content":"     * Prints a message to the console when a new \u003ccode\u003eEvent\u003c/code\u003e task is added to the \u003ccode\u003eTaskManager\u003c/code\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":56,"author":{"gitId":"nikkiDEEE"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":57,"author":{"gitId":"nikkiDEEE"},"content":"     * @param newEvent the newly added \u003ccode\u003eEvent\u003c/code\u003e task","lastModifiedDate":"2023-02-24"},{"lineNumber":58,"author":{"gitId":"nikkiDEEE"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":59,"author":{"gitId":"nikkiDEEE"},"content":"    public static void printEventMessage(Event newEvent) {","lastModifiedDate":"2023-02-24"},{"lineNumber":60,"author":{"gitId":"nikkiDEEE"},"content":"        System.out.println(\"I\u0027ll see you there.\\n\" + \"added: \" + newEvent);","lastModifiedDate":"2023-02-24"},{"lineNumber":61,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":62,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":63,"author":{"gitId":"nikkiDEEE"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":64,"author":{"gitId":"nikkiDEEE"},"content":"     * Prints a message and the marked task to the console when a task is marked as done","lastModifiedDate":"2023-02-24"},{"lineNumber":65,"author":{"gitId":"nikkiDEEE"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":66,"author":{"gitId":"nikkiDEEE"},"content":"     * @param taskNumber the index of the task in the \u003ccode\u003eTaskManager\u003c/code\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":67,"author":{"gitId":"nikkiDEEE"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":68,"author":{"gitId":"nikkiDEEE"},"content":"    public static void printMarkTaskMessage(int taskNumber) {","lastModifiedDate":"2023-02-24"},{"lineNumber":69,"author":{"gitId":"nikkiDEEE"},"content":"        System.out.println(\"That was long due, well done.\\n\" + TaskManager.taskManager.get(taskNumber));","lastModifiedDate":"2023-02-24"},{"lineNumber":70,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":71,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":72,"author":{"gitId":"nikkiDEEE"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":73,"author":{"gitId":"nikkiDEEE"},"content":"     * Prints a message and the unmarked task to the console when a task is marked as undone","lastModifiedDate":"2023-02-24"},{"lineNumber":74,"author":{"gitId":"nikkiDEEE"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":75,"author":{"gitId":"nikkiDEEE"},"content":"     * @param taskNumber the index of the task in the \u003ccode\u003eTaskManager\u003c/code\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":76,"author":{"gitId":"nikkiDEEE"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":77,"author":{"gitId":"nikkiDEEE"},"content":"    public static void printUnmarkTaskMessage(int taskNumber) {","lastModifiedDate":"2023-02-24"},{"lineNumber":78,"author":{"gitId":"nikkiDEEE"},"content":"        System.out.println(\"You\u0027ve gotten lazy.\\n\" + TaskManager.taskManager.get(taskNumber));","lastModifiedDate":"2023-02-24"},{"lineNumber":79,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":80,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":81,"author":{"gitId":"nikkiDEEE"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":82,"author":{"gitId":"nikkiDEEE"},"content":"     * Prints a message, the task to delete, and the number of remaining tasks to the console when a task is deleted","lastModifiedDate":"2023-02-24"},{"lineNumber":83,"author":{"gitId":"nikkiDEEE"},"content":"     * from the \u003ccode\u003eTaskManager\u003c/code\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":84,"author":{"gitId":"nikkiDEEE"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":85,"author":{"gitId":"nikkiDEEE"},"content":"     * @param taskToDelete the task that was deleted","lastModifiedDate":"2023-02-24"},{"lineNumber":86,"author":{"gitId":"nikkiDEEE"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":87,"author":{"gitId":"nikkiDEEE"},"content":"    public static void printDeleteTaskMessage(Task taskToDelete) {","lastModifiedDate":"2023-02-24"},{"lineNumber":88,"author":{"gitId":"nikkiDEEE"},"content":"        System.out.println(\"That\u0027s off the list: \\n\" + taskToDelete);","lastModifiedDate":"2023-02-24"},{"lineNumber":89,"author":{"gitId":"nikkiDEEE"},"content":"        System.out.println(\"You\u0027re left with \" + TaskManager.taskManager.size() + \" task(s).\");","lastModifiedDate":"2023-02-24"},{"lineNumber":90,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":91,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":92,"author":{"gitId":"nikkiDEEE"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":93,"author":{"gitId":"nikkiDEEE"},"content":"     * Prints an error message to the console when an ArrayIndexOutOfBoundsException occurs","lastModifiedDate":"2023-02-24"},{"lineNumber":94,"author":{"gitId":"nikkiDEEE"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":95,"author":{"gitId":"nikkiDEEE"},"content":"     * @param e the exception thrown","lastModifiedDate":"2023-02-24"},{"lineNumber":96,"author":{"gitId":"nikkiDEEE"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":97,"author":{"gitId":"nikkiDEEE"},"content":"    public static void printArrayIndexOutOfBoundsExceptionErrorMessage(ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-24"},{"lineNumber":98,"author":{"gitId":"nikkiDEEE"},"content":"        System.out.println(\"Something\u0027s wrong: \" + e);","lastModifiedDate":"2023-02-24"},{"lineNumber":99,"author":{"gitId":"nikkiDEEE"},"content":"        System.out.println(\"You probably didn\u0027t include the task or the timeframe.\");","lastModifiedDate":"2023-02-24"},{"lineNumber":100,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":101,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":102,"author":{"gitId":"nikkiDEEE"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":103,"author":{"gitId":"nikkiDEEE"},"content":"     * Prints an error message to the console when an IncompleteTaskException occurs","lastModifiedDate":"2023-02-24"},{"lineNumber":104,"author":{"gitId":"nikkiDEEE"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":105,"author":{"gitId":"nikkiDEEE"},"content":"    public static void printIncompleteTaskExceptionErrorMessage() {","lastModifiedDate":"2023-02-24"},{"lineNumber":106,"author":{"gitId":"nikkiDEEE"},"content":"        System.out.println(\"Don\u0027t know what that means comrade.\");","lastModifiedDate":"2023-02-24"},{"lineNumber":107,"author":{"gitId":"nikkiDEEE"},"content":"        System.out.println(\"Refer to the `Usage` section in the \u0027README.md\u0027 file for valid commands.\");","lastModifiedDate":"2023-02-24"},{"lineNumber":108,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":109,"author":{"gitId":"nikkiDEEE"},"content":"}","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"nikkiDEEE":109}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nikkiDEEE"},"content":"package tasks;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"nikkiDEEE"},"content":"/**","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"nikkiDEEE"},"content":" * A \u003ccode\u003eDeadline\u003c/code\u003e class that represents a deadline task.","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"nikkiDEEE"},"content":" */","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"nikkiDEEE"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"nikkiDEEE"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"nikkiDEEE"},"content":"     * The deadline of the task.","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"nikkiDEEE"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"nikkiDEEE"},"content":"    public String by;","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"nikkiDEEE"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"nikkiDEEE"},"content":"     * Constructs a Deadline object with the given description and deadline.","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"nikkiDEEE"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"nikkiDEEE"},"content":"     * @param description the description of the task","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"nikkiDEEE"},"content":"     * @param by the deadline of the task","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"nikkiDEEE"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"nikkiDEEE"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"nikkiDEEE"},"content":"        super(description);","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"nikkiDEEE"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"nikkiDEEE"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"nikkiDEEE"},"content":"     * Returns the type of the task: \u003ccode\u003eD\u003c/code\u003e for deadline.","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"nikkiDEEE"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"nikkiDEEE"},"content":"     * @return the type of the task, which is \u003ccode\u003eD\u003c/code\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"nikkiDEEE"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"nikkiDEEE"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"nikkiDEEE"},"content":"    public String getType() {","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"nikkiDEEE"},"content":"        return \"D\";","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"nikkiDEEE"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"nikkiDEEE"},"content":"     * Returns a string representation of the deadline task, including its type, description, and deadline.","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"nikkiDEEE"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"nikkiDEEE"},"content":"     * @return a string representation of the deadline task","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"nikkiDEEE"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"nikkiDEEE"},"content":"    @Override","lastModifiedDate":"2023-02-16"},{"lineNumber":39,"author":{"gitId":"nikkiDEEE"},"content":"    public String toString() {","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"nikkiDEEE"},"content":"        return \"[\" + this.getType() + \"]\" + super.toString() + \"(by: \" + by + \")\";","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":42,"author":{"gitId":"nikkiDEEE"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"nikkiDEEE":42}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nikkiDEEE"},"content":"package tasks;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"nikkiDEEE"},"content":"public class Event extends Task {","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"nikkiDEEE"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"nikkiDEEE"},"content":"     * The start and end details of the event.","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"nikkiDEEE"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"nikkiDEEE"},"content":"    public String start;","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"nikkiDEEE"},"content":"    public String end;","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"nikkiDEEE"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"nikkiDEEE"},"content":"     * Constructs an Event object with the given description, start and end details.","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"nikkiDEEE"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"nikkiDEEE"},"content":"     * @param description the description of the task","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"nikkiDEEE"},"content":"     * @param start the start details of the task","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"nikkiDEEE"},"content":"     * @param end the end details of the task","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"nikkiDEEE"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"nikkiDEEE"},"content":"    public Event(String description, String start, String end) {","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"nikkiDEEE"},"content":"        super(description);","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"nikkiDEEE"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"nikkiDEEE"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"nikkiDEEE"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"nikkiDEEE"},"content":"     * Returns the type of the task: \u003ccode\u003eE\u003c/code\u003e for event.","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"nikkiDEEE"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"nikkiDEEE"},"content":"     * @return the type of the task, which is \u003ccode\u003eE\u003c/code\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"nikkiDEEE"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"nikkiDEEE"},"content":"    @Override","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"nikkiDEEE"},"content":"    public String getType() {","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"nikkiDEEE"},"content":"        return \"E\";","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"nikkiDEEE"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"nikkiDEEE"},"content":"     * Returns a string representation of the event task, including its type, description, start, and end details.","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"nikkiDEEE"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"nikkiDEEE"},"content":"     * @return a string representation of the event task","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"nikkiDEEE"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"nikkiDEEE"},"content":"    @Override","lastModifiedDate":"2023-02-16"},{"lineNumber":39,"author":{"gitId":"nikkiDEEE"},"content":"    public String toString() {","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"nikkiDEEE"},"content":"        return \"[\" + this.getType() + \"]\" + super.toString() + \"(\" + this.start + \"- \" + this.end + \")\";","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":42,"author":{"gitId":"nikkiDEEE"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"nikkiDEEE":42}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nikkiDEEE"},"content":"package tasks;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"nikkiDEEE"},"content":"public abstract class Task {","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"nikkiDEEE"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"nikkiDEEE"},"content":"     * The description and marker of the task","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"nikkiDEEE"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"nikkiDEEE"},"content":"    protected String description;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"nikkiDEEE"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"nikkiDEEE"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"nikkiDEEE"},"content":"     * Constructs a Task object with the given description.","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"nikkiDEEE"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"nikkiDEEE"},"content":"     * @param description the description of the task","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"nikkiDEEE"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"nikkiDEEE"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"nikkiDEEE"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"nikkiDEEE"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"nikkiDEEE"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"nikkiDEEE"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"nikkiDEEE"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"nikkiDEEE"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"nikkiDEEE"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"nikkiDEEE"},"content":"        return description;","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"nikkiDEEE"},"content":"    public void setIsDone(boolean done) {","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"nikkiDEEE"},"content":"        this.isDone \u003d done;","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"nikkiDEEE"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"nikkiDEEE"},"content":"        return isDone;","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"nikkiDEEE"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"nikkiDEEE"},"content":"     * This \u003ccode\u003egetType()\u003c/code\u003e method will be overridden in the 3 different type classes","lastModifiedDate":"2023-02-24"},{"lineNumber":41,"author":{"gitId":"nikkiDEEE"},"content":"     * Returns the type of the task.","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"nikkiDEEE"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"nikkiDEEE"},"content":"     * @return null","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"nikkiDEEE"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"nikkiDEEE"},"content":"    public String getType() {","lastModifiedDate":"2023-02-16"},{"lineNumber":46,"author":{"gitId":"nikkiDEEE"},"content":"        return null;","lastModifiedDate":"2023-02-16"},{"lineNumber":47,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":48,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":49,"author":{"gitId":"nikkiDEEE"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":50,"author":{"gitId":"nikkiDEEE"},"content":"     * This \u003ccode\u003etoString()\u003c/code\u003e method will be overridden in the 3 different type classes","lastModifiedDate":"2023-02-24"},{"lineNumber":51,"author":{"gitId":"nikkiDEEE"},"content":"     * Returns a string representation of the task, including status and description.","lastModifiedDate":"2023-02-24"},{"lineNumber":52,"author":{"gitId":"nikkiDEEE"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":53,"author":{"gitId":"nikkiDEEE"},"content":"     * @return a string representation of the task","lastModifiedDate":"2023-02-24"},{"lineNumber":54,"author":{"gitId":"nikkiDEEE"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":55,"author":{"gitId":"nikkiDEEE"},"content":"    public String toString() {","lastModifiedDate":"2023-02-16"},{"lineNumber":56,"author":{"gitId":"nikkiDEEE"},"content":"        return this.getStatusIcon() + \" \" + this.description;","lastModifiedDate":"2023-02-16"},{"lineNumber":57,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":58,"author":{"gitId":"nikkiDEEE"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"nikkiDEEE":58}},{"path":"src/main/java/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nikkiDEEE"},"content":"package tasks;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"nikkiDEEE"},"content":"/**","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"nikkiDEEE"},"content":" * A \u003ccode\u003eToDo\u003c/code\u003e class that represents a ToDo task.","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"nikkiDEEE"},"content":" */","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"nikkiDEEE"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"nikkiDEEE"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"nikkiDEEE"},"content":"     * Constructs a ToDo object with the given description.","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"nikkiDEEE"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"nikkiDEEE"},"content":"     * @param description the description of the task","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"nikkiDEEE"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"nikkiDEEE"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"nikkiDEEE"},"content":"        super(description);","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"nikkiDEEE"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"nikkiDEEE"},"content":"     * Returns the type of the task: \u003ccode\u003eT\u003c/code\u003e for ToDo.","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"nikkiDEEE"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"nikkiDEEE"},"content":"     * @return the type of the task, which is \u003ccode\u003eT\u003c/code\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"nikkiDEEE"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"nikkiDEEE"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"nikkiDEEE"},"content":"    public String getType() {","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"nikkiDEEE"},"content":"        return \"T\";","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"nikkiDEEE"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"nikkiDEEE"},"content":"     * Returns a string representation of the ToDo task.","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"nikkiDEEE"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"nikkiDEEE"},"content":"     * @return a string representation of the ToDo task","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"nikkiDEEE"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"nikkiDEEE"},"content":"    @Override","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"nikkiDEEE"},"content":"    public String toString() {","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"nikkiDEEE"},"content":"        return \"[\" + this.getType() + \"]\" + super.toString();","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"nikkiDEEE"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"nikkiDEEE":35}}]
