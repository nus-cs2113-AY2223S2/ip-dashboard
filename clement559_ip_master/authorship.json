[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clement559"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"clement559"},"content":"    String deadline;","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"clement559"},"content":"    String taskDescription;","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"clement559"},"content":"    public Deadline (String taskDescription, String deadline) {","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"clement559"},"content":"        super(taskDescription + \" (by: \" + deadline + \")\");","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"clement559"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"clement559"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"clement559"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"clement559"},"content":"    public String getTypeIcon() {","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"clement559"},"content":"        return \"[D]\";","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"clement559"},"content":"    @Override","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"clement559"},"content":"    public String toSaveString(String... taskParameters) {","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"clement559"},"content":"        return super.toSaveString(\"D\", isDone ? \"1\" : \"0\", taskDescription, deadline);","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"clement559"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"clement559":19}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clement559"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"clement559"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"clement559"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"clement559"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"clement559"},"content":"    public static final String FILE_DIRECTORY \u003d \"data\";","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"clement559"},"content":"    public static final String FILE_NAME \u003d \"duke.txt\";","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"clement559"},"content":"    public static final String LINE_BREAK \u003d \"---------------------------------------------\";","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"clement559"},"content":"    public static void DeleteTask (ArrayList\u003cTask\u003e lists, int itemNumber) {","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"clement559"},"content":"        int index \u003d itemNumber - 1;","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"clement559"},"content":"        Task item \u003d lists.get(index);","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"clement559"},"content":"        System.out.println(\"Got it. I\u0027ve removed this task: \" + item.getTypeIcon()","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"clement559"},"content":"                + item.getStatusIcon() + item.description);","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"clement559"},"content":"        lists.remove(index);","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"clement559"},"content":"        System.out.println(\"Now you have \" + lists.size() + \" tasks in the list.\");","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"clement559"},"content":"        System.out.println(LINE_BREAK);","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"clement559"},"content":"    public static void registerTodo (ArrayList\u003cTask\u003e lists, String line) throws IndexOutOfBoundsException {","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"clement559"},"content":"        try {","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"clement559"},"content":"            String[] inputLine \u003d line.split(\" \", 2);","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"clement559"},"content":"            Task item \u003d new Todo(inputLine[1]);","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"clement559"},"content":"            lists.add(item);","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"clement559"},"content":"            printAddTask(item, lists.size());","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"clement559"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"clement559"},"content":"            System.out.println(\"Your deadline must be of the following format: deadline (deadline name) /by (date)\");","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"clement559"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"clement559"},"content":"    public static void registerDeadline (ArrayList\u003cTask\u003e lists, String line) throws IndexOutOfBoundsException {","lastModifiedDate":"2023-02-15"},{"lineNumber":34,"author":{"gitId":"clement559"},"content":"        try {","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"clement559"},"content":"            String[] inputLines \u003d line.split(\" \", 2);","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"clement559"},"content":"            inputLines \u003d inputLines[1].split(\" /by \");","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"clement559"},"content":"            String description \u003d inputLines[0];","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"clement559"},"content":"            String deadline \u003d inputLines[1];","lastModifiedDate":"2023-02-08"},{"lineNumber":39,"author":{"gitId":"clement559"},"content":"            Task item \u003d new Deadline(description, deadline);","lastModifiedDate":"2023-02-08"},{"lineNumber":40,"author":{"gitId":"clement559"},"content":"            lists.add(item);","lastModifiedDate":"2023-02-15"},{"lineNumber":41,"author":{"gitId":"clement559"},"content":"            printAddTask(item, lists.size());","lastModifiedDate":"2023-02-16"},{"lineNumber":42,"author":{"gitId":"clement559"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-08"},{"lineNumber":43,"author":{"gitId":"clement559"},"content":"        System.out.println(\"Your deadline must be of the following format: deadline (deadline name) /by (date)\");","lastModifiedDate":"2023-02-08"},{"lineNumber":44,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":45,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":46,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":47,"author":{"gitId":"clement559"},"content":"    public static void registerEvent (ArrayList\u003cTask\u003e lists, String line) throws IndexOutOfBoundsException {","lastModifiedDate":"2023-02-15"},{"lineNumber":48,"author":{"gitId":"clement559"},"content":"        try {","lastModifiedDate":"2023-02-08"},{"lineNumber":49,"author":{"gitId":"clement559"},"content":"            String[] inputLines \u003d line.split(\" \", 2);","lastModifiedDate":"2023-02-08"},{"lineNumber":50,"author":{"gitId":"clement559"},"content":"            inputLines \u003d inputLines[1].split(\" /from \");","lastModifiedDate":"2023-02-08"},{"lineNumber":51,"author":{"gitId":"clement559"},"content":"            String description \u003d inputLines[0];","lastModifiedDate":"2023-02-08"},{"lineNumber":52,"author":{"gitId":"clement559"},"content":"            inputLines \u003d inputLines[1].split(\" /to \");","lastModifiedDate":"2023-02-08"},{"lineNumber":53,"author":{"gitId":"clement559"},"content":"            String start \u003d inputLines[0];","lastModifiedDate":"2023-02-08"},{"lineNumber":54,"author":{"gitId":"clement559"},"content":"            String end \u003d inputLines[1];","lastModifiedDate":"2023-02-08"},{"lineNumber":55,"author":{"gitId":"clement559"},"content":"            Task item \u003d new Event(description, start, end);","lastModifiedDate":"2023-02-08"},{"lineNumber":56,"author":{"gitId":"clement559"},"content":"            lists.add(item);","lastModifiedDate":"2023-02-15"},{"lineNumber":57,"author":{"gitId":"clement559"},"content":"            printAddTask(item, lists.size());","lastModifiedDate":"2023-02-16"},{"lineNumber":58,"author":{"gitId":"clement559"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-08"},{"lineNumber":59,"author":{"gitId":"clement559"},"content":"        System.out.println(\"Your deadline must be of the following format: deadline (deadline name) /by (date)\");","lastModifiedDate":"2023-02-16"},{"lineNumber":60,"author":{"gitId":"clement559"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":61,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":62,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":63,"author":{"gitId":"clement559"},"content":"    public static void printAddTask (Task item, int size) {","lastModifiedDate":"2023-02-16"},{"lineNumber":64,"author":{"gitId":"clement559"},"content":"        System.out.println(\"Got it. I\u0027ve added this task: \" + item.getTypeIcon()","lastModifiedDate":"2023-02-08"},{"lineNumber":65,"author":{"gitId":"clement559"},"content":"                + item.getStatusIcon() + item.description);","lastModifiedDate":"2023-02-08"},{"lineNumber":66,"author":{"gitId":"clement559"},"content":"        System.out.println(\"Now you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2023-02-16"},{"lineNumber":67,"author":{"gitId":"clement559"},"content":"        System.out.println(LINE_BREAK);","lastModifiedDate":"2023-02-08"},{"lineNumber":68,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":69,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":70,"author":{"gitId":"clement559"},"content":"    public static void printIntro () {","lastModifiedDate":"2023-02-08"},{"lineNumber":71,"author":{"gitId":"clement559"},"content":"        System.out.println(LINE_BREAK);","lastModifiedDate":"2023-02-08"},{"lineNumber":72,"author":{"gitId":"clement559"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");","lastModifiedDate":"2023-02-08"},{"lineNumber":73,"author":{"gitId":"clement559"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-02-08"},{"lineNumber":74,"author":{"gitId":"clement559"},"content":"        System.out.println(LINE_BREAK);","lastModifiedDate":"2023-02-08"},{"lineNumber":75,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":76,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":77,"author":{"gitId":"clement559"},"content":"    public static void printExiting() {","lastModifiedDate":"2023-02-08"},{"lineNumber":78,"author":{"gitId":"clement559"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-02-08"},{"lineNumber":79,"author":{"gitId":"clement559"},"content":"        System.out.println(LINE_BREAK);","lastModifiedDate":"2023-02-08"},{"lineNumber":80,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":81,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":82,"author":{"gitId":"clement559"},"content":"    public static void printError() {","lastModifiedDate":"2023-02-15"},{"lineNumber":83,"author":{"gitId":"clement559"},"content":"        System.out.println(\"You chose a task that does not exist!\");","lastModifiedDate":"2023-02-15"},{"lineNumber":84,"author":{"gitId":"clement559"},"content":"        System.out.println(LINE_BREAK);","lastModifiedDate":"2023-02-15"},{"lineNumber":85,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":86,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":87,"author":{"gitId":"clement559"},"content":"    public static String getInput() throws NoSuchElementException {","lastModifiedDate":"2023-02-08"},{"lineNumber":88,"author":{"gitId":"clement559"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-08"},{"lineNumber":89,"author":{"gitId":"clement559"},"content":"        String line \u003d \"\";","lastModifiedDate":"2023-01-26"},{"lineNumber":90,"author":{"gitId":"clement559"},"content":"        try {","lastModifiedDate":"2023-02-08"},{"lineNumber":91,"author":{"gitId":"clement559"},"content":"            line \u003d in.nextLine();","lastModifiedDate":"2023-02-08"},{"lineNumber":92,"author":{"gitId":"clement559"},"content":"        } catch (NoSuchElementException e){","lastModifiedDate":"2023-02-08"},{"lineNumber":93,"author":{"gitId":"clement559"},"content":"            printExiting();","lastModifiedDate":"2023-02-08"},{"lineNumber":94,"author":{"gitId":"clement559"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":95,"author":{"gitId":"clement559"},"content":"        return line;","lastModifiedDate":"2023-02-08"},{"lineNumber":96,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":97,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":98,"author":{"gitId":"clement559"},"content":"    public static void identifyInput(String line, ArrayList\u003cTask\u003e lists) throws DukeException {","lastModifiedDate":"2023-02-15"},{"lineNumber":99,"author":{"gitId":"clement559"},"content":"        try {","lastModifiedDate":"2023-02-08"},{"lineNumber":100,"author":{"gitId":"clement559"},"content":"            if (line.startsWith(\"todo\")) {","lastModifiedDate":"2023-02-08"},{"lineNumber":101,"author":{"gitId":"clement559"},"content":"                registerTodo(lists, line);","lastModifiedDate":"2023-02-15"},{"lineNumber":102,"author":{"gitId":"clement559"},"content":"            } else if (line.startsWith(\"deadline\")) {","lastModifiedDate":"2023-02-08"},{"lineNumber":103,"author":{"gitId":"clement559"},"content":"                registerDeadline(lists, line);","lastModifiedDate":"2023-02-15"},{"lineNumber":104,"author":{"gitId":"clement559"},"content":"            } else if (line.startsWith(\"event\")) {","lastModifiedDate":"2023-02-08"},{"lineNumber":105,"author":{"gitId":"clement559"},"content":"                registerEvent(lists, line);","lastModifiedDate":"2023-02-15"},{"lineNumber":106,"author":{"gitId":"clement559"},"content":"            } else {","lastModifiedDate":"2023-02-08"},{"lineNumber":107,"author":{"gitId":"clement559"},"content":"                throw new DukeException();","lastModifiedDate":"2023-02-08"},{"lineNumber":108,"author":{"gitId":"clement559"},"content":"            }","lastModifiedDate":"2023-02-08"},{"lineNumber":109,"author":{"gitId":"clement559"},"content":"        } catch (DukeException e){","lastModifiedDate":"2023-02-08"},{"lineNumber":110,"author":{"gitId":"clement559"},"content":"            System.out.println(\"I am not a chatbot, please do not chat to me.\");","lastModifiedDate":"2023-02-08"},{"lineNumber":111,"author":{"gitId":"clement559"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":112,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":113,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":114,"author":{"gitId":"clement559"},"content":"    public static void main (String[] args) throws DukeException, FileNotFoundException {","lastModifiedDate":"2023-02-16"},{"lineNumber":115,"author":{"gitId":"clement559"},"content":"        ArrayList\u003cTask\u003e lists \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-15"},{"lineNumber":116,"author":{"gitId":"clement559"},"content":"        Storage.readDukeFile(lists, FILE_DIRECTORY, FILE_NAME);","lastModifiedDate":"2023-02-16"},{"lineNumber":117,"author":{"gitId":"clement559"},"content":"        printIntro();","lastModifiedDate":"2023-02-08"},{"lineNumber":118,"author":{"gitId":"clement559"},"content":"        while (true) {","lastModifiedDate":"2023-01-26"},{"lineNumber":119,"author":{"gitId":"clement559"},"content":"            String line \u003d getInput();","lastModifiedDate":"2023-02-08"},{"lineNumber":120,"author":{"gitId":"clement559"},"content":"            String[] words \u003d line.split(\" \");","lastModifiedDate":"2023-01-27"},{"lineNumber":121,"author":{"gitId":"clement559"},"content":"            System.out.println(LINE_BREAK);","lastModifiedDate":"2023-02-08"},{"lineNumber":122,"author":{"gitId":"clement559"},"content":"            if (line.contains(\"list\")) {","lastModifiedDate":"2023-01-27"},{"lineNumber":123,"author":{"gitId":"clement559"},"content":"                System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-01-27"},{"lineNumber":124,"author":{"gitId":"clement559"},"content":"                int itemNumber \u003d 1;","lastModifiedDate":"2023-01-26"},{"lineNumber":125,"author":{"gitId":"clement559"},"content":"                for (Task item : lists) {","lastModifiedDate":"2023-02-08"},{"lineNumber":126,"author":{"gitId":"clement559"},"content":"                    if ((itemNumber - 1) \u003d\u003d lists.size()) {","lastModifiedDate":"2023-02-16"},{"lineNumber":127,"author":{"gitId":"clement559"},"content":"                        break;","lastModifiedDate":"2023-01-27"},{"lineNumber":128,"author":{"gitId":"clement559"},"content":"                    }","lastModifiedDate":"2023-01-27"},{"lineNumber":129,"author":{"gitId":"clement559"},"content":"                    item.printTask(itemNumber);","lastModifiedDate":"2023-02-08"},{"lineNumber":130,"author":{"gitId":"clement559"},"content":"                    itemNumber++;","lastModifiedDate":"2023-01-26"},{"lineNumber":131,"author":{"gitId":"clement559"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":132,"author":{"gitId":"clement559"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":133,"author":{"gitId":"clement559"},"content":"            else if (line.startsWith(\"mark\") || line.startsWith(\"unmark\") || line.startsWith(\"delete\")) {","lastModifiedDate":"2023-02-15"},{"lineNumber":134,"author":{"gitId":"clement559"},"content":"                try {","lastModifiedDate":"2023-02-15"},{"lineNumber":135,"author":{"gitId":"clement559"},"content":"                    int itemNumber \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2023-01-27"},{"lineNumber":136,"author":{"gitId":"clement559"},"content":"                    if (line.startsWith(\"mark\")) {","lastModifiedDate":"2023-02-15"},{"lineNumber":137,"author":{"gitId":"clement559"},"content":"                        lists.get(itemNumber - 1).markAsDone();","lastModifiedDate":"2023-02-15"},{"lineNumber":138,"author":{"gitId":"clement559"},"content":"                    } else if (line.startsWith(\"unmark\")) {","lastModifiedDate":"2023-02-15"},{"lineNumber":139,"author":{"gitId":"clement559"},"content":"                        lists.get(itemNumber - 1).markAsUndone();","lastModifiedDate":"2023-02-15"},{"lineNumber":140,"author":{"gitId":"clement559"},"content":"                    } else {","lastModifiedDate":"2023-02-15"},{"lineNumber":141,"author":{"gitId":"clement559"},"content":"                        DeleteTask(lists, itemNumber);","lastModifiedDate":"2023-02-15"},{"lineNumber":142,"author":{"gitId":"clement559"},"content":"                    }","lastModifiedDate":"2023-02-15"},{"lineNumber":143,"author":{"gitId":"clement559"},"content":"                    Storage.saveDataFromInput(FILE_DIRECTORY, FILE_NAME, lists);","lastModifiedDate":"2023-02-16"},{"lineNumber":144,"author":{"gitId":"clement559"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":145,"author":{"gitId":"clement559"},"content":"                    printError();","lastModifiedDate":"2023-02-15"},{"lineNumber":146,"author":{"gitId":"clement559"},"content":"                }","lastModifiedDate":"2023-01-27"},{"lineNumber":147,"author":{"gitId":"clement559"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":148,"author":{"gitId":"clement559"},"content":"            else if (line.equals(\"bye\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":149,"author":{"gitId":"clement559"},"content":"                break;","lastModifiedDate":"2023-01-26"},{"lineNumber":150,"author":{"gitId":"clement559"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":151,"author":{"gitId":"clement559"},"content":"            else {","lastModifiedDate":"2023-01-26"},{"lineNumber":152,"author":{"gitId":"clement559"},"content":"                identifyInput(line, lists);","lastModifiedDate":"2023-02-15"},{"lineNumber":153,"author":{"gitId":"clement559"},"content":"                Storage.saveDataFromInput(FILE_DIRECTORY, FILE_NAME, lists);","lastModifiedDate":"2023-02-16"},{"lineNumber":154,"author":{"gitId":"clement559"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":155,"author":{"gitId":"clement559"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":156,"author":{"gitId":"clement559"},"content":"        printExiting();","lastModifiedDate":"2023-02-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":3,"clement559":155}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clement559"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"clement559"},"content":"    public DukeException () {","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"clement559"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"clement559":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clement559"},"content":"public class Event extends Task {","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"clement559"},"content":"    String start; String end;","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"clement559"},"content":"    String taskDescription;","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"clement559"},"content":"    public Event (String taskDescription, String start, String end) {","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"clement559"},"content":"        super(taskDescription + \" (from: \" + start + \" to: \" + end + \")\");","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"clement559"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"clement559"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"clement559"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"clement559"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"clement559"},"content":"    public String getTypeIcon() {","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"clement559"},"content":"        return \"[E]\";","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"clement559"},"content":"    @Override","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"clement559"},"content":"    public String toSaveString(String... taskParameters) {","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"clement559"},"content":"        return super.toSaveString(\"E\", isDone ? \"1\" : \"0\", taskDescription, start, end);","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"clement559"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"clement559":20}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clement559"},"content":"import java.io.File;","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"clement559"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"clement559"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"clement559"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"clement559"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"clement559"},"content":"import java.util.StringJoiner;","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"clement559"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"clement559"},"content":"public class Storage {","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"clement559"},"content":"    public static void readDukeFile(ArrayList\u003cTask\u003e lists, String filePath, String fileName) throws FileNotFoundException {","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"clement559"},"content":"        try {","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"clement559"},"content":"            File dukeText \u003d new File(filePath + \"/\" + fileName);","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"clement559"},"content":"            Scanner s \u003d new Scanner(dukeText);","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"clement559"},"content":"            System.out.println(\"Duke file has been found. Reading now.\");","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"clement559"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"clement559"},"content":"                String line \u003d s.nextLine();","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"clement559"},"content":"                String[] inputLines \u003d line.split(\"\\\\|\");","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"clement559"},"content":"                registerDukeFileTasks(lists, inputLines);","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"clement559"},"content":"            }","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"clement559"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"clement559"},"content":"            File directory \u003d new File(filePath);","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"clement559"},"content":"            if (!directory.exists()) {","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"clement559"},"content":"                directory.mkdir();","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"clement559"},"content":"                System.out.println(\"New directory has been made.\");","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"clement559"},"content":"            }","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"clement559"},"content":"            System.out.println(\"File does not yet exist. Please provide some data to be written to the file.\");","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"clement559"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"clement559"},"content":"    public static void registerDukeFileTasks (ArrayList\u003cTask\u003e lists, String[] inputLines) {","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"clement559"},"content":"        String type \u003d inputLines[0].strip();","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"clement559"},"content":"        boolean isDone \u003d (inputLines[1].equals(\"1\")) ? true : false;","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"clement559"},"content":"        if (type.equals(\"T\")) {","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"clement559"},"content":"            String description \u003d inputLines[2];","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"clement559"},"content":"            lists.add(new Todo(description));","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"clement559"},"content":"        } else if (type.equals(\"D\")) {","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"clement559"},"content":"            String description \u003d inputLines[2];","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"clement559"},"content":"            String deadline \u003d inputLines[3].strip();","lastModifiedDate":"2023-02-16"},{"lineNumber":39,"author":{"gitId":"clement559"},"content":"            lists.add(new Deadline(description, deadline));","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"clement559"},"content":"        } else if (type.equals(\"E\")) {","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"clement559"},"content":"            String description \u003d inputLines[2];","lastModifiedDate":"2023-02-16"},{"lineNumber":42,"author":{"gitId":"clement559"},"content":"            String start \u003d inputLines[3];","lastModifiedDate":"2023-02-16"},{"lineNumber":43,"author":{"gitId":"clement559"},"content":"            String end \u003d inputLines[4];","lastModifiedDate":"2023-02-16"},{"lineNumber":44,"author":{"gitId":"clement559"},"content":"            lists.add(new Event(description, start, end));","lastModifiedDate":"2023-02-16"},{"lineNumber":45,"author":{"gitId":"clement559"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":46,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":47,"author":{"gitId":"clement559"},"content":"        if (isDone) {","lastModifiedDate":"2023-02-16"},{"lineNumber":48,"author":{"gitId":"clement559"},"content":"            lists.get(lists.size() - 1).markAsDone();","lastModifiedDate":"2023-02-16"},{"lineNumber":49,"author":{"gitId":"clement559"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":50,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":51,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":52,"author":{"gitId":"clement559"},"content":"    public static void saveDataFromInput(String filePath, String fileName, ArrayList\u003cTask\u003e lists) {","lastModifiedDate":"2023-02-16"},{"lineNumber":53,"author":{"gitId":"clement559"},"content":"        try {","lastModifiedDate":"2023-02-16"},{"lineNumber":54,"author":{"gitId":"clement559"},"content":"            String formattedDescriptions \u003d convertTaskDescriptionForSaving(lists);","lastModifiedDate":"2023-02-16"},{"lineNumber":55,"author":{"gitId":"clement559"},"content":"            Storage.writeToDukeFile(filePath, fileName, formattedDescriptions);","lastModifiedDate":"2023-02-16"},{"lineNumber":56,"author":{"gitId":"clement559"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-16"},{"lineNumber":57,"author":{"gitId":"clement559"},"content":"            System.out.println(\"Something went wrong with saving your data.\");","lastModifiedDate":"2023-02-16"},{"lineNumber":58,"author":{"gitId":"clement559"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":59,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":60,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":61,"author":{"gitId":"clement559"},"content":"    public static String convertTaskDescriptionForSaving (ArrayList\u003cTask\u003e lists) {","lastModifiedDate":"2023-02-16"},{"lineNumber":62,"author":{"gitId":"clement559"},"content":"        StringJoiner joinedTasksString \u003d new StringJoiner(System.lineSeparator());","lastModifiedDate":"2023-02-16"},{"lineNumber":63,"author":{"gitId":"clement559"},"content":"        for (int i \u003d 0; i \u003c lists.size(); i++) {","lastModifiedDate":"2023-02-16"},{"lineNumber":64,"author":{"gitId":"clement559"},"content":"            joinedTasksString.add(lists.get(i).toSaveString());","lastModifiedDate":"2023-02-16"},{"lineNumber":65,"author":{"gitId":"clement559"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":66,"author":{"gitId":"clement559"},"content":"        return joinedTasksString.toString();","lastModifiedDate":"2023-02-16"},{"lineNumber":67,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":68,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":69,"author":{"gitId":"clement559"},"content":"    private static void writeToDukeFile(String filePath, String fileName, String textToAdd) throws IOException {","lastModifiedDate":"2023-02-16"},{"lineNumber":70,"author":{"gitId":"clement559"},"content":"        FileWriter fw \u003d new FileWriter(filePath + \"/\" + fileName);","lastModifiedDate":"2023-02-16"},{"lineNumber":71,"author":{"gitId":"clement559"},"content":"        fw.write(textToAdd);","lastModifiedDate":"2023-02-16"},{"lineNumber":72,"author":{"gitId":"clement559"},"content":"        fw.close();","lastModifiedDate":"2023-02-16"},{"lineNumber":73,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":74,"author":{"gitId":"clement559"},"content":"}","lastModifiedDate":"2023-02-16"},{"lineNumber":75,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"clement559":75}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clement559"},"content":"import java.util.StringJoiner;","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"clement559"},"content":"public class Task {","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"clement559"},"content":"    public static final String LINE_BREAK \u003d \"---------------------------------------------\";","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"clement559"},"content":"    protected String description;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"clement559"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"clement559"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"clement559"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"clement559"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"clement559"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"clement559"},"content":"        return (isDone ? \"[X] \" : \"[ ] \"); // mark done task with X","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"clement559"},"content":"    public String getTypeIcon() {","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"clement559"},"content":"        return \"[]\";","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"clement559"},"content":"    public void printTask(int itemNumber) {","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"clement559"},"content":"        System.out.println(itemNumber + \".\" + this.getTypeIcon() + this.getStatusIcon() + this.description);","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"clement559"},"content":"        System.out.println(LINE_BREAK);","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"clement559"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"clement559"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"clement559"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"clement559"},"content":"        System.out.println(this.getStatusIcon() + this.description);","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"clement559"},"content":"        System.out.println(LINE_BREAK);","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"clement559"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"clement559"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"clement559"},"content":"        System.out.println(\"Ok, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"clement559"},"content":"        System.out.println(this.getStatusIcon() + this.description);","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"clement559"},"content":"        System.out.println(LINE_BREAK);","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"clement559"},"content":"    public String toSaveString(String... taskParameters) {","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"clement559"},"content":"        StringJoiner saveString \u003d new StringJoiner(\"|\");","lastModifiedDate":"2023-02-16"},{"lineNumber":42,"author":{"gitId":"clement559"},"content":"        for (String string : taskParameters) {","lastModifiedDate":"2023-02-16"},{"lineNumber":43,"author":{"gitId":"clement559"},"content":"            saveString.add(string);","lastModifiedDate":"2023-02-16"},{"lineNumber":44,"author":{"gitId":"clement559"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":45,"author":{"gitId":"clement559"},"content":"        return saveString.toString();","lastModifiedDate":"2023-02-16"},{"lineNumber":46,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":47,"author":{"gitId":"clement559"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"clement559":47}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clement559"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"clement559"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"clement559"},"content":"        super(description);","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"clement559"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"clement559"},"content":"    public String getTypeIcon() {","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"clement559"},"content":"        return \"[T]\";","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"clement559"},"content":"    @Override","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"clement559"},"content":"    public String toSaveString(String... taskParameters) {","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"clement559"},"content":"        return super.toSaveString(\"T\", isDone ? \"1\" : \"0\", description);","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"clement559"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"clement559":15}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"clement559"},"content":"todo read book","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"clement559"},"content":"event reading event /from 29th Dec /to 30th Dec","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"clement559"},"content":"deadline return book /by 1st Jan","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"clement559"},"content":"list","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"clement559":4}}]
