[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"clement559"},"content":"# Duke Project","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"3. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"-":23,"clement559":1}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clement559"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"clement559"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"clement559"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"clement559"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"clement559"},"content":"import duke.util.Parser;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"clement559"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"clement559"},"content":"import duke.command.Command;","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"clement559"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"clement559"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"clement559"},"content":"    private static Storage storage;","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"clement559"},"content":"    private static TaskList tasks;","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"clement559"},"content":"    private static Ui ui;","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"clement559"},"content":"    private static Parser parser;","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"clement559"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"clement559"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"clement559"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"clement559"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"clement559"},"content":"        try {","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"clement559"},"content":"            tasks \u003d new TaskList(storage.readDukeFile());","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"clement559"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"clement559"},"content":"            ui.printLoadingError();","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"clement559"},"content":"            storage.makeDukeDataDirectory();","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"clement559"},"content":"            tasks \u003d new TaskList(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"clement559"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"clement559"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"clement559"},"content":"     * Takes in user inputs from the command line.","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"clement559"},"content":"     * Program is exited if isExit is true.","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"clement559"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"clement559"},"content":"    public static void run() throws DukeException {","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"clement559"},"content":"        ui.printIntro();","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"clement559"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"clement559"},"content":"        while (!isExit) {","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"clement559"},"content":"            String fullCommand \u003d parser.getInput();","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"clement559"},"content":"            ui.printLine(); // show the divider line (\"_______\")","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"clement559"},"content":"            Command c \u003d parser.processInput(fullCommand, tasks);","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"clement559"},"content":"            c.run(tasks);","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"clement559"},"content":"            storage.saveDataFromInput(tasks.lists);","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"clement559"},"content":"            isExit \u003d c.toExit();","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"clement559"},"content":"            ui.printLine();","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"clement559"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":49,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"clement559"},"content":"    public static void main(String[] args) throws DukeException {","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"clement559"},"content":"        new Duke(\"data/duke.txt\").run();","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"-":3,"clement559":50}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clement559"},"content":"package duke.command;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"clement559"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"clement559"},"content":"public abstract class Command {","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"clement559"},"content":"    public abstract void run (TaskList taskList);","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"clement559"},"content":"    public boolean toExit() {","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"clement559"},"content":"        return false;","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"clement559"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"clement559":12}},{"path":"src/main/java/duke/command/CreateDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clement559"},"content":"package duke.command;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"clement559"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"clement559"},"content":"import duke.task.Task;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"clement559"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"clement559"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"clement559"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"clement559"},"content":" * A \u003ccode\u003eCreateDeadlineCommand\u003c/code\u003e object takes care of the creation of new Deadline tasks.","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"clement559"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"clement559"},"content":"public class CreateDeadlineCommand extends Command {","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"clement559"},"content":"    private String description;","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"clement559"},"content":"    private String deadline;","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"clement559"},"content":"    public CreateDeadlineCommand(String line) throws IndexOutOfBoundsException {","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"clement559"},"content":"        try {","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"clement559"},"content":"            String[] inputLines \u003d line.split(\" \", 2);","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"clement559"},"content":"            inputLines \u003d inputLines[1].split(\" /by \");","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"clement559"},"content":"            description \u003d inputLines[0];","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"clement559"},"content":"            deadline \u003d inputLines[1];","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"clement559"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"clement559"},"content":"            System.out.println(\"Your deadline must be of the following format: deadline (deadline name) /by (date)\");","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"clement559"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"clement559"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"clement559"},"content":"     * Register a deadline task. Prints to the terminal to signal the","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"clement559"},"content":"     * completion of adding the task.","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"clement559"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"clement559"},"content":"     * @param taskList List to store all tasks.","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"clement559"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"clement559"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"clement559"},"content":"    public void run(TaskList taskList) {","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"clement559"},"content":"        Task item \u003d new Deadline(description, deadline);","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"clement559"},"content":"        taskList.lists.add(item);","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"clement559"},"content":"        Ui.printAddTask(item);","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"clement559"},"content":"        Ui.printListSize(taskList.lists.size());","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"clement559"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"clement559":39}},{"path":"src/main/java/duke/command/CreateEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clement559"},"content":"package duke.command;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"clement559"},"content":"import duke.task.Event;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"clement559"},"content":"import duke.task.Task;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"clement559"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"clement559"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"clement559"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"clement559"},"content":" * A \u003ccode\u003eCreateEventCommand\u003c/code\u003e object takes care of the creation of new Event tasks.","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"clement559"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"clement559"},"content":"public class CreateEventCommand extends Command {","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"clement559"},"content":"    private String description;","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"clement559"},"content":"    private String start;","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"clement559"},"content":"    private String end;","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"clement559"},"content":"    public CreateEventCommand(String line) throws IndexOutOfBoundsException {","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"clement559"},"content":"        try {","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"clement559"},"content":"            String[] inputLines \u003d line.split(\" \", 2);","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"clement559"},"content":"            inputLines \u003d inputLines[1].split(\" /from \");","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"clement559"},"content":"            description \u003d inputLines[0];","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"clement559"},"content":"            inputLines \u003d inputLines[1].split(\" /to \");","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"clement559"},"content":"            start \u003d inputLines[0];","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"clement559"},"content":"            end \u003d inputLines[1];","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"clement559"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"clement559"},"content":"            System.out.println(\"Your deadline must be of the following format: deadline (deadline name) /by (date)\");","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"clement559"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"clement559"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"clement559"},"content":"     * Register an event task. Prints to the terminal to signal the","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"clement559"},"content":"     * completion of adding the task.","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"clement559"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"clement559"},"content":"     * @param taskList List to store all tasks.","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"clement559"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"clement559"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"clement559"},"content":"    public void run(TaskList taskList) {","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"clement559"},"content":"        Task item \u003d new Event(description, start, end);","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"clement559"},"content":"        taskList.lists.add(item);","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"clement559"},"content":"        Ui.printAddTask(item);","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"clement559"},"content":"        Ui.printListSize(taskList.lists.size());","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"clement559"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"clement559":43}},{"path":"src/main/java/duke/command/CreateTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clement559"},"content":"package duke.command;public class CreateTaskCommand {","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"clement559"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"clement559":2}},{"path":"src/main/java/duke/command/CreateTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clement559"},"content":"package duke.command;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"clement559"},"content":"import duke.task.Task;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"clement559"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"clement559"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"clement559"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"clement559"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"clement559"},"content":" * A \u003ccode\u003eCreateTodoCommand\u003c/code\u003e object takes care of the creation of new Todo tasks.","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"clement559"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"clement559"},"content":"public class CreateTodoCommand extends Command {","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"clement559"},"content":"    private String description;","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"clement559"},"content":"    public CreateTodoCommand(String line) throws IndexOutOfBoundsException {","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"clement559"},"content":"        try {","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"clement559"},"content":"            String[] inputLines \u003d line.split(\" \", 2);","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"clement559"},"content":"            description \u003d inputLines[1];","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"clement559"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"clement559"},"content":"            System.out.println(\"Your deadline must be of the following format: deadline (deadline name) /by (date)\");","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"clement559"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"clement559"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"clement559"},"content":"     * Register a to-do task. Prints to the terminal to signal the","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"clement559"},"content":"     * completion of adding the task.","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"clement559"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"clement559"},"content":"     * @param taskList List to store all tasks.","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"clement559"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"clement559"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"clement559"},"content":"    public void run(TaskList taskList) {","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"clement559"},"content":"        Task item \u003d new Todo(description);","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"clement559"},"content":"        taskList.lists.add(item);","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"clement559"},"content":"        Ui.printAddTask(item);","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"clement559"},"content":"        Ui.printListSize(taskList.lists.size());","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"clement559"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"clement559":36}},{"path":"src/main/java/duke/command/DeleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clement559"},"content":"package duke.command;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"clement559"},"content":"import duke.task.Task;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"clement559"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"clement559"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"clement559"},"content":"public class DeleteTaskCommand extends Command {","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"clement559"},"content":"    private int index;","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"clement559"},"content":"    public DeleteTaskCommand (String line) {","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"clement559"},"content":"            String[] words \u003d line.split(\" \");","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"clement559"},"content":"            int itemNumber \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"clement559"},"content":"            index \u003d itemNumber - 1;","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"clement559"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"clement559"},"content":"     * Deletes task at the specified position.","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"clement559"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"clement559"},"content":"     * @param taskList List to store all tasks.","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"clement559"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"clement559"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"clement559"},"content":"    public void run(TaskList taskList) {","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"clement559"},"content":"        Task item \u003d taskList.lists.get(index);","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"clement559"},"content":"        Ui.printRemoveTask(item);","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"clement559"},"content":"        taskList.lists.remove(index);","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"clement559"},"content":"        Ui.printListSize(taskList.lists.size());","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"clement559"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"clement559":28}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clement559"},"content":"package duke.command;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"clement559"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"clement559"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"clement559"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"clement559"},"content":" * A \u003ccode\u003eExitCommand\u003c/code\u003e object takes care of the exit sequence of Duke.","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"clement559"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"clement559"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"clement559"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"clement559"},"content":"    public void run(TaskList taskList) {","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"clement559"},"content":"        Ui.printExiting();","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"clement559"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"clement559"},"content":"    public boolean toExit() {","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"clement559"},"content":"        return true;","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"clement559"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"clement559":20}},{"path":"src/main/java/duke/command/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clement559"},"content":"package duke.command;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"clement559"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"clement559"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"clement559"},"content":" * A \u003ccode\u003eInvalidCommand\u003c/code\u003e object takes care of the processing of invalid commands.","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"clement559"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"clement559"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"clement559"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"clement559"},"content":"    public void run(TaskList taskList) {","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"clement559"},"content":"        System.out.println(\"I am not a chat bot, please do not chat to me.\");","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"clement559"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"clement559"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"clement559":13}},{"path":"src/main/java/duke/command/ListTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clement559"},"content":"package duke.command;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"clement559"},"content":"import duke.task.Task;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"clement559"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"clement559"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"clement559"},"content":" * A \u003ccode\u003eListCommand\u003c/code\u003e object takes care of the listing of all tasks recorded within Duke.","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"clement559"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"clement559"},"content":"public class ListTaskCommand extends Command {","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"clement559"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"clement559"},"content":"     * Lists all task recorded in the given list.","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"clement559"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"clement559"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"clement559"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"clement559"},"content":"    public void run(TaskList taskList) {","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"clement559"},"content":"            System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"clement559"},"content":"            int itemNumber \u003d 1;","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"clement559"},"content":"            for (Task item : taskList.lists) {","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"clement559"},"content":"                if ((itemNumber - 1) \u003d\u003d taskList.lists.size()) {","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"clement559"},"content":"                    break;","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"clement559"},"content":"                }","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"clement559"},"content":"                item.printTask(itemNumber);","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"clement559"},"content":"                itemNumber++;","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"clement559"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"clement559"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"clement559":28}},{"path":"src/main/java/duke/command/MarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clement559"},"content":"package duke.command;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"clement559"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"clement559"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"clement559"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"clement559"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"clement559"},"content":" * A \u003ccode\u003eMarkTaskCommand\u003c/code\u003e object takes care of the marking/un-marking of specified tasks.","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"clement559"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"clement559"},"content":"public class MarkTaskCommand extends Command {","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"clement559"},"content":"    private static Ui ui;","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"clement559"},"content":"    private String action;","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"clement559"},"content":"    private int itemNumber;","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"clement559"},"content":"    public MarkTaskCommand (String line, TaskList taskList) throws IndexOutOfBoundsException {","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"clement559"},"content":"        try {","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"clement559"},"content":"            String[] words \u003d line.split(\" \");","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"clement559"},"content":"            itemNumber \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"clement559"},"content":"            if (line.startsWith(\"mark\")) {","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"clement559"},"content":"                action \u003d \"mark\";","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"clement559"},"content":"            } else if (line.startsWith(\"unmark\")) {","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"clement559"},"content":"                action \u003d \"unmark\";","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"clement559"},"content":"            }","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"clement559"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"clement559"},"content":"            ui.printError();","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"clement559"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"clement559"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"clement559"},"content":"     * Marks/unmarks task at the specified position.","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"clement559"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"clement559"},"content":"     * @param taskList List to store all tasks.","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"clement559"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"clement559"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"clement559"},"content":"    public void run(TaskList taskList)  {","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"clement559"},"content":"        if (action.equals(\"mark\")) {","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"clement559"},"content":"            taskList.lists.get(itemNumber - 1).markAsDone();","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"clement559"},"content":"        } else if (action.equals(\"unmark\")) {","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"clement559"},"content":"            taskList.lists.get(itemNumber - 1).markAsUndone();","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"clement559"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"clement559"},"content":"        Storage.saveDataFromInput(taskList.lists);","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"clement559"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"clement559":44}},{"path":"src/main/java/duke/command/SearchCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clement559"},"content":"package duke.command;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"clement559"},"content":"import duke.task.Task;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"clement559"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"clement559"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"clement559"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"clement559"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"clement559"},"content":" * A \u003ccode\u003eSearchCommand\u003c/code\u003e object takes care of the searching and returning of tasks related to the","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"clement559"},"content":" * search term provided.","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"clement559"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"clement559"},"content":"public class SearchCommand extends Command {","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"clement559"},"content":"    private String searchTerm;","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"clement559"},"content":"    private ArrayList\u003cTask\u003e searchResults \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"clement559"},"content":"    public SearchCommand (String line) throws IndexOutOfBoundsException {","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"clement559"},"content":"        try {","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"clement559"},"content":"            String[] words \u003d line.split(\" \", 2);","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"clement559"},"content":"            searchTerm \u003d words[1];","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"clement559"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"clement559"},"content":"            System.out.println(\"You must include a search term for your search.\");","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"clement559"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"clement559"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"clement559"},"content":"     * Searches through list given and checks for those with descriptions matching search terms.","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"clement559"},"content":"     * Appends all relevant search results to searchResults.","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"clement559"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"clement559"},"content":"     * @param taskList List to store all tasks.","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"clement559"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"clement559"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"clement559"},"content":"    public void run(TaskList taskList)  {","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"clement559"},"content":"        for (Task item : taskList.lists) {","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"clement559"},"content":"            if (item.description.contains(searchTerm)) {","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"clement559"},"content":"                searchResults.add(item);","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"clement559"},"content":"            }","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"clement559"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"clement559"},"content":"        Ui.printSearchResults(searchResults);","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"clement559"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"clement559":41}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clement559"},"content":"package duke.exception;","lastModifiedDate":"2023-02-24"},{"lineNumber":2,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"clement559"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"clement559"},"content":"    public DukeException () {","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"clement559"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"clement559":7}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clement559"},"content":"package duke.task;","lastModifiedDate":"2023-02-24"},{"lineNumber":2,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"clement559"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"clement559"},"content":"    String deadline;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"clement559"},"content":"    String taskDescription;","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"clement559"},"content":"    public Deadline (String taskDescription, String deadline) {","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"clement559"},"content":"        super(taskDescription + \" (by: \" + deadline + \")\");","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"clement559"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"clement559"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"clement559"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"clement559"},"content":"    public String getTypeIcon() {","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"clement559"},"content":"        return \"[D]\";","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"clement559"},"content":"    @Override","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"clement559"},"content":"    public String toSaveString(String... taskParameters) {","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"clement559"},"content":"        return super.toSaveString(\"D\", isDone ? \"1\" : \"0\", taskDescription, deadline);","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"clement559"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"clement559":21}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clement559"},"content":"package duke.task;","lastModifiedDate":"2023-02-24"},{"lineNumber":2,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"clement559"},"content":"public class Event extends Task {","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"clement559"},"content":"    String start; String end;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"clement559"},"content":"    String taskDescription;","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"clement559"},"content":"    public Event (String taskDescription, String start, String end) {","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"clement559"},"content":"        super(taskDescription + \" (from: \" + start + \" to: \" + end + \")\");","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"clement559"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"clement559"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"clement559"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"clement559"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"clement559"},"content":"    public String getTypeIcon() {","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"clement559"},"content":"        return \"[E]\";","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"clement559"},"content":"    @Override","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"clement559"},"content":"    public String toSaveString(String... taskParameters) {","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"clement559"},"content":"        return super.toSaveString(\"E\", isDone ? \"1\" : \"0\", taskDescription, start, end);","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"clement559"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"clement559":22}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clement559"},"content":"package duke.task;","lastModifiedDate":"2023-02-24"},{"lineNumber":2,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"clement559"},"content":"import java.util.StringJoiner;","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"clement559"},"content":"/**","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"clement559"},"content":" * Represents a task element to be in the list. A \u003ccode\u003eTask\u003c/code\u003e object corresponds to","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"clement559"},"content":" * any of these 3 types of tasks. (To-do, Deadline, Event)","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"clement559"},"content":" */","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"clement559"},"content":"public class Task {","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"clement559"},"content":"    public static final String LINE_BREAK \u003d \"---------------------------------------------\";","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"clement559"},"content":"    public String description;","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"clement559"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"clement559"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"clement559"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"clement559"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"clement559"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"clement559"},"content":"        return (isDone ? \"[X] \" : \"[ ] \"); // mark done task with X","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"clement559"},"content":"    public String getTypeIcon() {","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"clement559"},"content":"        return \"[]\";","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"clement559"},"content":"    public void printTask(int itemNumber) {","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"clement559"},"content":"        System.out.println(itemNumber + \".\" + this.getTypeIcon() + this.getStatusIcon() + this.description);","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"clement559"},"content":"        System.out.println(LINE_BREAK);","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"clement559"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"clement559"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"clement559"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"clement559"},"content":"        System.out.println(this.getStatusIcon() + this.description);","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"clement559"},"content":"        System.out.println(LINE_BREAK);","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"clement559"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"clement559"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"clement559"},"content":"        System.out.println(\"Ok, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"clement559"},"content":"        System.out.println(this.getStatusIcon() + this.description);","lastModifiedDate":"2023-02-16"},{"lineNumber":43,"author":{"gitId":"clement559"},"content":"        System.out.println(LINE_BREAK);","lastModifiedDate":"2023-02-08"},{"lineNumber":44,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":46,"author":{"gitId":"clement559"},"content":"    public String toSaveString(String... taskParameters) {","lastModifiedDate":"2023-02-16"},{"lineNumber":47,"author":{"gitId":"clement559"},"content":"        StringJoiner saveString \u003d new StringJoiner(\"|\");","lastModifiedDate":"2023-02-16"},{"lineNumber":48,"author":{"gitId":"clement559"},"content":"        for (String string : taskParameters) {","lastModifiedDate":"2023-02-16"},{"lineNumber":49,"author":{"gitId":"clement559"},"content":"            saveString.add(string);","lastModifiedDate":"2023-02-16"},{"lineNumber":50,"author":{"gitId":"clement559"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":51,"author":{"gitId":"clement559"},"content":"        return saveString.toString();","lastModifiedDate":"2023-02-16"},{"lineNumber":52,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":53,"author":{"gitId":"clement559"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"clement559":53}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clement559"},"content":"package duke.task;","lastModifiedDate":"2023-02-24"},{"lineNumber":2,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"clement559"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"clement559"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"clement559"},"content":"        super(description);","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"clement559"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"clement559"},"content":"    public String getTypeIcon() {","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"clement559"},"content":"        return \"[T]\";","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"clement559"},"content":"    @Override","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"clement559"},"content":"    public String toSaveString(String... taskParameters) {","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"clement559"},"content":"        return super.toSaveString(\"T\", isDone ? \"1\" : \"0\", description);","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"clement559"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"clement559":17}},{"path":"src/main/java/duke/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clement559"},"content":"package duke.util;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"clement559"},"content":"import duke.command.*;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"clement559"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"clement559"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"clement559"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"clement559"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"clement559"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"clement559"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"clement559"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"clement559"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"clement559"},"content":"/**","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"clement559"},"content":" * A \u003ccode\u003eParser\u003c/code\u003e object takes care of the processing of user","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"clement559"},"content":" * inputs and registering tasks from any pre-existing Duke files.","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"clement559"},"content":" */","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"clement559"},"content":"public class Parser {","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"clement559"},"content":"    private static Ui ui;","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"clement559"},"content":"    private static boolean isExit \u003d false;","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"clement559"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"clement559"},"content":"     * Checks for input from user via command line.","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"clement559"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"clement559"},"content":"     * @return String containing user input.","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"clement559"},"content":"     * @throws NoSuchElementException when program is closed.","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"clement559"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"clement559"},"content":"    public static String getInput() throws NoSuchElementException {","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"clement559"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"clement559"},"content":"        String line \u003d \"\";","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"clement559"},"content":"        try {","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"clement559"},"content":"            line \u003d in.nextLine();","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"clement559"},"content":"        } catch (NoSuchElementException e) {","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"clement559"},"content":"            ui.printExiting();","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"clement559"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"clement559"},"content":"        return line;","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"clement559"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"clement559"},"content":"     * Processes input from user given by ui function.","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"clement559"},"content":"     * Calls different functions based on the given commands.","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"clement559"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"clement559"},"content":"     * @param line String containing user input","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"clement559"},"content":"     * @throws DukeException If no keywords are found.","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"clement559"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"clement559"},"content":"    public static Command processInput(String line, TaskList taskList) {","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"clement559"},"content":"        if (line.startsWith(\"todo\")) {","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"clement559"},"content":"            return(new CreateTodoCommand(line));","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"clement559"},"content":"        } else if (line.startsWith(\"deadline\")) {","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"clement559"},"content":"            return(new CreateDeadlineCommand(line));","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"clement559"},"content":"        } else if (line.startsWith(\"event\")) {","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"clement559"},"content":"            return(new CreateEventCommand(line));","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"clement559"},"content":"        } else if (line.startsWith(\"list\")) {","lastModifiedDate":"2023-02-26"},{"lineNumber":54,"author":{"gitId":"clement559"},"content":"            return(new ListTaskCommand());","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"clement559"},"content":"        } else if (line.startsWith(\"mark\") || line.startsWith(\"unmark\")) {","lastModifiedDate":"2023-03-01"},{"lineNumber":56,"author":{"gitId":"clement559"},"content":"            return(new MarkTaskCommand(line, taskList));","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"clement559"},"content":"        } else if (line.startsWith(\"delete\")) {","lastModifiedDate":"2023-03-01"},{"lineNumber":58,"author":{"gitId":"clement559"},"content":"            return(new DeleteTaskCommand(line));","lastModifiedDate":"2023-03-01"},{"lineNumber":59,"author":{"gitId":"clement559"},"content":"        }else if (line.startsWith(\"find\")) {","lastModifiedDate":"2023-02-26"},{"lineNumber":60,"author":{"gitId":"clement559"},"content":"            return(new SearchCommand(line));","lastModifiedDate":"2023-03-01"},{"lineNumber":61,"author":{"gitId":"clement559"},"content":"        } else if (line.equals(\"bye\")) {","lastModifiedDate":"2023-02-26"},{"lineNumber":62,"author":{"gitId":"clement559"},"content":"            return(new ExitCommand());","lastModifiedDate":"2023-03-01"},{"lineNumber":63,"author":{"gitId":"clement559"},"content":"        } else {","lastModifiedDate":"2023-02-26"},{"lineNumber":64,"author":{"gitId":"clement559"},"content":"            return (new InvalidCommand());","lastModifiedDate":"2023-03-01"},{"lineNumber":65,"author":{"gitId":"clement559"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":66,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":67,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":68,"author":{"gitId":"clement559"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":69,"author":{"gitId":"clement559"},"content":"     * Registers task found in pre-existing Duke data file on system.","lastModifiedDate":"2023-02-26"},{"lineNumber":70,"author":{"gitId":"clement559"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":71,"author":{"gitId":"clement559"},"content":"     * @param lists List to store all tasks.","lastModifiedDate":"2023-02-26"},{"lineNumber":72,"author":{"gitId":"clement559"},"content":"     * @param inputLines Divided strings from user input","lastModifiedDate":"2023-02-26"},{"lineNumber":73,"author":{"gitId":"clement559"},"content":"     * @return List containing all tasks.","lastModifiedDate":"2023-02-26"},{"lineNumber":74,"author":{"gitId":"clement559"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":75,"author":{"gitId":"clement559"},"content":"    public static ArrayList\u003cTask\u003e registerDukeFileTasks (ArrayList\u003cTask\u003e lists, String[] inputLines) {","lastModifiedDate":"2023-02-26"},{"lineNumber":76,"author":{"gitId":"clement559"},"content":"        String type \u003d inputLines[0].strip();","lastModifiedDate":"2023-02-26"},{"lineNumber":77,"author":{"gitId":"clement559"},"content":"        boolean isDone \u003d (inputLines[1].equals(\"1\")) ? true : false;","lastModifiedDate":"2023-02-26"},{"lineNumber":78,"author":{"gitId":"clement559"},"content":"        if (type.equals(\"T\")) {","lastModifiedDate":"2023-02-26"},{"lineNumber":79,"author":{"gitId":"clement559"},"content":"            String description \u003d inputLines[2];","lastModifiedDate":"2023-02-26"},{"lineNumber":80,"author":{"gitId":"clement559"},"content":"            lists.add(new Todo(description));","lastModifiedDate":"2023-02-26"},{"lineNumber":81,"author":{"gitId":"clement559"},"content":"        } else if (type.equals(\"D\")) {","lastModifiedDate":"2023-02-26"},{"lineNumber":82,"author":{"gitId":"clement559"},"content":"            String description \u003d inputLines[2];","lastModifiedDate":"2023-02-26"},{"lineNumber":83,"author":{"gitId":"clement559"},"content":"            String deadline \u003d inputLines[3].strip();","lastModifiedDate":"2023-02-26"},{"lineNumber":84,"author":{"gitId":"clement559"},"content":"            lists.add(new Deadline(description, deadline));","lastModifiedDate":"2023-02-26"},{"lineNumber":85,"author":{"gitId":"clement559"},"content":"        } else if (type.equals(\"E\")) {","lastModifiedDate":"2023-02-26"},{"lineNumber":86,"author":{"gitId":"clement559"},"content":"            String description \u003d inputLines[2];","lastModifiedDate":"2023-02-26"},{"lineNumber":87,"author":{"gitId":"clement559"},"content":"            String start \u003d inputLines[3];","lastModifiedDate":"2023-02-26"},{"lineNumber":88,"author":{"gitId":"clement559"},"content":"            String end \u003d inputLines[4];","lastModifiedDate":"2023-02-26"},{"lineNumber":89,"author":{"gitId":"clement559"},"content":"            lists.add(new Event(description, start, end));","lastModifiedDate":"2023-02-26"},{"lineNumber":90,"author":{"gitId":"clement559"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":91,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":92,"author":{"gitId":"clement559"},"content":"        if (isDone) {","lastModifiedDate":"2023-02-26"},{"lineNumber":93,"author":{"gitId":"clement559"},"content":"            lists.get(lists.size() - 1).markAsDone();","lastModifiedDate":"2023-02-26"},{"lineNumber":94,"author":{"gitId":"clement559"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":95,"author":{"gitId":"clement559"},"content":"        return lists;","lastModifiedDate":"2023-02-26"},{"lineNumber":96,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":97,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":98,"author":{"gitId":"clement559"},"content":"    public static boolean toExit() {","lastModifiedDate":"2023-02-26"},{"lineNumber":99,"author":{"gitId":"clement559"},"content":"        return isExit;","lastModifiedDate":"2023-02-26"},{"lineNumber":100,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":101,"author":{"gitId":"clement559"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"clement559":101}},{"path":"src/main/java/duke/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clement559"},"content":"package duke.util;","lastModifiedDate":"2023-02-24"},{"lineNumber":2,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"clement559"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"clement559"},"content":"import java.io.File;","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"clement559"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"clement559"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"clement559"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"clement559"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"clement559"},"content":"import java.util.StringJoiner;","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"clement559"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"clement559"},"content":"/**","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"clement559"},"content":" * A \u003ccode\u003eStorage\u003c/code\u003e object takes care of the reading and","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"clement559"},"content":" * writing of the current task list into the exported file.","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"clement559"},"content":" */","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"clement559"},"content":"public class Storage {","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"clement559"},"content":"    private static String filePath;","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"clement559"},"content":"    private static String fileFolder;","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"clement559"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"clement559"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"clement559"},"content":"        String[] splitPath \u003d filePath.split(\"/\", 2);","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"clement559"},"content":"        fileFolder \u003d splitPath[0];","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"clement559"},"content":"    public static ArrayList\u003cTask\u003e readDukeFile() throws FileNotFoundException {","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"clement559"},"content":"        File dukeText \u003d new File(filePath);","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"clement559"},"content":"        Scanner s \u003d new Scanner(dukeText);","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"clement559"},"content":"        ArrayList\u003cTask\u003e lists \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"clement559"},"content":"        System.out.println(\"Duke file has been found. Reading now.\");","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"clement559"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"clement559"},"content":"            String line \u003d s.nextLine();","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"clement559"},"content":"            String[] inputLines \u003d line.split(\"\\\\|\");","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"clement559"},"content":"            Parser.registerDukeFileTasks(lists, inputLines);","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"clement559"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"clement559"},"content":"        return lists;","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"clement559"},"content":"    public static void makeDukeDataDirectory() {","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"clement559"},"content":"        File directory \u003d new File(fileFolder);","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"clement559"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2023-02-16"},{"lineNumber":42,"author":{"gitId":"clement559"},"content":"            directory.mkdir();","lastModifiedDate":"2023-02-16"},{"lineNumber":43,"author":{"gitId":"clement559"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":44,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":45,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":46,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":47,"author":{"gitId":"clement559"},"content":"    public static void saveDataFromInput(ArrayList\u003cTask\u003e lists) {","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"clement559"},"content":"        try {","lastModifiedDate":"2023-02-16"},{"lineNumber":49,"author":{"gitId":"clement559"},"content":"            String formattedDescriptions \u003d convertTaskDescriptionForSaving(lists);","lastModifiedDate":"2023-02-16"},{"lineNumber":50,"author":{"gitId":"clement559"},"content":"            Storage.writeToDukeFile(formattedDescriptions);","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"clement559"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-16"},{"lineNumber":52,"author":{"gitId":"clement559"},"content":"            System.out.println(\"Something went wrong with saving your data.\");","lastModifiedDate":"2023-02-16"},{"lineNumber":53,"author":{"gitId":"clement559"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":54,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":55,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":56,"author":{"gitId":"clement559"},"content":"    public static String convertTaskDescriptionForSaving (ArrayList\u003cTask\u003e lists) {","lastModifiedDate":"2023-02-16"},{"lineNumber":57,"author":{"gitId":"clement559"},"content":"        StringJoiner joinedTasksString \u003d new StringJoiner(System.lineSeparator());","lastModifiedDate":"2023-02-16"},{"lineNumber":58,"author":{"gitId":"clement559"},"content":"        for (int i \u003d 0; i \u003c lists.size(); i++) {","lastModifiedDate":"2023-02-16"},{"lineNumber":59,"author":{"gitId":"clement559"},"content":"            joinedTasksString.add(lists.get(i).toSaveString());","lastModifiedDate":"2023-02-16"},{"lineNumber":60,"author":{"gitId":"clement559"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":61,"author":{"gitId":"clement559"},"content":"        return joinedTasksString.toString();","lastModifiedDate":"2023-02-16"},{"lineNumber":62,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":63,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":64,"author":{"gitId":"clement559"},"content":"    private static void writeToDukeFile(String textToAdd) throws IOException {","lastModifiedDate":"2023-02-26"},{"lineNumber":65,"author":{"gitId":"clement559"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2023-02-26"},{"lineNumber":66,"author":{"gitId":"clement559"},"content":"        fw.write(textToAdd);","lastModifiedDate":"2023-02-16"},{"lineNumber":67,"author":{"gitId":"clement559"},"content":"        fw.close();","lastModifiedDate":"2023-02-16"},{"lineNumber":68,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":69,"author":{"gitId":"clement559"},"content":"}","lastModifiedDate":"2023-02-16"},{"lineNumber":70,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"clement559":70}},{"path":"src/main/java/duke/util/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clement559"},"content":"package duke.util;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"clement559"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"clement559"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"clement559"},"content":"/**","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"clement559"},"content":" * A \u003ccode\u003eTaskList\u003c/code\u003e object contains the ArrayList of tasks from","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"clement559"},"content":" * user inputs. Handles the deletion of items and searching of list.","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"clement559"},"content":" */","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"clement559"},"content":"public class TaskList {","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"clement559"},"content":"    public static ArrayList\u003cTask\u003e lists;","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"clement559"},"content":"    private Ui ui;","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"clement559"},"content":"    public TaskList (ArrayList\u003cTask\u003e lists) {","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"clement559"},"content":"        this.lists \u003d lists;","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"clement559"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"clement559":18}},{"path":"src/main/java/duke/util/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clement559"},"content":"package duke.util;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"clement559"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"clement559"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"clement559"},"content":"/**","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"clement559"},"content":" * A \u003ccode\u003eUI\u003c/code\u003e object takes care of the printing of statuses","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"clement559"},"content":" * and results after each operation is performed.","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"clement559"},"content":" */","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"clement559"},"content":"public class Ui {","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"clement559"},"content":"    public Ui() {","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"clement559"},"content":"    public static final String LINE_BREAK \u003d \"---------------------------------------------\";","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"clement559"},"content":"    public static void printLine() {","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"clement559"},"content":"        System.out.println(LINE_BREAK);","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"clement559"},"content":"    public static void printAddTask(Task item) {","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"clement559"},"content":"        System.out.println(\"Got it. I\u0027ve added this task: \" + item.getTypeIcon()","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"clement559"},"content":"                + item.getStatusIcon() + item.description);","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"clement559"},"content":"    public static void printRemoveTask(Task item) {","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"clement559"},"content":"        System.out.println(\"Got it. I\u0027ve removed this task: \" + item.getTypeIcon()","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"clement559"},"content":"                + item.getStatusIcon() + item.description);","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"clement559"},"content":"    public static void printListSize(int size) {","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"clement559"},"content":"        System.out.println(\"Now you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"clement559"},"content":"    public static void printIntro() {","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"clement559"},"content":"        System.out.println(LINE_BREAK);","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"clement559"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"clement559"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"clement559"},"content":"        printLine();","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"clement559"},"content":"    public static void printExiting() {","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"clement559"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"clement559"},"content":"    public static void printError() {","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"clement559"},"content":"        System.out.println(\"You chose a task that does not exist!\");","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":49,"author":{"gitId":"clement559"},"content":"    public static void printLoadingError() {","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"clement559"},"content":"        System.out.println(\"New directory has been made. Please provide some data to be written to the file.\");","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":53,"author":{"gitId":"clement559"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":54,"author":{"gitId":"clement559"},"content":"     * Prints all search results collated in ArrayList searchResults.","lastModifiedDate":"2023-02-26"},{"lineNumber":55,"author":{"gitId":"clement559"},"content":"     * If empty, only end line is printed.","lastModifiedDate":"2023-02-26"},{"lineNumber":56,"author":{"gitId":"clement559"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":57,"author":{"gitId":"clement559"},"content":"     * @param searchResults ArrayList containing all related search results.","lastModifiedDate":"2023-02-26"},{"lineNumber":58,"author":{"gitId":"clement559"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":59,"author":{"gitId":"clement559"},"content":"    public static void printSearchResults(ArrayList\u003cTask\u003e searchResults) {","lastModifiedDate":"2023-02-26"},{"lineNumber":60,"author":{"gitId":"clement559"},"content":"        int itemNumber \u003d 1;","lastModifiedDate":"2023-02-26"},{"lineNumber":61,"author":{"gitId":"clement559"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-02-26"},{"lineNumber":62,"author":{"gitId":"clement559"},"content":"        for (Task item : searchResults) {","lastModifiedDate":"2023-02-26"},{"lineNumber":63,"author":{"gitId":"clement559"},"content":"            System.out.println(itemNumber + \". \" + item.getTypeIcon()","lastModifiedDate":"2023-02-26"},{"lineNumber":64,"author":{"gitId":"clement559"},"content":"                    + item.getStatusIcon() + item.description);","lastModifiedDate":"2023-02-26"},{"lineNumber":65,"author":{"gitId":"clement559"},"content":"            itemNumber++;","lastModifiedDate":"2023-02-26"},{"lineNumber":66,"author":{"gitId":"clement559"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":67,"author":{"gitId":"clement559"},"content":"        printLine();","lastModifiedDate":"2023-02-26"},{"lineNumber":68,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":69,"author":{"gitId":"clement559"},"content":"}","lastModifiedDate":"2023-02-26"},{"lineNumber":70,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"clement559":70}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"clement559"},"content":"todo read book","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"clement559"},"content":"event reading event /from 29th Dec /to 30th Dec","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"clement559"},"content":"deadline return book /by 1st Jan","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"clement559"},"content":"list","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"clement559":4}}]
