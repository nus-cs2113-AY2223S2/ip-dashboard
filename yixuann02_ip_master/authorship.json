[{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yixuann02"},"content":"package duke;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"yixuann02"},"content":"import duke.command.Deadline;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"yixuann02"},"content":"import duke.command.Event;","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"yixuann02"},"content":"import duke.command.Todo;","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"yixuann02"},"content":"import duke.exception.IllegalCommandException;","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"yixuann02"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"yixuann02"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"yixuann02"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"yixuann02"},"content":"    public static final String LINE_BREAK \u003d \"    ____________________________________________________________\";","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"yixuann02"},"content":"    public static final String INDENTATION \u003d \"    \";","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"yixuann02"},"content":"    public static final String HELP_PAGE \u003d \"    todo: add a new task to Duke\\n\" +","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"yixuann02"},"content":"            \"    deadline: add a new task and \u0027/by\u0027 date to add a task with deadline\\n\" +","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"yixuann02"},"content":"            \"    event: add a new event with \u0027/from\u0027 and \u0027/to\u0027 duration\\n\" +","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"yixuann02"},"content":"            \"    list: list out all tasks stored\\n\" +","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"yixuann02"},"content":"            \"    help: no :D\\n    bye: end the program\\n    Please enter command:\\n\";","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"yixuann02"},"content":"        System.out.println(LINE_BREAK);","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"yixuann02"},"content":"        printlnWithIndentation(\"Hello! I\u0027m Duke\");","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"yixuann02"},"content":"        printlnWithIndentation(\"What can I do for you?\");","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"yixuann02"},"content":"        System.out.println(LINE_BREAK);","lastModifiedDate":"2023-02-06"},{"lineNumber":29,"author":{"gitId":"yixuann02"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"yixuann02"},"content":"        String userInput;","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"yixuann02"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"yixuann02"},"content":"        while (true) {","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"yixuann02"},"content":"            userInput \u003d in.nextLine();","lastModifiedDate":"2023-02-06"},{"lineNumber":34,"author":{"gitId":"yixuann02"},"content":"            String[] inputLine \u003d userInput.split(\" \", 2);","lastModifiedDate":"2023-02-06"},{"lineNumber":35,"author":{"gitId":"yixuann02"},"content":"            String command \u003d inputLine[0];","lastModifiedDate":"2023-02-06"},{"lineNumber":36,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":37,"author":{"gitId":"yixuann02"},"content":"            if (command.equals(\"bye\")) {","lastModifiedDate":"2023-02-06"},{"lineNumber":38,"author":{"gitId":"yixuann02"},"content":"                System.out.println(LINE_BREAK);","lastModifiedDate":"2023-02-06"},{"lineNumber":39,"author":{"gitId":"yixuann02"},"content":"                printlnWithIndentation(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-02-06"},{"lineNumber":40,"author":{"gitId":"yixuann02"},"content":"                System.out.println(LINE_BREAK);","lastModifiedDate":"2023-02-06"},{"lineNumber":41,"author":{"gitId":"yixuann02"},"content":"                // exit while loop and end program","lastModifiedDate":"2023-02-06"},{"lineNumber":42,"author":{"gitId":"yixuann02"},"content":"                break;","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"yixuann02"},"content":"            } else if (command.equals(\"list\")) {","lastModifiedDate":"2023-02-14"},{"lineNumber":44,"author":{"gitId":"yixuann02"},"content":"                // list out the tasks and status","lastModifiedDate":"2023-02-06"},{"lineNumber":45,"author":{"gitId":"yixuann02"},"content":"                if (tasks.isEmpty()) {","lastModifiedDate":"2023-02-15"},{"lineNumber":46,"author":{"gitId":"yixuann02"},"content":"                    // empty list -\u003e print help","lastModifiedDate":"2023-02-15"},{"lineNumber":47,"author":{"gitId":"yixuann02"},"content":"                    printException(\"There is nothing in your list right now.\");","lastModifiedDate":"2023-02-15"},{"lineNumber":48,"author":{"gitId":"yixuann02"},"content":"                } else {","lastModifiedDate":"2023-02-15"},{"lineNumber":49,"author":{"gitId":"yixuann02"},"content":"                    System.out.println(LINE_BREAK);","lastModifiedDate":"2023-02-06"},{"lineNumber":50,"author":{"gitId":"yixuann02"},"content":"                    printlnWithIndentation(\"Here are the tasks in your list: \");","lastModifiedDate":"2023-02-06"},{"lineNumber":51,"author":{"gitId":"yixuann02"},"content":"                    for (int i \u003d 0; i \u003c tasks.size(); ++i) {","lastModifiedDate":"2023-02-15"},{"lineNumber":52,"author":{"gitId":"yixuann02"},"content":"                        int taskNumber \u003d i + 1;","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"yixuann02"},"content":"                        System.out.println(INDENTATION + taskNumber + \".\" +","lastModifiedDate":"2023-02-06"},{"lineNumber":54,"author":{"gitId":"yixuann02"},"content":"                                tasks.get(i).toString());","lastModifiedDate":"2023-02-15"},{"lineNumber":55,"author":{"gitId":"yixuann02"},"content":"                    }","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"yixuann02"},"content":"                    System.out.println(LINE_BREAK);","lastModifiedDate":"2023-02-06"},{"lineNumber":57,"author":{"gitId":"yixuann02"},"content":"                }","lastModifiedDate":"2023-02-15"},{"lineNumber":58,"author":{"gitId":"yixuann02"},"content":"                continue;","lastModifiedDate":"2023-02-14"},{"lineNumber":59,"author":{"gitId":"yixuann02"},"content":"            }","lastModifiedDate":"2023-02-14"},{"lineNumber":60,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":61,"author":{"gitId":"yixuann02"},"content":"            try {","lastModifiedDate":"2023-02-14"},{"lineNumber":62,"author":{"gitId":"yixuann02"},"content":"                switch (command) {","lastModifiedDate":"2023-02-14"},{"lineNumber":63,"author":{"gitId":"yixuann02"},"content":"                case \"delete\":","lastModifiedDate":"2023-02-15"},{"lineNumber":64,"author":{"gitId":"yixuann02"},"content":"                    deleteTask(tasks, inputLine);","lastModifiedDate":"2023-02-15"},{"lineNumber":65,"author":{"gitId":"yixuann02"},"content":"                    break;","lastModifiedDate":"2023-02-15"},{"lineNumber":66,"author":{"gitId":"yixuann02"},"content":"                case \"mark\":","lastModifiedDate":"2023-02-14"},{"lineNumber":67,"author":{"gitId":"yixuann02"},"content":"                    markTask(tasks, inputLine);","lastModifiedDate":"2023-02-15"},{"lineNumber":68,"author":{"gitId":"yixuann02"},"content":"                    break;","lastModifiedDate":"2023-02-14"},{"lineNumber":69,"author":{"gitId":"yixuann02"},"content":"                case \"unmark\":","lastModifiedDate":"2023-02-14"},{"lineNumber":70,"author":{"gitId":"yixuann02"},"content":"                    unmarkTask(tasks, inputLine);","lastModifiedDate":"2023-02-15"},{"lineNumber":71,"author":{"gitId":"yixuann02"},"content":"                    break;","lastModifiedDate":"2023-02-06"},{"lineNumber":72,"author":{"gitId":"yixuann02"},"content":"                case \"todo\":","lastModifiedDate":"2023-02-06"},{"lineNumber":73,"author":{"gitId":"yixuann02"},"content":"                    // command todo","lastModifiedDate":"2023-02-06"},{"lineNumber":74,"author":{"gitId":"yixuann02"},"content":"                    makeTodo(tasks, inputLine);","lastModifiedDate":"2023-02-15"},{"lineNumber":75,"author":{"gitId":"yixuann02"},"content":"                    break;","lastModifiedDate":"2023-02-06"},{"lineNumber":76,"author":{"gitId":"yixuann02"},"content":"                case \"deadline\":","lastModifiedDate":"2023-02-06"},{"lineNumber":77,"author":{"gitId":"yixuann02"},"content":"                    makeDeadline(tasks, inputLine);","lastModifiedDate":"2023-02-15"},{"lineNumber":78,"author":{"gitId":"yixuann02"},"content":"                    break;","lastModifiedDate":"2023-02-06"},{"lineNumber":79,"author":{"gitId":"yixuann02"},"content":"                case \"event\":","lastModifiedDate":"2023-02-06"},{"lineNumber":80,"author":{"gitId":"yixuann02"},"content":"                    makeEvent(tasks, inputLine);","lastModifiedDate":"2023-02-15"},{"lineNumber":81,"author":{"gitId":"yixuann02"},"content":"                    break;","lastModifiedDate":"2023-02-06"},{"lineNumber":82,"author":{"gitId":"yixuann02"},"content":"                case \"help\":","lastModifiedDate":"2023-02-06"},{"lineNumber":83,"author":{"gitId":"yixuann02"},"content":"                    System.out.println(HELP_PAGE);","lastModifiedDate":"2023-02-06"},{"lineNumber":84,"author":{"gitId":"yixuann02"},"content":"                    break;","lastModifiedDate":"2023-02-06"},{"lineNumber":85,"author":{"gitId":"yixuann02"},"content":"                default:","lastModifiedDate":"2023-02-06"},{"lineNumber":86,"author":{"gitId":"yixuann02"},"content":"                    throw new IllegalCommandException(command);","lastModifiedDate":"2023-02-14"},{"lineNumber":87,"author":{"gitId":"yixuann02"},"content":"                }","lastModifiedDate":"2023-02-14"},{"lineNumber":88,"author":{"gitId":"yixuann02"},"content":"            } catch (IllegalCommandException e) {","lastModifiedDate":"2023-02-14"},{"lineNumber":89,"author":{"gitId":"yixuann02"},"content":"                printException(\"INVALID COMMAND!\");","lastModifiedDate":"2023-02-15"},{"lineNumber":90,"author":{"gitId":"yixuann02"},"content":"            }","lastModifiedDate":"2023-02-15"},{"lineNumber":91,"author":{"gitId":"yixuann02"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":92,"author":{"gitId":"yixuann02"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":93,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":94,"author":{"gitId":"yixuann02"},"content":"    private static void printException(String string) {","lastModifiedDate":"2023-02-15"},{"lineNumber":95,"author":{"gitId":"yixuann02"},"content":"        System.out.println(LINE_BREAK);","lastModifiedDate":"2023-02-15"},{"lineNumber":96,"author":{"gitId":"yixuann02"},"content":"        printlnWithIndentation(string);","lastModifiedDate":"2023-02-15"},{"lineNumber":97,"author":{"gitId":"yixuann02"},"content":"        System.out.println(HELP_PAGE + LINE_BREAK);","lastModifiedDate":"2023-02-15"},{"lineNumber":98,"author":{"gitId":"yixuann02"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":99,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":100,"author":{"gitId":"yixuann02"},"content":"    private static void makeEvent(ArrayList\u003cTask\u003e tasks, String[] inputLine) {","lastModifiedDate":"2023-02-15"},{"lineNumber":101,"author":{"gitId":"yixuann02"},"content":"        try {","lastModifiedDate":"2023-02-14"},{"lineNumber":102,"author":{"gitId":"yixuann02"},"content":"            String action \u003d inputLine[1];","lastModifiedDate":"2023-02-14"},{"lineNumber":103,"author":{"gitId":"yixuann02"},"content":"            if (action.contains(\"/from\") \u0026 action.contains(\"/to\")) {","lastModifiedDate":"2023-02-14"},{"lineNumber":104,"author":{"gitId":"yixuann02"},"content":"                int fromIndex \u003d action.indexOf(\"/from\");","lastModifiedDate":"2023-02-14"},{"lineNumber":105,"author":{"gitId":"yixuann02"},"content":"                int toIndex \u003d action.indexOf(\"/to\");","lastModifiedDate":"2023-02-14"},{"lineNumber":106,"author":{"gitId":"yixuann02"},"content":"                String toAddEvent \u003d action.substring(0, fromIndex - 1);","lastModifiedDate":"2023-02-14"},{"lineNumber":107,"author":{"gitId":"yixuann02"},"content":"                String fromTime \u003d action.substring(fromIndex + 5, toIndex - 1);","lastModifiedDate":"2023-02-14"},{"lineNumber":108,"author":{"gitId":"yixuann02"},"content":"                String toTime \u003d action.substring(toIndex + 3);","lastModifiedDate":"2023-02-14"},{"lineNumber":109,"author":{"gitId":"yixuann02"},"content":"                toAddEvent \u003d toAddEvent.trim();","lastModifiedDate":"2023-02-14"},{"lineNumber":110,"author":{"gitId":"yixuann02"},"content":"                fromTime \u003d fromTime.trim();","lastModifiedDate":"2023-02-14"},{"lineNumber":111,"author":{"gitId":"yixuann02"},"content":"                toTime \u003d toTime.trim();","lastModifiedDate":"2023-02-14"},{"lineNumber":112,"author":{"gitId":"yixuann02"},"content":"                Event addEvent \u003d new Event(toAddEvent, fromTime, toTime);","lastModifiedDate":"2023-02-14"},{"lineNumber":113,"author":{"gitId":"yixuann02"},"content":"                tasks.add(addEvent);","lastModifiedDate":"2023-02-15"},{"lineNumber":114,"author":{"gitId":"yixuann02"},"content":"                System.out.println(LINE_BREAK);","lastModifiedDate":"2023-02-06"},{"lineNumber":115,"author":{"gitId":"yixuann02"},"content":"                printlnWithIndentation(\"Got it. I\u0027ve added this task: \");","lastModifiedDate":"2023-02-06"},{"lineNumber":116,"author":{"gitId":"yixuann02"},"content":"                System.out.println(INDENTATION + \"  \" + addEvent);","lastModifiedDate":"2023-02-15"},{"lineNumber":117,"author":{"gitId":"yixuann02"},"content":"                printTaskCount(tasks);","lastModifiedDate":"2023-02-15"},{"lineNumber":118,"author":{"gitId":"yixuann02"},"content":"            } else {","lastModifiedDate":"2023-02-14"},{"lineNumber":119,"author":{"gitId":"yixuann02"},"content":"                throw new IllegalCommandException(action);","lastModifiedDate":"2023-02-14"},{"lineNumber":120,"author":{"gitId":"yixuann02"},"content":"            }","lastModifiedDate":"2023-02-14"},{"lineNumber":121,"author":{"gitId":"yixuann02"},"content":"        } catch (IllegalCommandException e) {","lastModifiedDate":"2023-02-14"},{"lineNumber":122,"author":{"gitId":"yixuann02"},"content":"            printException(\"INVALID COMMAND! Missing \u0027/from\u0027 or \u0027/to\u0027\");","lastModifiedDate":"2023-02-15"},{"lineNumber":123,"author":{"gitId":"yixuann02"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-14"},{"lineNumber":124,"author":{"gitId":"yixuann02"},"content":"            printException(\"event cannot be empty\");","lastModifiedDate":"2023-02-15"},{"lineNumber":125,"author":{"gitId":"yixuann02"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":126,"author":{"gitId":"yixuann02"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":127,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":128,"author":{"gitId":"yixuann02"},"content":"    private static void printTaskCount(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-15"},{"lineNumber":129,"author":{"gitId":"yixuann02"},"content":"        // print out the number of task user has","lastModifiedDate":"2023-02-15"},{"lineNumber":130,"author":{"gitId":"yixuann02"},"content":"        System.out.println(INDENTATION + \"Now you have \" + tasks.size() + \" tasks in the list. \\n\" + LINE_BREAK);","lastModifiedDate":"2023-02-15"},{"lineNumber":131,"author":{"gitId":"yixuann02"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":132,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":133,"author":{"gitId":"yixuann02"},"content":"    private static void makeDeadline(ArrayList\u003cTask\u003e tasks, String[] inputLine) {","lastModifiedDate":"2023-02-15"},{"lineNumber":134,"author":{"gitId":"yixuann02"},"content":"        try {","lastModifiedDate":"2023-02-14"},{"lineNumber":135,"author":{"gitId":"yixuann02"},"content":"            String action \u003d inputLine[1];","lastModifiedDate":"2023-02-14"},{"lineNumber":136,"author":{"gitId":"yixuann02"},"content":"            if (action.contains(\"/by\")) {","lastModifiedDate":"2023-02-14"},{"lineNumber":137,"author":{"gitId":"yixuann02"},"content":"                int byIndex \u003d action.indexOf(\"/by\");","lastModifiedDate":"2023-02-14"},{"lineNumber":138,"author":{"gitId":"yixuann02"},"content":"                String toAddDeadline \u003d action.substring(0, byIndex - 1);","lastModifiedDate":"2023-02-14"},{"lineNumber":139,"author":{"gitId":"yixuann02"},"content":"                String by \u003d action.substring(byIndex + 3);","lastModifiedDate":"2023-02-14"},{"lineNumber":140,"author":{"gitId":"yixuann02"},"content":"                toAddDeadline \u003d toAddDeadline.trim();","lastModifiedDate":"2023-02-03"},{"lineNumber":141,"author":{"gitId":"yixuann02"},"content":"                by \u003d by.trim();","lastModifiedDate":"2023-02-03"},{"lineNumber":142,"author":{"gitId":"yixuann02"},"content":"                Deadline addDeadline \u003d new Deadline(toAddDeadline, by);","lastModifiedDate":"2023-02-06"},{"lineNumber":143,"author":{"gitId":"yixuann02"},"content":"                tasks.add(addDeadline);","lastModifiedDate":"2023-02-15"},{"lineNumber":144,"author":{"gitId":"yixuann02"},"content":"                System.out.println(LINE_BREAK);","lastModifiedDate":"2023-02-06"},{"lineNumber":145,"author":{"gitId":"yixuann02"},"content":"                printlnWithIndentation(\"Got it. I\u0027ve added this task: \");","lastModifiedDate":"2023-02-06"},{"lineNumber":146,"author":{"gitId":"yixuann02"},"content":"                System.out.println(INDENTATION + \"  \" + addDeadline);","lastModifiedDate":"2023-02-15"},{"lineNumber":147,"author":{"gitId":"yixuann02"},"content":"                printTaskCount(tasks);","lastModifiedDate":"2023-02-15"},{"lineNumber":148,"author":{"gitId":"yixuann02"},"content":"            } else {","lastModifiedDate":"2023-02-06"},{"lineNumber":149,"author":{"gitId":"yixuann02"},"content":"                throw new IllegalCommandException(action);","lastModifiedDate":"2023-02-14"},{"lineNumber":150,"author":{"gitId":"yixuann02"},"content":"            }","lastModifiedDate":"2023-02-14"},{"lineNumber":151,"author":{"gitId":"yixuann02"},"content":"        } catch (IllegalCommandException e) {","lastModifiedDate":"2023-02-14"},{"lineNumber":152,"author":{"gitId":"yixuann02"},"content":"            printException(\"INVALID COMMAND! Missing \u0027/by\u0027\");","lastModifiedDate":"2023-02-15"},{"lineNumber":153,"author":{"gitId":"yixuann02"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-14"},{"lineNumber":154,"author":{"gitId":"yixuann02"},"content":"            printException(\"deadline cannot be empty\");","lastModifiedDate":"2023-02-15"},{"lineNumber":155,"author":{"gitId":"yixuann02"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":156,"author":{"gitId":"yixuann02"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":157,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":158,"author":{"gitId":"yixuann02"},"content":"    private static void makeTodo(ArrayList\u003cTask\u003e tasks, String[] inputLine) {","lastModifiedDate":"2023-02-15"},{"lineNumber":159,"author":{"gitId":"yixuann02"},"content":"        try {","lastModifiedDate":"2023-02-14"},{"lineNumber":160,"author":{"gitId":"yixuann02"},"content":"            String action \u003d inputLine[1];","lastModifiedDate":"2023-02-14"},{"lineNumber":161,"author":{"gitId":"yixuann02"},"content":"            action \u003d action.trim();","lastModifiedDate":"2023-02-14"},{"lineNumber":162,"author":{"gitId":"yixuann02"},"content":"            Todo addTodo \u003d new Todo(action);","lastModifiedDate":"2023-02-14"},{"lineNumber":163,"author":{"gitId":"yixuann02"},"content":"            tasks.add(addTodo);","lastModifiedDate":"2023-02-15"},{"lineNumber":164,"author":{"gitId":"yixuann02"},"content":"            System.out.println(LINE_BREAK);","lastModifiedDate":"2023-02-06"},{"lineNumber":165,"author":{"gitId":"yixuann02"},"content":"            printlnWithIndentation(\"Got it. I\u0027ve added this task: \");","lastModifiedDate":"2023-02-06"},{"lineNumber":166,"author":{"gitId":"yixuann02"},"content":"            System.out.println(INDENTATION + \"  \" + addTodo);","lastModifiedDate":"2023-02-15"},{"lineNumber":167,"author":{"gitId":"yixuann02"},"content":"            printTaskCount(tasks);","lastModifiedDate":"2023-02-15"},{"lineNumber":168,"author":{"gitId":"yixuann02"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-14"},{"lineNumber":169,"author":{"gitId":"yixuann02"},"content":"            printException(\"todo cannot be empty\");","lastModifiedDate":"2023-02-15"},{"lineNumber":170,"author":{"gitId":"yixuann02"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":171,"author":{"gitId":"yixuann02"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":172,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":173,"author":{"gitId":"yixuann02"},"content":"    private static void unmarkTask(ArrayList\u003cTask\u003e tasks, String[] inputLine) {","lastModifiedDate":"2023-02-15"},{"lineNumber":174,"author":{"gitId":"yixuann02"},"content":"        try {","lastModifiedDate":"2023-02-14"},{"lineNumber":175,"author":{"gitId":"yixuann02"},"content":"            String action \u003d inputLine[1];","lastModifiedDate":"2023-02-14"},{"lineNumber":176,"author":{"gitId":"yixuann02"},"content":"            action \u003d action.trim();","lastModifiedDate":"2023-02-14"},{"lineNumber":177,"author":{"gitId":"yixuann02"},"content":"            int indexToMark \u003d Integer.parseInt(action) - 1;","lastModifiedDate":"2023-02-14"},{"lineNumber":178,"author":{"gitId":"yixuann02"},"content":"            tasks.get(indexToMark).setDone(false);","lastModifiedDate":"2023-02-15"},{"lineNumber":179,"author":{"gitId":"yixuann02"},"content":"            printlnWithIndentation(\"OK, I\u0027ve marked this task as not done yet: \");","lastModifiedDate":"2023-02-06"},{"lineNumber":180,"author":{"gitId":"yixuann02"},"content":"            System.out.println(INDENTATION + \"  [ ] \" + tasks.get(indexToMark).getTaskDescription() + \u0027\\n\u0027 + LINE_BREAK);","lastModifiedDate":"2023-02-15"},{"lineNumber":181,"author":{"gitId":"yixuann02"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-14"},{"lineNumber":182,"author":{"gitId":"yixuann02"},"content":"            printException(\"unmark cannot be empty\");","lastModifiedDate":"2023-02-15"},{"lineNumber":183,"author":{"gitId":"yixuann02"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":184,"author":{"gitId":"yixuann02"},"content":"            printException(\"Invalid task number! Task number does not exist!\");","lastModifiedDate":"2023-02-15"},{"lineNumber":185,"author":{"gitId":"yixuann02"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":186,"author":{"gitId":"yixuann02"},"content":"            printException(\"Please input numeric number to unmark task!\");","lastModifiedDate":"2023-02-15"},{"lineNumber":187,"author":{"gitId":"yixuann02"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":188,"author":{"gitId":"yixuann02"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":189,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":190,"author":{"gitId":"yixuann02"},"content":"    private static void markTask(ArrayList\u003cTask\u003e tasks, String[] inputLine) {","lastModifiedDate":"2023-02-15"},{"lineNumber":191,"author":{"gitId":"yixuann02"},"content":"        try {","lastModifiedDate":"2023-02-14"},{"lineNumber":192,"author":{"gitId":"yixuann02"},"content":"            String action \u003d inputLine[1];","lastModifiedDate":"2023-02-14"},{"lineNumber":193,"author":{"gitId":"yixuann02"},"content":"            action \u003d action.trim();","lastModifiedDate":"2023-02-14"},{"lineNumber":194,"author":{"gitId":"yixuann02"},"content":"            int indexToMark \u003d Integer.parseInt(action) - 1;","lastModifiedDate":"2023-02-14"},{"lineNumber":195,"author":{"gitId":"yixuann02"},"content":"            tasks.get(indexToMark).setDone(true);","lastModifiedDate":"2023-02-15"},{"lineNumber":196,"author":{"gitId":"yixuann02"},"content":"            printlnWithIndentation(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-02-06"},{"lineNumber":197,"author":{"gitId":"yixuann02"},"content":"            System.out.println(INDENTATION + \"  [X] \" + tasks.get(indexToMark).getTaskDescription() + \u0027\\n\u0027 + LINE_BREAK);","lastModifiedDate":"2023-02-15"},{"lineNumber":198,"author":{"gitId":"yixuann02"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-14"},{"lineNumber":199,"author":{"gitId":"yixuann02"},"content":"            printException(\"mark cannot be empty\");","lastModifiedDate":"2023-02-15"},{"lineNumber":200,"author":{"gitId":"yixuann02"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":201,"author":{"gitId":"yixuann02"},"content":"            printException(\"Invalid task number! Task number does not exist!\");","lastModifiedDate":"2023-02-15"},{"lineNumber":202,"author":{"gitId":"yixuann02"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":203,"author":{"gitId":"yixuann02"},"content":"            printException(\"Please input numeric number to mark task!\");","lastModifiedDate":"2023-02-15"},{"lineNumber":204,"author":{"gitId":"yixuann02"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":205,"author":{"gitId":"yixuann02"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":206,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":207,"author":{"gitId":"yixuann02"},"content":"    private static void deleteTask(ArrayList\u003cTask\u003e tasks, String[] inputLine) {","lastModifiedDate":"2023-02-15"},{"lineNumber":208,"author":{"gitId":"yixuann02"},"content":"        try {","lastModifiedDate":"2023-02-15"},{"lineNumber":209,"author":{"gitId":"yixuann02"},"content":"            String action \u003d inputLine[1];","lastModifiedDate":"2023-02-15"},{"lineNumber":210,"author":{"gitId":"yixuann02"},"content":"            action \u003d action.trim();","lastModifiedDate":"2023-02-15"},{"lineNumber":211,"author":{"gitId":"yixuann02"},"content":"            int indexToDelete \u003d Integer.parseInt(action) - 1;","lastModifiedDate":"2023-02-15"},{"lineNumber":212,"author":{"gitId":"yixuann02"},"content":"            printlnWithIndentation(\"Nice! I\u0027ve deleted this task:\");","lastModifiedDate":"2023-02-15"},{"lineNumber":213,"author":{"gitId":"yixuann02"},"content":"            System.out.println(INDENTATION + tasks.get(indexToDelete).toString() +","lastModifiedDate":"2023-02-15"},{"lineNumber":214,"author":{"gitId":"yixuann02"},"content":"                    \u0027\\n\u0027 + LINE_BREAK);","lastModifiedDate":"2023-02-15"},{"lineNumber":215,"author":{"gitId":"yixuann02"},"content":"            tasks.remove(indexToDelete);","lastModifiedDate":"2023-02-15"},{"lineNumber":216,"author":{"gitId":"yixuann02"},"content":"            printTaskCount(tasks);","lastModifiedDate":"2023-02-15"},{"lineNumber":217,"author":{"gitId":"yixuann02"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":218,"author":{"gitId":"yixuann02"},"content":"            printException(\"delete cannot be empty\");","lastModifiedDate":"2023-02-15"},{"lineNumber":219,"author":{"gitId":"yixuann02"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":220,"author":{"gitId":"yixuann02"},"content":"            printException(\"Invalid task number! Task number does not exist!\");","lastModifiedDate":"2023-02-15"},{"lineNumber":221,"author":{"gitId":"yixuann02"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":222,"author":{"gitId":"yixuann02"},"content":"            printException(\"Please input numeric number to delete task!\");","lastModifiedDate":"2023-02-15"},{"lineNumber":223,"author":{"gitId":"yixuann02"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":224,"author":{"gitId":"yixuann02"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":225,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":226,"author":{"gitId":"yixuann02"},"content":"    static void printlnWithIndentation(String string) {","lastModifiedDate":"2023-02-06"},{"lineNumber":227,"author":{"gitId":"yixuann02"},"content":"        System.out.println(INDENTATION + string);","lastModifiedDate":"2023-02-06"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":229,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":230,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"yixuann02":226,"-":4}},{"path":"src/main/java/duke/command/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yixuann02"},"content":"package duke.command;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"yixuann02"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"yixuann02"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"yixuann02"},"content":"    protected String by;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"yixuann02"},"content":"    public Deadline(String taskDescription, String by) {","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"yixuann02"},"content":"        super(taskDescription);","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"yixuann02"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"yixuann02"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"yixuann02"},"content":"    @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"yixuann02"},"content":"    public String toString() {","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"yixuann02"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"yixuann02"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"yixuann02"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"yixuann02":18}},{"path":"src/main/java/duke/command/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yixuann02"},"content":"package duke.command;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"yixuann02"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"yixuann02"},"content":"public class Event extends Task {","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"yixuann02"},"content":"    protected String from;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"yixuann02"},"content":"    protected String to;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"yixuann02"},"content":"    public Event(String taskDescription, String from, String to) {","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"yixuann02"},"content":"        super(taskDescription);","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"yixuann02"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"yixuann02"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"yixuann02"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"yixuann02"},"content":"    @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"yixuann02"},"content":"    public String toString() {","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"yixuann02"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"yixuann02"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"yixuann02"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"yixuann02":19}},{"path":"src/main/java/duke/command/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yixuann02"},"content":"package duke.command;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"yixuann02"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"yixuann02"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"yixuann02"},"content":"    protected String add;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"yixuann02"},"content":"    public Todo(String taskDescription) {","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"yixuann02"},"content":"        super(taskDescription);","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"yixuann02"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"yixuann02"},"content":"    @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"yixuann02"},"content":"    public String toString() {","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"yixuann02"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"yixuann02"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"yixuann02"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"yixuann02":16}},{"path":"src/main/java/duke/exception/IllegalCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yixuann02"},"content":"package duke.exception;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"yixuann02"},"content":"public class IllegalCommandException extends Exception{","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"yixuann02"},"content":"    public IllegalCommandException(String str){","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"yixuann02"},"content":"        super(str);","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"yixuann02"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"yixuann02"},"content":"}","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"yixuann02":7}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yixuann02"},"content":"package duke.task;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"yixuann02"},"content":"public class Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"yixuann02"},"content":"    protected String taskDescription;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"yixuann02"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"yixuann02"},"content":"    public Task(String taskDescription) {","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"yixuann02"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"yixuann02"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"yixuann02"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"yixuann02"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"yixuann02"},"content":"        // mark task as done with X","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"yixuann02"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"yixuann02"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"yixuann02"},"content":"    // mark and un-mark done","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"yixuann02"},"content":"    // true -\u003e done; false -\u003e not done","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"yixuann02"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"yixuann02"},"content":"        isDone \u003d done;","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"yixuann02"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"yixuann02"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"yixuann02"},"content":"        return isDone;","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"yixuann02"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"yixuann02"},"content":"    public String getTaskDescription() {","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"yixuann02"},"content":"        return taskDescription;","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"yixuann02"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"yixuann02"},"content":"    public void setTaskDescription(String taskDescription) {","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"yixuann02"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"yixuann02"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"yixuann02"},"content":"    public String toString() {","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"yixuann02"},"content":"        return \"[\" + getStatusIcon() + \"] \" + taskDescription;","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"yixuann02"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"yixuann02"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"yixuann02":38}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"yixuann02"},"content":"del ACTUAL.TXT","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"yixuann02":1,"-":20}}]
