[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yixuann02"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"yixuann02"},"content":"    protected String by;","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"yixuann02"},"content":"    public Deadline(String taskDescription, String by) {","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"yixuann02"},"content":"        super(taskDescription);","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"yixuann02"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"yixuann02"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"yixuann02"},"content":"    @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"yixuann02"},"content":"    public String toString() {","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"yixuann02"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"yixuann02"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"yixuann02"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"yixuann02":14}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yixuann02"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"yixuann02"},"content":"    public static final String HORIZONTAL_LINES \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"yixuann02"},"content":"    public static final String INDENTATIONS \u003d \"    \";","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"yixuann02"},"content":"        System.out.println(INDENTATIONS + HORIZONTAL_LINES +","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"yixuann02"},"content":"                INDENTATIONS + \"Hello! I\u0027m Duke\\n\" +","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"yixuann02"},"content":"                INDENTATIONS + \"What can I do for you?\\n\" +","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"yixuann02"},"content":"                INDENTATIONS + HORIZONTAL_LINES);","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"yixuann02"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"yixuann02"},"content":"        String readLine;","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"yixuann02"},"content":"        Task[] tasks \u003d new Task[100];","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"yixuann02"},"content":"        int taskIndex \u003d 0;","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"yixuann02"},"content":"        while(true) {","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"yixuann02"},"content":"            readLine \u003d in.nextLine();","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"yixuann02"},"content":"            if(readLine.equals(\"bye\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"yixuann02"},"content":"                System.out.println(INDENTATIONS + HORIZONTAL_LINES +","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"yixuann02"},"content":"                        INDENTATIONS + \"Bye. Hope to see you again soon!\\n\" +","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"yixuann02"},"content":"                        INDENTATIONS + HORIZONTAL_LINES);","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"yixuann02"},"content":"                break;","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"yixuann02"},"content":"            } else if (readLine.equals(\"list\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"yixuann02"},"content":"                // list out the tasks and status in todo","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"yixuann02"},"content":"                System.out.println(INDENTATIONS + HORIZONTAL_LINES +","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"yixuann02"},"content":"                        INDENTATIONS + \"Here are the tasks in your list: \");","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"yixuann02"},"content":"                for (int i \u003d 0; i \u003c taskIndex; ++i) {","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"yixuann02"},"content":"                    int taskNumber \u003d i+1;","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"yixuann02"},"content":"                    System.out.println(INDENTATIONS + taskNumber + \".\" +","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"yixuann02"},"content":"                            tasks[i].toString());","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"yixuann02"},"content":"                }","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"yixuann02"},"content":"                System.out.println(INDENTATIONS + HORIZONTAL_LINES);","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"yixuann02"},"content":"            } else if (readLine.startsWith(\"mark\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"yixuann02"},"content":"                String toMark \u003d readLine.substring(5);","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"yixuann02"},"content":"                toMark \u003d toMark.trim();","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"yixuann02"},"content":"                int indexToMark \u003d Integer.parseInt(toMark) - 1;","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"yixuann02"},"content":"                tasks[indexToMark].setDone(true);","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"yixuann02"},"content":"                System.out.println(INDENTATIONS + \"Nice! I\u0027ve marked this task as done:\\n\" +","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"yixuann02"},"content":"                        INDENTATIONS + \"  [X] \" + tasks[indexToMark].getTaskDescription() + \u0027\\n\u0027 +","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"yixuann02"},"content":"                        INDENTATIONS + HORIZONTAL_LINES);","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"yixuann02"},"content":"            } else if (readLine.startsWith(\"unmark\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"yixuann02"},"content":"                String toMark \u003d readLine.substring(7);","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"yixuann02"},"content":"                toMark \u003d toMark.trim();","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"yixuann02"},"content":"                int indexToMark \u003d Integer.parseInt(toMark) - 1;","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"yixuann02"},"content":"                tasks[indexToMark].setDone(false);","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"yixuann02"},"content":"                System.out.println(INDENTATIONS + \"OK, I\u0027ve marked this task as not done yet: \\n\" +","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"yixuann02"},"content":"                        INDENTATIONS + \"  [ ] \" + tasks[indexToMark].getTaskDescription() + \u0027\\n\u0027 +","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"yixuann02"},"content":"                        INDENTATIONS + HORIZONTAL_LINES);","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"yixuann02"},"content":"                ","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"yixuann02"},"content":"            }else if (readLine.startsWith(\"todo\")) {","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"yixuann02"},"content":"                // add new tasks into todo","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"yixuann02"},"content":"                String toAdd \u003d readLine.substring(5);","lastModifiedDate":"2023-02-03"},{"lineNumber":58,"author":{"gitId":"yixuann02"},"content":"                toAdd \u003d toAdd.trim();","lastModifiedDate":"2023-02-03"},{"lineNumber":59,"author":{"gitId":"yixuann02"},"content":"                Todo addTodo \u003d new Todo(toAdd);","lastModifiedDate":"2023-02-03"},{"lineNumber":60,"author":{"gitId":"yixuann02"},"content":"                tasks[taskIndex] \u003d addTodo;","lastModifiedDate":"2023-02-03"},{"lineNumber":61,"author":{"gitId":"yixuann02"},"content":"                taskIndex++;","lastModifiedDate":"2023-02-03"},{"lineNumber":62,"author":{"gitId":"yixuann02"},"content":"                System.out.println(INDENTATIONS + HORIZONTAL_LINES +","lastModifiedDate":"2023-02-03"},{"lineNumber":63,"author":{"gitId":"yixuann02"},"content":"                        INDENTATIONS + \"Got it. I\u0027ve added this task: \\n \" +","lastModifiedDate":"2023-02-03"},{"lineNumber":64,"author":{"gitId":"yixuann02"},"content":"                        INDENTATIONS + \"  \" + addTodo.toString() + \u0027\\n\u0027 +","lastModifiedDate":"2023-02-03"},{"lineNumber":65,"author":{"gitId":"yixuann02"},"content":"                        INDENTATIONS + \"Now you have \" + taskIndex + \" tasks in the list. \\n\" +","lastModifiedDate":"2023-02-03"},{"lineNumber":66,"author":{"gitId":"yixuann02"},"content":"                        INDENTATIONS + HORIZONTAL_LINES);","lastModifiedDate":"2023-02-03"},{"lineNumber":67,"author":{"gitId":"yixuann02"},"content":"            } else if (readLine.startsWith(\"deadline\") \u0026 readLine.contains(\"/by\")) {","lastModifiedDate":"2023-02-03"},{"lineNumber":68,"author":{"gitId":"yixuann02"},"content":"                int byIndex \u003d readLine.indexOf(\"/by\");","lastModifiedDate":"2023-02-03"},{"lineNumber":69,"author":{"gitId":"yixuann02"},"content":"                String toAddDeadline \u003d readLine.substring(9, byIndex - 1);","lastModifiedDate":"2023-02-03"},{"lineNumber":70,"author":{"gitId":"yixuann02"},"content":"                String by \u003d readLine.substring(byIndex + 3);","lastModifiedDate":"2023-02-03"},{"lineNumber":71,"author":{"gitId":"yixuann02"},"content":"                toAddDeadline \u003d toAddDeadline.trim();","lastModifiedDate":"2023-02-03"},{"lineNumber":72,"author":{"gitId":"yixuann02"},"content":"                by \u003d by.trim();","lastModifiedDate":"2023-02-03"},{"lineNumber":73,"author":{"gitId":"yixuann02"},"content":"                Deadline addDeadline \u003d new Deadline(toAddDeadline, by); // taskDesc + by","lastModifiedDate":"2023-02-03"},{"lineNumber":74,"author":{"gitId":"yixuann02"},"content":"                tasks[taskIndex] \u003d addDeadline;","lastModifiedDate":"2023-02-03"},{"lineNumber":75,"author":{"gitId":"yixuann02"},"content":"                taskIndex++;","lastModifiedDate":"2023-02-03"},{"lineNumber":76,"author":{"gitId":"yixuann02"},"content":"                System.out.println(INDENTATIONS + HORIZONTAL_LINES +","lastModifiedDate":"2023-02-01"},{"lineNumber":77,"author":{"gitId":"yixuann02"},"content":"                        INDENTATIONS + \"Got it. I\u0027ve added this task: \\n\" +","lastModifiedDate":"2023-02-03"},{"lineNumber":78,"author":{"gitId":"yixuann02"},"content":"                        INDENTATIONS + \"  \" + addDeadline.toString() + \u0027\\n\u0027 +","lastModifiedDate":"2023-02-03"},{"lineNumber":79,"author":{"gitId":"yixuann02"},"content":"                        INDENTATIONS + \"Now you have \" + taskIndex + \" tasks in the list. \\n\" +","lastModifiedDate":"2023-02-03"},{"lineNumber":80,"author":{"gitId":"yixuann02"},"content":"                        INDENTATIONS + HORIZONTAL_LINES);","lastModifiedDate":"2023-02-01"},{"lineNumber":81,"author":{"gitId":"yixuann02"},"content":"            } else if (readLine.startsWith(\"event\") \u0026","lastModifiedDate":"2023-02-03"},{"lineNumber":82,"author":{"gitId":"yixuann02"},"content":"                    readLine.contains(\"/from\") \u0026 readLine.contains(\"/to\")) {","lastModifiedDate":"2023-02-03"},{"lineNumber":83,"author":{"gitId":"yixuann02"},"content":"                int fromIndex \u003d readLine.indexOf(\"/from\");","lastModifiedDate":"2023-02-03"},{"lineNumber":84,"author":{"gitId":"yixuann02"},"content":"                int toIndex \u003d readLine.indexOf(\"/to\");","lastModifiedDate":"2023-02-03"},{"lineNumber":85,"author":{"gitId":"yixuann02"},"content":"                String toAddEvent \u003d readLine.substring(6, fromIndex - 1);","lastModifiedDate":"2023-02-03"},{"lineNumber":86,"author":{"gitId":"yixuann02"},"content":"                String fromTime \u003d readLine.substring(fromIndex + 5, toIndex - 1);","lastModifiedDate":"2023-02-03"},{"lineNumber":87,"author":{"gitId":"yixuann02"},"content":"                String toTime \u003d readLine.substring(toIndex + 3);","lastModifiedDate":"2023-02-03"},{"lineNumber":88,"author":{"gitId":"yixuann02"},"content":"                toAddEvent \u003d toAddEvent.trim();","lastModifiedDate":"2023-02-03"},{"lineNumber":89,"author":{"gitId":"yixuann02"},"content":"                fromTime \u003d fromTime.trim();","lastModifiedDate":"2023-02-03"},{"lineNumber":90,"author":{"gitId":"yixuann02"},"content":"                toTime \u003d toTime.trim();","lastModifiedDate":"2023-02-03"},{"lineNumber":91,"author":{"gitId":"yixuann02"},"content":"                Event addEvent \u003d new Event(toAddEvent, fromTime, toTime);","lastModifiedDate":"2023-02-03"},{"lineNumber":92,"author":{"gitId":"yixuann02"},"content":"                tasks[taskIndex] \u003d addEvent;","lastModifiedDate":"2023-02-03"},{"lineNumber":93,"author":{"gitId":"yixuann02"},"content":"                taskIndex++;","lastModifiedDate":"2023-01-29"},{"lineNumber":94,"author":{"gitId":"yixuann02"},"content":"                System.out.println(INDENTATIONS + HORIZONTAL_LINES +","lastModifiedDate":"2023-02-03"},{"lineNumber":95,"author":{"gitId":"yixuann02"},"content":"                        INDENTATIONS + \"Got it. I\u0027ve added this task: \\n\" +","lastModifiedDate":"2023-02-03"},{"lineNumber":96,"author":{"gitId":"yixuann02"},"content":"                        INDENTATIONS + \"  \" + addEvent.toString() + \u0027\\n\u0027 +","lastModifiedDate":"2023-02-03"},{"lineNumber":97,"author":{"gitId":"yixuann02"},"content":"                        INDENTATIONS + \"Now you have \" + taskIndex + \" tasks in the list. \\n\" +","lastModifiedDate":"2023-02-03"},{"lineNumber":98,"author":{"gitId":"yixuann02"},"content":"                        INDENTATIONS + HORIZONTAL_LINES);","lastModifiedDate":"2023-02-03"},{"lineNumber":99,"author":{"gitId":"yixuann02"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":100,"author":{"gitId":"yixuann02"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":101,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"yixuann02":99,"-":4}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yixuann02"},"content":"public class Event extends Task{","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"yixuann02"},"content":"    protected String from;","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"yixuann02"},"content":"    protected String to;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"yixuann02"},"content":"    public Event(String taskDescription, String from, String to) {","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"yixuann02"},"content":"        super(taskDescription);","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"yixuann02"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"yixuann02"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"yixuann02"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"yixuann02"},"content":"    @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"yixuann02"},"content":"    public String toString() {","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"yixuann02"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"yixuann02"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"yixuann02"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"yixuann02":15}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yixuann02"},"content":"public class Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"yixuann02"},"content":"    protected String taskDescription;","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"yixuann02"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"yixuann02"},"content":"    public Task(String taskDescription) {","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"yixuann02"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"yixuann02"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"yixuann02"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"yixuann02"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"yixuann02"},"content":"        // mark task as done with X","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"yixuann02"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"yixuann02"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"yixuann02"},"content":"    // mark and un-mark done","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"yixuann02"},"content":"    // true -\u003e done; false -\u003e not done","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"yixuann02"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"yixuann02"},"content":"        isDone \u003d done;","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"yixuann02"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"yixuann02"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"yixuann02"},"content":"        return isDone;","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"yixuann02"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"yixuann02"},"content":"    public String getTaskDescription() {","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"yixuann02"},"content":"        return taskDescription;","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"yixuann02"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"yixuann02"},"content":"    public void setTaskDescription(String taskDescription) {","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"yixuann02"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"yixuann02"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"yixuann02"},"content":"    public String toString() {","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"yixuann02"},"content":"        return \"[\" + getStatusIcon() + \"] \" + taskDescription;","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"yixuann02"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"yixuann02"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"yixuann02":36}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yixuann02"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"yixuann02"},"content":"    protected String add;","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"yixuann02"},"content":"    public Todo(String taskDescription) {","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"yixuann02"},"content":"        super(taskDescription);","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"yixuann02"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"yixuann02"},"content":"    @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"yixuann02"},"content":"    public String toString() {","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"yixuann02"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"yixuann02"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"yixuann02"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"yixuann02":12}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"yixuann02"},"content":"del ACTUAL.TXT","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"yixuann02":1,"-":20}}]
