[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MuxPotato"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"MuxPotato"},"content":"    protected String deadline;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"MuxPotato"},"content":"    public Deadline(String taskName, String deadline) {","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"MuxPotato"},"content":"        super(taskName);","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"MuxPotato"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"MuxPotato"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"MuxPotato"},"content":"    public String toString() {","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"MuxPotato"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + deadline + \")\";","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"MuxPotato"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"MuxPotato":13}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MuxPotato"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"MuxPotato"},"content":"import java.sql.Array;","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"MuxPotato"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"MuxPotato"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"MuxPotato"},"content":"import java.io.File;","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"MuxPotato"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"MuxPotato"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"MuxPotato"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"MuxPotato"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"MuxPotato"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"MuxPotato"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"MuxPotato"},"content":"    final static int ZERO_INDEX \u003d 0;","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"MuxPotato"},"content":"    final static int ONE_INDEX \u003d 1;","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"MuxPotato"},"content":"    final static int OFFSET_ONE_FOR_ZERO_INDEXING \u003d 1;","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"MuxPotato"},"content":"    final static int ERROR_NEGATIVE_ONE_RETURNED \u003d -1;","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"MuxPotato"},"content":"    final static String DOUBLE_SPACING \u003d \"  \";","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"MuxPotato"},"content":"    final static String FILE_PATH \u003d \"data/duke.txt\";","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"MuxPotato"},"content":"    final static String DIRECTORY_PATH \u003d \"data\";","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"MuxPotato"},"content":"    final static int TASK_TYPE_INDEX \u003d 0;","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"MuxPotato"},"content":"    final static int TASK_NAME_INDEX \u003d 1;","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"MuxPotato"},"content":"    final static int TASK_IS_DONE_INDEX \u003d 2;","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"MuxPotato"},"content":"    final static int TASK_DEADLINE_INDEX \u003d 3;","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"MuxPotato"},"content":"    final static int TASK_EVENT_START_TIME_INDEX \u003d 3;","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"MuxPotato"},"content":"    final static int TASK_EVENT_END_TIME_INDEX \u003d 4;","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"MuxPotato"},"content":"    final static int EMPTY_FILE \u003d 0;","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"MuxPotato"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"MuxPotato"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"MuxPotato"},"content":"        String userInput;","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"MuxPotato"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"MuxPotato"},"content":"        ArrayList\u003cTask\u003e userTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"MuxPotato"},"content":"        try {","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"MuxPotato"},"content":"            userTasks \u003d retrieveExistingTasksFromFile(FILE_PATH);","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"MuxPotato"},"content":"            System.out.println(\"File Found and successfully read\");","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"MuxPotato"},"content":"            userCommandList(userTasks);","lastModifiedDate":"2023-02-16"},{"lineNumber":39,"author":{"gitId":"MuxPotato"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"MuxPotato"},"content":"            System.out.println(\"File not found\");","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"MuxPotato"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":42,"author":{"gitId":"MuxPotato"},"content":"        Boolean isContinue \u003d true;","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"MuxPotato"},"content":"        while (isContinue) {","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"MuxPotato"},"content":"            userInput \u003d in.nextLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"MuxPotato"},"content":"            userInput \u003d userInput.trim();","lastModifiedDate":"2023-02-09"},{"lineNumber":46,"author":{"gitId":"MuxPotato"},"content":"            String[] userInputWords \u003d userInput.split(\" \");","lastModifiedDate":"2023-02-16"},{"lineNumber":47,"author":{"gitId":"MuxPotato"},"content":"            String userCommandKeyword \u003d userInputWords[ZERO_INDEX];","lastModifiedDate":"2023-02-16"},{"lineNumber":48,"author":{"gitId":"MuxPotato"},"content":"            try {","lastModifiedDate":"2023-02-09"},{"lineNumber":49,"author":{"gitId":"MuxPotato"},"content":"                switch (userCommandKeyword) {","lastModifiedDate":"2023-02-16"},{"lineNumber":50,"author":{"gitId":"MuxPotato"},"content":"                case \"list\":","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"MuxPotato"},"content":"                    userCommandList(userTasks);","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"MuxPotato"},"content":"                    break;","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"MuxPotato"},"content":"                case \"bye\":","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"MuxPotato"},"content":"                    userCommandBye(userTasks);","lastModifiedDate":"2023-02-16"},{"lineNumber":55,"author":{"gitId":"MuxPotato"},"content":"                    isContinue \u003d false;","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"MuxPotato"},"content":"                    break;","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"MuxPotato"},"content":"                case \"mark\":","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"MuxPotato"},"content":"                    userCommandMark(userTasks, userInputWords);","lastModifiedDate":"2023-02-16"},{"lineNumber":59,"author":{"gitId":"MuxPotato"},"content":"                    break;","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"MuxPotato"},"content":"                case \"unmark\":","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"MuxPotato"},"content":"                    userCommandUnmark(userTasks, userInputWords);","lastModifiedDate":"2023-02-16"},{"lineNumber":62,"author":{"gitId":"MuxPotato"},"content":"                    break;","lastModifiedDate":"2023-01-30"},{"lineNumber":63,"author":{"gitId":"MuxPotato"},"content":"                case \"todo\":","lastModifiedDate":"2023-01-30"},{"lineNumber":64,"author":{"gitId":"MuxPotato"},"content":"                    userTasks \u003d userCommandTodo(userTasks, userCommandKeyword, userInput);","lastModifiedDate":"2023-02-16"},{"lineNumber":65,"author":{"gitId":"MuxPotato"},"content":"                    break;","lastModifiedDate":"2023-01-30"},{"lineNumber":66,"author":{"gitId":"MuxPotato"},"content":"                case \"deadline\":","lastModifiedDate":"2023-01-30"},{"lineNumber":67,"author":{"gitId":"MuxPotato"},"content":"                    userTasks \u003d userCommandDeadline(userTasks, userCommandKeyword, userInput);","lastModifiedDate":"2023-02-16"},{"lineNumber":68,"author":{"gitId":"MuxPotato"},"content":"                    break;","lastModifiedDate":"2023-01-30"},{"lineNumber":69,"author":{"gitId":"MuxPotato"},"content":"                case \"event\":","lastModifiedDate":"2023-01-30"},{"lineNumber":70,"author":{"gitId":"MuxPotato"},"content":"                    userTasks \u003d userCommandEvent(userTasks, userCommandKeyword, userInput);","lastModifiedDate":"2023-02-16"},{"lineNumber":71,"author":{"gitId":"MuxPotato"},"content":"                    break;","lastModifiedDate":"2023-02-16"},{"lineNumber":72,"author":{"gitId":"MuxPotato"},"content":"                case \"delete\":","lastModifiedDate":"2023-02-16"},{"lineNumber":73,"author":{"gitId":"MuxPotato"},"content":"                    userTasks \u003d userCommandDelete(userTasks, userInputWords);","lastModifiedDate":"2023-02-16"},{"lineNumber":74,"author":{"gitId":"MuxPotato"},"content":"                    break;","lastModifiedDate":"2023-02-02"},{"lineNumber":75,"author":{"gitId":"MuxPotato"},"content":"                default:","lastModifiedDate":"2023-02-02"},{"lineNumber":76,"author":{"gitId":"MuxPotato"},"content":"                    userCommandDefault();","lastModifiedDate":"2023-02-09"},{"lineNumber":77,"author":{"gitId":"MuxPotato"},"content":"                    break;","lastModifiedDate":"2023-02-02"},{"lineNumber":78,"author":{"gitId":"MuxPotato"},"content":"                }","lastModifiedDate":"2023-02-02"},{"lineNumber":79,"author":{"gitId":"MuxPotato"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":80,"author":{"gitId":"MuxPotato"},"content":"                ;","lastModifiedDate":"2023-02-09"},{"lineNumber":81,"author":{"gitId":"MuxPotato"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-02-16"},{"lineNumber":82,"author":{"gitId":"MuxPotato"},"content":"                System.out.println(\"IO EXCEPTION, Data might be lost\")","lastModifiedDate":"2023-02-16"},{"lineNumber":83,"author":{"gitId":"MuxPotato"},"content":"                ; // nothing for now need to add","lastModifiedDate":"2023-02-16"},{"lineNumber":84,"author":{"gitId":"MuxPotato"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":85,"author":{"gitId":"MuxPotato"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":86,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":87,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":88,"author":{"gitId":"MuxPotato"},"content":"    private static Event getNewEventTask(String userInput, String userCommand) throws DukeException {","lastModifiedDate":"2023-02-09"},{"lineNumber":89,"author":{"gitId":"MuxPotato"},"content":"        String taskString \u003d getTaskString(userInput, userCommand);","lastModifiedDate":"2023-02-02"},{"lineNumber":90,"author":{"gitId":"MuxPotato"},"content":"        String taskName \u003d getEventTaskName(taskString);","lastModifiedDate":"2023-02-02"},{"lineNumber":91,"author":{"gitId":"MuxPotato"},"content":"        String eventFromDate \u003d getEventFromDate(taskString);","lastModifiedDate":"2023-02-02"},{"lineNumber":92,"author":{"gitId":"MuxPotato"},"content":"        String eventToDate \u003d getEventToDate(taskString);","lastModifiedDate":"2023-02-02"},{"lineNumber":93,"author":{"gitId":"MuxPotato"},"content":"        Event newEventTask \u003d new Event(taskName, eventFromDate, eventToDate);","lastModifiedDate":"2023-01-30"},{"lineNumber":94,"author":{"gitId":"MuxPotato"},"content":"        return newEventTask;","lastModifiedDate":"2023-02-02"},{"lineNumber":95,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":96,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":97,"author":{"gitId":"MuxPotato"},"content":"    private static ArrayList\u003cTask\u003e userCommandEvent(ArrayList\u003cTask\u003e userTasks, String userCommand, String userInput) throws DukeException {","lastModifiedDate":"2023-02-16"},{"lineNumber":98,"author":{"gitId":"MuxPotato"},"content":"        Event newEventTask \u003d getNewEventTask(userInput, userCommand);","lastModifiedDate":"2023-02-02"},{"lineNumber":99,"author":{"gitId":"MuxPotato"},"content":"        addUserTask(userTasks, newEventTask);","lastModifiedDate":"2023-02-16"},{"lineNumber":100,"author":{"gitId":"MuxPotato"},"content":"        printAddedNewTask(userTasks);","lastModifiedDate":"2023-02-02"},{"lineNumber":101,"author":{"gitId":"MuxPotato"},"content":"        return userTasks;","lastModifiedDate":"2023-02-02"},{"lineNumber":102,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":103,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":104,"author":{"gitId":"MuxPotato"},"content":"    private static void printAddedNewTask(ArrayList\u003cTask\u003e userTasks) {","lastModifiedDate":"2023-02-16"},{"lineNumber":105,"author":{"gitId":"MuxPotato"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\"); // shift this line below with the another print statement later","lastModifiedDate":"2023-02-02"},{"lineNumber":106,"author":{"gitId":"MuxPotato"},"content":"        System.out.println(userTasks.get(userTasks.size() - OFFSET_ONE_FOR_ZERO_INDEXING));","lastModifiedDate":"2023-02-16"},{"lineNumber":107,"author":{"gitId":"MuxPotato"},"content":"        System.out.println(\"Now you have \" + userTasks.size() + \" in the list.\");","lastModifiedDate":"2023-02-16"},{"lineNumber":108,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":109,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":110,"author":{"gitId":"MuxPotato"},"content":"    private static Deadline getNewDeadlineTask(String userInput, String userCommand) throws DukeException {","lastModifiedDate":"2023-02-09"},{"lineNumber":111,"author":{"gitId":"MuxPotato"},"content":"        String taskString \u003d getTaskString(userInput, userCommand);","lastModifiedDate":"2023-02-02"},{"lineNumber":112,"author":{"gitId":"MuxPotato"},"content":"        String taskName \u003d getDeadlineTaskName(taskString);","lastModifiedDate":"2023-02-02"},{"lineNumber":113,"author":{"gitId":"MuxPotato"},"content":"        String deadlineDueDate \u003d getDeadlineDueDateString(taskString);","lastModifiedDate":"2023-02-02"},{"lineNumber":114,"author":{"gitId":"MuxPotato"},"content":"        Deadline newDeadlineTask \u003d new Deadline(taskName, deadlineDueDate);","lastModifiedDate":"2023-02-02"},{"lineNumber":115,"author":{"gitId":"MuxPotato"},"content":"        return newDeadlineTask;","lastModifiedDate":"2023-02-02"},{"lineNumber":116,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":117,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":118,"author":{"gitId":"MuxPotato"},"content":"    private static ArrayList\u003cTask\u003e userCommandDeadline(ArrayList\u003cTask\u003e userTasks, String userCommand, String userInput) throws DukeException {","lastModifiedDate":"2023-02-16"},{"lineNumber":119,"author":{"gitId":"MuxPotato"},"content":"        Deadline newDeadlineTask \u003d getNewDeadlineTask(userInput, userCommand);","lastModifiedDate":"2023-02-02"},{"lineNumber":120,"author":{"gitId":"MuxPotato"},"content":"        addUserTask(userTasks, newDeadlineTask);","lastModifiedDate":"2023-02-16"},{"lineNumber":121,"author":{"gitId":"MuxPotato"},"content":"        printAddedNewTask(userTasks);","lastModifiedDate":"2023-02-02"},{"lineNumber":122,"author":{"gitId":"MuxPotato"},"content":"        return userTasks;","lastModifiedDate":"2023-02-02"},{"lineNumber":123,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":124,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":125,"author":{"gitId":"MuxPotato"},"content":"    private static Todo getNewTodoTask (String userInput, String userCommand) throws DukeException{","lastModifiedDate":"2023-02-09"},{"lineNumber":126,"author":{"gitId":"MuxPotato"},"content":"        String taskString \u003d getTaskString(userInput, userCommand);","lastModifiedDate":"2023-02-02"},{"lineNumber":127,"author":{"gitId":"MuxPotato"},"content":"        String taskName \u003d getTodoTaskName(taskString);","lastModifiedDate":"2023-02-02"},{"lineNumber":128,"author":{"gitId":"MuxPotato"},"content":"        Todo newTodoTask \u003d new Todo(taskName);","lastModifiedDate":"2023-02-02"},{"lineNumber":129,"author":{"gitId":"MuxPotato"},"content":"        return newTodoTask;","lastModifiedDate":"2023-02-02"},{"lineNumber":130,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":131,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":132,"author":{"gitId":"MuxPotato"},"content":"    private static ArrayList\u003cTask\u003e userCommandTodo(ArrayList\u003cTask\u003e userTasks, String userCommand, String userInput) throws DukeException {","lastModifiedDate":"2023-02-16"},{"lineNumber":133,"author":{"gitId":"MuxPotato"},"content":"        Todo newToDoTask \u003d getNewTodoTask(userInput, userCommand);","lastModifiedDate":"2023-02-02"},{"lineNumber":134,"author":{"gitId":"MuxPotato"},"content":"        addUserTask(userTasks, newToDoTask);","lastModifiedDate":"2023-02-16"},{"lineNumber":135,"author":{"gitId":"MuxPotato"},"content":"        printAddedNewTask(userTasks);","lastModifiedDate":"2023-02-02"},{"lineNumber":136,"author":{"gitId":"MuxPotato"},"content":"        return userTasks;","lastModifiedDate":"2023-02-02"},{"lineNumber":137,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":138,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":139,"author":{"gitId":"MuxPotato"},"content":"    private static void userCommandUnmark(ArrayList\u003cTask\u003e userTasks, String[] userInputWords) throws DukeException {","lastModifiedDate":"2023-02-16"},{"lineNumber":140,"author":{"gitId":"MuxPotato"},"content":"        int taskIndex;","lastModifiedDate":"2023-02-02"},{"lineNumber":141,"author":{"gitId":"MuxPotato"},"content":"        taskIndex \u003d Integer.parseInt(userInputWords[ONE_INDEX]) - OFFSET_ONE_FOR_ZERO_INDEXING;","lastModifiedDate":"2023-02-16"},{"lineNumber":142,"author":{"gitId":"MuxPotato"},"content":"        if (taskIndex + OFFSET_ONE_FOR_ZERO_INDEXING \u003e userTasks.size()) {","lastModifiedDate":"2023-02-16"},{"lineNumber":143,"author":{"gitId":"MuxPotato"},"content":"            System.out.println(\"There is no task that is indexed: \" + taskIndex);","lastModifiedDate":"2023-02-16"},{"lineNumber":144,"author":{"gitId":"MuxPotato"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-16"},{"lineNumber":145,"author":{"gitId":"MuxPotato"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":146,"author":{"gitId":"MuxPotato"},"content":"        if (taskIndex \u003c ZERO_INDEX) {","lastModifiedDate":"2023-02-16"},{"lineNumber":147,"author":{"gitId":"MuxPotato"},"content":"            System.out.println(\"task number given cannot be less than 1\");","lastModifiedDate":"2023-02-16"},{"lineNumber":148,"author":{"gitId":"MuxPotato"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-16"},{"lineNumber":149,"author":{"gitId":"MuxPotato"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":150,"author":{"gitId":"MuxPotato"},"content":"        userTasks.get(taskIndex).setisDone(false);","lastModifiedDate":"2023-02-16"},{"lineNumber":151,"author":{"gitId":"MuxPotato"},"content":"        System.out.println(userTasks.get(taskIndex));","lastModifiedDate":"2023-02-16"},{"lineNumber":152,"author":{"gitId":"MuxPotato"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-02-02"},{"lineNumber":153,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":154,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":155,"author":{"gitId":"MuxPotato"},"content":"    private static void userCommandMark(ArrayList\u003cTask\u003e userTasks, String[] userInputWords) throws DukeException {","lastModifiedDate":"2023-02-16"},{"lineNumber":156,"author":{"gitId":"MuxPotato"},"content":"        int taskIndex;","lastModifiedDate":"2023-02-02"},{"lineNumber":157,"author":{"gitId":"MuxPotato"},"content":"        taskIndex \u003d Integer.parseInt(userInputWords[ONE_INDEX]) - OFFSET_ONE_FOR_ZERO_INDEXING;","lastModifiedDate":"2023-02-16"},{"lineNumber":158,"author":{"gitId":"MuxPotato"},"content":"        if (taskIndex + OFFSET_ONE_FOR_ZERO_INDEXING \u003e userTasks.size()) {","lastModifiedDate":"2023-02-16"},{"lineNumber":159,"author":{"gitId":"MuxPotato"},"content":"            System.out.println(\"There is no task that is indexed: \" + taskIndex);","lastModifiedDate":"2023-02-16"},{"lineNumber":160,"author":{"gitId":"MuxPotato"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-16"},{"lineNumber":161,"author":{"gitId":"MuxPotato"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":162,"author":{"gitId":"MuxPotato"},"content":"        if (taskIndex \u003c ZERO_INDEX) {","lastModifiedDate":"2023-02-16"},{"lineNumber":163,"author":{"gitId":"MuxPotato"},"content":"            System.out.println(\"task number given cannot be less than 1\");","lastModifiedDate":"2023-02-16"},{"lineNumber":164,"author":{"gitId":"MuxPotato"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-16"},{"lineNumber":165,"author":{"gitId":"MuxPotato"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":166,"author":{"gitId":"MuxPotato"},"content":"        userTasks.get(taskIndex).setisDone(true);","lastModifiedDate":"2023-02-16"},{"lineNumber":167,"author":{"gitId":"MuxPotato"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-02-02"},{"lineNumber":168,"author":{"gitId":"MuxPotato"},"content":"        System.out.println(userTasks.get(taskIndex));","lastModifiedDate":"2023-02-16"},{"lineNumber":169,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":170,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":171,"author":{"gitId":"MuxPotato"},"content":"    private static void userCommandList(ArrayList\u003cTask\u003e userTasks) {","lastModifiedDate":"2023-02-16"},{"lineNumber":172,"author":{"gitId":"MuxPotato"},"content":"        for(int i \u003d 0; i \u003c userTasks.size(); i++) {","lastModifiedDate":"2023-02-16"},{"lineNumber":173,"author":{"gitId":"MuxPotato"},"content":"            if (userTasks.get(i).getisDone()) {","lastModifiedDate":"2023-02-16"},{"lineNumber":174,"author":{"gitId":"MuxPotato"},"content":"                System.out.println((i + 1) + \". \" + userTasks.get(i));","lastModifiedDate":"2023-02-16"},{"lineNumber":175,"author":{"gitId":"MuxPotato"},"content":"            } else {","lastModifiedDate":"2023-02-02"},{"lineNumber":176,"author":{"gitId":"MuxPotato"},"content":"                System.out.println((i + 1) + \". \" + userTasks.get(i));","lastModifiedDate":"2023-02-16"},{"lineNumber":177,"author":{"gitId":"MuxPotato"},"content":"            }","lastModifiedDate":"2023-02-02"},{"lineNumber":178,"author":{"gitId":"MuxPotato"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":179,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":180,"author":{"gitId":"MuxPotato"},"content":"    ","lastModifiedDate":"2023-01-30"},{"lineNumber":181,"author":{"gitId":"MuxPotato"},"content":"    private static void userCommandBye(ArrayList\u003cTask\u003e userTasks) throws IOException {","lastModifiedDate":"2023-02-16"},{"lineNumber":182,"author":{"gitId":"MuxPotato"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-02-02"},{"lineNumber":183,"author":{"gitId":"MuxPotato"},"content":"        saveData(DIRECTORY_PATH,FILE_PATH,userTasks);","lastModifiedDate":"2023-02-16"},{"lineNumber":184,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":185,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":186,"author":{"gitId":"MuxPotato"},"content":"    private static void userCommandDefault() throws DukeException {","lastModifiedDate":"2023-02-09"},{"lineNumber":187,"author":{"gitId":"MuxPotato"},"content":"        System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-02-09"},{"lineNumber":188,"author":{"gitId":"MuxPotato"},"content":"        throw new DukeException();","lastModifiedDate":"2023-02-09"},{"lineNumber":189,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":190,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":191,"author":{"gitId":"MuxPotato"},"content":"    private static ArrayList\u003cTask\u003e userCommandDelete(ArrayList\u003cTask\u003e userTasks, String[] userInputWords) throws DukeException {","lastModifiedDate":"2023-02-16"},{"lineNumber":192,"author":{"gitId":"MuxPotato"},"content":"        int taskIndex;","lastModifiedDate":"2023-02-16"},{"lineNumber":193,"author":{"gitId":"MuxPotato"},"content":"        taskIndex \u003d Integer.parseInt(userInputWords[ONE_INDEX]) - OFFSET_ONE_FOR_ZERO_INDEXING;","lastModifiedDate":"2023-02-16"},{"lineNumber":194,"author":{"gitId":"MuxPotato"},"content":"        if (taskIndex + OFFSET_ONE_FOR_ZERO_INDEXING \u003e userTasks.size()) {","lastModifiedDate":"2023-02-16"},{"lineNumber":195,"author":{"gitId":"MuxPotato"},"content":"            System.out.println(\"There is no task that is indexed: \" + taskIndex);","lastModifiedDate":"2023-02-16"},{"lineNumber":196,"author":{"gitId":"MuxPotato"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-16"},{"lineNumber":197,"author":{"gitId":"MuxPotato"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":198,"author":{"gitId":"MuxPotato"},"content":"        if (taskIndex \u003c ZERO_INDEX) {","lastModifiedDate":"2023-02-16"},{"lineNumber":199,"author":{"gitId":"MuxPotato"},"content":"            System.out.println(\"task number given cannot be less than 1\");","lastModifiedDate":"2023-02-16"},{"lineNumber":200,"author":{"gitId":"MuxPotato"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-16"},{"lineNumber":201,"author":{"gitId":"MuxPotato"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":202,"author":{"gitId":"MuxPotato"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task: \");","lastModifiedDate":"2023-02-16"},{"lineNumber":203,"author":{"gitId":"MuxPotato"},"content":"        System.out.println(DOUBLE_SPACING + userTasks.get(taskIndex));","lastModifiedDate":"2023-02-16"},{"lineNumber":204,"author":{"gitId":"MuxPotato"},"content":"        userTasks.remove(taskIndex);","lastModifiedDate":"2023-02-16"},{"lineNumber":205,"author":{"gitId":"MuxPotato"},"content":"        System.out.println(\"Now you have \" + userTasks.size() + \" in the list.\");","lastModifiedDate":"2023-02-16"},{"lineNumber":206,"author":{"gitId":"MuxPotato"},"content":"        return userTasks;","lastModifiedDate":"2023-01-30"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":208,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":209,"author":{"gitId":"MuxPotato"},"content":"    private static void addUserTask(ArrayList\u003cTask\u003e userTasks, Task newTask) {","lastModifiedDate":"2023-02-16"},{"lineNumber":210,"author":{"gitId":"MuxPotato"},"content":"        userTasks.add(newTask);","lastModifiedDate":"2023-02-16"},{"lineNumber":211,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":212,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":213,"author":{"gitId":"MuxPotato"},"content":"    private static String getTodoTaskName(String taskString) {","lastModifiedDate":"2023-02-02"},{"lineNumber":214,"author":{"gitId":"MuxPotato"},"content":"        return taskString;","lastModifiedDate":"2023-01-30"},{"lineNumber":215,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":216,"author":{"gitId":"MuxPotato"},"content":"    private static String getDeadlineTaskName(String taskString) throws DukeException {","lastModifiedDate":"2023-02-09"},{"lineNumber":217,"author":{"gitId":"MuxPotato"},"content":"        int slashIndex \u003d taskString.indexOf(\"/by\");","lastModifiedDate":"2023-02-09"},{"lineNumber":218,"author":{"gitId":"MuxPotato"},"content":"        if (slashIndex \u003d\u003d ERROR_NEGATIVE_ONE_RETURNED) {","lastModifiedDate":"2023-02-16"},{"lineNumber":219,"author":{"gitId":"MuxPotato"},"content":"            System.out.println(\"Invalid Deadline String formatting: /by is missing\");","lastModifiedDate":"2023-02-09"},{"lineNumber":220,"author":{"gitId":"MuxPotato"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-09"},{"lineNumber":221,"author":{"gitId":"MuxPotato"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":222,"author":{"gitId":"MuxPotato"},"content":"        String taskName \u003d taskString.substring(ZERO_INDEX, slashIndex);","lastModifiedDate":"2023-02-16"},{"lineNumber":223,"author":{"gitId":"MuxPotato"},"content":"        if (taskName.isEmpty()) {","lastModifiedDate":"2023-02-09"},{"lineNumber":224,"author":{"gitId":"MuxPotato"},"content":"            System.out.println(\"Task needs to have a name!!!\");","lastModifiedDate":"2023-02-09"},{"lineNumber":225,"author":{"gitId":"MuxPotato"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-09"},{"lineNumber":226,"author":{"gitId":"MuxPotato"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":227,"author":{"gitId":"MuxPotato"},"content":"        taskName \u003d taskName.trim();","lastModifiedDate":"2023-02-16"},{"lineNumber":228,"author":{"gitId":"MuxPotato"},"content":"        return taskName;","lastModifiedDate":"2023-01-30"},{"lineNumber":229,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":230,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":231,"author":{"gitId":"MuxPotato"},"content":"    private static String getEventTaskName(String taskString) throws DukeException {","lastModifiedDate":"2023-02-09"},{"lineNumber":232,"author":{"gitId":"MuxPotato"},"content":"        int slashIndex \u003d taskString.indexOf(\"/from\");","lastModifiedDate":"2023-02-09"},{"lineNumber":233,"author":{"gitId":"MuxPotato"},"content":"        if (slashIndex \u003d\u003d ERROR_NEGATIVE_ONE_RETURNED) {","lastModifiedDate":"2023-02-16"},{"lineNumber":234,"author":{"gitId":"MuxPotato"},"content":"            System.out.println(\"Invalid Event String formatting: /from is missing\");","lastModifiedDate":"2023-02-09"},{"lineNumber":235,"author":{"gitId":"MuxPotato"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-09"},{"lineNumber":236,"author":{"gitId":"MuxPotato"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":237,"author":{"gitId":"MuxPotato"},"content":"        String taskName \u003d taskString.substring(ZERO_INDEX, slashIndex);","lastModifiedDate":"2023-02-16"},{"lineNumber":238,"author":{"gitId":"MuxPotato"},"content":"        if (taskName.isEmpty()) {","lastModifiedDate":"2023-02-09"},{"lineNumber":239,"author":{"gitId":"MuxPotato"},"content":"            System.out.println(\"Task needs to have a name!!!\");","lastModifiedDate":"2023-02-09"},{"lineNumber":240,"author":{"gitId":"MuxPotato"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-09"},{"lineNumber":241,"author":{"gitId":"MuxPotato"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":242,"author":{"gitId":"MuxPotato"},"content":"        taskName \u003d taskName.trim();","lastModifiedDate":"2023-02-16"},{"lineNumber":243,"author":{"gitId":"MuxPotato"},"content":"        return taskName;","lastModifiedDate":"2023-01-30"},{"lineNumber":244,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":245,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":246,"author":{"gitId":"MuxPotato"},"content":"    private static String getEventFromDate(String taskString) throws DukeException {","lastModifiedDate":"2023-02-09"},{"lineNumber":247,"author":{"gitId":"MuxPotato"},"content":"        String[] taskStringPartsSplitByFrom \u003d taskString.split(\"/from\");","lastModifiedDate":"2023-02-16"},{"lineNumber":248,"author":{"gitId":"MuxPotato"},"content":"        String[] taskStringPartsSplitByTo \u003d taskStringPartsSplitByFrom[ONE_INDEX].split(\"/to\");","lastModifiedDate":"2023-02-16"},{"lineNumber":249,"author":{"gitId":"MuxPotato"},"content":"        if (taskStringPartsSplitByTo.length \u003c\u003d 1) {","lastModifiedDate":"2023-02-16"},{"lineNumber":250,"author":{"gitId":"MuxPotato"},"content":"            System.out.println(\"Invalid Event String formatting\");","lastModifiedDate":"2023-02-09"},{"lineNumber":251,"author":{"gitId":"MuxPotato"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-09"},{"lineNumber":252,"author":{"gitId":"MuxPotato"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":253,"author":{"gitId":"MuxPotato"},"content":"        String eventFromDate \u003d taskStringPartsSplitByTo[ZERO_INDEX].trim();","lastModifiedDate":"2023-02-16"},{"lineNumber":254,"author":{"gitId":"MuxPotato"},"content":"        if (eventFromDate.isEmpty()) {","lastModifiedDate":"2023-02-09"},{"lineNumber":255,"author":{"gitId":"MuxPotato"},"content":"            System.out.println(\"Invalid Event String formatting\");","lastModifiedDate":"2023-02-09"},{"lineNumber":256,"author":{"gitId":"MuxPotato"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-09"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":258,"author":{"gitId":"MuxPotato"},"content":"        return eventFromDate;","lastModifiedDate":"2023-02-09"},{"lineNumber":259,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":260,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":261,"author":{"gitId":"MuxPotato"},"content":"    private static String getEventToDate (String taskString) throws DukeException {","lastModifiedDate":"2023-02-09"},{"lineNumber":262,"author":{"gitId":"MuxPotato"},"content":"        String[] taskStringPartsSplitByFrom \u003d taskString.split(\"/from\");","lastModifiedDate":"2023-02-16"},{"lineNumber":263,"author":{"gitId":"MuxPotato"},"content":"        String[] taskStringPartsSplitByTo \u003d taskStringPartsSplitByFrom[ONE_INDEX].split(\"/to\");","lastModifiedDate":"2023-02-16"},{"lineNumber":264,"author":{"gitId":"MuxPotato"},"content":"        if (taskStringPartsSplitByTo.length \u003c\u003d 1) {","lastModifiedDate":"2023-02-16"},{"lineNumber":265,"author":{"gitId":"MuxPotato"},"content":"            System.out.println(\"Invalid Event String formatting: Either /to is missing or no description after /to\");","lastModifiedDate":"2023-02-09"},{"lineNumber":266,"author":{"gitId":"MuxPotato"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-09"},{"lineNumber":267,"author":{"gitId":"MuxPotato"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":268,"author":{"gitId":"MuxPotato"},"content":"        String eventDueDate \u003d taskStringPartsSplitByTo[ONE_INDEX].trim();","lastModifiedDate":"2023-02-16"},{"lineNumber":269,"author":{"gitId":"MuxPotato"},"content":"        if (eventDueDate.isEmpty()) {","lastModifiedDate":"2023-02-09"},{"lineNumber":270,"author":{"gitId":"MuxPotato"},"content":"            System.out.println(\"Invalid Event String formatting\");","lastModifiedDate":"2023-02-09"},{"lineNumber":271,"author":{"gitId":"MuxPotato"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-09"},{"lineNumber":272,"author":{"gitId":"MuxPotato"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":273,"author":{"gitId":"MuxPotato"},"content":"        return eventDueDate;","lastModifiedDate":"2023-02-09"},{"lineNumber":274,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":275,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":276,"author":{"gitId":"MuxPotato"},"content":"    // Comment: When this function is called, we assumed that /by is found and exists","lastModifiedDate":"2023-02-09"},{"lineNumber":277,"author":{"gitId":"MuxPotato"},"content":"    private static String getDeadlineDueDateString(String taskString) throws DukeException {","lastModifiedDate":"2023-02-09"},{"lineNumber":278,"author":{"gitId":"MuxPotato"},"content":"        String[] taskStringParts \u003d taskString.split(\"/by\");","lastModifiedDate":"2023-02-02"},{"lineNumber":279,"author":{"gitId":"MuxPotato"},"content":"        if (taskStringParts.length !\u003d 2) {","lastModifiedDate":"2023-02-09"},{"lineNumber":280,"author":{"gitId":"MuxPotato"},"content":"            System.out.println(\"Invalid Deadline String formatting: Description after /by is missing\");","lastModifiedDate":"2023-02-09"},{"lineNumber":281,"author":{"gitId":"MuxPotato"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-09"},{"lineNumber":282,"author":{"gitId":"MuxPotato"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":283,"author":{"gitId":"MuxPotato"},"content":"        return taskStringParts[ONE_INDEX].trim();","lastModifiedDate":"2023-02-16"},{"lineNumber":284,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":285,"author":{"gitId":"MuxPotato"},"content":"    private static String getTaskString(String userInput, String userCommand) throws DukeException {","lastModifiedDate":"2023-02-09"},{"lineNumber":286,"author":{"gitId":"MuxPotato"},"content":"        int userInputLength \u003d userInput.trim().length();","lastModifiedDate":"2023-02-09"},{"lineNumber":287,"author":{"gitId":"MuxPotato"},"content":"        int userCommandLength \u003d userCommand.length();","lastModifiedDate":"2023-02-09"},{"lineNumber":288,"author":{"gitId":"MuxPotato"},"content":"        if (userInputLength \u003c\u003d userCommandLength) {","lastModifiedDate":"2023-02-09"},{"lineNumber":289,"author":{"gitId":"MuxPotato"},"content":"            System.out.println(\"Task Description cannot be empty!!!\");","lastModifiedDate":"2023-02-09"},{"lineNumber":290,"author":{"gitId":"MuxPotato"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-09"},{"lineNumber":291,"author":{"gitId":"MuxPotato"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":292,"author":{"gitId":"MuxPotato"},"content":"        return userInput.substring(userCommand.length() + 1);","lastModifiedDate":"2023-01-30"},{"lineNumber":293,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":294,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":295,"author":{"gitId":"MuxPotato"},"content":"    private static void saveExistingTasksToFile(ArrayList\u003cTask\u003e userTasks) throws IOException {","lastModifiedDate":"2023-02-16"},{"lineNumber":296,"author":{"gitId":"MuxPotato"},"content":"        String saveFilePath \u003d FILE_PATH;","lastModifiedDate":"2023-02-16"},{"lineNumber":297,"author":{"gitId":"MuxPotato"},"content":"        if (userTasks.size() \u003d\u003d EMPTY_FILE) { // fixs the bug that the last task in the file cannot be deleted","lastModifiedDate":"2023-02-16"},{"lineNumber":298,"author":{"gitId":"MuxPotato"},"content":"            writeToFile(saveFilePath, \"\", false);","lastModifiedDate":"2023-02-16"},{"lineNumber":299,"author":{"gitId":"MuxPotato"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":300,"author":{"gitId":"MuxPotato"},"content":"        for (int i \u003d 0; i \u003c userTasks.size(); i++) {","lastModifiedDate":"2023-02-16"},{"lineNumber":301,"author":{"gitId":"MuxPotato"},"content":"            Task currentTask \u003d userTasks.get(i);","lastModifiedDate":"2023-02-16"},{"lineNumber":302,"author":{"gitId":"MuxPotato"},"content":"            Boolean isAppendMode \u003d true;","lastModifiedDate":"2023-02-16"},{"lineNumber":303,"author":{"gitId":"MuxPotato"},"content":"            if (i \u003d\u003d 0) {","lastModifiedDate":"2023-02-16"},{"lineNumber":304,"author":{"gitId":"MuxPotato"},"content":"                isAppendMode \u003d false;","lastModifiedDate":"2023-02-16"},{"lineNumber":305,"author":{"gitId":"MuxPotato"},"content":"            }","lastModifiedDate":"2023-02-16"},{"lineNumber":306,"author":{"gitId":"MuxPotato"},"content":"            if (currentTask instanceof Todo) {","lastModifiedDate":"2023-02-16"},{"lineNumber":307,"author":{"gitId":"MuxPotato"},"content":"                writeToFile(saveFilePath, \"T , \" + currentTask.getTaskName() + \" , \" + currentTask.getisDone() + System.lineSeparator(), isAppendMode);","lastModifiedDate":"2023-02-16"},{"lineNumber":308,"author":{"gitId":"MuxPotato"},"content":"            } else if (currentTask instanceof Deadline) {","lastModifiedDate":"2023-02-16"},{"lineNumber":309,"author":{"gitId":"MuxPotato"},"content":"                writeToFile(saveFilePath, \"D , \" + currentTask.getTaskName() + \" , \" + currentTask.getisDone() + \" , \" + ((Deadline) currentTask).deadline +","lastModifiedDate":"2023-02-16"},{"lineNumber":310,"author":{"gitId":"MuxPotato"},"content":"                        System.lineSeparator(), isAppendMode);","lastModifiedDate":"2023-02-16"},{"lineNumber":311,"author":{"gitId":"MuxPotato"},"content":"            } else { // current task is instance of event","lastModifiedDate":"2023-02-16"},{"lineNumber":312,"author":{"gitId":"MuxPotato"},"content":"                writeToFile(saveFilePath, \"E , \" + currentTask.getTaskName() + \" , \" + currentTask.getisDone() + \" , \" + ((Event) currentTask).startTime +","lastModifiedDate":"2023-02-16"},{"lineNumber":313,"author":{"gitId":"MuxPotato"},"content":"                        \" , \" + ((Event) currentTask).endTime + System.lineSeparator(), isAppendMode);","lastModifiedDate":"2023-02-16"},{"lineNumber":314,"author":{"gitId":"MuxPotato"},"content":"            }","lastModifiedDate":"2023-02-16"},{"lineNumber":315,"author":{"gitId":"MuxPotato"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":316,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":317,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":318,"author":{"gitId":"MuxPotato"},"content":"    private static void writeToFile(String filePath, String textToAdd, Boolean isAppendMode) throws IOException {","lastModifiedDate":"2023-02-16"},{"lineNumber":319,"author":{"gitId":"MuxPotato"},"content":"        FileWriter fileWriter \u003d new FileWriter(filePath, isAppendMode);","lastModifiedDate":"2023-02-16"},{"lineNumber":320,"author":{"gitId":"MuxPotato"},"content":"        fileWriter.write(textToAdd);","lastModifiedDate":"2023-02-16"},{"lineNumber":321,"author":{"gitId":"MuxPotato"},"content":"        fileWriter.close();","lastModifiedDate":"2023-02-16"},{"lineNumber":322,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":323,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":324,"author":{"gitId":"MuxPotato"},"content":"    private static ArrayList\u003cTask\u003e retrieveExistingTasksFromFile(String filePath) throws FileNotFoundException {","lastModifiedDate":"2023-02-16"},{"lineNumber":325,"author":{"gitId":"MuxPotato"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2023-02-16"},{"lineNumber":326,"author":{"gitId":"MuxPotato"},"content":"        Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2023-02-16"},{"lineNumber":327,"author":{"gitId":"MuxPotato"},"content":"        //Task[] userTasks \u003d new Task[ZERO_INDEX];","lastModifiedDate":"2023-02-16"},{"lineNumber":328,"author":{"gitId":"MuxPotato"},"content":"        ArrayList\u003cTask\u003e userTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-16"},{"lineNumber":329,"author":{"gitId":"MuxPotato"},"content":"        while (scanner.hasNext()) {","lastModifiedDate":"2023-02-16"},{"lineNumber":330,"author":{"gitId":"MuxPotato"},"content":"            String Line \u003d scanner.nextLine();","lastModifiedDate":"2023-02-16"},{"lineNumber":331,"author":{"gitId":"MuxPotato"},"content":"            String[] taskInformationWords \u003d Line.split(\",\");","lastModifiedDate":"2023-02-16"},{"lineNumber":332,"author":{"gitId":"MuxPotato"},"content":"            String taskType \u003d taskInformationWords[TASK_TYPE_INDEX].trim();","lastModifiedDate":"2023-02-16"},{"lineNumber":333,"author":{"gitId":"MuxPotato"},"content":"            if (taskType.equals(\"T\")) {","lastModifiedDate":"2023-02-16"},{"lineNumber":334,"author":{"gitId":"MuxPotato"},"content":"                saveTodoTaskIntoSaveFile(userTasks, taskInformationWords);","lastModifiedDate":"2023-02-16"},{"lineNumber":335,"author":{"gitId":"MuxPotato"},"content":"            } else if (taskType.equals(\"D\")) {","lastModifiedDate":"2023-02-16"},{"lineNumber":336,"author":{"gitId":"MuxPotato"},"content":"                saveDeadlineTaskIntoSaveFile(userTasks, taskInformationWords);","lastModifiedDate":"2023-02-16"},{"lineNumber":337,"author":{"gitId":"MuxPotato"},"content":"            } else if (taskType.equals(\"E\")) {","lastModifiedDate":"2023-02-16"},{"lineNumber":338,"author":{"gitId":"MuxPotato"},"content":"                saveEventTaskIntoSaveFile(userTasks, taskInformationWords);","lastModifiedDate":"2023-02-16"},{"lineNumber":339,"author":{"gitId":"MuxPotato"},"content":"            }","lastModifiedDate":"2023-02-16"},{"lineNumber":340,"author":{"gitId":"MuxPotato"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":341,"author":{"gitId":"MuxPotato"},"content":"        return userTasks;","lastModifiedDate":"2023-02-16"},{"lineNumber":342,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":343,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":344,"author":{"gitId":"MuxPotato"},"content":"    private static void saveEventTaskIntoSaveFile(ArrayList\u003cTask\u003e userTasks, String[] taskInformationWords) {","lastModifiedDate":"2023-02-16"},{"lineNumber":345,"author":{"gitId":"MuxPotato"},"content":"        String taskName \u003d taskInformationWords[TASK_NAME_INDEX].trim();","lastModifiedDate":"2023-02-16"},{"lineNumber":346,"author":{"gitId":"MuxPotato"},"content":"        Boolean isDone \u003d false;","lastModifiedDate":"2023-02-16"},{"lineNumber":347,"author":{"gitId":"MuxPotato"},"content":"        if (taskInformationWords[TASK_IS_DONE_INDEX].trim().equals(\"true\")) {","lastModifiedDate":"2023-02-16"},{"lineNumber":348,"author":{"gitId":"MuxPotato"},"content":"            isDone \u003d true;","lastModifiedDate":"2023-02-16"},{"lineNumber":349,"author":{"gitId":"MuxPotato"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":350,"author":{"gitId":"MuxPotato"},"content":"        String taskEventStartTime \u003d taskInformationWords[TASK_EVENT_START_TIME_INDEX].trim();","lastModifiedDate":"2023-02-16"},{"lineNumber":351,"author":{"gitId":"MuxPotato"},"content":"        String taskEventEndTime \u003d taskInformationWords[TASK_EVENT_END_TIME_INDEX].trim();","lastModifiedDate":"2023-02-16"},{"lineNumber":352,"author":{"gitId":"MuxPotato"},"content":"        Event newEventTask \u003d new Event(taskName, taskEventStartTime, taskEventEndTime);","lastModifiedDate":"2023-02-16"},{"lineNumber":353,"author":{"gitId":"MuxPotato"},"content":"        newEventTask.setisDone(isDone);","lastModifiedDate":"2023-02-16"},{"lineNumber":354,"author":{"gitId":"MuxPotato"},"content":"        addUserTask(userTasks, newEventTask);","lastModifiedDate":"2023-02-16"},{"lineNumber":355,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":356,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":357,"author":{"gitId":"MuxPotato"},"content":"    private static void saveDeadlineTaskIntoSaveFile(ArrayList\u003cTask\u003e userTasks, String[] taskInformationWords) {","lastModifiedDate":"2023-02-16"},{"lineNumber":358,"author":{"gitId":"MuxPotato"},"content":"        String taskName \u003d taskInformationWords[TASK_NAME_INDEX].trim();","lastModifiedDate":"2023-02-16"},{"lineNumber":359,"author":{"gitId":"MuxPotato"},"content":"        Boolean isDone \u003d false;","lastModifiedDate":"2023-02-16"},{"lineNumber":360,"author":{"gitId":"MuxPotato"},"content":"        if (taskInformationWords[TASK_IS_DONE_INDEX].trim().equals(\"true\")) {","lastModifiedDate":"2023-02-16"},{"lineNumber":361,"author":{"gitId":"MuxPotato"},"content":"            isDone \u003d true;","lastModifiedDate":"2023-02-16"},{"lineNumber":362,"author":{"gitId":"MuxPotato"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":363,"author":{"gitId":"MuxPotato"},"content":"        String taskDeadline \u003d taskInformationWords[TASK_DEADLINE_INDEX].trim();","lastModifiedDate":"2023-02-16"},{"lineNumber":364,"author":{"gitId":"MuxPotato"},"content":"        Deadline newDeadlineTask \u003d new Deadline(taskName, taskDeadline);","lastModifiedDate":"2023-02-16"},{"lineNumber":365,"author":{"gitId":"MuxPotato"},"content":"        newDeadlineTask.setisDone(isDone);","lastModifiedDate":"2023-02-16"},{"lineNumber":366,"author":{"gitId":"MuxPotato"},"content":"        addUserTask(userTasks, newDeadlineTask);","lastModifiedDate":"2023-02-16"},{"lineNumber":367,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":368,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":369,"author":{"gitId":"MuxPotato"},"content":"    private static void saveTodoTaskIntoSaveFile(ArrayList\u003cTask\u003e userTasks, String[] taskInformationWords) {","lastModifiedDate":"2023-02-16"},{"lineNumber":370,"author":{"gitId":"MuxPotato"},"content":"        String taskName \u003d taskInformationWords[TASK_NAME_INDEX].trim();","lastModifiedDate":"2023-02-16"},{"lineNumber":371,"author":{"gitId":"MuxPotato"},"content":"        Boolean isDone \u003d false;","lastModifiedDate":"2023-02-16"},{"lineNumber":372,"author":{"gitId":"MuxPotato"},"content":"        if (taskInformationWords[TASK_IS_DONE_INDEX].trim().equals(\"true\")) {","lastModifiedDate":"2023-02-16"},{"lineNumber":373,"author":{"gitId":"MuxPotato"},"content":"            isDone \u003d true;","lastModifiedDate":"2023-02-16"},{"lineNumber":374,"author":{"gitId":"MuxPotato"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":375,"author":{"gitId":"MuxPotato"},"content":"        Todo newTodoTask \u003d new Todo(taskName);","lastModifiedDate":"2023-02-16"},{"lineNumber":376,"author":{"gitId":"MuxPotato"},"content":"        newTodoTask.setisDone(isDone);","lastModifiedDate":"2023-02-16"},{"lineNumber":377,"author":{"gitId":"MuxPotato"},"content":"        addUserTask(userTasks, newTodoTask);","lastModifiedDate":"2023-02-16"},{"lineNumber":378,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":379,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":380,"author":{"gitId":"MuxPotato"},"content":"    private static boolean isSaveDirectoryPresent(String DIRECTORY_PATH) {","lastModifiedDate":"2023-02-16"},{"lineNumber":381,"author":{"gitId":"MuxPotato"},"content":"        Path directoryPath \u003d Paths.get(DIRECTORY_PATH);","lastModifiedDate":"2023-02-16"},{"lineNumber":382,"author":{"gitId":"MuxPotato"},"content":"        if (Files.exists(directoryPath) \u0026\u0026 Files.isDirectory(directoryPath)) {","lastModifiedDate":"2023-02-16"},{"lineNumber":383,"author":{"gitId":"MuxPotato"},"content":"            return true;","lastModifiedDate":"2023-02-16"},{"lineNumber":384,"author":{"gitId":"MuxPotato"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":385,"author":{"gitId":"MuxPotato"},"content":"        return false;","lastModifiedDate":"2023-02-16"},{"lineNumber":386,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":387,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":388,"author":{"gitId":"MuxPotato"},"content":"    private static void createSaveFileDirectory(String DIRECTORY_PATH) {","lastModifiedDate":"2023-02-16"},{"lineNumber":389,"author":{"gitId":"MuxPotato"},"content":"        File file \u003d new File(DIRECTORY_PATH);","lastModifiedDate":"2023-02-16"},{"lineNumber":390,"author":{"gitId":"MuxPotato"},"content":"        if (file.mkdir() \u003d\u003d true) {","lastModifiedDate":"2023-02-16"},{"lineNumber":391,"author":{"gitId":"MuxPotato"},"content":"            System.out.println(\"Directory successfully created at [project_root]/\" + DIRECTORY_PATH);","lastModifiedDate":"2023-02-16"},{"lineNumber":392,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":393,"author":{"gitId":"MuxPotato"},"content":"        } else {","lastModifiedDate":"2023-02-16"},{"lineNumber":394,"author":{"gitId":"MuxPotato"},"content":"            System.out.println(\"Failed to create directory, data might be lost\");","lastModifiedDate":"2023-02-16"},{"lineNumber":395,"author":{"gitId":"MuxPotato"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":396,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":397,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":398,"author":{"gitId":"MuxPotato"},"content":"    private static void saveData(String DIRECTORY_PATH, String FILE_PATH, ArrayList\u003cTask\u003e userTasks) throws IOException {","lastModifiedDate":"2023-02-16"},{"lineNumber":399,"author":{"gitId":"MuxPotato"},"content":"        if (isSaveDirectoryPresent(DIRECTORY_PATH) \u003d\u003d false) {","lastModifiedDate":"2023-02-16"},{"lineNumber":400,"author":{"gitId":"MuxPotato"},"content":"            createSaveFileDirectory(DIRECTORY_PATH);","lastModifiedDate":"2023-02-16"},{"lineNumber":401,"author":{"gitId":"MuxPotato"},"content":"            if (isSaveDirectoryPresent(DIRECTORY_PATH) \u003d\u003d false) {","lastModifiedDate":"2023-02-16"},{"lineNumber":402,"author":{"gitId":"MuxPotato"},"content":"                throw new IOException();","lastModifiedDate":"2023-02-16"},{"lineNumber":403,"author":{"gitId":"MuxPotato"},"content":"            }","lastModifiedDate":"2023-02-16"},{"lineNumber":404,"author":{"gitId":"MuxPotato"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":405,"author":{"gitId":"MuxPotato"},"content":"        saveExistingTasksToFile(userTasks);","lastModifiedDate":"2023-02-16"},{"lineNumber":406,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":407,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-02-16"},{"lineNumber":408,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":409,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":410,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"-":6,"MuxPotato":404}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MuxPotato"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"MuxPotato"},"content":"    //no other code needed","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"MuxPotato"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"MuxPotato":3}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MuxPotato"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"MuxPotato"},"content":"    String startTime;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"MuxPotato"},"content":"    String endTime;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"MuxPotato"},"content":"    public Event(String taskName, String startTime, String endTime) {","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"MuxPotato"},"content":"        super(taskName);","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"MuxPotato"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"MuxPotato"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"MuxPotato"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"MuxPotato"},"content":"    public String toString() {","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"MuxPotato"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + startTime + \" to: \" + endTime + \")\";","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"MuxPotato"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"MuxPotato":15}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MuxPotato"},"content":"public class Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"MuxPotato"},"content":"    private String taskName;","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"MuxPotato"},"content":"    private Boolean isDone;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"MuxPotato"},"content":"    public Task() {","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"MuxPotato"},"content":"        taskName \u003d \"\";","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"MuxPotato"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"MuxPotato"},"content":"    public Task(String taskName) {","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"MuxPotato"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"MuxPotato"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"MuxPotato"},"content":"    public String getTaskName() {","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"MuxPotato"},"content":"        return taskName;","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"MuxPotato"},"content":"    public Boolean getisDone() {","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"MuxPotato"},"content":"        return isDone;","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"MuxPotato"},"content":"    public void setTaskName (String taskName) {","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"MuxPotato"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"MuxPotato"},"content":"    public void setisDone(Boolean isDone) {","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"MuxPotato"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"MuxPotato"},"content":"    public String toString() {","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"MuxPotato"},"content":"        if (isDone) {","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"MuxPotato"},"content":"            return \"[X] \" + taskName;","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"MuxPotato"},"content":"        } else {","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"MuxPotato"},"content":"            return \"[ ] \" + taskName;","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"MuxPotato"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"MuxPotato"},"content":"}","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"MuxPotato":40}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MuxPotato"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"MuxPotato"},"content":"    public Todo(String taskName) {","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"MuxPotato"},"content":"        super(taskName);","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"MuxPotato"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"MuxPotato"},"content":"    public String toString() {","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"MuxPotato"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"MuxPotato"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"MuxPotato":10}}]
