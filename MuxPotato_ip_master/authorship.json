[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"MuxPotato"},"content":"T , asd , false","lastModifiedDate":"2023-02-25"},{"lineNumber":2,"author":{"gitId":"MuxPotato"},"content":"T , asdf , false","lastModifiedDate":"2023-02-25"},{"lineNumber":3,"author":{"gitId":"MuxPotato"},"content":"E , asd , true , 1234 , 123","lastModifiedDate":"2023-02-25"},{"lineNumber":4,"author":{"gitId":"MuxPotato"},"content":"T , a , true","lastModifiedDate":"2023-02-25"},{"lineNumber":5,"author":{"gitId":"MuxPotato"},"content":"D , asd , true , asd","lastModifiedDate":"2023-02-25"},{"lineNumber":6,"author":{"gitId":"MuxPotato"},"content":"E , run , false , 2pm , 4pm","lastModifiedDate":"2023-02-25"}],"authorContributionMap":{"MuxPotato":6}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MuxPotato"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"MuxPotato"},"content":"    protected String deadline;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"MuxPotato"},"content":"    public Deadline(String taskName, String deadline) {","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"MuxPotato"},"content":"        super(taskName);","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"MuxPotato"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"MuxPotato"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"MuxPotato"},"content":"    public String toString() {","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"MuxPotato"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + deadline + \")\";","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"MuxPotato"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"MuxPotato":13}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MuxPotato"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"MuxPotato"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"MuxPotato"},"content":"    final static String FILE_PATH \u003d \"data/duke.txt\";","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"MuxPotato"},"content":"    private static Ui ui \u003d new Ui();","lastModifiedDate":"2023-02-25"},{"lineNumber":7,"author":{"gitId":"MuxPotato"},"content":"    private static TaskList taskList;","lastModifiedDate":"2023-02-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"MuxPotato"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"MuxPotato"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"MuxPotato"},"content":"        String userInput;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"MuxPotato"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"MuxPotato"},"content":"        try {","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"MuxPotato"},"content":"            taskList \u003d Storage.retrieveExistingTasksFromFile(FILE_PATH);","lastModifiedDate":"2023-02-25"},{"lineNumber":15,"author":{"gitId":"MuxPotato"},"content":"            System.out.println(\"File Found and successfully read\");","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"MuxPotato"},"content":"            ui.executeListCommand(taskList);","lastModifiedDate":"2023-02-25"},{"lineNumber":17,"author":{"gitId":"MuxPotato"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"MuxPotato"},"content":"            System.out.println(\"File not found\");","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"MuxPotato"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"MuxPotato"},"content":"        boolean isContinue \u003d true;","lastModifiedDate":"2023-02-25"},{"lineNumber":21,"author":{"gitId":"MuxPotato"},"content":"        while (isContinue) {","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"MuxPotato"},"content":"            userInput \u003d in.nextLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"MuxPotato"},"content":"            isContinue \u003d ui.executeUserCommand(taskList, userInput);","lastModifiedDate":"2023-02-25"},{"lineNumber":24,"author":{"gitId":"MuxPotato"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"-":4,"MuxPotato":27}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MuxPotato"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"MuxPotato"},"content":"    //no other code needed","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"MuxPotato"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"MuxPotato":3}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MuxPotato"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"MuxPotato"},"content":"    String startTime;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"MuxPotato"},"content":"    String endTime;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"MuxPotato"},"content":"    public Event(String taskName, String startTime, String endTime) {","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"MuxPotato"},"content":"        super(taskName);","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"MuxPotato"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"MuxPotato"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"MuxPotato"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"MuxPotato"},"content":"    public String toString() {","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"MuxPotato"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + startTime + \" to: \" + endTime + \")\";","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"MuxPotato"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"MuxPotato":15}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MuxPotato"},"content":"public class Parser {","lastModifiedDate":"2023-02-25"},{"lineNumber":2,"author":{"gitId":"MuxPotato"},"content":"    final static int ZERO_INDEX \u003d 0;","lastModifiedDate":"2023-02-25"},{"lineNumber":3,"author":{"gitId":"MuxPotato"},"content":"    final static int ONE_INDEX \u003d 1;","lastModifiedDate":"2023-02-25"},{"lineNumber":4,"author":{"gitId":"MuxPotato"},"content":"    final static int ERROR_NEGATIVE_ONE_RETURNED \u003d -1;","lastModifiedDate":"2023-02-25"},{"lineNumber":5,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":6,"author":{"gitId":"MuxPotato"},"content":"    public static String getTodoTaskName(String taskString) {","lastModifiedDate":"2023-02-25"},{"lineNumber":7,"author":{"gitId":"MuxPotato"},"content":"        return taskString;","lastModifiedDate":"2023-02-25"},{"lineNumber":8,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":9,"author":{"gitId":"MuxPotato"},"content":"    public static Todo getNewTodoTask (String userInput, String userCommand) throws DukeException {","lastModifiedDate":"2023-02-25"},{"lineNumber":10,"author":{"gitId":"MuxPotato"},"content":"        String taskString \u003d getTaskString(userInput, userCommand);","lastModifiedDate":"2023-02-25"},{"lineNumber":11,"author":{"gitId":"MuxPotato"},"content":"        String taskName \u003d getTodoTaskName(taskString);","lastModifiedDate":"2023-02-25"},{"lineNumber":12,"author":{"gitId":"MuxPotato"},"content":"        Todo newTodoTask \u003d new Todo(taskName);","lastModifiedDate":"2023-02-25"},{"lineNumber":13,"author":{"gitId":"MuxPotato"},"content":"        return newTodoTask;","lastModifiedDate":"2023-02-25"},{"lineNumber":14,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":15,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":16,"author":{"gitId":"MuxPotato"},"content":"    public static String getDeadlineTaskName(String taskString) throws DukeException {","lastModifiedDate":"2023-02-25"},{"lineNumber":17,"author":{"gitId":"MuxPotato"},"content":"        int slashIndex \u003d taskString.indexOf(\"/by\");","lastModifiedDate":"2023-02-25"},{"lineNumber":18,"author":{"gitId":"MuxPotato"},"content":"        if (slashIndex \u003d\u003d ERROR_NEGATIVE_ONE_RETURNED) {","lastModifiedDate":"2023-02-25"},{"lineNumber":19,"author":{"gitId":"MuxPotato"},"content":"            System.out.println(\"Invalid Deadline String formatting: /by is missing\");","lastModifiedDate":"2023-02-25"},{"lineNumber":20,"author":{"gitId":"MuxPotato"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-25"},{"lineNumber":21,"author":{"gitId":"MuxPotato"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":22,"author":{"gitId":"MuxPotato"},"content":"        String taskName \u003d taskString.substring(ZERO_INDEX, slashIndex);","lastModifiedDate":"2023-02-25"},{"lineNumber":23,"author":{"gitId":"MuxPotato"},"content":"        if (taskName.isEmpty()) {","lastModifiedDate":"2023-02-25"},{"lineNumber":24,"author":{"gitId":"MuxPotato"},"content":"            System.out.println(\"Task needs to have a name!!!\");","lastModifiedDate":"2023-02-25"},{"lineNumber":25,"author":{"gitId":"MuxPotato"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-25"},{"lineNumber":26,"author":{"gitId":"MuxPotato"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":27,"author":{"gitId":"MuxPotato"},"content":"        taskName \u003d taskName.trim();","lastModifiedDate":"2023-02-25"},{"lineNumber":28,"author":{"gitId":"MuxPotato"},"content":"        return taskName;","lastModifiedDate":"2023-02-25"},{"lineNumber":29,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":30,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":31,"author":{"gitId":"MuxPotato"},"content":"    public static String getEventTaskName(String taskString) throws DukeException {","lastModifiedDate":"2023-02-25"},{"lineNumber":32,"author":{"gitId":"MuxPotato"},"content":"        int slashIndex \u003d taskString.indexOf(\"/from\");","lastModifiedDate":"2023-02-25"},{"lineNumber":33,"author":{"gitId":"MuxPotato"},"content":"        if (slashIndex \u003d\u003d ERROR_NEGATIVE_ONE_RETURNED) {","lastModifiedDate":"2023-02-25"},{"lineNumber":34,"author":{"gitId":"MuxPotato"},"content":"            System.out.println(\"Invalid Event String formatting: /from is missing\");","lastModifiedDate":"2023-02-25"},{"lineNumber":35,"author":{"gitId":"MuxPotato"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-25"},{"lineNumber":36,"author":{"gitId":"MuxPotato"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":37,"author":{"gitId":"MuxPotato"},"content":"        String taskName \u003d taskString.substring(ZERO_INDEX, slashIndex);","lastModifiedDate":"2023-02-25"},{"lineNumber":38,"author":{"gitId":"MuxPotato"},"content":"        if (taskName.isEmpty()) {","lastModifiedDate":"2023-02-25"},{"lineNumber":39,"author":{"gitId":"MuxPotato"},"content":"            System.out.println(\"Task needs to have a name!!!\");","lastModifiedDate":"2023-02-25"},{"lineNumber":40,"author":{"gitId":"MuxPotato"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-25"},{"lineNumber":41,"author":{"gitId":"MuxPotato"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":42,"author":{"gitId":"MuxPotato"},"content":"        taskName \u003d taskName.trim();","lastModifiedDate":"2023-02-25"},{"lineNumber":43,"author":{"gitId":"MuxPotato"},"content":"        return taskName;","lastModifiedDate":"2023-02-25"},{"lineNumber":44,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":45,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":46,"author":{"gitId":"MuxPotato"},"content":"    public static String getEventFromDate(String taskString) throws DukeException {","lastModifiedDate":"2023-02-25"},{"lineNumber":47,"author":{"gitId":"MuxPotato"},"content":"        String[] taskStringPartsSplitByFrom \u003d taskString.split(\"/from\");","lastModifiedDate":"2023-02-25"},{"lineNumber":48,"author":{"gitId":"MuxPotato"},"content":"        String[] taskStringPartsSplitByTo \u003d taskStringPartsSplitByFrom[ONE_INDEX].split(\"/to\");","lastModifiedDate":"2023-02-25"},{"lineNumber":49,"author":{"gitId":"MuxPotato"},"content":"        if (taskStringPartsSplitByTo.length \u003c\u003d 1) {","lastModifiedDate":"2023-02-25"},{"lineNumber":50,"author":{"gitId":"MuxPotato"},"content":"            System.out.println(\"Invalid Event String formatting\");","lastModifiedDate":"2023-02-25"},{"lineNumber":51,"author":{"gitId":"MuxPotato"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-25"},{"lineNumber":52,"author":{"gitId":"MuxPotato"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":53,"author":{"gitId":"MuxPotato"},"content":"        String eventFromDate \u003d taskStringPartsSplitByTo[ZERO_INDEX].trim();","lastModifiedDate":"2023-02-25"},{"lineNumber":54,"author":{"gitId":"MuxPotato"},"content":"        if (eventFromDate.isEmpty()) {","lastModifiedDate":"2023-02-25"},{"lineNumber":55,"author":{"gitId":"MuxPotato"},"content":"            System.out.println(\"Invalid Event String formatting\");","lastModifiedDate":"2023-02-25"},{"lineNumber":56,"author":{"gitId":"MuxPotato"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-25"},{"lineNumber":57,"author":{"gitId":"MuxPotato"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":58,"author":{"gitId":"MuxPotato"},"content":"        return eventFromDate;","lastModifiedDate":"2023-02-25"},{"lineNumber":59,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":60,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":61,"author":{"gitId":"MuxPotato"},"content":"    public static String getEventToDate (String taskString) throws DukeException {","lastModifiedDate":"2023-02-25"},{"lineNumber":62,"author":{"gitId":"MuxPotato"},"content":"        String[] taskStringPartsSplitByFrom \u003d taskString.split(\"/from\");","lastModifiedDate":"2023-02-25"},{"lineNumber":63,"author":{"gitId":"MuxPotato"},"content":"        String[] taskStringPartsSplitByTo \u003d taskStringPartsSplitByFrom[ONE_INDEX].split(\"/to\");","lastModifiedDate":"2023-02-25"},{"lineNumber":64,"author":{"gitId":"MuxPotato"},"content":"        if (taskStringPartsSplitByTo.length \u003c\u003d 1) {","lastModifiedDate":"2023-02-25"},{"lineNumber":65,"author":{"gitId":"MuxPotato"},"content":"            System.out.println(\"Invalid Event String formatting: Either /to is missing or no description after /to\");","lastModifiedDate":"2023-02-25"},{"lineNumber":66,"author":{"gitId":"MuxPotato"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-25"},{"lineNumber":67,"author":{"gitId":"MuxPotato"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":68,"author":{"gitId":"MuxPotato"},"content":"        String eventDueDate \u003d taskStringPartsSplitByTo[ONE_INDEX].trim();","lastModifiedDate":"2023-02-25"},{"lineNumber":69,"author":{"gitId":"MuxPotato"},"content":"        if (eventDueDate.isEmpty()) {","lastModifiedDate":"2023-02-25"},{"lineNumber":70,"author":{"gitId":"MuxPotato"},"content":"            System.out.println(\"Invalid Event String formatting\");","lastModifiedDate":"2023-02-25"},{"lineNumber":71,"author":{"gitId":"MuxPotato"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-25"},{"lineNumber":72,"author":{"gitId":"MuxPotato"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":73,"author":{"gitId":"MuxPotato"},"content":"        return eventDueDate;","lastModifiedDate":"2023-02-25"},{"lineNumber":74,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":75,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":76,"author":{"gitId":"MuxPotato"},"content":"    // Comment: When this function is called, we assumed that /by is found and exists","lastModifiedDate":"2023-02-25"},{"lineNumber":77,"author":{"gitId":"MuxPotato"},"content":"    public static String getDeadlineDueDateString(String taskString) throws DukeException {","lastModifiedDate":"2023-02-25"},{"lineNumber":78,"author":{"gitId":"MuxPotato"},"content":"        String[] taskStringParts \u003d taskString.split(\"/by\");","lastModifiedDate":"2023-02-25"},{"lineNumber":79,"author":{"gitId":"MuxPotato"},"content":"        if (taskStringParts.length !\u003d 2) {","lastModifiedDate":"2023-02-25"},{"lineNumber":80,"author":{"gitId":"MuxPotato"},"content":"            System.out.println(\"Invalid Deadline String formatting: Description after /by is missing\");","lastModifiedDate":"2023-02-25"},{"lineNumber":81,"author":{"gitId":"MuxPotato"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-25"},{"lineNumber":82,"author":{"gitId":"MuxPotato"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":83,"author":{"gitId":"MuxPotato"},"content":"        return taskStringParts[ONE_INDEX].trim();","lastModifiedDate":"2023-02-25"},{"lineNumber":84,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":85,"author":{"gitId":"MuxPotato"},"content":"    public static String getTaskString(String userInput, String userCommand) throws DukeException {","lastModifiedDate":"2023-02-25"},{"lineNumber":86,"author":{"gitId":"MuxPotato"},"content":"        int userInputLength \u003d userInput.trim().length();","lastModifiedDate":"2023-02-25"},{"lineNumber":87,"author":{"gitId":"MuxPotato"},"content":"        int userCommandLength \u003d userCommand.length();","lastModifiedDate":"2023-02-25"},{"lineNumber":88,"author":{"gitId":"MuxPotato"},"content":"        if (userInputLength \u003c\u003d userCommandLength) {","lastModifiedDate":"2023-02-25"},{"lineNumber":89,"author":{"gitId":"MuxPotato"},"content":"            System.out.println(\"Task Description cannot be empty!!!\");","lastModifiedDate":"2023-02-25"},{"lineNumber":90,"author":{"gitId":"MuxPotato"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-25"},{"lineNumber":91,"author":{"gitId":"MuxPotato"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":92,"author":{"gitId":"MuxPotato"},"content":"        return userInput.substring(userCommand.length() + ONE_INDEX);","lastModifiedDate":"2023-02-25"},{"lineNumber":93,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":94,"author":{"gitId":"MuxPotato"},"content":"}","lastModifiedDate":"2023-02-25"}],"authorContributionMap":{"MuxPotato":94}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MuxPotato"},"content":"import java.io.File;","lastModifiedDate":"2023-02-25"},{"lineNumber":2,"author":{"gitId":"MuxPotato"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-25"},{"lineNumber":3,"author":{"gitId":"MuxPotato"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-25"},{"lineNumber":4,"author":{"gitId":"MuxPotato"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-25"},{"lineNumber":5,"author":{"gitId":"MuxPotato"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-02-25"},{"lineNumber":6,"author":{"gitId":"MuxPotato"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-25"},{"lineNumber":7,"author":{"gitId":"MuxPotato"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-02-25"},{"lineNumber":8,"author":{"gitId":"MuxPotato"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-25"},{"lineNumber":9,"author":{"gitId":"MuxPotato"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-25"},{"lineNumber":10,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":11,"author":{"gitId":"MuxPotato"},"content":"public class Storage {","lastModifiedDate":"2023-02-25"},{"lineNumber":12,"author":{"gitId":"MuxPotato"},"content":"    final static String FILE_PATH \u003d \"data/duke.txt\";","lastModifiedDate":"2023-02-25"},{"lineNumber":13,"author":{"gitId":"MuxPotato"},"content":"    final static String DIRECTORY_PATH \u003d \"data\";","lastModifiedDate":"2023-02-25"},{"lineNumber":14,"author":{"gitId":"MuxPotato"},"content":"    final static int TASK_TYPE_INDEX \u003d 0;","lastModifiedDate":"2023-02-25"},{"lineNumber":15,"author":{"gitId":"MuxPotato"},"content":"    final static int TASK_NAME_INDEX \u003d 1;","lastModifiedDate":"2023-02-25"},{"lineNumber":16,"author":{"gitId":"MuxPotato"},"content":"    final static int TASK_IS_DONE_INDEX \u003d 2;","lastModifiedDate":"2023-02-25"},{"lineNumber":17,"author":{"gitId":"MuxPotato"},"content":"    final static int TASK_DEADLINE_INDEX \u003d 3;","lastModifiedDate":"2023-02-25"},{"lineNumber":18,"author":{"gitId":"MuxPotato"},"content":"    final static int TASK_EVENT_START_TIME_INDEX \u003d 3;","lastModifiedDate":"2023-02-25"},{"lineNumber":19,"author":{"gitId":"MuxPotato"},"content":"    final static int TASK_EVENT_END_TIME_INDEX \u003d 4;","lastModifiedDate":"2023-02-25"},{"lineNumber":20,"author":{"gitId":"MuxPotato"},"content":"    final static int EMPTY_FILE \u003d 0;","lastModifiedDate":"2023-02-25"},{"lineNumber":21,"author":{"gitId":"MuxPotato"},"content":"    public static void saveExistingTasksToFile(TaskList taskList) throws IOException {","lastModifiedDate":"2023-02-25"},{"lineNumber":22,"author":{"gitId":"MuxPotato"},"content":"        ArrayList\u003cTask\u003e userTasks \u003d taskList.getUserTasksArrayList();","lastModifiedDate":"2023-02-25"},{"lineNumber":23,"author":{"gitId":"MuxPotato"},"content":"        String saveFilePath \u003d FILE_PATH;","lastModifiedDate":"2023-02-25"},{"lineNumber":24,"author":{"gitId":"MuxPotato"},"content":"        if (userTasks.size() \u003d\u003d EMPTY_FILE) { // fixs the bug that the last task in the file cannot be deleted","lastModifiedDate":"2023-02-25"},{"lineNumber":25,"author":{"gitId":"MuxPotato"},"content":"            writeToFile(saveFilePath, \"\", false);","lastModifiedDate":"2023-02-25"},{"lineNumber":26,"author":{"gitId":"MuxPotato"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":27,"author":{"gitId":"MuxPotato"},"content":"        for (int i \u003d 0; i \u003c userTasks.size(); i++) {","lastModifiedDate":"2023-02-25"},{"lineNumber":28,"author":{"gitId":"MuxPotato"},"content":"            Task currentTask \u003d userTasks.get(i);","lastModifiedDate":"2023-02-25"},{"lineNumber":29,"author":{"gitId":"MuxPotato"},"content":"            Boolean isAppendMode \u003d true;","lastModifiedDate":"2023-02-25"},{"lineNumber":30,"author":{"gitId":"MuxPotato"},"content":"            if (i \u003d\u003d 0) {","lastModifiedDate":"2023-02-25"},{"lineNumber":31,"author":{"gitId":"MuxPotato"},"content":"                isAppendMode \u003d false;","lastModifiedDate":"2023-02-25"},{"lineNumber":32,"author":{"gitId":"MuxPotato"},"content":"            }","lastModifiedDate":"2023-02-25"},{"lineNumber":33,"author":{"gitId":"MuxPotato"},"content":"            if (currentTask instanceof Todo) {","lastModifiedDate":"2023-02-25"},{"lineNumber":34,"author":{"gitId":"MuxPotato"},"content":"                writeToFile(saveFilePath, \"T , \" + currentTask.getTaskName() + \" , \" + currentTask.getisDone() + System.lineSeparator(), isAppendMode);","lastModifiedDate":"2023-02-25"},{"lineNumber":35,"author":{"gitId":"MuxPotato"},"content":"            } else if (currentTask instanceof Deadline) {","lastModifiedDate":"2023-02-25"},{"lineNumber":36,"author":{"gitId":"MuxPotato"},"content":"                writeToFile(saveFilePath, \"D , \" + currentTask.getTaskName() + \" , \" + currentTask.getisDone() + \" , \" + ((Deadline) currentTask).deadline +","lastModifiedDate":"2023-02-25"},{"lineNumber":37,"author":{"gitId":"MuxPotato"},"content":"                        System.lineSeparator(), isAppendMode);","lastModifiedDate":"2023-02-25"},{"lineNumber":38,"author":{"gitId":"MuxPotato"},"content":"            } else { // current task is instance of event","lastModifiedDate":"2023-02-25"},{"lineNumber":39,"author":{"gitId":"MuxPotato"},"content":"                writeToFile(saveFilePath, \"E , \" + currentTask.getTaskName() + \" , \" + currentTask.getisDone() + \" , \" + ((Event) currentTask).startTime +","lastModifiedDate":"2023-02-25"},{"lineNumber":40,"author":{"gitId":"MuxPotato"},"content":"                        \" , \" + ((Event) currentTask).endTime + System.lineSeparator(), isAppendMode);","lastModifiedDate":"2023-02-25"},{"lineNumber":41,"author":{"gitId":"MuxPotato"},"content":"            }","lastModifiedDate":"2023-02-25"},{"lineNumber":42,"author":{"gitId":"MuxPotato"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":43,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":44,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":45,"author":{"gitId":"MuxPotato"},"content":"    public static void writeToFile(String filePath, String textToAdd, Boolean isAppendMode) throws IOException {","lastModifiedDate":"2023-02-25"},{"lineNumber":46,"author":{"gitId":"MuxPotato"},"content":"        FileWriter fileWriter \u003d new FileWriter(filePath, isAppendMode);","lastModifiedDate":"2023-02-25"},{"lineNumber":47,"author":{"gitId":"MuxPotato"},"content":"        fileWriter.write(textToAdd);","lastModifiedDate":"2023-02-25"},{"lineNumber":48,"author":{"gitId":"MuxPotato"},"content":"        fileWriter.close();","lastModifiedDate":"2023-02-25"},{"lineNumber":49,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":50,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":51,"author":{"gitId":"MuxPotato"},"content":"    public static TaskList retrieveExistingTasksFromFile(String filePath) throws FileNotFoundException {","lastModifiedDate":"2023-02-25"},{"lineNumber":52,"author":{"gitId":"MuxPotato"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2023-02-25"},{"lineNumber":53,"author":{"gitId":"MuxPotato"},"content":"        Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2023-02-25"},{"lineNumber":54,"author":{"gitId":"MuxPotato"},"content":"        ArrayList\u003cTask\u003e userTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-25"},{"lineNumber":55,"author":{"gitId":"MuxPotato"},"content":"        TaskList taskList \u003d new TaskList(userTasks);","lastModifiedDate":"2023-02-25"},{"lineNumber":56,"author":{"gitId":"MuxPotato"},"content":"        while (scanner.hasNext()) {","lastModifiedDate":"2023-02-25"},{"lineNumber":57,"author":{"gitId":"MuxPotato"},"content":"            String Line \u003d scanner.nextLine();","lastModifiedDate":"2023-02-25"},{"lineNumber":58,"author":{"gitId":"MuxPotato"},"content":"            String[] taskInformationWords \u003d Line.split(\",\");","lastModifiedDate":"2023-02-25"},{"lineNumber":59,"author":{"gitId":"MuxPotato"},"content":"            String taskType \u003d taskInformationWords[TASK_TYPE_INDEX].trim();","lastModifiedDate":"2023-02-25"},{"lineNumber":60,"author":{"gitId":"MuxPotato"},"content":"            if (taskType.equals(\"T\")) {","lastModifiedDate":"2023-02-25"},{"lineNumber":61,"author":{"gitId":"MuxPotato"},"content":"                loadTodoTaskFromSaveFile(taskList, taskInformationWords);","lastModifiedDate":"2023-02-25"},{"lineNumber":62,"author":{"gitId":"MuxPotato"},"content":"            } else if (taskType.equals(\"D\")) {","lastModifiedDate":"2023-02-25"},{"lineNumber":63,"author":{"gitId":"MuxPotato"},"content":"                loadDeadlineTaskFromSaveFile(taskList, taskInformationWords);","lastModifiedDate":"2023-02-25"},{"lineNumber":64,"author":{"gitId":"MuxPotato"},"content":"            } else if (taskType.equals(\"E\")) {","lastModifiedDate":"2023-02-25"},{"lineNumber":65,"author":{"gitId":"MuxPotato"},"content":"                loadEventTaskFromSaveFile(taskList, taskInformationWords);","lastModifiedDate":"2023-02-25"},{"lineNumber":66,"author":{"gitId":"MuxPotato"},"content":"            }","lastModifiedDate":"2023-02-25"},{"lineNumber":67,"author":{"gitId":"MuxPotato"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":68,"author":{"gitId":"MuxPotato"},"content":"        return taskList;","lastModifiedDate":"2023-02-25"},{"lineNumber":69,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":70,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":71,"author":{"gitId":"MuxPotato"},"content":"    public static void loadEventTaskFromSaveFile(TaskList taskList, String[] taskInformationWords) {","lastModifiedDate":"2023-02-25"},{"lineNumber":72,"author":{"gitId":"MuxPotato"},"content":"        String taskName \u003d taskInformationWords[TASK_NAME_INDEX].trim();","lastModifiedDate":"2023-02-25"},{"lineNumber":73,"author":{"gitId":"MuxPotato"},"content":"        Boolean isDone \u003d false;","lastModifiedDate":"2023-02-25"},{"lineNumber":74,"author":{"gitId":"MuxPotato"},"content":"        if (taskInformationWords[TASK_IS_DONE_INDEX].trim().equals(\"true\")) {","lastModifiedDate":"2023-02-25"},{"lineNumber":75,"author":{"gitId":"MuxPotato"},"content":"            isDone \u003d true;","lastModifiedDate":"2023-02-25"},{"lineNumber":76,"author":{"gitId":"MuxPotato"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":77,"author":{"gitId":"MuxPotato"},"content":"        String taskEventStartTime \u003d taskInformationWords[TASK_EVENT_START_TIME_INDEX].trim();","lastModifiedDate":"2023-02-25"},{"lineNumber":78,"author":{"gitId":"MuxPotato"},"content":"        String taskEventEndTime \u003d taskInformationWords[TASK_EVENT_END_TIME_INDEX].trim();","lastModifiedDate":"2023-02-25"},{"lineNumber":79,"author":{"gitId":"MuxPotato"},"content":"        Event newEventTask \u003d new Event(taskName, taskEventStartTime, taskEventEndTime);","lastModifiedDate":"2023-02-25"},{"lineNumber":80,"author":{"gitId":"MuxPotato"},"content":"        newEventTask.setisDone(isDone);","lastModifiedDate":"2023-02-25"},{"lineNumber":81,"author":{"gitId":"MuxPotato"},"content":"        taskList.addUserTask(newEventTask);","lastModifiedDate":"2023-02-25"},{"lineNumber":82,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":83,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":84,"author":{"gitId":"MuxPotato"},"content":"    public static void loadDeadlineTaskFromSaveFile(TaskList taskList, String[] taskInformationWords) {","lastModifiedDate":"2023-02-25"},{"lineNumber":85,"author":{"gitId":"MuxPotato"},"content":"        String taskName \u003d taskInformationWords[TASK_NAME_INDEX].trim();","lastModifiedDate":"2023-02-25"},{"lineNumber":86,"author":{"gitId":"MuxPotato"},"content":"        Boolean isDone \u003d false;","lastModifiedDate":"2023-02-25"},{"lineNumber":87,"author":{"gitId":"MuxPotato"},"content":"        if (taskInformationWords[TASK_IS_DONE_INDEX].trim().equals(\"true\")) {","lastModifiedDate":"2023-02-25"},{"lineNumber":88,"author":{"gitId":"MuxPotato"},"content":"            isDone \u003d true;","lastModifiedDate":"2023-02-25"},{"lineNumber":89,"author":{"gitId":"MuxPotato"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":90,"author":{"gitId":"MuxPotato"},"content":"        String taskDeadline \u003d taskInformationWords[TASK_DEADLINE_INDEX].trim();","lastModifiedDate":"2023-02-25"},{"lineNumber":91,"author":{"gitId":"MuxPotato"},"content":"        Deadline newDeadlineTask \u003d new Deadline(taskName, taskDeadline);","lastModifiedDate":"2023-02-25"},{"lineNumber":92,"author":{"gitId":"MuxPotato"},"content":"        newDeadlineTask.setisDone(isDone);","lastModifiedDate":"2023-02-25"},{"lineNumber":93,"author":{"gitId":"MuxPotato"},"content":"        taskList.addUserTask(newDeadlineTask);","lastModifiedDate":"2023-02-25"},{"lineNumber":94,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":95,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":96,"author":{"gitId":"MuxPotato"},"content":"    public static void loadTodoTaskFromSaveFile(TaskList taskList, String[] taskInformationWords) {","lastModifiedDate":"2023-02-25"},{"lineNumber":97,"author":{"gitId":"MuxPotato"},"content":"        String taskName \u003d taskInformationWords[TASK_NAME_INDEX].trim();","lastModifiedDate":"2023-02-25"},{"lineNumber":98,"author":{"gitId":"MuxPotato"},"content":"        Boolean isDone \u003d false;","lastModifiedDate":"2023-02-25"},{"lineNumber":99,"author":{"gitId":"MuxPotato"},"content":"        if (taskInformationWords[TASK_IS_DONE_INDEX].trim().equals(\"true\")) {","lastModifiedDate":"2023-02-25"},{"lineNumber":100,"author":{"gitId":"MuxPotato"},"content":"            isDone \u003d true;","lastModifiedDate":"2023-02-25"},{"lineNumber":101,"author":{"gitId":"MuxPotato"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":102,"author":{"gitId":"MuxPotato"},"content":"        Todo newTodoTask \u003d new Todo(taskName);","lastModifiedDate":"2023-02-25"},{"lineNumber":103,"author":{"gitId":"MuxPotato"},"content":"        newTodoTask.setisDone(isDone);","lastModifiedDate":"2023-02-25"},{"lineNumber":104,"author":{"gitId":"MuxPotato"},"content":"        taskList.addUserTask(newTodoTask);","lastModifiedDate":"2023-02-25"},{"lineNumber":105,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":106,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":107,"author":{"gitId":"MuxPotato"},"content":"    public static boolean isSaveDirectoryPresent(String DIRECTORY_PATH) {","lastModifiedDate":"2023-02-25"},{"lineNumber":108,"author":{"gitId":"MuxPotato"},"content":"        Path directoryPath \u003d Paths.get(DIRECTORY_PATH);","lastModifiedDate":"2023-02-25"},{"lineNumber":109,"author":{"gitId":"MuxPotato"},"content":"        if (Files.exists(directoryPath) \u0026\u0026 Files.isDirectory(directoryPath)) {","lastModifiedDate":"2023-02-25"},{"lineNumber":110,"author":{"gitId":"MuxPotato"},"content":"            return true;","lastModifiedDate":"2023-02-25"},{"lineNumber":111,"author":{"gitId":"MuxPotato"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":112,"author":{"gitId":"MuxPotato"},"content":"        return false;","lastModifiedDate":"2023-02-25"},{"lineNumber":113,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":114,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":115,"author":{"gitId":"MuxPotato"},"content":"    public static void createSaveFileDirectory(String DIRECTORY_PATH) {","lastModifiedDate":"2023-02-25"},{"lineNumber":116,"author":{"gitId":"MuxPotato"},"content":"        File file \u003d new File(DIRECTORY_PATH);","lastModifiedDate":"2023-02-25"},{"lineNumber":117,"author":{"gitId":"MuxPotato"},"content":"        if (file.mkdir() \u003d\u003d true) {","lastModifiedDate":"2023-02-25"},{"lineNumber":118,"author":{"gitId":"MuxPotato"},"content":"            System.out.println(\"Directory successfully created at [project_root]/\" + DIRECTORY_PATH);","lastModifiedDate":"2023-02-25"},{"lineNumber":119,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":120,"author":{"gitId":"MuxPotato"},"content":"        } else {","lastModifiedDate":"2023-02-25"},{"lineNumber":121,"author":{"gitId":"MuxPotato"},"content":"            System.out.println(\"Failed to create directory, data might be lost\");","lastModifiedDate":"2023-02-25"},{"lineNumber":122,"author":{"gitId":"MuxPotato"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":123,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":124,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":125,"author":{"gitId":"MuxPotato"},"content":"    public static void saveData(String DIRECTORY_PATH, String FILE_PATH, TaskList taskList) throws IOException {","lastModifiedDate":"2023-02-25"},{"lineNumber":126,"author":{"gitId":"MuxPotato"},"content":"        if (isSaveDirectoryPresent(DIRECTORY_PATH) \u003d\u003d false) {","lastModifiedDate":"2023-02-25"},{"lineNumber":127,"author":{"gitId":"MuxPotato"},"content":"            createSaveFileDirectory(DIRECTORY_PATH);","lastModifiedDate":"2023-02-25"},{"lineNumber":128,"author":{"gitId":"MuxPotato"},"content":"            if (isSaveDirectoryPresent(DIRECTORY_PATH) \u003d\u003d false) {","lastModifiedDate":"2023-02-25"},{"lineNumber":129,"author":{"gitId":"MuxPotato"},"content":"                throw new IOException();","lastModifiedDate":"2023-02-25"},{"lineNumber":130,"author":{"gitId":"MuxPotato"},"content":"            }","lastModifiedDate":"2023-02-25"},{"lineNumber":131,"author":{"gitId":"MuxPotato"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":132,"author":{"gitId":"MuxPotato"},"content":"        saveExistingTasksToFile(taskList);","lastModifiedDate":"2023-02-25"},{"lineNumber":133,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":134,"author":{"gitId":"MuxPotato"},"content":"}","lastModifiedDate":"2023-02-25"}],"authorContributionMap":{"MuxPotato":134}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MuxPotato"},"content":"public class Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"MuxPotato"},"content":"    private String taskName;","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"MuxPotato"},"content":"    private Boolean isDone;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"MuxPotato"},"content":"    public Task() {","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"MuxPotato"},"content":"        taskName \u003d \"\";","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"MuxPotato"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"MuxPotato"},"content":"    public Task(String taskName) {","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"MuxPotato"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"MuxPotato"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"MuxPotato"},"content":"    public String getTaskName() {","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"MuxPotato"},"content":"        return taskName;","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"MuxPotato"},"content":"    public Boolean getisDone() {","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"MuxPotato"},"content":"        return isDone;","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"MuxPotato"},"content":"    public void setTaskName (String taskName) {","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"MuxPotato"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"MuxPotato"},"content":"    public void setisDone(Boolean isDone) {","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"MuxPotato"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"MuxPotato"},"content":"    public String toString() {","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"MuxPotato"},"content":"        if (isDone) {","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"MuxPotato"},"content":"            return \"[X] \" + taskName;","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"MuxPotato"},"content":"        } else {","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"MuxPotato"},"content":"            return \"[ ] \" + taskName;","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"MuxPotato"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"MuxPotato"},"content":"}","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"MuxPotato":40}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MuxPotato"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-25"},{"lineNumber":2,"author":{"gitId":"MuxPotato"},"content":"public class TaskList {","lastModifiedDate":"2023-02-25"},{"lineNumber":3,"author":{"gitId":"MuxPotato"},"content":"    public TaskList(ArrayList\u003cTask\u003e userTasks) {","lastModifiedDate":"2023-02-25"},{"lineNumber":4,"author":{"gitId":"MuxPotato"},"content":"        this.userTasks \u003d userTasks;","lastModifiedDate":"2023-02-25"},{"lineNumber":5,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":6,"author":{"gitId":"MuxPotato"},"content":"    private ArrayList\u003cTask\u003e userTasks;","lastModifiedDate":"2023-02-25"},{"lineNumber":7,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":8,"author":{"gitId":"MuxPotato"},"content":"    public ArrayList\u003cTask\u003e getUserTasksArrayList() {","lastModifiedDate":"2023-02-25"},{"lineNumber":9,"author":{"gitId":"MuxPotato"},"content":"        return userTasks;","lastModifiedDate":"2023-02-25"},{"lineNumber":10,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":11,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":12,"author":{"gitId":"MuxPotato"},"content":"    public Task getUserTask(int index) {","lastModifiedDate":"2023-02-25"},{"lineNumber":13,"author":{"gitId":"MuxPotato"},"content":"        return userTasks.get(index);","lastModifiedDate":"2023-02-25"},{"lineNumber":14,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":15,"author":{"gitId":"MuxPotato"},"content":"    public void addUserTask(Task newTask) {","lastModifiedDate":"2023-02-25"},{"lineNumber":16,"author":{"gitId":"MuxPotato"},"content":"        userTasks.add(newTask);","lastModifiedDate":"2023-02-25"},{"lineNumber":17,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":18,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":19,"author":{"gitId":"MuxPotato"},"content":"    public void removeUserTask(int index) {","lastModifiedDate":"2023-02-25"},{"lineNumber":20,"author":{"gitId":"MuxPotato"},"content":"        userTasks.remove(index);","lastModifiedDate":"2023-02-25"},{"lineNumber":21,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":22,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":23,"author":{"gitId":"MuxPotato"},"content":"    public int getNumberOfUserTasks() {","lastModifiedDate":"2023-02-25"},{"lineNumber":24,"author":{"gitId":"MuxPotato"},"content":"        return userTasks.size();","lastModifiedDate":"2023-02-25"},{"lineNumber":25,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":26,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":27,"author":{"gitId":"MuxPotato"},"content":"    public void setTaskDone(int index) {","lastModifiedDate":"2023-02-25"},{"lineNumber":28,"author":{"gitId":"MuxPotato"},"content":"        userTasks.get(index).setisDone(true);","lastModifiedDate":"2023-02-25"},{"lineNumber":29,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":30,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":31,"author":{"gitId":"MuxPotato"},"content":"    public void setTaskNotDone(int index) {","lastModifiedDate":"2023-02-25"},{"lineNumber":32,"author":{"gitId":"MuxPotato"},"content":"        userTasks.get(index).setisDone(false);","lastModifiedDate":"2023-02-25"},{"lineNumber":33,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":34,"author":{"gitId":"MuxPotato"},"content":"}","lastModifiedDate":"2023-02-25"}],"authorContributionMap":{"MuxPotato":34}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MuxPotato"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"MuxPotato"},"content":"    public Todo(String taskName) {","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"MuxPotato"},"content":"        super(taskName);","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"MuxPotato"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"MuxPotato"},"content":"    public String toString() {","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"MuxPotato"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"MuxPotato"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"MuxPotato":10}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MuxPotato"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-25"},{"lineNumber":2,"author":{"gitId":"MuxPotato"},"content":"import java.sql.Array;","lastModifiedDate":"2023-02-25"},{"lineNumber":3,"author":{"gitId":"MuxPotato"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-02-25"},{"lineNumber":4,"author":{"gitId":"MuxPotato"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-25"},{"lineNumber":5,"author":{"gitId":"MuxPotato"},"content":"import java.io.File;","lastModifiedDate":"2023-02-25"},{"lineNumber":6,"author":{"gitId":"MuxPotato"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-25"},{"lineNumber":7,"author":{"gitId":"MuxPotato"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-25"},{"lineNumber":8,"author":{"gitId":"MuxPotato"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-25"},{"lineNumber":9,"author":{"gitId":"MuxPotato"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-02-25"},{"lineNumber":10,"author":{"gitId":"MuxPotato"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-02-25"},{"lineNumber":11,"author":{"gitId":"MuxPotato"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-25"},{"lineNumber":12,"author":{"gitId":"MuxPotato"},"content":"public class Ui {","lastModifiedDate":"2023-02-25"},{"lineNumber":13,"author":{"gitId":"MuxPotato"},"content":"    final static int ZERO_INDEX \u003d 0;","lastModifiedDate":"2023-02-25"},{"lineNumber":14,"author":{"gitId":"MuxPotato"},"content":"    final static int ONE_INDEX \u003d 1;","lastModifiedDate":"2023-02-25"},{"lineNumber":15,"author":{"gitId":"MuxPotato"},"content":"    final static int OFFSET_ONE_FOR_ZERO_INDEXING \u003d 1;","lastModifiedDate":"2023-02-25"},{"lineNumber":16,"author":{"gitId":"MuxPotato"},"content":"    final static String DOUBLE_SPACING \u003d \"  \";","lastModifiedDate":"2023-02-25"},{"lineNumber":17,"author":{"gitId":"MuxPotato"},"content":"    final static String FILE_PATH \u003d \"data/duke.txt\";","lastModifiedDate":"2023-02-25"},{"lineNumber":18,"author":{"gitId":"MuxPotato"},"content":"    final static String DIRECTORY_PATH \u003d \"data\";","lastModifiedDate":"2023-02-25"},{"lineNumber":19,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":20,"author":{"gitId":"MuxPotato"},"content":"    public boolean executeUserCommand(TaskList taskList, String userInput) {","lastModifiedDate":"2023-02-25"},{"lineNumber":21,"author":{"gitId":"MuxPotato"},"content":"        userInput \u003d userInput.trim();","lastModifiedDate":"2023-02-25"},{"lineNumber":22,"author":{"gitId":"MuxPotato"},"content":"        String[] userInputWords \u003d userInput.split(\" \");","lastModifiedDate":"2023-02-25"},{"lineNumber":23,"author":{"gitId":"MuxPotato"},"content":"        String userCommandKeyword \u003d userInputWords[ZERO_INDEX];","lastModifiedDate":"2023-02-25"},{"lineNumber":24,"author":{"gitId":"MuxPotato"},"content":"        boolean toContinue \u003d true;","lastModifiedDate":"2023-02-25"},{"lineNumber":25,"author":{"gitId":"MuxPotato"},"content":"        try {","lastModifiedDate":"2023-02-25"},{"lineNumber":26,"author":{"gitId":"MuxPotato"},"content":"            switch (userCommandKeyword) {","lastModifiedDate":"2023-02-25"},{"lineNumber":27,"author":{"gitId":"MuxPotato"},"content":"            case \"list\":","lastModifiedDate":"2023-02-25"},{"lineNumber":28,"author":{"gitId":"MuxPotato"},"content":"                userCommandList(taskList);","lastModifiedDate":"2023-02-25"},{"lineNumber":29,"author":{"gitId":"MuxPotato"},"content":"                break;","lastModifiedDate":"2023-02-25"},{"lineNumber":30,"author":{"gitId":"MuxPotato"},"content":"            case \"bye\":","lastModifiedDate":"2023-02-25"},{"lineNumber":31,"author":{"gitId":"MuxPotato"},"content":"                userCommandBye(taskList);","lastModifiedDate":"2023-02-25"},{"lineNumber":32,"author":{"gitId":"MuxPotato"},"content":"                toContinue \u003d false;","lastModifiedDate":"2023-02-25"},{"lineNumber":33,"author":{"gitId":"MuxPotato"},"content":"                break;","lastModifiedDate":"2023-02-25"},{"lineNumber":34,"author":{"gitId":"MuxPotato"},"content":"            case \"mark\":","lastModifiedDate":"2023-02-25"},{"lineNumber":35,"author":{"gitId":"MuxPotato"},"content":"                userCommandMark(taskList, userInputWords);","lastModifiedDate":"2023-02-25"},{"lineNumber":36,"author":{"gitId":"MuxPotato"},"content":"                break;","lastModifiedDate":"2023-02-25"},{"lineNumber":37,"author":{"gitId":"MuxPotato"},"content":"            case \"unmark\":","lastModifiedDate":"2023-02-25"},{"lineNumber":38,"author":{"gitId":"MuxPotato"},"content":"                userCommandUnmark(taskList, userInputWords);","lastModifiedDate":"2023-02-25"},{"lineNumber":39,"author":{"gitId":"MuxPotato"},"content":"                break;","lastModifiedDate":"2023-02-25"},{"lineNumber":40,"author":{"gitId":"MuxPotato"},"content":"            case \"todo\":","lastModifiedDate":"2023-02-25"},{"lineNumber":41,"author":{"gitId":"MuxPotato"},"content":"                userCommandTodo(taskList, userCommandKeyword, userInput);","lastModifiedDate":"2023-02-25"},{"lineNumber":42,"author":{"gitId":"MuxPotato"},"content":"                break;","lastModifiedDate":"2023-02-25"},{"lineNumber":43,"author":{"gitId":"MuxPotato"},"content":"            case \"deadline\":","lastModifiedDate":"2023-02-25"},{"lineNumber":44,"author":{"gitId":"MuxPotato"},"content":"                userCommandDeadline(taskList, userCommandKeyword, userInput);","lastModifiedDate":"2023-02-25"},{"lineNumber":45,"author":{"gitId":"MuxPotato"},"content":"                break;","lastModifiedDate":"2023-02-25"},{"lineNumber":46,"author":{"gitId":"MuxPotato"},"content":"            case \"event\":","lastModifiedDate":"2023-02-25"},{"lineNumber":47,"author":{"gitId":"MuxPotato"},"content":"                userCommandEvent(taskList, userCommandKeyword, userInput);","lastModifiedDate":"2023-02-25"},{"lineNumber":48,"author":{"gitId":"MuxPotato"},"content":"                break;","lastModifiedDate":"2023-02-25"},{"lineNumber":49,"author":{"gitId":"MuxPotato"},"content":"            case \"delete\":","lastModifiedDate":"2023-02-25"},{"lineNumber":50,"author":{"gitId":"MuxPotato"},"content":"                userCommandDelete(taskList, userInputWords);","lastModifiedDate":"2023-02-25"},{"lineNumber":51,"author":{"gitId":"MuxPotato"},"content":"                break;","lastModifiedDate":"2023-02-25"},{"lineNumber":52,"author":{"gitId":"MuxPotato"},"content":"            default:","lastModifiedDate":"2023-02-25"},{"lineNumber":53,"author":{"gitId":"MuxPotato"},"content":"                userCommandDefault();","lastModifiedDate":"2023-02-25"},{"lineNumber":54,"author":{"gitId":"MuxPotato"},"content":"                break;","lastModifiedDate":"2023-02-25"},{"lineNumber":55,"author":{"gitId":"MuxPotato"},"content":"            }","lastModifiedDate":"2023-02-25"},{"lineNumber":56,"author":{"gitId":"MuxPotato"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-25"},{"lineNumber":57,"author":{"gitId":"MuxPotato"},"content":"            System.out.println(\"Error Found see message above!!!\");","lastModifiedDate":"2023-02-25"},{"lineNumber":58,"author":{"gitId":"MuxPotato"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-25"},{"lineNumber":59,"author":{"gitId":"MuxPotato"},"content":"            System.out.println(\"IO EXCEPTION, Data might be lost\");","lastModifiedDate":"2023-02-25"},{"lineNumber":60,"author":{"gitId":"MuxPotato"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":61,"author":{"gitId":"MuxPotato"},"content":"        return toContinue;","lastModifiedDate":"2023-02-25"},{"lineNumber":62,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":63,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":64,"author":{"gitId":"MuxPotato"},"content":"    private static void userCommandEvent(TaskList taskList, String userCommand, String userInput) throws DukeException {","lastModifiedDate":"2023-02-25"},{"lineNumber":65,"author":{"gitId":"MuxPotato"},"content":"        Event newEventTask \u003d getNewEventTask(userInput, userCommand);","lastModifiedDate":"2023-02-25"},{"lineNumber":66,"author":{"gitId":"MuxPotato"},"content":"        taskList.addUserTask(newEventTask);","lastModifiedDate":"2023-02-25"},{"lineNumber":67,"author":{"gitId":"MuxPotato"},"content":"        printAddedNewTask(taskList);","lastModifiedDate":"2023-02-25"},{"lineNumber":68,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":69,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":70,"author":{"gitId":"MuxPotato"},"content":"    private static Event getNewEventTask(String userInput, String userCommand) throws DukeException {","lastModifiedDate":"2023-02-25"},{"lineNumber":71,"author":{"gitId":"MuxPotato"},"content":"        String taskString \u003d Parser.getTaskString(userInput, userCommand);","lastModifiedDate":"2023-02-25"},{"lineNumber":72,"author":{"gitId":"MuxPotato"},"content":"        String taskName \u003d Parser.getEventTaskName(taskString);","lastModifiedDate":"2023-02-25"},{"lineNumber":73,"author":{"gitId":"MuxPotato"},"content":"        String eventFromDate \u003d Parser.getEventFromDate(taskString);","lastModifiedDate":"2023-02-25"},{"lineNumber":74,"author":{"gitId":"MuxPotato"},"content":"        String eventToDate \u003d Parser.getEventToDate(taskString);","lastModifiedDate":"2023-02-25"},{"lineNumber":75,"author":{"gitId":"MuxPotato"},"content":"        Event newEventTask \u003d new Event(taskName, eventFromDate, eventToDate);","lastModifiedDate":"2023-02-25"},{"lineNumber":76,"author":{"gitId":"MuxPotato"},"content":"        return newEventTask;","lastModifiedDate":"2023-02-25"},{"lineNumber":77,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":78,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":79,"author":{"gitId":"MuxPotato"},"content":"    private static void userCommandDeadline(TaskList taskList, String userCommand, String userInput) throws DukeException {","lastModifiedDate":"2023-02-25"},{"lineNumber":80,"author":{"gitId":"MuxPotato"},"content":"        Deadline newDeadlineTask \u003d getNewDeadlineTask(userInput, userCommand);","lastModifiedDate":"2023-02-25"},{"lineNumber":81,"author":{"gitId":"MuxPotato"},"content":"        taskList.addUserTask(newDeadlineTask);","lastModifiedDate":"2023-02-25"},{"lineNumber":82,"author":{"gitId":"MuxPotato"},"content":"        printAddedNewTask(taskList);","lastModifiedDate":"2023-02-25"},{"lineNumber":83,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":84,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":85,"author":{"gitId":"MuxPotato"},"content":"    private static Deadline getNewDeadlineTask(String userInput, String userCommand) throws DukeException {","lastModifiedDate":"2023-02-25"},{"lineNumber":86,"author":{"gitId":"MuxPotato"},"content":"        String taskString \u003d Parser.getTaskString(userInput, userCommand);","lastModifiedDate":"2023-02-25"},{"lineNumber":87,"author":{"gitId":"MuxPotato"},"content":"        String taskName \u003d Parser.getDeadlineTaskName(taskString);","lastModifiedDate":"2023-02-25"},{"lineNumber":88,"author":{"gitId":"MuxPotato"},"content":"        String deadlineDueDate \u003d Parser.getDeadlineDueDateString(taskString);","lastModifiedDate":"2023-02-25"},{"lineNumber":89,"author":{"gitId":"MuxPotato"},"content":"        Deadline newDeadlineTask \u003d new Deadline(taskName, deadlineDueDate);","lastModifiedDate":"2023-02-25"},{"lineNumber":90,"author":{"gitId":"MuxPotato"},"content":"        return newDeadlineTask;","lastModifiedDate":"2023-02-25"},{"lineNumber":91,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":92,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":93,"author":{"gitId":"MuxPotato"},"content":"    private static void userCommandTodo(TaskList taskList, String userCommand, String userInput) throws DukeException {","lastModifiedDate":"2023-02-25"},{"lineNumber":94,"author":{"gitId":"MuxPotato"},"content":"        Todo newToDoTask \u003d getNewTodoTask(userInput, userCommand);","lastModifiedDate":"2023-02-25"},{"lineNumber":95,"author":{"gitId":"MuxPotato"},"content":"        taskList.addUserTask(newToDoTask);","lastModifiedDate":"2023-02-25"},{"lineNumber":96,"author":{"gitId":"MuxPotato"},"content":"        printAddedNewTask(taskList);","lastModifiedDate":"2023-02-25"},{"lineNumber":97,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":98,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":99,"author":{"gitId":"MuxPotato"},"content":"    private static Todo getNewTodoTask (String userInput, String userCommand) throws DukeException{","lastModifiedDate":"2023-02-25"},{"lineNumber":100,"author":{"gitId":"MuxPotato"},"content":"        String taskString \u003d Parser.getTaskString(userInput, userCommand);","lastModifiedDate":"2023-02-25"},{"lineNumber":101,"author":{"gitId":"MuxPotato"},"content":"        String taskName \u003d Parser.getTodoTaskName(taskString);","lastModifiedDate":"2023-02-25"},{"lineNumber":102,"author":{"gitId":"MuxPotato"},"content":"        Todo newTodoTask \u003d new Todo(taskName);","lastModifiedDate":"2023-02-25"},{"lineNumber":103,"author":{"gitId":"MuxPotato"},"content":"        return newTodoTask;","lastModifiedDate":"2023-02-25"},{"lineNumber":104,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":105,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":106,"author":{"gitId":"MuxPotato"},"content":"    private static void userCommandUnmark(TaskList taskList, String[] userInputWords) throws DukeException {","lastModifiedDate":"2023-02-25"},{"lineNumber":107,"author":{"gitId":"MuxPotato"},"content":"        int taskIndex;","lastModifiedDate":"2023-02-25"},{"lineNumber":108,"author":{"gitId":"MuxPotato"},"content":"        taskIndex \u003d Integer.parseInt(userInputWords[ONE_INDEX]) - OFFSET_ONE_FOR_ZERO_INDEXING;","lastModifiedDate":"2023-02-25"},{"lineNumber":109,"author":{"gitId":"MuxPotato"},"content":"        if (taskIndex + OFFSET_ONE_FOR_ZERO_INDEXING \u003e taskList.getNumberOfUserTasks()) {","lastModifiedDate":"2023-02-25"},{"lineNumber":110,"author":{"gitId":"MuxPotato"},"content":"            System.out.println(\"There is no task that is indexed: \" + taskIndex);","lastModifiedDate":"2023-02-25"},{"lineNumber":111,"author":{"gitId":"MuxPotato"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-25"},{"lineNumber":112,"author":{"gitId":"MuxPotato"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":113,"author":{"gitId":"MuxPotato"},"content":"        if (taskIndex \u003c ZERO_INDEX) {","lastModifiedDate":"2023-02-25"},{"lineNumber":114,"author":{"gitId":"MuxPotato"},"content":"            System.out.println(\"task number given cannot be less than 1\");","lastModifiedDate":"2023-02-25"},{"lineNumber":115,"author":{"gitId":"MuxPotato"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-25"},{"lineNumber":116,"author":{"gitId":"MuxPotato"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":117,"author":{"gitId":"MuxPotato"},"content":"        taskList.setTaskNotDone(taskIndex);","lastModifiedDate":"2023-02-25"},{"lineNumber":118,"author":{"gitId":"MuxPotato"},"content":"        System.out.println(taskList.getUserTask(taskIndex));","lastModifiedDate":"2023-02-25"},{"lineNumber":119,"author":{"gitId":"MuxPotato"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-02-25"},{"lineNumber":120,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":121,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":122,"author":{"gitId":"MuxPotato"},"content":"    private static void userCommandMark(TaskList taskList, String[] userInputWords) throws DukeException {","lastModifiedDate":"2023-02-25"},{"lineNumber":123,"author":{"gitId":"MuxPotato"},"content":"        int taskIndex;","lastModifiedDate":"2023-02-25"},{"lineNumber":124,"author":{"gitId":"MuxPotato"},"content":"        taskIndex \u003d Integer.parseInt(userInputWords[ONE_INDEX]) - OFFSET_ONE_FOR_ZERO_INDEXING;","lastModifiedDate":"2023-02-25"},{"lineNumber":125,"author":{"gitId":"MuxPotato"},"content":"        if (taskIndex + OFFSET_ONE_FOR_ZERO_INDEXING \u003e taskList.getNumberOfUserTasks()) {","lastModifiedDate":"2023-02-25"},{"lineNumber":126,"author":{"gitId":"MuxPotato"},"content":"            System.out.println(\"There is no task that is indexed: \" + taskIndex);","lastModifiedDate":"2023-02-25"},{"lineNumber":127,"author":{"gitId":"MuxPotato"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-25"},{"lineNumber":128,"author":{"gitId":"MuxPotato"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":129,"author":{"gitId":"MuxPotato"},"content":"        if (taskIndex \u003c ZERO_INDEX) {","lastModifiedDate":"2023-02-25"},{"lineNumber":130,"author":{"gitId":"MuxPotato"},"content":"            System.out.println(\"task number given cannot be less than 1\");","lastModifiedDate":"2023-02-25"},{"lineNumber":131,"author":{"gitId":"MuxPotato"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-25"},{"lineNumber":132,"author":{"gitId":"MuxPotato"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":133,"author":{"gitId":"MuxPotato"},"content":"        taskList.setTaskDone(taskIndex);","lastModifiedDate":"2023-02-25"},{"lineNumber":134,"author":{"gitId":"MuxPotato"},"content":"        System.out.println(taskList.getUserTask(taskIndex));","lastModifiedDate":"2023-02-25"},{"lineNumber":135,"author":{"gitId":"MuxPotato"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-02-25"},{"lineNumber":136,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":137,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":138,"author":{"gitId":"MuxPotato"},"content":"    private static void userCommandList(TaskList taskList) {","lastModifiedDate":"2023-02-25"},{"lineNumber":139,"author":{"gitId":"MuxPotato"},"content":"        ArrayList\u003cTask\u003e userTasks \u003d taskList.getUserTasksArrayList();","lastModifiedDate":"2023-02-25"},{"lineNumber":140,"author":{"gitId":"MuxPotato"},"content":"        for(int i \u003d 0; i \u003c userTasks.size(); i++) {","lastModifiedDate":"2023-02-25"},{"lineNumber":141,"author":{"gitId":"MuxPotato"},"content":"            if (userTasks.get(i).getisDone()) {","lastModifiedDate":"2023-02-25"},{"lineNumber":142,"author":{"gitId":"MuxPotato"},"content":"                System.out.println((i + 1) + \". \" + userTasks.get(i));","lastModifiedDate":"2023-02-25"},{"lineNumber":143,"author":{"gitId":"MuxPotato"},"content":"            } else {","lastModifiedDate":"2023-02-25"},{"lineNumber":144,"author":{"gitId":"MuxPotato"},"content":"                System.out.println((i + 1) + \". \" + userTasks.get(i));","lastModifiedDate":"2023-02-25"},{"lineNumber":145,"author":{"gitId":"MuxPotato"},"content":"            }","lastModifiedDate":"2023-02-25"},{"lineNumber":146,"author":{"gitId":"MuxPotato"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":147,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":148,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":149,"author":{"gitId":"MuxPotato"},"content":"    private static void userCommandBye(TaskList taskList) throws IOException {","lastModifiedDate":"2023-02-25"},{"lineNumber":150,"author":{"gitId":"MuxPotato"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-02-25"},{"lineNumber":151,"author":{"gitId":"MuxPotato"},"content":"        Storage.saveData(DIRECTORY_PATH, FILE_PATH, taskList);","lastModifiedDate":"2023-02-25"},{"lineNumber":152,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":153,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":154,"author":{"gitId":"MuxPotato"},"content":"    private static void userCommandDefault() throws DukeException {","lastModifiedDate":"2023-02-25"},{"lineNumber":155,"author":{"gitId":"MuxPotato"},"content":"        System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-02-25"},{"lineNumber":156,"author":{"gitId":"MuxPotato"},"content":"        throw new DukeException();","lastModifiedDate":"2023-02-25"},{"lineNumber":157,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":158,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":159,"author":{"gitId":"MuxPotato"},"content":"    private static void userCommandDelete(TaskList taskList, String[] userInputWords) throws DukeException {","lastModifiedDate":"2023-02-25"},{"lineNumber":160,"author":{"gitId":"MuxPotato"},"content":"        int taskIndex;","lastModifiedDate":"2023-02-25"},{"lineNumber":161,"author":{"gitId":"MuxPotato"},"content":"        taskIndex \u003d Integer.parseInt(userInputWords[ONE_INDEX]) - OFFSET_ONE_FOR_ZERO_INDEXING;","lastModifiedDate":"2023-02-25"},{"lineNumber":162,"author":{"gitId":"MuxPotato"},"content":"        if (taskIndex + OFFSET_ONE_FOR_ZERO_INDEXING \u003e taskList.getNumberOfUserTasks()) {","lastModifiedDate":"2023-02-25"},{"lineNumber":163,"author":{"gitId":"MuxPotato"},"content":"            System.out.println(\"There is no task that is indexed: \" + taskIndex);","lastModifiedDate":"2023-02-25"},{"lineNumber":164,"author":{"gitId":"MuxPotato"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-25"},{"lineNumber":165,"author":{"gitId":"MuxPotato"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":166,"author":{"gitId":"MuxPotato"},"content":"        if (taskIndex \u003c ZERO_INDEX) {","lastModifiedDate":"2023-02-25"},{"lineNumber":167,"author":{"gitId":"MuxPotato"},"content":"            System.out.println(\"task number given cannot be less than 1\");","lastModifiedDate":"2023-02-25"},{"lineNumber":168,"author":{"gitId":"MuxPotato"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-25"},{"lineNumber":169,"author":{"gitId":"MuxPotato"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":170,"author":{"gitId":"MuxPotato"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task: \");","lastModifiedDate":"2023-02-25"},{"lineNumber":171,"author":{"gitId":"MuxPotato"},"content":"        System.out.println(DOUBLE_SPACING + taskList.getUserTask(taskIndex));","lastModifiedDate":"2023-02-25"},{"lineNumber":172,"author":{"gitId":"MuxPotato"},"content":"        taskList.removeUserTask(taskIndex);","lastModifiedDate":"2023-02-25"},{"lineNumber":173,"author":{"gitId":"MuxPotato"},"content":"        System.out.println(\"Now you have \" + taskList.getNumberOfUserTasks() + \" in the list.\");","lastModifiedDate":"2023-02-25"},{"lineNumber":174,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":175,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":176,"author":{"gitId":"MuxPotato"},"content":"    private static void printAddedNewTask(TaskList taskList) {","lastModifiedDate":"2023-02-25"},{"lineNumber":177,"author":{"gitId":"MuxPotato"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\"); // shift this line below with the another print statement later","lastModifiedDate":"2023-02-25"},{"lineNumber":178,"author":{"gitId":"MuxPotato"},"content":"        int numOfUserTasks \u003d taskList.getNumberOfUserTasks();","lastModifiedDate":"2023-02-25"},{"lineNumber":179,"author":{"gitId":"MuxPotato"},"content":"        System.out.println(taskList.getUserTask(numOfUserTasks- OFFSET_ONE_FOR_ZERO_INDEXING));","lastModifiedDate":"2023-02-25"},{"lineNumber":180,"author":{"gitId":"MuxPotato"},"content":"        System.out.println(\"Now you have \" + numOfUserTasks + \" in the list.\");","lastModifiedDate":"2023-02-25"},{"lineNumber":181,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":182,"author":{"gitId":"MuxPotato"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":183,"author":{"gitId":"MuxPotato"},"content":"    public static void executeListCommand(TaskList taskList) {","lastModifiedDate":"2023-02-25"},{"lineNumber":184,"author":{"gitId":"MuxPotato"},"content":"        userCommandList(taskList);","lastModifiedDate":"2023-02-25"},{"lineNumber":185,"author":{"gitId":"MuxPotato"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":186,"author":{"gitId":"MuxPotato"},"content":"}","lastModifiedDate":"2023-02-25"}],"authorContributionMap":{"MuxPotato":186}}]
