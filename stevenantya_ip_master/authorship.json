[{"path":"data/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"stevenantya"},"content":"todo 2 ","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"stevenantya"},"content":"deadline book is life /by tom ","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"stevenantya"},"content":"todo 1 ","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"stevenantya"},"content":"deadline 1 /by tom ","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"stevenantya"},"content":"event 1 /from 1 /to 2 ","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"stevenantya":5}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"stevenantya"},"content":"# Duke Task User Guide","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"stevenantya"},"content":"Assisting you to keep track of your tasks through our CLI command","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"stevenantya"},"content":"## Quick Start","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"stevenantya"},"content":"1. Download Java 11 or above on your computer.","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"stevenantya"},"content":"2. Download `ip.jar`.","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"stevenantya"},"content":"3. Navigate to the path of `ip.jar`, right click, open in terminal","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"stevenantya"},"content":"4. Run `java -jar ip.jar`","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"stevenantya"},"content":"5. You should see  ` Hello! I\u0027m Elzi, your dog!","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"stevenantya"},"content":"   What can I do for my master?` greeeting you","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"stevenantya"},"content":"### Adding Todo task: `todo`","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"stevenantya"},"content":"Adds Todo to the task list.","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"stevenantya"},"content":"Format: `todo DESCRIPTION`","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"stevenantya"},"content":"Example:","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"stevenantya"},"content":"`todo Do My Reading`","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"stevenantya"},"content":"Expected output:","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"stevenantya"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"stevenantya"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"stevenantya"},"content":"\t[T][ ] Do My Reading","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"stevenantya"},"content":"Now you have 1 task in the list.","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"stevenantya"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":29,"author":{"gitId":"stevenantya"},"content":"### Adding Deadline task: `deadline`","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"stevenantya"},"content":"Adds Deadline to the task list.","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":32,"author":{"gitId":"stevenantya"},"content":"Format: `deadline DESCRIPTION /by TIME`","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":34,"author":{"gitId":"stevenantya"},"content":"Example:","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"stevenantya"},"content":"`deadline Do homework /by tomorrow`","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":37,"author":{"gitId":"stevenantya"},"content":"Expected output:","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"stevenantya"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"stevenantya"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"stevenantya"},"content":"\t[D][ ] Do homework (by: tomorrow)","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"stevenantya"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"stevenantya"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":44,"author":{"gitId":"stevenantya"},"content":"### Adding a new Event task: `event`","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"stevenantya"},"content":"Adds Event to the task list.","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":47,"author":{"gitId":"stevenantya"},"content":"Format: `event DESCRIPTION /from START_TIME /to END_TIME`","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":49,"author":{"gitId":"stevenantya"},"content":"Example:","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"stevenantya"},"content":"`event Beach Day /from Sat 9am /to Sat 3pm`","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":52,"author":{"gitId":"stevenantya"},"content":"Expected output:","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"stevenantya"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"stevenantya"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"stevenantya"},"content":"\t[E][ ] Beach Day (from: Sat 9am  to: Sat 3pm)","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"stevenantya"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"stevenantya"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"stevenantya"},"content":"### Listing all tasks: `list`","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"stevenantya"},"content":"Lists all of the tasks.","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"stevenantya"},"content":"Expected output:","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"stevenantya"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"stevenantya"},"content":"Your current tasks are as follows:","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"stevenantya"},"content":"1.[T][ ] Do My Reading","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"stevenantya"},"content":"2.[D][ ] Do homework (by: tomorrow)","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"stevenantya"},"content":"3.[E][ ] Beach Day (from: Sat 9am  to: Sat 3pm)","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"stevenantya"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"stevenantya"},"content":"### Marking a task as done: `mark`","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"stevenantya"},"content":"Marks the specified task as done.","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"stevenantya"},"content":"Format: `mark TASK_ID`","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"stevenantya"},"content":"Example:","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"stevenantya"},"content":"`mark 1`","lastModifiedDate":"2023-03-03"},{"lineNumber":76,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"stevenantya"},"content":"Expected output:","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"stevenantya"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"stevenantya"},"content":"I have marked this task as done","lastModifiedDate":"2023-03-03"},{"lineNumber":80,"author":{"gitId":"stevenantya"},"content":"Your current tasks are as follows:","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"stevenantya"},"content":"1.[T][X] Do My Reading","lastModifiedDate":"2023-03-03"},{"lineNumber":82,"author":{"gitId":"stevenantya"},"content":"2.[D][ ] Do homework (by: tomorrow)","lastModifiedDate":"2023-03-03"},{"lineNumber":83,"author":{"gitId":"stevenantya"},"content":"3.[E][ ] Beach Day (from: Sat 9am  to: Sat 3pm)","lastModifiedDate":"2023-03-03"},{"lineNumber":84,"author":{"gitId":"stevenantya"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":85,"author":{"gitId":"stevenantya"},"content":"### Unmarke a task as not done: `unmark`","lastModifiedDate":"2023-03-03"},{"lineNumber":86,"author":{"gitId":"stevenantya"},"content":"Unmarks the specified task.","lastModifiedDate":"2023-03-03"},{"lineNumber":87,"author":{"gitId":"stevenantya"},"content":"Marks it as undone","lastModifiedDate":"2023-03-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":89,"author":{"gitId":"stevenantya"},"content":"Format: `unmark TASK_ID`","lastModifiedDate":"2023-03-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":91,"author":{"gitId":"stevenantya"},"content":"Example:","lastModifiedDate":"2023-03-03"},{"lineNumber":92,"author":{"gitId":"stevenantya"},"content":"`unmark 1`","lastModifiedDate":"2023-03-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":94,"author":{"gitId":"stevenantya"},"content":"Expected output:","lastModifiedDate":"2023-03-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":96,"author":{"gitId":"stevenantya"},"content":"I have unmarked this task","lastModifiedDate":"2023-03-03"},{"lineNumber":97,"author":{"gitId":"stevenantya"},"content":"Your current tasks are as follows:","lastModifiedDate":"2023-03-03"},{"lineNumber":98,"author":{"gitId":"stevenantya"},"content":"1.[T][ ] Do My Reading","lastModifiedDate":"2023-03-03"},{"lineNumber":99,"author":{"gitId":"stevenantya"},"content":"2.[D][ ] Do homework (by: tomorrow)","lastModifiedDate":"2023-03-03"},{"lineNumber":100,"author":{"gitId":"stevenantya"},"content":"3.[E][ ] Beach Day (from: Sat 9am  to: Sat 3pm)","lastModifiedDate":"2023-03-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":102,"author":{"gitId":"stevenantya"},"content":"### Deleting a task: `delete`","lastModifiedDate":"2023-03-03"},{"lineNumber":103,"author":{"gitId":"stevenantya"},"content":"Deletes the task.","lastModifiedDate":"2023-03-03"},{"lineNumber":104,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":105,"author":{"gitId":"stevenantya"},"content":"Format: `delete TASK_ID`","lastModifiedDate":"2023-03-03"},{"lineNumber":106,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":107,"author":{"gitId":"stevenantya"},"content":"Example:","lastModifiedDate":"2023-03-03"},{"lineNumber":108,"author":{"gitId":"stevenantya"},"content":"`delete 3`","lastModifiedDate":"2023-03-03"},{"lineNumber":109,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":110,"author":{"gitId":"stevenantya"},"content":"Expected output:","lastModifiedDate":"2023-03-03"},{"lineNumber":111,"author":{"gitId":"stevenantya"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":112,"author":{"gitId":"stevenantya"},"content":"I have removed this item in index 3","lastModifiedDate":"2023-03-03"},{"lineNumber":113,"author":{"gitId":"stevenantya"},"content":"Your current tasks are as follows: ","lastModifiedDate":"2023-03-03"},{"lineNumber":114,"author":{"gitId":"stevenantya"},"content":"1.[T][X] Do My Reading","lastModifiedDate":"2023-03-03"},{"lineNumber":115,"author":{"gitId":"stevenantya"},"content":"2.[D][ ] Do homework (by: tomorrow)","lastModifiedDate":"2023-03-03"},{"lineNumber":116,"author":{"gitId":"stevenantya"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":117,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":118,"author":{"gitId":"stevenantya"},"content":"### Finding a task: `find`","lastModifiedDate":"2023-03-03"},{"lineNumber":119,"author":{"gitId":"stevenantya"},"content":"Finds task that has the keyword in its description.","lastModifiedDate":"2023-03-03"},{"lineNumber":120,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":121,"author":{"gitId":"stevenantya"},"content":"Format: `find KEYWORD`","lastModifiedDate":"2023-03-03"},{"lineNumber":122,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":123,"author":{"gitId":"stevenantya"},"content":"Example:","lastModifiedDate":"2023-03-03"},{"lineNumber":124,"author":{"gitId":"stevenantya"},"content":"`find Reading`","lastModifiedDate":"2023-03-03"},{"lineNumber":125,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":126,"author":{"gitId":"stevenantya"},"content":"Expected output:","lastModifiedDate":"2023-03-03"},{"lineNumber":127,"author":{"gitId":"stevenantya"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":128,"author":{"gitId":"stevenantya"},"content":"1.[T][X] Do My Reading","lastModifiedDate":"2023-03-03"},{"lineNumber":129,"author":{"gitId":"stevenantya"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":130,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":131,"author":{"gitId":"stevenantya"},"content":"### Exit the program: `bye`","lastModifiedDate":"2023-03-03"},{"lineNumber":132,"author":{"gitId":"stevenantya"},"content":"Exits the program.","lastModifiedDate":"2023-03-03"},{"lineNumber":133,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":134,"author":{"gitId":"stevenantya"},"content":"Expected output:","lastModifiedDate":"2023-03-03"},{"lineNumber":135,"author":{"gitId":"stevenantya"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":136,"author":{"gitId":"stevenantya"},"content":"___________________________******___________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":137,"author":{"gitId":"stevenantya"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":138,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":139,"author":{"gitId":"stevenantya"},"content":"### Automatically Saved","lastModifiedDate":"2023-03-03"},{"lineNumber":140,"author":{"gitId":"stevenantya"},"content":"Your task list is automatically saved in the hardisk","lastModifiedDate":"2023-03-03"},{"lineNumber":141,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":142,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"stevenantya":122,"-":20}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stevenantya"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"stevenantya"},"content":" * @author : Steven A. O. Waskito","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"stevenantya"},"content":" * @mailto : e0851459@u.nus.edu","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"stevenantya"},"content":" * @created : 3 February 2023","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"stevenantya"},"content":" *","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"stevenantya"},"content":" * This is the Deadline Class that accepts description and /by (\u0027due date\u0027)","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"stevenantya"},"content":" *","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"stevenantya"},"content":" **/","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"stevenantya"},"content":"public class Deadline extends Task{","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"stevenantya"},"content":"    protected String day;","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"stevenantya"},"content":"    public Deadline(String description, String dateAndTime) {","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"stevenantya"},"content":"        super(description);","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"stevenantya"},"content":"        this.day \u003d dateAndTime;","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"stevenantya"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"stevenantya"},"content":"     * Overrides the print function of the class","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"stevenantya"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"stevenantya"},"content":"    @Override","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"stevenantya"},"content":"    public String toString() {","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"stevenantya"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + day + \")\";","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"stevenantya"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"stevenantya"},"content":"     * Overrides the getUpdate method that is used to save/update the input.txt file","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"stevenantya"},"content":"     * @return","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"stevenantya"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"stevenantya"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"stevenantya"},"content":"    public String getUpdate() {","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"stevenantya"},"content":"        return \"deadline \" + super.description + \"/by \" + day;","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"stevenantya"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"stevenantya":31}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stevenantya"},"content":"// Java program to read data of various types using Scanner class.","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"stevenantya"},"content":"import exceptions.EmptyInputException;","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"stevenantya"},"content":"import exceptions.IllegalInputException;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"stevenantya"},"content":"import java.io.File;","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"stevenantya"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"stevenantya"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"stevenantya"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"stevenantya"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"stevenantya"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"stevenantya"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"stevenantya"},"content":" * @author : Steven A. O. Waskito","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"stevenantya"},"content":" * @mailto : e0851459@u.nus.edu","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"stevenantya"},"content":" * @created : 3 February 2023","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"stevenantya"},"content":" *","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"stevenantya"},"content":" * This is the main Java driver and has most of the important methods","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"stevenantya"},"content":" *","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"stevenantya"},"content":" **/","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"stevenantya"},"content":"    protected static final String FILE_PATH \u003d \"data/input.txt\";","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"stevenantya"},"content":"    private static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"stevenantya"},"content":"    public static void printWelcomeMessage() {","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"stevenantya"},"content":"        String welcomeMessage \u003d \"____________________________________________________________\\n\" +","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"stevenantya"},"content":"                \" Hello! I\u0027m Elzi, your dog!\\n\" +","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"stevenantya"},"content":"                \" What can I do for my master?\\n\" +","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"stevenantya"},"content":"                \"____________________________________________________________\\n\";","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"stevenantya"},"content":"        System.out.println(welcomeMessage);","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"stevenantya"},"content":"    public static void printLine() {","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"stevenantya"},"content":"        System.out.print(\"___________________________******___________________________\\n\");","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"stevenantya"},"content":"    public static void printList(int taskCounter) {","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"stevenantya"},"content":"        System.out.println(\"Your current tasks are as follows: \");","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"stevenantya"},"content":"        for (int index \u003d 0; index \u003c tasks.size(); index +\u003d 1) {","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"stevenantya"},"content":"            System.out.println((index + 1) + \".\" + tasks.get(index));","lastModifiedDate":"2023-02-14"},{"lineNumber":37,"author":{"gitId":"stevenantya"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"stevenantya"},"content":"    public static void updateFile() {","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"stevenantya"},"content":"        String list \u003d \"\";","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"stevenantya"},"content":"        for (int index \u003d 0; index \u003c tasks.size(); index +\u003d 1) {","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"stevenantya"},"content":"            list +\u003d tasks.get(index).getUpdate() + \"\\n\";","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"stevenantya"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"stevenantya"},"content":"        try {","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"stevenantya"},"content":"            writeToFile(FILE_PATH, list);","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"stevenantya"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"stevenantya"},"content":"        catch (IOException ex) {","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"stevenantya"},"content":"            System.out.println(\"Something went wrong: \" + ex.getMessage());","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"stevenantya"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"stevenantya"},"content":"    public static void printAddTodo(Todo print) {","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"stevenantya"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-02-06"},{"lineNumber":53,"author":{"gitId":"stevenantya"},"content":"        System.out.print(\"   \"); System.out.println(print);","lastModifiedDate":"2023-02-06"},{"lineNumber":54,"author":{"gitId":"stevenantya"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" task in the list\");","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":56,"author":{"gitId":"stevenantya"},"content":"    public static void printAddDeadline(Deadline print) {","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"stevenantya"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-02-06"},{"lineNumber":58,"author":{"gitId":"stevenantya"},"content":"        System.out.print(\"   \"); System.out.println(print);","lastModifiedDate":"2023-02-06"},{"lineNumber":59,"author":{"gitId":"stevenantya"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" task in the list\");","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":61,"author":{"gitId":"stevenantya"},"content":"    public static void printAddEvent(Event print) {","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"stevenantya"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-02-06"},{"lineNumber":63,"author":{"gitId":"stevenantya"},"content":"        System.out.print(\"   \"); System.out.println(print);","lastModifiedDate":"2023-02-06"},{"lineNumber":64,"author":{"gitId":"stevenantya"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" task in the list\");","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":66,"author":{"gitId":"stevenantya"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"stevenantya"},"content":"     * Parses Todo Input","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"stevenantya"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"stevenantya"},"content":"     * @param inputs The inputs from the user in string array","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"stevenantya"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"stevenantya"},"content":"    public static String parseInput(String[] inputs){","lastModifiedDate":"2023-02-14"},{"lineNumber":72,"author":{"gitId":"stevenantya"},"content":"        String todoInput \u003d \"\";","lastModifiedDate":"2023-02-09"},{"lineNumber":73,"author":{"gitId":"stevenantya"},"content":"        for (int i \u003d 1; i \u003c inputs.length; i ++) {","lastModifiedDate":"2023-02-09"},{"lineNumber":74,"author":{"gitId":"stevenantya"},"content":"            todoInput +\u003d inputs[i];","lastModifiedDate":"2023-02-09"},{"lineNumber":75,"author":{"gitId":"stevenantya"},"content":"            todoInput +\u003d \" \";","lastModifiedDate":"2023-02-09"},{"lineNumber":76,"author":{"gitId":"stevenantya"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":77,"author":{"gitId":"stevenantya"},"content":"        return todoInput;","lastModifiedDate":"2023-02-09"},{"lineNumber":78,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":79,"author":{"gitId":"stevenantya"},"content":"    public static void inputTodo(String[] inputs) {","lastModifiedDate":"2023-03-03"},{"lineNumber":80,"author":{"gitId":"stevenantya"},"content":"        String todoInput \u003d parseInput(inputs);","lastModifiedDate":"2023-02-09"},{"lineNumber":81,"author":{"gitId":"stevenantya"},"content":"        Todo todo \u003d new Todo(todoInput);","lastModifiedDate":"2023-02-09"},{"lineNumber":82,"author":{"gitId":"stevenantya"},"content":"        tasks.add(todo);","lastModifiedDate":"2023-02-14"},{"lineNumber":83,"author":{"gitId":"stevenantya"},"content":"        printAddTodo(todo);","lastModifiedDate":"2023-03-03"},{"lineNumber":84,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":85,"author":{"gitId":"stevenantya"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":86,"author":{"gitId":"stevenantya"},"content":"     * Executes the find command","lastModifiedDate":"2023-03-03"},{"lineNumber":87,"author":{"gitId":"stevenantya"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":88,"author":{"gitId":"stevenantya"},"content":"     * @param input The word that needs to be found","lastModifiedDate":"2023-03-03"},{"lineNumber":89,"author":{"gitId":"stevenantya"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":90,"author":{"gitId":"stevenantya"},"content":"    public static void findID(String input) {","lastModifiedDate":"2023-03-03"},{"lineNumber":91,"author":{"gitId":"stevenantya"},"content":"        for (int index \u003d 0; index \u003c tasks.size(); index +\u003d 1) {","lastModifiedDate":"2023-03-03"},{"lineNumber":92,"author":{"gitId":"stevenantya"},"content":"            Task currentTask \u003d tasks.get(index);","lastModifiedDate":"2023-03-03"},{"lineNumber":93,"author":{"gitId":"stevenantya"},"content":"            if (currentTask.getDescription().contains(input)) {","lastModifiedDate":"2023-03-03"},{"lineNumber":94,"author":{"gitId":"stevenantya"},"content":"                System.out.println((index + 1) + \".\" + currentTask);","lastModifiedDate":"2023-03-03"},{"lineNumber":95,"author":{"gitId":"stevenantya"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":96,"author":{"gitId":"stevenantya"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":97,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":98,"author":{"gitId":"stevenantya"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":99,"author":{"gitId":"stevenantya"},"content":"     * Read all of the inputs typed in by users and the input.txt file","lastModifiedDate":"2023-03-03"},{"lineNumber":100,"author":{"gitId":"stevenantya"},"content":"     * Commands are entered in each new line","lastModifiedDate":"2023-03-03"},{"lineNumber":101,"author":{"gitId":"stevenantya"},"content":"     * Each new command starts from first character","lastModifiedDate":"2023-03-03"},{"lineNumber":102,"author":{"gitId":"stevenantya"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":103,"author":{"gitId":"stevenantya"},"content":"     * There are 9 types of commands: bye, list, find, mark, unmark, todo, deadline, event, delete","lastModifiedDate":"2023-03-03"},{"lineNumber":104,"author":{"gitId":"stevenantya"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":105,"author":{"gitId":"stevenantya"},"content":"     * @param s The line submitted by the user / input.txt","lastModifiedDate":"2023-03-03"},{"lineNumber":106,"author":{"gitId":"stevenantya"},"content":"     * @throws EmptyInputException if there is no description after the input","lastModifiedDate":"2023-03-03"},{"lineNumber":107,"author":{"gitId":"stevenantya"},"content":"     * @throws IllegalInputException if the command is not following the format","lastModifiedDate":"2023-03-03"},{"lineNumber":108,"author":{"gitId":"stevenantya"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":109,"author":{"gitId":"stevenantya"},"content":"    private static boolean readInput(String s) throws EmptyInputException, IllegalInputException {","lastModifiedDate":"2023-02-27"},{"lineNumber":110,"author":{"gitId":"stevenantya"},"content":"        String input \u003d \"\";","lastModifiedDate":"2023-01-29"},{"lineNumber":111,"author":{"gitId":"stevenantya"},"content":"        if (s.equals(\"in\")) {","lastModifiedDate":"2023-02-27"},{"lineNumber":112,"author":{"gitId":"stevenantya"},"content":"            Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-27"},{"lineNumber":113,"author":{"gitId":"stevenantya"},"content":"            input \u003d sc.nextLine();","lastModifiedDate":"2023-02-02"},{"lineNumber":114,"author":{"gitId":"stevenantya"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":115,"author":{"gitId":"stevenantya"},"content":"        else {","lastModifiedDate":"2023-02-27"},{"lineNumber":116,"author":{"gitId":"stevenantya"},"content":"            input \u003d s;","lastModifiedDate":"2023-02-27"},{"lineNumber":117,"author":{"gitId":"stevenantya"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":118,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":119,"author":{"gitId":"stevenantya"},"content":"        int taskCounter \u003d 0;","lastModifiedDate":"2023-02-02"},{"lineNumber":120,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":121,"author":{"gitId":"stevenantya"},"content":"        if (!input.equals(\"bye\")) {","lastModifiedDate":"2023-02-27"},{"lineNumber":122,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":123,"author":{"gitId":"stevenantya"},"content":"            String[] inputs \u003d input.split(\" \");","lastModifiedDate":"2023-02-02"},{"lineNumber":124,"author":{"gitId":"stevenantya"},"content":"            String command \u003d inputs[0];","lastModifiedDate":"2023-02-02"},{"lineNumber":125,"author":{"gitId":"stevenantya"},"content":"            int taskIndex;","lastModifiedDate":"2023-02-27"},{"lineNumber":126,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":127,"author":{"gitId":"stevenantya"},"content":"            printLine();","lastModifiedDate":"2023-02-02"},{"lineNumber":128,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":129,"author":{"gitId":"stevenantya"},"content":"            switch (command) {","lastModifiedDate":"2023-02-02"},{"lineNumber":130,"author":{"gitId":"stevenantya"},"content":"            case \"list\":","lastModifiedDate":"2023-02-02"},{"lineNumber":131,"author":{"gitId":"stevenantya"},"content":"                printList(taskCounter);","lastModifiedDate":"2023-02-02"},{"lineNumber":132,"author":{"gitId":"stevenantya"},"content":"                break;","lastModifiedDate":"2023-01-29"},{"lineNumber":133,"author":{"gitId":"stevenantya"},"content":"            case \"find\":","lastModifiedDate":"2023-03-03"},{"lineNumber":134,"author":{"gitId":"stevenantya"},"content":"                if (inputs.length \u003d\u003d 1) {","lastModifiedDate":"2023-03-03"},{"lineNumber":135,"author":{"gitId":"stevenantya"},"content":"                    throw new EmptyInputException();","lastModifiedDate":"2023-03-03"},{"lineNumber":136,"author":{"gitId":"stevenantya"},"content":"                }","lastModifiedDate":"2023-03-03"},{"lineNumber":137,"author":{"gitId":"stevenantya"},"content":"                String ID \u003d \"\";","lastModifiedDate":"2023-03-03"},{"lineNumber":138,"author":{"gitId":"stevenantya"},"content":"                for (int i \u003d 1; i \u003c inputs.length; i +\u003d 1) {","lastModifiedDate":"2023-03-03"},{"lineNumber":139,"author":{"gitId":"stevenantya"},"content":"                    if (i !\u003d inputs.length-1) {","lastModifiedDate":"2023-03-03"},{"lineNumber":140,"author":{"gitId":"stevenantya"},"content":"                        ID \u003d ID + inputs[i] + \" \";","lastModifiedDate":"2023-03-03"},{"lineNumber":141,"author":{"gitId":"stevenantya"},"content":"                    }","lastModifiedDate":"2023-03-03"},{"lineNumber":142,"author":{"gitId":"stevenantya"},"content":"                    else {","lastModifiedDate":"2023-03-03"},{"lineNumber":143,"author":{"gitId":"stevenantya"},"content":"                        ID \u003d ID + inputs[i];","lastModifiedDate":"2023-03-03"},{"lineNumber":144,"author":{"gitId":"stevenantya"},"content":"                    }","lastModifiedDate":"2023-03-03"},{"lineNumber":145,"author":{"gitId":"stevenantya"},"content":"                }","lastModifiedDate":"2023-03-03"},{"lineNumber":146,"author":{"gitId":"stevenantya"},"content":"                findID(ID);","lastModifiedDate":"2023-03-03"},{"lineNumber":147,"author":{"gitId":"stevenantya"},"content":"                break;","lastModifiedDate":"2023-03-03"},{"lineNumber":148,"author":{"gitId":"stevenantya"},"content":"            case \"mark\":","lastModifiedDate":"2023-02-02"},{"lineNumber":149,"author":{"gitId":"stevenantya"},"content":"                if (inputs.length \u003d\u003d 1) {","lastModifiedDate":"2023-03-03"},{"lineNumber":150,"author":{"gitId":"stevenantya"},"content":"                    throw new EmptyInputException();","lastModifiedDate":"2023-03-03"},{"lineNumber":151,"author":{"gitId":"stevenantya"},"content":"                }","lastModifiedDate":"2023-03-03"},{"lineNumber":152,"author":{"gitId":"stevenantya"},"content":"                taskIndex \u003d Integer.parseInt(inputs[1]);","lastModifiedDate":"2023-02-27"},{"lineNumber":153,"author":{"gitId":"stevenantya"},"content":"                if (taskIndex \u003e tasks.size() || taskIndex \u003c\u003d 0) throw new IllegalInputException();","lastModifiedDate":"2023-02-16"},{"lineNumber":154,"author":{"gitId":"stevenantya"},"content":"                tasks.get(taskIndex - 1).markAsDone();","lastModifiedDate":"2023-02-14"},{"lineNumber":155,"author":{"gitId":"stevenantya"},"content":"                System.out.println(\"I have marked this task as done\");","lastModifiedDate":"2023-02-02"},{"lineNumber":156,"author":{"gitId":"stevenantya"},"content":"                printList(taskCounter);","lastModifiedDate":"2023-02-02"},{"lineNumber":157,"author":{"gitId":"stevenantya"},"content":"                break;","lastModifiedDate":"2023-02-02"},{"lineNumber":158,"author":{"gitId":"stevenantya"},"content":"            case \"unmark\":","lastModifiedDate":"2023-02-02"},{"lineNumber":159,"author":{"gitId":"stevenantya"},"content":"                if (inputs.length \u003d\u003d 1) {","lastModifiedDate":"2023-03-03"},{"lineNumber":160,"author":{"gitId":"stevenantya"},"content":"                    throw new EmptyInputException();","lastModifiedDate":"2023-03-03"},{"lineNumber":161,"author":{"gitId":"stevenantya"},"content":"                }","lastModifiedDate":"2023-03-03"},{"lineNumber":162,"author":{"gitId":"stevenantya"},"content":"                taskIndex \u003d Integer.parseInt(inputs[1]);","lastModifiedDate":"2023-02-02"},{"lineNumber":163,"author":{"gitId":"stevenantya"},"content":"                if (taskIndex \u003e tasks.size() || taskIndex \u003c\u003d 0) throw new IllegalInputException();","lastModifiedDate":"2023-02-16"},{"lineNumber":164,"author":{"gitId":"stevenantya"},"content":"                tasks.get(taskIndex - 1).markAsNotDone();","lastModifiedDate":"2023-02-14"},{"lineNumber":165,"author":{"gitId":"stevenantya"},"content":"                System.out.println(\"I have unmarked this task\");","lastModifiedDate":"2023-02-02"},{"lineNumber":166,"author":{"gitId":"stevenantya"},"content":"                printList(taskCounter);","lastModifiedDate":"2023-02-02"},{"lineNumber":167,"author":{"gitId":"stevenantya"},"content":"                break;","lastModifiedDate":"2023-02-02"},{"lineNumber":168,"author":{"gitId":"stevenantya"},"content":"            case \"todo\":","lastModifiedDate":"2023-02-06"},{"lineNumber":169,"author":{"gitId":"stevenantya"},"content":"                if (inputs.length \u003d\u003d 1) {","lastModifiedDate":"2023-03-03"},{"lineNumber":170,"author":{"gitId":"stevenantya"},"content":"                    throw new EmptyInputException();","lastModifiedDate":"2023-03-03"},{"lineNumber":171,"author":{"gitId":"stevenantya"},"content":"                }","lastModifiedDate":"2023-03-03"},{"lineNumber":172,"author":{"gitId":"stevenantya"},"content":"                inputTodo(inputs);","lastModifiedDate":"2023-03-03"},{"lineNumber":173,"author":{"gitId":"stevenantya"},"content":"                break;","lastModifiedDate":"2023-02-06"},{"lineNumber":174,"author":{"gitId":"stevenantya"},"content":"            case \"deadline\":","lastModifiedDate":"2023-02-06"},{"lineNumber":175,"author":{"gitId":"stevenantya"},"content":"                if (inputs.length \u003d\u003d 1) {","lastModifiedDate":"2023-03-03"},{"lineNumber":176,"author":{"gitId":"stevenantya"},"content":"                    throw new EmptyInputException();","lastModifiedDate":"2023-03-03"},{"lineNumber":177,"author":{"gitId":"stevenantya"},"content":"                }","lastModifiedDate":"2023-03-03"},{"lineNumber":178,"author":{"gitId":"stevenantya"},"content":"                String deadlineInput \u003d \"\";","lastModifiedDate":"2023-02-06"},{"lineNumber":179,"author":{"gitId":"stevenantya"},"content":"                String deadlineDeadline \u003d \"\";","lastModifiedDate":"2023-02-06"},{"lineNumber":180,"author":{"gitId":"stevenantya"},"content":"                boolean isDeadline \u003d false;","lastModifiedDate":"2023-02-06"},{"lineNumber":181,"author":{"gitId":"stevenantya"},"content":"                for (int i \u003d 1; i \u003c inputs.length; i++) {","lastModifiedDate":"2023-02-06"},{"lineNumber":182,"author":{"gitId":"stevenantya"},"content":"                    if (inputs[i].contains(\"/\")) {","lastModifiedDate":"2023-02-06"},{"lineNumber":183,"author":{"gitId":"stevenantya"},"content":"                        isDeadline \u003d true;","lastModifiedDate":"2023-02-06"},{"lineNumber":184,"author":{"gitId":"stevenantya"},"content":"                        continue;","lastModifiedDate":"2023-02-06"},{"lineNumber":185,"author":{"gitId":"stevenantya"},"content":"                    }","lastModifiedDate":"2023-02-06"},{"lineNumber":186,"author":{"gitId":"stevenantya"},"content":"                    if (isDeadline) {","lastModifiedDate":"2023-02-06"},{"lineNumber":187,"author":{"gitId":"stevenantya"},"content":"                        deadlineDeadline +\u003d inputs[i];","lastModifiedDate":"2023-02-06"},{"lineNumber":188,"author":{"gitId":"stevenantya"},"content":"                        deadlineDeadline +\u003d \" \";","lastModifiedDate":"2023-02-06"},{"lineNumber":189,"author":{"gitId":"stevenantya"},"content":"                    } else {","lastModifiedDate":"2023-02-27"},{"lineNumber":190,"author":{"gitId":"stevenantya"},"content":"                        deadlineInput +\u003d inputs[i];","lastModifiedDate":"2023-02-06"},{"lineNumber":191,"author":{"gitId":"stevenantya"},"content":"                        deadlineInput +\u003d \" \";","lastModifiedDate":"2023-02-06"},{"lineNumber":192,"author":{"gitId":"stevenantya"},"content":"                    }","lastModifiedDate":"2023-02-06"},{"lineNumber":193,"author":{"gitId":"stevenantya"},"content":"                }","lastModifiedDate":"2023-02-06"},{"lineNumber":194,"author":{"gitId":"stevenantya"},"content":"                if (!isDeadline) throw new IllegalInputException();","lastModifiedDate":"2023-02-16"},{"lineNumber":195,"author":{"gitId":"stevenantya"},"content":"                Deadline deadline \u003d new Deadline(deadlineInput, deadlineDeadline);","lastModifiedDate":"2023-02-06"},{"lineNumber":196,"author":{"gitId":"stevenantya"},"content":"                tasks.add(deadline);","lastModifiedDate":"2023-02-27"},{"lineNumber":197,"author":{"gitId":"stevenantya"},"content":"                taskCounter +\u003d 1;","lastModifiedDate":"2023-02-27"},{"lineNumber":198,"author":{"gitId":"stevenantya"},"content":"                printAddDeadline(deadline);","lastModifiedDate":"2023-03-03"},{"lineNumber":199,"author":{"gitId":"stevenantya"},"content":"                break;","lastModifiedDate":"2023-02-06"},{"lineNumber":200,"author":{"gitId":"stevenantya"},"content":"            case \"event\":","lastModifiedDate":"2023-02-06"},{"lineNumber":201,"author":{"gitId":"stevenantya"},"content":"                if (inputs.length \u003d\u003d 1) {","lastModifiedDate":"2023-03-03"},{"lineNumber":202,"author":{"gitId":"stevenantya"},"content":"                    throw new EmptyInputException();","lastModifiedDate":"2023-03-03"},{"lineNumber":203,"author":{"gitId":"stevenantya"},"content":"                }","lastModifiedDate":"2023-03-03"},{"lineNumber":204,"author":{"gitId":"stevenantya"},"content":"                String eventInput \u003d \"\";","lastModifiedDate":"2023-02-06"},{"lineNumber":205,"author":{"gitId":"stevenantya"},"content":"                String eventFrom \u003d \"\";","lastModifiedDate":"2023-02-27"},{"lineNumber":206,"author":{"gitId":"stevenantya"},"content":"                String eventTo \u003d \"\";","lastModifiedDate":"2023-02-27"},{"lineNumber":207,"author":{"gitId":"stevenantya"},"content":"                boolean isFrom \u003d false;","lastModifiedDate":"2023-02-27"},{"lineNumber":208,"author":{"gitId":"stevenantya"},"content":"                boolean isTo \u003d false;","lastModifiedDate":"2023-02-27"},{"lineNumber":209,"author":{"gitId":"stevenantya"},"content":"                for (int i \u003d 1; i \u003c inputs.length; i++) {","lastModifiedDate":"2023-02-06"},{"lineNumber":210,"author":{"gitId":"stevenantya"},"content":"                    if (inputs[i].contains(\"/from\")) {","lastModifiedDate":"2023-02-06"},{"lineNumber":211,"author":{"gitId":"stevenantya"},"content":"                        isFrom \u003d true;","lastModifiedDate":"2023-02-06"},{"lineNumber":212,"author":{"gitId":"stevenantya"},"content":"                        continue;","lastModifiedDate":"2023-02-06"},{"lineNumber":213,"author":{"gitId":"stevenantya"},"content":"                    }","lastModifiedDate":"2023-02-06"},{"lineNumber":214,"author":{"gitId":"stevenantya"},"content":"                    if (inputs[i].contains(\"/to\")) {","lastModifiedDate":"2023-02-06"},{"lineNumber":215,"author":{"gitId":"stevenantya"},"content":"                        isTo \u003d true;","lastModifiedDate":"2023-02-06"},{"lineNumber":216,"author":{"gitId":"stevenantya"},"content":"                        continue;","lastModifiedDate":"2023-02-06"},{"lineNumber":217,"author":{"gitId":"stevenantya"},"content":"                    }","lastModifiedDate":"2023-02-06"},{"lineNumber":218,"author":{"gitId":"stevenantya"},"content":"                    if (isTo) {","lastModifiedDate":"2023-02-06"},{"lineNumber":219,"author":{"gitId":"stevenantya"},"content":"                        eventTo +\u003d inputs[i];","lastModifiedDate":"2023-02-06"},{"lineNumber":220,"author":{"gitId":"stevenantya"},"content":"                        eventTo +\u003d \" \";","lastModifiedDate":"2023-02-06"},{"lineNumber":221,"author":{"gitId":"stevenantya"},"content":"                    } else if (isFrom) {","lastModifiedDate":"2023-02-27"},{"lineNumber":222,"author":{"gitId":"stevenantya"},"content":"                        eventFrom +\u003d inputs[i];","lastModifiedDate":"2023-02-06"},{"lineNumber":223,"author":{"gitId":"stevenantya"},"content":"                        eventFrom +\u003d \" \";","lastModifiedDate":"2023-02-06"},{"lineNumber":224,"author":{"gitId":"stevenantya"},"content":"                    } else {","lastModifiedDate":"2023-02-27"},{"lineNumber":225,"author":{"gitId":"stevenantya"},"content":"                        eventInput +\u003d inputs[i];","lastModifiedDate":"2023-02-06"},{"lineNumber":226,"author":{"gitId":"stevenantya"},"content":"                        eventInput +\u003d \" \";","lastModifiedDate":"2023-02-06"},{"lineNumber":227,"author":{"gitId":"stevenantya"},"content":"                    }","lastModifiedDate":"2023-02-06"},{"lineNumber":228,"author":{"gitId":"stevenantya"},"content":"                }","lastModifiedDate":"2023-02-06"},{"lineNumber":229,"author":{"gitId":"stevenantya"},"content":"                if (!(isTo \u0026\u0026 isFrom)) throw new IllegalInputException();","lastModifiedDate":"2023-02-16"},{"lineNumber":230,"author":{"gitId":"stevenantya"},"content":"                Event event \u003d new Event(eventInput, eventFrom, eventTo);","lastModifiedDate":"2023-02-06"},{"lineNumber":231,"author":{"gitId":"stevenantya"},"content":"                tasks.add(event);","lastModifiedDate":"2023-02-27"},{"lineNumber":232,"author":{"gitId":"stevenantya"},"content":"                printAddEvent(event);","lastModifiedDate":"2023-03-03"},{"lineNumber":233,"author":{"gitId":"stevenantya"},"content":"                break;","lastModifiedDate":"2023-02-06"},{"lineNumber":234,"author":{"gitId":"stevenantya"},"content":"            case \"delete\":","lastModifiedDate":"2023-02-14"},{"lineNumber":235,"author":{"gitId":"stevenantya"},"content":"                if (inputs.length \u003d\u003d 1) {","lastModifiedDate":"2023-03-03"},{"lineNumber":236,"author":{"gitId":"stevenantya"},"content":"                    throw new EmptyInputException();","lastModifiedDate":"2023-03-03"},{"lineNumber":237,"author":{"gitId":"stevenantya"},"content":"                }","lastModifiedDate":"2023-03-03"},{"lineNumber":238,"author":{"gitId":"stevenantya"},"content":"                taskIndex \u003d Integer.parseInt(inputs[1]);","lastModifiedDate":"2023-02-27"},{"lineNumber":239,"author":{"gitId":"stevenantya"},"content":"                if (taskIndex \u003e tasks.size() || taskIndex \u003c\u003d 0) throw new IllegalInputException();","lastModifiedDate":"2023-02-27"},{"lineNumber":240,"author":{"gitId":"stevenantya"},"content":"                tasks.remove(taskIndex - 1);","lastModifiedDate":"2023-02-27"},{"lineNumber":241,"author":{"gitId":"stevenantya"},"content":"                System.out.print(\"I have removed this item in index \");","lastModifiedDate":"2023-02-27"},{"lineNumber":242,"author":{"gitId":"stevenantya"},"content":"                System.out.println(taskIndex);","lastModifiedDate":"2023-02-27"},{"lineNumber":243,"author":{"gitId":"stevenantya"},"content":"                printList(taskCounter);","lastModifiedDate":"2023-02-14"},{"lineNumber":244,"author":{"gitId":"stevenantya"},"content":"                break;","lastModifiedDate":"2023-02-14"},{"lineNumber":245,"author":{"gitId":"stevenantya"},"content":"            default:","lastModifiedDate":"2023-02-02"},{"lineNumber":246,"author":{"gitId":"stevenantya"},"content":"                throw new IllegalInputException();","lastModifiedDate":"2023-02-09"},{"lineNumber":247,"author":{"gitId":"stevenantya"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":248,"author":{"gitId":"stevenantya"},"content":"            updateFile();","lastModifiedDate":"2023-03-03"},{"lineNumber":249,"author":{"gitId":"stevenantya"},"content":"            printLine();","lastModifiedDate":"2023-02-02"},{"lineNumber":250,"author":{"gitId":"stevenantya"},"content":"            return false;","lastModifiedDate":"2023-02-27"},{"lineNumber":251,"author":{"gitId":"stevenantya"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":252,"author":{"gitId":"stevenantya"},"content":"        else","lastModifiedDate":"2023-02-27"},{"lineNumber":253,"author":{"gitId":"stevenantya"},"content":"            return true;","lastModifiedDate":"2023-02-09"},{"lineNumber":254,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":255,"author":{"gitId":"stevenantya"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":256,"author":{"gitId":"stevenantya"},"content":"     * Scans all of the input.txt file and calls readInput to read it.","lastModifiedDate":"2023-03-03"},{"lineNumber":257,"author":{"gitId":"stevenantya"},"content":"     * @param filePath The file path","lastModifiedDate":"2023-03-03"},{"lineNumber":258,"author":{"gitId":"stevenantya"},"content":"     * @throws FileNotFoundException if there is no file input.txt in /data/","lastModifiedDate":"2023-03-03"},{"lineNumber":259,"author":{"gitId":"stevenantya"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":260,"author":{"gitId":"stevenantya"},"content":"    private static void printFileContents(String filePath) throws FileNotFoundException {","lastModifiedDate":"2023-02-27"},{"lineNumber":261,"author":{"gitId":"stevenantya"},"content":"        File f \u003d new File(filePath); // create a File for the given file path","lastModifiedDate":"2023-02-27"},{"lineNumber":262,"author":{"gitId":"stevenantya"},"content":"        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source","lastModifiedDate":"2023-02-27"},{"lineNumber":263,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":264,"author":{"gitId":"stevenantya"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2023-02-27"},{"lineNumber":265,"author":{"gitId":"stevenantya"},"content":"            try {","lastModifiedDate":"2023-02-27"},{"lineNumber":266,"author":{"gitId":"stevenantya"},"content":"                boolean yes \u003d readInput(s.nextLine());","lastModifiedDate":"2023-02-27"},{"lineNumber":267,"author":{"gitId":"stevenantya"},"content":"            }","lastModifiedDate":"2023-02-27"},{"lineNumber":268,"author":{"gitId":"stevenantya"},"content":"            catch (EmptyInputException e) {","lastModifiedDate":"2023-02-27"},{"lineNumber":269,"author":{"gitId":"stevenantya"},"content":"                System.out.println(\"Description Can Not Be Empty!\");","lastModifiedDate":"2023-02-27"},{"lineNumber":270,"author":{"gitId":"stevenantya"},"content":"            }","lastModifiedDate":"2023-02-27"},{"lineNumber":271,"author":{"gitId":"stevenantya"},"content":"            catch (IllegalInputException e) {","lastModifiedDate":"2023-02-27"},{"lineNumber":272,"author":{"gitId":"stevenantya"},"content":"                System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-02-27"},{"lineNumber":273,"author":{"gitId":"stevenantya"},"content":"                printLine();","lastModifiedDate":"2023-02-27"},{"lineNumber":274,"author":{"gitId":"stevenantya"},"content":"            }","lastModifiedDate":"2023-02-27"},{"lineNumber":275,"author":{"gitId":"stevenantya"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":276,"author":{"gitId":"stevenantya"},"content":"        printList(0);","lastModifiedDate":"2023-02-27"},{"lineNumber":277,"author":{"gitId":"stevenantya"},"content":"        printLine();","lastModifiedDate":"2023-02-27"},{"lineNumber":278,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":279,"author":{"gitId":"stevenantya"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":280,"author":{"gitId":"stevenantya"},"content":"     * Writes to file input.txt to save the tasks.","lastModifiedDate":"2023-03-03"},{"lineNumber":281,"author":{"gitId":"stevenantya"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":282,"author":{"gitId":"stevenantya"},"content":"     * @param filePath The file path","lastModifiedDate":"2023-03-03"},{"lineNumber":283,"author":{"gitId":"stevenantya"},"content":"     * @param textToAdd The tasks to be written to input.txt","lastModifiedDate":"2023-03-03"},{"lineNumber":284,"author":{"gitId":"stevenantya"},"content":"     * @throws IOException if there is I/O error occured","lastModifiedDate":"2023-03-03"},{"lineNumber":285,"author":{"gitId":"stevenantya"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":286,"author":{"gitId":"stevenantya"},"content":"    private static void writeToFile(String filePath, String textToAdd) throws IOException {","lastModifiedDate":"2023-03-03"},{"lineNumber":287,"author":{"gitId":"stevenantya"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2023-03-03"},{"lineNumber":288,"author":{"gitId":"stevenantya"},"content":"        fw.write(textToAdd);","lastModifiedDate":"2023-03-03"},{"lineNumber":289,"author":{"gitId":"stevenantya"},"content":"        fw.close();","lastModifiedDate":"2023-03-03"},{"lineNumber":290,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":291,"author":{"gitId":"stevenantya"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":292,"author":{"gitId":"stevenantya"},"content":"     * The main driver of Duke.java","lastModifiedDate":"2023-03-03"},{"lineNumber":293,"author":{"gitId":"stevenantya"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":294,"author":{"gitId":"stevenantya"},"content":"     * Allows user to input commands and duke will process it according to the commands given","lastModifiedDate":"2023-03-03"},{"lineNumber":295,"author":{"gitId":"stevenantya"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":296,"author":{"gitId":"stevenantya"},"content":"     * Handles file creation if no input.txt is found","lastModifiedDate":"2023-03-03"},{"lineNumber":297,"author":{"gitId":"stevenantya"},"content":"     * Handles Empty Input Exception and Illegal Input Exception Error Messages","lastModifiedDate":"2023-03-03"},{"lineNumber":298,"author":{"gitId":"stevenantya"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-02"},{"lineNumber":300,"author":{"gitId":"stevenantya"},"content":"        printWelcomeMessage();","lastModifiedDate":"2023-02-02"},{"lineNumber":301,"author":{"gitId":"stevenantya"},"content":"        File f \u003d new File(FILE_PATH);","lastModifiedDate":"2023-03-03"},{"lineNumber":302,"author":{"gitId":"stevenantya"},"content":"        File directory \u003d new File(\"data\");","lastModifiedDate":"2023-03-03"},{"lineNumber":303,"author":{"gitId":"stevenantya"},"content":"        boolean isFileFound \u003d true;","lastModifiedDate":"2023-03-03"},{"lineNumber":304,"author":{"gitId":"stevenantya"},"content":"        //populate","lastModifiedDate":"2023-02-27"},{"lineNumber":305,"author":{"gitId":"stevenantya"},"content":"        try {","lastModifiedDate":"2023-02-27"},{"lineNumber":306,"author":{"gitId":"stevenantya"},"content":"            printFileContents(FILE_PATH);","lastModifiedDate":"2023-03-03"},{"lineNumber":307,"author":{"gitId":"stevenantya"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":308,"author":{"gitId":"stevenantya"},"content":"        catch (FileNotFoundException e) {","lastModifiedDate":"2023-02-27"},{"lineNumber":309,"author":{"gitId":"stevenantya"},"content":"            isFileFound \u003d false;","lastModifiedDate":"2023-03-03"},{"lineNumber":310,"author":{"gitId":"stevenantya"},"content":"            System.out.println(\"File not found!\\n\");","lastModifiedDate":"2023-03-03"},{"lineNumber":311,"author":{"gitId":"stevenantya"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":312,"author":{"gitId":"stevenantya"},"content":"        if (!isFileFound) {","lastModifiedDate":"2023-03-03"},{"lineNumber":313,"author":{"gitId":"stevenantya"},"content":"            System.out.printf(\"Creating a new File for you! \\n\");","lastModifiedDate":"2023-03-03"},{"lineNumber":314,"author":{"gitId":"stevenantya"},"content":"            if (!directory.exists()) {","lastModifiedDate":"2023-03-03"},{"lineNumber":315,"author":{"gitId":"stevenantya"},"content":"                directory.mkdirs();","lastModifiedDate":"2023-03-03"},{"lineNumber":316,"author":{"gitId":"stevenantya"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":317,"author":{"gitId":"stevenantya"},"content":"            try {","lastModifiedDate":"2023-03-03"},{"lineNumber":318,"author":{"gitId":"stevenantya"},"content":"                f.createNewFile();","lastModifiedDate":"2023-03-03"},{"lineNumber":319,"author":{"gitId":"stevenantya"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":320,"author":{"gitId":"stevenantya"},"content":"            catch (IOException ex) {","lastModifiedDate":"2023-03-03"},{"lineNumber":321,"author":{"gitId":"stevenantya"},"content":"                System.out.println(\"Something went wrong: \" + ex.getMessage());","lastModifiedDate":"2023-03-03"},{"lineNumber":322,"author":{"gitId":"stevenantya"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":323,"author":{"gitId":"stevenantya"},"content":"            System.out.printf(\"Created a new File!\\n\");","lastModifiedDate":"2023-03-03"},{"lineNumber":324,"author":{"gitId":"stevenantya"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":325,"author":{"gitId":"stevenantya"},"content":"        boolean isBye \u003d false;","lastModifiedDate":"2023-02-09"},{"lineNumber":326,"author":{"gitId":"stevenantya"},"content":"        while (!isBye) {","lastModifiedDate":"2023-02-09"},{"lineNumber":327,"author":{"gitId":"stevenantya"},"content":"            try {","lastModifiedDate":"2023-02-09"},{"lineNumber":328,"author":{"gitId":"stevenantya"},"content":"                String s \u003d \"in\";","lastModifiedDate":"2023-02-27"},{"lineNumber":329,"author":{"gitId":"stevenantya"},"content":"                isBye \u003d readInput(s);","lastModifiedDate":"2023-02-27"},{"lineNumber":330,"author":{"gitId":"stevenantya"},"content":"            }","lastModifiedDate":"2023-02-14"},{"lineNumber":331,"author":{"gitId":"stevenantya"},"content":"            catch (EmptyInputException e) {","lastModifiedDate":"2023-02-14"},{"lineNumber":332,"author":{"gitId":"stevenantya"},"content":"                System.out.println(\"Description Can Not Be Empty!\");","lastModifiedDate":"2023-02-14"},{"lineNumber":333,"author":{"gitId":"stevenantya"},"content":"            }","lastModifiedDate":"2023-02-14"},{"lineNumber":334,"author":{"gitId":"stevenantya"},"content":"            catch (IllegalInputException e) {","lastModifiedDate":"2023-02-14"},{"lineNumber":335,"author":{"gitId":"stevenantya"},"content":"                System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-02-09"},{"lineNumber":336,"author":{"gitId":"stevenantya"},"content":"                printLine();","lastModifiedDate":"2023-02-09"},{"lineNumber":337,"author":{"gitId":"stevenantya"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":338,"author":{"gitId":"stevenantya"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":339,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":340,"author":{"gitId":"stevenantya"},"content":"        // Print end text line","lastModifiedDate":"2023-01-29"},{"lineNumber":341,"author":{"gitId":"stevenantya"},"content":"        printLine();","lastModifiedDate":"2023-02-02"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"stevenantya":339,"-":4}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stevenantya"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"stevenantya"},"content":" * @author : Steven A. O. Waskito","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"stevenantya"},"content":" * @mailto : e0851459@u.nus.edu","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"stevenantya"},"content":" * @created : 3 February 2023","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"stevenantya"},"content":" *","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"stevenantya"},"content":" * This is the Event Class that accepts description, /from and /to, (\u0027time range\u0027)","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"stevenantya"},"content":" *","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"stevenantya"},"content":" **/","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"stevenantya"},"content":"public class Event extends Task{","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"stevenantya"},"content":"    protected String startTime;","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"stevenantya"},"content":"    protected String endTime;","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"stevenantya"},"content":"    public Event(String description, String startTime, String endTime) {","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"stevenantya"},"content":"        super(description);","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"stevenantya"},"content":"        this.startTime  \u003d startTime;","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"stevenantya"},"content":"        this.endTime    \u003d endTime;","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"stevenantya"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"stevenantya"},"content":"     * Overrides the print function of the class","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"stevenantya"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"stevenantya"},"content":"    @Override","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"stevenantya"},"content":"    public String toString() {","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"stevenantya"},"content":"        return (\"[E]\" + super.toString() + \"(from: \" + startTime + \" to: \" + endTime + \")\");","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"stevenantya"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"stevenantya"},"content":"     * Overrides the getUpdate method that is used to save/update the input.txt file","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"stevenantya"},"content":"     * @return","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"stevenantya"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"stevenantya"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"stevenantya"},"content":"    public String getUpdate() {","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"stevenantya"},"content":"        return \"event \" + super.description + \"/from \" + startTime + \"/to \" + endTime;","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"stevenantya"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"stevenantya":32}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stevenantya"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"stevenantya"},"content":" * @author : Steven A. O. Waskito","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"stevenantya"},"content":" * @mailto : e0851459@u.nus.edu","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"stevenantya"},"content":" * @created : 3 February 2023","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"stevenantya"},"content":" *","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"stevenantya"},"content":" * This is the class Task that accepts description,","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"stevenantya"},"content":" *      but used only as parent class to Event, Deadline, and Todo Class","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"stevenantya"},"content":" *","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"stevenantya"},"content":" **/","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"stevenantya"},"content":"public class Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"stevenantya"},"content":"    protected String description;","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"stevenantya"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"stevenantya"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"stevenantya"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"stevenantya"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"stevenantya"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"stevenantya"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"stevenantya"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"stevenantya"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"stevenantya"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"stevenantya"},"content":"        return isDone;","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"stevenantya"},"content":"    public String getDescription() {","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"stevenantya"},"content":"        return description;","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":34,"author":{"gitId":"stevenantya"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"stevenantya"},"content":"     * Overrides the print function of the class","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"stevenantya"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"stevenantya"},"content":"    @Override","lastModifiedDate":"2023-02-06"},{"lineNumber":38,"author":{"gitId":"stevenantya"},"content":"    public String toString() {","lastModifiedDate":"2023-02-06"},{"lineNumber":39,"author":{"gitId":"stevenantya"},"content":"        return (isDone ? \"[X]\" : \"[ ]\") + \" \" + description;","lastModifiedDate":"2023-02-06"},{"lineNumber":40,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":41,"author":{"gitId":"stevenantya"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"stevenantya"},"content":"     * Overrides the getUpdate method that is used to save/update the input.txt file","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"stevenantya"},"content":"     * @return","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"stevenantya"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"stevenantya"},"content":"    public String getUpdate() {","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"stevenantya"},"content":"        return (description);","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"stevenantya"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"stevenantya":48}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stevenantya"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"stevenantya"},"content":" * @author : Steven A. O. Waskito","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"stevenantya"},"content":" * @mailto : e0851459@u.nus.edu","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"stevenantya"},"content":" * @created : 3 February 2023","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"stevenantya"},"content":" *","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"stevenantya"},"content":" * This is the Todo Class that accepts description","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"stevenantya"},"content":" *","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"stevenantya"},"content":" **/","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"stevenantya"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"stevenantya"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"stevenantya"},"content":"        super(description);","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"stevenantya"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"stevenantya"},"content":"     * Overrides the print function of the class","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"stevenantya"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"stevenantya"},"content":"    @Override","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"stevenantya"},"content":"    public String toString() {","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"stevenantya"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"stevenantya"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"stevenantya"},"content":"     * Overrides the getUpdate method that is used to save/update the input.txt file","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"stevenantya"},"content":"     * @return","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"stevenantya"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"stevenantya"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"stevenantya"},"content":"    public String getUpdate() {","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"stevenantya"},"content":"        return \"todo \" + super.getUpdate();","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"stevenantya"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"stevenantya":28}},{"path":"src/main/java/exceptions/EmptyInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stevenantya"},"content":"package exceptions;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"stevenantya"},"content":"public class EmptyInputException extends Exception {","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"stevenantya"},"content":"}","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"stevenantya":4}},{"path":"src/main/java/exceptions/IllegalInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stevenantya"},"content":"package exceptions;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"stevenantya"},"content":"public class IllegalInputException extends Exception{","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"stevenantya"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"stevenantya":4}}]
