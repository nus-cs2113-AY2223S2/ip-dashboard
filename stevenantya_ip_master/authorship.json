[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"stevenantya"},"content":"# Elzi project template","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"3. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"stevenantya":1,"-":23}},{"path":"data/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"stevenantya"},"content":"todo 2 ","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"stevenantya"},"content":"deadline book is life /by tom ","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"stevenantya"},"content":"todo 1 ","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"stevenantya"},"content":"deadline 1 /by tom ","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"stevenantya"},"content":"event 1 /from 1 /to 2 ","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"stevenantya":5}},{"path":"data/storage.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"stevenantya"},"content":"T_0_Do My Reading","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"stevenantya"},"content":"D_0_Do homework_tomorrow","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"stevenantya":2}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"stevenantya"},"content":"# Elzi Your Personal Pet Dog User Guide","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"stevenantya"},"content":"Assisting you to keep track of your tasks through our CLI command","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"stevenantya"},"content":"## Quick Start","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"stevenantya"},"content":"1. Download Java 11 or above on your computer.","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"stevenantya"},"content":"2. Download `ip.jar`.","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"stevenantya"},"content":"3. Navigate to the path of `ip.jar`, right click, open in terminal","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"stevenantya"},"content":"4. Run `java -jar ip.jar`","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"stevenantya"},"content":"5. You should see  ` Hello! I\u0027m Elzi, your personal pet dog!` greeeting you","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"stevenantya"},"content":"### Help: `help`","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"stevenantya"},"content":"List all the features of the program","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"stevenantya"},"content":"Example:","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"stevenantya"},"content":"`help`","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"stevenantya"},"content":"Expected Output:","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"stevenantya"},"content":"```","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"stevenantya"},"content":"My features are as follows:","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"stevenantya"},"content":"*BASIC*","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"stevenantya"},"content":"1. todo [DESCRIPTION]","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"stevenantya"},"content":"2. deadline [DESCRIPTION] /by [DEADLINE]","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"stevenantya"},"content":"3. event [DESCRIPTION] /from [START] /to [END]","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"stevenantya"},"content":"4. list","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"stevenantya"},"content":"5. mark [INDEX]","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"stevenantya"},"content":"6. unmark [INDEX]","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"stevenantya"},"content":"7. find [KEYWORD]","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"stevenantya"},"content":"*** ADVANCED : These are additional features! ***","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"stevenantya"},"content":"8. list_todo","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"stevenantya"},"content":"9. list_deadline","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"stevenantya"},"content":"10. list_event","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"stevenantya"},"content":"12. help","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"stevenantya"},"content":"```","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"stevenantya"},"content":"### Adding Todo task: `todo`","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"stevenantya"},"content":"Adds Todo to the task list.","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"stevenantya"},"content":"Format: `todo DESCRIPTION`","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"stevenantya"},"content":"Example:","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"stevenantya"},"content":"`todo Do My Reading`","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"stevenantya"},"content":"Expected output:","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"stevenantya"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"stevenantya"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"stevenantya"},"content":"\t[T][ ] Do My Reading","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"stevenantya"},"content":"Now you have 1 task in the list.","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"stevenantya"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":52,"author":{"gitId":"stevenantya"},"content":"### Adding Deadline task: `deadline`","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"stevenantya"},"content":"Adds Deadline to the task list.","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":55,"author":{"gitId":"stevenantya"},"content":"Format: `deadline DESCRIPTION /by TIME`","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":57,"author":{"gitId":"stevenantya"},"content":"Example:","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"stevenantya"},"content":"`deadline Do homework /by tomorrow`","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":60,"author":{"gitId":"stevenantya"},"content":"Expected output:","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"stevenantya"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"stevenantya"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"stevenantya"},"content":"\t[D][ ] Do homework (by: tomorrow)","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"stevenantya"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"stevenantya"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":67,"author":{"gitId":"stevenantya"},"content":"### Adding a new Event task: `event`","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"stevenantya"},"content":"Adds Event to the task list.","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":70,"author":{"gitId":"stevenantya"},"content":"Format: `event DESCRIPTION /from START_TIME /to END_TIME`","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":72,"author":{"gitId":"stevenantya"},"content":"Example:","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"stevenantya"},"content":"`event Beach Day /from Sat 9am /to Sat 3pm`","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":75,"author":{"gitId":"stevenantya"},"content":"Expected output:","lastModifiedDate":"2023-03-03"},{"lineNumber":76,"author":{"gitId":"stevenantya"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"stevenantya"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"stevenantya"},"content":"\t[E][ ] Beach Day (from: Sat 9am  to: Sat 3pm)","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"stevenantya"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2023-03-03"},{"lineNumber":80,"author":{"gitId":"stevenantya"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":82,"author":{"gitId":"stevenantya"},"content":"### Listing all tasks: `list`","lastModifiedDate":"2023-03-03"},{"lineNumber":83,"author":{"gitId":"stevenantya"},"content":"Lists all of the tasks.","lastModifiedDate":"2023-03-03"},{"lineNumber":84,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":85,"author":{"gitId":"stevenantya"},"content":"Example:","lastModifiedDate":"2023-03-20"},{"lineNumber":86,"author":{"gitId":"stevenantya"},"content":"`list`","lastModifiedDate":"2023-03-20"},{"lineNumber":87,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":88,"author":{"gitId":"stevenantya"},"content":"Expected output:","lastModifiedDate":"2023-03-03"},{"lineNumber":89,"author":{"gitId":"stevenantya"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":90,"author":{"gitId":"stevenantya"},"content":"Your current tasks are as follows:","lastModifiedDate":"2023-03-03"},{"lineNumber":91,"author":{"gitId":"stevenantya"},"content":"1. [T][ ] Do My Reading","lastModifiedDate":"2023-03-03"},{"lineNumber":92,"author":{"gitId":"stevenantya"},"content":"2. [D][ ] Do homework (by: tomorrow)","lastModifiedDate":"2023-03-03"},{"lineNumber":93,"author":{"gitId":"stevenantya"},"content":"3. [E][ ] Beach Day (from: Sat 9am  to: Sat 3pm)","lastModifiedDate":"2023-03-03"},{"lineNumber":94,"author":{"gitId":"stevenantya"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":95,"author":{"gitId":"stevenantya"},"content":"### Listing todo tasks: `list_todo`","lastModifiedDate":"2023-03-20"},{"lineNumber":96,"author":{"gitId":"stevenantya"},"content":"Lists todo tasks.","lastModifiedDate":"2023-03-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":98,"author":{"gitId":"stevenantya"},"content":"Example:","lastModifiedDate":"2023-03-20"},{"lineNumber":99,"author":{"gitId":"stevenantya"},"content":"`list_todo`","lastModifiedDate":"2023-03-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":101,"author":{"gitId":"stevenantya"},"content":"Expected output:","lastModifiedDate":"2023-03-20"},{"lineNumber":102,"author":{"gitId":"stevenantya"},"content":"```","lastModifiedDate":"2023-03-20"},{"lineNumber":103,"author":{"gitId":"stevenantya"},"content":"Your current todo tasks are as follows:","lastModifiedDate":"2023-03-20"},{"lineNumber":104,"author":{"gitId":"stevenantya"},"content":"1. [T][ ] Do My Reading","lastModifiedDate":"2023-03-20"},{"lineNumber":105,"author":{"gitId":"stevenantya"},"content":"```","lastModifiedDate":"2023-03-20"},{"lineNumber":106,"author":{"gitId":"stevenantya"},"content":"### Listing deadline tasks: `list_deadline`","lastModifiedDate":"2023-03-20"},{"lineNumber":107,"author":{"gitId":"stevenantya"},"content":"Lists deadline tasks.","lastModifiedDate":"2023-03-20"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":109,"author":{"gitId":"stevenantya"},"content":"Example:","lastModifiedDate":"2023-03-20"},{"lineNumber":110,"author":{"gitId":"stevenantya"},"content":"`list_deadline`","lastModifiedDate":"2023-03-20"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":112,"author":{"gitId":"stevenantya"},"content":"Expected output:","lastModifiedDate":"2023-03-20"},{"lineNumber":113,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-03-20"},{"lineNumber":114,"author":{"gitId":"stevenantya"},"content":"Your current deadlines are as follows:","lastModifiedDate":"2023-03-20"},{"lineNumber":115,"author":{"gitId":"stevenantya"},"content":"1. [D][ ] Do homework (by: tomorrow)","lastModifiedDate":"2023-03-20"},{"lineNumber":116,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-03-20"},{"lineNumber":117,"author":{"gitId":"stevenantya"},"content":"### Listing event tasks: `list_event`","lastModifiedDate":"2023-03-20"},{"lineNumber":118,"author":{"gitId":"stevenantya"},"content":"Lists event tasks.","lastModifiedDate":"2023-03-20"},{"lineNumber":119,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":120,"author":{"gitId":"stevenantya"},"content":"Example:","lastModifiedDate":"2023-03-20"},{"lineNumber":121,"author":{"gitId":"stevenantya"},"content":"`list_event`","lastModifiedDate":"2023-03-20"},{"lineNumber":122,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":123,"author":{"gitId":"stevenantya"},"content":"Expected output:","lastModifiedDate":"2023-03-20"},{"lineNumber":124,"author":{"gitId":"stevenantya"},"content":"```","lastModifiedDate":"2023-03-20"},{"lineNumber":125,"author":{"gitId":"stevenantya"},"content":"Your current events are as follows:","lastModifiedDate":"2023-03-20"},{"lineNumber":126,"author":{"gitId":"stevenantya"},"content":"1. [E][ ] Beach Day (from: Sat 9am to: Sat 3pm)","lastModifiedDate":"2023-03-20"},{"lineNumber":127,"author":{"gitId":"stevenantya"},"content":"```","lastModifiedDate":"2023-03-20"},{"lineNumber":128,"author":{"gitId":"stevenantya"},"content":"### Marking a task as done: `mark`","lastModifiedDate":"2023-03-03"},{"lineNumber":129,"author":{"gitId":"stevenantya"},"content":"Marks the specified task as done.","lastModifiedDate":"2023-03-03"},{"lineNumber":130,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":131,"author":{"gitId":"stevenantya"},"content":"Format: `mark TASK_ID`","lastModifiedDate":"2023-03-03"},{"lineNumber":132,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":133,"author":{"gitId":"stevenantya"},"content":"Example:","lastModifiedDate":"2023-03-03"},{"lineNumber":134,"author":{"gitId":"stevenantya"},"content":"`mark 1`","lastModifiedDate":"2023-03-03"},{"lineNumber":135,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":136,"author":{"gitId":"stevenantya"},"content":"Expected output:","lastModifiedDate":"2023-03-03"},{"lineNumber":137,"author":{"gitId":"stevenantya"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":138,"author":{"gitId":"stevenantya"},"content":"I have marked this task as done","lastModifiedDate":"2023-03-03"},{"lineNumber":139,"author":{"gitId":"stevenantya"},"content":"[T][X] Do My Reading","lastModifiedDate":"2023-03-20"},{"lineNumber":140,"author":{"gitId":"stevenantya"},"content":"-------------------------------------------------","lastModifiedDate":"2023-03-20"},{"lineNumber":141,"author":{"gitId":"stevenantya"},"content":"Your current tasks are as follows:","lastModifiedDate":"2023-03-03"},{"lineNumber":142,"author":{"gitId":"stevenantya"},"content":"1. [T][X] Do My Reading","lastModifiedDate":"2023-03-03"},{"lineNumber":143,"author":{"gitId":"stevenantya"},"content":"2. [D][ ] Do homework (by: tomorrow)","lastModifiedDate":"2023-03-03"},{"lineNumber":144,"author":{"gitId":"stevenantya"},"content":"3. [E][ ] Beach Day (from: Sat 9am  to: Sat 3pm)","lastModifiedDate":"2023-03-03"},{"lineNumber":145,"author":{"gitId":"stevenantya"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":146,"author":{"gitId":"stevenantya"},"content":"### Unmark a task as not done: `unmark`","lastModifiedDate":"2023-03-20"},{"lineNumber":147,"author":{"gitId":"stevenantya"},"content":"Unmarks the specified task.","lastModifiedDate":"2023-03-03"},{"lineNumber":148,"author":{"gitId":"stevenantya"},"content":"Marks it as undone","lastModifiedDate":"2023-03-03"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":150,"author":{"gitId":"stevenantya"},"content":"Format: `unmark TASK_ID`","lastModifiedDate":"2023-03-03"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":152,"author":{"gitId":"stevenantya"},"content":"Example:","lastModifiedDate":"2023-03-03"},{"lineNumber":153,"author":{"gitId":"stevenantya"},"content":"`unmark 1`","lastModifiedDate":"2023-03-03"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":155,"author":{"gitId":"stevenantya"},"content":"Expected output:","lastModifiedDate":"2023-03-03"},{"lineNumber":156,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":157,"author":{"gitId":"stevenantya"},"content":"I have unmarked this task","lastModifiedDate":"2023-03-03"},{"lineNumber":158,"author":{"gitId":"stevenantya"},"content":"[T][ ] Do My Reading","lastModifiedDate":"2023-03-20"},{"lineNumber":159,"author":{"gitId":"stevenantya"},"content":"-------------------------------------------------","lastModifiedDate":"2023-03-20"},{"lineNumber":160,"author":{"gitId":"stevenantya"},"content":"Your current tasks are as follows:","lastModifiedDate":"2023-03-03"},{"lineNumber":161,"author":{"gitId":"stevenantya"},"content":"1. [T][ ] Do My Reading","lastModifiedDate":"2023-03-03"},{"lineNumber":162,"author":{"gitId":"stevenantya"},"content":"2. [D][ ] Do homework (by: tomorrow)","lastModifiedDate":"2023-03-03"},{"lineNumber":163,"author":{"gitId":"stevenantya"},"content":"3. [E][ ] Beach Day (from: Sat 9am  to: Sat 3pm)","lastModifiedDate":"2023-03-03"},{"lineNumber":164,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":165,"author":{"gitId":"stevenantya"},"content":"### Deleting a task: `delete`","lastModifiedDate":"2023-03-03"},{"lineNumber":166,"author":{"gitId":"stevenantya"},"content":"Deletes the task.","lastModifiedDate":"2023-03-03"},{"lineNumber":167,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":168,"author":{"gitId":"stevenantya"},"content":"Format: `delete TASK_ID`","lastModifiedDate":"2023-03-03"},{"lineNumber":169,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":170,"author":{"gitId":"stevenantya"},"content":"Example:","lastModifiedDate":"2023-03-03"},{"lineNumber":171,"author":{"gitId":"stevenantya"},"content":"`delete 3`","lastModifiedDate":"2023-03-03"},{"lineNumber":172,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":173,"author":{"gitId":"stevenantya"},"content":"Expected output:","lastModifiedDate":"2023-03-03"},{"lineNumber":174,"author":{"gitId":"stevenantya"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":175,"author":{"gitId":"stevenantya"},"content":"I have removed this item in index 3","lastModifiedDate":"2023-03-03"},{"lineNumber":176,"author":{"gitId":"stevenantya"},"content":"      [E][ ] Beach Day (from: Sat 9am  to: Sat 3pm)","lastModifiedDate":"2023-03-20"},{"lineNumber":177,"author":{"gitId":"stevenantya"},"content":"-------------------------------------------------","lastModifiedDate":"2023-03-20"},{"lineNumber":178,"author":{"gitId":"stevenantya"},"content":"Now you have 2 task in the list","lastModifiedDate":"2023-03-20"},{"lineNumber":179,"author":{"gitId":"stevenantya"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":180,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":181,"author":{"gitId":"stevenantya"},"content":"### Finding a task: `find`","lastModifiedDate":"2023-03-03"},{"lineNumber":182,"author":{"gitId":"stevenantya"},"content":"Finds task that has the keyword in its description.","lastModifiedDate":"2023-03-03"},{"lineNumber":183,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":184,"author":{"gitId":"stevenantya"},"content":"Format: `find KEYWORD`","lastModifiedDate":"2023-03-03"},{"lineNumber":185,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":186,"author":{"gitId":"stevenantya"},"content":"Example:","lastModifiedDate":"2023-03-03"},{"lineNumber":187,"author":{"gitId":"stevenantya"},"content":"`find Reading`","lastModifiedDate":"2023-03-03"},{"lineNumber":188,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":189,"author":{"gitId":"stevenantya"},"content":"Expected output:","lastModifiedDate":"2023-03-03"},{"lineNumber":190,"author":{"gitId":"stevenantya"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":191,"author":{"gitId":"stevenantya"},"content":"1. [T][ ] Do My Reading","lastModifiedDate":"2023-03-20"},{"lineNumber":192,"author":{"gitId":"stevenantya"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":193,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":194,"author":{"gitId":"stevenantya"},"content":"### Exit the program: `bye`","lastModifiedDate":"2023-03-03"},{"lineNumber":195,"author":{"gitId":"stevenantya"},"content":"Exits the program.","lastModifiedDate":"2023-03-03"},{"lineNumber":196,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":197,"author":{"gitId":"stevenantya"},"content":"Expected output:","lastModifiedDate":"2023-03-03"},{"lineNumber":198,"author":{"gitId":"stevenantya"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":199,"author":{"gitId":"stevenantya"},"content":"Good bye! See you soon!","lastModifiedDate":"2023-03-20"},{"lineNumber":200,"author":{"gitId":"stevenantya"},"content":"___________________________******___________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":201,"author":{"gitId":"stevenantya"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":202,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":203,"author":{"gitId":"stevenantya"},"content":"### Automatically Saved","lastModifiedDate":"2023-03-03"},{"lineNumber":204,"author":{"gitId":"stevenantya"},"content":"Your task list is automatically saved in the hardisk","lastModifiedDate":"2023-03-03"},{"lineNumber":205,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":206,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"stevenantya":181,"-":25}},{"path":"src/main/java/elzi/Elzi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stevenantya"},"content":"// Java program to read data of various types using Scanner class.","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"stevenantya"},"content":"package elzi;","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"stevenantya"},"content":"import elzi.command.Command;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"stevenantya"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"stevenantya"},"content":" * @author : Steven A. O. Waskito","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"stevenantya"},"content":" *","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"stevenantya"},"content":" *      This is the main Java driver code","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"stevenantya"},"content":" *","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"stevenantya"},"content":" **/","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"stevenantya"},"content":"public class Elzi extends Throwable {","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"stevenantya"},"content":"    private Storage storage;","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"stevenantya"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"stevenantya"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"stevenantya"},"content":"     * Constructor to initialize Elzi program","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"stevenantya"},"content":"     * @param filePath path to store storage.txt","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"stevenantya"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"stevenantya"},"content":"    public Elzi(String filePath) {","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"stevenantya"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"stevenantya"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"stevenantya"},"content":"        try {","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"stevenantya"},"content":"            taskList \u003d new TaskList(storage.readFile());","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"stevenantya"},"content":"        } catch (ElziException e) {","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"stevenantya"},"content":"            Ui.printErrorMessage(\"filepath error\");","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"stevenantya"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"stevenantya"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"stevenantya"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"stevenantya"},"content":"     * Method to run the program, inquire command, print response","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"stevenantya"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"stevenantya"},"content":"    public void run() {","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"stevenantya"},"content":"        Ui.printWelcomeMessage();","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"stevenantya"},"content":"        String inputCommand \u003d \"\";","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"stevenantya"},"content":"        boolean isBye \u003d false;","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"stevenantya"},"content":"        do {","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"stevenantya"},"content":"            inputCommand \u003d Ui.getCommand();","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"stevenantya"},"content":"            Ui.printLine();","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"stevenantya"},"content":"            try {","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"stevenantya"},"content":"                Command command \u003d Parser.parse(inputCommand);","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"stevenantya"},"content":"                if (command \u003d\u003d null) {","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"stevenantya"},"content":"                    continue;","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"stevenantya"},"content":"                }","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"stevenantya"},"content":"                isBye \u003d command.execute(taskList);","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"stevenantya"},"content":"                storage.saveFile(taskList);","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"stevenantya"},"content":"            } catch (ElziException e) {","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"stevenantya"},"content":"                Ui.printErrorMessage(e.getMessage());","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"stevenantya"},"content":"            }","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"stevenantya"},"content":"        } while(!isBye);","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"stevenantya"},"content":"        Ui.printByeMessage();","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"stevenantya"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":56,"author":{"gitId":"stevenantya"},"content":"     * Main driver of the code, institates new Elzi program","lastModifiedDate":"2023-03-20"},{"lineNumber":57,"author":{"gitId":"stevenantya"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":58,"author":{"gitId":"stevenantya"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"stevenantya"},"content":"        new Elzi(\"data/input.txt\").run();","lastModifiedDate":"2023-03-20"},{"lineNumber":60,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"stevenantya"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"stevenantya":61}},{"path":"src/main/java/elzi/ElziException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stevenantya"},"content":"package elzi;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"stevenantya"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"stevenantya"},"content":" * @author : Steven A. O. Waskito","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"stevenantya"},"content":" * Class ElziException handles errors or exceptions in the program","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"stevenantya"},"content":" **/","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"stevenantya"},"content":"public class ElziException extends Exception {","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"stevenantya"},"content":"    public ElziException(String message) {","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"stevenantya"},"content":"        super(message);","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"stevenantya"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"stevenantya":11}},{"path":"src/main/java/elzi/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stevenantya"},"content":"package elzi;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"stevenantya"},"content":"import elzi.command.AddCommand;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"stevenantya"},"content":"import elzi.command.Command;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"stevenantya"},"content":"import elzi.command.DeleteCommand;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"stevenantya"},"content":"import elzi.command.ExitCommand;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"stevenantya"},"content":"import elzi.command.FindCommand;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"stevenantya"},"content":"import elzi.command.ListCommand;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"stevenantya"},"content":"import elzi.command.SetAsDoneCommand;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"stevenantya"},"content":"import elzi.task.Deadline;","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"stevenantya"},"content":"import elzi.task.Event;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"stevenantya"},"content":"import elzi.task.Task;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"stevenantya"},"content":"import elzi.task.Todo;","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"stevenantya"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"stevenantya"},"content":" * @author : Steven A. O. Waskito","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"stevenantya"},"content":" * Class Parser parses the command input","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"stevenantya"},"content":" * Returns command to Elzi.java","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"stevenantya"},"content":" **/","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"stevenantya"},"content":"public class Parser {","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"stevenantya"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"stevenantya"},"content":"     * Parses and handles command input","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"stevenantya"},"content":"     * returns the respective command class","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"stevenantya"},"content":"     * @param command input command from user","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"stevenantya"},"content":"     * @throws ElziException if command is illegal","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"stevenantya"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"stevenantya"},"content":"    public static Command parse(String command) throws ElziException {","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"stevenantya"},"content":"        if (command.startsWith(\"help\")) {","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"stevenantya"},"content":"            Ui.printHelp();","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"stevenantya"},"content":"            return null;","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"stevenantya"},"content":"        } else if (command.startsWith(\"todo\")) {","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"stevenantya"},"content":"            Task todoCommand \u003d parseTodo(command);","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"stevenantya"},"content":"            return new AddCommand(todoCommand);","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"stevenantya"},"content":"        } else if (command.startsWith(\"deadline\")) {","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"stevenantya"},"content":"            Task deadlineCommand \u003d parseDeadline(command);","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"stevenantya"},"content":"            return new AddCommand(deadlineCommand);","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"stevenantya"},"content":"        } else if (command.startsWith(\"event\")) {","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"stevenantya"},"content":"            Task eventCommand \u003d parseEvent(command);","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"stevenantya"},"content":"            return new AddCommand(eventCommand);","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"stevenantya"},"content":"        } else if (command.startsWith(\"mark\")) {","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"stevenantya"},"content":"            int index;","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"stevenantya"},"content":"            if (command.split(\"mark \").length \u003e 1) {","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"stevenantya"},"content":"                String commandIndex \u003d command.split(\"mark \")[1];","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"stevenantya"},"content":"                try {","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"stevenantya"},"content":"                    index \u003d Integer.parseInt(commandIndex);","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"stevenantya"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"stevenantya"},"content":"                    throw new ElziException(\"Index is not an integer!\");","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"stevenantya"},"content":"                }","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"stevenantya"},"content":"            } else {","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"stevenantya"},"content":"                throw new ElziException(\"index can\u0027t be empty\");","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"stevenantya"},"content":"            }","lastModifiedDate":"2023-03-20"},{"lineNumber":53,"author":{"gitId":"stevenantya"},"content":"            return new SetAsDoneCommand(index - 1, true);","lastModifiedDate":"2023-03-20"},{"lineNumber":54,"author":{"gitId":"stevenantya"},"content":"        } else if (command.startsWith(\"unmark\")) {","lastModifiedDate":"2023-03-20"},{"lineNumber":55,"author":{"gitId":"stevenantya"},"content":"            int index;","lastModifiedDate":"2023-03-20"},{"lineNumber":56,"author":{"gitId":"stevenantya"},"content":"            if (command.split(\"unmark \").length \u003e 1) {","lastModifiedDate":"2023-03-20"},{"lineNumber":57,"author":{"gitId":"stevenantya"},"content":"                String commandIndex \u003d command.split(\"unmark \")[1];","lastModifiedDate":"2023-03-20"},{"lineNumber":58,"author":{"gitId":"stevenantya"},"content":"                try {","lastModifiedDate":"2023-03-20"},{"lineNumber":59,"author":{"gitId":"stevenantya"},"content":"                    index \u003d Integer.parseInt(commandIndex);","lastModifiedDate":"2023-03-20"},{"lineNumber":60,"author":{"gitId":"stevenantya"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-20"},{"lineNumber":61,"author":{"gitId":"stevenantya"},"content":"                    throw new ElziException(\"Index is not an integer!\");","lastModifiedDate":"2023-03-20"},{"lineNumber":62,"author":{"gitId":"stevenantya"},"content":"                }","lastModifiedDate":"2023-03-20"},{"lineNumber":63,"author":{"gitId":"stevenantya"},"content":"            } else {","lastModifiedDate":"2023-03-20"},{"lineNumber":64,"author":{"gitId":"stevenantya"},"content":"                throw new ElziException(\"index can\u0027t be empty\");","lastModifiedDate":"2023-03-20"},{"lineNumber":65,"author":{"gitId":"stevenantya"},"content":"            }","lastModifiedDate":"2023-03-20"},{"lineNumber":66,"author":{"gitId":"stevenantya"},"content":"            return new SetAsDoneCommand(index - 1, false);","lastModifiedDate":"2023-03-20"},{"lineNumber":67,"author":{"gitId":"stevenantya"},"content":"        } else if (command.startsWith(\"delete\")) {","lastModifiedDate":"2023-03-20"},{"lineNumber":68,"author":{"gitId":"stevenantya"},"content":"            int index;","lastModifiedDate":"2023-03-20"},{"lineNumber":69,"author":{"gitId":"stevenantya"},"content":"            if (command.split(\"delete \").length \u003e 1) {","lastModifiedDate":"2023-03-20"},{"lineNumber":70,"author":{"gitId":"stevenantya"},"content":"                index \u003d Integer.parseInt(command.split(\"delete \")[1]);","lastModifiedDate":"2023-03-20"},{"lineNumber":71,"author":{"gitId":"stevenantya"},"content":"            } else {","lastModifiedDate":"2023-03-20"},{"lineNumber":72,"author":{"gitId":"stevenantya"},"content":"                throw new ElziException(\"index can\u0027t be empty\");","lastModifiedDate":"2023-03-20"},{"lineNumber":73,"author":{"gitId":"stevenantya"},"content":"            }","lastModifiedDate":"2023-03-20"},{"lineNumber":74,"author":{"gitId":"stevenantya"},"content":"            return new DeleteCommand(index - 1);","lastModifiedDate":"2023-03-20"},{"lineNumber":75,"author":{"gitId":"stevenantya"},"content":"        } else if (command.startsWith(\"list\")) {","lastModifiedDate":"2023-03-20"},{"lineNumber":76,"author":{"gitId":"stevenantya"},"content":"            if (command.startsWith(\"list_todo\")) {","lastModifiedDate":"2023-03-20"},{"lineNumber":77,"author":{"gitId":"stevenantya"},"content":"                return new ListCommand(\"T\");","lastModifiedDate":"2023-03-20"},{"lineNumber":78,"author":{"gitId":"stevenantya"},"content":"            } else if (command.startsWith(\"list_deadline\")) {","lastModifiedDate":"2023-03-20"},{"lineNumber":79,"author":{"gitId":"stevenantya"},"content":"                return new ListCommand(\"D\");","lastModifiedDate":"2023-03-20"},{"lineNumber":80,"author":{"gitId":"stevenantya"},"content":"            } else if (command.startsWith(\"list_event\")) {","lastModifiedDate":"2023-03-20"},{"lineNumber":81,"author":{"gitId":"stevenantya"},"content":"                return new ListCommand(\"E\");","lastModifiedDate":"2023-03-20"},{"lineNumber":82,"author":{"gitId":"stevenantya"},"content":"            }","lastModifiedDate":"2023-03-20"},{"lineNumber":83,"author":{"gitId":"stevenantya"},"content":"            return new ListCommand(\"N\");","lastModifiedDate":"2023-03-20"},{"lineNumber":84,"author":{"gitId":"stevenantya"},"content":"        } else if (command.startsWith(\"find\")) {","lastModifiedDate":"2023-03-20"},{"lineNumber":85,"author":{"gitId":"stevenantya"},"content":"            String keyword \u003d \"\";","lastModifiedDate":"2023-03-20"},{"lineNumber":86,"author":{"gitId":"stevenantya"},"content":"            if (command.split(\"find \").length \u003e 1) {","lastModifiedDate":"2023-03-20"},{"lineNumber":87,"author":{"gitId":"stevenantya"},"content":"                keyword \u003d command.split(\"find \")[1];","lastModifiedDate":"2023-03-20"},{"lineNumber":88,"author":{"gitId":"stevenantya"},"content":"            } else {","lastModifiedDate":"2023-03-20"},{"lineNumber":89,"author":{"gitId":"stevenantya"},"content":"                throw new ElziException(\"keyword can\u0027t be empty\");","lastModifiedDate":"2023-03-20"},{"lineNumber":90,"author":{"gitId":"stevenantya"},"content":"            }","lastModifiedDate":"2023-03-20"},{"lineNumber":91,"author":{"gitId":"stevenantya"},"content":"            return new FindCommand(keyword);","lastModifiedDate":"2023-03-20"},{"lineNumber":92,"author":{"gitId":"stevenantya"},"content":"        } else if (command.startsWith(\"bye\")) {","lastModifiedDate":"2023-03-20"},{"lineNumber":93,"author":{"gitId":"stevenantya"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-03-20"},{"lineNumber":94,"author":{"gitId":"stevenantya"},"content":"        } else {","lastModifiedDate":"2023-03-20"},{"lineNumber":95,"author":{"gitId":"stevenantya"},"content":"            throw new ElziException(\"Invalid command\");","lastModifiedDate":"2023-03-20"},{"lineNumber":96,"author":{"gitId":"stevenantya"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":97,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":98,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":99,"author":{"gitId":"stevenantya"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":100,"author":{"gitId":"stevenantya"},"content":"     * Parses and handles event input","lastModifiedDate":"2023-03-20"},{"lineNumber":101,"author":{"gitId":"stevenantya"},"content":"     * returns event class","lastModifiedDate":"2023-03-20"},{"lineNumber":102,"author":{"gitId":"stevenantya"},"content":"     * @param command input command from user","lastModifiedDate":"2023-03-20"},{"lineNumber":103,"author":{"gitId":"stevenantya"},"content":"     * @throws ElziException if command is illegal","lastModifiedDate":"2023-03-20"},{"lineNumber":104,"author":{"gitId":"stevenantya"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":105,"author":{"gitId":"stevenantya"},"content":"    private static Task parseEvent(String command) throws ElziException {","lastModifiedDate":"2023-03-20"},{"lineNumber":106,"author":{"gitId":"stevenantya"},"content":"        String [] commands \u003d command.split(\"event \");","lastModifiedDate":"2023-03-20"},{"lineNumber":107,"author":{"gitId":"stevenantya"},"content":"        if (commands.length \u003e 1) {","lastModifiedDate":"2023-03-20"},{"lineNumber":108,"author":{"gitId":"stevenantya"},"content":"            if (!commands[1].contains(\" /from\") \u0026\u0026 command.contains(\"/from\")) {","lastModifiedDate":"2023-03-20"},{"lineNumber":109,"author":{"gitId":"stevenantya"},"content":"                throw new ElziException(\"Description can\u0027t be empty!\");","lastModifiedDate":"2023-03-20"},{"lineNumber":110,"author":{"gitId":"stevenantya"},"content":"            }","lastModifiedDate":"2023-03-20"},{"lineNumber":111,"author":{"gitId":"stevenantya"},"content":"            String [] commandsDescription \u003d commands[1].split(\" /from \");","lastModifiedDate":"2023-03-20"},{"lineNumber":112,"author":{"gitId":"stevenantya"},"content":"            if (commandsDescription.length \u003e 1) {","lastModifiedDate":"2023-03-20"},{"lineNumber":113,"author":{"gitId":"stevenantya"},"content":"                String[] commandsEvent \u003d commandsDescription[1].split(\" /to \");","lastModifiedDate":"2023-03-20"},{"lineNumber":114,"author":{"gitId":"stevenantya"},"content":"                if (commandsEvent.length \u003e 1) {","lastModifiedDate":"2023-03-20"},{"lineNumber":115,"author":{"gitId":"stevenantya"},"content":"                    return new Event(commandsDescription[0], commandsEvent[0], commandsEvent[1]);","lastModifiedDate":"2023-03-20"},{"lineNumber":116,"author":{"gitId":"stevenantya"},"content":"                }","lastModifiedDate":"2023-03-20"},{"lineNumber":117,"author":{"gitId":"stevenantya"},"content":"                return new Event(commandsDescription[0], commandsEvent[0], \"\");","lastModifiedDate":"2023-03-20"},{"lineNumber":118,"author":{"gitId":"stevenantya"},"content":"            }","lastModifiedDate":"2023-03-20"},{"lineNumber":119,"author":{"gitId":"stevenantya"},"content":"            return new Event(commandsDescription[0], \"\", \"\");","lastModifiedDate":"2023-03-20"},{"lineNumber":120,"author":{"gitId":"stevenantya"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":121,"author":{"gitId":"stevenantya"},"content":"        return new Event(\"\", \"\", \"\");","lastModifiedDate":"2023-03-20"},{"lineNumber":122,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":123,"author":{"gitId":"stevenantya"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":124,"author":{"gitId":"stevenantya"},"content":"     * Parses and handles deadline input","lastModifiedDate":"2023-03-20"},{"lineNumber":125,"author":{"gitId":"stevenantya"},"content":"     * returns deadline class","lastModifiedDate":"2023-03-20"},{"lineNumber":126,"author":{"gitId":"stevenantya"},"content":"     * @param command input command from user","lastModifiedDate":"2023-03-20"},{"lineNumber":127,"author":{"gitId":"stevenantya"},"content":"     * @throws ElziException if command is illegal","lastModifiedDate":"2023-03-20"},{"lineNumber":128,"author":{"gitId":"stevenantya"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":129,"author":{"gitId":"stevenantya"},"content":"    private static Task parseDeadline(String command) throws ElziException {","lastModifiedDate":"2023-03-20"},{"lineNumber":130,"author":{"gitId":"stevenantya"},"content":"        String [] commands \u003d command.split(\"deadline \");","lastModifiedDate":"2023-03-20"},{"lineNumber":131,"author":{"gitId":"stevenantya"},"content":"        if (commands.length \u003e 1) {","lastModifiedDate":"2023-03-20"},{"lineNumber":132,"author":{"gitId":"stevenantya"},"content":"            if (!commands[1].contains(\" /by\") \u0026\u0026 command.contains(\"/by\")) {","lastModifiedDate":"2023-03-20"},{"lineNumber":133,"author":{"gitId":"stevenantya"},"content":"                throw new ElziException(\"Description can\u0027t be empty!\");","lastModifiedDate":"2023-03-20"},{"lineNumber":134,"author":{"gitId":"stevenantya"},"content":"            }","lastModifiedDate":"2023-03-20"},{"lineNumber":135,"author":{"gitId":"stevenantya"},"content":"            String [] commandsDescription \u003d commands[1].split(\" /by \");","lastModifiedDate":"2023-03-20"},{"lineNumber":136,"author":{"gitId":"stevenantya"},"content":"            if (commandsDescription.length \u003e 1) {","lastModifiedDate":"2023-03-20"},{"lineNumber":137,"author":{"gitId":"stevenantya"},"content":"                return new Deadline(commandsDescription[0], commandsDescription[1]);","lastModifiedDate":"2023-03-20"},{"lineNumber":138,"author":{"gitId":"stevenantya"},"content":"            }","lastModifiedDate":"2023-03-20"},{"lineNumber":139,"author":{"gitId":"stevenantya"},"content":"            return new Deadline(commandsDescription[0], \"\");","lastModifiedDate":"2023-03-20"},{"lineNumber":140,"author":{"gitId":"stevenantya"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":141,"author":{"gitId":"stevenantya"},"content":"        return new Deadline(\"\", \"\");","lastModifiedDate":"2023-03-20"},{"lineNumber":142,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":143,"author":{"gitId":"stevenantya"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":144,"author":{"gitId":"stevenantya"},"content":"     * Parses and handles todo input","lastModifiedDate":"2023-03-20"},{"lineNumber":145,"author":{"gitId":"stevenantya"},"content":"     * returns todo class","lastModifiedDate":"2023-03-20"},{"lineNumber":146,"author":{"gitId":"stevenantya"},"content":"     * @param command input command from user","lastModifiedDate":"2023-03-20"},{"lineNumber":147,"author":{"gitId":"stevenantya"},"content":"     * @throws ElziException if command is illegal","lastModifiedDate":"2023-03-20"},{"lineNumber":148,"author":{"gitId":"stevenantya"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":149,"author":{"gitId":"stevenantya"},"content":"    private static Task parseTodo(String command) throws ElziException {","lastModifiedDate":"2023-03-20"},{"lineNumber":150,"author":{"gitId":"stevenantya"},"content":"        if (command.split(\"todo \").length \u003e 1) {","lastModifiedDate":"2023-03-20"},{"lineNumber":151,"author":{"gitId":"stevenantya"},"content":"            return new Todo(command.split(\"todo \")[1]);","lastModifiedDate":"2023-03-20"},{"lineNumber":152,"author":{"gitId":"stevenantya"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":153,"author":{"gitId":"stevenantya"},"content":"        return new Todo(\"\");","lastModifiedDate":"2023-03-20"},{"lineNumber":154,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":155,"author":{"gitId":"stevenantya"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"stevenantya":155}},{"path":"src/main/java/elzi/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stevenantya"},"content":"package elzi;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"stevenantya"},"content":"import java.io.File;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"stevenantya"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"stevenantya"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"stevenantya"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"stevenantya"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"stevenantya"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"stevenantya"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"stevenantya"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"stevenantya"},"content":"import elzi.task.Deadline;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"stevenantya"},"content":"import elzi.task.Event;","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"stevenantya"},"content":"import elzi.task.Task;","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"stevenantya"},"content":"import elzi.task.Todo;","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"stevenantya"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"stevenantya"},"content":" * @author : Steven A. O. Waskito","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"stevenantya"},"content":" * Class Storage handles saving and loading of file from harddisk","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"stevenantya"},"content":" **/","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"stevenantya"},"content":"public class Storage {","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"stevenantya"},"content":"    public final Path FILE_PATH;","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"stevenantya"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"stevenantya"},"content":"        FILE_PATH \u003d Paths.get(\"data/storage.txt\");","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"stevenantya"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"stevenantya"},"content":"     * Saves the program taskList to FILE_PATH in the harddisk","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"stevenantya"},"content":"     * @param taskList ArrayList that stores tasks","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"stevenantya"},"content":"     * @throws ElziException if IO Error occurred","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"stevenantya"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"stevenantya"},"content":"    public void saveFile(TaskList taskList) throws ElziException {","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"stevenantya"},"content":"        try {","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"stevenantya"},"content":"            FileWriter fileWriter \u003d new FileWriter(FILE_PATH.toString());","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"stevenantya"},"content":"            String textToWrite \u003d \"\";","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"stevenantya"},"content":"            for (int index \u003d 0; index \u003c taskList.getSize(); index++) {","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"stevenantya"},"content":"                Task task \u003d taskList.getIndex(index);","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"stevenantya"},"content":"                textToWrite \u003d textToWrite.concat(task.encode());","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"stevenantya"},"content":"                textToWrite +\u003d \"\\n\";","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"stevenantya"},"content":"            }","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"stevenantya"},"content":"            fileWriter.write(textToWrite);","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"stevenantya"},"content":"            fileWriter.close();","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"stevenantya"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"stevenantya"},"content":"            throw new ElziException(\"IO ERROR\");","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"stevenantya"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":53,"author":{"gitId":"stevenantya"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":54,"author":{"gitId":"stevenantya"},"content":"     * Create a new file in FILE_PATH directory","lastModifiedDate":"2023-03-20"},{"lineNumber":55,"author":{"gitId":"stevenantya"},"content":"     *    Credits","lastModifiedDate":"2023-03-20"},{"lineNumber":56,"author":{"gitId":"stevenantya"},"content":"     *    https://stackoverflow.com/questions/2833853/create-whole-path-automatically-when-writing-to-a-new-file","lastModifiedDate":"2023-03-20"},{"lineNumber":57,"author":{"gitId":"stevenantya"},"content":"     * @throws IOException if IO Error occurred","lastModifiedDate":"2023-03-20"},{"lineNumber":58,"author":{"gitId":"stevenantya"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":59,"author":{"gitId":"stevenantya"},"content":"    public void createFile() throws IOException {","lastModifiedDate":"2023-03-20"},{"lineNumber":60,"author":{"gitId":"stevenantya"},"content":"        Files.createDirectories(FILE_PATH.getParent());","lastModifiedDate":"2023-03-20"},{"lineNumber":61,"author":{"gitId":"stevenantya"},"content":"        Files.createFile(FILE_PATH);","lastModifiedDate":"2023-03-20"},{"lineNumber":62,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":63,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":64,"author":{"gitId":"stevenantya"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":65,"author":{"gitId":"stevenantya"},"content":"     * Read the file in FILE_PATH directory","lastModifiedDate":"2023-03-20"},{"lineNumber":66,"author":{"gitId":"stevenantya"},"content":"     * @return taskList the file taskList read","lastModifiedDate":"2023-03-20"},{"lineNumber":67,"author":{"gitId":"stevenantya"},"content":"     * @throws IOException if file reading error occurred (incorrect format, file creation error)","lastModifiedDate":"2023-03-20"},{"lineNumber":68,"author":{"gitId":"stevenantya"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":69,"author":{"gitId":"stevenantya"},"content":"    public TaskList readFile() throws ElziException {","lastModifiedDate":"2023-03-20"},{"lineNumber":70,"author":{"gitId":"stevenantya"},"content":"        TaskList taskList \u003d new TaskList(200);","lastModifiedDate":"2023-03-20"},{"lineNumber":71,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":72,"author":{"gitId":"stevenantya"},"content":"        try {","lastModifiedDate":"2023-03-20"},{"lineNumber":73,"author":{"gitId":"stevenantya"},"content":"            File file \u003d new File(FILE_PATH.toString());","lastModifiedDate":"2023-03-20"},{"lineNumber":74,"author":{"gitId":"stevenantya"},"content":"            Scanner s \u003d new Scanner(file);","lastModifiedDate":"2023-03-20"},{"lineNumber":75,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":76,"author":{"gitId":"stevenantya"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2023-03-20"},{"lineNumber":77,"author":{"gitId":"stevenantya"},"content":"                Task task;","lastModifiedDate":"2023-03-20"},{"lineNumber":78,"author":{"gitId":"stevenantya"},"content":"                String input \u003d s.nextLine();","lastModifiedDate":"2023-03-20"},{"lineNumber":79,"author":{"gitId":"stevenantya"},"content":"                //Format TYPE_MARK_DESCRIPTION_TO or BYE_FROM","lastModifiedDate":"2023-03-20"},{"lineNumber":80,"author":{"gitId":"stevenantya"},"content":"                String[] inputs \u003d input.split(\"_\");","lastModifiedDate":"2023-03-20"},{"lineNumber":81,"author":{"gitId":"stevenantya"},"content":"                String type \u003d inputs[0];","lastModifiedDate":"2023-03-20"},{"lineNumber":82,"author":{"gitId":"stevenantya"},"content":"                String mark \u003d inputs[1];","lastModifiedDate":"2023-03-20"},{"lineNumber":83,"author":{"gitId":"stevenantya"},"content":"                String description \u003d inputs[2];","lastModifiedDate":"2023-03-20"},{"lineNumber":84,"author":{"gitId":"stevenantya"},"content":"                switch (type) {","lastModifiedDate":"2023-03-20"},{"lineNumber":85,"author":{"gitId":"stevenantya"},"content":"                case \"T\":","lastModifiedDate":"2023-03-20"},{"lineNumber":86,"author":{"gitId":"stevenantya"},"content":"                    task \u003d new Todo(description);","lastModifiedDate":"2023-03-20"},{"lineNumber":87,"author":{"gitId":"stevenantya"},"content":"                    break;","lastModifiedDate":"2023-03-20"},{"lineNumber":88,"author":{"gitId":"stevenantya"},"content":"                case \"D\":","lastModifiedDate":"2023-03-20"},{"lineNumber":89,"author":{"gitId":"stevenantya"},"content":"                    task \u003d new Deadline(description, inputs[3]);","lastModifiedDate":"2023-03-20"},{"lineNumber":90,"author":{"gitId":"stevenantya"},"content":"                    break;","lastModifiedDate":"2023-03-20"},{"lineNumber":91,"author":{"gitId":"stevenantya"},"content":"                case \"E\":","lastModifiedDate":"2023-03-20"},{"lineNumber":92,"author":{"gitId":"stevenantya"},"content":"                    task \u003d new Event(description, inputs[3], inputs[4]);","lastModifiedDate":"2023-03-20"},{"lineNumber":93,"author":{"gitId":"stevenantya"},"content":"                    break;","lastModifiedDate":"2023-03-20"},{"lineNumber":94,"author":{"gitId":"stevenantya"},"content":"                default:","lastModifiedDate":"2023-03-20"},{"lineNumber":95,"author":{"gitId":"stevenantya"},"content":"                    throw new ElziException(\"Invalid file reading\");","lastModifiedDate":"2023-03-20"},{"lineNumber":96,"author":{"gitId":"stevenantya"},"content":"                }","lastModifiedDate":"2023-03-20"},{"lineNumber":97,"author":{"gitId":"stevenantya"},"content":"                if (mark.equals(\"1\")) {","lastModifiedDate":"2023-03-20"},{"lineNumber":98,"author":{"gitId":"stevenantya"},"content":"                    task.setAsDone();","lastModifiedDate":"2023-03-20"},{"lineNumber":99,"author":{"gitId":"stevenantya"},"content":"                } else {","lastModifiedDate":"2023-03-20"},{"lineNumber":100,"author":{"gitId":"stevenantya"},"content":"                    task.setAsNotDone();","lastModifiedDate":"2023-03-20"},{"lineNumber":101,"author":{"gitId":"stevenantya"},"content":"                }","lastModifiedDate":"2023-03-20"},{"lineNumber":102,"author":{"gitId":"stevenantya"},"content":"                taskList.addTask(task);","lastModifiedDate":"2023-03-20"},{"lineNumber":103,"author":{"gitId":"stevenantya"},"content":"            }","lastModifiedDate":"2023-03-20"},{"lineNumber":104,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":105,"author":{"gitId":"stevenantya"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-03-20"},{"lineNumber":106,"author":{"gitId":"stevenantya"},"content":"            try {","lastModifiedDate":"2023-03-20"},{"lineNumber":107,"author":{"gitId":"stevenantya"},"content":"                createFile();","lastModifiedDate":"2023-03-20"},{"lineNumber":108,"author":{"gitId":"stevenantya"},"content":"            } catch (IOException f) {","lastModifiedDate":"2023-03-20"},{"lineNumber":109,"author":{"gitId":"stevenantya"},"content":"                throw new ElziException(\"FILE CREATION ERROR\");","lastModifiedDate":"2023-03-20"},{"lineNumber":110,"author":{"gitId":"stevenantya"},"content":"            }","lastModifiedDate":"2023-03-20"},{"lineNumber":111,"author":{"gitId":"stevenantya"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":112,"author":{"gitId":"stevenantya"},"content":"        return taskList;","lastModifiedDate":"2023-03-20"},{"lineNumber":113,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":114,"author":{"gitId":"stevenantya"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"stevenantya":114}},{"path":"src/main/java/elzi/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stevenantya"},"content":"package elzi;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"stevenantya"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"stevenantya"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"stevenantya"},"content":"import elzi.task.Task;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"stevenantya"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"stevenantya"},"content":" * @author : Steven A. O. Waskito","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"stevenantya"},"content":" * Class TaskList stores the Task in ArrayList","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"stevenantya"},"content":" * Has methods to add, delete, mark, getSize, getIndex, list, and search","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"stevenantya"},"content":" **/","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"stevenantya"},"content":"public class TaskList {","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"stevenantya"},"content":"    protected ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"stevenantya"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"stevenantya"},"content":"     * Constructor for TaskList","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"stevenantya"},"content":"     * @param taskList to clone from another taskList (storage.txt)","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"stevenantya"},"content":"     * @param capacity new TaskList with capacity","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"stevenantya"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"stevenantya"},"content":"    public TaskList(TaskList taskList) {","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"stevenantya"},"content":"        this.taskList \u003d (ArrayList\u003cTask\u003e) taskList.taskList.clone();","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"stevenantya"},"content":"    public TaskList(int capacity) {","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"stevenantya"},"content":"        taskList \u003d new ArrayList\u003c\u003e(capacity + 10);","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"stevenantya"},"content":"    public TaskList() {","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"stevenantya"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"stevenantya"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"stevenantya"},"content":"     * Getting the size of the task list","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"stevenantya"},"content":"     * @return the size of the taskList","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"stevenantya"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"stevenantya"},"content":"    public int getSize() {","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"stevenantya"},"content":"        return taskList.size();","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"stevenantya"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"stevenantya"},"content":"     * Gets the task in the respective index","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"stevenantya"},"content":"     * @param index the index of the file to get","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"stevenantya"},"content":"     * @return Task the task in index","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"stevenantya"},"content":"     * @throws ElziException if index is invalid!","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"stevenantya"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"stevenantya"},"content":"    public Task getIndex(int index) throws ElziException {","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"stevenantya"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index \u003c taskList.size()) {","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"stevenantya"},"content":"            return taskList.get(index);","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"stevenantya"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"stevenantya"},"content":"        throw new ElziException(\"Please enter a valid index!\");","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"stevenantya"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-03-20"},{"lineNumber":53,"author":{"gitId":"stevenantya"},"content":"        taskList.add(task);","lastModifiedDate":"2023-03-20"},{"lineNumber":54,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":55,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":56,"author":{"gitId":"stevenantya"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":57,"author":{"gitId":"stevenantya"},"content":"     * Removes the task from taskList","lastModifiedDate":"2023-03-20"},{"lineNumber":58,"author":{"gitId":"stevenantya"},"content":"     * @param index the index of the file to remove","lastModifiedDate":"2023-03-20"},{"lineNumber":59,"author":{"gitId":"stevenantya"},"content":"     * @throws ElziException if index is invalid!","lastModifiedDate":"2023-03-20"},{"lineNumber":60,"author":{"gitId":"stevenantya"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":61,"author":{"gitId":"stevenantya"},"content":"    public void removeTask(int index) throws ElziException {","lastModifiedDate":"2023-03-20"},{"lineNumber":62,"author":{"gitId":"stevenantya"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index \u003c taskList.size()) {","lastModifiedDate":"2023-03-20"},{"lineNumber":63,"author":{"gitId":"stevenantya"},"content":"            taskList.remove(index);","lastModifiedDate":"2023-03-20"},{"lineNumber":64,"author":{"gitId":"stevenantya"},"content":"        } else {","lastModifiedDate":"2023-03-20"},{"lineNumber":65,"author":{"gitId":"stevenantya"},"content":"            throw new ElziException(\"Please enter a valid index!\");","lastModifiedDate":"2023-03-20"},{"lineNumber":66,"author":{"gitId":"stevenantya"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":67,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":68,"author":{"gitId":"stevenantya"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":69,"author":{"gitId":"stevenantya"},"content":"     * Set task as done","lastModifiedDate":"2023-03-20"},{"lineNumber":70,"author":{"gitId":"stevenantya"},"content":"     * @param index the index of the file to mark","lastModifiedDate":"2023-03-20"},{"lineNumber":71,"author":{"gitId":"stevenantya"},"content":"     * @throws ElziException if index is invalid!","lastModifiedDate":"2023-03-20"},{"lineNumber":72,"author":{"gitId":"stevenantya"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":73,"author":{"gitId":"stevenantya"},"content":"    public void setTaskAsDone(int index) throws ElziException {","lastModifiedDate":"2023-03-20"},{"lineNumber":74,"author":{"gitId":"stevenantya"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index \u003c taskList.size()) {","lastModifiedDate":"2023-03-20"},{"lineNumber":75,"author":{"gitId":"stevenantya"},"content":"            Task task \u003d taskList.get(index);","lastModifiedDate":"2023-03-20"},{"lineNumber":76,"author":{"gitId":"stevenantya"},"content":"            task.setAsDone();","lastModifiedDate":"2023-03-20"},{"lineNumber":77,"author":{"gitId":"stevenantya"},"content":"        } else {","lastModifiedDate":"2023-03-20"},{"lineNumber":78,"author":{"gitId":"stevenantya"},"content":"            throw new ElziException(\"Please enter a valid index!\");","lastModifiedDate":"2023-03-20"},{"lineNumber":79,"author":{"gitId":"stevenantya"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":80,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":81,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":82,"author":{"gitId":"stevenantya"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":83,"author":{"gitId":"stevenantya"},"content":"     * Set task as not done","lastModifiedDate":"2023-03-20"},{"lineNumber":84,"author":{"gitId":"stevenantya"},"content":"     * @param index the index of the file to unmark","lastModifiedDate":"2023-03-20"},{"lineNumber":85,"author":{"gitId":"stevenantya"},"content":"     * @throws ElziException if index is invalid!","lastModifiedDate":"2023-03-20"},{"lineNumber":86,"author":{"gitId":"stevenantya"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":87,"author":{"gitId":"stevenantya"},"content":"    public void setTaskAsNotDone(int index) throws ElziException {","lastModifiedDate":"2023-03-20"},{"lineNumber":88,"author":{"gitId":"stevenantya"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index \u003c taskList.size()) {","lastModifiedDate":"2023-03-20"},{"lineNumber":89,"author":{"gitId":"stevenantya"},"content":"            Task task \u003d taskList.get(index);","lastModifiedDate":"2023-03-20"},{"lineNumber":90,"author":{"gitId":"stevenantya"},"content":"            task.setAsNotDone();","lastModifiedDate":"2023-03-20"},{"lineNumber":91,"author":{"gitId":"stevenantya"},"content":"        } else {","lastModifiedDate":"2023-03-20"},{"lineNumber":92,"author":{"gitId":"stevenantya"},"content":"            throw new ElziException(\"Please enter a valid index!\");","lastModifiedDate":"2023-03-20"},{"lineNumber":93,"author":{"gitId":"stevenantya"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":94,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":95,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":96,"author":{"gitId":"stevenantya"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":97,"author":{"gitId":"stevenantya"},"content":"     * List the message with respect to its type","lastModifiedDate":"2023-03-20"},{"lineNumber":98,"author":{"gitId":"stevenantya"},"content":"     * @param type the type of list to print","lastModifiedDate":"2023-03-20"},{"lineNumber":99,"author":{"gitId":"stevenantya"},"content":"     * @return messages the message to list","lastModifiedDate":"2023-03-20"},{"lineNumber":100,"author":{"gitId":"stevenantya"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":101,"author":{"gitId":"stevenantya"},"content":"    public String listMessages(String type) {","lastModifiedDate":"2023-03-20"},{"lineNumber":102,"author":{"gitId":"stevenantya"},"content":"        String messages \u003d \"\";","lastModifiedDate":"2023-03-20"},{"lineNumber":103,"author":{"gitId":"stevenantya"},"content":"        int counter \u003d 1;","lastModifiedDate":"2023-03-20"},{"lineNumber":104,"author":{"gitId":"stevenantya"},"content":"        if (taskList.size() !\u003d 0) {","lastModifiedDate":"2023-03-20"},{"lineNumber":105,"author":{"gitId":"stevenantya"},"content":"            for (int index \u003d 0; index \u003c taskList.size(); index +\u003d 1) {","lastModifiedDate":"2023-03-20"},{"lineNumber":106,"author":{"gitId":"stevenantya"},"content":"                Task task \u003d taskList.get(index);","lastModifiedDate":"2023-03-20"},{"lineNumber":107,"author":{"gitId":"stevenantya"},"content":"                if (task.getType().equals(type) || type.equals(\"N\")) {","lastModifiedDate":"2023-03-20"},{"lineNumber":108,"author":{"gitId":"stevenantya"},"content":"                    messages \u003d messages.concat((counter) + \". \" + task.toString() + \"\\n\");","lastModifiedDate":"2023-03-20"},{"lineNumber":109,"author":{"gitId":"stevenantya"},"content":"                    counter +\u003d 1;","lastModifiedDate":"2023-03-20"},{"lineNumber":110,"author":{"gitId":"stevenantya"},"content":"                }","lastModifiedDate":"2023-03-20"},{"lineNumber":111,"author":{"gitId":"stevenantya"},"content":"            }","lastModifiedDate":"2023-03-20"},{"lineNumber":112,"author":{"gitId":"stevenantya"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":113,"author":{"gitId":"stevenantya"},"content":"        if (counter \u003d\u003d 1 || taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2023-03-20"},{"lineNumber":114,"author":{"gitId":"stevenantya"},"content":"            messages \u003d \"No items in list!\";","lastModifiedDate":"2023-03-20"},{"lineNumber":115,"author":{"gitId":"stevenantya"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":116,"author":{"gitId":"stevenantya"},"content":"        return messages;","lastModifiedDate":"2023-03-20"},{"lineNumber":117,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":118,"author":{"gitId":"stevenantya"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":119,"author":{"gitId":"stevenantya"},"content":"     * Finds the tasks that contains keyword","lastModifiedDate":"2023-03-20"},{"lineNumber":120,"author":{"gitId":"stevenantya"},"content":"     * @param keyword the keyword to find","lastModifiedDate":"2023-03-20"},{"lineNumber":121,"author":{"gitId":"stevenantya"},"content":"     * @return searchResult the TaskList of searchResult","lastModifiedDate":"2023-03-20"},{"lineNumber":122,"author":{"gitId":"stevenantya"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":123,"author":{"gitId":"stevenantya"},"content":"    public TaskList search(String keyword) {","lastModifiedDate":"2023-03-20"},{"lineNumber":124,"author":{"gitId":"stevenantya"},"content":"        TaskList searchResult \u003d new TaskList();","lastModifiedDate":"2023-03-20"},{"lineNumber":125,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":126,"author":{"gitId":"stevenantya"},"content":"        for (int index \u003d 0; index \u003c taskList.size(); index +\u003d 1) {","lastModifiedDate":"2023-03-20"},{"lineNumber":127,"author":{"gitId":"stevenantya"},"content":"            Task task \u003d taskList.get(index);","lastModifiedDate":"2023-03-20"},{"lineNumber":128,"author":{"gitId":"stevenantya"},"content":"            if (task.contains(keyword)) {","lastModifiedDate":"2023-03-20"},{"lineNumber":129,"author":{"gitId":"stevenantya"},"content":"                searchResult.addTask(task);","lastModifiedDate":"2023-03-20"},{"lineNumber":130,"author":{"gitId":"stevenantya"},"content":"            }","lastModifiedDate":"2023-03-20"},{"lineNumber":131,"author":{"gitId":"stevenantya"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":132,"author":{"gitId":"stevenantya"},"content":"        return searchResult;","lastModifiedDate":"2023-03-20"},{"lineNumber":133,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":134,"author":{"gitId":"stevenantya"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"stevenantya":134}},{"path":"src/main/java/elzi/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stevenantya"},"content":"package elzi;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"stevenantya"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"stevenantya"},"content":"import elzi.task.Task;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"stevenantya"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"stevenantya"},"content":" * @author : Steven A. O. Waskito","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"stevenantya"},"content":" * Class Ui handles the printing of message to the UI","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"stevenantya"},"content":" **/","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"stevenantya"},"content":"public class Ui {","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"stevenantya"},"content":"    private static final Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"stevenantya"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"stevenantya"},"content":"     * Print the welcome message when the program runs for the first time","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"stevenantya"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"stevenantya"},"content":"    public static void printWelcomeMessage() {","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"stevenantya"},"content":"        String welcomeMessage \u003d","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"stevenantya"},"content":"                \"____________________________________________________________\\n\"","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"stevenantya"},"content":"                + \" Hello! I\u0027m Elzi, your personal pet dog!\\n\"","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"stevenantya"},"content":"                + \" type help to see list of features!\\n\"","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"stevenantya"},"content":"                + \"____________________________________________________________\";","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"stevenantya"},"content":"        System.out.println(welcomeMessage);","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"stevenantya"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"stevenantya"},"content":"     * Print the help when command help is inquired","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"stevenantya"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"stevenantya"},"content":"    public static void printHelp() {","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"stevenantya"},"content":"        System.out.println(\"My features are as follows:\\n\"","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"stevenantya"},"content":"                + \"*BASIC*\\n\"","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"stevenantya"},"content":"                + \"1. todo [DESCRIPTION]\\n\"","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"stevenantya"},"content":"                + \"2. deadline [DESCRIPTION] /by [DEADLINE]\\n\"","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"stevenantya"},"content":"                + \"3. event [DESCRIPTION] /from [START] /to [END]\\n\"","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"stevenantya"},"content":"                + \"4. list\\n\"","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"stevenantya"},"content":"                + \"5. mark [INDEX]\\n\"","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"stevenantya"},"content":"                + \"6. unmark [INDEX]\\n\"","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"stevenantya"},"content":"                + \"7. find [KEYWORD]\\n\"","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"stevenantya"},"content":"                + \"*** ADVANCED : These are additional features! ***\\n\"","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"stevenantya"},"content":"                + \"8. list_todo\\n\"","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"stevenantya"},"content":"                + \"9. list_deadline\\n\"","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"stevenantya"},"content":"                + \"10. list_event\\n\"","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"stevenantya"},"content":"                + \"12. help\");","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"stevenantya"},"content":"        printLine();","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"stevenantya"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"stevenantya"},"content":"     * Print the getCommand message to know what to do next","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"stevenantya"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"stevenantya"},"content":"    public static String getCommand() {","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"stevenantya"},"content":"        System.out.println(\"What is my task, master?\");","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"stevenantya"},"content":"        return in.nextLine();","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"stevenantya"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":53,"author":{"gitId":"stevenantya"},"content":"     * Print the error message","lastModifiedDate":"2023-03-20"},{"lineNumber":54,"author":{"gitId":"stevenantya"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":55,"author":{"gitId":"stevenantya"},"content":"    public static void printErrorMessage(String errorMessage) {","lastModifiedDate":"2023-03-20"},{"lineNumber":56,"author":{"gitId":"stevenantya"},"content":"        System.out.println(\"Oops! I encountered this error! \" + errorMessage);","lastModifiedDate":"2023-03-20"},{"lineNumber":57,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":58,"author":{"gitId":"stevenantya"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":59,"author":{"gitId":"stevenantya"},"content":"     * Print the line","lastModifiedDate":"2023-03-20"},{"lineNumber":60,"author":{"gitId":"stevenantya"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":61,"author":{"gitId":"stevenantya"},"content":"    public static void printLine() {","lastModifiedDate":"2023-03-20"},{"lineNumber":62,"author":{"gitId":"stevenantya"},"content":"        System.out.println(\"-------------------------------------------------\");","lastModifiedDate":"2023-03-20"},{"lineNumber":63,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":64,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":65,"author":{"gitId":"stevenantya"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":66,"author":{"gitId":"stevenantya"},"content":"     * Print the goodbye message","lastModifiedDate":"2023-03-20"},{"lineNumber":67,"author":{"gitId":"stevenantya"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":68,"author":{"gitId":"stevenantya"},"content":"    public static void printByeMessage() {","lastModifiedDate":"2023-03-20"},{"lineNumber":69,"author":{"gitId":"stevenantya"},"content":"        System.out.println(\"Good bye! See you soon!\");","lastModifiedDate":"2023-03-20"},{"lineNumber":70,"author":{"gitId":"stevenantya"},"content":"        System.out.println(\"______________________******_____________________\");","lastModifiedDate":"2023-03-20"},{"lineNumber":71,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":72,"author":{"gitId":"stevenantya"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":73,"author":{"gitId":"stevenantya"},"content":"     * Print the added task","lastModifiedDate":"2023-03-20"},{"lineNumber":74,"author":{"gitId":"stevenantya"},"content":"     * @param task the task that has been added","lastModifiedDate":"2023-03-20"},{"lineNumber":75,"author":{"gitId":"stevenantya"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":76,"author":{"gitId":"stevenantya"},"content":"    public static void printAddTask(Task task) {","lastModifiedDate":"2023-03-20"},{"lineNumber":77,"author":{"gitId":"stevenantya"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\\n     \" + task.toString());","lastModifiedDate":"2023-03-20"},{"lineNumber":78,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":79,"author":{"gitId":"stevenantya"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":80,"author":{"gitId":"stevenantya"},"content":"     * Print the deleted task","lastModifiedDate":"2023-03-20"},{"lineNumber":81,"author":{"gitId":"stevenantya"},"content":"     * @param task the task that has been deleted","lastModifiedDate":"2023-03-20"},{"lineNumber":82,"author":{"gitId":"stevenantya"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":83,"author":{"gitId":"stevenantya"},"content":"    public static void printDeleteTask(Task task) {","lastModifiedDate":"2023-03-20"},{"lineNumber":84,"author":{"gitId":"stevenantya"},"content":"        System.out.println(\"I have removed this item\\n      \" + task.toString());","lastModifiedDate":"2023-03-20"},{"lineNumber":85,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":86,"author":{"gitId":"stevenantya"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":87,"author":{"gitId":"stevenantya"},"content":"     * Print the marked task","lastModifiedDate":"2023-03-20"},{"lineNumber":88,"author":{"gitId":"stevenantya"},"content":"     * @param task the task that has been marked","lastModifiedDate":"2023-03-20"},{"lineNumber":89,"author":{"gitId":"stevenantya"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":90,"author":{"gitId":"stevenantya"},"content":"    public static void printSetAsDone(Task task) {","lastModifiedDate":"2023-03-20"},{"lineNumber":91,"author":{"gitId":"stevenantya"},"content":"        System.out.println(\"I have marked this task as done\\n\" + task.toString());","lastModifiedDate":"2023-03-20"},{"lineNumber":92,"author":{"gitId":"stevenantya"},"content":"        printLine();","lastModifiedDate":"2023-03-20"},{"lineNumber":93,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":94,"author":{"gitId":"stevenantya"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":95,"author":{"gitId":"stevenantya"},"content":"     * Print the unmarked task","lastModifiedDate":"2023-03-20"},{"lineNumber":96,"author":{"gitId":"stevenantya"},"content":"     * @param task the task that has been unmarked","lastModifiedDate":"2023-03-20"},{"lineNumber":97,"author":{"gitId":"stevenantya"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":98,"author":{"gitId":"stevenantya"},"content":"    public static void printSetAsNotDone(Task task) {","lastModifiedDate":"2023-03-20"},{"lineNumber":99,"author":{"gitId":"stevenantya"},"content":"        System.out.println(\"I have unmarked this task\\n\" + task.toString());","lastModifiedDate":"2023-03-20"},{"lineNumber":100,"author":{"gitId":"stevenantya"},"content":"        printLine();","lastModifiedDate":"2023-03-20"},{"lineNumber":101,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":102,"author":{"gitId":"stevenantya"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":103,"author":{"gitId":"stevenantya"},"content":"     * Print the number of tasks in the list","lastModifiedDate":"2023-03-20"},{"lineNumber":104,"author":{"gitId":"stevenantya"},"content":"     * @param taskList the taskList that stores the tasks","lastModifiedDate":"2023-03-20"},{"lineNumber":105,"author":{"gitId":"stevenantya"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":106,"author":{"gitId":"stevenantya"},"content":"    public static void printTaskLeft(TaskList taskList) {","lastModifiedDate":"2023-03-20"},{"lineNumber":107,"author":{"gitId":"stevenantya"},"content":"        System.out.println(\"Now you have \" + taskList.getSize() + \" task in the list\");","lastModifiedDate":"2023-03-20"},{"lineNumber":108,"author":{"gitId":"stevenantya"},"content":"        printLine();","lastModifiedDate":"2023-03-20"},{"lineNumber":109,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":110,"author":{"gitId":"stevenantya"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":111,"author":{"gitId":"stevenantya"},"content":"     * Print the list with respect to its type","lastModifiedDate":"2023-03-20"},{"lineNumber":112,"author":{"gitId":"stevenantya"},"content":"     * @param taskList the taskList that stores the tasks","lastModifiedDate":"2023-03-20"},{"lineNumber":113,"author":{"gitId":"stevenantya"},"content":"     * @param type the type of list to print","lastModifiedDate":"2023-03-20"},{"lineNumber":114,"author":{"gitId":"stevenantya"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":115,"author":{"gitId":"stevenantya"},"content":"    public static void printList(TaskList taskList, String type) {","lastModifiedDate":"2023-03-20"},{"lineNumber":116,"author":{"gitId":"stevenantya"},"content":"        String taskType \u003d type.equals(\"N\") ? \"tasks\" : type.equals(\"T\")","lastModifiedDate":"2023-03-20"},{"lineNumber":117,"author":{"gitId":"stevenantya"},"content":"                ? \"todo tasks\" : type.equals(\"D\") ? \"deadlines\" : \"events\";","lastModifiedDate":"2023-03-20"},{"lineNumber":118,"author":{"gitId":"stevenantya"},"content":"        System.out.println(\"Your current \" + taskType + \" are as follows:\");","lastModifiedDate":"2023-03-20"},{"lineNumber":119,"author":{"gitId":"stevenantya"},"content":"        String list \u003d taskList.listMessages(type).stripTrailing();","lastModifiedDate":"2023-03-20"},{"lineNumber":120,"author":{"gitId":"stevenantya"},"content":"        System.out.println(list);","lastModifiedDate":"2023-03-20"},{"lineNumber":121,"author":{"gitId":"stevenantya"},"content":"        printLine();","lastModifiedDate":"2023-03-20"},{"lineNumber":122,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":123,"author":{"gitId":"stevenantya"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"stevenantya":123}},{"path":"src/main/java/elzi/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stevenantya"},"content":"package elzi.command;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"stevenantya"},"content":"import elzi.TaskList;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"stevenantya"},"content":"import elzi.Ui;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"stevenantya"},"content":"import elzi.task.Task;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"stevenantya"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"stevenantya"},"content":" * @author : Steven A. O. Waskito","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"stevenantya"},"content":" * Class to add command todo, deadline, event","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"stevenantya"},"content":" **/","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"stevenantya"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"stevenantya"},"content":"    private Task task;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"stevenantya"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"stevenantya"},"content":"     * Sets the task to add","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"stevenantya"},"content":"     * @param task task to be added","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"stevenantya"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"stevenantya"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"stevenantya"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"stevenantya"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"stevenantya"},"content":"     * Adds the task to taskList","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"stevenantya"},"content":"     * @param taskList taskList ArrayList that stores tasks","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"stevenantya"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"stevenantya"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"stevenantya"},"content":"    public boolean execute(TaskList taskList) {","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"stevenantya"},"content":"        taskList.addTask(task);","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"stevenantya"},"content":"        Ui.printAddTask(task);","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"stevenantya"},"content":"        Ui.printTaskLeft(taskList);","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"stevenantya"},"content":"        return false;","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"stevenantya"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"stevenantya":33}},{"path":"src/main/java/elzi/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stevenantya"},"content":"package elzi.command;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"stevenantya"},"content":"import elzi.ElziException;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"stevenantya"},"content":"import elzi.TaskList;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"stevenantya"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"stevenantya"},"content":" * @author : Steven A. O. Waskito","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"stevenantya"},"content":" * abstract class that will be inherited by","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"stevenantya"},"content":" * AddCommand, DeleteCommand, ExitCommand, FindCommand, ListCommand, SetAsDoneCommand","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"stevenantya"},"content":" **/","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"stevenantya"},"content":"public abstract class Command {","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"stevenantya"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"stevenantya"},"content":"     * Method to execute commands","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"stevenantya"},"content":"     * @param taskList taskList ArrayList that stores tasks","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"stevenantya"},"content":"     * @throws ElziException for unknown commands","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"stevenantya"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"stevenantya"},"content":"    public boolean execute(TaskList taskList) throws ElziException {","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"stevenantya"},"content":"        throw new ElziException(\"Unknown Command\");","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"stevenantya"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"stevenantya":21}},{"path":"src/main/java/elzi/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stevenantya"},"content":"package elzi.command;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"stevenantya"},"content":"import elzi.ElziException;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"stevenantya"},"content":"import elzi.TaskList;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"stevenantya"},"content":"import elzi.Ui;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"stevenantya"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"stevenantya"},"content":" * @author : Steven A. O. Waskito","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"stevenantya"},"content":" * Class to delete todo, deadline, event tasks","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"stevenantya"},"content":" **/","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"stevenantya"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"stevenantya"},"content":"    private int toDeleteIndex;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"stevenantya"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"stevenantya"},"content":"     * Sets the index to delete","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"stevenantya"},"content":"     * @param toDeleteIndex index to delete","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"stevenantya"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"stevenantya"},"content":"    public DeleteCommand(int toDeleteIndex) {","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"stevenantya"},"content":"        this.toDeleteIndex \u003d toDeleteIndex;","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"stevenantya"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"stevenantya"},"content":"     * Deletes the task in the taskList","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"stevenantya"},"content":"     * @param taskList taskList ArrayList that stores tasks","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"stevenantya"},"content":"     * @throws ElziException if index is out of bounds","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"stevenantya"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"stevenantya"},"content":"    public boolean execute(TaskList taskList) throws ElziException {","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"stevenantya"},"content":"        Ui.printDeleteTask(taskList.getIndex(toDeleteIndex));","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"stevenantya"},"content":"        taskList.removeTask(toDeleteIndex);","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"stevenantya"},"content":"        Ui.printTaskLeft(taskList);","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"stevenantya"},"content":"        return false;","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"stevenantya"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"stevenantya":33}},{"path":"src/main/java/elzi/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stevenantya"},"content":"package elzi.command;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"stevenantya"},"content":"import elzi.ElziException;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"stevenantya"},"content":"import elzi.TaskList;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"stevenantya"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"stevenantya"},"content":" * @author : Steven A. O. Waskito","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"stevenantya"},"content":" * Class to tell the program to exit","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"stevenantya"},"content":" **/","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"stevenantya"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"stevenantya"},"content":"    public ExitCommand() {","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"stevenantya"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"stevenantya"},"content":"     * Exits the program by returning true to Elzi","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"stevenantya"},"content":"     * @param taskList taskList ArrayList that stores tasks","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"stevenantya"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"stevenantya"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"stevenantya"},"content":"    public boolean execute(TaskList taskList) {","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"stevenantya"},"content":"        return true;","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"stevenantya"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"stevenantya":22}},{"path":"src/main/java/elzi/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stevenantya"},"content":"package elzi.command;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"stevenantya"},"content":"import elzi.ElziException;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"stevenantya"},"content":"import elzi.TaskList;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"stevenantya"},"content":"import elzi.Ui;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"stevenantya"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"stevenantya"},"content":" * @author : Steven A. O. Waskito","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"stevenantya"},"content":" * Class to find keyword in the list of tasks","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"stevenantya"},"content":" **/","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"stevenantya"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"stevenantya"},"content":"    private String keyword;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"stevenantya"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"stevenantya"},"content":"     * Sets the keyword","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"stevenantya"},"content":"     * @param keyword The keyword to search for","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"stevenantya"},"content":"     * @throws ElziException if keyword is blank","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"stevenantya"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"stevenantya"},"content":"    public FindCommand(String keyword) throws ElziException {","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"stevenantya"},"content":"        if (keyword.isBlank()) {","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"stevenantya"},"content":"            throw new ElziException(\"keyword can\u0027t be empty\");","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"stevenantya"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"stevenantya"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"stevenantya"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"stevenantya"},"content":"     * Find tasks that contain keywords in the taskList","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"stevenantya"},"content":"     * @param taskList taskList ArrayList that stores tasks","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"stevenantya"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"stevenantya"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"stevenantya"},"content":"    public boolean execute(TaskList taskList) {","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"stevenantya"},"content":"        TaskList searchList \u003d taskList.search(keyword);","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"stevenantya"},"content":"        Ui.printList(searchList, \"N\");","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"stevenantya"},"content":"        return false;","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"stevenantya"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"stevenantya":36}},{"path":"src/main/java/elzi/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stevenantya"},"content":"package elzi.command;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"stevenantya"},"content":"import elzi.ElziException;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"stevenantya"},"content":"import elzi.TaskList;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"stevenantya"},"content":"import elzi.Ui;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"stevenantya"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"stevenantya"},"content":" * @author : Steven A. O. Waskito","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"stevenantya"},"content":" * Class to list tasks or event or deadline or todo","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"stevenantya"},"content":" **/","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"stevenantya"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"stevenantya"},"content":"    private String type;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"stevenantya"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"stevenantya"},"content":"     * Sets list type","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"stevenantya"},"content":"     * @param type type of list (normal, todo, deadline, event)","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"stevenantya"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"stevenantya"},"content":"    public ListCommand(String type) {","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"stevenantya"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"stevenantya"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"stevenantya"},"content":"     * List the type of list","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"stevenantya"},"content":"     * @param taskList taskList ArrayList that stores tasks","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"stevenantya"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"stevenantya"},"content":"    public boolean execute(TaskList taskList) {","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"stevenantya"},"content":"        Ui.printList(taskList, type);","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"stevenantya"},"content":"        return false;","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"stevenantya"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"stevenantya":30}},{"path":"src/main/java/elzi/command/SetAsDoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stevenantya"},"content":"package elzi.command;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"stevenantya"},"content":"import elzi.ElziException;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"stevenantya"},"content":"import elzi.TaskList;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"stevenantya"},"content":"import elzi.Ui;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"stevenantya"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"stevenantya"},"content":" * @author : Steven A. O. Waskito","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"stevenantya"},"content":" * Class to mark or unmark specific task","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"stevenantya"},"content":" **/","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"stevenantya"},"content":"public class SetAsDoneCommand extends Command {","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"stevenantya"},"content":"    private boolean isDone;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"stevenantya"},"content":"    private int index;","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"stevenantya"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"stevenantya"},"content":"     * Set the index and mark or unmark command","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"stevenantya"},"content":"     * @param index index of the task in taskList","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"stevenantya"},"content":"     * @param isDone mark or unmark command","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"stevenantya"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"stevenantya"},"content":"    public SetAsDoneCommand(int index, boolean isDone) {","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"stevenantya"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"stevenantya"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"stevenantya"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"stevenantya"},"content":"     * Mark or unmark the specific task","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"stevenantya"},"content":"     * @param taskList taskList ArrayList that stores tasks","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"stevenantya"},"content":"     * @throws ElziException if index is out of bounds or not an integer","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"stevenantya"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"stevenantya"},"content":"    public boolean execute(TaskList taskList) throws ElziException {","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"stevenantya"},"content":"        if (isDone) {","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"stevenantya"},"content":"            taskList.setTaskAsDone(index);","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"stevenantya"},"content":"            Ui.printSetAsDone(taskList.getIndex(index));","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"stevenantya"},"content":"        } else {","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"stevenantya"},"content":"            taskList.setTaskAsNotDone(index);","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"stevenantya"},"content":"            Ui.printSetAsNotDone(taskList.getIndex(index));","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"stevenantya"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"stevenantya"},"content":"        Ui.printList(taskList, \"N\");","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"stevenantya"},"content":"        return false;","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"stevenantya"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"stevenantya":40}},{"path":"src/main/java/elzi/exceptions/EmptyInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stevenantya"},"content":"package elzi.exceptions;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"stevenantya"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"stevenantya"},"content":" * @author : Steven A. O. Waskito","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"stevenantya"},"content":" * Handles Empty Input Exception","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"stevenantya"},"content":" **/","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"stevenantya"},"content":"public class EmptyInputException extends Exception {","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"stevenantya"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"stevenantya":9}},{"path":"src/main/java/elzi/exceptions/IllegalInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stevenantya"},"content":"package elzi.exceptions;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"stevenantya"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"stevenantya"},"content":" * @author : Steven A. O. Waskito","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"stevenantya"},"content":" * Handles Illegal Input Exception","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"stevenantya"},"content":" **/","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"stevenantya"},"content":"public class IllegalInputException extends Exception{","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"stevenantya"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"stevenantya":9}},{"path":"src/main/java/elzi/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stevenantya"},"content":"package elzi.task;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"stevenantya"},"content":"import elzi.ElziException;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"stevenantya"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"stevenantya"},"content":" * @author : Steven A. O. Waskito","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"stevenantya"},"content":" * Class deadline that inherits task and has attributes","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"stevenantya"},"content":" * Description, isDone, and By","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"stevenantya"},"content":" **/","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"stevenantya"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"stevenantya"},"content":"    protected String by;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"stevenantya"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"stevenantya"},"content":"     * Constructor for deadline object with attribute: by","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"stevenantya"},"content":"     * @param description deadline description","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"stevenantya"},"content":"     * @param by deadline by attribute","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"stevenantya"},"content":"     * @throws ElziException if by is blank","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"stevenantya"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"stevenantya"},"content":"    public Deadline(String description, String by) throws ElziException {","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"stevenantya"},"content":"        super(description);","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"stevenantya"},"content":"        if (by.isBlank()) {","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"stevenantya"},"content":"            throw new ElziException(\"Missing /by in deadline\");","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"stevenantya"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"stevenantya"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"stevenantya"},"content":"    public String getStatus() {","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"stevenantya"},"content":"        return (\"[D][\" + (isDone ? \"X\" : \" \") + \"]\");","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"stevenantya"},"content":"    public String getBy() {","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"stevenantya"},"content":"        return (\"by: \" + by);","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"stevenantya"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"stevenantya"},"content":"    public String toString() {","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"stevenantya"},"content":"        return this.getStatus() + \" \" + description + \" (\" + getBy() + \")\";","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"stevenantya"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"stevenantya"},"content":"     * Method encoding the given task to save","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"stevenantya"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"stevenantya"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"stevenantya"},"content":"    public String encode() {","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"stevenantya"},"content":"        return (\"D_\" + (isDone ? \"1_\" : \"0_\")","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"stevenantya"},"content":"                + description + \"_\"","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"stevenantya"},"content":"                + by);","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"stevenantya"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"stevenantya"},"content":"    public String getType() {","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"stevenantya"},"content":"        return \"D\";","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"stevenantya"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"stevenantya":50}},{"path":"src/main/java/elzi/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stevenantya"},"content":"package elzi.task;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"stevenantya"},"content":"import elzi.ElziException;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"stevenantya"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"stevenantya"},"content":" * @author : Steven A. O. Waskito","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"stevenantya"},"content":" * Class Event that inherits Task and has attributes","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"stevenantya"},"content":" * Description, isDone, From, To","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"stevenantya"},"content":" **/","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"stevenantya"},"content":"public class Event extends Task {","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"stevenantya"},"content":"    protected String from;","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"stevenantya"},"content":"    protected String to;","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"stevenantya"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"stevenantya"},"content":"     * Constructor for event object with attribute: from, to","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"stevenantya"},"content":"     * @param description event description","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"stevenantya"},"content":"     * @param from event from attribute","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"stevenantya"},"content":"     * @param to event to attribute","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"stevenantya"},"content":"     * @throws ElziException if from or to is blank","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"stevenantya"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"stevenantya"},"content":"    public Event(String description, String from, String to) throws ElziException {","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"stevenantya"},"content":"        super(description);","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"stevenantya"},"content":"        if (from.isBlank() || to.isBlank()) {","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"stevenantya"},"content":"            throw new ElziException(\"Event needs to have both /from and /to flags\");","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"stevenantya"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"stevenantya"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"stevenantya"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"stevenantya"},"content":"    public String getStatus() {","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"stevenantya"},"content":"        return (\"[E][\" + (isDone ? \"X\" : \" \") + \"]\");","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"stevenantya"},"content":"    public String getFrom() {","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"stevenantya"},"content":"        return (\"from: \" + from);","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"stevenantya"},"content":"    public String getTo() {","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"stevenantya"},"content":"        return (\"to: \" + to);","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"stevenantya"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"stevenantya"},"content":"    public String toString() {","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"stevenantya"},"content":"        return this.getStatus() + \" \" + description + \" (\" + getFrom() + \" \" + getTo() + \")\";","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"stevenantya"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"stevenantya"},"content":"     * Method encoding the given task to save","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"stevenantya"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"stevenantya"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"stevenantya"},"content":"    public String encode() {","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"stevenantya"},"content":"        return (\"E_\" + (isDone ? \"1_\" : \"0_\")","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"stevenantya"},"content":"                + description + \"_\"","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"stevenantya"},"content":"                + from + \"_\"","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"stevenantya"},"content":"                + to);","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":53,"author":{"gitId":"stevenantya"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":54,"author":{"gitId":"stevenantya"},"content":"    public String getType() {","lastModifiedDate":"2023-03-20"},{"lineNumber":55,"author":{"gitId":"stevenantya"},"content":"        return \"E\";","lastModifiedDate":"2023-03-20"},{"lineNumber":56,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":57,"author":{"gitId":"stevenantya"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"stevenantya":57}},{"path":"src/main/java/elzi/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stevenantya"},"content":"package elzi.task;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"stevenantya"},"content":"import elzi.ElziException;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"stevenantya"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"stevenantya"},"content":" * @author : Steven A. O. Waskito","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"stevenantya"},"content":" * Task parent class that has attribute","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"stevenantya"},"content":" * Description, isDone","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"stevenantya"},"content":" **/","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"stevenantya"},"content":"public class Task {","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"stevenantya"},"content":"    protected String description;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"stevenantya"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"stevenantya"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"stevenantya"},"content":"     * Constructor for task object with attribute: description, isDone","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"stevenantya"},"content":"     * @param description task description","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"stevenantya"},"content":"     * @throws ElziException if description is empty","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"stevenantya"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"stevenantya"},"content":"    public Task(String description) throws ElziException {","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"stevenantya"},"content":"        if (description.isBlank()) {","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"stevenantya"},"content":"            throw new ElziException(\"Description can\u0027t be empty!\");","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"stevenantya"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"stevenantya"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"stevenantya"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"stevenantya"},"content":"    public String getType() {","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"stevenantya"},"content":"        return \"\";","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"stevenantya"},"content":"    public void setAsDone() {","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"stevenantya"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"stevenantya"},"content":"    public void setAsNotDone() {","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"stevenantya"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"stevenantya"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"stevenantya"},"content":"     * Method return true if task contains keyword","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"stevenantya"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"stevenantya"},"content":"    public boolean contains(String keyword) {","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"stevenantya"},"content":"        if (description.toLowerCase().contains(keyword.toLowerCase())) {","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"stevenantya"},"content":"            return true;","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"stevenantya"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"stevenantya"},"content":"        return false;","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"stevenantya"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"stevenantya"},"content":"     * Method encoding the given task to save","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"stevenantya"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"stevenantya"},"content":"    public String encode() {","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"stevenantya"},"content":"        return \"\";","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"stevenantya"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"stevenantya":50}},{"path":"src/main/java/elzi/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stevenantya"},"content":"package elzi.task;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"stevenantya"},"content":"import elzi.ElziException;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"stevenantya"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"stevenantya"},"content":" * @author : Steven A. O. Waskito","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"stevenantya"},"content":" * Class Todo that inherits Task and has attributes","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"stevenantya"},"content":" * Description, isDone","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"stevenantya"},"content":" **/","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"stevenantya"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"stevenantya"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"stevenantya"},"content":"     * Constructor for todo object","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"stevenantya"},"content":"     * @param description todo description","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"stevenantya"},"content":"     * @throws ElziException if description is empty","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"stevenantya"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"stevenantya"},"content":"    public Todo(String description) throws ElziException {","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"stevenantya"},"content":"        super(description);","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"stevenantya"},"content":"    public String getStatus() {","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"stevenantya"},"content":"        return (\"[T][\" + (isDone ? \"X\" : \" \") + \"]\");","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"stevenantya"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"stevenantya"},"content":"    public String toString() {","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"stevenantya"},"content":"        return this.getStatus() + \" \" + description;","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"stevenantya"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"stevenantya"},"content":"     * Method encoding the given task to save","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"stevenantya"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"stevenantya"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"stevenantya"},"content":"    public String encode() {","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"stevenantya"},"content":"        return (\"T_\" + (isDone ? \"1_\" : \"0_\")","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"stevenantya"},"content":"                + description);","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"stevenantya"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"stevenantya"},"content":"    public String getType() {","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"stevenantya"},"content":"        return \"T\";","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"stevenantya"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"stevenantya":40}}]
