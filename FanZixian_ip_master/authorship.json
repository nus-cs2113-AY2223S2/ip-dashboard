[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"3. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"FanZixian"},"content":"   ","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"FanZixian"},"content":"## Run the jar file","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"FanZixian"},"content":"Put the jar file in some directory in your computer, and use java -jar \"your jar file path\" to run it in your terminal","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"FanZixian"},"content":"## User\u0027s input accepted:","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"FanZixian"},"content":"1. If you want to add task, you can type:","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"FanZixian"},"content":"   - todo","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"FanZixian"},"content":"   - deadline","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"FanZixian"},"content":"   - event\u003cbr\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"FanZixian"},"content":"And your task status will be shown as T, D, E respectively.\u003cbr\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"FanZixian"},"content":"e.g., event do homework /by no idea :wuwu: [E][ ] do homework (by: no idea :wuwu)\u003cbr\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"FanZixian"},"content":"If you want to add time to your task, you can do so:\u003cbr\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"FanZixian"},"content":"e.g., deadline return book /by 2/12/2019 1800: [D][ ] return book (by: Dec 2 2019 18:00)\u003cbr\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"FanZixian"},"content":"or deadline return book /by 2/12/2019: [D][ ] return book (by: Dec 2 2019)\u003cbr\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"FanZixian"},"content":"2. If you want to list all the task you have added before, you can type:","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"FanZixian"},"content":"   - list","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"FanZixian"},"content":"Your tasks will be displayed in the chronological order in which you add them","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"FanZixian"},"content":"3. If you want to delete one task based on its position, you can type:","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"FanZixian"},"content":"   - delete \"The task position\"","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"FanZixian"},"content":"Then this task will be deleted, and the system will tell you which one is deleted","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"FanZixian"},"content":"4. If you want to mark one of your tasks, or you want to remove the mark of one of your tasks, you can type:","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"FanZixian"},"content":"   - mark \"The task position\"","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"FanZixian"},"content":"   - unmark \"The task position\"","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"FanZixian"},"content":"5. If you want to find the task position that contain some specific information, you can type:","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"FanZixian"},"content":"   - find \"The information you want to find\"","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"FanZixian"},"content":"e.g., \u003cbr\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":56,"author":{"gitId":"FanZixian"},"content":"Your task list have tasks: \u003cbr\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"FanZixian"},"content":"1. [D][ ] return book (by: Dec 2 2019)\u003cbr\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":58,"author":{"gitId":"FanZixian"},"content":"2. [E][X] dinner\u003cbr\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":59,"author":{"gitId":"FanZixian"},"content":"If you type \"- find book\"\u003cbr\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":60,"author":{"gitId":"FanZixian"},"content":"It will print \"1. [D][ ] return book (by: Dec 2 2019)\"\u003cbr\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":61,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":62,"author":{"gitId":"FanZixian"},"content":"6. If you want to terminate your program, you can type:","lastModifiedDate":"2023-03-01"},{"lineNumber":63,"author":{"gitId":"FanZixian"},"content":"   - bye","lastModifiedDate":"2023-03-01"},{"lineNumber":64,"author":{"gitId":"FanZixian"},"content":"And you tasks will be stored in a txt file in your computer.","lastModifiedDate":"2023-03-01"},{"lineNumber":65,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":66,"author":{"gitId":"FanZixian"},"content":"7. If you type some illegal command that the system cannot understand, it will respond to you, and require you to type in another legal command.","lastModifiedDate":"2023-03-01"},{"lineNumber":67,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":68,"author":{"gitId":"FanZixian"},"content":"## Enjoy Duke!","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"FanZixian":44,"-":24}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"FanZixian"},"content":"[T][X] return book","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"FanZixian"},"content":"[T][X] add class","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"FanZixian"},"content":"[T][ ] return you","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"FanZixian"},"content":"[D][X] yeah","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"FanZixian"},"content":"[T][ ] tan","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"FanZixian"},"content":"[T][ ] tanzimingchidabian","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"FanZixian"},"content":"[T][X] return book","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"FanZixian"},"content":"[T][ ] yahalo","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"FanZixian"},"content":"[T][X] yeah","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"FanZixian"},"content":"[E][ ] (4pm:)","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"FanZixian"},"content":"[D][ ] return book (by: Dec 22 2019 18:00)","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"FanZixian"},"content":"[D][X] return book (by: Dec 12 2019)","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"FanZixian"},"content":"[D][ ] return book (by: Dec 2 2019 18:00)","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"FanZixian"},"content":"[T][ ] yeah","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"FanZixian"},"content":"[T][ ] hi","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"FanZixian"},"content":"[D][ ] return book (by: Dec 2 2019 18:00)","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"FanZixian":16}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"FanZixian"},"content":"### Feature-Greet","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"FanZixian"},"content":"Once you start the program, it will greet you at first.","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Description of the feature.","lastModifiedDate":"2021-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"FanZixian"},"content":"## Run the jar file","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"FanZixian"},"content":"Put the jar file in some directory in your computer, and use java -jar \"your jar file path\" to run it in your terminal","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"FanZixian"},"content":"1. If you want to add task, you can type:","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"FanZixian"},"content":"   - todo","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"FanZixian"},"content":"   - deadline","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"FanZixian"},"content":"   - event\u003cbr\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"FanZixian"},"content":"And your task status will be shown as T, D, E respectively.\u003cbr\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"FanZixian"},"content":"e.g., event do homework /by no idea :wuwu: [E][ ] do homework (by: no idea :wuwu)\u003cbr\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"FanZixian"},"content":"If you want to add time to your task, you can do so:\u003cbr\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"FanZixian"},"content":"e.g., deadline return book /by 2/12/2019 1800: [D][ ] return book (by: Dec 2 2019 18:00)\u003cbr\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"FanZixian"},"content":"or deadline return book /by 2/12/2019: [D][ ] return book (by: Dec 2 2019)\u003cbr\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"FanZixian"},"content":"2. If you want to list all the task you have added before, you can type:","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"FanZixian"},"content":"   - list","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"FanZixian"},"content":"Your tasks will be displayed in the chronological order in which you add them","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"FanZixian"},"content":"3. If you want to delete one task based on its position, you can type:","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"FanZixian"},"content":"   - delete \"The task position\"","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"FanZixian"},"content":"Then this task will be deleted, and the system will tell you which one is deleted","lastModifiedDate":"2023-03-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":34,"author":{"gitId":"FanZixian"},"content":"4. If you want to mark one of your tasks, or you want to remove the mark of one of your tasks, you can type:","lastModifiedDate":"2023-03-02"},{"lineNumber":35,"author":{"gitId":"FanZixian"},"content":"   - mark \"The task position\"","lastModifiedDate":"2023-03-02"},{"lineNumber":36,"author":{"gitId":"FanZixian"},"content":"   - unmark \"The task position\"","lastModifiedDate":"2023-03-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":38,"author":{"gitId":"FanZixian"},"content":"5. If you want to find the task position that contain some specific information, you can type:","lastModifiedDate":"2023-03-02"},{"lineNumber":39,"author":{"gitId":"FanZixian"},"content":"   - find \"The information you want to find\"","lastModifiedDate":"2023-03-02"},{"lineNumber":40,"author":{"gitId":"FanZixian"},"content":"e.g., \u003cbr\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":41,"author":{"gitId":"FanZixian"},"content":"Your task list have tasks: \u003cbr\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":42,"author":{"gitId":"FanZixian"},"content":"1. [D][ ] return book (by: Dec 2 2019)\u003cbr\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":43,"author":{"gitId":"FanZixian"},"content":"2. [E][X] dinner\u003cbr\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":44,"author":{"gitId":"FanZixian"},"content":"If you type \"- find book\"\u003cbr\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":45,"author":{"gitId":"FanZixian"},"content":"It will print \"1. [D][ ] return book (by: Dec 2 2019)\"\u003cbr\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":47,"author":{"gitId":"FanZixian"},"content":"6. If you want to terminate your program, you can type:","lastModifiedDate":"2023-03-02"},{"lineNumber":48,"author":{"gitId":"FanZixian"},"content":"   - bye","lastModifiedDate":"2023-03-02"},{"lineNumber":49,"author":{"gitId":"FanZixian"},"content":"And you tasks will be stored in a txt file in your computer.","lastModifiedDate":"2023-03-02"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":51,"author":{"gitId":"FanZixian"},"content":"7. If you type some illegal command that the system cannot understand, it will respond to you, and require you to type in another legal command.","lastModifiedDate":"2023-03-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":53,"author":{"gitId":"FanZixian"},"content":"## Enjoy Duke!","lastModifiedDate":"2023-03-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"FanZixian":38,"-":16}},{"path":"src/main/java/AllCommands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FanZixian"},"content":"package AllCommands;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"FanZixian"},"content":"import BasisSupport.Spliterator;","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"FanZixian"},"content":"import BasisSupport.Status;","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"FanZixian"},"content":"import BasisSupport.TransformString;","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"FanZixian"},"content":"import Support.Task;","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"FanZixian"},"content":"import Support.TaskList;","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"FanZixian"},"content":"// Related method (Totally three methods: todo, deadline, event)","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"FanZixian"},"content":"public class AddCommand extends Commands {","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"FanZixian"},"content":"    // The line String is to accept the input command and description from the user","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"FanZixian"},"content":"    // The same for all the other command classes","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"FanZixian"},"content":"    public static String line;","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"FanZixian"},"content":"    public AddCommand(String line) {","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"FanZixian"},"content":"        this.line \u003d line;","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"FanZixian"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"FanZixian"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"FanZixian"},"content":"     * This method is to deal with three types of command that the user want to add to their task list","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"FanZixian"},"content":"     * todo: T","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"FanZixian"},"content":"     * deadline: D","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"FanZixian"},"content":"     * event: E","lastModifiedDate":"2023-02-27"},{"lineNumber":24,"author":{"gitId":"FanZixian"},"content":"     * After doing so, the task list size will increase by 1","lastModifiedDate":"2023-02-27"},{"lineNumber":25,"author":{"gitId":"FanZixian"},"content":"     * Necessary feedback from the system is done by the println functions.","lastModifiedDate":"2023-02-27"},{"lineNumber":26,"author":{"gitId":"FanZixian"},"content":"     *","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"FanZixian"},"content":"     * @param tasks All the tasks we have in the storage","lastModifiedDate":"2023-02-27"},{"lineNumber":28,"author":{"gitId":"FanZixian"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":29,"author":{"gitId":"FanZixian"},"content":"    public static void addCommandMethod(TaskList tasks) {","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"FanZixian"},"content":"        Spliterator.printSpliterator();","lastModifiedDate":"2023-02-27"},{"lineNumber":31,"author":{"gitId":"FanZixian"},"content":"        System.out.println(\"Got it. I\u0027ve added: this task:\");","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"FanZixian"},"content":"        int indexOfSpace \u003d line.indexOf(\" \");","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"FanZixian"},"content":"        String firstLetter \u003d line.substring(0, indexOfSpace);","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"FanZixian"},"content":"        // Information is the content without the first letter","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"FanZixian"},"content":"        String information \u003d line.substring(indexOfSpace + 1);","lastModifiedDate":"2023-02-11"},{"lineNumber":37,"author":{"gitId":"FanZixian"},"content":"        information \u003d TransformString.transformString(information);","lastModifiedDate":"2023-02-27"},{"lineNumber":38,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":39,"author":{"gitId":"FanZixian"},"content":"        // Obtain the target taskStatus from the command","lastModifiedDate":"2023-02-11"},{"lineNumber":40,"author":{"gitId":"FanZixian"},"content":"        Status taskStatus;","lastModifiedDate":"2023-02-11"},{"lineNumber":41,"author":{"gitId":"FanZixian"},"content":"        switch (firstLetter) {","lastModifiedDate":"2023-02-11"},{"lineNumber":42,"author":{"gitId":"FanZixian"},"content":"        case \"todo\": {","lastModifiedDate":"2023-02-11"},{"lineNumber":43,"author":{"gitId":"FanZixian"},"content":"            taskStatus \u003d Status.T;","lastModifiedDate":"2023-02-11"},{"lineNumber":44,"author":{"gitId":"FanZixian"},"content":"            break;","lastModifiedDate":"2023-02-11"},{"lineNumber":45,"author":{"gitId":"FanZixian"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":46,"author":{"gitId":"FanZixian"},"content":"        case \"deadline\": {","lastModifiedDate":"2023-02-11"},{"lineNumber":47,"author":{"gitId":"FanZixian"},"content":"            taskStatus \u003d Status.D;","lastModifiedDate":"2023-02-11"},{"lineNumber":48,"author":{"gitId":"FanZixian"},"content":"            break;","lastModifiedDate":"2023-02-11"},{"lineNumber":49,"author":{"gitId":"FanZixian"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":50,"author":{"gitId":"FanZixian"},"content":"        case \"event\": {","lastModifiedDate":"2023-02-11"},{"lineNumber":51,"author":{"gitId":"FanZixian"},"content":"            taskStatus \u003d Status.E;","lastModifiedDate":"2023-02-11"},{"lineNumber":52,"author":{"gitId":"FanZixian"},"content":"            break;","lastModifiedDate":"2023-02-11"},{"lineNumber":53,"author":{"gitId":"FanZixian"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":54,"author":{"gitId":"FanZixian"},"content":"        default:","lastModifiedDate":"2023-02-11"},{"lineNumber":55,"author":{"gitId":"FanZixian"},"content":"            return;","lastModifiedDate":"2023-02-11"},{"lineNumber":56,"author":{"gitId":"FanZixian"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":57,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":58,"author":{"gitId":"FanZixian"},"content":"        Task currentTask \u003d new Task(information, taskStatus);","lastModifiedDate":"2023-02-11"},{"lineNumber":59,"author":{"gitId":"FanZixian"},"content":"        tasks.addTask(currentTask);","lastModifiedDate":"2023-02-11"},{"lineNumber":60,"author":{"gitId":"FanZixian"},"content":"        System.out.println(\"  \" + currentTask.showTask());","lastModifiedDate":"2023-02-11"},{"lineNumber":61,"author":{"gitId":"FanZixian"},"content":"        System.out.println(\"Now you have \" + tasks.getSize() + \" tasks in the list.\");","lastModifiedDate":"2023-02-11"},{"lineNumber":62,"author":{"gitId":"FanZixian"},"content":"        Spliterator.printSpliterator();","lastModifiedDate":"2023-02-27"},{"lineNumber":63,"author":{"gitId":"FanZixian"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":64,"author":{"gitId":"FanZixian"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"FanZixian":64}},{"path":"src/main/java/AllCommands/Commands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FanZixian"},"content":"package AllCommands;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"FanZixian"},"content":"public abstract class Commands {","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"FanZixian"},"content":"    /*","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"FanZixian"},"content":"    * This is an abstract class representing the parent of all the other types of commands.","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"FanZixian"},"content":"    * Other commands are extended to this class.","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"FanZixian"},"content":"    */","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"FanZixian"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"FanZixian":7}},{"path":"src/main/java/AllCommands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FanZixian"},"content":"package AllCommands;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"FanZixian"},"content":"import BasisSupport.Spliterator;","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"FanZixian"},"content":"import Support.TaskList;","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"FanZixian"},"content":"public class DeleteCommand {","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"FanZixian"},"content":"    public static String line;","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"FanZixian"},"content":"    public DeleteCommand(String line) {","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"FanZixian"},"content":"        DeleteCommand.line \u003d line;","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"FanZixian"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"FanZixian"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"FanZixian"},"content":"     * This method is to deal with the deletion request from user.","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"FanZixian"},"content":"     * User\u0027s input will include the position of task they want to delete.","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"FanZixian"},"content":"     * They can use the list command to check which task they want to delete.","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"FanZixian"},"content":"     * After doing so, the task list size will decrease by 1","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"FanZixian"},"content":"     * Necessary feedback from the system is done by the println functions.","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"FanZixian"},"content":"     * It also deals with the case that the input size exceeds the boundary of task list.","lastModifiedDate":"2023-02-27"},{"lineNumber":19,"author":{"gitId":"FanZixian"},"content":"     *","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"FanZixian"},"content":"     * @param tasks All the tasks we have in the storage","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"FanZixian"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"FanZixian"},"content":"    public static void deleteCommandMethod(TaskList tasks) {","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"FanZixian"},"content":"        Spliterator.printSpliterator();","lastModifiedDate":"2023-02-27"},{"lineNumber":25,"author":{"gitId":"FanZixian"},"content":"        int deleteIndex \u003d Integer.parseInt(line.split(\" \")[1]) - 1;","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"FanZixian"},"content":"        // Deal with the case if the delete index mistakes","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"FanZixian"},"content":"        if (deleteIndex \u003e tasks.getSize() - 1 || deleteIndex \u003c 0) {","lastModifiedDate":"2023-02-27"},{"lineNumber":28,"author":{"gitId":"FanZixian"},"content":"            System.out.println(\"Oops, you can not delete the task that is outside the boundary.\");","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"FanZixian"},"content":"        } else {","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"FanZixian"},"content":"            System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"FanZixian"},"content":"            System.out.println(\"  \" + tasks.getTask(deleteIndex).showTask());","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"FanZixian"},"content":"            tasks.deleteTask(deleteIndex);","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"FanZixian"},"content":"            System.out.println(\"Now you have \" + tasks.getSize() + \" tasks in the list.\");","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"FanZixian"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"FanZixian"},"content":"        Spliterator.printSpliterator();","lastModifiedDate":"2023-02-27"},{"lineNumber":36,"author":{"gitId":"FanZixian"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":37,"author":{"gitId":"FanZixian"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"FanZixian":37}},{"path":"src/main/java/AllCommands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FanZixian"},"content":"package AllCommands;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"FanZixian"},"content":"import BasisSupport.Spliterator;","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"FanZixian"},"content":"import Support.TaskList;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"FanZixian"},"content":"public class FindCommand {","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"FanZixian"},"content":"    public static String line;","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"FanZixian"},"content":"    public FindCommand(String line) {","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"FanZixian"},"content":"        FindCommand.line \u003d line;","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"FanZixian"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"FanZixian"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"FanZixian"},"content":"     * This method is to deal with the user\u0027s request to find the task with some words.","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"FanZixian"},"content":"     * User\u0027s input will include the specific information included in some tasks.","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"FanZixian"},"content":"     * Necessary feedback from the system is done by the println functions.","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"FanZixian"},"content":"     * If the information is not found, system will also give correct feedback.","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"FanZixian"},"content":"     *","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"FanZixian"},"content":"     * @param tasks All the tasks we have in the storage","lastModifiedDate":"2023-02-27"},{"lineNumber":19,"author":{"gitId":"FanZixian"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"FanZixian"},"content":"    public static void findCommandMethod(TaskList tasks) {","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"FanZixian"},"content":"        Spliterator.printSpliterator();","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"FanZixian"},"content":"        String findTask \u003d line.substring(5);","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"FanZixian"},"content":"        boolean ifFindTask \u003d false;","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"FanZixian"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"FanZixian"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"FanZixian"},"content":"            if (tasks.getTask(i).getDescription().contains(findTask)) {","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"FanZixian"},"content":"                System.out.print(i + 1);","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"FanZixian"},"content":"                System.out.println(\". \" + tasks.getTask(i).showTask());","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"FanZixian"},"content":"                ifFindTask \u003d true;","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"FanZixian"},"content":"            }","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"FanZixian"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"FanZixian"},"content":"        // Give the feedback if the task is not found.","lastModifiedDate":"2023-02-27"},{"lineNumber":33,"author":{"gitId":"FanZixian"},"content":"        if (!ifFindTask) {","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"FanZixian"},"content":"            System.out.println(\"Oops! We can not find your task, please try again.\");","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"FanZixian"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"FanZixian"},"content":"        Spliterator.printSpliterator();","lastModifiedDate":"2023-02-27"},{"lineNumber":37,"author":{"gitId":"FanZixian"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":38,"author":{"gitId":"FanZixian"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"FanZixian":38}},{"path":"src/main/java/AllCommands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FanZixian"},"content":"package AllCommands;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"FanZixian"},"content":"import BasisSupport.Spliterator;","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"FanZixian"},"content":"import Support.*;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"FanZixian"},"content":"// Display all the AllCommands.Commands","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"FanZixian"},"content":"public class ListCommand extends Commands {","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"FanZixian"},"content":"    public static String line;","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"FanZixian"},"content":"    public ListCommand(String line) {","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"FanZixian"},"content":"        ListCommand.line \u003d line;","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"FanZixian"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"FanZixian"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"FanZixian"},"content":"     * This method is to deal with the user\u0027s request to list all the commands they have input in the storage.","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"FanZixian"},"content":"     * Command is only list without any further instruction.","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"FanZixian"},"content":"     *","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"FanZixian"},"content":"     * @param tasks All the tasks we have in the storage","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"FanZixian"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":19,"author":{"gitId":"FanZixian"},"content":"    public static void listCommandMethod(TaskList tasks) {","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"FanZixian"},"content":"        Spliterator.printSpliterator();","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"FanZixian"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"FanZixian"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"FanZixian"},"content":"            System.out.print(i + 1);","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"FanZixian"},"content":"            System.out.println(\". \" + tasks.getTask(i).showTask());","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"FanZixian"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"FanZixian"},"content":"        Spliterator.printSpliterator();","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"FanZixian"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"FanZixian"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"FanZixian":29}},{"path":"src/main/java/AllCommands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FanZixian"},"content":"package AllCommands;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"FanZixian"},"content":"import BasisSupport.Spliterator;","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"FanZixian"},"content":"import Support.TaskList;","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"FanZixian"},"content":"public class MarkCommand {","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"FanZixian"},"content":"    public static String line;","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"FanZixian"},"content":"    public MarkCommand(String line) {","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"FanZixian"},"content":"        MarkCommand.line \u003d line;","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"FanZixian"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"FanZixian"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"FanZixian"},"content":"     * This method is to deal with the user\u0027s request to mark some command they have input in the storage.","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"FanZixian"},"content":"     * User\u0027s input will include the position of task they want to mark.","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"FanZixian"},"content":"     * This method is always used with the UnmarkCommand method together.","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"FanZixian"},"content":"     * Necessary feedback from the system is done by the println functions.","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"FanZixian"},"content":"     * If the information is not found, system will also give correct feedback.","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"FanZixian"},"content":"     * It also deals with the case that the input size exceeds the boundary of task list.","lastModifiedDate":"2023-02-27"},{"lineNumber":19,"author":{"gitId":"FanZixian"},"content":"     *","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"FanZixian"},"content":"     * @param tasks All the tasks we have in the storage","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"FanZixian"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"FanZixian"},"content":"    public static void markCommandMethod(TaskList tasks) {","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"FanZixian"},"content":"        int taskNumber \u003d Integer.parseInt(line.substring(5));","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"FanZixian"},"content":"        System.out.println(taskNumber);","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"FanZixian"},"content":"        if (taskNumber \u003e tasks.getSize() || taskNumber \u003c\u003d 0) {","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"FanZixian"},"content":"            System.out.println(\"Oops, you can not mark the task that is outside the boundary.\");","lastModifiedDate":"2023-02-27"},{"lineNumber":28,"author":{"gitId":"FanZixian"},"content":"        } else {","lastModifiedDate":"2023-02-27"},{"lineNumber":29,"author":{"gitId":"FanZixian"},"content":"            tasks.getTask(taskNumber - 1).setIsDone(true);","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"FanZixian"},"content":"            Spliterator.printSpliterator();","lastModifiedDate":"2023-02-27"},{"lineNumber":31,"author":{"gitId":"FanZixian"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"FanZixian"},"content":"            System.out.println(\"  \" + tasks.getTask(taskNumber - 1).showTask());","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"FanZixian"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":34,"author":{"gitId":"FanZixian"},"content":"        Spliterator.printSpliterator();","lastModifiedDate":"2023-02-27"},{"lineNumber":35,"author":{"gitId":"FanZixian"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":37,"author":{"gitId":"FanZixian"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"FanZixian":37}},{"path":"src/main/java/AllCommands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FanZixian"},"content":"package AllCommands;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"FanZixian"},"content":"import BasisSupport.Spliterator;","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"FanZixian"},"content":"import Support.TaskList;","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"FanZixian"},"content":"public class UnmarkCommand {","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"FanZixian"},"content":"    public static String line;","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"FanZixian"},"content":"    public UnmarkCommand(String line) {","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"FanZixian"},"content":"        UnmarkCommand.line \u003d line;","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"FanZixian"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"FanZixian"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"FanZixian"},"content":"     * This method is to deal with the user\u0027s request to ummark some command they have input in the storage.","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"FanZixian"},"content":"     * User\u0027s input will include the position of task they want to mark.","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"FanZixian"},"content":"     * This method is always used with the MarkCommand method together.","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"FanZixian"},"content":"     * Necessary feedback from the system is done by the println functions.","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"FanZixian"},"content":"     * If the information is not found, system will also give correct feedback.","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"FanZixian"},"content":"     * It also deals with the case that the input size exceeds the boundary of task list.","lastModifiedDate":"2023-02-27"},{"lineNumber":19,"author":{"gitId":"FanZixian"},"content":"     *","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"FanZixian"},"content":"     * @param tasks All the tasks we have in the storage","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"FanZixian"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"FanZixian"},"content":"    public static void unmarkCommandMethod(TaskList tasks) {","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"FanZixian"},"content":"        int taskNumber \u003d Integer.parseInt(line.substring(7));","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"FanZixian"},"content":"        if (taskNumber \u003e tasks.getSize() || taskNumber \u003c\u003d 0) {","lastModifiedDate":"2023-02-27"},{"lineNumber":25,"author":{"gitId":"FanZixian"},"content":"            System.out.println(\"Oops, you can not mark the task that is outside the boundary.\");","lastModifiedDate":"2023-02-27"},{"lineNumber":26,"author":{"gitId":"FanZixian"},"content":"        } else {","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"FanZixian"},"content":"            tasks.getTask(taskNumber - 1).setIsDone(false);","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"FanZixian"},"content":"            Spliterator.printSpliterator();","lastModifiedDate":"2023-02-27"},{"lineNumber":29,"author":{"gitId":"FanZixian"},"content":"            System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"FanZixian"},"content":"            System.out.println(\"  \" + tasks.getTask(taskNumber - 1).showTask());","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"FanZixian"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":32,"author":{"gitId":"FanZixian"},"content":"        Spliterator.printSpliterator();","lastModifiedDate":"2023-02-27"},{"lineNumber":33,"author":{"gitId":"FanZixian"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"FanZixian"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"FanZixian":35}},{"path":"src/main/java/BasisSupport/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FanZixian"},"content":"package BasisSupport;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"FanZixian"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"FanZixian"},"content":"    // This class is used to extend the exception","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"FanZixian"},"content":"    public DukeException() {","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"FanZixian"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"FanZixian"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"FanZixian":8}},{"path":"src/main/java/BasisSupport/Spliterator.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FanZixian"},"content":"package BasisSupport;","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"FanZixian"},"content":"public class Spliterator {","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"FanZixian"},"content":"    // This class is to make the spliterator a meaningful line instead of a magic string","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"FanZixian"},"content":"    public static final String SPLITERATOR \u003d new String(\"____________________________________________________________\");","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"FanZixian"},"content":"    public static void printSpliterator() {","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"FanZixian"},"content":"        System.out.println(SPLITERATOR);","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"FanZixian"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"FanZixian"},"content":"}","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"FanZixian":11}},{"path":"src/main/java/BasisSupport/Status.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FanZixian"},"content":"package BasisSupport;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"FanZixian"},"content":"public enum Status {","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"FanZixian"},"content":"    // This enum class is to represent the task status","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"FanZixian"},"content":"    // T stands for ToDo, D stands for Deadline, E stands for Events","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"FanZixian"},"content":"    T, D, E;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"FanZixian"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"FanZixian":8}},{"path":"src/main/java/BasisSupport/TransformString.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FanZixian"},"content":"package BasisSupport;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"FanZixian"},"content":"import Support.Time;","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"FanZixian"},"content":"public class TransformString {","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"FanZixian"},"content":"    // This class is to transform the line with \"/\" to common","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"FanZixian"},"content":"    public static final String DASH \u003d \"/\";","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"FanZixian"},"content":"    public static String transformString(String line) {","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"FanZixian"},"content":"        String transformedLine;","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"FanZixian"},"content":"        String[] wordsListOfLine \u003d line.split(\" \");","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"FanZixian"},"content":"        boolean firstTimeOccurence \u003d true; // Indicates the occurrence time of \"/\"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"FanZixian"},"content":"        // In order to provide brackets and colon to the content","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"FanZixian"},"content":"        if (line.contains(DASH)) {","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"FanZixian"},"content":"            for (int i \u003d 0; i \u003c wordsListOfLine.length; i++) {","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"FanZixian"},"content":"                if (wordsListOfLine[i].startsWith(DASH)) {","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"FanZixian"},"content":"                    if (firstTimeOccurence) {","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"FanZixian"},"content":"                        wordsListOfLine[i] \u003d \"(\" + wordsListOfLine[i].substring(1) + \":\";","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"FanZixian"},"content":"                        firstTimeOccurence \u003d false;","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"FanZixian"},"content":"                    } else {","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"FanZixian"},"content":"                        wordsListOfLine[i] \u003d wordsListOfLine[i].substring(1) + \":\";","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"FanZixian"},"content":"                    }","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"FanZixian"},"content":"                }","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"FanZixian"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"FanZixian"},"content":"            transformedLine \u003d String.join(\" \", wordsListOfLine) + \")\";","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"FanZixian"},"content":"        } else {","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"FanZixian"},"content":"            transformedLine \u003d line;","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"FanZixian"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"FanZixian"},"content":"        if (transformedLine.contains(DASH)) {","lastModifiedDate":"2023-02-27"},{"lineNumber":30,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"FanZixian"},"content":"            // The two index to obtain where we should substitute the time","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"FanZixian"},"content":"            int substituteStart \u003d 0;","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"FanZixian"},"content":"            int substituteEnd \u003d 0;","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"FanZixian"},"content":"            // In order to print Time in a better format","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"FanZixian"},"content":"            // We only accept two formats of time","lastModifiedDate":"2023-02-27"},{"lineNumber":37,"author":{"gitId":"FanZixian"},"content":"            // For the format, it should be either day/month/year or day/month/year time","lastModifiedDate":"2023-02-11"},{"lineNumber":38,"author":{"gitId":"FanZixian"},"content":"            String[] originalList \u003d transformedLine.split(DASH);","lastModifiedDate":"2023-02-27"},{"lineNumber":39,"author":{"gitId":"FanZixian"},"content":"            int index \u003d 0;","lastModifiedDate":"2023-02-11"},{"lineNumber":40,"author":{"gitId":"FanZixian"},"content":"            String[] timeList \u003d new String[originalList.length];","lastModifiedDate":"2023-02-11"},{"lineNumber":41,"author":{"gitId":"FanZixian"},"content":"            for (String time: originalList) {","lastModifiedDate":"2023-02-11"},{"lineNumber":42,"author":{"gitId":"FanZixian"},"content":"                time \u003d time.replaceAll(\"[^0-9]\", \"\");","lastModifiedDate":"2023-02-11"},{"lineNumber":43,"author":{"gitId":"FanZixian"},"content":"                // Sometimes day and month can be only 1 digit","lastModifiedDate":"2023-02-11"},{"lineNumber":44,"author":{"gitId":"FanZixian"},"content":"                if (time.length() \u003d\u003d 1) {","lastModifiedDate":"2023-02-11"},{"lineNumber":45,"author":{"gitId":"FanZixian"},"content":"                    time \u003d \"0\" + time;","lastModifiedDate":"2023-02-11"},{"lineNumber":46,"author":{"gitId":"FanZixian"},"content":"                }","lastModifiedDate":"2023-02-11"},{"lineNumber":47,"author":{"gitId":"FanZixian"},"content":"                timeList[index] \u003d time;","lastModifiedDate":"2023-02-11"},{"lineNumber":48,"author":{"gitId":"FanZixian"},"content":"                index++;","lastModifiedDate":"2023-02-11"},{"lineNumber":49,"author":{"gitId":"FanZixian"},"content":"            }","lastModifiedDate":"2023-02-11"},{"lineNumber":50,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":51,"author":{"gitId":"FanZixian"},"content":"            String dateDisplay \u003d \"\";","lastModifiedDate":"2023-02-11"},{"lineNumber":52,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":53,"author":{"gitId":"FanZixian"},"content":"            if (timeList[2].length() \u003d\u003d 4) {","lastModifiedDate":"2023-02-11"},{"lineNumber":54,"author":{"gitId":"FanZixian"},"content":"                // It means that the format is day/month/year","lastModifiedDate":"2023-02-11"},{"lineNumber":55,"author":{"gitId":"FanZixian"},"content":"                Time date \u003d new Time(timeList[2], timeList[1], timeList[0]);","lastModifiedDate":"2023-02-11"},{"lineNumber":56,"author":{"gitId":"FanZixian"},"content":"                dateDisplay \u003d date.transformLocalDate();","lastModifiedDate":"2023-02-11"},{"lineNumber":57,"author":{"gitId":"FanZixian"},"content":"                // The length of day matters","lastModifiedDate":"2023-02-11"},{"lineNumber":58,"author":{"gitId":"FanZixian"},"content":"                if (timeList[0].startsWith(\"0\")) {","lastModifiedDate":"2023-02-11"},{"lineNumber":59,"author":{"gitId":"FanZixian"},"content":"                    substituteStart \u003d transformedLine.indexOf(timeList[0].substring(1) + DASH","lastModifiedDate":"2023-02-27"},{"lineNumber":60,"author":{"gitId":"FanZixian"},"content":"                            + timeList[1] + DASH + timeList[2]);","lastModifiedDate":"2023-02-27"},{"lineNumber":61,"author":{"gitId":"FanZixian"},"content":"                    substituteEnd \u003d substituteStart + 9;","lastModifiedDate":"2023-02-11"},{"lineNumber":62,"author":{"gitId":"FanZixian"},"content":"                } else {","lastModifiedDate":"2023-02-11"},{"lineNumber":63,"author":{"gitId":"FanZixian"},"content":"                    substituteStart \u003d transformedLine.indexOf(timeList[0] + DASH","lastModifiedDate":"2023-02-27"},{"lineNumber":64,"author":{"gitId":"FanZixian"},"content":"                            + timeList[1] + DASH + timeList[2]);","lastModifiedDate":"2023-02-27"},{"lineNumber":65,"author":{"gitId":"FanZixian"},"content":"                    substituteEnd \u003d substituteStart + 10;","lastModifiedDate":"2023-02-11"},{"lineNumber":66,"author":{"gitId":"FanZixian"},"content":"                }","lastModifiedDate":"2023-02-11"},{"lineNumber":67,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":68,"author":{"gitId":"FanZixian"},"content":"            } else {","lastModifiedDate":"2023-02-11"},{"lineNumber":69,"author":{"gitId":"FanZixian"},"content":"                // It means that the format is day/month/year time","lastModifiedDate":"2023-02-11"},{"lineNumber":70,"author":{"gitId":"FanZixian"},"content":"                Time datetime \u003d new Time(timeList[2].substring(0,4), timeList[1], timeList[0], timeList[2].substring(4));","lastModifiedDate":"2023-02-11"},{"lineNumber":71,"author":{"gitId":"FanZixian"},"content":"                dateDisplay \u003d datetime.transformLocalDateTime();","lastModifiedDate":"2023-02-11"},{"lineNumber":72,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":73,"author":{"gitId":"FanZixian"},"content":"                // The length of day matters","lastModifiedDate":"2023-02-11"},{"lineNumber":74,"author":{"gitId":"FanZixian"},"content":"                if (timeList[0].startsWith(\"0\")) {","lastModifiedDate":"2023-02-11"},{"lineNumber":75,"author":{"gitId":"FanZixian"},"content":"                    substituteStart \u003d transformedLine.indexOf(timeList[0].substring(1) + DASH","lastModifiedDate":"2023-02-27"},{"lineNumber":76,"author":{"gitId":"FanZixian"},"content":"                            + timeList[1] + DASH + timeList[2].substring(0,4) + \" \" + timeList[2].substring(4));","lastModifiedDate":"2023-02-27"},{"lineNumber":77,"author":{"gitId":"FanZixian"},"content":"                    substituteEnd \u003d substituteStart + 14;","lastModifiedDate":"2023-02-11"},{"lineNumber":78,"author":{"gitId":"FanZixian"},"content":"                } else {","lastModifiedDate":"2023-02-11"},{"lineNumber":79,"author":{"gitId":"FanZixian"},"content":"                    substituteStart \u003d transformedLine.indexOf(timeList[0] + DASH","lastModifiedDate":"2023-02-27"},{"lineNumber":80,"author":{"gitId":"FanZixian"},"content":"                            + timeList[1] + DASH + timeList[2].substring(0,4) + \" \" + timeList[2].substring(4));","lastModifiedDate":"2023-02-27"},{"lineNumber":81,"author":{"gitId":"FanZixian"},"content":"                    substituteEnd \u003d substituteStart + 15;","lastModifiedDate":"2023-02-11"},{"lineNumber":82,"author":{"gitId":"FanZixian"},"content":"                }","lastModifiedDate":"2023-02-11"},{"lineNumber":83,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":84,"author":{"gitId":"FanZixian"},"content":"            }","lastModifiedDate":"2023-02-11"},{"lineNumber":85,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":86,"author":{"gitId":"FanZixian"},"content":"            transformedLine \u003d transformedLine.substring(0, substituteStart) + dateDisplay","lastModifiedDate":"2023-02-11"},{"lineNumber":87,"author":{"gitId":"FanZixian"},"content":"                    + transformedLine.substring(substituteEnd);","lastModifiedDate":"2023-02-11"},{"lineNumber":88,"author":{"gitId":"FanZixian"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":89,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":90,"author":{"gitId":"FanZixian"},"content":"        return transformedLine;","lastModifiedDate":"2023-01-31"},{"lineNumber":91,"author":{"gitId":"FanZixian"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":92,"author":{"gitId":"FanZixian"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"FanZixian":92}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FanZixian"},"content":"import AllCommands.*;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"FanZixian"},"content":"import Support.Storage;","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"FanZixian"},"content":"import Support.TaskList;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"FanZixian"},"content":"import Support.Ui;","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"FanZixian"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"FanZixian"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"FanZixian"},"content":"// Now it is level 9","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"FanZixian"},"content":"// PR merged now","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"FanZixian"},"content":"// All merged","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"FanZixian"},"content":"    private static TaskList tasks;","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"FanZixian"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"FanZixian"},"content":"        Storage storage \u003d new Storage(filePath);","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"FanZixian"},"content":"        try {","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"FanZixian"},"content":"            tasks \u003d storage.readFromFile(tasks);","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"FanZixian"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"FanZixian"},"content":"            System.out.println(\"The file is not exist, try again: \" + e.getMessage());","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"FanZixian"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"FanZixian"},"content":"            storage.makeDirectory();","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"FanZixian"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"FanZixian"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"FanZixian"},"content":"    public static void run() {","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"FanZixian"},"content":"        // Greet the user","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"FanZixian"},"content":"        Ui.initialGreet();","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"FanZixian"},"content":"        String line;","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"FanZixian"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"FanZixian"},"content":"        line \u003d in.nextLine();","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"FanZixian"},"content":"        while (!line.equals(\"bye\")) {","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"FanZixian"},"content":"            String firstWord \u003d line.split(\" \")[0];","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"FanZixian"},"content":"            boolean hasError;","lastModifiedDate":"2023-02-11"},{"lineNumber":37,"author":{"gitId":"FanZixian"},"content":"            hasError \u003d Ui.exceptionCheck(line);","lastModifiedDate":"2023-02-11"},{"lineNumber":38,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"FanZixian"},"content":"            if (!hasError) {","lastModifiedDate":"2023-02-11"},{"lineNumber":40,"author":{"gitId":"FanZixian"},"content":"                if (firstWord.equals(\"list\")) {","lastModifiedDate":"2023-02-11"},{"lineNumber":41,"author":{"gitId":"FanZixian"},"content":"                    ListCommand list \u003d new ListCommand(line);","lastModifiedDate":"2023-02-11"},{"lineNumber":42,"author":{"gitId":"FanZixian"},"content":"                    list.listCommandMethod(tasks);","lastModifiedDate":"2023-02-11"},{"lineNumber":43,"author":{"gitId":"FanZixian"},"content":"                } else if (firstWord.equals(\"mark\")) {","lastModifiedDate":"2023-02-11"},{"lineNumber":44,"author":{"gitId":"FanZixian"},"content":"                    MarkCommand mark \u003d new MarkCommand(line);","lastModifiedDate":"2023-02-11"},{"lineNumber":45,"author":{"gitId":"FanZixian"},"content":"                    mark.markCommandMethod(tasks);","lastModifiedDate":"2023-02-11"},{"lineNumber":46,"author":{"gitId":"FanZixian"},"content":"                    Storage.saveFile(tasks);","lastModifiedDate":"2023-02-11"},{"lineNumber":47,"author":{"gitId":"FanZixian"},"content":"                } else if (firstWord.equals(\"unmark\")) {","lastModifiedDate":"2023-02-11"},{"lineNumber":48,"author":{"gitId":"FanZixian"},"content":"                    UnmarkCommand unmark \u003d new UnmarkCommand(line);","lastModifiedDate":"2023-02-11"},{"lineNumber":49,"author":{"gitId":"FanZixian"},"content":"                    unmark.unmarkCommandMethod(tasks);","lastModifiedDate":"2023-02-11"},{"lineNumber":50,"author":{"gitId":"FanZixian"},"content":"                    Storage.saveFile(tasks);","lastModifiedDate":"2023-02-11"},{"lineNumber":51,"author":{"gitId":"FanZixian"},"content":"                } else if (firstWord.equals(\"todo\") || firstWord.equals(\"deadline\") || firstWord.equals(\"event\")) {","lastModifiedDate":"2023-02-11"},{"lineNumber":52,"author":{"gitId":"FanZixian"},"content":"                    AddCommand add \u003d new AddCommand(line);","lastModifiedDate":"2023-02-11"},{"lineNumber":53,"author":{"gitId":"FanZixian"},"content":"                    add.addCommandMethod(tasks);","lastModifiedDate":"2023-02-11"},{"lineNumber":54,"author":{"gitId":"FanZixian"},"content":"                    Storage.saveFile(tasks);","lastModifiedDate":"2023-02-11"},{"lineNumber":55,"author":{"gitId":"FanZixian"},"content":"                } else if (firstWord.equals(\"delete\")) {","lastModifiedDate":"2023-02-11"},{"lineNumber":56,"author":{"gitId":"FanZixian"},"content":"                    DeleteCommand delete \u003d new DeleteCommand(line);","lastModifiedDate":"2023-02-11"},{"lineNumber":57,"author":{"gitId":"FanZixian"},"content":"                    delete.deleteCommandMethod(tasks);","lastModifiedDate":"2023-02-11"},{"lineNumber":58,"author":{"gitId":"FanZixian"},"content":"                    Storage.saveFile(tasks);","lastModifiedDate":"2023-02-11"},{"lineNumber":59,"author":{"gitId":"FanZixian"},"content":"                } else if (firstWord.equals(\"find\")) {","lastModifiedDate":"2023-02-13"},{"lineNumber":60,"author":{"gitId":"FanZixian"},"content":"                    FindCommand find \u003d new FindCommand(line);","lastModifiedDate":"2023-02-13"},{"lineNumber":61,"author":{"gitId":"FanZixian"},"content":"                    find.findCommandMethod(tasks);","lastModifiedDate":"2023-02-13"},{"lineNumber":62,"author":{"gitId":"FanZixian"},"content":"                }","lastModifiedDate":"2023-02-11"},{"lineNumber":63,"author":{"gitId":"FanZixian"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"FanZixian"},"content":"            line \u003d in.nextLine();","lastModifiedDate":"2023-01-23"},{"lineNumber":65,"author":{"gitId":"FanZixian"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":66,"author":{"gitId":"FanZixian"},"content":"        Ui.bye();","lastModifiedDate":"2023-02-11"},{"lineNumber":67,"author":{"gitId":"FanZixian"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":68,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-11"},{"lineNumber":70,"author":{"gitId":"FanZixian"},"content":"        new Duke(\"./data/duke.txt\").run();","lastModifiedDate":"2023-02-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"FanZixian":68,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FanZixian"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"FanZixian"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"FanZixian"},"content":"    public DukeException() {","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"FanZixian"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"FanZixian"},"content":"}","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"FanZixian"},"content":"class catchError {","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"FanZixian"},"content":"    static final String[] INSTRUCTIONS \u003d new String[] {\"todo\", \"deadline\", \"event\", \"mark\", \"unmark\", \"bye\", \"list\"};","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"FanZixian"},"content":"    static void validateEmpty (String line) throws DukeException {","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"FanZixian"},"content":"        String[] lineList \u003d line.split(\" \");","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"FanZixian"},"content":"        if (lineList.length \u003c\u003d 1 \u0026\u0026 !lineList[0].equals(\"list\") \u0026\u0026 !lineList[0].equals(\"bye\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"FanZixian"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"FanZixian"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"FanZixian"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"FanZixian"},"content":"    static void validateMeaningful (String instruction) throws DukeException {","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"FanZixian"},"content":"        if (!Arrays.asList(INSTRUCTIONS).contains(instruction)) {","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"FanZixian"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"FanZixian"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"FanZixian"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"FanZixian"},"content":"}","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"FanZixian":25}},{"path":"src/main/java/Support/Parse.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FanZixian"},"content":"package Support;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"FanZixian"},"content":"import BasisSupport.DukeException;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"FanZixian"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"FanZixian"},"content":"public class Parse {","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"FanZixian"},"content":"    // Making sense of the User\u0027s input, and deal with cases when it is invalid","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"FanZixian"},"content":"    // These are the possible instructions that the user will input.","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"FanZixian"},"content":"    // If the user\u0027s inputs are not in the below array, then it will be invalid.","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"FanZixian"},"content":"    static final String[] INSTRUCTIONS \u003d new String[] {\"todo\", \"deadline\", \"event\", \"mark\", \"unmark\",","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"FanZixian"},"content":"            \"bye\", \"list\", \"delete\", \"find\"};","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"FanZixian"},"content":"    // Verify whether the instruction has necessary information","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"FanZixian"},"content":"    public static void validateEmpty (String line) throws DukeException {","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"FanZixian"},"content":"        String[] lineList \u003d line.split(\" \");","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"FanZixian"},"content":"        // Note that only command \"list\" and \"bye\" do not require any further description of the task","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"FanZixian"},"content":"        if (lineList.length \u003c\u003d 1 \u0026\u0026 !lineList[0].equals(\"list\") \u0026\u0026 !lineList[0].equals(\"bye\")) {","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"FanZixian"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"FanZixian"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"FanZixian"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"FanZixian"},"content":"    // Verify whether the instruction is meaningful.","lastModifiedDate":"2023-02-27"},{"lineNumber":24,"author":{"gitId":"FanZixian"},"content":"    public static void validateMeaningful (String instruction) throws DukeException {","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"FanZixian"},"content":"        if (!Arrays.asList(INSTRUCTIONS).contains(instruction)) {","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"FanZixian"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"FanZixian"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"FanZixian"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"FanZixian"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"FanZixian":29}},{"path":"src/main/java/Support/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FanZixian"},"content":"package Support;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"FanZixian"},"content":"import BasisSupport.Status;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"FanZixian"},"content":"import java.io.File;","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"FanZixian"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"FanZixian"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"FanZixian"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"FanZixian"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"FanZixian"},"content":"public class Storage {","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"FanZixian"},"content":"    // This class contains method related to read tasks in and store tasks in a txt file","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"FanZixian"},"content":"    private static String filePath \u003d \"\";","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"FanZixian"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"FanZixian"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"FanZixian"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"FanZixian"},"content":"    public static void writeToFile(TaskList tasks) throws IOException {","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"FanZixian"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"FanZixian"},"content":"        //Put all the things in the tasks to the file","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"FanZixian"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"FanZixian"},"content":"            fw.write((tasks.getTask(i)).showTask() + \"\\n\");","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"FanZixian"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"FanZixian"},"content":"        fw.close();","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"FanZixian"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"FanZixian"},"content":"    public static TaskList readFromFile(TaskList tasks) throws FileNotFoundException {","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"FanZixian"},"content":"        File f \u003d new File(filePath); // create a File for the given file path","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"FanZixian"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"FanZixian"},"content":"        while (s.hasNextLine()) {","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"FanZixian"},"content":"            String taskLine \u003d s.nextLine();","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"FanZixian"},"content":"            String[] taskLineList \u003d taskLine.split(\"\");","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"FanZixian"},"content":"            Status taskStatus;","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"FanZixian"},"content":"            boolean isDone \u003d false;","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"FanZixian"},"content":"            String description \u003d taskLine.substring(7);","lastModifiedDate":"2023-02-11"},{"lineNumber":37,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":38,"author":{"gitId":"FanZixian"},"content":"            if (taskLineList[1].equals(\"T\")) {","lastModifiedDate":"2023-02-11"},{"lineNumber":39,"author":{"gitId":"FanZixian"},"content":"                taskStatus \u003d Status.T;","lastModifiedDate":"2023-02-11"},{"lineNumber":40,"author":{"gitId":"FanZixian"},"content":"            } else if (taskLineList[1].equals(\"E\")) {","lastModifiedDate":"2023-02-11"},{"lineNumber":41,"author":{"gitId":"FanZixian"},"content":"                taskStatus \u003d Status.E;","lastModifiedDate":"2023-02-11"},{"lineNumber":42,"author":{"gitId":"FanZixian"},"content":"            } else {","lastModifiedDate":"2023-02-11"},{"lineNumber":43,"author":{"gitId":"FanZixian"},"content":"                taskStatus \u003d Status.D;","lastModifiedDate":"2023-02-11"},{"lineNumber":44,"author":{"gitId":"FanZixian"},"content":"            }","lastModifiedDate":"2023-02-11"},{"lineNumber":45,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":46,"author":{"gitId":"FanZixian"},"content":"            if (taskLineList[4].equals(\"X\")) {","lastModifiedDate":"2023-02-11"},{"lineNumber":47,"author":{"gitId":"FanZixian"},"content":"                isDone \u003d true;","lastModifiedDate":"2023-02-11"},{"lineNumber":48,"author":{"gitId":"FanZixian"},"content":"            }","lastModifiedDate":"2023-02-11"},{"lineNumber":49,"author":{"gitId":"FanZixian"},"content":"            Task currentTask \u003d new Task(description, taskStatus, isDone);","lastModifiedDate":"2023-02-11"},{"lineNumber":50,"author":{"gitId":"FanZixian"},"content":"            tasks.addTask(currentTask);","lastModifiedDate":"2023-02-11"},{"lineNumber":51,"author":{"gitId":"FanZixian"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":52,"author":{"gitId":"FanZixian"},"content":"        return tasks;","lastModifiedDate":"2023-02-11"},{"lineNumber":53,"author":{"gitId":"FanZixian"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":54,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":55,"author":{"gitId":"FanZixian"},"content":"    public static void saveFile(TaskList tasks) {","lastModifiedDate":"2023-02-11"},{"lineNumber":56,"author":{"gitId":"FanZixian"},"content":"        try {","lastModifiedDate":"2023-02-11"},{"lineNumber":57,"author":{"gitId":"FanZixian"},"content":"            Storage.writeToFile(tasks);","lastModifiedDate":"2023-02-11"},{"lineNumber":58,"author":{"gitId":"FanZixian"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-11"},{"lineNumber":59,"author":{"gitId":"FanZixian"},"content":"            System.out.println(\"The path is wrong, try again: \" + e.getMessage());","lastModifiedDate":"2023-02-11"},{"lineNumber":60,"author":{"gitId":"FanZixian"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":61,"author":{"gitId":"FanZixian"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":62,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":63,"author":{"gitId":"FanZixian"},"content":"    // We will make a directory first if the directory doesn\u0027t exist","lastModifiedDate":"2023-02-27"},{"lineNumber":64,"author":{"gitId":"FanZixian"},"content":"    public static void makeDirectory() {","lastModifiedDate":"2023-02-16"},{"lineNumber":65,"author":{"gitId":"FanZixian"},"content":"        File data \u003d new File(\"data\");","lastModifiedDate":"2023-02-16"},{"lineNumber":66,"author":{"gitId":"FanZixian"},"content":"        boolean created \u003d data.mkdir();","lastModifiedDate":"2023-02-16"},{"lineNumber":67,"author":{"gitId":"FanZixian"},"content":"        if(!created) {","lastModifiedDate":"2023-02-16"},{"lineNumber":68,"author":{"gitId":"FanZixian"},"content":"            System.out.println(\"Failed to create repository\");","lastModifiedDate":"2023-02-16"},{"lineNumber":69,"author":{"gitId":"FanZixian"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":70,"author":{"gitId":"FanZixian"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":71,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":72,"author":{"gitId":"FanZixian"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"FanZixian":72}},{"path":"src/main/java/Support/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FanZixian"},"content":"package Support;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"FanZixian"},"content":"import BasisSupport.Status;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"FanZixian"},"content":"public class Task {","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"FanZixian"},"content":"    // Task class has many attributes that can describe the information of a particular task","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"FanZixian"},"content":"    protected String description;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"FanZixian"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"FanZixian"},"content":"    protected Status taskStatus;","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"FanZixian"},"content":"    public Task(String description, Status taskStatus) {","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"FanZixian"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"FanZixian"},"content":"        this.taskStatus \u003d taskStatus;","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"FanZixian"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"FanZixian"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"FanZixian"},"content":"    public Task(String description, Status taskStatus, boolean isDone) {","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"FanZixian"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"FanZixian"},"content":"        this.taskStatus \u003d taskStatus;","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"FanZixian"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"FanZixian"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"FanZixian"},"content":"    // Related methods are used to set and get some information of the task","lastModifiedDate":"2023-02-27"},{"lineNumber":25,"author":{"gitId":"FanZixian"},"content":"    public void setIsDone(boolean isDone) {","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"FanZixian"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"FanZixian"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"FanZixian"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"FanZixian"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"FanZixian"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"FanZixian"},"content":"    public String getDescription() {","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"FanZixian"},"content":"        return this.description;","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"FanZixian"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"FanZixian"},"content":"    public String getStatus() {","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"FanZixian"},"content":"        if (this.taskStatus.equals(Status.T)) {","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"FanZixian"},"content":"            return \"[T]\";","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"FanZixian"},"content":"        } else if (this.taskStatus.equals(Status.D)) {","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"FanZixian"},"content":"            return \"[D]\";","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"FanZixian"},"content":"        } else if (this.taskStatus.equals(Status.E)) {","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"FanZixian"},"content":"            return \"[E]\";","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"FanZixian"},"content":"        } else {","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"FanZixian"},"content":"            return \"\";","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"FanZixian"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"FanZixian"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"FanZixian"},"content":"    // This method is to show the task in a particular format that will be stored in the txt file","lastModifiedDate":"2023-02-27"},{"lineNumber":50,"author":{"gitId":"FanZixian"},"content":"    public String showTask() {","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"FanZixian"},"content":"        return this.getStatus() + \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"FanZixian"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"FanZixian"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"FanZixian":53}},{"path":"src/main/java/Support/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FanZixian"},"content":"package Support;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"FanZixian"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"FanZixian"},"content":"public class TaskList {","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"FanZixian"},"content":"    // This class is related to the class Task, that stores all the input tasks in it.","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"FanZixian"},"content":"    private static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"FanZixian"},"content":"    private static int taskslength \u003d 0;","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"FanZixian"},"content":"    public static void addTask(Task newTask) {","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"FanZixian"},"content":"        tasks.add(newTask);","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"FanZixian"},"content":"        taskslength++;","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"FanZixian"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"FanZixian"},"content":"    public static void deleteTask(int index) {","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"FanZixian"},"content":"        tasks.remove(index);","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"FanZixian"},"content":"        taskslength--;","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"FanZixian"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"FanZixian"},"content":"    public static Task getTask(int index) {","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"FanZixian"},"content":"        return tasks.get(index);","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"FanZixian"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"FanZixian"},"content":"    public static int getSize() {","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"FanZixian"},"content":"        return taskslength;","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"FanZixian"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"FanZixian"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"FanZixian":29}},{"path":"src/main/java/Support/Time.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FanZixian"},"content":"package Support;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"FanZixian"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"FanZixian"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"FanZixian"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"FanZixian"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"FanZixian"},"content":"public class Time {","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"FanZixian"},"content":"    // Since the input time can only take two formats, we use LocalDate and LocalDateTime to separate them.","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"FanZixian"},"content":"    // See the details in class TransformingString","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"FanZixian"},"content":"    private LocalDate date;","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"FanZixian"},"content":"    private LocalDateTime datetime;","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"FanZixian"},"content":"    /*","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"FanZixian"},"content":"    Only accept two form of time (with hours/minute or without)","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"FanZixian"},"content":"    */","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"FanZixian"},"content":"    //Time","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"FanZixian"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"FanZixian"},"content":"     * This class is to transform the input of time by users to a formal string format that fits with the requirement","lastModifiedDate":"2023-02-27"},{"lineNumber":19,"author":{"gitId":"FanZixian"},"content":"     * of LocalDate.parse Function.","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"FanZixian"},"content":"     *","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"FanZixian"},"content":"     * @param year task year","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"FanZixian"},"content":"     * @param month task month","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"FanZixian"},"content":"     * @param day task day","lastModifiedDate":"2023-02-27"},{"lineNumber":24,"author":{"gitId":"FanZixian"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":25,"author":{"gitId":"FanZixian"},"content":"    public Time(String year, String month, String day) {","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"FanZixian"},"content":"        String stringDate \u003d year + \"-\" + month + \"-\" + day;","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"FanZixian"},"content":"        this.date \u003d LocalDate.parse(stringDate);","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"FanZixian"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"FanZixian"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":31,"author":{"gitId":"FanZixian"},"content":"     * This class is to transform the input of time by users to a formal string format that fits with the requirement","lastModifiedDate":"2023-02-27"},{"lineNumber":32,"author":{"gitId":"FanZixian"},"content":"     * of LocalDateTime.parse Function.","lastModifiedDate":"2023-02-27"},{"lineNumber":33,"author":{"gitId":"FanZixian"},"content":"     *","lastModifiedDate":"2023-02-27"},{"lineNumber":34,"author":{"gitId":"FanZixian"},"content":"     * @param year task year","lastModifiedDate":"2023-02-27"},{"lineNumber":35,"author":{"gitId":"FanZixian"},"content":"     * @param month task month","lastModifiedDate":"2023-02-27"},{"lineNumber":36,"author":{"gitId":"FanZixian"},"content":"     * @param day task day","lastModifiedDate":"2023-02-27"},{"lineNumber":37,"author":{"gitId":"FanZixian"},"content":"     * @param time task time, specific to hour and minute","lastModifiedDate":"2023-02-27"},{"lineNumber":38,"author":{"gitId":"FanZixian"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":39,"author":{"gitId":"FanZixian"},"content":"    public Time(String year, String month, String day, String time) {","lastModifiedDate":"2023-02-11"},{"lineNumber":40,"author":{"gitId":"FanZixian"},"content":"        String stringDateTime \u003d year + \"-\" + month + \"-\" + day + \"T\"","lastModifiedDate":"2023-02-11"},{"lineNumber":41,"author":{"gitId":"FanZixian"},"content":"                + time.substring(0,2) + \":\" + time.substring(2) + \":00\";","lastModifiedDate":"2023-02-11"},{"lineNumber":42,"author":{"gitId":"FanZixian"},"content":"        this.datetime \u003d LocalDateTime.parse(stringDateTime);","lastModifiedDate":"2023-02-11"},{"lineNumber":43,"author":{"gitId":"FanZixian"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":44,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":45,"author":{"gitId":"FanZixian"},"content":"    public String transformLocalDate() {","lastModifiedDate":"2023-02-11"},{"lineNumber":46,"author":{"gitId":"FanZixian"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-02-11"},{"lineNumber":47,"author":{"gitId":"FanZixian"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":48,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":49,"author":{"gitId":"FanZixian"},"content":"    public String transformLocalDateTime() {","lastModifiedDate":"2023-02-11"},{"lineNumber":50,"author":{"gitId":"FanZixian"},"content":"        return datetime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\"));","lastModifiedDate":"2023-02-11"},{"lineNumber":51,"author":{"gitId":"FanZixian"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":52,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":53,"author":{"gitId":"FanZixian"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"FanZixian":53}},{"path":"src/main/java/Support/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FanZixian"},"content":"package Support;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"FanZixian"},"content":"import BasisSupport.DukeException;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"FanZixian"},"content":"import BasisSupport.Spliterator;","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"FanZixian"},"content":"public class Ui {","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"FanZixian"},"content":"    // This method is to greet the user when the program starts, and it is never used in the following time.","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"FanZixian"},"content":"    public static void initialGreet() {","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"FanZixian"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"FanZixian"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"FanZixian"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"FanZixian"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"FanZixian"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"FanZixian"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"FanZixian"},"content":"        Spliterator.printSpliterator();","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"FanZixian"},"content":"        System.out.println(\" Hello! I\u0027m Duke\");","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"FanZixian"},"content":"        System.out.println(\" What can I do for you?\");","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"FanZixian"},"content":"        Spliterator.printSpliterator();","lastModifiedDate":"2023-02-27"},{"lineNumber":19,"author":{"gitId":"FanZixian"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"FanZixian"},"content":"    // This method is used until the user want to terminate the program.","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"FanZixian"},"content":"    public static void bye() {","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"FanZixian"},"content":"        System.out.println(\" Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"FanZixian"},"content":"        Spliterator.printSpliterator();","lastModifiedDate":"2023-02-27"},{"lineNumber":24,"author":{"gitId":"FanZixian"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"FanZixian"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":26,"author":{"gitId":"FanZixian"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"FanZixian"},"content":"     * This method links to the CatchError Class that will deal with some common cases of error","lastModifiedDate":"2023-02-27"},{"lineNumber":28,"author":{"gitId":"FanZixian"},"content":"     *","lastModifiedDate":"2023-02-27"},{"lineNumber":29,"author":{"gitId":"FanZixian"},"content":"     * @param line Just represents the line that user inputs into the system","lastModifiedDate":"2023-02-27"},{"lineNumber":30,"author":{"gitId":"FanZixian"},"content":"     * @return whether there exists error or not","lastModifiedDate":"2023-02-27"},{"lineNumber":31,"author":{"gitId":"FanZixian"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":32,"author":{"gitId":"FanZixian"},"content":"    public static boolean exceptionCheck(String line) {","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"FanZixian"},"content":"        try {","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"FanZixian"},"content":"            Parse.validateMeaningful(line.split(\" \")[0]);","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"FanZixian"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"FanZixian"},"content":"            Spliterator.printSpliterator();","lastModifiedDate":"2023-02-27"},{"lineNumber":37,"author":{"gitId":"FanZixian"},"content":"            System.out.println(\" ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-02-11"},{"lineNumber":38,"author":{"gitId":"FanZixian"},"content":"            Spliterator.printSpliterator();","lastModifiedDate":"2023-02-27"},{"lineNumber":39,"author":{"gitId":"FanZixian"},"content":"            return true;","lastModifiedDate":"2023-02-11"},{"lineNumber":40,"author":{"gitId":"FanZixian"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":41,"author":{"gitId":"FanZixian"},"content":"        try {","lastModifiedDate":"2023-02-11"},{"lineNumber":42,"author":{"gitId":"FanZixian"},"content":"            Parse.validateEmpty(line);","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"FanZixian"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-11"},{"lineNumber":44,"author":{"gitId":"FanZixian"},"content":"            Spliterator.printSpliterator();","lastModifiedDate":"2023-02-27"},{"lineNumber":45,"author":{"gitId":"FanZixian"},"content":"            System.out.println(\" ☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-02-11"},{"lineNumber":46,"author":{"gitId":"FanZixian"},"content":"            Spliterator.printSpliterator();","lastModifiedDate":"2023-02-27"},{"lineNumber":47,"author":{"gitId":"FanZixian"},"content":"            return true;","lastModifiedDate":"2023-02-11"},{"lineNumber":48,"author":{"gitId":"FanZixian"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":49,"author":{"gitId":"FanZixian"},"content":"        return false;","lastModifiedDate":"2023-02-11"},{"lineNumber":50,"author":{"gitId":"FanZixian"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":51,"author":{"gitId":"FanZixian"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"FanZixian":51}}]
