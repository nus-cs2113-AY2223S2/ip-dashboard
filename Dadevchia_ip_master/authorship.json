[{"path":"src/main/java/Check.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dadevchia"},"content":"public class Check {","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Dadevchia"},"content":"     //Function to check if an input has mark as the first word","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Dadevchia"},"content":"     public static boolean isMark(String input){","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Dadevchia"},"content":"        if(input.length()\u003e\u003d4){","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Dadevchia"},"content":"            if(\"mark\".equalsIgnoreCase(input.substring(0,4))){","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Dadevchia"},"content":"                return true;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Dadevchia"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Dadevchia"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Dadevchia"},"content":"        return false;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Dadevchia"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Dadevchia"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Dadevchia"},"content":"    //Function to check if an input has unmark as the first word","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Dadevchia"},"content":"    public static boolean isUnmark(String input){","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Dadevchia"},"content":"        if(input.length()\u003e\u003d6){","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Dadevchia"},"content":"            if(\"unmark\".equalsIgnoreCase(input.substring(0,6))){","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Dadevchia"},"content":"                return true;","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Dadevchia"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Dadevchia"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Dadevchia"},"content":"        return false;","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Dadevchia"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Dadevchia"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Dadevchia"},"content":"    //Function to check if an input has deadline as the first word","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Dadevchia"},"content":"    public static boolean isDeadline(String input){","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"Dadevchia"},"content":"        if(input.length()\u003e\u003d8){","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"Dadevchia"},"content":"            if(\"deadline\".equalsIgnoreCase(input.substring(0,8))){","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"Dadevchia"},"content":"                return true;","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"Dadevchia"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Dadevchia"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"Dadevchia"},"content":"        return false;","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"Dadevchia"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"Dadevchia"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Dadevchia"},"content":"    //Function to check if an input has event as the first word","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"Dadevchia"},"content":"    public static boolean isEvent(String input){","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"Dadevchia"},"content":"        if(input.length()\u003e\u003d5){","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"Dadevchia"},"content":"            if(\"event\".equalsIgnoreCase(input.substring(0,5))){","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"Dadevchia"},"content":"                return true;","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"Dadevchia"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"Dadevchia"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"Dadevchia"},"content":"        return false;","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"Dadevchia"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"Dadevchia"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"Dadevchia"},"content":"    //Function to check if an input has todo as the first word","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"Dadevchia"},"content":"    public static boolean isTodo(String input){","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"Dadevchia"},"content":"        if(input.length()\u003e\u003d4){","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"Dadevchia"},"content":"            if(\"todo\".equalsIgnoreCase(input.substring(0,4))){","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"Dadevchia"},"content":"                return true;","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"Dadevchia"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"Dadevchia"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"Dadevchia"},"content":"        return false;","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"Dadevchia"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"Dadevchia"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"Dadevchia"},"content":"    //Function to check if an input has list as the first word","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"Dadevchia"},"content":"    public static boolean isList(String input){","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"Dadevchia"},"content":"        if(input.length()\u003e\u003d4){","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"Dadevchia"},"content":"            if(\"list\".equalsIgnoreCase(input.substring(0,4))){","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"Dadevchia"},"content":"                return true;","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"Dadevchia"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"Dadevchia"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"Dadevchia"},"content":"        return false;","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"Dadevchia"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"Dadevchia"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"Dadevchia"},"content":"    //Function to check if an input has bye as the first word","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"Dadevchia"},"content":"    public static boolean isBye(String input){","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"Dadevchia"},"content":"        if(input.length()\u003e\u003d3){","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"Dadevchia"},"content":"            if(\"bye\".equalsIgnoreCase(input.substring(0,3))){","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"Dadevchia"},"content":"                return true;","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"Dadevchia"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"Dadevchia"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"Dadevchia"},"content":"        return false;","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"Dadevchia"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"Dadevchia"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"Dadevchia"},"content":"    //Function to check if an input has delete as the first word","lastModifiedDate":"2023-02-08"},{"lineNumber":73,"author":{"gitId":"Dadevchia"},"content":"    public static boolean isDelete(String input){","lastModifiedDate":"2023-02-08"},{"lineNumber":74,"author":{"gitId":"Dadevchia"},"content":"        if(input.length()\u003e\u003d6){","lastModifiedDate":"2023-02-08"},{"lineNumber":75,"author":{"gitId":"Dadevchia"},"content":"            if(\"delete\".equalsIgnoreCase(input.substring(0,6))){","lastModifiedDate":"2023-02-08"},{"lineNumber":76,"author":{"gitId":"Dadevchia"},"content":"                return true;","lastModifiedDate":"2023-02-08"},{"lineNumber":77,"author":{"gitId":"Dadevchia"},"content":"            }","lastModifiedDate":"2023-02-08"},{"lineNumber":78,"author":{"gitId":"Dadevchia"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":79,"author":{"gitId":"Dadevchia"},"content":"        return false;","lastModifiedDate":"2023-02-08"},{"lineNumber":80,"author":{"gitId":"Dadevchia"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":81,"author":{"gitId":"Dadevchia"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":82,"author":{"gitId":"Dadevchia"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Dadevchia":82}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dadevchia"},"content":"import java.util.Scanner;  // Import the Scanner class","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Dadevchia"},"content":"import java.io.File; // Import the File class","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"Dadevchia"},"content":"import java.util.ArrayList; // Import the ArrayList class","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"Dadevchia"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"Dadevchia"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Dadevchia"},"content":"    //Initialize create a arraylist of tasks","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"Dadevchia"},"content":"    public static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"Dadevchia"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"Dadevchia"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"Dadevchia"},"content":"    public static int taskCount \u003d 0;","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Dadevchia"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"Dadevchia"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"Dadevchia"},"content":"        //check if there is a file to read from","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"Dadevchia"},"content":"        try{","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"Dadevchia"},"content":"            File file \u003d new File(\"data/duke.txt\");","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"Dadevchia"},"content":"            Scanner fileScan \u003d new Scanner(file);","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"Dadevchia"},"content":"            while(fileScan.hasNextLine()){","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"Dadevchia"},"content":"                String line \u003d fileScan.nextLine();","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"Dadevchia"},"content":"                String[] lineSplit \u003d line.split(\" \\\\| \");","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"Dadevchia"},"content":"                if(lineSplit[0].equals(\"T\")){","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"Dadevchia"},"content":"                    tasks[taskCount] \u003d new Todo(lineSplit[2]);","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"Dadevchia"},"content":"                    if(lineSplit.length \u003e 3){","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"Dadevchia"},"content":"                        throw new DukeException(\"Your data file is corrupted\");","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"Dadevchia"},"content":"                    }","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"Dadevchia"},"content":"                    if(lineSplit[1].equals(\"true\")){","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"Dadevchia"},"content":"                        tasks[taskCount].markAsDone();","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"Dadevchia"},"content":"                    }","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"Dadevchia"},"content":"                    taskCount++;","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"Dadevchia"},"content":"                }else if(lineSplit[0].equals(\"D\")){","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"Dadevchia"},"content":"                    if(lineSplit.length \u003e 4){","lastModifiedDate":"2023-02-09"},{"lineNumber":33,"author":{"gitId":"Dadevchia"},"content":"                        throw new DukeException(\"Your data file is corrupted\");","lastModifiedDate":"2023-02-09"},{"lineNumber":34,"author":{"gitId":"Dadevchia"},"content":"                    }","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"Dadevchia"},"content":"                    tasks[taskCount] \u003d new Deadline(lineSplit[2], lineSplit[3]);","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"Dadevchia"},"content":"                    if(lineSplit[1].equals(\"true\")){","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"Dadevchia"},"content":"                        tasks[taskCount].markAsDone();","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"Dadevchia"},"content":"                    }","lastModifiedDate":"2023-02-08"},{"lineNumber":39,"author":{"gitId":"Dadevchia"},"content":"                    taskCount++;","lastModifiedDate":"2023-02-08"},{"lineNumber":40,"author":{"gitId":"Dadevchia"},"content":"                }else if(lineSplit[0].equals(\"E\")){","lastModifiedDate":"2023-02-08"},{"lineNumber":41,"author":{"gitId":"Dadevchia"},"content":"                    if(lineSplit.length \u003e 4){","lastModifiedDate":"2023-02-09"},{"lineNumber":42,"author":{"gitId":"Dadevchia"},"content":"                        throw new DukeException(\"Your data file is corrupted\");","lastModifiedDate":"2023-02-09"},{"lineNumber":43,"author":{"gitId":"Dadevchia"},"content":"                    }","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"Dadevchia"},"content":"                    tasks[taskCount] \u003d new Event(lineSplit[2], lineSplit[3]);","lastModifiedDate":"2023-02-08"},{"lineNumber":45,"author":{"gitId":"Dadevchia"},"content":"                    if(lineSplit[1].equals(\"true\")){","lastModifiedDate":"2023-02-08"},{"lineNumber":46,"author":{"gitId":"Dadevchia"},"content":"                        tasks[taskCount].markAsDone();","lastModifiedDate":"2023-02-08"},{"lineNumber":47,"author":{"gitId":"Dadevchia"},"content":"                    }","lastModifiedDate":"2023-02-08"},{"lineNumber":48,"author":{"gitId":"Dadevchia"},"content":"                    taskCount++;","lastModifiedDate":"2023-02-08"},{"lineNumber":49,"author":{"gitId":"Dadevchia"},"content":"                }","lastModifiedDate":"2023-02-08"},{"lineNumber":50,"author":{"gitId":"Dadevchia"},"content":"            }","lastModifiedDate":"2023-02-08"},{"lineNumber":51,"author":{"gitId":"Dadevchia"},"content":"            //print the tasks in the file","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"Dadevchia"},"content":"            ","lastModifiedDate":"2023-02-09"},{"lineNumber":53,"author":{"gitId":"Dadevchia"},"content":"            fileScan.close();","lastModifiedDate":"2023-02-08"},{"lineNumber":54,"author":{"gitId":"Dadevchia"},"content":"        //otherwise create a new file","lastModifiedDate":"2023-02-08"},{"lineNumber":55,"author":{"gitId":"Dadevchia"},"content":"        } catch(Exception e){","lastModifiedDate":"2023-02-08"},{"lineNumber":56,"author":{"gitId":"Dadevchia"},"content":"            //Create a new file and directory","lastModifiedDate":"2023-02-09"},{"lineNumber":57,"author":{"gitId":"Dadevchia"},"content":"            try{","lastModifiedDate":"2023-02-09"},{"lineNumber":58,"author":{"gitId":"Dadevchia"},"content":"                File file \u003d new File(\"data/duke.txt\");","lastModifiedDate":"2023-02-09"},{"lineNumber":59,"author":{"gitId":"Dadevchia"},"content":"                file.getParentFile().mkdirs();","lastModifiedDate":"2023-02-09"},{"lineNumber":60,"author":{"gitId":"Dadevchia"},"content":"                file.createNewFile();","lastModifiedDate":"2023-02-09"},{"lineNumber":61,"author":{"gitId":"Dadevchia"},"content":"            }catch(Exception e1){","lastModifiedDate":"2023-02-09"},{"lineNumber":62,"author":{"gitId":"Dadevchia"},"content":"                e1.printStackTrace();","lastModifiedDate":"2023-02-09"},{"lineNumber":63,"author":{"gitId":"Dadevchia"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":64,"author":{"gitId":"Dadevchia"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":65,"author":{"gitId":"Dadevchia"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":66,"author":{"gitId":"Dadevchia"},"content":"        //Print out the logo","lastModifiedDate":"2023-02-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":73,"author":{"gitId":"Dadevchia"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"Dadevchia"},"content":"        //Create a greeting message for the user","lastModifiedDate":"2023-01-29"},{"lineNumber":75,"author":{"gitId":"Dadevchia"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");","lastModifiedDate":"2023-01-29"},{"lineNumber":76,"author":{"gitId":"Dadevchia"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-01-29"},{"lineNumber":77,"author":{"gitId":"Dadevchia"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":78,"author":{"gitId":"Dadevchia"},"content":"        //Get user input","lastModifiedDate":"2023-01-29"},{"lineNumber":79,"author":{"gitId":"Dadevchia"},"content":"        Scanner userScan \u003d new Scanner(System.in);  // Create scanner object","lastModifiedDate":"2023-01-29"},{"lineNumber":80,"author":{"gitId":"Dadevchia"},"content":"        String userInput \u003d userScan.nextLine();  // Get user input","lastModifiedDate":"2023-01-29"},{"lineNumber":81,"author":{"gitId":"Dadevchia"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":82,"author":{"gitId":"Dadevchia"},"content":"        //Check the arguments provided unless it is \"bye\" which quits the program","lastModifiedDate":"2023-02-02"},{"lineNumber":83,"author":{"gitId":"Dadevchia"},"content":"        while( !(Check.isBye(userInput)) ){","lastModifiedDate":"2023-01-29"},{"lineNumber":84,"author":{"gitId":"Dadevchia"},"content":"            ","lastModifiedDate":"2023-01-29"},{"lineNumber":85,"author":{"gitId":"Dadevchia"},"content":"            try{","lastModifiedDate":"2023-02-06"},{"lineNumber":86,"author":{"gitId":"Dadevchia"},"content":"                //If userInput is \"list\" print all tasks","lastModifiedDate":"2023-01-29"},{"lineNumber":87,"author":{"gitId":"Dadevchia"},"content":"                if(Check.isList(userInput)){","lastModifiedDate":"2023-02-02"},{"lineNumber":88,"author":{"gitId":"Dadevchia"},"content":"                    //Print out the list of tasks","lastModifiedDate":"2023-01-29"},{"lineNumber":89,"author":{"gitId":"Dadevchia"},"content":"                    System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-01-29"},{"lineNumber":90,"author":{"gitId":"Dadevchia"},"content":"                    for(int i\u003d0;i\u003ctaskCount;i++){","lastModifiedDate":"2023-01-29"},{"lineNumber":91,"author":{"gitId":"Dadevchia"},"content":"                        System.out.println((i+1) + \". \" + tasks.get(i));","lastModifiedDate":"2023-02-08"},{"lineNumber":92,"author":{"gitId":"Dadevchia"},"content":"                    }","lastModifiedDate":"2023-01-29"},{"lineNumber":93,"author":{"gitId":"Dadevchia"},"content":"                    //Get user input again","lastModifiedDate":"2023-02-02"},{"lineNumber":94,"author":{"gitId":"Dadevchia"},"content":"                    userInput \u003d userScan.nextLine();  ","lastModifiedDate":"2023-02-02"},{"lineNumber":95,"author":{"gitId":"Dadevchia"},"content":"                }","lastModifiedDate":"2023-01-29"},{"lineNumber":96,"author":{"gitId":"Dadevchia"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":97,"author":{"gitId":"Dadevchia"},"content":"                //If userInput is \"unmark\" get the task number and unmark the task as done","lastModifiedDate":"2023-01-29"},{"lineNumber":98,"author":{"gitId":"Dadevchia"},"content":"                else if(Check.isUnmark(userInput)){","lastModifiedDate":"2023-01-29"},{"lineNumber":99,"author":{"gitId":"Dadevchia"},"content":"                    //get the task number","lastModifiedDate":"2023-01-29"},{"lineNumber":100,"author":{"gitId":"Dadevchia"},"content":"                    int taskNumber \u003d Integer.parseInt(userInput.substring(7));","lastModifiedDate":"2023-01-29"},{"lineNumber":101,"author":{"gitId":"Dadevchia"},"content":"                    //if the task number is greater than the task count throw an exception","lastModifiedDate":"2023-02-06"},{"lineNumber":102,"author":{"gitId":"Dadevchia"},"content":"                    if(taskNumber\u003etaskCount){","lastModifiedDate":"2023-02-06"},{"lineNumber":103,"author":{"gitId":"Dadevchia"},"content":"                        throw new IllegalArgumentException(\"The task number is greater than the number of tasks.\");","lastModifiedDate":"2023-02-06"},{"lineNumber":104,"author":{"gitId":"Dadevchia"},"content":"                    }","lastModifiedDate":"2023-02-06"},{"lineNumber":105,"author":{"gitId":"Dadevchia"},"content":"                    //if the task number is less than 1 throw an exception","lastModifiedDate":"2023-02-06"},{"lineNumber":106,"author":{"gitId":"Dadevchia"},"content":"                    if(taskNumber\u003c1){","lastModifiedDate":"2023-02-06"},{"lineNumber":107,"author":{"gitId":"Dadevchia"},"content":"                        throw new IllegalArgumentException(\"The task number is less than 1.\");","lastModifiedDate":"2023-02-06"},{"lineNumber":108,"author":{"gitId":"Dadevchia"},"content":"                    }","lastModifiedDate":"2023-02-06"},{"lineNumber":109,"author":{"gitId":"Dadevchia"},"content":"                    //if there is no task at the task number throw an exception","lastModifiedDate":"2023-02-06"},{"lineNumber":110,"author":{"gitId":"Dadevchia"},"content":"                    if(tasks.get(taskNumber-1)\u003d\u003dnull){","lastModifiedDate":"2023-02-08"},{"lineNumber":111,"author":{"gitId":"Dadevchia"},"content":"                        throw new IllegalArgumentException(\"There is no task at the task number.\");","lastModifiedDate":"2023-02-06"},{"lineNumber":112,"author":{"gitId":"Dadevchia"},"content":"                    }","lastModifiedDate":"2023-02-06"},{"lineNumber":113,"author":{"gitId":"Dadevchia"},"content":"                    //if the task is already not done throw an exception","lastModifiedDate":"2023-02-06"},{"lineNumber":114,"author":{"gitId":"Dadevchia"},"content":"                    if(tasks.get(taskNumber-1).isDone\u003d\u003dfalse){","lastModifiedDate":"2023-02-08"},{"lineNumber":115,"author":{"gitId":"Dadevchia"},"content":"                        throw new IllegalArgumentException(\"The task is already not done.\");","lastModifiedDate":"2023-02-06"},{"lineNumber":116,"author":{"gitId":"Dadevchia"},"content":"                    }","lastModifiedDate":"2023-02-06"},{"lineNumber":117,"author":{"gitId":"Dadevchia"},"content":"                    //mark the task as done","lastModifiedDate":"2023-01-29"},{"lineNumber":118,"author":{"gitId":"Dadevchia"},"content":"                    tasks.get(taskNumber-1).markAsNotDone();","lastModifiedDate":"2023-02-08"},{"lineNumber":119,"author":{"gitId":"Dadevchia"},"content":"                    //print out the task that was marked as done","lastModifiedDate":"2023-01-29"},{"lineNumber":120,"author":{"gitId":"Dadevchia"},"content":"                    System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-01-29"},{"lineNumber":121,"author":{"gitId":"Dadevchia"},"content":"                    System.out.println(tasks.get(taskNumber-1));","lastModifiedDate":"2023-02-08"},{"lineNumber":122,"author":{"gitId":"Dadevchia"},"content":"                    //Get user input again","lastModifiedDate":"2023-02-02"},{"lineNumber":123,"author":{"gitId":"Dadevchia"},"content":"                    userInput \u003d userScan.nextLine();          ","lastModifiedDate":"2023-02-02"},{"lineNumber":124,"author":{"gitId":"Dadevchia"},"content":"                }","lastModifiedDate":"2023-01-29"},{"lineNumber":125,"author":{"gitId":"Dadevchia"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":126,"author":{"gitId":"Dadevchia"},"content":"                //If userInput is \"mark\" get the task number and mark the task as done","lastModifiedDate":"2023-01-29"},{"lineNumber":127,"author":{"gitId":"Dadevchia"},"content":"                else if(Check.isMark(userInput)){","lastModifiedDate":"2023-01-29"},{"lineNumber":128,"author":{"gitId":"Dadevchia"},"content":"                    //get the task number","lastModifiedDate":"2023-01-29"},{"lineNumber":129,"author":{"gitId":"Dadevchia"},"content":"                    int taskNumber \u003d Integer.parseInt(userInput.substring(5));","lastModifiedDate":"2023-01-29"},{"lineNumber":130,"author":{"gitId":"Dadevchia"},"content":"                    //if the task number is greater than the task count throw an exception","lastModifiedDate":"2023-02-06"},{"lineNumber":131,"author":{"gitId":"Dadevchia"},"content":"                    if(taskNumber\u003etaskCount){","lastModifiedDate":"2023-02-06"},{"lineNumber":132,"author":{"gitId":"Dadevchia"},"content":"                        throw new IllegalArgumentException(\"The task number is greater than the number of tasks.\");","lastModifiedDate":"2023-02-06"},{"lineNumber":133,"author":{"gitId":"Dadevchia"},"content":"                    }","lastModifiedDate":"2023-02-06"},{"lineNumber":134,"author":{"gitId":"Dadevchia"},"content":"                    //if the task number is less than 1 throw an exception","lastModifiedDate":"2023-02-06"},{"lineNumber":135,"author":{"gitId":"Dadevchia"},"content":"                    if(taskNumber\u003c1){","lastModifiedDate":"2023-02-06"},{"lineNumber":136,"author":{"gitId":"Dadevchia"},"content":"                        throw new IllegalArgumentException(\"The task number is less than 1.\");","lastModifiedDate":"2023-02-06"},{"lineNumber":137,"author":{"gitId":"Dadevchia"},"content":"                    }","lastModifiedDate":"2023-02-06"},{"lineNumber":138,"author":{"gitId":"Dadevchia"},"content":"                    //if there is no task at the task number throw an exception","lastModifiedDate":"2023-02-06"},{"lineNumber":139,"author":{"gitId":"Dadevchia"},"content":"                    if(tasks.get(taskNumber-1)\u003d\u003dnull){","lastModifiedDate":"2023-02-08"},{"lineNumber":140,"author":{"gitId":"Dadevchia"},"content":"                        throw new IllegalArgumentException(\"There is no task at the task number.\");","lastModifiedDate":"2023-02-06"},{"lineNumber":141,"author":{"gitId":"Dadevchia"},"content":"                    }","lastModifiedDate":"2023-02-06"},{"lineNumber":142,"author":{"gitId":"Dadevchia"},"content":"                    //if the task is already done throw an exception","lastModifiedDate":"2023-02-06"},{"lineNumber":143,"author":{"gitId":"Dadevchia"},"content":"                    if(tasks.get(taskNumber-1).isDone\u003d\u003dtrue){","lastModifiedDate":"2023-02-08"},{"lineNumber":144,"author":{"gitId":"Dadevchia"},"content":"                        throw new IllegalArgumentException(\"The task is already done.\");","lastModifiedDate":"2023-02-06"},{"lineNumber":145,"author":{"gitId":"Dadevchia"},"content":"                    }","lastModifiedDate":"2023-02-06"},{"lineNumber":146,"author":{"gitId":"Dadevchia"},"content":"                    //mark the task as done","lastModifiedDate":"2023-01-29"},{"lineNumber":147,"author":{"gitId":"Dadevchia"},"content":"                    tasks.get(taskNumber-1).markAsDone();","lastModifiedDate":"2023-02-08"},{"lineNumber":148,"author":{"gitId":"Dadevchia"},"content":"                    //print out the task that was marked as done","lastModifiedDate":"2023-01-29"},{"lineNumber":149,"author":{"gitId":"Dadevchia"},"content":"                    System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-01-29"},{"lineNumber":150,"author":{"gitId":"Dadevchia"},"content":"                    System.out.println(tasks.get(taskNumber-1));","lastModifiedDate":"2023-02-08"},{"lineNumber":151,"author":{"gitId":"Dadevchia"},"content":"                    //Get user input again","lastModifiedDate":"2023-02-02"},{"lineNumber":152,"author":{"gitId":"Dadevchia"},"content":"                    userInput \u003d userScan.nextLine();              ","lastModifiedDate":"2023-02-02"},{"lineNumber":153,"author":{"gitId":"Dadevchia"},"content":"                }","lastModifiedDate":"2023-01-29"},{"lineNumber":154,"author":{"gitId":"Dadevchia"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":155,"author":{"gitId":"Dadevchia"},"content":"                //If userInput is \"todo\" add a todo task to the list","lastModifiedDate":"2023-01-29"},{"lineNumber":156,"author":{"gitId":"Dadevchia"},"content":"                else if(Check.isTodo(userInput)){","lastModifiedDate":"2023-01-29"},{"lineNumber":157,"author":{"gitId":"Dadevchia"},"content":"                    //get the task name","lastModifiedDate":"2023-01-29"},{"lineNumber":158,"author":{"gitId":"Dadevchia"},"content":"                    String taskName \u003d userInput.substring(5);","lastModifiedDate":"2023-01-29"},{"lineNumber":159,"author":{"gitId":"Dadevchia"},"content":"                    //If the task name is empty throw an exception","lastModifiedDate":"2023-02-06"},{"lineNumber":160,"author":{"gitId":"Dadevchia"},"content":"                    if(taskName.equals(\"\")){","lastModifiedDate":"2023-02-06"},{"lineNumber":161,"author":{"gitId":"Dadevchia"},"content":"                        throw new IllegalArgumentException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2023-02-06"},{"lineNumber":162,"author":{"gitId":"Dadevchia"},"content":"                    }","lastModifiedDate":"2023-02-06"},{"lineNumber":163,"author":{"gitId":"Dadevchia"},"content":"                    //create a todo task","lastModifiedDate":"2023-01-29"},{"lineNumber":164,"author":{"gitId":"Dadevchia"},"content":"                    tasks.add(new Todo(taskName));","lastModifiedDate":"2023-02-08"},{"lineNumber":165,"author":{"gitId":"Dadevchia"},"content":"                    //increment the task count","lastModifiedDate":"2023-01-29"},{"lineNumber":166,"author":{"gitId":"Dadevchia"},"content":"                    taskCount++;","lastModifiedDate":"2023-01-29"},{"lineNumber":167,"author":{"gitId":"Dadevchia"},"content":"                    //print out the task that was added","lastModifiedDate":"2023-01-29"},{"lineNumber":168,"author":{"gitId":"Dadevchia"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-29"},{"lineNumber":169,"author":{"gitId":"Dadevchia"},"content":"                    System.out.println(tasks.get(taskCount-1));","lastModifiedDate":"2023-02-08"},{"lineNumber":170,"author":{"gitId":"Dadevchia"},"content":"                    System.out.println(\"Now you have \" + taskCount + \" tasks in the list.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":171,"author":{"gitId":"Dadevchia"},"content":"                    //Get user input again","lastModifiedDate":"2023-02-02"},{"lineNumber":172,"author":{"gitId":"Dadevchia"},"content":"                    userInput \u003d userScan.nextLine();  ","lastModifiedDate":"2023-02-02"},{"lineNumber":173,"author":{"gitId":"Dadevchia"},"content":"                }","lastModifiedDate":"2023-01-29"},{"lineNumber":174,"author":{"gitId":"Dadevchia"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":175,"author":{"gitId":"Dadevchia"},"content":"                //If userInput is \"deadline\" add a deadline task to the list","lastModifiedDate":"2023-01-29"},{"lineNumber":176,"author":{"gitId":"Dadevchia"},"content":"                else if(Check.isDeadline(userInput)){","lastModifiedDate":"2023-01-29"},{"lineNumber":177,"author":{"gitId":"Dadevchia"},"content":"                    //get the task name","lastModifiedDate":"2023-01-29"},{"lineNumber":178,"author":{"gitId":"Dadevchia"},"content":"                    String taskName \u003d userInput.substring(9,userInput.indexOf(\"/\"));","lastModifiedDate":"2023-01-29"},{"lineNumber":179,"author":{"gitId":"Dadevchia"},"content":"                    //get the deadline string without any \"/\"","lastModifiedDate":"2023-01-29"},{"lineNumber":180,"author":{"gitId":"Dadevchia"},"content":"                    String deadline \u003d userInput.substring(userInput.indexOf(\"/\")).replace(\"/\",\"\");","lastModifiedDate":"2023-01-29"},{"lineNumber":181,"author":{"gitId":"Dadevchia"},"content":"                    //If the task name is empty throw an exception","lastModifiedDate":"2023-02-06"},{"lineNumber":182,"author":{"gitId":"Dadevchia"},"content":"                    if(taskName.equals(\"\")){","lastModifiedDate":"2023-02-06"},{"lineNumber":183,"author":{"gitId":"Dadevchia"},"content":"                        throw new IllegalArgumentException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-02-06"},{"lineNumber":184,"author":{"gitId":"Dadevchia"},"content":"                    }","lastModifiedDate":"2023-02-06"},{"lineNumber":185,"author":{"gitId":"Dadevchia"},"content":"                    //If the deadline is empty throw an exception","lastModifiedDate":"2023-02-06"},{"lineNumber":186,"author":{"gitId":"Dadevchia"},"content":"                    if(deadline.equals(\"\")){","lastModifiedDate":"2023-02-06"},{"lineNumber":187,"author":{"gitId":"Dadevchia"},"content":"                        throw new IllegalArgumentException(\"The deadline of a deadline cannot be empty. Add a / argument to specify time.\");","lastModifiedDate":"2023-02-06"},{"lineNumber":188,"author":{"gitId":"Dadevchia"},"content":"                    }","lastModifiedDate":"2023-02-06"},{"lineNumber":189,"author":{"gitId":"Dadevchia"},"content":"                    //create a deadline task","lastModifiedDate":"2023-01-29"},{"lineNumber":190,"author":{"gitId":"Dadevchia"},"content":"                    tasks.add(new Deadline(taskName,deadline));","lastModifiedDate":"2023-02-08"},{"lineNumber":191,"author":{"gitId":"Dadevchia"},"content":"                    //increment the task count","lastModifiedDate":"2023-01-29"},{"lineNumber":192,"author":{"gitId":"Dadevchia"},"content":"                    taskCount++;","lastModifiedDate":"2023-01-29"},{"lineNumber":193,"author":{"gitId":"Dadevchia"},"content":"                    //print out the task that was added","lastModifiedDate":"2023-01-29"},{"lineNumber":194,"author":{"gitId":"Dadevchia"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-29"},{"lineNumber":195,"author":{"gitId":"Dadevchia"},"content":"                    System.out.println(tasks.get(taskCount-1));","lastModifiedDate":"2023-02-08"},{"lineNumber":196,"author":{"gitId":"Dadevchia"},"content":"                    System.out.println(\"Now you have \" + taskCount + \" tasks in the list.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":197,"author":{"gitId":"Dadevchia"},"content":"                    //Get user input again","lastModifiedDate":"2023-02-02"},{"lineNumber":198,"author":{"gitId":"Dadevchia"},"content":"                    userInput \u003d userScan.nextLine();  ","lastModifiedDate":"2023-02-02"},{"lineNumber":199,"author":{"gitId":"Dadevchia"},"content":"                }","lastModifiedDate":"2023-01-29"},{"lineNumber":200,"author":{"gitId":"Dadevchia"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":201,"author":{"gitId":"Dadevchia"},"content":"                //If userInput is \"event\" add an event task to the list","lastModifiedDate":"2023-01-29"},{"lineNumber":202,"author":{"gitId":"Dadevchia"},"content":"                else if(Check.isEvent(userInput)){","lastModifiedDate":"2023-01-29"},{"lineNumber":203,"author":{"gitId":"Dadevchia"},"content":"                    //get the task name","lastModifiedDate":"2023-01-29"},{"lineNumber":204,"author":{"gitId":"Dadevchia"},"content":"                    String taskName \u003d userInput.substring(6,userInput.indexOf(\"/\"));","lastModifiedDate":"2023-01-29"},{"lineNumber":205,"author":{"gitId":"Dadevchia"},"content":"                    //get the event time without any \"/\"","lastModifiedDate":"2023-01-29"},{"lineNumber":206,"author":{"gitId":"Dadevchia"},"content":"                    String eventTime \u003d userInput.substring(userInput.indexOf(\"/\")).replace(\"/\",\"\");","lastModifiedDate":"2023-01-29"},{"lineNumber":207,"author":{"gitId":"Dadevchia"},"content":"                    //create an event task","lastModifiedDate":"2023-01-29"},{"lineNumber":208,"author":{"gitId":"Dadevchia"},"content":"                    //if the taskname is empty throw an exception","lastModifiedDate":"2023-02-06"},{"lineNumber":209,"author":{"gitId":"Dadevchia"},"content":"                    if(taskName.equals(\"\")){","lastModifiedDate":"2023-02-06"},{"lineNumber":210,"author":{"gitId":"Dadevchia"},"content":"                        throw new IllegalArgumentException(\"The description of an event cannot be empty.\");","lastModifiedDate":"2023-02-06"},{"lineNumber":211,"author":{"gitId":"Dadevchia"},"content":"                    }","lastModifiedDate":"2023-02-06"},{"lineNumber":212,"author":{"gitId":"Dadevchia"},"content":"                    //if the event time is empty throw an exception","lastModifiedDate":"2023-02-06"},{"lineNumber":213,"author":{"gitId":"Dadevchia"},"content":"                    if(eventTime.equals(\"\")){","lastModifiedDate":"2023-02-06"},{"lineNumber":214,"author":{"gitId":"Dadevchia"},"content":"                        throw new IllegalArgumentException(\"The event time of an event cannot be empty. Add a / argument to specify time.\");","lastModifiedDate":"2023-02-06"},{"lineNumber":215,"author":{"gitId":"Dadevchia"},"content":"                    }","lastModifiedDate":"2023-02-06"},{"lineNumber":216,"author":{"gitId":"Dadevchia"},"content":"                    //create an event task","lastModifiedDate":"2023-02-08"},{"lineNumber":217,"author":{"gitId":"Dadevchia"},"content":"                    tasks.add(new Event(taskName,eventTime));","lastModifiedDate":"2023-02-08"},{"lineNumber":218,"author":{"gitId":"Dadevchia"},"content":"                    //increment the task count","lastModifiedDate":"2023-01-29"},{"lineNumber":219,"author":{"gitId":"Dadevchia"},"content":"                    taskCount++;","lastModifiedDate":"2023-01-29"},{"lineNumber":220,"author":{"gitId":"Dadevchia"},"content":"                    //print out the task that was added","lastModifiedDate":"2023-01-29"},{"lineNumber":221,"author":{"gitId":"Dadevchia"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-29"},{"lineNumber":222,"author":{"gitId":"Dadevchia"},"content":"                    System.out.println(tasks.get(taskCount-1));","lastModifiedDate":"2023-02-08"},{"lineNumber":223,"author":{"gitId":"Dadevchia"},"content":"                    System.out.println(\"Now you have \" + taskCount + \" tasks in the list.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":224,"author":{"gitId":"Dadevchia"},"content":"                    //Get user input again","lastModifiedDate":"2023-02-02"},{"lineNumber":225,"author":{"gitId":"Dadevchia"},"content":"                    userInput \u003d userScan.nextLine();  ","lastModifiedDate":"2023-02-02"},{"lineNumber":226,"author":{"gitId":"Dadevchia"},"content":"                }","lastModifiedDate":"2023-02-08"},{"lineNumber":227,"author":{"gitId":"Dadevchia"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":228,"author":{"gitId":"Dadevchia"},"content":"                //Add delete keyword and function","lastModifiedDate":"2023-02-08"},{"lineNumber":229,"author":{"gitId":"Dadevchia"},"content":"                else if(Check.isDelete(userInput)){","lastModifiedDate":"2023-02-08"},{"lineNumber":230,"author":{"gitId":"Dadevchia"},"content":"                    //get the task number","lastModifiedDate":"2023-02-08"},{"lineNumber":231,"author":{"gitId":"Dadevchia"},"content":"                    int taskNumber \u003d Integer.parseInt(userInput.substring(7));","lastModifiedDate":"2023-02-08"},{"lineNumber":232,"author":{"gitId":"Dadevchia"},"content":"                    //if the task number is greater than the task count throw an exception","lastModifiedDate":"2023-02-08"},{"lineNumber":233,"author":{"gitId":"Dadevchia"},"content":"                    if(taskNumber\u003etaskCount){","lastModifiedDate":"2023-02-08"},{"lineNumber":234,"author":{"gitId":"Dadevchia"},"content":"                        throw new IllegalArgumentException(\"The task number is greater than the number of tasks.\");","lastModifiedDate":"2023-02-08"},{"lineNumber":235,"author":{"gitId":"Dadevchia"},"content":"                    }","lastModifiedDate":"2023-02-08"},{"lineNumber":236,"author":{"gitId":"Dadevchia"},"content":"                    //if the task number is less than 1 throw an exception","lastModifiedDate":"2023-02-08"},{"lineNumber":237,"author":{"gitId":"Dadevchia"},"content":"                    if(taskNumber\u003c1){","lastModifiedDate":"2023-02-08"},{"lineNumber":238,"author":{"gitId":"Dadevchia"},"content":"                        throw new IllegalArgumentException(\"The task number is less than 1.\");","lastModifiedDate":"2023-02-08"},{"lineNumber":239,"author":{"gitId":"Dadevchia"},"content":"                    }","lastModifiedDate":"2023-02-08"},{"lineNumber":240,"author":{"gitId":"Dadevchia"},"content":"                    //if there is no task at the task number throw an exception","lastModifiedDate":"2023-02-08"},{"lineNumber":241,"author":{"gitId":"Dadevchia"},"content":"                    if(tasks.get(taskNumber-1)\u003d\u003dnull){","lastModifiedDate":"2023-02-08"},{"lineNumber":242,"author":{"gitId":"Dadevchia"},"content":"                        throw new IllegalArgumentException(\"There is no task at the task number.\");","lastModifiedDate":"2023-02-08"},{"lineNumber":243,"author":{"gitId":"Dadevchia"},"content":"                    }","lastModifiedDate":"2023-02-08"},{"lineNumber":244,"author":{"gitId":"Dadevchia"},"content":"                    //delete the task","lastModifiedDate":"2023-02-08"},{"lineNumber":245,"author":{"gitId":"Dadevchia"},"content":"                    tasks.remove(taskNumber-1);","lastModifiedDate":"2023-02-08"},{"lineNumber":246,"author":{"gitId":"Dadevchia"},"content":"                    //decrement the task count","lastModifiedDate":"2023-02-08"},{"lineNumber":247,"author":{"gitId":"Dadevchia"},"content":"                    taskCount--;","lastModifiedDate":"2023-02-08"},{"lineNumber":248,"author":{"gitId":"Dadevchia"},"content":"                    //print out the task that was deleted","lastModifiedDate":"2023-02-08"},{"lineNumber":249,"author":{"gitId":"Dadevchia"},"content":"                    System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-02-08"},{"lineNumber":250,"author":{"gitId":"Dadevchia"},"content":"                    System.out.println(tasks.get(taskNumber-1));","lastModifiedDate":"2023-02-08"},{"lineNumber":251,"author":{"gitId":"Dadevchia"},"content":"                    System.out.println(\"Now you have \" + taskCount + \" tasks in the list.\");","lastModifiedDate":"2023-02-08"},{"lineNumber":252,"author":{"gitId":"Dadevchia"},"content":"                    //Get user input again","lastModifiedDate":"2023-02-08"},{"lineNumber":253,"author":{"gitId":"Dadevchia"},"content":"                    userInput \u003d userScan.nextLine();  ","lastModifiedDate":"2023-02-08"},{"lineNumber":254,"author":{"gitId":"Dadevchia"},"content":"                }","lastModifiedDate":"2023-01-29"},{"lineNumber":255,"author":{"gitId":"Dadevchia"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":256,"author":{"gitId":"Dadevchia"},"content":"                //If userInput is not any of the commands throw an illegal argument exception","lastModifiedDate":"2023-02-06"},{"lineNumber":257,"author":{"gitId":"Dadevchia"},"content":"                else{","lastModifiedDate":"2023-01-29"},{"lineNumber":258,"author":{"gitId":"Dadevchia"},"content":"                    //throw an exception","lastModifiedDate":"2023-02-06"},{"lineNumber":259,"author":{"gitId":"Dadevchia"},"content":"                    throw new IllegalArgumentException(\"Invalid command. Please try again.\");     ","lastModifiedDate":"2023-02-06"},{"lineNumber":260,"author":{"gitId":"Dadevchia"},"content":"                }","lastModifiedDate":"2023-02-06"},{"lineNumber":261,"author":{"gitId":"Dadevchia"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":262,"author":{"gitId":"Dadevchia"},"content":"            }","lastModifiedDate":"2023-02-06"},{"lineNumber":263,"author":{"gitId":"Dadevchia"},"content":"            catch (IllegalArgumentException e){","lastModifiedDate":"2023-02-06"},{"lineNumber":264,"author":{"gitId":"Dadevchia"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-02-06"},{"lineNumber":265,"author":{"gitId":"Dadevchia"},"content":"                //Get user input again","lastModifiedDate":"2023-02-06"},{"lineNumber":266,"author":{"gitId":"Dadevchia"},"content":"                userInput \u003d userScan.nextLine();  ","lastModifiedDate":"2023-02-06"},{"lineNumber":267,"author":{"gitId":"Dadevchia"},"content":"            }","lastModifiedDate":"2023-02-06"},{"lineNumber":268,"author":{"gitId":"Dadevchia"},"content":"            catch (StringIndexOutOfBoundsException e){","lastModifiedDate":"2023-02-06"},{"lineNumber":269,"author":{"gitId":"Dadevchia"},"content":"               System.out.println(\"Invalid date entered. Please try again and enter / before the date.\");","lastModifiedDate":"2023-02-06"},{"lineNumber":270,"author":{"gitId":"Dadevchia"},"content":"                //Get user input again","lastModifiedDate":"2023-02-02"},{"lineNumber":271,"author":{"gitId":"Dadevchia"},"content":"                userInput \u003d userScan.nextLine();","lastModifiedDate":"2023-02-02"},{"lineNumber":272,"author":{"gitId":"Dadevchia"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":273,"author":{"gitId":"Dadevchia"},"content":"            catch (IndexOutOfBoundsException e){","lastModifiedDate":"2023-02-08"},{"lineNumber":274,"author":{"gitId":"Dadevchia"},"content":"                System.out.println(\"There are currently no tasks in the list. \");","lastModifiedDate":"2023-02-08"},{"lineNumber":275,"author":{"gitId":"Dadevchia"},"content":"                //Get user input again","lastModifiedDate":"2023-02-08"},{"lineNumber":276,"author":{"gitId":"Dadevchia"},"content":"                userInput \u003d userScan.nextLine();","lastModifiedDate":"2023-02-08"},{"lineNumber":277,"author":{"gitId":"Dadevchia"},"content":"            }","lastModifiedDate":"2023-02-08"},{"lineNumber":278,"author":{"gitId":"Dadevchia"},"content":"            ","lastModifiedDate":"2023-02-08"},{"lineNumber":279,"author":{"gitId":"Dadevchia"},"content":"            ","lastModifiedDate":"2023-02-02"},{"lineNumber":280,"author":{"gitId":"Dadevchia"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":281,"author":{"gitId":"Dadevchia"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":282,"author":{"gitId":"Dadevchia"},"content":"        //Print out a goodbye message","lastModifiedDate":"2023-01-29"},{"lineNumber":283,"author":{"gitId":"Dadevchia"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-29"},{"lineNumber":284,"author":{"gitId":"Dadevchia"},"content":"        ","lastModifiedDate":"2023-01-29"},{"lineNumber":285,"author":{"gitId":"Dadevchia"},"content":"        //Close the scanner","lastModifiedDate":"2023-01-29"},{"lineNumber":286,"author":{"gitId":"Dadevchia"},"content":"        userScan.close();","lastModifiedDate":"2023-01-29"},{"lineNumber":287,"author":{"gitId":"Dadevchia"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":288,"author":{"gitId":"Dadevchia"},"content":"        //Write the tasks to the file","lastModifiedDate":"2023-02-08"},{"lineNumber":289,"author":{"gitId":"Dadevchia"},"content":"        FileRW.writeToFile(tasks, taskCount);","lastModifiedDate":"2023-02-09"},{"lineNumber":290,"author":{"gitId":"Dadevchia"},"content":"        ","lastModifiedDate":"2023-02-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":292,"author":{"gitId":"Dadevchia"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Dadevchia":283,"-":10}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dadevchia"},"content":"//Implement a class DukeException that extends the Exception class. ","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"Dadevchia"},"content":"//This class should be able to handle the different exceptions that may occur in your program.","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"Dadevchia"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"Dadevchia"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"Dadevchia"},"content":"    //CommandException","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"Dadevchia"},"content":"    // Constructor that accepts a message","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"Dadevchia"},"content":"    public DukeException(String message)","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"Dadevchia"},"content":"    {","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"Dadevchia"},"content":"       super(message);","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"Dadevchia"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"Dadevchia"},"content":"    // Constructor that accepts a message and a cause","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"Dadevchia"},"content":"    public DukeException(String message, Throwable cause)","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"Dadevchia"},"content":"    {","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"Dadevchia"},"content":"       super(message, cause);","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"Dadevchia"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"Dadevchia"},"content":"    // Constructor that accepts a cause","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"Dadevchia"},"content":"    public DukeException(Throwable cause)","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"Dadevchia"},"content":"    {","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"Dadevchia"},"content":"       super(cause);","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"Dadevchia"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"Dadevchia"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"Dadevchia"},"content":"    //methods","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"Dadevchia"},"content":"    public void printError(){","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"Dadevchia"},"content":"        System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"Dadevchia"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"Dadevchia"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"Dadevchia"},"content":"    public void printError(String message){","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"Dadevchia"},"content":"        System.out.println(\"☹ OOPS!!! \" + message);","lastModifiedDate":"2023-02-06"},{"lineNumber":29,"author":{"gitId":"Dadevchia"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"Dadevchia"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"Dadevchia"},"content":"    public void printError(String message, String command){","lastModifiedDate":"2023-02-06"},{"lineNumber":32,"author":{"gitId":"Dadevchia"},"content":"        System.out.println(\"☹ OOPS!!! \" + message + \" \" + command);","lastModifiedDate":"2023-02-06"},{"lineNumber":33,"author":{"gitId":"Dadevchia"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":34,"author":{"gitId":"Dadevchia"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":35,"author":{"gitId":"Dadevchia"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":36,"author":{"gitId":"Dadevchia"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"Dadevchia":36}},{"path":"src/main/java/FileRW.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dadevchia"},"content":"import java.util.Scanner;  // Import the Scanner class","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"Dadevchia"},"content":"import java.io.File; // Import the File class","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"Dadevchia"},"content":"import java.io.FileWriter; // Import the FileWriter class","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"Dadevchia"},"content":"import java.io.BufferedWriter; // Import the BufferedWriter class","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"Dadevchia"},"content":"import java.io.IOException; // Import the IOException class to handle errors","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"Dadevchia"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"Dadevchia"},"content":"public class FileRW {","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"Dadevchia"},"content":"   ","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"Dadevchia"},"content":"    //method that takes in input tasks and taskCount and reads the file and writes the tasks into the array","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"Dadevchia"},"content":"    public static void readFromFile(Task[] tasks, int taskCount)  {","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"Dadevchia"},"content":"        //check if there is a file to read from","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"Dadevchia"},"content":"        try{","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"Dadevchia"},"content":"            File file \u003d new File(\"data/duke.txt\");","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"Dadevchia"},"content":"            Scanner fileScan \u003d new Scanner(file);","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"Dadevchia"},"content":"            while(fileScan.hasNextLine()){","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"Dadevchia"},"content":"                String line \u003d fileScan.nextLine();","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"Dadevchia"},"content":"                String[] lineSplit \u003d line.split(\" \\\\| \");","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"Dadevchia"},"content":"                if(lineSplit[0].equals(\"T\")){","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"Dadevchia"},"content":"                    tasks[taskCount] \u003d new Todo(lineSplit[2]);","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"Dadevchia"},"content":"                    if(lineSplit.length \u003e 3){","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"Dadevchia"},"content":"                        throw new DukeException(\"Your data file is corrupted\");","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"Dadevchia"},"content":"                    }","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"Dadevchia"},"content":"                    if(lineSplit[1].equals(\"true\")){","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"Dadevchia"},"content":"                        tasks[taskCount].markAsDone();","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"Dadevchia"},"content":"                    }","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"Dadevchia"},"content":"                    taskCount++;","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"Dadevchia"},"content":"                }else if(lineSplit[0].equals(\"D\")){","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"Dadevchia"},"content":"                    if(lineSplit.length \u003e 4){","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"Dadevchia"},"content":"                        throw new DukeException(\"Your data file is corrupted\");","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"Dadevchia"},"content":"                    }","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"Dadevchia"},"content":"                    tasks[taskCount] \u003d new Deadline(lineSplit[2], lineSplit[3]);","lastModifiedDate":"2023-02-09"},{"lineNumber":32,"author":{"gitId":"Dadevchia"},"content":"                    if(lineSplit[1].equals(\"true\")){","lastModifiedDate":"2023-02-09"},{"lineNumber":33,"author":{"gitId":"Dadevchia"},"content":"                        tasks[taskCount].markAsDone();","lastModifiedDate":"2023-02-09"},{"lineNumber":34,"author":{"gitId":"Dadevchia"},"content":"                    }","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"Dadevchia"},"content":"                    taskCount++;","lastModifiedDate":"2023-02-09"},{"lineNumber":36,"author":{"gitId":"Dadevchia"},"content":"                }else if(lineSplit[0].equals(\"E\")){","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"Dadevchia"},"content":"                    if(lineSplit.length \u003e 4){","lastModifiedDate":"2023-02-09"},{"lineNumber":38,"author":{"gitId":"Dadevchia"},"content":"                        throw new DukeException(\"Your data file is corrupted\");","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"Dadevchia"},"content":"                    }","lastModifiedDate":"2023-02-09"},{"lineNumber":40,"author":{"gitId":"Dadevchia"},"content":"                    tasks[taskCount] \u003d new Event(lineSplit[2], lineSplit[3]);","lastModifiedDate":"2023-02-09"},{"lineNumber":41,"author":{"gitId":"Dadevchia"},"content":"                    if(lineSplit[1].equals(\"true\")){","lastModifiedDate":"2023-02-09"},{"lineNumber":42,"author":{"gitId":"Dadevchia"},"content":"                        tasks[taskCount].markAsDone();","lastModifiedDate":"2023-02-09"},{"lineNumber":43,"author":{"gitId":"Dadevchia"},"content":"                    }","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"Dadevchia"},"content":"                    taskCount++;","lastModifiedDate":"2023-02-09"},{"lineNumber":45,"author":{"gitId":"Dadevchia"},"content":"                }","lastModifiedDate":"2023-02-09"},{"lineNumber":46,"author":{"gitId":"Dadevchia"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":47,"author":{"gitId":"Dadevchia"},"content":"            //print the tasks in the file","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"Dadevchia"},"content":"            ","lastModifiedDate":"2023-02-09"},{"lineNumber":49,"author":{"gitId":"Dadevchia"},"content":"            fileScan.close();","lastModifiedDate":"2023-02-09"},{"lineNumber":50,"author":{"gitId":"Dadevchia"},"content":"        //otherwise create a new file","lastModifiedDate":"2023-02-09"},{"lineNumber":51,"author":{"gitId":"Dadevchia"},"content":"        } catch(Exception e){","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"Dadevchia"},"content":"            //Create a new file and directory","lastModifiedDate":"2023-02-09"},{"lineNumber":53,"author":{"gitId":"Dadevchia"},"content":"            try{","lastModifiedDate":"2023-02-09"},{"lineNumber":54,"author":{"gitId":"Dadevchia"},"content":"                File file \u003d new File(\"data/duke.txt\");","lastModifiedDate":"2023-02-09"},{"lineNumber":55,"author":{"gitId":"Dadevchia"},"content":"                file.getParentFile().mkdirs();","lastModifiedDate":"2023-02-09"},{"lineNumber":56,"author":{"gitId":"Dadevchia"},"content":"                file.createNewFile();","lastModifiedDate":"2023-02-09"},{"lineNumber":57,"author":{"gitId":"Dadevchia"},"content":"            }catch(Exception e1){","lastModifiedDate":"2023-02-09"},{"lineNumber":58,"author":{"gitId":"Dadevchia"},"content":"                e1.printStackTrace();","lastModifiedDate":"2023-02-09"},{"lineNumber":59,"author":{"gitId":"Dadevchia"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":60,"author":{"gitId":"Dadevchia"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":61,"author":{"gitId":"Dadevchia"},"content":"        ","lastModifiedDate":"2023-02-09"},{"lineNumber":62,"author":{"gitId":"Dadevchia"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":63,"author":{"gitId":"Dadevchia"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":64,"author":{"gitId":"Dadevchia"},"content":"    //method that takes in input tasks and taskCount and writes the tasks into the file","lastModifiedDate":"2023-02-09"},{"lineNumber":65,"author":{"gitId":"Dadevchia"},"content":"    public static void writeToFile(Task[] tasks, int taskCount)  {","lastModifiedDate":"2023-02-09"},{"lineNumber":66,"author":{"gitId":"Dadevchia"},"content":"        //Save the tasks to the file","lastModifiedDate":"2023-02-09"},{"lineNumber":67,"author":{"gitId":"Dadevchia"},"content":"        try{","lastModifiedDate":"2023-02-09"},{"lineNumber":68,"author":{"gitId":"Dadevchia"},"content":"            //Create a file writer","lastModifiedDate":"2023-02-09"},{"lineNumber":69,"author":{"gitId":"Dadevchia"},"content":"            FileWriter fw \u003d new FileWriter(\"data/duke.txt\");","lastModifiedDate":"2023-02-09"},{"lineNumber":70,"author":{"gitId":"Dadevchia"},"content":"            //Erase the file","lastModifiedDate":"2023-02-09"},{"lineNumber":71,"author":{"gitId":"Dadevchia"},"content":"            fw.write(\"\");","lastModifiedDate":"2023-02-09"},{"lineNumber":72,"author":{"gitId":"Dadevchia"},"content":"            //Create a buffered writer","lastModifiedDate":"2023-02-09"},{"lineNumber":73,"author":{"gitId":"Dadevchia"},"content":"            BufferedWriter bw \u003d new BufferedWriter(fw);","lastModifiedDate":"2023-02-09"},{"lineNumber":74,"author":{"gitId":"Dadevchia"},"content":"            //Write the tasks to the file","lastModifiedDate":"2023-02-09"},{"lineNumber":75,"author":{"gitId":"Dadevchia"},"content":"            for(int i\u003d0;i\u003ctaskCount;i++){","lastModifiedDate":"2023-02-09"},{"lineNumber":76,"author":{"gitId":"Dadevchia"},"content":"                //if the task is a todo","lastModifiedDate":"2023-02-09"},{"lineNumber":77,"author":{"gitId":"Dadevchia"},"content":"                if(tasks[i] instanceof Todo){","lastModifiedDate":"2023-02-09"},{"lineNumber":78,"author":{"gitId":"Dadevchia"},"content":"                    //write the task to the file","lastModifiedDate":"2023-02-09"},{"lineNumber":79,"author":{"gitId":"Dadevchia"},"content":"                    bw.write(\"T | \" + tasks[i].isDone + \" | \" + tasks[i].taskName);","lastModifiedDate":"2023-02-09"},{"lineNumber":80,"author":{"gitId":"Dadevchia"},"content":"                    bw.newLine();","lastModifiedDate":"2023-02-09"},{"lineNumber":81,"author":{"gitId":"Dadevchia"},"content":"                }","lastModifiedDate":"2023-02-09"},{"lineNumber":82,"author":{"gitId":"Dadevchia"},"content":"                //if the task is a deadline","lastModifiedDate":"2023-02-09"},{"lineNumber":83,"author":{"gitId":"Dadevchia"},"content":"                else if(tasks[i] instanceof Deadline){","lastModifiedDate":"2023-02-09"},{"lineNumber":84,"author":{"gitId":"Dadevchia"},"content":"                    //write the task to the file","lastModifiedDate":"2023-02-09"},{"lineNumber":85,"author":{"gitId":"Dadevchia"},"content":"                    bw.write(\"D | \" + tasks[i].isDone + \" | \" + tasks[i].taskName + \" | \" + ((Deadline) tasks[i]).deadline);","lastModifiedDate":"2023-02-09"},{"lineNumber":86,"author":{"gitId":"Dadevchia"},"content":"                    bw.newLine();","lastModifiedDate":"2023-02-09"},{"lineNumber":87,"author":{"gitId":"Dadevchia"},"content":"                }","lastModifiedDate":"2023-02-09"},{"lineNumber":88,"author":{"gitId":"Dadevchia"},"content":"                //if the task is an event","lastModifiedDate":"2023-02-09"},{"lineNumber":89,"author":{"gitId":"Dadevchia"},"content":"                else if(tasks[i] instanceof Event){","lastModifiedDate":"2023-02-09"},{"lineNumber":90,"author":{"gitId":"Dadevchia"},"content":"                    //write the task to the file","lastModifiedDate":"2023-02-09"},{"lineNumber":91,"author":{"gitId":"Dadevchia"},"content":"                    bw.write(\"E | \" + tasks[i].isDone + \" | \" + tasks[i].taskName + \" | \" + ((Event) tasks[i]).eventTime);","lastModifiedDate":"2023-02-09"},{"lineNumber":92,"author":{"gitId":"Dadevchia"},"content":"                    bw.newLine();","lastModifiedDate":"2023-02-09"},{"lineNumber":93,"author":{"gitId":"Dadevchia"},"content":"                }","lastModifiedDate":"2023-02-09"},{"lineNumber":94,"author":{"gitId":"Dadevchia"},"content":"            } ","lastModifiedDate":"2023-02-09"},{"lineNumber":95,"author":{"gitId":"Dadevchia"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":96,"author":{"gitId":"Dadevchia"},"content":"            //Close the buffered writer","lastModifiedDate":"2023-02-09"},{"lineNumber":97,"author":{"gitId":"Dadevchia"},"content":"            bw.close();","lastModifiedDate":"2023-02-09"},{"lineNumber":98,"author":{"gitId":"Dadevchia"},"content":"    ","lastModifiedDate":"2023-02-09"},{"lineNumber":99,"author":{"gitId":"Dadevchia"},"content":"            //Close the file writer","lastModifiedDate":"2023-02-09"},{"lineNumber":100,"author":{"gitId":"Dadevchia"},"content":"            fw.close();","lastModifiedDate":"2023-02-09"},{"lineNumber":101,"author":{"gitId":"Dadevchia"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":102,"author":{"gitId":"Dadevchia"},"content":"        } catch(IOException e){","lastModifiedDate":"2023-02-09"},{"lineNumber":103,"author":{"gitId":"Dadevchia"},"content":"            System.out.println(\"Error writing to file.\");","lastModifiedDate":"2023-02-09"},{"lineNumber":104,"author":{"gitId":"Dadevchia"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":105,"author":{"gitId":"Dadevchia"},"content":"        ","lastModifiedDate":"2023-02-09"},{"lineNumber":106,"author":{"gitId":"Dadevchia"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":107,"author":{"gitId":"Dadevchia"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":108,"author":{"gitId":"Dadevchia"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"Dadevchia":108}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dadevchia"},"content":"//Create a task class","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Dadevchia"},"content":"public class Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Dadevchia"},"content":"    protected String taskName;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Dadevchia"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Dadevchia"},"content":"    public Task(String taskName){","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Dadevchia"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Dadevchia"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Dadevchia"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Dadevchia"},"content":"    //method to mark as done","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Dadevchia"},"content":"    public void markAsDone(){","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Dadevchia"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Dadevchia"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Dadevchia"},"content":"    //method to mark as not done","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Dadevchia"},"content":"    public void markAsNotDone(){","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Dadevchia"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Dadevchia"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Dadevchia"},"content":"    //toString method to print the status of the task followed by the task name","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Dadevchia"},"content":"    public String toString(){","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Dadevchia"},"content":"        if(this.isDone){","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Dadevchia"},"content":"            return \"[X] \" + this.taskName;","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Dadevchia"},"content":"        }else{","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Dadevchia"},"content":"            return \"[ ] \" + this.taskName;","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Dadevchia"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"Dadevchia"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"Dadevchia"},"content":"}","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"Dadevchia"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"Dadevchia"},"content":"//Create a todo class that inherits from the task class","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Dadevchia"},"content":"class Todo extends Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"Dadevchia"},"content":"    protected Todo(String taskName){","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"Dadevchia"},"content":"        super(taskName);","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"Dadevchia"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Dadevchia"},"content":"    //toString method to print the status of the task followed by the task name","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"Dadevchia"},"content":"    public String toString(){","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"Dadevchia"},"content":"        if(this.isDone){","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"Dadevchia"},"content":"            return \"[T][X] \" + this.taskName;","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"Dadevchia"},"content":"        }else{","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"Dadevchia"},"content":"            return \"[T][ ] \" + this.taskName;","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"Dadevchia"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"Dadevchia"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"Dadevchia"},"content":"}","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"Dadevchia"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"Dadevchia"},"content":"//Create a deadline class that inherits from the task class","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"Dadevchia"},"content":"class Deadline extends Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"Dadevchia"},"content":"    protected String deadline;","lastModifiedDate":"2023-02-08"},{"lineNumber":45,"author":{"gitId":"Dadevchia"},"content":"    public Deadline(String taskName, String deadline){","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"Dadevchia"},"content":"        super(taskName);","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"Dadevchia"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"Dadevchia"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"Dadevchia"},"content":"    //toString method to print the status of the task followed by the task name","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"Dadevchia"},"content":"    public String toString(){","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"Dadevchia"},"content":"        if(this.isDone){","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"Dadevchia"},"content":"            return \"[D][X] \" + this.taskName + \" (\" + this.deadline + \")\";","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"Dadevchia"},"content":"        }else{","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"Dadevchia"},"content":"            return \"[D][ ] \" + this.taskName + \" (\" + this.deadline + \")\";","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"Dadevchia"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"Dadevchia"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"Dadevchia"},"content":"}","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"Dadevchia"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"Dadevchia"},"content":"//Create an event class that inherits from the task class","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"Dadevchia"},"content":"class Event extends Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"Dadevchia"},"content":"    protected String eventTime;","lastModifiedDate":"2023-02-08"},{"lineNumber":62,"author":{"gitId":"Dadevchia"},"content":"    public Event(String taskName, String eventTime){","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"Dadevchia"},"content":"        super(taskName);","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"Dadevchia"},"content":"        this.eventTime \u003d eventTime;","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"Dadevchia"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"Dadevchia"},"content":"    //toString method to print the status of the task followed by the task name","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"Dadevchia"},"content":"    public String toString(){","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"Dadevchia"},"content":"        if(this.isDone){","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"Dadevchia"},"content":"            return \"[E][X] \" + this.taskName + \" (\" + this.eventTime + \")\";","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"Dadevchia"},"content":"        }else{","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"Dadevchia"},"content":"            return \"[E][ ] \" + this.taskName + \" (\" + this.eventTime + \")\";","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"Dadevchia"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"Dadevchia"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"Dadevchia"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Dadevchia":74}}]
