[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"alexgoexercise"},"content":"3. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). ","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"-":15,"alexgoexercise":2}},{"path":"src/main/java/keqing/Keqing.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alexgoexercise"},"content":"package keqing;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"alexgoexercise"},"content":"import keqing.exceptions.IllegalInputException;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"alexgoexercise"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"alexgoexercise"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"alexgoexercise"},"content":"public class Keqing {","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"alexgoexercise"},"content":"    public static final String LINE \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"alexgoexercise"},"content":"    ","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"alexgoexercise"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"alexgoexercise"},"content":"     * Loops the user commands until the user types \"bye\".","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"alexgoexercise"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"alexgoexercise"},"content":"    public static void loopCommand() {","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"alexgoexercise"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"alexgoexercise"},"content":"        String text \u003d in.nextLine();","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"alexgoexercise"},"content":"        while(!text.equals(\"bye\")){","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"alexgoexercise"},"content":"            try {","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"alexgoexercise"},"content":"                KeqingParser.doCommand(text);","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"alexgoexercise"},"content":"            } catch (IllegalInputException e) {","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"alexgoexercise"},"content":"                System.out.println(LINE + System.lineSeparator() + e + System.lineSeparator()","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"alexgoexercise"},"content":"                        + \"if you need more instruction, please type \u0027menu\u0027.\"+ System.lineSeparator() + LINE);","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"alexgoexercise"},"content":"            }","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"alexgoexercise"},"content":"            text \u003d in.nextLine();","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"alexgoexercise"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"alexgoexercise"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"alexgoexercise"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"alexgoexercise"},"content":"     * The main method that drives Keqing.","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"alexgoexercise"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"alexgoexercise"},"content":"     * @param args","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"alexgoexercise"},"content":"     * @throws IOException","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"alexgoexercise"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"alexgoexercise"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"alexgoexercise"},"content":"        KeqingUI.printStartingGreet();","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"alexgoexercise"},"content":"        try {","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"alexgoexercise"},"content":"            KeqingArrayList.tasks \u003d KeqingStorage.loadFile();","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"alexgoexercise"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"alexgoexercise"},"content":"            System.out.println(LINE + System.lineSeparator() + e + System.lineSeparator());","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"alexgoexercise"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"alexgoexercise"},"content":"            System.out.println(LINE + System.lineSeparator() + e + System.lineSeparator());","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"alexgoexercise"},"content":"            KeqingStorage.deleteStorage();","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"alexgoexercise"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"alexgoexercise"},"content":"        loopCommand();","lastModifiedDate":"2023-02-16"},{"lineNumber":47,"author":{"gitId":"alexgoexercise"},"content":"        KeqingUI.printExitingGreet();","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"alexgoexercise"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"alexgoexercise"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"alexgoexercise":49}},{"path":"src/main/java/keqing/KeqingArrayList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alexgoexercise"},"content":"package keqing;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"alexgoexercise"},"content":"import keqing.exceptions.IllegalInputException;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"alexgoexercise"},"content":"import keqing.tasks.Deadline;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"alexgoexercise"},"content":"import keqing.tasks.Event;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"alexgoexercise"},"content":"import keqing.tasks.Task;","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"alexgoexercise"},"content":"import keqing.tasks.ToDo;","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"alexgoexercise"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"alexgoexercise"},"content":"import static keqing.Keqing.LINE;","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"alexgoexercise"},"content":"import static keqing.KeqingUI.echoAdd;","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"alexgoexercise"},"content":"import static keqing.KeqingUI.echoDelete;","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"alexgoexercise"},"content":"import static keqing.KeqingParser.isNumeric;","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"alexgoexercise"},"content":"import static keqing.tasks.Task.getTaskCount;","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"alexgoexercise"},"content":"public class KeqingArrayList {","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"alexgoexercise"},"content":"    public static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"alexgoexercise"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"alexgoexercise"},"content":"     * Prints the current tasks list.","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"alexgoexercise"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"alexgoexercise"},"content":"    public static void printTaskList() {","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"alexgoexercise"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"alexgoexercise"},"content":"        if (getTaskCount() \u003d\u003d 0) {","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"alexgoexercise"},"content":"            System.out.println(\"The list is empty...!\");","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"alexgoexercise"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"alexgoexercise"},"content":"        for (int i \u003d 0; i \u003c getTaskCount(); i++) {","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"alexgoexercise"},"content":"            System.out.print((i + 1) + \".\");","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"alexgoexercise"},"content":"            System.out.println(tasks.get(i).toString());","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"alexgoexercise"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"alexgoexercise"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"alexgoexercise"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"alexgoexercise"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"alexgoexercise"},"content":"     * To mark a task as done or unfinished.","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"alexgoexercise"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"alexgoexercise"},"content":"     * @param currentID the ID of the task that is currently on","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"alexgoexercise"},"content":"     * @param isDone the checker for the task status","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"alexgoexercise"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"alexgoexercise"},"content":"    public static void markTask(int currentID, boolean isDone) {","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"alexgoexercise"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"alexgoexercise"},"content":"        if (currentID \u003c 0 || currentID \u003e\u003d getTaskCount()) {","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"alexgoexercise"},"content":"            System.out.println(\"Cannot find this task!\");","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"alexgoexercise"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"alexgoexercise"},"content":"        else if (isDone) {","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"alexgoexercise"},"content":"            tasks.get(currentID).setDone();","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"alexgoexercise"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-02-26"},{"lineNumber":49,"author":{"gitId":"alexgoexercise"},"content":"            System.out.println(\"   \" + tasks.get(currentID).toString());","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"alexgoexercise"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"alexgoexercise"},"content":"        else {","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"alexgoexercise"},"content":"            tasks.get(currentID).setNotDone();","lastModifiedDate":"2023-02-26"},{"lineNumber":53,"author":{"gitId":"alexgoexercise"},"content":"            System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-02-26"},{"lineNumber":54,"author":{"gitId":"alexgoexercise"},"content":"            System.out.println(\"   \" + tasks.get(currentID).toString());","lastModifiedDate":"2023-02-26"},{"lineNumber":55,"author":{"gitId":"alexgoexercise"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":56,"author":{"gitId":"alexgoexercise"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-02-26"},{"lineNumber":57,"author":{"gitId":"alexgoexercise"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":58,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":59,"author":{"gitId":"alexgoexercise"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":60,"author":{"gitId":"alexgoexercise"},"content":"     * Reads the toTo tasks using respective format.","lastModifiedDate":"2023-02-26"},{"lineNumber":61,"author":{"gitId":"alexgoexercise"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":62,"author":{"gitId":"alexgoexercise"},"content":"     * @param content Content from the user input","lastModifiedDate":"2023-02-26"},{"lineNumber":63,"author":{"gitId":"alexgoexercise"},"content":"     * @throws IllegalInputException","lastModifiedDate":"2023-02-26"},{"lineNumber":64,"author":{"gitId":"alexgoexercise"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":65,"author":{"gitId":"alexgoexercise"},"content":"    public static void readToDo(String content) throws IllegalInputException {","lastModifiedDate":"2023-02-26"},{"lineNumber":66,"author":{"gitId":"alexgoexercise"},"content":"        if (content.equals(\"todo\")) {","lastModifiedDate":"2023-02-26"},{"lineNumber":67,"author":{"gitId":"alexgoexercise"},"content":"            throw new IllegalInputException(\"Keqing doesn\u0027t understand what you actually want to do...\");","lastModifiedDate":"2023-02-26"},{"lineNumber":68,"author":{"gitId":"alexgoexercise"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":69,"author":{"gitId":"alexgoexercise"},"content":"        else {","lastModifiedDate":"2023-02-26"},{"lineNumber":70,"author":{"gitId":"alexgoexercise"},"content":"            ToDo toDoTask \u003d new ToDo(content);","lastModifiedDate":"2023-02-26"},{"lineNumber":71,"author":{"gitId":"alexgoexercise"},"content":"            tasks.add(toDoTask);","lastModifiedDate":"2023-02-26"},{"lineNumber":72,"author":{"gitId":"alexgoexercise"},"content":"            echoAdd();","lastModifiedDate":"2023-02-26"},{"lineNumber":73,"author":{"gitId":"alexgoexercise"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":74,"author":{"gitId":"alexgoexercise"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":75,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":76,"author":{"gitId":"alexgoexercise"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":77,"author":{"gitId":"alexgoexercise"},"content":"     * Reads the deadline tasks using respective format.","lastModifiedDate":"2023-02-26"},{"lineNumber":78,"author":{"gitId":"alexgoexercise"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":79,"author":{"gitId":"alexgoexercise"},"content":"     * @param content Content from the user input","lastModifiedDate":"2023-02-26"},{"lineNumber":80,"author":{"gitId":"alexgoexercise"},"content":"     * @throws IllegalInputException","lastModifiedDate":"2023-02-26"},{"lineNumber":81,"author":{"gitId":"alexgoexercise"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":82,"author":{"gitId":"alexgoexercise"},"content":"    public static void readDeadline(String content) throws IllegalInputException {","lastModifiedDate":"2023-02-26"},{"lineNumber":83,"author":{"gitId":"alexgoexercise"},"content":"        if (content.contains(\"/by\")) {","lastModifiedDate":"2023-02-26"},{"lineNumber":84,"author":{"gitId":"alexgoexercise"},"content":"            int indexOfBy \u003d content.indexOf(\"/by\");","lastModifiedDate":"2023-02-26"},{"lineNumber":85,"author":{"gitId":"alexgoexercise"},"content":"            if (indexOfBy + 3 \u003c content.length()) {","lastModifiedDate":"2023-02-26"},{"lineNumber":86,"author":{"gitId":"alexgoexercise"},"content":"                String description \u003d content.substring(0, indexOfBy).trim();","lastModifiedDate":"2023-02-26"},{"lineNumber":87,"author":{"gitId":"alexgoexercise"},"content":"                String by \u003d content.substring(indexOfBy + 3).trim();","lastModifiedDate":"2023-02-26"},{"lineNumber":88,"author":{"gitId":"alexgoexercise"},"content":"                Deadline deadlineTask \u003d new Deadline(description, by);","lastModifiedDate":"2023-02-26"},{"lineNumber":89,"author":{"gitId":"alexgoexercise"},"content":"                tasks.add(deadlineTask);","lastModifiedDate":"2023-02-26"},{"lineNumber":90,"author":{"gitId":"alexgoexercise"},"content":"                echoAdd();","lastModifiedDate":"2023-02-26"},{"lineNumber":91,"author":{"gitId":"alexgoexercise"},"content":"            }","lastModifiedDate":"2023-02-26"},{"lineNumber":92,"author":{"gitId":"alexgoexercise"},"content":"            else {","lastModifiedDate":"2023-02-26"},{"lineNumber":93,"author":{"gitId":"alexgoexercise"},"content":"                throw new IllegalInputException(\"Keqing doesn\u0027t think your input makes sense...\");","lastModifiedDate":"2023-02-26"},{"lineNumber":94,"author":{"gitId":"alexgoexercise"},"content":"            }","lastModifiedDate":"2023-02-26"},{"lineNumber":95,"author":{"gitId":"alexgoexercise"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":96,"author":{"gitId":"alexgoexercise"},"content":"        else {","lastModifiedDate":"2023-02-26"},{"lineNumber":97,"author":{"gitId":"alexgoexercise"},"content":"            throw new IllegalInputException(\"Please check if you have typed in a valid deadline.\");","lastModifiedDate":"2023-02-26"},{"lineNumber":98,"author":{"gitId":"alexgoexercise"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":99,"author":{"gitId":"alexgoexercise"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":100,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":101,"author":{"gitId":"alexgoexercise"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":102,"author":{"gitId":"alexgoexercise"},"content":"     * Reads the event tasks using respective format.","lastModifiedDate":"2023-02-26"},{"lineNumber":103,"author":{"gitId":"alexgoexercise"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":104,"author":{"gitId":"alexgoexercise"},"content":"     * @param content Content from the user input","lastModifiedDate":"2023-02-26"},{"lineNumber":105,"author":{"gitId":"alexgoexercise"},"content":"     * @throws IllegalInputException","lastModifiedDate":"2023-02-26"},{"lineNumber":106,"author":{"gitId":"alexgoexercise"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":107,"author":{"gitId":"alexgoexercise"},"content":"    public static void readEvent(String content) throws IllegalInputException {","lastModifiedDate":"2023-02-26"},{"lineNumber":108,"author":{"gitId":"alexgoexercise"},"content":"        if (content.contains(\"/from\") \u0026\u0026 content.contains(\"/to\")) {","lastModifiedDate":"2023-02-26"},{"lineNumber":109,"author":{"gitId":"alexgoexercise"},"content":"            int indexOfFrom \u003d content.indexOf(\"/from\");","lastModifiedDate":"2023-02-26"},{"lineNumber":110,"author":{"gitId":"alexgoexercise"},"content":"            int indexOfTo \u003d content.indexOf(\"/to\");","lastModifiedDate":"2023-02-26"},{"lineNumber":111,"author":{"gitId":"alexgoexercise"},"content":"            if (indexOfFrom \u003c indexOfTo) {","lastModifiedDate":"2023-02-26"},{"lineNumber":112,"author":{"gitId":"alexgoexercise"},"content":"                String description \u003d content.substring(0, indexOfFrom).trim();","lastModifiedDate":"2023-02-26"},{"lineNumber":113,"author":{"gitId":"alexgoexercise"},"content":"                String from \u003d content.substring(indexOfFrom + 5, indexOfTo).trim();","lastModifiedDate":"2023-02-26"},{"lineNumber":114,"author":{"gitId":"alexgoexercise"},"content":"                String to \u003d content.substring(indexOfTo + 3).trim();","lastModifiedDate":"2023-02-26"},{"lineNumber":115,"author":{"gitId":"alexgoexercise"},"content":"                Event eventTask \u003d new Event(description, from, to);","lastModifiedDate":"2023-02-26"},{"lineNumber":116,"author":{"gitId":"alexgoexercise"},"content":"                tasks.add(eventTask);","lastModifiedDate":"2023-02-26"},{"lineNumber":117,"author":{"gitId":"alexgoexercise"},"content":"                echoAdd();","lastModifiedDate":"2023-02-26"},{"lineNumber":118,"author":{"gitId":"alexgoexercise"},"content":"            }","lastModifiedDate":"2023-02-26"},{"lineNumber":119,"author":{"gitId":"alexgoexercise"},"content":"            else {","lastModifiedDate":"2023-02-26"},{"lineNumber":120,"author":{"gitId":"alexgoexercise"},"content":"                throw new IllegalInputException(\"Keqing doens\u0027t think your input makes sense...\");","lastModifiedDate":"2023-02-26"},{"lineNumber":121,"author":{"gitId":"alexgoexercise"},"content":"            }","lastModifiedDate":"2023-02-26"},{"lineNumber":122,"author":{"gitId":"alexgoexercise"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":123,"author":{"gitId":"alexgoexercise"},"content":"        else {","lastModifiedDate":"2023-02-26"},{"lineNumber":124,"author":{"gitId":"alexgoexercise"},"content":"            throw new IllegalInputException(\"Please check if you have typed in the event duration in a valid form...\");","lastModifiedDate":"2023-02-26"},{"lineNumber":125,"author":{"gitId":"alexgoexercise"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":126,"author":{"gitId":"alexgoexercise"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":127,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":128,"author":{"gitId":"alexgoexercise"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":129,"author":{"gitId":"alexgoexercise"},"content":"     * To delete a certain task.","lastModifiedDate":"2023-02-26"},{"lineNumber":130,"author":{"gitId":"alexgoexercise"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":131,"author":{"gitId":"alexgoexercise"},"content":"     * @param content Content from the user input, would be a number if the user is not trolling","lastModifiedDate":"2023-02-26"},{"lineNumber":132,"author":{"gitId":"alexgoexercise"},"content":"     * @throws IllegalInputException","lastModifiedDate":"2023-02-26"},{"lineNumber":133,"author":{"gitId":"alexgoexercise"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":134,"author":{"gitId":"alexgoexercise"},"content":"    public static void deleteTask(String content) throws IllegalInputException {","lastModifiedDate":"2023-02-26"},{"lineNumber":135,"author":{"gitId":"alexgoexercise"},"content":"        if (content.equals(\"all\")) {","lastModifiedDate":"2023-02-26"},{"lineNumber":136,"author":{"gitId":"alexgoexercise"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-02-26"},{"lineNumber":137,"author":{"gitId":"alexgoexercise"},"content":"                tasks.remove(i);","lastModifiedDate":"2023-02-26"},{"lineNumber":138,"author":{"gitId":"alexgoexercise"},"content":"            }","lastModifiedDate":"2023-02-26"},{"lineNumber":139,"author":{"gitId":"alexgoexercise"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":140,"author":{"gitId":"alexgoexercise"},"content":"        if (isNumeric(content)) {","lastModifiedDate":"2023-02-26"},{"lineNumber":141,"author":{"gitId":"alexgoexercise"},"content":"            int index \u003d Integer.parseInt(content) - 1;    //switch to 0-based.","lastModifiedDate":"2023-02-26"},{"lineNumber":142,"author":{"gitId":"alexgoexercise"},"content":"            if (index \u003c getTaskCount()) {","lastModifiedDate":"2023-02-26"},{"lineNumber":143,"author":{"gitId":"alexgoexercise"},"content":"                echoDelete(index);","lastModifiedDate":"2023-02-26"},{"lineNumber":144,"author":{"gitId":"alexgoexercise"},"content":"                tasks.remove(index);","lastModifiedDate":"2023-02-26"},{"lineNumber":145,"author":{"gitId":"alexgoexercise"},"content":"                Task.setTaskCount(getTaskCount() - 1);","lastModifiedDate":"2023-02-26"},{"lineNumber":146,"author":{"gitId":"alexgoexercise"},"content":"            }","lastModifiedDate":"2023-02-26"},{"lineNumber":147,"author":{"gitId":"alexgoexercise"},"content":"            else {","lastModifiedDate":"2023-02-26"},{"lineNumber":148,"author":{"gitId":"alexgoexercise"},"content":"                throw new IllegalInputException(\"It\u0027s out of bound!!!\");","lastModifiedDate":"2023-02-26"},{"lineNumber":149,"author":{"gitId":"alexgoexercise"},"content":"            }","lastModifiedDate":"2023-02-26"},{"lineNumber":150,"author":{"gitId":"alexgoexercise"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":151,"author":{"gitId":"alexgoexercise"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":152,"author":{"gitId":"alexgoexercise"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"alexgoexercise":152}},{"path":"src/main/java/keqing/KeqingParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alexgoexercise"},"content":"package keqing;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"alexgoexercise"},"content":"import keqing.exceptions.IllegalInputException;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"alexgoexercise"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"alexgoexercise"},"content":"public class KeqingParser {","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"alexgoexercise"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"alexgoexercise"},"content":"     * Interprets the given command typed by the user.","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"alexgoexercise"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"alexgoexercise"},"content":"     * @param text the one-line command that the user typed in","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"alexgoexercise"},"content":"     * @throws IllegalInputException","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"alexgoexercise"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"alexgoexercise"},"content":"    public static void doCommand(String text) throws IllegalInputException {","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"alexgoexercise"},"content":"        String[] splittedText \u003d text.split(\" \", 2);","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"alexgoexercise"},"content":"        String command \u003d splittedText[0];","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"alexgoexercise"},"content":"        String content \u003d splittedText[splittedText.length - 1];","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"alexgoexercise"},"content":"        switch (command) {","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"alexgoexercise"},"content":"        case \"list\":","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"alexgoexercise"},"content":"            KeqingArrayList.printTaskList();","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"alexgoexercise"},"content":"            break;","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"alexgoexercise"},"content":"        case \"menu\":","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"alexgoexercise"},"content":"            KeqingUI.printMenu();","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"alexgoexercise"},"content":"            break;","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"alexgoexercise"},"content":"        case \"mark\":","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"alexgoexercise"},"content":"            //Fallthrough","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"alexgoexercise"},"content":"        case \"unmark\":","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"alexgoexercise"},"content":"            int currentID \u003d Integer.parseInt(text.substring(text.length() - 1)) - 1;","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"alexgoexercise"},"content":"            boolean isDone;","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"alexgoexercise"},"content":"            isDone \u003d !text.contains(\"unmark\");","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"alexgoexercise"},"content":"            KeqingArrayList.markTask(currentID, isDone);","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"alexgoexercise"},"content":"            break;","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"alexgoexercise"},"content":"        case \"todo\":","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"alexgoexercise"},"content":"            KeqingArrayList.readToDo(content);","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"alexgoexercise"},"content":"            break;","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"alexgoexercise"},"content":"        case \"deadline\":","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"alexgoexercise"},"content":"            KeqingArrayList.readDeadline(content);","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"alexgoexercise"},"content":"            break;","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"alexgoexercise"},"content":"        case \"event\":","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"alexgoexercise"},"content":"            KeqingArrayList.readEvent(content);","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"alexgoexercise"},"content":"            break;","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"alexgoexercise"},"content":"        case \"delete\":","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"alexgoexercise"},"content":"            KeqingArrayList.deleteTask(content);","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"alexgoexercise"},"content":"            break;","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"alexgoexercise"},"content":"        default:","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"alexgoexercise"},"content":"            throw new IllegalInputException(\"Keqing doesn\u0027t understand your input...?\");","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"alexgoexercise"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"alexgoexercise"},"content":"        try {","lastModifiedDate":"2023-02-26"},{"lineNumber":49,"author":{"gitId":"alexgoexercise"},"content":"            KeqingStorage.updateFile(KeqingArrayList.tasks);","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"alexgoexercise"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"alexgoexercise"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"alexgoexercise"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":53,"author":{"gitId":"alexgoexercise"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":54,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":55,"author":{"gitId":"alexgoexercise"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":56,"author":{"gitId":"alexgoexercise"},"content":"     * To check whether a given string is numeric.","lastModifiedDate":"2023-02-26"},{"lineNumber":57,"author":{"gitId":"alexgoexercise"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":58,"author":{"gitId":"alexgoexercise"},"content":"     * @param str the given string","lastModifiedDate":"2023-02-26"},{"lineNumber":59,"author":{"gitId":"alexgoexercise"},"content":"     * @return a boolean variable indicating whether the string is numeric","lastModifiedDate":"2023-02-26"},{"lineNumber":60,"author":{"gitId":"alexgoexercise"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":61,"author":{"gitId":"alexgoexercise"},"content":"    public static boolean isNumeric(String str) {","lastModifiedDate":"2023-02-26"},{"lineNumber":62,"author":{"gitId":"alexgoexercise"},"content":"        try {","lastModifiedDate":"2023-02-26"},{"lineNumber":63,"author":{"gitId":"alexgoexercise"},"content":"            Integer.parseInt(str);","lastModifiedDate":"2023-02-26"},{"lineNumber":64,"author":{"gitId":"alexgoexercise"},"content":"            return true;","lastModifiedDate":"2023-02-26"},{"lineNumber":65,"author":{"gitId":"alexgoexercise"},"content":"        } catch(NumberFormatException e){","lastModifiedDate":"2023-02-26"},{"lineNumber":66,"author":{"gitId":"alexgoexercise"},"content":"            return false;","lastModifiedDate":"2023-02-26"},{"lineNumber":67,"author":{"gitId":"alexgoexercise"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":68,"author":{"gitId":"alexgoexercise"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":69,"author":{"gitId":"alexgoexercise"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"alexgoexercise":69}},{"path":"src/main/java/keqing/KeqingStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alexgoexercise"},"content":"package keqing;","lastModifiedDate":"2023-02-24"},{"lineNumber":2,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"alexgoexercise"},"content":"import keqing.tasks.Deadline;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"alexgoexercise"},"content":"import keqing.tasks.Event;","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"alexgoexercise"},"content":"import keqing.tasks.Task;","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"alexgoexercise"},"content":"import keqing.tasks.ToDo;","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"alexgoexercise"},"content":"import java.io.File;","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"alexgoexercise"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"alexgoexercise"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"alexgoexercise"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"alexgoexercise"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"alexgoexercise"},"content":"public class KeqingStorage {","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"alexgoexercise"},"content":"    private static final String filePath \u003d \"./data/Keqing.txt\";","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"alexgoexercise"},"content":"    private static final String SEPERATOR \u003d \" \";","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"alexgoexercise"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"alexgoexercise"},"content":"     * To delete the text file for storage.","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"alexgoexercise"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"alexgoexercise"},"content":"    public static void deleteStorage() {","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"alexgoexercise"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"alexgoexercise"},"content":"        if (f.delete()) {","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"alexgoexercise"},"content":"            System.out.println(\"file deleted successfully\");","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"alexgoexercise"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"alexgoexercise"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"alexgoexercise"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"alexgoexercise"},"content":"     * To set the status of the current task using information from the storage text file.","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"alexgoexercise"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"alexgoexercise"},"content":"     * @param currentTask the Task object of the current task","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"alexgoexercise"},"content":"     * @param isDone the status of whether an object is marked as done or not","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"alexgoexercise"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"alexgoexercise"},"content":"    public static void setStatus(Task currentTask, boolean isDone) {","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"alexgoexercise"},"content":"        if (isDone) {","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"alexgoexercise"},"content":"            currentTask.setDone();","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"alexgoexercise"},"content":"        } else {","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"alexgoexercise"},"content":"            currentTask.setNotDone();","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"alexgoexercise"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"alexgoexercise"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"alexgoexercise"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"alexgoexercise"},"content":"     * Appends a task read from the storage text file to the existing tasks list.","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"alexgoexercise"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"alexgoexercise"},"content":"     * @param line the current line read from the storage text file","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"alexgoexercise"},"content":"     * @return a Task object that is read from the current line","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"alexgoexercise"},"content":"     * @throws IOException","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"alexgoexercise"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":49,"author":{"gitId":"alexgoexercise"},"content":"    public static Task appendTask(String line) throws IOException{","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"alexgoexercise"},"content":"        Task newTask \u003d new Task();","lastModifiedDate":"2023-02-24"},{"lineNumber":51,"author":{"gitId":"alexgoexercise"},"content":"        String[] currentTaskInfo;","lastModifiedDate":"2023-02-24"},{"lineNumber":52,"author":{"gitId":"alexgoexercise"},"content":"        currentTaskInfo \u003d line.split(SEPERATOR, 3);","lastModifiedDate":"2023-02-26"},{"lineNumber":53,"author":{"gitId":"alexgoexercise"},"content":"        boolean isDone;","lastModifiedDate":"2023-02-24"},{"lineNumber":54,"author":{"gitId":"alexgoexercise"},"content":"        isDone \u003d Integer.parseInt(currentTaskInfo[1]) \u003d\u003d 1;","lastModifiedDate":"2023-02-24"},{"lineNumber":55,"author":{"gitId":"alexgoexercise"},"content":"        switch (currentTaskInfo[0]) {","lastModifiedDate":"2023-02-24"},{"lineNumber":56,"author":{"gitId":"alexgoexercise"},"content":"        case \"T\":","lastModifiedDate":"2023-02-24"},{"lineNumber":57,"author":{"gitId":"alexgoexercise"},"content":"            String toDoContent \u003d currentTaskInfo[2];","lastModifiedDate":"2023-02-24"},{"lineNumber":58,"author":{"gitId":"alexgoexercise"},"content":"            ToDo currentTask \u003d new ToDo(toDoContent);","lastModifiedDate":"2023-02-24"},{"lineNumber":59,"author":{"gitId":"alexgoexercise"},"content":"            setStatus(currentTask, isDone);","lastModifiedDate":"2023-02-26"},{"lineNumber":60,"author":{"gitId":"alexgoexercise"},"content":"            newTask \u003d currentTask;","lastModifiedDate":"2023-02-24"},{"lineNumber":61,"author":{"gitId":"alexgoexercise"},"content":"            break;","lastModifiedDate":"2023-02-24"},{"lineNumber":62,"author":{"gitId":"alexgoexercise"},"content":"        case \"D\":","lastModifiedDate":"2023-02-24"},{"lineNumber":63,"author":{"gitId":"alexgoexercise"},"content":"            String[] DeadlineContent \u003d new String[2];","lastModifiedDate":"2023-02-24"},{"lineNumber":64,"author":{"gitId":"alexgoexercise"},"content":"            DeadlineContent \u003d currentTaskInfo[2].split(SEPERATOR, 2);","lastModifiedDate":"2023-02-26"},{"lineNumber":65,"author":{"gitId":"alexgoexercise"},"content":"            Deadline currentDeadline \u003d new Deadline(DeadlineContent[0], DeadlineContent[1]);","lastModifiedDate":"2023-02-24"},{"lineNumber":66,"author":{"gitId":"alexgoexercise"},"content":"            setStatus(currentDeadline, isDone);","lastModifiedDate":"2023-02-26"},{"lineNumber":67,"author":{"gitId":"alexgoexercise"},"content":"            newTask \u003d currentDeadline;","lastModifiedDate":"2023-02-24"},{"lineNumber":68,"author":{"gitId":"alexgoexercise"},"content":"            break;","lastModifiedDate":"2023-02-24"},{"lineNumber":69,"author":{"gitId":"alexgoexercise"},"content":"        case \"E\":","lastModifiedDate":"2023-02-24"},{"lineNumber":70,"author":{"gitId":"alexgoexercise"},"content":"            String[] EventContent \u003d new String[3];","lastModifiedDate":"2023-02-24"},{"lineNumber":71,"author":{"gitId":"alexgoexercise"},"content":"            EventContent \u003d currentTaskInfo[2].split(SEPERATOR, 3);","lastModifiedDate":"2023-02-26"},{"lineNumber":72,"author":{"gitId":"alexgoexercise"},"content":"            Event currentEvent \u003d new Event(EventContent[0], EventContent[1], EventContent[2]);","lastModifiedDate":"2023-02-24"},{"lineNumber":73,"author":{"gitId":"alexgoexercise"},"content":"            setStatus(currentEvent, isDone);","lastModifiedDate":"2023-02-26"},{"lineNumber":74,"author":{"gitId":"alexgoexercise"},"content":"            newTask \u003d currentEvent;","lastModifiedDate":"2023-02-24"},{"lineNumber":75,"author":{"gitId":"alexgoexercise"},"content":"            break;","lastModifiedDate":"2023-02-24"},{"lineNumber":76,"author":{"gitId":"alexgoexercise"},"content":"        default:","lastModifiedDate":"2023-02-24"},{"lineNumber":77,"author":{"gitId":"alexgoexercise"},"content":"            newTask \u003d null;","lastModifiedDate":"2023-02-24"},{"lineNumber":78,"author":{"gitId":"alexgoexercise"},"content":"            break;","lastModifiedDate":"2023-02-24"},{"lineNumber":79,"author":{"gitId":"alexgoexercise"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":80,"author":{"gitId":"alexgoexercise"},"content":"        return newTask;","lastModifiedDate":"2023-02-24"},{"lineNumber":81,"author":{"gitId":"alexgoexercise"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":82,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":83,"author":{"gitId":"alexgoexercise"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":84,"author":{"gitId":"alexgoexercise"},"content":"     * To reformat the existing tasks list to make it into a store-able format.","lastModifiedDate":"2023-02-26"},{"lineNumber":85,"author":{"gitId":"alexgoexercise"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":86,"author":{"gitId":"alexgoexercise"},"content":"     * @param taskList the tasks list to be formatted into the storage text file","lastModifiedDate":"2023-02-26"},{"lineNumber":87,"author":{"gitId":"alexgoexercise"},"content":"     * @return","lastModifiedDate":"2023-02-26"},{"lineNumber":88,"author":{"gitId":"alexgoexercise"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":89,"author":{"gitId":"alexgoexercise"},"content":"    public static String reformatContent(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-02-24"},{"lineNumber":90,"author":{"gitId":"alexgoexercise"},"content":"        String content \u003d \"\";","lastModifiedDate":"2023-02-24"},{"lineNumber":91,"author":{"gitId":"alexgoexercise"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i ++) {","lastModifiedDate":"2023-02-24"},{"lineNumber":92,"author":{"gitId":"alexgoexercise"},"content":"            Task currentTask \u003d taskList.get(i);","lastModifiedDate":"2023-02-24"},{"lineNumber":93,"author":{"gitId":"alexgoexercise"},"content":"            content +\u003d currentTask.getTaskType();","lastModifiedDate":"2023-02-24"},{"lineNumber":94,"author":{"gitId":"alexgoexercise"},"content":"            content +\u003d (SEPERATOR);","lastModifiedDate":"2023-02-26"},{"lineNumber":95,"author":{"gitId":"alexgoexercise"},"content":"            if (currentTask.getStatus()) {","lastModifiedDate":"2023-02-24"},{"lineNumber":96,"author":{"gitId":"alexgoexercise"},"content":"                content +\u003d \"1\";","lastModifiedDate":"2023-02-24"},{"lineNumber":97,"author":{"gitId":"alexgoexercise"},"content":"            }","lastModifiedDate":"2023-02-24"},{"lineNumber":98,"author":{"gitId":"alexgoexercise"},"content":"            else {","lastModifiedDate":"2023-02-24"},{"lineNumber":99,"author":{"gitId":"alexgoexercise"},"content":"                content +\u003d \"0\";","lastModifiedDate":"2023-02-24"},{"lineNumber":100,"author":{"gitId":"alexgoexercise"},"content":"            }","lastModifiedDate":"2023-02-24"},{"lineNumber":101,"author":{"gitId":"alexgoexercise"},"content":"            content +\u003d (SEPERATOR + currentTask.getDescription() + SEPERATOR);","lastModifiedDate":"2023-02-26"},{"lineNumber":102,"author":{"gitId":"alexgoexercise"},"content":"            ArrayList\u003cString\u003e attributes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-26"},{"lineNumber":103,"author":{"gitId":"alexgoexercise"},"content":"            attributes \u003d currentTask.returnAttribute();","lastModifiedDate":"2023-02-26"},{"lineNumber":104,"author":{"gitId":"alexgoexercise"},"content":"            if (currentTask.getTaskType().equals(\"D\")) {","lastModifiedDate":"2023-02-26"},{"lineNumber":105,"author":{"gitId":"alexgoexercise"},"content":"                content +\u003d (attributes.get(0));","lastModifiedDate":"2023-02-26"},{"lineNumber":106,"author":{"gitId":"alexgoexercise"},"content":"            }","lastModifiedDate":"2023-02-26"},{"lineNumber":107,"author":{"gitId":"alexgoexercise"},"content":"            if (currentTask.getTaskType().equals(\"E\")) {","lastModifiedDate":"2023-02-26"},{"lineNumber":108,"author":{"gitId":"alexgoexercise"},"content":"                content +\u003d (attributes.get(0) + SEPERATOR + attributes.get(1));","lastModifiedDate":"2023-02-26"},{"lineNumber":109,"author":{"gitId":"alexgoexercise"},"content":"            }","lastModifiedDate":"2023-02-26"},{"lineNumber":110,"author":{"gitId":"alexgoexercise"},"content":"            content +\u003d (System.lineSeparator());","lastModifiedDate":"2023-02-26"},{"lineNumber":111,"author":{"gitId":"alexgoexercise"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":112,"author":{"gitId":"alexgoexercise"},"content":"        return content;","lastModifiedDate":"2023-02-24"},{"lineNumber":113,"author":{"gitId":"alexgoexercise"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":114,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":115,"author":{"gitId":"alexgoexercise"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":116,"author":{"gitId":"alexgoexercise"},"content":"     * To update the storage text file.","lastModifiedDate":"2023-02-26"},{"lineNumber":117,"author":{"gitId":"alexgoexercise"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":118,"author":{"gitId":"alexgoexercise"},"content":"     * @param taskList the existing tasks list in the active CLI window","lastModifiedDate":"2023-02-26"},{"lineNumber":119,"author":{"gitId":"alexgoexercise"},"content":"     * @throws IOException","lastModifiedDate":"2023-02-26"},{"lineNumber":120,"author":{"gitId":"alexgoexercise"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":121,"author":{"gitId":"alexgoexercise"},"content":"    public static void updateFile(ArrayList\u003cTask\u003e taskList) throws IOException {","lastModifiedDate":"2023-02-24"},{"lineNumber":122,"author":{"gitId":"alexgoexercise"},"content":"        FileWriter writer \u003d new FileWriter(filePath);","lastModifiedDate":"2023-02-24"},{"lineNumber":123,"author":{"gitId":"alexgoexercise"},"content":"        writer.write(reformatContent(taskList));","lastModifiedDate":"2023-02-24"},{"lineNumber":124,"author":{"gitId":"alexgoexercise"},"content":"        writer.close();","lastModifiedDate":"2023-02-24"},{"lineNumber":125,"author":{"gitId":"alexgoexercise"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":126,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":127,"author":{"gitId":"alexgoexercise"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":128,"author":{"gitId":"alexgoexercise"},"content":"     * to load the information stored in the storage text file into the new CLI conversation.","lastModifiedDate":"2023-02-26"},{"lineNumber":129,"author":{"gitId":"alexgoexercise"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":130,"author":{"gitId":"alexgoexercise"},"content":"     * @return the ArrayList of tasks stored in the storage text file","lastModifiedDate":"2023-02-26"},{"lineNumber":131,"author":{"gitId":"alexgoexercise"},"content":"     * @throws IOException","lastModifiedDate":"2023-02-26"},{"lineNumber":132,"author":{"gitId":"alexgoexercise"},"content":"     * @throws ArrayIndexOutOfBoundsException","lastModifiedDate":"2023-02-26"},{"lineNumber":133,"author":{"gitId":"alexgoexercise"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":134,"author":{"gitId":"alexgoexercise"},"content":"    public static ArrayList\u003cTask\u003e loadFile() throws IOException, ArrayIndexOutOfBoundsException {","lastModifiedDate":"2023-02-26"},{"lineNumber":135,"author":{"gitId":"alexgoexercise"},"content":"        ArrayList\u003cTask\u003e copyList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-02-24"},{"lineNumber":136,"author":{"gitId":"alexgoexercise"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2023-02-24"},{"lineNumber":137,"author":{"gitId":"alexgoexercise"},"content":"        if (!f.getParentFile().exists()) {","lastModifiedDate":"2023-02-24"},{"lineNumber":138,"author":{"gitId":"alexgoexercise"},"content":"            f.getParentFile().mkdir();","lastModifiedDate":"2023-02-24"},{"lineNumber":139,"author":{"gitId":"alexgoexercise"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":140,"author":{"gitId":"alexgoexercise"},"content":"        if (f.exists()) {","lastModifiedDate":"2023-02-24"},{"lineNumber":141,"author":{"gitId":"alexgoexercise"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2023-02-24"},{"lineNumber":142,"author":{"gitId":"alexgoexercise"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2023-02-24"},{"lineNumber":143,"author":{"gitId":"alexgoexercise"},"content":"                String line \u003d s.nextLine();","lastModifiedDate":"2023-02-24"},{"lineNumber":144,"author":{"gitId":"alexgoexercise"},"content":"                copyList.add(appendTask(line));","lastModifiedDate":"2023-02-24"},{"lineNumber":145,"author":{"gitId":"alexgoexercise"},"content":"            }","lastModifiedDate":"2023-02-24"},{"lineNumber":146,"author":{"gitId":"alexgoexercise"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":147,"author":{"gitId":"alexgoexercise"},"content":"        return copyList;","lastModifiedDate":"2023-02-24"},{"lineNumber":148,"author":{"gitId":"alexgoexercise"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":149,"author":{"gitId":"alexgoexercise"},"content":"}","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"alexgoexercise":149}},{"path":"src/main/java/keqing/KeqingUI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alexgoexercise"},"content":"package keqing;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"alexgoexercise"},"content":"import static keqing.tasks.Task.getTaskCount;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"alexgoexercise"},"content":"public class KeqingUI {","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"alexgoexercise"},"content":"    public static final String LINE \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"alexgoexercise"},"content":"    //reused from https://www.ascii-art-generator.org/","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"alexgoexercise"},"content":"    public static final String logo \u003d \"                    /                                       /                   \\n\"","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"alexgoexercise"},"content":"            + \"                    ////(                              .(////                   \\n\" +","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"alexgoexercise"},"content":"            \"                    *///*(//.    .*((//((///(/,   .**/////*/,                   \\n\" +","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"alexgoexercise"},"content":"            \"                    .(((//((/%//////(////////////*#((*(////(.                   \\n\" +","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"alexgoexercise"},"content":"            \"                    ./*/*\u0026(/////////////////(*////*/*%%*(//*.                   \\n\" +","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"alexgoexercise"},"content":"            \"                     .(/*#///////////////////(//(/(////#(((.                    \\n\" +","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"alexgoexercise"},"content":"            \"                     .@%//////////////////////#///(#////#%/**                   \\n\" +","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"alexgoexercise"},"content":"            \"                    ,\u0026\u0026//**//(*/////*/////////#*/(((/****#(//                   \\n\" +","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"alexgoexercise"},"content":"            \"                   .,#/(//////////#///////////#*//#(%///*(*(#*                  \\n\" +","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"alexgoexercise"},"content":"            \"                   *//(/////(//*/#////#(////(*,..#*%/////(/#,.                  \\n\" +","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"alexgoexercise"},"content":"            \"              .((((/*#(/////((//((//%,/////#(/. . **(//////,.                   \\n\" +","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"alexgoexercise"},"content":"            \"               ..,,,,((*////#(# #*#(,(#///(#((... .*/////((.                    \\n\" +","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"alexgoexercise"},"content":"            \"                    ./(//#//%%@\u0026@@@%*#//*.( *@@@@@@(\u0026///*%#*                    \\n\" +","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"alexgoexercise"},"content":"            \"                     /%(//#/(#,((#*/./...... (/(/#**/(///#//                    \\n\" +","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"alexgoexercise"},"content":"            \"                    (//\u0026//((%/..................../ %///((//(                   \\n\" +","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"alexgoexercise"},"content":"            \"                   ////##///\u0026,.*,...... ...........\u0026#//((#/*//                  \\n\" +","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"alexgoexercise"},"content":"            \"                  //*//((#/(#((........ .........,*#*//(((*///(                 \\n\" +","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"alexgoexercise"},"content":"            \"                 /*///#(**#/((,**/....   ....../,,,//(%//(#*//*/                \\n\" +","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"alexgoexercise"},"content":"            \"               .***////*/(/(/(*/*@\u0026#//,.. /(*@\u0026%. (*%/(//*////***.              \\n\" +","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"alexgoexercise"},"content":"            \"              /**(***/*/*(((*,(/#\u0026\u0026\u0026%//%%//(@\u0026\u0026\u0026(/,,,((#***/***#**/             \\n\" +","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"alexgoexercise"},"content":"            \"            /**#****/***#/((..,,,,\u0026\u0026@\u0026*%#(/@\u0026\u0026(*,,...(/(#********#**/           \\n\" +","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"alexgoexercise"},"content":"            \"          (*,((***/****/*/(, .#\u0026%%%%%%\u0026/ %%%%%\u0026#%%,  ,(/*/****/***(/,*/         \\n\" +","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"alexgoexercise"},"content":"            \"        ,,**#,***#*@****(*..\u0026%%#..,%/\u0026\u0026##(%#(//**\u0026%%(. /#***#@,%**,,(**,,       \\n\" +","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"alexgoexercise"},"content":"            \"       (,*,,,,*,/(/\u0026@@  ...,%%\u0026****/%\u0026*//#(%\u0026*...*%%%.....,@@//(/,**,*,*,/      \\n\" +","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"alexgoexercise"},"content":"            \"      ,(,*,,*,///*((\u0026@@....#%\u0026,***...((///\u0026/.,***./%\u0026... (@@%/(/*//,,*,*,(,     \\n\" +","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"alexgoexercise"},"content":"            \"    .*/,,,*,,*/##/(//%\u0026@. /\u0026\u0026...****.(*///#********/%,..#@%\u0026((/(#(/**,*,,,/,    \\n\" +","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"alexgoexercise"},"content":"            \"    *,*./,,(*,/,(((##(*(@,(%(@/.*/..//%##%,...../***,#.,@/,%#/#(,*(/,/,,/.*,*   \\n\" +","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"alexgoexercise"},"content":"            \"   ,*,*#,,(/%#(#*(#,%###%#\u0026\u0026#%(%\u0026(%#..........*********@%####*%///###/(,,#*,,,  \\n\" +","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"alexgoexercise"},"content":"            \"   /,,/*,(/*#*#*(######\u0026%\u0026(@(%#%##\u0026%/*.%...........,/**\u0026%%######(/#/#*/(,,/,,,  \\n\";","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"alexgoexercise"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"alexgoexercise"},"content":"     * To print the greeting message at the start.","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"alexgoexercise"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"alexgoexercise"},"content":"    public static void printStartingGreet() {","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"alexgoexercise"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"alexgoexercise"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"alexgoexercise"},"content":"        System.out.println(\"Hello! I\u0027m Keqin\");","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"alexgoexercise"},"content":"        System.out.println(\"What can I do for you?\" + System.lineSeparator() + \"Type \u0027menu\u0027 to know the commands.\");","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"alexgoexercise"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"alexgoexercise"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":49,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"alexgoexercise"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"alexgoexercise"},"content":"     * To print the greeting message at the end.","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"alexgoexercise"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":53,"author":{"gitId":"alexgoexercise"},"content":"    public static void printExitingGreet() {","lastModifiedDate":"2023-02-26"},{"lineNumber":54,"author":{"gitId":"alexgoexercise"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-02-26"},{"lineNumber":55,"author":{"gitId":"alexgoexercise"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-02-26"},{"lineNumber":56,"author":{"gitId":"alexgoexercise"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-02-26"},{"lineNumber":57,"author":{"gitId":"alexgoexercise"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":58,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":59,"author":{"gitId":"alexgoexercise"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":60,"author":{"gitId":"alexgoexercise"},"content":"     * To print the menu of simple instructions.","lastModifiedDate":"2023-02-26"},{"lineNumber":61,"author":{"gitId":"alexgoexercise"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":62,"author":{"gitId":"alexgoexercise"},"content":"    public static void printMenu() {","lastModifiedDate":"2023-02-26"},{"lineNumber":63,"author":{"gitId":"alexgoexercise"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-02-26"},{"lineNumber":64,"author":{"gitId":"alexgoexercise"},"content":"        System.out.println(\"Try the following commands:\");","lastModifiedDate":"2023-02-26"},{"lineNumber":65,"author":{"gitId":"alexgoexercise"},"content":"        System.out.println(\"1. list: show the list of tasks;\");","lastModifiedDate":"2023-02-26"},{"lineNumber":66,"author":{"gitId":"alexgoexercise"},"content":"        System.out.println(\"2. todo: add a task without starting time/deadline to the list;\");","lastModifiedDate":"2023-02-26"},{"lineNumber":67,"author":{"gitId":"alexgoexercise"},"content":"        System.out.println(\"3. deadline: add a task with deadline to the list;\");","lastModifiedDate":"2023-02-26"},{"lineNumber":68,"author":{"gitId":"alexgoexercise"},"content":"        System.out.println(\"4. event: add a task with specific starting and ending time\");","lastModifiedDate":"2023-02-26"},{"lineNumber":69,"author":{"gitId":"alexgoexercise"},"content":"        System.out.println(\"5, mark: mark a task as \u0027done\u0027 state;\");","lastModifiedDate":"2023-02-26"},{"lineNumber":70,"author":{"gitId":"alexgoexercise"},"content":"        System.out.println(\"6. unmark: unmark a task from \u0027done\u0027 state;\");","lastModifiedDate":"2023-02-26"},{"lineNumber":71,"author":{"gitId":"alexgoexercise"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-02-26"},{"lineNumber":72,"author":{"gitId":"alexgoexercise"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":73,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":74,"author":{"gitId":"alexgoexercise"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":75,"author":{"gitId":"alexgoexercise"},"content":"     * To echo the command after successfully adding a task.","lastModifiedDate":"2023-02-26"},{"lineNumber":76,"author":{"gitId":"alexgoexercise"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":77,"author":{"gitId":"alexgoexercise"},"content":"    public static void echoAdd() {","lastModifiedDate":"2023-02-26"},{"lineNumber":78,"author":{"gitId":"alexgoexercise"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-02-26"},{"lineNumber":79,"author":{"gitId":"alexgoexercise"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-02-26"},{"lineNumber":80,"author":{"gitId":"alexgoexercise"},"content":"        System.out.println(\"  added: \" + KeqingArrayList.tasks.get(getTaskCount() - 1).toString());","lastModifiedDate":"2023-02-26"},{"lineNumber":81,"author":{"gitId":"alexgoexercise"},"content":"        System.out.println(\"Now you have \" + getTaskCount() + \" tasks in your list.\");","lastModifiedDate":"2023-02-26"},{"lineNumber":82,"author":{"gitId":"alexgoexercise"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-02-26"},{"lineNumber":83,"author":{"gitId":"alexgoexercise"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":84,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":85,"author":{"gitId":"alexgoexercise"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":86,"author":{"gitId":"alexgoexercise"},"content":"     * To echo the command after successfully deleting a task.","lastModifiedDate":"2023-02-26"},{"lineNumber":87,"author":{"gitId":"alexgoexercise"},"content":"     * @param index the index of the task being deleted","lastModifiedDate":"2023-02-26"},{"lineNumber":88,"author":{"gitId":"alexgoexercise"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":89,"author":{"gitId":"alexgoexercise"},"content":"    public static void echoDelete(int index) {","lastModifiedDate":"2023-02-26"},{"lineNumber":90,"author":{"gitId":"alexgoexercise"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-02-26"},{"lineNumber":91,"author":{"gitId":"alexgoexercise"},"content":"        System.out.println(\"Got it. I\u0027ve deleted this task:\");","lastModifiedDate":"2023-02-26"},{"lineNumber":92,"author":{"gitId":"alexgoexercise"},"content":"        System.out.println(\"  deleted: \" + KeqingArrayList.tasks.get(index).toString());","lastModifiedDate":"2023-02-26"},{"lineNumber":93,"author":{"gitId":"alexgoexercise"},"content":"        System.out.println(\"Now you have \" + getTaskCount() + \" tasks in your list.\");","lastModifiedDate":"2023-02-26"},{"lineNumber":94,"author":{"gitId":"alexgoexercise"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-02-26"},{"lineNumber":95,"author":{"gitId":"alexgoexercise"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":96,"author":{"gitId":"alexgoexercise"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"alexgoexercise":96}},{"path":"src/main/java/keqing/exceptions/IllegalInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alexgoexercise"},"content":"package keqing.exceptions;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"alexgoexercise"},"content":"public class IllegalInputException extends Exception {","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"alexgoexercise"},"content":"    public IllegalInputException(String message){","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"alexgoexercise"},"content":"        super(message);","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"alexgoexercise"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"alexgoexercise"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"alexgoexercise":7}},{"path":"src/main/java/keqing/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alexgoexercise"},"content":"package keqing.tasks;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"alexgoexercise"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"alexgoexercise"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"alexgoexercise"},"content":"    protected String by;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"alexgoexercise"},"content":"    public static final String sign \u003d \"D\";","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"alexgoexercise"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"alexgoexercise"},"content":"     * Constructs the deadline object.","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"alexgoexercise"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"alexgoexercise"},"content":"     * @param description the details of the deadline task","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"alexgoexercise"},"content":"     * @param by the exact deadline","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"alexgoexercise"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"alexgoexercise"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"alexgoexercise"},"content":"        super(description);","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"alexgoexercise"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"alexgoexercise"},"content":"        Task.taskCount +\u003d 1;","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"alexgoexercise"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"alexgoexercise"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"alexgoexercise"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"alexgoexercise"},"content":"     * @return a string indicating the type of the task","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"alexgoexercise"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"alexgoexercise"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"alexgoexercise"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"alexgoexercise"},"content":"        return sign;","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"alexgoexercise"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"alexgoexercise"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"alexgoexercise"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"alexgoexercise"},"content":"     * @return a string indicating the detailed information of the task","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"alexgoexercise"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"alexgoexercise"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"alexgoexercise"},"content":"    public String toString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"alexgoexercise"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"alexgoexercise"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"alexgoexercise"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"alexgoexercise"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"alexgoexercise"},"content":"     * @return the ArrayList of string containing the details of the deadline/event starting and ending time","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"alexgoexercise"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"alexgoexercise"},"content":"    public ArrayList\u003cString\u003e returnAttribute() {","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"alexgoexercise"},"content":"        ArrayList\u003cString\u003e attributes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"alexgoexercise"},"content":"        attributes.add(by);","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"alexgoexercise"},"content":"        return attributes;","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"alexgoexercise"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":49,"author":{"gitId":"alexgoexercise"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"alexgoexercise":49}},{"path":"src/main/java/keqing/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alexgoexercise"},"content":"package keqing.tasks;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"alexgoexercise"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"alexgoexercise"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"alexgoexercise"},"content":"    protected String from;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"alexgoexercise"},"content":"    protected String to;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"alexgoexercise"},"content":"    public static final String sign \u003d \"E\";","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"alexgoexercise"},"content":"    public Event (String description, String from, String to) {","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"alexgoexercise"},"content":"        super(description);","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"alexgoexercise"},"content":"        Task.taskCount +\u003d 1;","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"alexgoexercise"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"alexgoexercise"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"alexgoexercise"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"alexgoexercise"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"alexgoexercise"},"content":"     * Gets the type of tasks.","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"alexgoexercise"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"alexgoexercise"},"content":"     * @return the string indicating the type of the task","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"alexgoexercise"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"alexgoexercise"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"alexgoexercise"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"alexgoexercise"},"content":"        return sign;","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"alexgoexercise"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"alexgoexercise"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"alexgoexercise"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"alexgoexercise"},"content":"     * @return a string indicating the detailed information of the task","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"alexgoexercise"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"alexgoexercise"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"alexgoexercise"},"content":"    public String toString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"alexgoexercise"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"alexgoexercise"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"alexgoexercise"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"alexgoexercise"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"alexgoexercise"},"content":"     * @return the ArrayList of string containing the details of the deadline/event starting and ending time","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"alexgoexercise"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"alexgoexercise"},"content":"    @Override","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"alexgoexercise"},"content":"    public ArrayList\u003cString\u003e returnAttribute() {","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"alexgoexercise"},"content":"        ArrayList\u003cString\u003e attributes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"alexgoexercise"},"content":"        attributes.add(from);","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"alexgoexercise"},"content":"        attributes.add(to);","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"alexgoexercise"},"content":"        return attributes;","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"alexgoexercise"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"alexgoexercise"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"alexgoexercise":48}},{"path":"src/main/java/keqing/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alexgoexercise"},"content":"package keqing.tasks;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"alexgoexercise"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"alexgoexercise"},"content":"public class Task {","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"alexgoexercise"},"content":"    protected String description;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"alexgoexercise"},"content":"    protected static int taskCount \u003d 0;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"alexgoexercise"},"content":"    protected boolean isDone \u003d false;","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"alexgoexercise"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"alexgoexercise"},"content":"     * To set the status of a task as finished.","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"alexgoexercise"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"alexgoexercise"},"content":"    public void setDone() {","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"alexgoexercise"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"alexgoexercise"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"alexgoexercise"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"alexgoexercise"},"content":"     * To set the status of a task as unfinished.","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"alexgoexercise"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"alexgoexercise"},"content":"    public void setNotDone() {","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"alexgoexercise"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"alexgoexercise"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"alexgoexercise"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"alexgoexercise"},"content":"     * A constructor.","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"alexgoexercise"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"alexgoexercise"},"content":"    public Task() {","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"alexgoexercise"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"alexgoexercise"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"alexgoexercise"},"content":"     * A constructor.","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"alexgoexercise"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"alexgoexercise"},"content":"     * @param description the content of the task typed in by the user","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"alexgoexercise"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"alexgoexercise"},"content":"    public Task(String description) {","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"alexgoexercise"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"alexgoexercise"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"alexgoexercise"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"alexgoexercise"},"content":"     * Gets the type of tasks.","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"alexgoexercise"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"alexgoexercise"},"content":"     * @return the string indicating the type of the task","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"alexgoexercise"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"alexgoexercise"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"alexgoexercise"},"content":"        return null;","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"alexgoexercise"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"alexgoexercise"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":49,"author":{"gitId":"alexgoexercise"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"alexgoexercise"},"content":"     * @return the description of the task","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"alexgoexercise"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"alexgoexercise"},"content":"    public String getDescription() {","lastModifiedDate":"2023-02-24"},{"lineNumber":53,"author":{"gitId":"alexgoexercise"},"content":"        return description;","lastModifiedDate":"2023-02-24"},{"lineNumber":54,"author":{"gitId":"alexgoexercise"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":56,"author":{"gitId":"alexgoexercise"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":57,"author":{"gitId":"alexgoexercise"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":58,"author":{"gitId":"alexgoexercise"},"content":"     * @return the current total number of tasks","lastModifiedDate":"2023-02-26"},{"lineNumber":59,"author":{"gitId":"alexgoexercise"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":60,"author":{"gitId":"alexgoexercise"},"content":"    public static int getTaskCount() {","lastModifiedDate":"2023-01-30"},{"lineNumber":61,"author":{"gitId":"alexgoexercise"},"content":"        return taskCount;","lastModifiedDate":"2023-01-30"},{"lineNumber":62,"author":{"gitId":"alexgoexercise"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":63,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":64,"author":{"gitId":"alexgoexercise"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":65,"author":{"gitId":"alexgoexercise"},"content":"     * To set the total number of tasks","lastModifiedDate":"2023-02-26"},{"lineNumber":66,"author":{"gitId":"alexgoexercise"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":67,"author":{"gitId":"alexgoexercise"},"content":"     * @param count the number to be set","lastModifiedDate":"2023-02-26"},{"lineNumber":68,"author":{"gitId":"alexgoexercise"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":69,"author":{"gitId":"alexgoexercise"},"content":"    public static void setTaskCount(int count) {","lastModifiedDate":"2023-02-16"},{"lineNumber":70,"author":{"gitId":"alexgoexercise"},"content":"        taskCount \u003d count;","lastModifiedDate":"2023-02-16"},{"lineNumber":71,"author":{"gitId":"alexgoexercise"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":72,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":73,"author":{"gitId":"alexgoexercise"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":74,"author":{"gitId":"alexgoexercise"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":75,"author":{"gitId":"alexgoexercise"},"content":"     * @return a string indicating the detailed information of the task","lastModifiedDate":"2023-02-26"},{"lineNumber":76,"author":{"gitId":"alexgoexercise"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":77,"author":{"gitId":"alexgoexercise"},"content":"    public String toString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":78,"author":{"gitId":"alexgoexercise"},"content":"        if(isDone){","lastModifiedDate":"2023-01-30"},{"lineNumber":79,"author":{"gitId":"alexgoexercise"},"content":"            return \"[X] \" +  description;","lastModifiedDate":"2023-01-31"},{"lineNumber":80,"author":{"gitId":"alexgoexercise"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":81,"author":{"gitId":"alexgoexercise"},"content":"        else{","lastModifiedDate":"2023-01-30"},{"lineNumber":82,"author":{"gitId":"alexgoexercise"},"content":"            return \"[ ] \" +  description;","lastModifiedDate":"2023-01-31"},{"lineNumber":83,"author":{"gitId":"alexgoexercise"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":84,"author":{"gitId":"alexgoexercise"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":85,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":86,"author":{"gitId":"alexgoexercise"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":87,"author":{"gitId":"alexgoexercise"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":88,"author":{"gitId":"alexgoexercise"},"content":"     * @return the ArrayList of string containing the details of the deadline/event starting and ending time","lastModifiedDate":"2023-02-26"},{"lineNumber":89,"author":{"gitId":"alexgoexercise"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":90,"author":{"gitId":"alexgoexercise"},"content":"    public ArrayList\u003cString\u003e returnAttribute() {","lastModifiedDate":"2023-02-26"},{"lineNumber":91,"author":{"gitId":"alexgoexercise"},"content":"        return null;","lastModifiedDate":"2023-02-26"},{"lineNumber":92,"author":{"gitId":"alexgoexercise"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":93,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":94,"author":{"gitId":"alexgoexercise"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":95,"author":{"gitId":"alexgoexercise"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":96,"author":{"gitId":"alexgoexercise"},"content":"     * @return the current status of the task","lastModifiedDate":"2023-02-26"},{"lineNumber":97,"author":{"gitId":"alexgoexercise"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":98,"author":{"gitId":"alexgoexercise"},"content":"    public boolean getStatus() {","lastModifiedDate":"2023-02-24"},{"lineNumber":99,"author":{"gitId":"alexgoexercise"},"content":"        return isDone;","lastModifiedDate":"2023-02-24"},{"lineNumber":100,"author":{"gitId":"alexgoexercise"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":101,"author":{"gitId":"alexgoexercise"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"alexgoexercise":101}},{"path":"src/main/java/keqing/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alexgoexercise"},"content":"package keqing.tasks;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"alexgoexercise"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"alexgoexercise"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"alexgoexercise"},"content":"    public static final String sign \u003d \"T\";","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"alexgoexercise"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"alexgoexercise"},"content":"        super(description);","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"alexgoexercise"},"content":"        taskCount +\u003d 1;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"alexgoexercise"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"alexgoexercise"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"alexgoexercise"},"content":"     * Gets the type of tasks.","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"alexgoexercise"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"alexgoexercise"},"content":"     * @return the string indicating the type of the task","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"alexgoexercise"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"alexgoexercise"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"alexgoexercise"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"alexgoexercise"},"content":"        return sign;","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"alexgoexercise"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"alexgoexercise"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"alexgoexercise"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"alexgoexercise"},"content":"     * @return a string indicating the detailed information of the task","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"alexgoexercise"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"alexgoexercise"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"alexgoexercise"},"content":"    public String toString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"alexgoexercise"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"alexgoexercise"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"alexgoexercise"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"alexgoexercise"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"alexgoexercise"},"content":"     * @return the ArrayList of string containing the details of the deadline/event starting and ending time","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"alexgoexercise"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"alexgoexercise"},"content":"    @Override","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"alexgoexercise"},"content":"    public ArrayList\u003cString\u003e returnAttribute() {","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"alexgoexercise"},"content":"        return null;","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"alexgoexercise"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"alexgoexercise"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"alexgoexercise":40}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"alexgoexercise"},"content":"todo borrow book","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"alexgoexercise"},"content":"list","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"alexgoexercise"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"alexgoexercise"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"alexgoexercise":4}}]
