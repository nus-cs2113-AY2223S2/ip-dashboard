[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alexgoexercise"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"alexgoexercise"},"content":"    protected String by;","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"alexgoexercise"},"content":"    public Deadline(String description, int taskID) {","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"alexgoexercise"},"content":"        super(description, taskID);","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"alexgoexercise"},"content":"        if (super.description.contains(\"/by\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"alexgoexercise"},"content":"            int indexOfBy \u003d super.description.indexOf(\"/by\");","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"alexgoexercise"},"content":"            if (indexOfBy + 3 \u003c super.description.length()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"alexgoexercise"},"content":"                by \u003d super.description.substring(indexOfBy + 3).trim();","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"alexgoexercise"},"content":"                this.description \u003d super.description.substring(0, indexOfBy);","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"alexgoexercise"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"alexgoexercise"},"content":"            else {","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"alexgoexercise"},"content":"                System.out.println(\"You typed wronoglyyyy!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"alexgoexercise"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"alexgoexercise"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"alexgoexercise"},"content":"        else {","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"alexgoexercise"},"content":"            System.out.println(\"You didn\u0027t type correctly (ㆆ_ㆆ)\");","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"alexgoexercise"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"alexgoexercise"},"content":"        taskCount +\u003d 1;","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"alexgoexercise"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"alexgoexercise"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"alexgoexercise"},"content":"    public String toString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"alexgoexercise"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"alexgoexercise"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"alexgoexercise"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"alexgoexercise":26}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alexgoexercise"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"alexgoexercise"},"content":"    public static void drawLine(String symbol) {","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"alexgoexercise"},"content":"        for (int i \u003d 0; i \u003c 40; i++) {","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"alexgoexercise"},"content":"            System.out.print(symbol);","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"alexgoexercise"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"alexgoexercise"},"content":"        System.out.println();","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"alexgoexercise"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"alexgoexercise"},"content":"    public static void echo(Task[] tasks) {","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"alexgoexercise"},"content":"        drawLine(\"_\");","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"alexgoexercise"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"alexgoexercise"},"content":"        System.out.println(\"  added: \" + tasks[Task.getTaskCount() - 1].toString());","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"alexgoexercise"},"content":"        System.out.println(\"Now you have \" + Task.getTaskCount() + \" tasks in your list.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"alexgoexercise"},"content":"        drawLine(\"_\");","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"alexgoexercise"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"alexgoexercise"},"content":"    public static void printTaskList(Task[] tasks) {","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"alexgoexercise"},"content":"        drawLine(\"_\");","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"alexgoexercise"},"content":"        if (Task.getTaskCount() \u003d\u003d 0) {","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"alexgoexercise"},"content":"            System.out.println(\"The list is empty...!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"alexgoexercise"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"alexgoexercise"},"content":"        for (int i \u003d 0; i \u003c Task.getTaskCount(); i++) {","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"alexgoexercise"},"content":"            System.out.print((i + 1) + \".\");","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"alexgoexercise"},"content":"            System.out.println(tasks[i].toString());","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"alexgoexercise"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"alexgoexercise"},"content":"        drawLine(\"_\");","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"alexgoexercise"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"alexgoexercise"},"content":"    public static void markTask(Task[] tasks, int currentID, boolean isDone) {","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"alexgoexercise"},"content":"        drawLine(\"_\");","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"alexgoexercise"},"content":"        if (currentID \u003c 0 || currentID \u003e\u003d Task.getTaskCount()) {","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"alexgoexercise"},"content":"            System.out.println(\"Cannot find this task!\");","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"alexgoexercise"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"alexgoexercise"},"content":"        else if (isDone) {","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"alexgoexercise"},"content":"            tasks[currentID].markDone();","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"alexgoexercise"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"alexgoexercise"},"content":"            System.out.println(\"   \" + tasks[currentID].toString());","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"alexgoexercise"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"alexgoexercise"},"content":"        else {","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"alexgoexercise"},"content":"            tasks[currentID].unmarkDone();","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"alexgoexercise"},"content":"            System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"alexgoexercise"},"content":"            System.out.println(\"   \" + tasks[currentID].toString());","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"alexgoexercise"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"alexgoexercise"},"content":"        drawLine(\"_\");","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"alexgoexercise"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"alexgoexercise"},"content":"    public static void printMenu() {","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"alexgoexercise"},"content":"        drawLine(\"_\");","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"alexgoexercise"},"content":"        System.out.println(\"Try the following commands:\");","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"alexgoexercise"},"content":"        System.out.println(\"1. list: show the list of tasks;\");","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"alexgoexercise"},"content":"        System.out.println(\"2. todo: add a task without starting time/deadline to the list;\");","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"alexgoexercise"},"content":"        System.out.println(\"3. deadline: add a task with deadline to the list;\");","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"alexgoexercise"},"content":"        System.out.println(\"4. event: add a task with specific starting and ending time\");","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"alexgoexercise"},"content":"        System.out.println(\"5, mark: mark a task as \u0027done\u0027 state;\");","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"alexgoexercise"},"content":"        System.out.println(\"6. unmark: unmark a task from \u0027done\u0027 state;\");","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"alexgoexercise"},"content":"        drawLine(\"_\");","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"alexgoexercise"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"alexgoexercise"},"content":"    public static void doCommand(Task[] tasks, String text) {","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"alexgoexercise"},"content":"        String splittedText[] \u003d text.split(\" \", 2);","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"alexgoexercise"},"content":"        String command \u003d splittedText[0];","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"alexgoexercise"},"content":"        String content \u003d splittedText[splittedText.length - 1];","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"alexgoexercise"},"content":"        switch (command) {","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"alexgoexercise"},"content":"        case \"list\":","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"alexgoexercise"},"content":"            printTaskList(tasks);","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"alexgoexercise"},"content":"            break;","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"alexgoexercise"},"content":"        case \"menu\":","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"alexgoexercise"},"content":"            printMenu();","lastModifiedDate":"2023-02-01"},{"lineNumber":71,"author":{"gitId":"alexgoexercise"},"content":"            break;","lastModifiedDate":"2023-02-01"},{"lineNumber":72,"author":{"gitId":"alexgoexercise"},"content":"        case \"mark\":","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"alexgoexercise"},"content":"        case \"unmark\":","lastModifiedDate":"2023-01-31"},{"lineNumber":74,"author":{"gitId":"alexgoexercise"},"content":"            int currentID \u003d Integer.parseInt(text.substring(text.length() - 1)) - 1;","lastModifiedDate":"2023-01-30"},{"lineNumber":75,"author":{"gitId":"alexgoexercise"},"content":"            boolean isDone;","lastModifiedDate":"2023-01-30"},{"lineNumber":76,"author":{"gitId":"alexgoexercise"},"content":"            if (text.contains(\"unmark\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":77,"author":{"gitId":"alexgoexercise"},"content":"                isDone \u003d false;","lastModifiedDate":"2023-01-30"},{"lineNumber":78,"author":{"gitId":"alexgoexercise"},"content":"                markTask(tasks, currentID, isDone);","lastModifiedDate":"2023-01-30"},{"lineNumber":79,"author":{"gitId":"alexgoexercise"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":80,"author":{"gitId":"alexgoexercise"},"content":"            else {","lastModifiedDate":"2023-01-30"},{"lineNumber":81,"author":{"gitId":"alexgoexercise"},"content":"                isDone \u003d true;","lastModifiedDate":"2023-01-30"},{"lineNumber":82,"author":{"gitId":"alexgoexercise"},"content":"                markTask(tasks, currentID, isDone);","lastModifiedDate":"2023-01-30"},{"lineNumber":83,"author":{"gitId":"alexgoexercise"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":84,"author":{"gitId":"alexgoexercise"},"content":"            break;","lastModifiedDate":"2023-01-31"},{"lineNumber":85,"author":{"gitId":"alexgoexercise"},"content":"        case \"todo\":","lastModifiedDate":"2023-01-31"},{"lineNumber":86,"author":{"gitId":"alexgoexercise"},"content":"            Todo todoTask \u003d new Todo(content, Task.getTaskCount());","lastModifiedDate":"2023-01-31"},{"lineNumber":87,"author":{"gitId":"alexgoexercise"},"content":"            tasks[Task.getTaskCount() - 1] \u003d todoTask;","lastModifiedDate":"2023-01-31"},{"lineNumber":88,"author":{"gitId":"alexgoexercise"},"content":"            echo(tasks);","lastModifiedDate":"2023-01-31"},{"lineNumber":89,"author":{"gitId":"alexgoexercise"},"content":"            break;","lastModifiedDate":"2023-01-31"},{"lineNumber":90,"author":{"gitId":"alexgoexercise"},"content":"        case \"deadline\":","lastModifiedDate":"2023-01-31"},{"lineNumber":91,"author":{"gitId":"alexgoexercise"},"content":"            Deadline deadlineTask \u003d new Deadline(content, Task.getTaskCount());","lastModifiedDate":"2023-01-31"},{"lineNumber":92,"author":{"gitId":"alexgoexercise"},"content":"            tasks[Task.getTaskCount() - 1] \u003d deadlineTask;","lastModifiedDate":"2023-01-31"},{"lineNumber":93,"author":{"gitId":"alexgoexercise"},"content":"            echo(tasks);","lastModifiedDate":"2023-01-31"},{"lineNumber":94,"author":{"gitId":"alexgoexercise"},"content":"            break;","lastModifiedDate":"2023-01-31"},{"lineNumber":95,"author":{"gitId":"alexgoexercise"},"content":"        case \"event\":","lastModifiedDate":"2023-01-31"},{"lineNumber":96,"author":{"gitId":"alexgoexercise"},"content":"            Event eventTask \u003d new Event(content, Task.getTaskCount());","lastModifiedDate":"2023-01-31"},{"lineNumber":97,"author":{"gitId":"alexgoexercise"},"content":"            tasks[Task.getTaskCount() - 1] \u003d eventTask;","lastModifiedDate":"2023-01-31"},{"lineNumber":98,"author":{"gitId":"alexgoexercise"},"content":"            echo(tasks);","lastModifiedDate":"2023-01-31"},{"lineNumber":99,"author":{"gitId":"alexgoexercise"},"content":"            break;","lastModifiedDate":"2023-01-31"},{"lineNumber":100,"author":{"gitId":"alexgoexercise"},"content":"        default:","lastModifiedDate":"2023-01-31"},{"lineNumber":101,"author":{"gitId":"alexgoexercise"},"content":"            drawLine(\"_\");","lastModifiedDate":"2023-01-31"},{"lineNumber":102,"author":{"gitId":"alexgoexercise"},"content":"            System.out.println(\"You have done nothing...?\" + System.lineSeparator()","lastModifiedDate":"2023-01-31"},{"lineNumber":103,"author":{"gitId":"alexgoexercise"},"content":"                    + \"if you need more instruction, please type \u0027menu\u0027.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":104,"author":{"gitId":"alexgoexercise"},"content":"            drawLine(\"_\");","lastModifiedDate":"2023-01-31"},{"lineNumber":105,"author":{"gitId":"alexgoexercise"},"content":"            break;","lastModifiedDate":"2023-01-31"},{"lineNumber":106,"author":{"gitId":"alexgoexercise"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":107,"author":{"gitId":"alexgoexercise"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":108,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":109,"author":{"gitId":"alexgoexercise"},"content":"    public static void loopCommand(Task[] tasks) {","lastModifiedDate":"2023-01-31"},{"lineNumber":110,"author":{"gitId":"alexgoexercise"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-31"},{"lineNumber":111,"author":{"gitId":"alexgoexercise"},"content":"        String text \u003d in.nextLine();","lastModifiedDate":"2023-01-31"},{"lineNumber":112,"author":{"gitId":"alexgoexercise"},"content":"        while(!text.equals(\"bye\")){","lastModifiedDate":"2023-01-31"},{"lineNumber":113,"author":{"gitId":"alexgoexercise"},"content":"            doCommand(tasks, text);","lastModifiedDate":"2023-01-31"},{"lineNumber":114,"author":{"gitId":"alexgoexercise"},"content":"            text \u003d in.nextLine();","lastModifiedDate":"2023-01-31"},{"lineNumber":115,"author":{"gitId":"alexgoexercise"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":116,"author":{"gitId":"alexgoexercise"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":118,"author":{"gitId":"alexgoexercise"},"content":"        Task[] tasks \u003d new Task[100];","lastModifiedDate":"2023-01-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":125,"author":{"gitId":"alexgoexercise"},"content":"        drawLine(\"_\");","lastModifiedDate":"2023-01-30"},{"lineNumber":126,"author":{"gitId":"alexgoexercise"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");","lastModifiedDate":"2023-01-30"},{"lineNumber":127,"author":{"gitId":"alexgoexercise"},"content":"        System.out.println(\"What can I do for you?\" + System.lineSeparator() + \"Type \u0027menu\u0027 to know the commands.\");","lastModifiedDate":"2023-02-01"},{"lineNumber":128,"author":{"gitId":"alexgoexercise"},"content":"        drawLine(\"_\");","lastModifiedDate":"2023-01-30"},{"lineNumber":129,"author":{"gitId":"alexgoexercise"},"content":"        loopCommand(tasks);","lastModifiedDate":"2023-01-31"},{"lineNumber":130,"author":{"gitId":"alexgoexercise"},"content":"        drawLine(\"_\");","lastModifiedDate":"2023-01-30"},{"lineNumber":131,"author":{"gitId":"alexgoexercise"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-30"},{"lineNumber":132,"author":{"gitId":"alexgoexercise"},"content":"        drawLine(\"_\");","lastModifiedDate":"2023-01-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"alexgoexercise":124,"-":10}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alexgoexercise"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"alexgoexercise"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"alexgoexercise"},"content":"    protected String from;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"alexgoexercise"},"content":"    protected String to;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"alexgoexercise"},"content":"    public Event(String description, int taskID) {","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"alexgoexercise"},"content":"        super(description, taskID);","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"alexgoexercise"},"content":"        if (super.description.contains(\"/from\") \u0026\u0026 super.description.contains(\"/to\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"alexgoexercise"},"content":"            int indexOfFrom \u003d super.description.indexOf(\"/from\");","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"alexgoexercise"},"content":"            int indexOfTo \u003d super.description.indexOf(\"/to\");","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"alexgoexercise"},"content":"            if (indexOfFrom \u003c indexOfTo) {","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"alexgoexercise"},"content":"                from \u003d super.description.substring(indexOfFrom + 5, indexOfTo).trim();","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"alexgoexercise"},"content":"                to \u003d super.description.substring(indexOfTo + 3).trim();","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"alexgoexercise"},"content":"                this.description \u003d super.description.substring(0, indexOfFrom);","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"alexgoexercise"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"alexgoexercise"},"content":"            else {","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"alexgoexercise"},"content":"                System.out.println(\"You typed wronoglyyyy!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"alexgoexercise"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"alexgoexercise"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"alexgoexercise"},"content":"        else {","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"alexgoexercise"},"content":"            System.out.println(\"You didn\u0027t type correctly (ㆆ_ㆆ)\");","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"alexgoexercise"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"alexgoexercise"},"content":"        taskCount +\u003d 1;","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"alexgoexercise"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"alexgoexercise"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"alexgoexercise"},"content":"    public String toString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"alexgoexercise"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"alexgoexercise"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"alexgoexercise"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"alexgoexercise":30}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alexgoexercise"},"content":"public class Task {","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"alexgoexercise"},"content":"    protected String description;","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"alexgoexercise"},"content":"    protected static int taskCount \u003d 0;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"alexgoexercise"},"content":"    protected int taskID;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"alexgoexercise"},"content":"    protected boolean isDone \u003d false;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"alexgoexercise"},"content":"    public void markDone() {","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"alexgoexercise"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"alexgoexercise"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"alexgoexercise"},"content":"    public void unmarkDone() {","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"alexgoexercise"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"alexgoexercise"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"alexgoexercise"},"content":"    public Task(String description, int taskID) {","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"alexgoexercise"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"alexgoexercise"},"content":"        this.taskID \u003d taskID;","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"alexgoexercise"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"alexgoexercise"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"alexgoexercise"},"content":"        return description;","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"alexgoexercise"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"alexgoexercise"},"content":"    public int getID() {","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"alexgoexercise"},"content":"        return taskID;","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"alexgoexercise"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"alexgoexercise"},"content":"    public static int getTaskCount() {","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"alexgoexercise"},"content":"        return taskCount;","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"alexgoexercise"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"alexgoexercise"},"content":"    public String toString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"alexgoexercise"},"content":"        if(isDone){","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"alexgoexercise"},"content":"            return \"[X] \" +  description;","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"alexgoexercise"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"alexgoexercise"},"content":"        else{","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"alexgoexercise"},"content":"            return \"[ ] \" +  description;","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"alexgoexercise"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"alexgoexercise"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"alexgoexercise"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"alexgoexercise":41}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alexgoexercise"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"alexgoexercise"},"content":"    public Todo(String description, int taskID) {","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"alexgoexercise"},"content":"        super(description, taskID);","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"alexgoexercise"},"content":"        taskCount +\u003d 1;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"alexgoexercise"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"alexgoexercise"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"alexgoexercise"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"alexgoexercise"},"content":"    public String toString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"alexgoexercise"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"alexgoexercise"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"alexgoexercise"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"alexgoexercise":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"alexgoexercise"},"content":"todo borrow book","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"alexgoexercise"},"content":"list","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"alexgoexercise"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"alexgoexercise"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"alexgoexercise":4}}]
