[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"dsicol"},"content":"## Contents","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"dsicol"},"content":"- Quick Start","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"dsicol"},"content":"- Features","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"dsicol"},"content":"  - Adding a Todo: [```todo```](#adding-a-todo-todo)","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"dsicol"},"content":"  - Adding a Deadline: [```deadline```](#adding-a-deadline-deadline)","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"dsicol"},"content":"  - Adding an Event: [```event```](#adding-an-event-event)","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"dsicol"},"content":"  - Listing all tasks: All tasks: [```list```](#listing-all-tasks-list) and Tasks on specific date: [```list```](#listing-all-tasks-occurring-on-a-specific-date)","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"dsicol"},"content":"  - Finding tasks: [```find```](#finding-tasks-find)","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"dsicol"},"content":"  - Marking a task: [```mark```](#marking-a-task-mark)","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"dsicol"},"content":"  - Unmarking a task: [```unmark```](#unmarking-a-task-unmark)","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"dsicol"},"content":"  - Deleting a task: [```delete```](#deleting-a-task-delete)","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"dsicol"},"content":"  - Exiting the program: [```bye```](#exiting-the-program-exit)","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"dsicol"},"content":"  - Saving the data","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"dsicol"},"content":"## Quick Start","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"dsicol"},"content":"1. Ensure you have Java ```11``` installed in your Computer.","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"dsicol"},"content":"2. Download the latest ```ip.jar``` from [here](https://github.com/dsicol/ip/releases/tag/A-Jar).","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"dsicol"},"content":"3. Copy the file to the folder you want to use as the home folder for your Inu.","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"dsicol"},"content":"4. Follow the file path in your OS command prompt, and run Inu with ```java -jar ip.jar```","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"dsicol"},"content":"5. Type the command in the input box and press Enter to execute it.","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"dsicol"},"content":"6. Refer to the [```features```](#features) below for details of each command.","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"dsicol"},"content":"### Viewing help: ```help```","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"dsicol"},"content":"Shows the list of all available commands.","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"dsicol"},"content":"Format: ```help```","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"dsicol"},"content":"### Adding a Todo: ```todo```","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"dsicol"},"content":"Adds a todo to the task list.","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"dsicol"},"content":"Format: ```todo \u003cdescription\u003e```","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"dsicol"},"content":"- Description cannot be empty.","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":40,"author":{"gitId":"dsicol"},"content":"Example: ```todo submit iP```","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":42,"author":{"gitId":"dsicol"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":44,"author":{"gitId":"dsicol"},"content":"### Adding a Deadline: ```deadline```","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"dsicol"},"content":"Adds a Deadline to the task list.","lastModifiedDate":"2023-02-23"},{"lineNumber":47,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":48,"author":{"gitId":"dsicol"},"content":"Format: ```deadline \u003cdescription\u003e /by \u003cdue date and time\u003e```","lastModifiedDate":"2023-02-23"},{"lineNumber":49,"author":{"gitId":"dsicol"},"content":"- Description and due date and time cannot be empty.","lastModifiedDate":"2023-02-23"},{"lineNumber":50,"author":{"gitId":"dsicol"},"content":"- Format of time is dd/mm/yyyy HH:mm.","lastModifiedDate":"2023-02-23"},{"lineNumber":51,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":52,"author":{"gitId":"dsicol"},"content":"Example: ```deadline submit iP /by 07/03/2023 23:59```","lastModifiedDate":"2023-02-23"},{"lineNumber":53,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":54,"author":{"gitId":"dsicol"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":55,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":56,"author":{"gitId":"dsicol"},"content":"### Adding an Event: ```event```","lastModifiedDate":"2023-02-23"},{"lineNumber":57,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":58,"author":{"gitId":"dsicol"},"content":"Adds an Event to the task list.","lastModifiedDate":"2023-02-23"},{"lineNumber":59,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":60,"author":{"gitId":"dsicol"},"content":"Format: ```event \u003cdescription\u003e /from \u003cfrom date and time\u003e /to \u003cto date and time\u003e```","lastModifiedDate":"2023-02-23"},{"lineNumber":61,"author":{"gitId":"dsicol"},"content":"- Description, from date and time and to date and time cannot be empty.","lastModifiedDate":"2023-02-23"},{"lineNumber":62,"author":{"gitId":"dsicol"},"content":"- Format of time is dd/mm/yyyy HH:mm.","lastModifiedDate":"2023-02-23"},{"lineNumber":63,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":64,"author":{"gitId":"dsicol"},"content":"Example: ```event complete next iP increment /from 01/03/2023 10:30 /to 02/03/2023 17:30```","lastModifiedDate":"2023-02-23"},{"lineNumber":65,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":66,"author":{"gitId":"dsicol"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":67,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":68,"author":{"gitId":"dsicol"},"content":"### Listing all tasks: ```list```","lastModifiedDate":"2023-02-23"},{"lineNumber":69,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":70,"author":{"gitId":"dsicol"},"content":"Lists all the task in the tasks list.","lastModifiedDate":"2023-02-23"},{"lineNumber":71,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":72,"author":{"gitId":"dsicol"},"content":"Format: ```list```","lastModifiedDate":"2023-02-23"},{"lineNumber":73,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":74,"author":{"gitId":"dsicol"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":75,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":76,"author":{"gitId":"dsicol"},"content":"### Listing all tasks occurring on a specific date: ```list```","lastModifiedDate":"2023-02-23"},{"lineNumber":77,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":78,"author":{"gitId":"dsicol"},"content":"Lists all the task occurring on a specific date in the tasks list.","lastModifiedDate":"2023-02-23"},{"lineNumber":79,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":80,"author":{"gitId":"dsicol"},"content":"Format: ```list \u003cdate\u003e```.","lastModifiedDate":"2023-02-23"},{"lineNumber":81,"author":{"gitId":"dsicol"},"content":"- Format of date is dd/mm/yyyy.","lastModifiedDate":"2023-02-23"},{"lineNumber":82,"author":{"gitId":"dsicol"},"content":"- No provision of date lists all tasks instead.","lastModifiedDate":"2023-02-23"},{"lineNumber":83,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":84,"author":{"gitId":"dsicol"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":85,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":86,"author":{"gitId":"dsicol"},"content":"### Finding tasks: ```find```","lastModifiedDate":"2023-02-23"},{"lineNumber":87,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":88,"author":{"gitId":"dsicol"},"content":"Find tasks with a keyword.","lastModifiedDate":"2023-02-23"},{"lineNumber":89,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":90,"author":{"gitId":"dsicol"},"content":"Format: ```find \u003ckeyword\u003e```","lastModifiedDate":"2023-02-23"},{"lineNumber":91,"author":{"gitId":"dsicol"},"content":"- Keyword cannot be empty.","lastModifiedDate":"2023-02-23"},{"lineNumber":92,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":93,"author":{"gitId":"dsicol"},"content":"Example: ```find book```","lastModifiedDate":"2023-02-23"},{"lineNumber":94,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":95,"author":{"gitId":"dsicol"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":96,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":97,"author":{"gitId":"dsicol"},"content":"### Marking a task: ```mark```","lastModifiedDate":"2023-02-23"},{"lineNumber":98,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":99,"author":{"gitId":"dsicol"},"content":"Marks a task as done.","lastModifiedDate":"2023-02-23"},{"lineNumber":100,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":101,"author":{"gitId":"dsicol"},"content":"Format: ```mark \u003cindex\u003e```","lastModifiedDate":"2023-02-23"},{"lineNumber":102,"author":{"gitId":"dsicol"},"content":"- Marks the task at the specified ```\u003cindex\u003e```","lastModifiedDate":"2023-02-23"},{"lineNumber":103,"author":{"gitId":"dsicol"},"content":"- The index refers to the index number shown in the displayed task list.","lastModifiedDate":"2023-02-23"},{"lineNumber":104,"author":{"gitId":"dsicol"},"content":"- The index must be a positive integer 1, 2, 3, ...","lastModifiedDate":"2023-02-23"},{"lineNumber":105,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":106,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":107,"author":{"gitId":"dsicol"},"content":"Example: ```mark 1```","lastModifiedDate":"2023-02-23"},{"lineNumber":108,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":109,"author":{"gitId":"dsicol"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":110,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":111,"author":{"gitId":"dsicol"},"content":"### Unmarking a task: ```unmark```","lastModifiedDate":"2023-02-23"},{"lineNumber":112,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":113,"author":{"gitId":"dsicol"},"content":"Unmarks a task, set is as not done.","lastModifiedDate":"2023-02-23"},{"lineNumber":114,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":115,"author":{"gitId":"dsicol"},"content":"Format: ```unmark \u003cindex\u003e```","lastModifiedDate":"2023-02-23"},{"lineNumber":116,"author":{"gitId":"dsicol"},"content":"- Unmarks the task at the specified ```\u003cindex\u003e```","lastModifiedDate":"2023-02-23"},{"lineNumber":117,"author":{"gitId":"dsicol"},"content":"- The index refers to the index number shown in the displayed task list.","lastModifiedDate":"2023-02-23"},{"lineNumber":118,"author":{"gitId":"dsicol"},"content":"- The index must be a positive integer 1, 2, 3, ...","lastModifiedDate":"2023-02-23"},{"lineNumber":119,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":120,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":121,"author":{"gitId":"dsicol"},"content":"Example: ```unmark 1```","lastModifiedDate":"2023-02-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":123,"author":{"gitId":"dsicol"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":125,"author":{"gitId":"dsicol"},"content":"### Deleting a task: ```delete```","lastModifiedDate":"2023-02-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":127,"author":{"gitId":"dsicol"},"content":"Deletes a task from the task list.","lastModifiedDate":"2023-02-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":129,"author":{"gitId":"dsicol"},"content":"Format: ```delete \u003cindex\u003e```","lastModifiedDate":"2023-02-23"},{"lineNumber":130,"author":{"gitId":"dsicol"},"content":"- Deletes the task at the specified ```\u003cindex\u003e```","lastModifiedDate":"2023-02-23"},{"lineNumber":131,"author":{"gitId":"dsicol"},"content":"- The index refers to the index number shown in the displayed task list.","lastModifiedDate":"2023-02-23"},{"lineNumber":132,"author":{"gitId":"dsicol"},"content":"- The index must be a positive integer 1, 2, 3, ...","lastModifiedDate":"2023-02-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":134,"author":{"gitId":"dsicol"},"content":"Example: ```delete 1```","lastModifiedDate":"2023-02-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":136,"author":{"gitId":"dsicol"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":138,"author":{"gitId":"dsicol"},"content":"### Exiting the program: ```bye```","lastModifiedDate":"2023-02-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":140,"author":{"gitId":"dsicol"},"content":"Exits the program.","lastModifiedDate":"2023-02-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":142,"author":{"gitId":"dsicol"},"content":"Format: ```bye```","lastModifiedDate":"2023-02-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":144,"author":{"gitId":"dsicol"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":146,"author":{"gitId":"dsicol"},"content":"### Saving the data","lastModifiedDate":"2023-02-23"},{"lineNumber":147,"author":{"gitId":"dsicol"},"content":"Inu data are saved in the hard disk automatically after exiting the application. There is no need to save manually.","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"dsicol":121,"-":26}},{"path":"inu.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"dsicol"},"content":"D//[ ]//Study for 2211//2023-03-04T14:00","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"dsicol"},"content":"E//[ ]//2211 midterm//2023-03-04T15:00//2023-03-04T16:00","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"dsicol":2}},{"path":"src/inu.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"dsicol"},"content":"T// //2023 assignment","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"dsicol"},"content":"D// //ee2211 assignment //17 feb","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"dsicol"},"content":"D// //cg2111a midterm practice //15 feb","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"dsicol"},"content":"D// //cs2113 tutorial //15 feb","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"dsicol":4}},{"path":"src/main/java/inu/Inu.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dsicol"},"content":"package inu;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"dsicol"},"content":"import inu.commands.CommandResult;","lastModifiedDate":"2023-02-21"},{"lineNumber":4,"author":{"gitId":"dsicol"},"content":"import inu.task.TaskList;","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"dsicol"},"content":"import inu.storage.StorageFile;","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"dsicol"},"content":"import inu.commons.Ui;","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"dsicol"},"content":"import inu.commands.Command;","lastModifiedDate":"2023-02-21"},{"lineNumber":8,"author":{"gitId":"dsicol"},"content":"import inu.parser.Parser;","lastModifiedDate":"2023-02-21"},{"lineNumber":9,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"dsicol"},"content":"public class Inu {","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"dsicol"},"content":"    public TaskList taskList;","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"dsicol"},"content":"    public void startInu() {","lastModifiedDate":"2023-02-21"},{"lineNumber":15,"author":{"gitId":"dsicol"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"dsicol"},"content":"        StorageFile.loadTaskListFromFile(taskList);","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"dsicol"},"content":"        Ui.printGreeting();","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":19,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":20,"author":{"gitId":"dsicol"},"content":"    public void runInu() {","lastModifiedDate":"2023-02-21"},{"lineNumber":21,"author":{"gitId":"dsicol"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-02-21"},{"lineNumber":22,"author":{"gitId":"dsicol"},"content":"        while (!isExit) {","lastModifiedDate":"2023-02-21"},{"lineNumber":23,"author":{"gitId":"dsicol"},"content":"            final Command c \u003d Parser.parseCommand(taskList);","lastModifiedDate":"2023-02-21"},{"lineNumber":24,"author":{"gitId":"dsicol"},"content":"            final CommandResult result \u003d c.execute(taskList);","lastModifiedDate":"2023-02-21"},{"lineNumber":25,"author":{"gitId":"dsicol"},"content":"            final String output \u003d result.getCommandResult();","lastModifiedDate":"2023-02-21"},{"lineNumber":26,"author":{"gitId":"dsicol"},"content":"            Ui.printOutput(output);","lastModifiedDate":"2023-02-21"},{"lineNumber":27,"author":{"gitId":"dsicol"},"content":"            isExit \u003d c.isExit();","lastModifiedDate":"2023-02-21"},{"lineNumber":28,"author":{"gitId":"dsicol"},"content":"        }","lastModifiedDate":"2023-02-21"},{"lineNumber":29,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":30,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":31,"author":{"gitId":"dsicol"},"content":"    public void closeInu() {","lastModifiedDate":"2023-02-21"},{"lineNumber":32,"author":{"gitId":"dsicol"},"content":"        Ui.printFarewell();","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"dsicol"},"content":"        StorageFile.saveTaskListToFile(taskList);","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"dsicol"},"content":"    public Inu() {","lastModifiedDate":"2023-02-21"},{"lineNumber":37,"author":{"gitId":"dsicol"},"content":"        startInu();","lastModifiedDate":"2023-02-21"},{"lineNumber":38,"author":{"gitId":"dsicol"},"content":"        runInu();","lastModifiedDate":"2023-02-21"},{"lineNumber":39,"author":{"gitId":"dsicol"},"content":"        closeInu();","lastModifiedDate":"2023-02-21"},{"lineNumber":40,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":41,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":42,"author":{"gitId":"dsicol"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"dsicol"},"content":"        new Inu();","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"dsicol"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"dsicol":45}},{"path":"src/main/java/inu/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dsicol"},"content":"package inu.commands;","lastModifiedDate":"2023-02-21"},{"lineNumber":2,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":3,"author":{"gitId":"dsicol"},"content":"import inu.task.TaskList;","lastModifiedDate":"2023-02-21"},{"lineNumber":4,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":5,"author":{"gitId":"dsicol"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"dsicol"},"content":" * Represents an executable command.","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"dsicol"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"dsicol"},"content":"public abstract class Command {","lastModifiedDate":"2023-02-21"},{"lineNumber":9,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":10,"author":{"gitId":"dsicol"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"dsicol"},"content":"     * Checks if exit command is inputted by user.","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"dsicol"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"dsicol"},"content":"     * @return true if exit command is input, false otherwise.","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"dsicol"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"dsicol"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-02-21"},{"lineNumber":16,"author":{"gitId":"dsicol"},"content":"        return this instanceof ExitCommand;","lastModifiedDate":"2023-02-21"},{"lineNumber":17,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":18,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":19,"author":{"gitId":"dsicol"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"dsicol"},"content":"     * Executes the command and returns the corresponding feedback to user.","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"dsicol"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"dsicol"},"content":"     * @param taskList task list to contain the tasks.","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"dsicol"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"dsicol"},"content":"    public abstract CommandResult execute(TaskList taskList);","lastModifiedDate":"2023-02-21"},{"lineNumber":25,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":26,"author":{"gitId":"dsicol"},"content":"}","lastModifiedDate":"2023-02-21"}],"authorContributionMap":{"dsicol":26}},{"path":"src/main/java/inu/commands/CommandResult.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dsicol"},"content":"package inu.commands;","lastModifiedDate":"2023-02-21"},{"lineNumber":2,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":3,"author":{"gitId":"dsicol"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"dsicol"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"dsicol"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"dsicol"},"content":"public class CommandResult {","lastModifiedDate":"2023-02-21"},{"lineNumber":7,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":8,"author":{"gitId":"dsicol"},"content":"    private final String COMMAND_RESULT;","lastModifiedDate":"2023-02-21"},{"lineNumber":9,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":10,"author":{"gitId":"dsicol"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"dsicol"},"content":"     * Constructor.","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"dsicol"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"dsicol"},"content":"     * @param commandResult result of command executed","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"dsicol"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"dsicol"},"content":"    public CommandResult(String commandResult) {","lastModifiedDate":"2023-02-21"},{"lineNumber":16,"author":{"gitId":"dsicol"},"content":"        COMMAND_RESULT \u003d commandResult;","lastModifiedDate":"2023-02-21"},{"lineNumber":17,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":18,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":19,"author":{"gitId":"dsicol"},"content":"    public String getCommandResult() {","lastModifiedDate":"2023-02-21"},{"lineNumber":20,"author":{"gitId":"dsicol"},"content":"        return COMMAND_RESULT;","lastModifiedDate":"2023-02-21"},{"lineNumber":21,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":22,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":23,"author":{"gitId":"dsicol"},"content":"}","lastModifiedDate":"2023-02-21"}],"authorContributionMap":{"dsicol":23}},{"path":"src/main/java/inu/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dsicol"},"content":"package inu.commands;","lastModifiedDate":"2023-02-21"},{"lineNumber":2,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":3,"author":{"gitId":"dsicol"},"content":"import inu.exceptionhandling.ExceptionManager;","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"dsicol"},"content":"import inu.exceptionhandling.InvalidDate;","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"dsicol"},"content":"import inu.storage.StorageFile;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"dsicol"},"content":"import inu.task.DeadLine;","lastModifiedDate":"2023-02-21"},{"lineNumber":7,"author":{"gitId":"dsicol"},"content":"import inu.task.TaskList;","lastModifiedDate":"2023-02-21"},{"lineNumber":8,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":9,"author":{"gitId":"dsicol"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-22"},{"lineNumber":10,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":11,"author":{"gitId":"dsicol"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"dsicol"},"content":" * Adds a new deadline to the task list.","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"dsicol"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"dsicol"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2023-02-21"},{"lineNumber":15,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":16,"author":{"gitId":"dsicol"},"content":"    public static final String COMMAND_WORD \u003d \"deadline\";","lastModifiedDate":"2023-02-21"},{"lineNumber":17,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":18,"author":{"gitId":"dsicol"},"content":"    private final String deadlineDescription;","lastModifiedDate":"2023-02-21"},{"lineNumber":19,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":20,"author":{"gitId":"dsicol"},"content":"    private final LocalDateTime deadlineBy;","lastModifiedDate":"2023-02-22"},{"lineNumber":21,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":22,"author":{"gitId":"dsicol"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"dsicol"},"content":"     * Constructor.","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"dsicol"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"dsicol"},"content":"     * @param deadlineDescription description of the new deadline.","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"dsicol"},"content":"     * @param deadlineBy date and time the deadline is to be completed by.","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"dsicol"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"dsicol"},"content":"    public DeadlineCommand(String deadlineDescription, LocalDateTime deadlineBy) throws InvalidDate {","lastModifiedDate":"2023-02-27"},{"lineNumber":29,"author":{"gitId":"dsicol"},"content":"        this.deadlineDescription \u003d deadlineDescription;","lastModifiedDate":"2023-02-21"},{"lineNumber":30,"author":{"gitId":"dsicol"},"content":"        this.deadlineBy \u003d deadlineBy;","lastModifiedDate":"2023-02-21"},{"lineNumber":31,"author":{"gitId":"dsicol"},"content":"        ExceptionManager.checkCorrectDate(deadlineBy);","lastModifiedDate":"2023-02-27"},{"lineNumber":32,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":33,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":34,"author":{"gitId":"dsicol"},"content":"    @Override","lastModifiedDate":"2023-02-21"},{"lineNumber":35,"author":{"gitId":"dsicol"},"content":"    public CommandResult execute(TaskList taskList) {","lastModifiedDate":"2023-02-21"},{"lineNumber":36,"author":{"gitId":"dsicol"},"content":"        DeadLine deadLineTask \u003d new DeadLine(deadlineDescription, deadlineBy);","lastModifiedDate":"2023-02-21"},{"lineNumber":37,"author":{"gitId":"dsicol"},"content":"        taskList.addTask(deadLineTask);","lastModifiedDate":"2023-02-21"},{"lineNumber":38,"author":{"gitId":"dsicol"},"content":"        StorageFile.saveTaskListToFile(taskList);","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"dsicol"},"content":"        return new CommandResult(\"added: \" + taskList.getLastTask().toString() + \"\\n\"","lastModifiedDate":"2023-02-21"},{"lineNumber":40,"author":{"gitId":"dsicol"},"content":"                + \"Now you have \" + taskList.getTaskListSize() + \" tasks in your list.\");","lastModifiedDate":"2023-02-21"},{"lineNumber":41,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":42,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":43,"author":{"gitId":"dsicol"},"content":"}","lastModifiedDate":"2023-02-21"}],"authorContributionMap":{"dsicol":43}},{"path":"src/main/java/inu/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dsicol"},"content":"package inu.commands;","lastModifiedDate":"2023-02-21"},{"lineNumber":2,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":3,"author":{"gitId":"dsicol"},"content":"import inu.commons.Messages;","lastModifiedDate":"2023-02-21"},{"lineNumber":4,"author":{"gitId":"dsicol"},"content":"import inu.storage.StorageFile;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"dsicol"},"content":"import inu.task.TaskList;","lastModifiedDate":"2023-02-21"},{"lineNumber":6,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":7,"author":{"gitId":"dsicol"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"dsicol"},"content":" * Delete a task in the task list.","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"dsicol"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"dsicol"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-02-21"},{"lineNumber":11,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":12,"author":{"gitId":"dsicol"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2023-02-21"},{"lineNumber":13,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":14,"author":{"gitId":"dsicol"},"content":"    private final int targetIndex;","lastModifiedDate":"2023-02-21"},{"lineNumber":15,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":16,"author":{"gitId":"dsicol"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"dsicol"},"content":"     * Constructor.","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"dsicol"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"dsicol"},"content":"     * @param targetIndex index of task to be deleted.","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"dsicol"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"dsicol"},"content":"    public DeleteCommand(int targetIndex) {","lastModifiedDate":"2023-02-21"},{"lineNumber":22,"author":{"gitId":"dsicol"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-02-21"},{"lineNumber":23,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":24,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":25,"author":{"gitId":"dsicol"},"content":"    @Override","lastModifiedDate":"2023-02-21"},{"lineNumber":26,"author":{"gitId":"dsicol"},"content":"    public CommandResult execute(TaskList taskList) {","lastModifiedDate":"2023-02-21"},{"lineNumber":27,"author":{"gitId":"dsicol"},"content":"        String deletedTask \u003d taskList.getTask(targetIndex).toString();","lastModifiedDate":"2023-02-21"},{"lineNumber":28,"author":{"gitId":"dsicol"},"content":"        taskList.deleteTask(targetIndex);","lastModifiedDate":"2023-02-21"},{"lineNumber":29,"author":{"gitId":"dsicol"},"content":"        StorageFile.saveTaskListToFile(taskList);","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"dsicol"},"content":"        return new CommandResult(Messages.MESSAGE_DELETE_TASK + \"\\n\" + deletedTask);","lastModifiedDate":"2023-02-21"},{"lineNumber":31,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":32,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":33,"author":{"gitId":"dsicol"},"content":"}","lastModifiedDate":"2023-02-21"}],"authorContributionMap":{"dsicol":33}},{"path":"src/main/java/inu/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dsicol"},"content":"package inu.commands;","lastModifiedDate":"2023-02-21"},{"lineNumber":2,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":3,"author":{"gitId":"dsicol"},"content":"import inu.exceptionhandling.ExceptionManager;","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"dsicol"},"content":"import inu.exceptionhandling.InvalidDate;","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"dsicol"},"content":"import inu.exceptionhandling.InvalidEventFromAndToDate;","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"dsicol"},"content":"import inu.storage.StorageFile;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"dsicol"},"content":"import inu.task.Event;","lastModifiedDate":"2023-02-21"},{"lineNumber":8,"author":{"gitId":"dsicol"},"content":"import inu.task.TaskList;","lastModifiedDate":"2023-02-21"},{"lineNumber":9,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":10,"author":{"gitId":"dsicol"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-22"},{"lineNumber":11,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":12,"author":{"gitId":"dsicol"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"dsicol"},"content":" * Adds a new event to the task list.","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"dsicol"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"dsicol"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2023-02-21"},{"lineNumber":16,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":17,"author":{"gitId":"dsicol"},"content":"    public static final String COMMAND_WORD \u003d \"event\";","lastModifiedDate":"2023-02-21"},{"lineNumber":18,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":19,"author":{"gitId":"dsicol"},"content":"    private final String eventDescription;","lastModifiedDate":"2023-02-21"},{"lineNumber":20,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":21,"author":{"gitId":"dsicol"},"content":"    private final LocalDateTime eventFrom;","lastModifiedDate":"2023-02-22"},{"lineNumber":22,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":23,"author":{"gitId":"dsicol"},"content":"    private final LocalDateTime eventTo;","lastModifiedDate":"2023-02-22"},{"lineNumber":24,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":25,"author":{"gitId":"dsicol"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"dsicol"},"content":"     * Constructor.","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"dsicol"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"dsicol"},"content":"     * @param eventDescription description of the event","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"dsicol"},"content":"     * @param eventFrom date and time the event begins.","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"dsicol"},"content":"     * @param eventTo date and time the event ends.","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"dsicol"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"dsicol"},"content":"    public EventCommand(String eventDescription, LocalDateTime eventFrom, LocalDateTime eventTo)","lastModifiedDate":"2023-02-27"},{"lineNumber":33,"author":{"gitId":"dsicol"},"content":"            throws InvalidDate, InvalidEventFromAndToDate {","lastModifiedDate":"2023-02-27"},{"lineNumber":34,"author":{"gitId":"dsicol"},"content":"        this.eventDescription \u003d eventDescription;","lastModifiedDate":"2023-02-21"},{"lineNumber":35,"author":{"gitId":"dsicol"},"content":"        this.eventFrom \u003d eventFrom;","lastModifiedDate":"2023-02-21"},{"lineNumber":36,"author":{"gitId":"dsicol"},"content":"        this.eventTo \u003d eventTo;","lastModifiedDate":"2023-02-21"},{"lineNumber":37,"author":{"gitId":"dsicol"},"content":"        ExceptionManager.checkCorrectDate(eventFrom, eventTo);","lastModifiedDate":"2023-02-27"},{"lineNumber":38,"author":{"gitId":"dsicol"},"content":"        ExceptionManager.checkValidFromAndToDate(eventFrom, eventTo);","lastModifiedDate":"2023-02-27"},{"lineNumber":39,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":40,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":41,"author":{"gitId":"dsicol"},"content":"    public CommandResult execute(TaskList taskList) {","lastModifiedDate":"2023-02-21"},{"lineNumber":42,"author":{"gitId":"dsicol"},"content":"        Event eventTask \u003d new Event(eventDescription, eventFrom, eventTo);","lastModifiedDate":"2023-02-21"},{"lineNumber":43,"author":{"gitId":"dsicol"},"content":"        taskList.addTask(eventTask);","lastModifiedDate":"2023-02-21"},{"lineNumber":44,"author":{"gitId":"dsicol"},"content":"        StorageFile.saveTaskListToFile(taskList);","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"dsicol"},"content":"        return new CommandResult(\"added: \" + taskList.getLastTask().toString() + \"\\n\"","lastModifiedDate":"2023-02-21"},{"lineNumber":46,"author":{"gitId":"dsicol"},"content":"                + \"Now you have \" + taskList.getTaskListSize() + \" tasks in your list.\");","lastModifiedDate":"2023-02-21"},{"lineNumber":47,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":48,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":49,"author":{"gitId":"dsicol"},"content":"}","lastModifiedDate":"2023-02-21"}],"authorContributionMap":{"dsicol":49}},{"path":"src/main/java/inu/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dsicol"},"content":"package inu.commands;","lastModifiedDate":"2023-02-21"},{"lineNumber":2,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":3,"author":{"gitId":"dsicol"},"content":"import inu.commons.Messages;","lastModifiedDate":"2023-02-21"},{"lineNumber":4,"author":{"gitId":"dsicol"},"content":"import inu.task.TaskList;","lastModifiedDate":"2023-02-21"},{"lineNumber":5,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":6,"author":{"gitId":"dsicol"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"dsicol"},"content":" * Terminates the program.","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"dsicol"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"dsicol"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-02-21"},{"lineNumber":10,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":11,"author":{"gitId":"dsicol"},"content":"    public static final String COMMAND_WORD \u003d \"bye\";","lastModifiedDate":"2023-02-21"},{"lineNumber":12,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":13,"author":{"gitId":"dsicol"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"dsicol"},"content":"     * Contructor.","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"dsicol"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"dsicol"},"content":"    public ExitCommand() {}","lastModifiedDate":"2023-02-21"},{"lineNumber":17,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":18,"author":{"gitId":"dsicol"},"content":"    @Override","lastModifiedDate":"2023-02-21"},{"lineNumber":19,"author":{"gitId":"dsicol"},"content":"    public CommandResult execute(TaskList taskList) {","lastModifiedDate":"2023-02-21"},{"lineNumber":20,"author":{"gitId":"dsicol"},"content":"        return new CommandResult(Messages.MESSAGE_EXIT + \u0027\\n\u0027","lastModifiedDate":"2023-02-21"},{"lineNumber":21,"author":{"gitId":"dsicol"},"content":"                + \" Saved \" + taskList.getTaskListSize() + \" tasks ^.^!\");","lastModifiedDate":"2023-02-21"},{"lineNumber":22,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":23,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":24,"author":{"gitId":"dsicol"},"content":"}","lastModifiedDate":"2023-02-21"}],"authorContributionMap":{"dsicol":24}},{"path":"src/main/java/inu/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dsicol"},"content":"package inu.commands;","lastModifiedDate":"2023-02-22"},{"lineNumber":2,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":3,"author":{"gitId":"dsicol"},"content":"import inu.commons.Messages;","lastModifiedDate":"2023-02-22"},{"lineNumber":4,"author":{"gitId":"dsicol"},"content":"import inu.commons.Util;","lastModifiedDate":"2023-02-22"},{"lineNumber":5,"author":{"gitId":"dsicol"},"content":"import inu.task.TaskList;","lastModifiedDate":"2023-02-22"},{"lineNumber":6,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":7,"author":{"gitId":"dsicol"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"dsicol"},"content":" * Find a task by searching for a keyword.","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"dsicol"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"dsicol"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-02-22"},{"lineNumber":11,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":12,"author":{"gitId":"dsicol"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2023-02-22"},{"lineNumber":13,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":14,"author":{"gitId":"dsicol"},"content":"    private final String keyWord;","lastModifiedDate":"2023-02-22"},{"lineNumber":15,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":16,"author":{"gitId":"dsicol"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"dsicol"},"content":"     * Constructor.","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"dsicol"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"dsicol"},"content":"     * @param keyWord keyword to query.","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"dsicol"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"dsicol"},"content":"    public FindCommand(String keyWord) {","lastModifiedDate":"2023-02-22"},{"lineNumber":22,"author":{"gitId":"dsicol"},"content":"        this.keyWord \u003d keyWord;","lastModifiedDate":"2023-02-22"},{"lineNumber":23,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":24,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":25,"author":{"gitId":"dsicol"},"content":"    public CommandResult execute(TaskList taskList) {","lastModifiedDate":"2023-02-22"},{"lineNumber":26,"author":{"gitId":"dsicol"},"content":"        return new CommandResult(Messages.MESSAGE_LIST_HEADER_WITH_KEYWORD + keyWord + \"\\n\"","lastModifiedDate":"2023-02-22"},{"lineNumber":27,"author":{"gitId":"dsicol"},"content":"                + taskList.printList(taskList.filterKeyWord(keyWord)));","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":29,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":30,"author":{"gitId":"dsicol"},"content":"}","lastModifiedDate":"2023-02-22"}],"authorContributionMap":{"dsicol":30}},{"path":"src/main/java/inu/commands/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dsicol"},"content":"package inu.commands;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"dsicol"},"content":"import inu.commons.Messages;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"dsicol"},"content":"import inu.task.TaskList;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"dsicol"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"dsicol"},"content":" * Lists all commands supported and how they are used.","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"dsicol"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"dsicol"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"dsicol"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"dsicol"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"dsicol"},"content":"     * Constructor.","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"dsicol"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"dsicol"},"content":"    public HelpCommand() {}","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"dsicol"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"dsicol"},"content":"    public CommandResult execute(TaskList taskList) {","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"dsicol"},"content":"        return new CommandResult(Messages.MESSAGE_HELP);","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"dsicol"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"dsicol":21}},{"path":"src/main/java/inu/commands/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dsicol"},"content":"package inu.commands;","lastModifiedDate":"2023-02-21"},{"lineNumber":2,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":3,"author":{"gitId":"dsicol"},"content":"import inu.task.TaskList;","lastModifiedDate":"2023-02-21"},{"lineNumber":4,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":5,"author":{"gitId":"dsicol"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"dsicol"},"content":" * Represents an incorrect or unrecognised command.","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"dsicol"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"dsicol"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2023-02-21"},{"lineNumber":9,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":10,"author":{"gitId":"dsicol"},"content":"    private final String messagePrompt;","lastModifiedDate":"2023-02-21"},{"lineNumber":11,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":12,"author":{"gitId":"dsicol"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"dsicol"},"content":"     * Constructor.","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"dsicol"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"dsicol"},"content":"     * @param messagePrompt custom message prompt to be displayed to the user.","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"dsicol"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"dsicol"},"content":"    public InvalidCommand(String messagePrompt) {","lastModifiedDate":"2023-02-21"},{"lineNumber":18,"author":{"gitId":"dsicol"},"content":"        this.messagePrompt \u003d messagePrompt;","lastModifiedDate":"2023-02-21"},{"lineNumber":19,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":20,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":21,"author":{"gitId":"dsicol"},"content":"    @Override","lastModifiedDate":"2023-02-21"},{"lineNumber":22,"author":{"gitId":"dsicol"},"content":"    public CommandResult execute(TaskList taskList) {","lastModifiedDate":"2023-02-21"},{"lineNumber":23,"author":{"gitId":"dsicol"},"content":"        return new CommandResult(messagePrompt);","lastModifiedDate":"2023-02-21"},{"lineNumber":24,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":25,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":26,"author":{"gitId":"dsicol"},"content":"}","lastModifiedDate":"2023-02-21"}],"authorContributionMap":{"dsicol":26}},{"path":"src/main/java/inu/commands/ListDefaultCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dsicol"},"content":"package inu.commands;","lastModifiedDate":"2023-02-21"},{"lineNumber":2,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":3,"author":{"gitId":"dsicol"},"content":"import inu.commons.Messages;","lastModifiedDate":"2023-02-21"},{"lineNumber":4,"author":{"gitId":"dsicol"},"content":"import inu.task.TaskList;","lastModifiedDate":"2023-02-21"},{"lineNumber":5,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":6,"author":{"gitId":"dsicol"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"dsicol"},"content":" * List all the tasks in the task list to the user.","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"dsicol"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"dsicol"},"content":"public class ListDefaultCommand extends Command {","lastModifiedDate":"2023-02-22"},{"lineNumber":10,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":11,"author":{"gitId":"dsicol"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"dsicol"},"content":"     * Constructor.","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"dsicol"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"dsicol"},"content":"    public ListDefaultCommand() {}","lastModifiedDate":"2023-02-22"},{"lineNumber":15,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":16,"author":{"gitId":"dsicol"},"content":"    @Override","lastModifiedDate":"2023-02-21"},{"lineNumber":17,"author":{"gitId":"dsicol"},"content":"    public CommandResult execute(TaskList taskList) {","lastModifiedDate":"2023-02-21"},{"lineNumber":18,"author":{"gitId":"dsicol"},"content":"        return new CommandResult(Messages.MESSAGE_LIST_HEADER + \"\\n\" + taskList.printList(taskList));","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":20,"author":{"gitId":"dsicol"},"content":"}","lastModifiedDate":"2023-02-21"}],"authorContributionMap":{"dsicol":20}},{"path":"src/main/java/inu/commands/ListWithDateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dsicol"},"content":"package inu.commands;","lastModifiedDate":"2023-02-22"},{"lineNumber":2,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":3,"author":{"gitId":"dsicol"},"content":"import inu.commons.Messages;","lastModifiedDate":"2023-02-22"},{"lineNumber":4,"author":{"gitId":"dsicol"},"content":"import inu.commons.Util;","lastModifiedDate":"2023-02-22"},{"lineNumber":5,"author":{"gitId":"dsicol"},"content":"import inu.task.TaskList;","lastModifiedDate":"2023-02-22"},{"lineNumber":6,"author":{"gitId":"dsicol"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-22"},{"lineNumber":7,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":8,"author":{"gitId":"dsicol"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"dsicol"},"content":" * List all the tasks found on a specific date in the task list to the user.","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"dsicol"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"dsicol"},"content":"public class ListWithDateCommand extends Command {","lastModifiedDate":"2023-02-22"},{"lineNumber":12,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":13,"author":{"gitId":"dsicol"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2023-02-22"},{"lineNumber":14,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":15,"author":{"gitId":"dsicol"},"content":"    private final LocalDate date;","lastModifiedDate":"2023-02-22"},{"lineNumber":16,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":17,"author":{"gitId":"dsicol"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"dsicol"},"content":"     * Constructor.","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"dsicol"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"dsicol"},"content":"     * @param date the date to query.","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"dsicol"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"dsicol"},"content":"    public ListWithDateCommand(LocalDate date) {","lastModifiedDate":"2023-02-22"},{"lineNumber":23,"author":{"gitId":"dsicol"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-02-22"},{"lineNumber":24,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":25,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":26,"author":{"gitId":"dsicol"},"content":"    @Override","lastModifiedDate":"2023-02-22"},{"lineNumber":27,"author":{"gitId":"dsicol"},"content":"    public CommandResult execute(TaskList taskList) {","lastModifiedDate":"2023-02-22"},{"lineNumber":28,"author":{"gitId":"dsicol"},"content":"        return new CommandResult(Messages.MESSAGE_LIST_HEADER_WITH_DATE + Util.convertDateToString(date) + \"\\n\"","lastModifiedDate":"2023-02-22"},{"lineNumber":29,"author":{"gitId":"dsicol"},"content":"                + taskList.printList(taskList.filterDate(date)));","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":31,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":32,"author":{"gitId":"dsicol"},"content":"}","lastModifiedDate":"2023-02-22"}],"authorContributionMap":{"dsicol":32}},{"path":"src/main/java/inu/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dsicol"},"content":"package inu.commands;","lastModifiedDate":"2023-02-21"},{"lineNumber":2,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":3,"author":{"gitId":"dsicol"},"content":"import inu.commons.Messages;","lastModifiedDate":"2023-02-21"},{"lineNumber":4,"author":{"gitId":"dsicol"},"content":"import inu.storage.StorageFile;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"dsicol"},"content":"import inu.task.TaskList;","lastModifiedDate":"2023-02-21"},{"lineNumber":6,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":7,"author":{"gitId":"dsicol"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"dsicol"},"content":" * Marks a task in the task list as done.","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"dsicol"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"dsicol"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-02-21"},{"lineNumber":11,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"dsicol"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2023-02-21"},{"lineNumber":13,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"dsicol"},"content":"    private final int targetIndex;","lastModifiedDate":"2023-02-21"},{"lineNumber":15,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"dsicol"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"dsicol"},"content":"     * Constructor.","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"dsicol"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"dsicol"},"content":"     * @param targetIndex index of the task to be marked.","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"dsicol"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"dsicol"},"content":"    public MarkCommand(int targetIndex) {","lastModifiedDate":"2023-02-21"},{"lineNumber":22,"author":{"gitId":"dsicol"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-02-21"},{"lineNumber":23,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":24,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"dsicol"},"content":"    public CommandResult execute(TaskList taskList) {","lastModifiedDate":"2023-02-21"},{"lineNumber":26,"author":{"gitId":"dsicol"},"content":"        taskList.markTask(targetIndex);","lastModifiedDate":"2023-02-21"},{"lineNumber":27,"author":{"gitId":"dsicol"},"content":"        StorageFile.saveTaskListToFile(taskList);","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"dsicol"},"content":"        return new CommandResult(Messages.MESSAGE_MARK_TASK + \"\\n\" + taskList.getTask(targetIndex).toString());","lastModifiedDate":"2023-02-21"},{"lineNumber":29,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":30,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":31,"author":{"gitId":"dsicol"},"content":"}","lastModifiedDate":"2023-02-21"}],"authorContributionMap":{"dsicol":31}},{"path":"src/main/java/inu/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dsicol"},"content":"package inu.commands;","lastModifiedDate":"2023-02-21"},{"lineNumber":2,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":3,"author":{"gitId":"dsicol"},"content":"import inu.storage.StorageFile;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"dsicol"},"content":"import inu.task.TaskList;","lastModifiedDate":"2023-02-21"},{"lineNumber":5,"author":{"gitId":"dsicol"},"content":"import inu.task.Todo;","lastModifiedDate":"2023-02-21"},{"lineNumber":6,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":7,"author":{"gitId":"dsicol"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"dsicol"},"content":" * Adds a new to-do to the task list.","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"dsicol"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"dsicol"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2023-02-21"},{"lineNumber":11,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":12,"author":{"gitId":"dsicol"},"content":"    public static final String COMMAND_WORD \u003d \"todo\";","lastModifiedDate":"2023-02-21"},{"lineNumber":13,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":14,"author":{"gitId":"dsicol"},"content":"    private final String todoDescription;","lastModifiedDate":"2023-02-21"},{"lineNumber":15,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":16,"author":{"gitId":"dsicol"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"dsicol"},"content":"     * Constructor.","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"dsicol"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"dsicol"},"content":"     * @param todoDescription description of the to-do to add.","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"dsicol"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"dsicol"},"content":"    public TodoCommand(String todoDescription) {","lastModifiedDate":"2023-02-21"},{"lineNumber":22,"author":{"gitId":"dsicol"},"content":"        this.todoDescription \u003d todoDescription;","lastModifiedDate":"2023-02-21"},{"lineNumber":23,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":24,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":25,"author":{"gitId":"dsicol"},"content":"    @Override","lastModifiedDate":"2023-02-21"},{"lineNumber":26,"author":{"gitId":"dsicol"},"content":"    public CommandResult execute(TaskList taskList) {","lastModifiedDate":"2023-02-21"},{"lineNumber":27,"author":{"gitId":"dsicol"},"content":"        Todo todoTask \u003d new Todo(todoDescription);","lastModifiedDate":"2023-02-21"},{"lineNumber":28,"author":{"gitId":"dsicol"},"content":"        taskList.addTask(todoTask);","lastModifiedDate":"2023-02-21"},{"lineNumber":29,"author":{"gitId":"dsicol"},"content":"        StorageFile.saveTaskListToFile(taskList);","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"dsicol"},"content":"        return new CommandResult(\"added: \" + taskList.getLastTask().toString() + \"\\n\"","lastModifiedDate":"2023-02-21"},{"lineNumber":31,"author":{"gitId":"dsicol"},"content":"                + \"Now you have \" + taskList.getTaskListSize() + \" tasks in your list.\");","lastModifiedDate":"2023-02-21"},{"lineNumber":32,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":33,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":34,"author":{"gitId":"dsicol"},"content":"}","lastModifiedDate":"2023-02-21"}],"authorContributionMap":{"dsicol":34}},{"path":"src/main/java/inu/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dsicol"},"content":"package inu.commands;","lastModifiedDate":"2023-02-21"},{"lineNumber":2,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":3,"author":{"gitId":"dsicol"},"content":"import inu.commons.Messages;","lastModifiedDate":"2023-02-21"},{"lineNumber":4,"author":{"gitId":"dsicol"},"content":"import inu.storage.StorageFile;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"dsicol"},"content":"import inu.task.TaskList;","lastModifiedDate":"2023-02-21"},{"lineNumber":6,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":7,"author":{"gitId":"dsicol"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"dsicol"},"content":" * Marks a task in the task list as not done.","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"dsicol"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"dsicol"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":12,"author":{"gitId":"dsicol"},"content":"    public static final String COMMAND_WORD \u003d \"unmark\";","lastModifiedDate":"2023-02-21"},{"lineNumber":13,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":14,"author":{"gitId":"dsicol"},"content":"    private final int targetIndex;","lastModifiedDate":"2023-02-21"},{"lineNumber":15,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":16,"author":{"gitId":"dsicol"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"dsicol"},"content":"     * Constructor.","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"dsicol"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"dsicol"},"content":"     * @param targetIndex index of the task to be marked.","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"dsicol"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"dsicol"},"content":"    public UnmarkCommand(int targetIndex) {","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"dsicol"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-02-21"},{"lineNumber":23,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":24,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":25,"author":{"gitId":"dsicol"},"content":"    public CommandResult execute(TaskList taskList) {","lastModifiedDate":"2023-02-21"},{"lineNumber":26,"author":{"gitId":"dsicol"},"content":"        taskList.unmarkTask(targetIndex);","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"dsicol"},"content":"        StorageFile.saveTaskListToFile(taskList);","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"dsicol"},"content":"        return new CommandResult(Messages.MESSAGE_UNMARK_TASK + \"\\n\" + taskList.getTask(targetIndex).toString());","lastModifiedDate":"2023-02-21"},{"lineNumber":29,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":30,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":31,"author":{"gitId":"dsicol"},"content":"}","lastModifiedDate":"2023-02-21"}],"authorContributionMap":{"dsicol":31}},{"path":"src/main/java/inu/commons/Messages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dsicol"},"content":"package inu.commons;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"dsicol"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"dsicol"},"content":" * Container for messages shown to user.","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"dsicol"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"dsicol"},"content":"public class Messages {","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"dsicol"},"content":"    public static final String MESSAGE_GREETING \u003d \" Woof Woof! I\u0027m Inu! Your personal Shib-Assistant! ^.^\" + \"\\n\" + \"\\n\"","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"dsicol"},"content":"            + \" Allow me to provide more assistance through the \u003chelp\u003e command!\" + \"\\n\"","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"dsicol"},"content":"            + \" Format: help\";","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"dsicol"},"content":"    public static final String MESSAGE_PROMPT \u003d \" What can I do for you today?\";","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"dsicol"},"content":"    public static final String MESSAGE_EXIT \u003d \" Woof! Saving your task list before exiting...\";","lastModifiedDate":"2023-02-21"},{"lineNumber":12,"author":{"gitId":"dsicol"},"content":"    public static final String MESSAGE_FAREWELL \u003d \" Bye. Hope to see you again soon ^.^!\";","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"dsicol"},"content":"    public static final String MESSAGE_LIST_HEADER \u003d \" Woof! Here are your current tasks ^.^:\";","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"dsicol"},"content":"    public static final String MESSAGE_MARK_TASK \u003d \" Woof! I\u0027ve marked this task as completed for you:\";","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"dsicol"},"content":"    public static final String MESSAGE_UNMARK_TASK \u003d \" Woof! I\u0027ve marked this task as incompleted for you:\";","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"dsicol"},"content":"    public static final String MESSAGE_DIVIDER \u003d \"___________________________________________________________________\";","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"dsicol"},"content":"    public static final String MESSAGE_INVALID \u003d \" Sorry! Please type a valid command! ^.^\" + \"\\n\"","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"dsicol"},"content":"            + \" Allow me to provide more assistance through the \u003chelp\u003e command!\" + \"\\n\"","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"dsicol"},"content":"            + \" Format: help\";","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"dsicol"},"content":"    public static final String MESSAGE_PROMPT_VALID_DEADLINE \u003d \" Sorry! Please follow the deadline format!\"","lastModifiedDate":"2023-02-22"},{"lineNumber":21,"author":{"gitId":"dsicol"},"content":"            + \"\\n\" + \" Format: \" + \"\\n\"","lastModifiedDate":"2023-02-22"},{"lineNumber":22,"author":{"gitId":"dsicol"},"content":"            + \" deadline \u003cyour deadline\u003e /by \u003cdue date and time in DD/MM/YYYY HH:MM\u003e (24HR clock)\";","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"dsicol"},"content":"    public static final String MESSAGE_PROMPT_VALID_EVENT \u003d \" Sorry! Please follow the event format!\"","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"dsicol"},"content":"            + \"\\n\" + \" Format: \" + \"\\n\"","lastModifiedDate":"2023-02-22"},{"lineNumber":25,"author":{"gitId":"dsicol"},"content":"            + \" event \u003cMy Task\u003e \"","lastModifiedDate":"2023-02-22"},{"lineNumber":26,"author":{"gitId":"dsicol"},"content":"            + \"/from \u003cstart date in DD/MM/YYYY HH:MM (24HR clock)\u003e /to \u003cend date in DD/MM/YYYY HH:MM\u003e (24HR clock)\";","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"dsicol"},"content":"    public static final String MESSAGE_PROMPT_VALID_TODO \u003d \" Sorry! Please follow the todo format!\"","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"dsicol"},"content":"            + \"\\n\" + \" Format: \" + \"\\n\"","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"dsicol"},"content":"            + \" todo \u003cyour task description\u003e\";","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"dsicol"},"content":"    public static final String MESSAGE_PROMPT_VALID_MARK \u003d \"Sorry! Please follow the mark format!\"","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"dsicol"},"content":"            + \"\\n\" + \" Format: \" + \"\\n\"","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"dsicol"},"content":"            + \" mark \u003ctask number\u003e \" + \"\\n\" + \"\\n\"","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"dsicol"},"content":"            + \"the task number must be a valid number displayed from the task list!\";","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"dsicol"},"content":"    public static final String MESSAGE_PROMPT_VALID_UNMARK \u003d \"Sorry! Please follow the unmark format!\"","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"dsicol"},"content":"            + \"\\n\" + \" Format: \" + \"\\n\"","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"dsicol"},"content":"            + \" unmark \u003ctask number\u003e \" + \"\\n\" + \"\\n\"","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"dsicol"},"content":"            + \"the task number must be a valid number displayed from the task list!\";","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"dsicol"},"content":"    public static final String MESSAGE_PROMPT_VALID_DELETE \u003d \"Sorry! Please follow the delete format!\"","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"dsicol"},"content":"            + \"\\n\" + \" Format: \" + \"\\n\"","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"dsicol"},"content":"            + \" delete \u003ctask number\u003e \" + \"\\n\" + \"\\n\"","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"dsicol"},"content":"            + \"the task number must be a valid number displayed from the task list!\";","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"dsicol"},"content":"    public static final String MESSAGE_PROMPT_EMPTY_TASK_LIST \u003d \" Woof Woof! Your task list is empty! ^.^\";","lastModifiedDate":"2023-02-04"},{"lineNumber":43,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":44,"author":{"gitId":"dsicol"},"content":"    public static final String MESSAGE_DELETE_TASK \u003d \" Woof! I\u0027ve deleted this task for you:\";","lastModifiedDate":"2023-02-10"},{"lineNumber":45,"author":{"gitId":"dsicol"},"content":"    public static final String MESSAGE_PROMPT_VALID_DATE \u003d \" Sorry! Please provide a valid date and time in \"","lastModifiedDate":"2023-02-22"},{"lineNumber":46,"author":{"gitId":"dsicol"},"content":"            + \"\u003cDD/MM/YYYY\u003e\";","lastModifiedDate":"2023-02-22"},{"lineNumber":47,"author":{"gitId":"dsicol"},"content":"    public static final String MESSAGE_PROMPT_VALID_DEADLINE_DATE \u003d \" Sorry! Please provide a valid date and time in \"","lastModifiedDate":"2023-02-27"},{"lineNumber":48,"author":{"gitId":"dsicol"},"content":"            + \"\u003cDD/MM/YYYY HH:mm\u003e\" + \"\\n\" + \"\\n\"","lastModifiedDate":"2023-02-27"},{"lineNumber":49,"author":{"gitId":"dsicol"},"content":"            + \" The date provided cannot be in the past!\";","lastModifiedDate":"2023-02-27"},{"lineNumber":50,"author":{"gitId":"dsicol"},"content":"    public static final String MESSAGE_PROMPT_VALID_EVENT_DATE \u003d \" Sorry! Please provide a valid date and time in \"","lastModifiedDate":"2023-02-27"},{"lineNumber":51,"author":{"gitId":"dsicol"},"content":"            + \"\u003cDD/MM/YYYY HH:mm\u003e\" + \"\\n\" + \"\\n\"","lastModifiedDate":"2023-02-27"},{"lineNumber":52,"author":{"gitId":"dsicol"},"content":"            + \" 1. The date provided cannot be in the past!\" + \"\\n\"","lastModifiedDate":"2023-02-27"},{"lineNumber":53,"author":{"gitId":"dsicol"},"content":"            + \" 2. The event\u0027s starting date cannot be after its ending date!\";","lastModifiedDate":"2023-02-27"},{"lineNumber":54,"author":{"gitId":"dsicol"},"content":"    public static final String MESSAGE_LIST_HEADER_WITH_DATE \u003d \" Woof! Here are your current tasks occurring on: \";","lastModifiedDate":"2023-02-22"},{"lineNumber":55,"author":{"gitId":"dsicol"},"content":"    public static final String MESSAGE_LIST_HEADER_WITH_KEYWORD \u003d \" Woof! Here are your matching tasks with keyword:  \";","lastModifiedDate":"2023-02-22"},{"lineNumber":56,"author":{"gitId":"dsicol"},"content":"    public static final String MESSAGE_PROMPT_VALID_FIND \u003d \" Sorry! Please follow the find format!\"","lastModifiedDate":"2023-02-26"},{"lineNumber":57,"author":{"gitId":"dsicol"},"content":"            + \"\\n\" + \" Format: \" + \"\\n\"","lastModifiedDate":"2023-02-26"},{"lineNumber":58,"author":{"gitId":"dsicol"},"content":"            + \" find \u003ckeyword\u003e \";","lastModifiedDate":"2023-02-26"},{"lineNumber":59,"author":{"gitId":"dsicol"},"content":"    public static final String MESSAGE_HELP \u003d \" 1. Adding a Todo: todo\\n\" +","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"dsicol"},"content":"            \"    Adds a todo to the task list.\\n\" +","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"dsicol"},"content":"            \"\\n\" +","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"dsicol"},"content":"            \"    Format: todo \u003cdescription\u003e\\n\" + MESSAGE_DIVIDER +","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"dsicol"},"content":"            \"\\n\" +","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"dsicol"},"content":"            \" 2. Adding a Deadline: deadline\\n\" +","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"dsicol"},"content":"            \"    Adds a Deadline to the task list.\\n\" +","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"dsicol"},"content":"            \"\\n\" +","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"dsicol"},"content":"            \"    Format: deadline \u003cdescription\u003e /by \u003cdue date and time\u003e\" + \"\\n\" +","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"dsicol"},"content":"            \"    Date and Time in dd/mm/yyyy HH:mm (24 hour clock) format!\" + \"\\n\" + MESSAGE_DIVIDER +","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"dsicol"},"content":"            \"\\n\" +","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"dsicol"},"content":"            \" 3. Adding an Event: event\\n\" +","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"dsicol"},"content":"            \"    Adds an Event to the task list.\\n\" +","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"dsicol"},"content":"            \"\\n\" +","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"dsicol"},"content":"            \"    Format: event \u003cdescription\u003e /from \u003cfrom date and time\u003e /to \u003cto date and time\u003e\" + \"\\n\" +","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"dsicol"},"content":"            \"    Date and Time in dd/mm/yyyy HH:mm (24 hour clock) format!\" + \"\\n\" + MESSAGE_DIVIDER +","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"dsicol"},"content":"            \"\\n\" +","lastModifiedDate":"2023-03-03"},{"lineNumber":76,"author":{"gitId":"dsicol"},"content":"            \" 4. Listing all tasks: list\" + \"\\n\" +","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"dsicol"},"content":"            \"    Lists all the task in the tasks list.\" + \"\\n\" +","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"dsicol"},"content":"            \"\\n\" +","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"dsicol"},"content":"            \"    Format: list\" + \"\\n\" + MESSAGE_DIVIDER +","lastModifiedDate":"2023-03-03"},{"lineNumber":80,"author":{"gitId":"dsicol"},"content":"            \"\\n\" +","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"dsicol"},"content":"            \" 5. Listing all tasks occurring on a specific date: list \u003cdate\u003e\" + \"\\n\" +","lastModifiedDate":"2023-03-03"},{"lineNumber":82,"author":{"gitId":"dsicol"},"content":"            \"    Lists all the task occurring on a specific date in the tasks list.\" + \"\\n\" +","lastModifiedDate":"2023-03-03"},{"lineNumber":83,"author":{"gitId":"dsicol"},"content":"            \"\\n\" +","lastModifiedDate":"2023-03-03"},{"lineNumber":84,"author":{"gitId":"dsicol"},"content":"            \"    Format: list \u003cdate\u003e.\" + \"\\n\" +","lastModifiedDate":"2023-03-03"},{"lineNumber":85,"author":{"gitId":"dsicol"},"content":"            \"\\n\" +","lastModifiedDate":"2023-03-03"},{"lineNumber":86,"author":{"gitId":"dsicol"},"content":"            \"    Format of date is dd/mm/yyyy.\" + \"\\n\" +","lastModifiedDate":"2023-03-03"},{"lineNumber":87,"author":{"gitId":"dsicol"},"content":"            \"    No provision of date lists all tasks instead.\" + \"\\n\" + MESSAGE_DIVIDER +","lastModifiedDate":"2023-03-03"},{"lineNumber":88,"author":{"gitId":"dsicol"},"content":"            \"\\n\" +","lastModifiedDate":"2023-03-03"},{"lineNumber":89,"author":{"gitId":"dsicol"},"content":"            \" 6. Finding tasks: find\" + \"\\n\" +","lastModifiedDate":"2023-03-03"},{"lineNumber":90,"author":{"gitId":"dsicol"},"content":"            \"    Find tasks with a keyword.\" + \"\\n\" +","lastModifiedDate":"2023-03-03"},{"lineNumber":91,"author":{"gitId":"dsicol"},"content":"            \"\\n\" +","lastModifiedDate":"2023-03-03"},{"lineNumber":92,"author":{"gitId":"dsicol"},"content":"            \"    Format: find \u003ckeyword\u003e\" + \"\\n\" + MESSAGE_DIVIDER +","lastModifiedDate":"2023-03-03"},{"lineNumber":93,"author":{"gitId":"dsicol"},"content":"            \"\\n\" +","lastModifiedDate":"2023-03-03"},{"lineNumber":94,"author":{"gitId":"dsicol"},"content":"            \" 7. Marking a task: mark\" + \"\\n\" +","lastModifiedDate":"2023-03-03"},{"lineNumber":95,"author":{"gitId":"dsicol"},"content":"            \"    Marks a task as done.\" + \"\\n\" +","lastModifiedDate":"2023-03-03"},{"lineNumber":96,"author":{"gitId":"dsicol"},"content":"            \"\\n\" +","lastModifiedDate":"2023-03-03"},{"lineNumber":97,"author":{"gitId":"dsicol"},"content":"            \"    Format: mark \u003cindex\u003e\" + \"\\n\" +","lastModifiedDate":"2023-03-03"},{"lineNumber":98,"author":{"gitId":"dsicol"},"content":"            \"\\n\" +","lastModifiedDate":"2023-03-03"},{"lineNumber":99,"author":{"gitId":"dsicol"},"content":"            \"    Marks the task at the specified \u003cindex\u003e\" + \"\\n\" + MESSAGE_DIVIDER +","lastModifiedDate":"2023-03-03"},{"lineNumber":100,"author":{"gitId":"dsicol"},"content":"            \"\\n\" +","lastModifiedDate":"2023-03-03"},{"lineNumber":101,"author":{"gitId":"dsicol"},"content":"            \" 8. Unmarking a task: unmark\" + \"\\n\" +","lastModifiedDate":"2023-03-03"},{"lineNumber":102,"author":{"gitId":"dsicol"},"content":"            \"    Unmarks a task, set is as not done.\" + \"\\n\" +","lastModifiedDate":"2023-03-03"},{"lineNumber":103,"author":{"gitId":"dsicol"},"content":"            \"\\n\" +","lastModifiedDate":"2023-03-03"},{"lineNumber":104,"author":{"gitId":"dsicol"},"content":"            \"    Format: unmark \u003cindex\u003e\" + \"\\n\" +","lastModifiedDate":"2023-03-03"},{"lineNumber":105,"author":{"gitId":"dsicol"},"content":"            \"\\n\" +","lastModifiedDate":"2023-03-03"},{"lineNumber":106,"author":{"gitId":"dsicol"},"content":"            \"    Unmarks the task at the specified \u003cindex\u003e\" + \"\\n\" + MESSAGE_DIVIDER +","lastModifiedDate":"2023-03-03"},{"lineNumber":107,"author":{"gitId":"dsicol"},"content":"            \"\\n\" +","lastModifiedDate":"2023-03-03"},{"lineNumber":108,"author":{"gitId":"dsicol"},"content":"            \" 9. Deleting a task: delete\" + \"\\n\" +","lastModifiedDate":"2023-03-03"},{"lineNumber":109,"author":{"gitId":"dsicol"},"content":"            \"    Deletes a task from the task list.\" + \"\\n\" +","lastModifiedDate":"2023-03-03"},{"lineNumber":110,"author":{"gitId":"dsicol"},"content":"            \"\\n\" +","lastModifiedDate":"2023-03-03"},{"lineNumber":111,"author":{"gitId":"dsicol"},"content":"            \"    Format: delete \u003cindex\u003e\\n\" +","lastModifiedDate":"2023-03-03"},{"lineNumber":112,"author":{"gitId":"dsicol"},"content":"            \"\\n\" +","lastModifiedDate":"2023-03-03"},{"lineNumber":113,"author":{"gitId":"dsicol"},"content":"            \"    Deletes the task at the specified \u003cindex\u003e\\n\" + MESSAGE_DIVIDER +","lastModifiedDate":"2023-03-03"},{"lineNumber":114,"author":{"gitId":"dsicol"},"content":"            \"\\n\" +","lastModifiedDate":"2023-03-03"},{"lineNumber":115,"author":{"gitId":"dsicol"},"content":"            \" 10. Exiting the program: bye\\n\" +","lastModifiedDate":"2023-03-03"},{"lineNumber":116,"author":{"gitId":"dsicol"},"content":"            \"    Exits the program.\\n\" +","lastModifiedDate":"2023-03-03"},{"lineNumber":117,"author":{"gitId":"dsicol"},"content":"            \"\\n\" +","lastModifiedDate":"2023-03-03"},{"lineNumber":118,"author":{"gitId":"dsicol"},"content":"            \"    Format: bye\\n\" + MESSAGE_DIVIDER +","lastModifiedDate":"2023-03-03"},{"lineNumber":119,"author":{"gitId":"dsicol"},"content":"            \"\\n\" +","lastModifiedDate":"2023-03-03"},{"lineNumber":120,"author":{"gitId":"dsicol"},"content":"            \" 11. Saving the data\\n\" +","lastModifiedDate":"2023-03-03"},{"lineNumber":121,"author":{"gitId":"dsicol"},"content":"            \"    Inu data are saved in the hard disk automatically after each successful command.\" + \"\\n\" +","lastModifiedDate":"2023-03-03"},{"lineNumber":122,"author":{"gitId":"dsicol"},"content":"            \"    There is no need to save manually.\";","lastModifiedDate":"2023-03-03"},{"lineNumber":123,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":124,"author":{"gitId":"dsicol"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"dsicol":124}},{"path":"src/main/java/inu/commons/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dsicol"},"content":"package inu.commons;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"dsicol"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"dsicol"},"content":" * Represents the ui used to interact with the user.","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"dsicol"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"dsicol"},"content":"public class Ui {","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"dsicol"},"content":"    public static void printDivider() {","lastModifiedDate":"2023-02-21"},{"lineNumber":9,"author":{"gitId":"dsicol"},"content":"        System.out.println(Messages.MESSAGE_DIVIDER);","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"dsicol"},"content":"    public static void printGreeting() {","lastModifiedDate":"2023-02-21"},{"lineNumber":13,"author":{"gitId":"dsicol"},"content":"        printDivider();","lastModifiedDate":"2023-02-21"},{"lineNumber":14,"author":{"gitId":"dsicol"},"content":"        System.out.println(Messages.MESSAGE_GREETING);","lastModifiedDate":"2023-02-21"},{"lineNumber":15,"author":{"gitId":"dsicol"},"content":"        System.out.println(Messages.MESSAGE_PROMPT);","lastModifiedDate":"2023-02-21"},{"lineNumber":16,"author":{"gitId":"dsicol"},"content":"        printDivider();","lastModifiedDate":"2023-02-21"},{"lineNumber":17,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"dsicol"},"content":"    public static void printFarewell() {","lastModifiedDate":"2023-02-21"},{"lineNumber":20,"author":{"gitId":"dsicol"},"content":"        printDivider();","lastModifiedDate":"2023-02-21"},{"lineNumber":21,"author":{"gitId":"dsicol"},"content":"        System.out.println(Messages.MESSAGE_FAREWELL);","lastModifiedDate":"2023-02-21"},{"lineNumber":22,"author":{"gitId":"dsicol"},"content":"        printDivider();","lastModifiedDate":"2023-02-21"},{"lineNumber":23,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"dsicol"},"content":"    public static void printOutput(String output) {","lastModifiedDate":"2023-02-21"},{"lineNumber":26,"author":{"gitId":"dsicol"},"content":"        printDivider();","lastModifiedDate":"2023-02-21"},{"lineNumber":27,"author":{"gitId":"dsicol"},"content":"        System.out.println(output);","lastModifiedDate":"2023-02-21"},{"lineNumber":28,"author":{"gitId":"dsicol"},"content":"        printDivider();","lastModifiedDate":"2023-02-21"},{"lineNumber":29,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":31,"author":{"gitId":"dsicol"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"dsicol":31}},{"path":"src/main/java/inu/commons/Util.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dsicol"},"content":"package inu.commons;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"dsicol"},"content":"import inu.exceptionhandling.EmptyStringException;","lastModifiedDate":"2023-02-22"},{"lineNumber":4,"author":{"gitId":"dsicol"},"content":"import inu.exceptionhandling.ExceptionManager;","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"dsicol"},"content":"import inu.exceptionhandling.InvalidDateFormat;","lastModifiedDate":"2023-02-22"},{"lineNumber":6,"author":{"gitId":"dsicol"},"content":"import inu.exceptionhandling.InvalidDateTimeFormat;","lastModifiedDate":"2023-02-22"},{"lineNumber":7,"author":{"gitId":"dsicol"},"content":"import inu.task.TaskList;","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"dsicol"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-22"},{"lineNumber":9,"author":{"gitId":"dsicol"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-22"},{"lineNumber":10,"author":{"gitId":"dsicol"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-22"},{"lineNumber":11,"author":{"gitId":"dsicol"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-22"},{"lineNumber":12,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"dsicol"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"dsicol"},"content":" * Utility methods.","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"dsicol"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"dsicol"},"content":"public class Util {","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"dsicol"},"content":"    public static final int INDEX_BEGIN \u003d 0;","lastModifiedDate":"2023-02-21"},{"lineNumber":19,"author":{"gitId":"dsicol"},"content":"    public static final int INDEX_OFFSET_IN_COMMAND \u003d 1;","lastModifiedDate":"2023-02-21"},{"lineNumber":20,"author":{"gitId":"dsicol"},"content":"    public static final int INDEX_OFFSET_IN_BY_COMMAND \u003d 5;","lastModifiedDate":"2023-02-22"},{"lineNumber":21,"author":{"gitId":"dsicol"},"content":"    public static final int INDEX_OFFSET_IN_FROM_COMMAND \u003d 7;","lastModifiedDate":"2023-02-22"},{"lineNumber":22,"author":{"gitId":"dsicol"},"content":"    public static final int INDEX_OFFSET_IN_TO_COMMAND \u003d 5;","lastModifiedDate":"2023-02-22"},{"lineNumber":23,"author":{"gitId":"dsicol"},"content":"    public static final String DELIMITER_DEADLINE_BY \u003d \" /by \";","lastModifiedDate":"2023-02-22"},{"lineNumber":24,"author":{"gitId":"dsicol"},"content":"    public static final String DELIMITER_EVENT_FROM \u003d \" /from \";","lastModifiedDate":"2023-02-22"},{"lineNumber":25,"author":{"gitId":"dsicol"},"content":"    public static final String DELIMITER_EVENT_TO \u003d \" /to \";","lastModifiedDate":"2023-02-22"},{"lineNumber":26,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":27,"author":{"gitId":"dsicol"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"dsicol"},"content":"     * Reads in a string of numerical value and converts it into a task list index as an integer.","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"dsicol"},"content":"     * Checks if index provided is within the range of the number of tasks.","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"dsicol"},"content":"     *","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"dsicol"},"content":"     * @param taskList the task list the index accesses","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"dsicol"},"content":"     * @param userString the index input in the form of a String to be converted into the task list index","lastModifiedDate":"2023-03-02"},{"lineNumber":33,"author":{"gitId":"dsicol"},"content":"     * @return task index as an integer converted from the given String","lastModifiedDate":"2023-03-02"},{"lineNumber":34,"author":{"gitId":"dsicol"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":35,"author":{"gitId":"dsicol"},"content":"    public static int fetchIndexFromString(TaskList taskList, String userString)","lastModifiedDate":"2023-02-27"},{"lineNumber":36,"author":{"gitId":"dsicol"},"content":"            throws EmptyStringException, IndexOutOfBoundsException {","lastModifiedDate":"2023-02-27"},{"lineNumber":37,"author":{"gitId":"dsicol"},"content":"        ExceptionManager.checkEmptyString(userString);","lastModifiedDate":"2023-02-27"},{"lineNumber":38,"author":{"gitId":"dsicol"},"content":"        int actualIndex \u003d Integer.parseInt(userString) - INDEX_OFFSET_IN_COMMAND;","lastModifiedDate":"2023-02-21"},{"lineNumber":39,"author":{"gitId":"dsicol"},"content":"        int taskListSize \u003d taskList.getTaskListSize();","lastModifiedDate":"2023-02-21"},{"lineNumber":40,"author":{"gitId":"dsicol"},"content":"        if (actualIndex \u003c INDEX_BEGIN || actualIndex \u003e\u003d taskListSize) {","lastModifiedDate":"2023-02-21"},{"lineNumber":41,"author":{"gitId":"dsicol"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2023-02-21"},{"lineNumber":42,"author":{"gitId":"dsicol"},"content":"        } else {","lastModifiedDate":"2023-02-21"},{"lineNumber":43,"author":{"gitId":"dsicol"},"content":"            return actualIndex;","lastModifiedDate":"2023-02-21"},{"lineNumber":44,"author":{"gitId":"dsicol"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":45,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":46,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":47,"author":{"gitId":"dsicol"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":48,"author":{"gitId":"dsicol"},"content":"     * Fetches the task description before the delimiter as a string","lastModifiedDate":"2023-03-02"},{"lineNumber":49,"author":{"gitId":"dsicol"},"content":"     *","lastModifiedDate":"2023-03-02"},{"lineNumber":50,"author":{"gitId":"dsicol"},"content":"     * @param userString the String containing full task details","lastModifiedDate":"2023-03-02"},{"lineNumber":51,"author":{"gitId":"dsicol"},"content":"     * @param delimiter the String delimiter that the task description appears before","lastModifiedDate":"2023-03-02"},{"lineNumber":52,"author":{"gitId":"dsicol"},"content":"     * @return task description as a String","lastModifiedDate":"2023-03-02"},{"lineNumber":53,"author":{"gitId":"dsicol"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":54,"author":{"gitId":"dsicol"},"content":"    public static String fetchTask(String userString, String delimiter) throws EmptyStringException {","lastModifiedDate":"2023-02-27"},{"lineNumber":55,"author":{"gitId":"dsicol"},"content":"        int indexOfFirstSlash \u003d userString.indexOf(delimiter);","lastModifiedDate":"2023-02-22"},{"lineNumber":56,"author":{"gitId":"dsicol"},"content":"        String task \u003d userString.substring(INDEX_BEGIN, indexOfFirstSlash);","lastModifiedDate":"2023-02-21"},{"lineNumber":57,"author":{"gitId":"dsicol"},"content":"        ExceptionManager.checkEmptyString(task);","lastModifiedDate":"2023-02-27"},{"lineNumber":58,"author":{"gitId":"dsicol"},"content":"        return task;","lastModifiedDate":"2023-02-21"},{"lineNumber":59,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":60,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":61,"author":{"gitId":"dsicol"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":62,"author":{"gitId":"dsicol"},"content":"     * Fetches the deadline due date from the full task description","lastModifiedDate":"2023-03-02"},{"lineNumber":63,"author":{"gitId":"dsicol"},"content":"     *","lastModifiedDate":"2023-03-02"},{"lineNumber":64,"author":{"gitId":"dsicol"},"content":"     * @param userString the String containing full task details","lastModifiedDate":"2023-03-02"},{"lineNumber":65,"author":{"gitId":"dsicol"},"content":"     * @return the deadline due date as a String","lastModifiedDate":"2023-03-02"},{"lineNumber":66,"author":{"gitId":"dsicol"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":67,"author":{"gitId":"dsicol"},"content":"    public static String fetchBy(String userString) throws EmptyStringException {","lastModifiedDate":"2023-02-27"},{"lineNumber":68,"author":{"gitId":"dsicol"},"content":"        int firstSlashEntry \u003d userString.indexOf(DELIMITER_DEADLINE_BY);","lastModifiedDate":"2023-02-22"},{"lineNumber":69,"author":{"gitId":"dsicol"},"content":"        String by \u003d userString.substring(firstSlashEntry + INDEX_OFFSET_IN_BY_COMMAND);","lastModifiedDate":"2023-02-22"},{"lineNumber":70,"author":{"gitId":"dsicol"},"content":"        ExceptionManager.checkEmptyString(by);","lastModifiedDate":"2023-02-27"},{"lineNumber":71,"author":{"gitId":"dsicol"},"content":"        return by;","lastModifiedDate":"2023-02-21"},{"lineNumber":72,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":73,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":74,"author":{"gitId":"dsicol"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":75,"author":{"gitId":"dsicol"},"content":"     * Fetches the event start date from the full task description","lastModifiedDate":"2023-03-02"},{"lineNumber":76,"author":{"gitId":"dsicol"},"content":"     *","lastModifiedDate":"2023-03-02"},{"lineNumber":77,"author":{"gitId":"dsicol"},"content":"     * @param userString the String containing full task details","lastModifiedDate":"2023-03-02"},{"lineNumber":78,"author":{"gitId":"dsicol"},"content":"     * @return the event start date as a String","lastModifiedDate":"2023-03-02"},{"lineNumber":79,"author":{"gitId":"dsicol"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":80,"author":{"gitId":"dsicol"},"content":"    public static String fetchFrom(String userString) throws EmptyStringException {","lastModifiedDate":"2023-02-22"},{"lineNumber":81,"author":{"gitId":"dsicol"},"content":"        int firstSlashEntry \u003d userString.indexOf(DELIMITER_EVENT_FROM);","lastModifiedDate":"2023-02-22"},{"lineNumber":82,"author":{"gitId":"dsicol"},"content":"        int secondSlashEntry \u003d userString.indexOf(DELIMITER_EVENT_TO);","lastModifiedDate":"2023-02-22"},{"lineNumber":83,"author":{"gitId":"dsicol"},"content":"        String from \u003d userString.substring(firstSlashEntry + INDEX_OFFSET_IN_FROM_COMMAND, secondSlashEntry);","lastModifiedDate":"2023-02-22"},{"lineNumber":84,"author":{"gitId":"dsicol"},"content":"        ExceptionManager.checkEmptyString(from);","lastModifiedDate":"2023-02-27"},{"lineNumber":85,"author":{"gitId":"dsicol"},"content":"        return from;","lastModifiedDate":"2023-02-21"},{"lineNumber":86,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":87,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":88,"author":{"gitId":"dsicol"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":89,"author":{"gitId":"dsicol"},"content":"     * Fetches the event end date from the full task description","lastModifiedDate":"2023-03-02"},{"lineNumber":90,"author":{"gitId":"dsicol"},"content":"     *","lastModifiedDate":"2023-03-02"},{"lineNumber":91,"author":{"gitId":"dsicol"},"content":"     * @param userString the String containing full task details","lastModifiedDate":"2023-03-02"},{"lineNumber":92,"author":{"gitId":"dsicol"},"content":"     * @return the event end date as a String","lastModifiedDate":"2023-03-02"},{"lineNumber":93,"author":{"gitId":"dsicol"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":94,"author":{"gitId":"dsicol"},"content":"    public static String fetchTo(String userString) throws EmptyStringException {","lastModifiedDate":"2023-02-27"},{"lineNumber":95,"author":{"gitId":"dsicol"},"content":"        int secondSlashEntry \u003d userString.indexOf(DELIMITER_EVENT_TO);","lastModifiedDate":"2023-02-22"},{"lineNumber":96,"author":{"gitId":"dsicol"},"content":"        String to \u003d userString.substring(secondSlashEntry + INDEX_OFFSET_IN_TO_COMMAND);","lastModifiedDate":"2023-02-22"},{"lineNumber":97,"author":{"gitId":"dsicol"},"content":"        ExceptionManager.checkEmptyString(to);","lastModifiedDate":"2023-02-27"},{"lineNumber":98,"author":{"gitId":"dsicol"},"content":"        return to;","lastModifiedDate":"2023-02-21"},{"lineNumber":99,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":100,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":101,"author":{"gitId":"dsicol"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":102,"author":{"gitId":"dsicol"},"content":"     * Parses the string and converts to a LocalDate object.","lastModifiedDate":"2023-02-23"},{"lineNumber":103,"author":{"gitId":"dsicol"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":104,"author":{"gitId":"dsicol"},"content":"     * @param localDate string to be converted to date (format: yyyy-MM-dd)","lastModifiedDate":"2023-02-23"},{"lineNumber":105,"author":{"gitId":"dsicol"},"content":"     * @return LocalDate converted from the given string","lastModifiedDate":"2023-02-23"},{"lineNumber":106,"author":{"gitId":"dsicol"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":107,"author":{"gitId":"dsicol"},"content":"    public static LocalDate parseDate(String localDate) throws EmptyStringException, InvalidDateFormat {","lastModifiedDate":"2023-02-27"},{"lineNumber":108,"author":{"gitId":"dsicol"},"content":"        try {","lastModifiedDate":"2023-02-22"},{"lineNumber":109,"author":{"gitId":"dsicol"},"content":"            ExceptionManager.checkEmptyString(localDate);","lastModifiedDate":"2023-02-27"},{"lineNumber":110,"author":{"gitId":"dsicol"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2023-02-22"},{"lineNumber":111,"author":{"gitId":"dsicol"},"content":"            return LocalDate.parse(localDate, formatter);","lastModifiedDate":"2023-02-22"},{"lineNumber":112,"author":{"gitId":"dsicol"},"content":"        } catch (DateTimeParseException ignored) {","lastModifiedDate":"2023-02-22"},{"lineNumber":113,"author":{"gitId":"dsicol"},"content":"            throw new InvalidDateFormat();","lastModifiedDate":"2023-02-22"},{"lineNumber":114,"author":{"gitId":"dsicol"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":115,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":116,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":117,"author":{"gitId":"dsicol"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":118,"author":{"gitId":"dsicol"},"content":"     * Parses the string and converts to a LocalDateTime object.","lastModifiedDate":"2023-02-23"},{"lineNumber":119,"author":{"gitId":"dsicol"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":120,"author":{"gitId":"dsicol"},"content":"     * @param localDateTime string to be converted to date (format: yyyy-MM-dd)","lastModifiedDate":"2023-02-23"},{"lineNumber":121,"author":{"gitId":"dsicol"},"content":"     * @return LocalDateTime converted from the given string","lastModifiedDate":"2023-02-23"},{"lineNumber":122,"author":{"gitId":"dsicol"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":123,"author":{"gitId":"dsicol"},"content":"    public static LocalDateTime parseDateTime(String localDateTime) throws InvalidDateTimeFormat {","lastModifiedDate":"2023-02-22"},{"lineNumber":124,"author":{"gitId":"dsicol"},"content":"        try {","lastModifiedDate":"2023-02-22"},{"lineNumber":125,"author":{"gitId":"dsicol"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2023-02-22"},{"lineNumber":126,"author":{"gitId":"dsicol"},"content":"            return LocalDateTime.parse(localDateTime, formatter);","lastModifiedDate":"2023-02-22"},{"lineNumber":127,"author":{"gitId":"dsicol"},"content":"        } catch (DateTimeParseException ignored) {","lastModifiedDate":"2023-02-22"},{"lineNumber":128,"author":{"gitId":"dsicol"},"content":"            throw new InvalidDateTimeFormat();","lastModifiedDate":"2023-02-22"},{"lineNumber":129,"author":{"gitId":"dsicol"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":130,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":131,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":132,"author":{"gitId":"dsicol"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":133,"author":{"gitId":"dsicol"},"content":"     * Parses the LocalDate and converts to a string.","lastModifiedDate":"2023-02-23"},{"lineNumber":134,"author":{"gitId":"dsicol"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":135,"author":{"gitId":"dsicol"},"content":"     * @param localDate date (format: yyyy-MM-dd) to be converted into string (format: \"d MMM yyyy\")","lastModifiedDate":"2023-02-23"},{"lineNumber":136,"author":{"gitId":"dsicol"},"content":"     * @return string converted from the given LocalDate","lastModifiedDate":"2023-02-23"},{"lineNumber":137,"author":{"gitId":"dsicol"},"content":"     * @see \u003ca href\u003d\"https://docs.oracle.com/javase/8/docs/api/java/time/format/DateTimeFormatter.html\"\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":138,"author":{"gitId":"dsicol"},"content":"     *     DateTimeFormatter\u003c/a\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":139,"author":{"gitId":"dsicol"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":140,"author":{"gitId":"dsicol"},"content":"    public static String convertDateToString(LocalDate localDate) {","lastModifiedDate":"2023-02-22"},{"lineNumber":141,"author":{"gitId":"dsicol"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d MMM yyyy\");","lastModifiedDate":"2023-02-22"},{"lineNumber":142,"author":{"gitId":"dsicol"},"content":"        return localDate.format(formatter);","lastModifiedDate":"2023-02-22"},{"lineNumber":143,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":144,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":145,"author":{"gitId":"dsicol"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":146,"author":{"gitId":"dsicol"},"content":"     * Parses the LocalDateTime and converts to a string.","lastModifiedDate":"2023-02-23"},{"lineNumber":147,"author":{"gitId":"dsicol"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":148,"author":{"gitId":"dsicol"},"content":"     * @param localDateTime date (format: yyyy-MM-dd) to be converted into string (format: \"d MMM yyyy hh:mm a\")","lastModifiedDate":"2023-02-23"},{"lineNumber":149,"author":{"gitId":"dsicol"},"content":"     * @return string converted from the given LocalDateTime","lastModifiedDate":"2023-02-23"},{"lineNumber":150,"author":{"gitId":"dsicol"},"content":"     * @see \u003ca href\u003d\"https://docs.oracle.com/javase/8/docs/api/java/time/format/DateTimeFormatter.html\"\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":151,"author":{"gitId":"dsicol"},"content":"     *     DateTimeFormatter\u003c/a\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":152,"author":{"gitId":"dsicol"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":153,"author":{"gitId":"dsicol"},"content":"    public static String convertDateTimeToString(LocalDateTime localDateTime) {","lastModifiedDate":"2023-02-22"},{"lineNumber":154,"author":{"gitId":"dsicol"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d MMM yyyy hh:mm a\");","lastModifiedDate":"2023-02-22"},{"lineNumber":155,"author":{"gitId":"dsicol"},"content":"        return localDateTime.format(formatter);","lastModifiedDate":"2023-02-22"},{"lineNumber":156,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":157,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":158,"author":{"gitId":"dsicol"},"content":"}","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"dsicol":158}},{"path":"src/main/java/inu/exceptionhandling/EmptyStringException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dsicol"},"content":"package inu.exceptionhandling;","lastModifiedDate":"2023-02-22"},{"lineNumber":2,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":3,"author":{"gitId":"dsicol"},"content":"public class EmptyStringException extends Exception {","lastModifiedDate":"2023-02-22"},{"lineNumber":4,"author":{"gitId":"dsicol"},"content":"}","lastModifiedDate":"2023-02-22"}],"authorContributionMap":{"dsicol":4}},{"path":"src/main/java/inu/exceptionhandling/EmptyTaskListByDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dsicol"},"content":"package inu.exceptionhandling;","lastModifiedDate":"2023-02-22"},{"lineNumber":2,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":3,"author":{"gitId":"dsicol"},"content":"public class EmptyTaskListByDateException extends Exception {","lastModifiedDate":"2023-02-22"},{"lineNumber":4,"author":{"gitId":"dsicol"},"content":"}","lastModifiedDate":"2023-02-22"}],"authorContributionMap":{"dsicol":4}},{"path":"src/main/java/inu/exceptionhandling/EmptyTaskListException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dsicol"},"content":"package inu.exceptionhandling;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"dsicol"},"content":"public class EmptyTaskListException extends Exception {","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"dsicol"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"dsicol":4}},{"path":"src/main/java/inu/exceptionhandling/ExceptionManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dsicol"},"content":"package inu.exceptionhandling;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"dsicol"},"content":"import inu.task.TaskList;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"dsicol"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"dsicol"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"dsicol"},"content":" * Represents methods to throw custom exceptions.","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"dsicol"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"dsicol"},"content":"public class ExceptionManager {","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"dsicol"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"dsicol"},"content":"     * Checks for empty strings.","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"dsicol"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"dsicol"},"content":"     * @param strings the strings to be checked.","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"dsicol"},"content":"     * @throws EmptyStringException when an empty string is read.","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"dsicol"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"dsicol"},"content":"    public static void checkEmptyString(String... strings) throws EmptyStringException {","lastModifiedDate":"2023-02-22"},{"lineNumber":19,"author":{"gitId":"dsicol"},"content":"        for (String s : strings) {","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"dsicol"},"content":"            if (s.isEmpty()) {","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"dsicol"},"content":"                throw new EmptyStringException();","lastModifiedDate":"2023-02-22"},{"lineNumber":22,"author":{"gitId":"dsicol"},"content":"            }","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"dsicol"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"dsicol"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"dsicol"},"content":"     * Checks that the event starting date and time occurs before its ending date","lastModifiedDate":"2023-02-27"},{"lineNumber":28,"author":{"gitId":"dsicol"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"dsicol"},"content":"     * @param from the starting date and time of the event","lastModifiedDate":"2023-02-27"},{"lineNumber":30,"author":{"gitId":"dsicol"},"content":"     * @param to the ending date and time of the event","lastModifiedDate":"2023-02-27"},{"lineNumber":31,"author":{"gitId":"dsicol"},"content":"     * @throws InvalidEventFromAndToDate when the event\u0027s starting date occurs after its ending date","lastModifiedDate":"2023-02-27"},{"lineNumber":32,"author":{"gitId":"dsicol"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"dsicol"},"content":"    public static void checkValidFromAndToDate(LocalDateTime from, LocalDateTime to) throws InvalidEventFromAndToDate {","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"dsicol"},"content":"        if (from.isAfter(to)) {","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"dsicol"},"content":"            throw new InvalidEventFromAndToDate();","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"dsicol"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":37,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":38,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":39,"author":{"gitId":"dsicol"},"content":"    public static void checkCorrectDate(LocalDateTime... dates) throws InvalidDate {","lastModifiedDate":"2023-02-27"},{"lineNumber":40,"author":{"gitId":"dsicol"},"content":"        for (LocalDateTime d : dates) {","lastModifiedDate":"2023-02-27"},{"lineNumber":41,"author":{"gitId":"dsicol"},"content":"            if (d.isBefore(LocalDateTime.now())) {","lastModifiedDate":"2023-02-27"},{"lineNumber":42,"author":{"gitId":"dsicol"},"content":"                throw new InvalidDate();","lastModifiedDate":"2023-02-27"},{"lineNumber":43,"author":{"gitId":"dsicol"},"content":"            }","lastModifiedDate":"2023-02-27"},{"lineNumber":44,"author":{"gitId":"dsicol"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":45,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":46,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":47,"author":{"gitId":"dsicol"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"dsicol":47}},{"path":"src/main/java/inu/exceptionhandling/InvalidDate.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dsicol"},"content":"package inu.exceptionhandling;","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"dsicol"},"content":"public class InvalidDate extends Exception {","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"dsicol"},"content":"}","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"dsicol":4}},{"path":"src/main/java/inu/exceptionhandling/InvalidDateFormat.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dsicol"},"content":"package inu.exceptionhandling;","lastModifiedDate":"2023-02-22"},{"lineNumber":2,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":3,"author":{"gitId":"dsicol"},"content":"public class InvalidDateFormat extends Exception {","lastModifiedDate":"2023-02-22"},{"lineNumber":4,"author":{"gitId":"dsicol"},"content":"}","lastModifiedDate":"2023-02-22"}],"authorContributionMap":{"dsicol":4}},{"path":"src/main/java/inu/exceptionhandling/InvalidDateTimeFormat.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dsicol"},"content":"package inu.exceptionhandling;","lastModifiedDate":"2023-02-22"},{"lineNumber":2,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":3,"author":{"gitId":"dsicol"},"content":"public class InvalidDateTimeFormat extends Exception {","lastModifiedDate":"2023-02-22"},{"lineNumber":4,"author":{"gitId":"dsicol"},"content":"}","lastModifiedDate":"2023-02-22"}],"authorContributionMap":{"dsicol":4}},{"path":"src/main/java/inu/exceptionhandling/InvalidEventFromAndToDate.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dsicol"},"content":"package inu.exceptionhandling;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"dsicol"},"content":"public class InvalidEventFromAndToDate extends Exception {","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"dsicol"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"dsicol":4}},{"path":"src/main/java/inu/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dsicol"},"content":"package inu.parser;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"dsicol"},"content":"import inu.commands.Command;","lastModifiedDate":"2023-02-21"},{"lineNumber":4,"author":{"gitId":"dsicol"},"content":"import inu.commands.HelpCommand;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"dsicol"},"content":"import inu.commands.TodoCommand;","lastModifiedDate":"2023-02-21"},{"lineNumber":6,"author":{"gitId":"dsicol"},"content":"import inu.commands.DeadlineCommand;","lastModifiedDate":"2023-02-21"},{"lineNumber":7,"author":{"gitId":"dsicol"},"content":"import inu.commands.EventCommand;","lastModifiedDate":"2023-02-21"},{"lineNumber":8,"author":{"gitId":"dsicol"},"content":"import inu.commands.DeleteCommand;","lastModifiedDate":"2023-02-21"},{"lineNumber":9,"author":{"gitId":"dsicol"},"content":"import inu.commands.MarkCommand;","lastModifiedDate":"2023-02-21"},{"lineNumber":10,"author":{"gitId":"dsicol"},"content":"import inu.commands.UnmarkCommand;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"dsicol"},"content":"import inu.commands.ListWithDateCommand;","lastModifiedDate":"2023-02-22"},{"lineNumber":12,"author":{"gitId":"dsicol"},"content":"import inu.commands.ListDefaultCommand;","lastModifiedDate":"2023-02-22"},{"lineNumber":13,"author":{"gitId":"dsicol"},"content":"import inu.commands.FindCommand;","lastModifiedDate":"2023-02-22"},{"lineNumber":14,"author":{"gitId":"dsicol"},"content":"import inu.commands.ExitCommand;","lastModifiedDate":"2023-02-21"},{"lineNumber":15,"author":{"gitId":"dsicol"},"content":"import inu.commands.InvalidCommand;","lastModifiedDate":"2023-02-21"},{"lineNumber":16,"author":{"gitId":"dsicol"},"content":"import inu.commons.Messages;","lastModifiedDate":"2023-02-21"},{"lineNumber":17,"author":{"gitId":"dsicol"},"content":"import inu.exceptionhandling.*;","lastModifiedDate":"2023-02-22"},{"lineNumber":18,"author":{"gitId":"dsicol"},"content":"import inu.task.DeadLine;","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"dsicol"},"content":"import inu.task.Event;","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"dsicol"},"content":"import inu.task.Task;","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"dsicol"},"content":"import inu.task.Todo;","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"dsicol"},"content":"import inu.task.TaskList;","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"dsicol"},"content":"import inu.commons.Util;","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"dsicol"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-22"},{"lineNumber":25,"author":{"gitId":"dsicol"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-22"},{"lineNumber":26,"author":{"gitId":"dsicol"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-21"},{"lineNumber":27,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":28,"author":{"gitId":"dsicol"},"content":"public class Parser {","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":30,"author":{"gitId":"dsicol"},"content":"    private static final Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"dsicol"},"content":"    private static String[] userString;","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"dsicol"},"content":"    private static final int INDEX_COMMAND \u003d 0;","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"dsicol"},"content":"    private static final int INDEX_ENTRY \u003d 1;","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"dsicol"},"content":"    private static final int USER_STRING_SPLIT_LIMIT \u003d 2;","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"dsicol"},"content":"    private static final int DECODED_TASK_TYPE \u003d 0;","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"dsicol"},"content":"    private static final int DECODED_MARK \u003d 1;","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"dsicol"},"content":"    private static final int DECODED_TASK \u003d 2;","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"dsicol"},"content":"    private static final int DECODED_DUE_DATE \u003d 3;","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"dsicol"},"content":"    private static final int DECODED_FROM_DATE \u003d 3;","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"dsicol"},"content":"    private static final int DECODED_TO_DATE \u003d 4;","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"dsicol"},"content":"    private static final String DECODE_TODO \u003d \"T\";","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"dsicol"},"content":"    private static final String DECODE_DEADLINE \u003d \"D\";","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"dsicol"},"content":"    private static final String DECODE_EVENT \u003d \"E\";","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"dsicol"},"content":"    private static final String DECODE_MARKED \u003d \"[X]\";","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":46,"author":{"gitId":"dsicol"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":47,"author":{"gitId":"dsicol"},"content":"     * Reads user input as a string and converts it into an array.","lastModifiedDate":"2023-02-23"},{"lineNumber":48,"author":{"gitId":"dsicol"},"content":"     * This allows inputs to be processed as potential command instructions by","lastModifiedDate":"2023-02-23"},{"lineNumber":49,"author":{"gitId":"dsicol"},"content":"     * splitting inputs into commands and task descriptions.","lastModifiedDate":"2023-02-23"},{"lineNumber":50,"author":{"gitId":"dsicol"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":51,"author":{"gitId":"dsicol"},"content":"     * @return String array of user input","lastModifiedDate":"2023-02-23"},{"lineNumber":52,"author":{"gitId":"dsicol"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":53,"author":{"gitId":"dsicol"},"content":"    public static String[] readCommand() {","lastModifiedDate":"2023-02-21"},{"lineNumber":54,"author":{"gitId":"dsicol"},"content":"        String userInput \u003d input.nextLine();","lastModifiedDate":"2023-02-24"},{"lineNumber":55,"author":{"gitId":"dsicol"},"content":"        userString \u003d userInput.split(\" \", USER_STRING_SPLIT_LIMIT);","lastModifiedDate":"2023-02-21"},{"lineNumber":56,"author":{"gitId":"dsicol"},"content":"        return userString;","lastModifiedDate":"2023-02-21"},{"lineNumber":57,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":58,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":59,"author":{"gitId":"dsicol"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":60,"author":{"gitId":"dsicol"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2023-02-23"},{"lineNumber":61,"author":{"gitId":"dsicol"},"content":"     * This method also handles empty inputs.","lastModifiedDate":"2023-02-23"},{"lineNumber":62,"author":{"gitId":"dsicol"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":63,"author":{"gitId":"dsicol"},"content":"     * @param taskList the task list where the task will be added to.","lastModifiedDate":"2023-02-23"},{"lineNumber":64,"author":{"gitId":"dsicol"},"content":"     * @return the command based on the user input.","lastModifiedDate":"2023-02-23"},{"lineNumber":65,"author":{"gitId":"dsicol"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":66,"author":{"gitId":"dsicol"},"content":"    public static Command parseCommand(TaskList taskList) {","lastModifiedDate":"2023-02-21"},{"lineNumber":67,"author":{"gitId":"dsicol"},"content":"        userString \u003d readCommand();","lastModifiedDate":"2023-02-21"},{"lineNumber":68,"author":{"gitId":"dsicol"},"content":"        String command \u003d userString[INDEX_COMMAND];","lastModifiedDate":"2023-02-26"},{"lineNumber":69,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":70,"author":{"gitId":"dsicol"},"content":"        switch (command) {","lastModifiedDate":"2023-02-21"},{"lineNumber":71,"author":{"gitId":"dsicol"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"dsicol"},"content":"            return new HelpCommand();","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"dsicol"},"content":"        case TodoCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-21"},{"lineNumber":74,"author":{"gitId":"dsicol"},"content":"            return runTodo();","lastModifiedDate":"2023-02-24"},{"lineNumber":75,"author":{"gitId":"dsicol"},"content":"        case DeadlineCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-21"},{"lineNumber":76,"author":{"gitId":"dsicol"},"content":"            return runDeadline();","lastModifiedDate":"2023-02-24"},{"lineNumber":77,"author":{"gitId":"dsicol"},"content":"        case EventCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-21"},{"lineNumber":78,"author":{"gitId":"dsicol"},"content":"            return runEvent();","lastModifiedDate":"2023-02-24"},{"lineNumber":79,"author":{"gitId":"dsicol"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-21"},{"lineNumber":80,"author":{"gitId":"dsicol"},"content":"            return runDelete(taskList);","lastModifiedDate":"2023-02-24"},{"lineNumber":81,"author":{"gitId":"dsicol"},"content":"        case ListWithDateCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-22"},{"lineNumber":82,"author":{"gitId":"dsicol"},"content":"            return runListWithDate();","lastModifiedDate":"2023-02-26"},{"lineNumber":83,"author":{"gitId":"dsicol"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-22"},{"lineNumber":84,"author":{"gitId":"dsicol"},"content":"            return runFindCommand();","lastModifiedDate":"2023-02-26"},{"lineNumber":85,"author":{"gitId":"dsicol"},"content":"        case MarkCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-21"},{"lineNumber":86,"author":{"gitId":"dsicol"},"content":"            return runMark(taskList);","lastModifiedDate":"2023-02-24"},{"lineNumber":87,"author":{"gitId":"dsicol"},"content":"        case UnmarkCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-03"},{"lineNumber":88,"author":{"gitId":"dsicol"},"content":"            return runUnmark(taskList);","lastModifiedDate":"2023-02-24"},{"lineNumber":89,"author":{"gitId":"dsicol"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-21"},{"lineNumber":90,"author":{"gitId":"dsicol"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-02-21"},{"lineNumber":91,"author":{"gitId":"dsicol"},"content":"        default:","lastModifiedDate":"2023-02-21"},{"lineNumber":92,"author":{"gitId":"dsicol"},"content":"            return new InvalidCommand(Messages.MESSAGE_INVALID);","lastModifiedDate":"2023-02-21"},{"lineNumber":93,"author":{"gitId":"dsicol"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":94,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":95,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":96,"author":{"gitId":"dsicol"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":97,"author":{"gitId":"dsicol"},"content":"     * Collects user input and prepares {@code TodoCommand} for execution.","lastModifiedDate":"2023-02-23"},{"lineNumber":98,"author":{"gitId":"dsicol"},"content":"     * This method handles empty user inputs.","lastModifiedDate":"2023-02-23"},{"lineNumber":99,"author":{"gitId":"dsicol"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":100,"author":{"gitId":"dsicol"},"content":"     * @return the {@code TodoCommand} with the user input as its description.","lastModifiedDate":"2023-02-23"},{"lineNumber":101,"author":{"gitId":"dsicol"},"content":"     * Else an {@code InvalidCommand} with a corresponding prompt..","lastModifiedDate":"2023-02-23"},{"lineNumber":102,"author":{"gitId":"dsicol"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":103,"author":{"gitId":"dsicol"},"content":"    public static Command runTodo() {","lastModifiedDate":"2023-02-24"},{"lineNumber":104,"author":{"gitId":"dsicol"},"content":"        try {","lastModifiedDate":"2023-02-11"},{"lineNumber":105,"author":{"gitId":"dsicol"},"content":"            String description \u003d userString[INDEX_ENTRY].trim();","lastModifiedDate":"2023-02-24"},{"lineNumber":106,"author":{"gitId":"dsicol"},"content":"            ExceptionManager.checkEmptyString(description);","lastModifiedDate":"2023-02-24"},{"lineNumber":107,"author":{"gitId":"dsicol"},"content":"            return new TodoCommand(description);","lastModifiedDate":"2023-02-24"},{"lineNumber":108,"author":{"gitId":"dsicol"},"content":"        } catch (ArrayIndexOutOfBoundsException | EmptyStringException e) {","lastModifiedDate":"2023-02-26"},{"lineNumber":109,"author":{"gitId":"dsicol"},"content":"            return new InvalidCommand(Messages.MESSAGE_PROMPT_VALID_TODO);","lastModifiedDate":"2023-02-26"},{"lineNumber":110,"author":{"gitId":"dsicol"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":111,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":112,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":113,"author":{"gitId":"dsicol"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":114,"author":{"gitId":"dsicol"},"content":"     * Collects user input and prepares {@code DeadlineCommand} for execution.","lastModifiedDate":"2023-02-23"},{"lineNumber":115,"author":{"gitId":"dsicol"},"content":"     * This method handles empty user inputs.","lastModifiedDate":"2023-02-23"},{"lineNumber":116,"author":{"gitId":"dsicol"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":117,"author":{"gitId":"dsicol"},"content":"     * @return the {@code DeadlineCommand} with the user input as its description.","lastModifiedDate":"2023-02-23"},{"lineNumber":118,"author":{"gitId":"dsicol"},"content":"     * Else an {@code InvalidCommand} with a corresponding prompt..","lastModifiedDate":"2023-02-23"},{"lineNumber":119,"author":{"gitId":"dsicol"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":120,"author":{"gitId":"dsicol"},"content":"    public static Command runDeadline() {","lastModifiedDate":"2023-02-24"},{"lineNumber":121,"author":{"gitId":"dsicol"},"content":"        try {","lastModifiedDate":"2023-02-11"},{"lineNumber":122,"author":{"gitId":"dsicol"},"content":"            String description \u003d userString[INDEX_ENTRY].trim();","lastModifiedDate":"2023-02-24"},{"lineNumber":123,"author":{"gitId":"dsicol"},"content":"            String task \u003d Util.fetchTask(description, Util.DELIMITER_DEADLINE_BY);","lastModifiedDate":"2023-02-24"},{"lineNumber":124,"author":{"gitId":"dsicol"},"content":"            String by \u003d Util.fetchBy(description);","lastModifiedDate":"2023-02-24"},{"lineNumber":125,"author":{"gitId":"dsicol"},"content":"            return new DeadlineCommand(task, Util.parseDateTime(by));","lastModifiedDate":"2023-02-22"},{"lineNumber":126,"author":{"gitId":"dsicol"},"content":"        } catch (IndexOutOfBoundsException | EmptyStringException e) {","lastModifiedDate":"2023-02-27"},{"lineNumber":127,"author":{"gitId":"dsicol"},"content":"            return new InvalidCommand(Messages.MESSAGE_PROMPT_VALID_DEADLINE);","lastModifiedDate":"2023-02-21"},{"lineNumber":128,"author":{"gitId":"dsicol"},"content":"        } catch (InvalidDateTimeFormat  | InvalidDate i) {","lastModifiedDate":"2023-02-27"},{"lineNumber":129,"author":{"gitId":"dsicol"},"content":"            return new InvalidCommand(Messages.MESSAGE_PROMPT_VALID_DEADLINE_DATE);","lastModifiedDate":"2023-02-27"},{"lineNumber":130,"author":{"gitId":"dsicol"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":131,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":132,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":133,"author":{"gitId":"dsicol"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":134,"author":{"gitId":"dsicol"},"content":"     * Collects user input and prepares {@code EventCommand} for execution.","lastModifiedDate":"2023-02-23"},{"lineNumber":135,"author":{"gitId":"dsicol"},"content":"     * This method handles empty user inputs.","lastModifiedDate":"2023-02-23"},{"lineNumber":136,"author":{"gitId":"dsicol"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":137,"author":{"gitId":"dsicol"},"content":"     * @return the {@code EventCommand} with the user input as its description.","lastModifiedDate":"2023-02-23"},{"lineNumber":138,"author":{"gitId":"dsicol"},"content":"     * Else an {@code InvalidCommand} with a corresponding prompt.","lastModifiedDate":"2023-02-23"},{"lineNumber":139,"author":{"gitId":"dsicol"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":140,"author":{"gitId":"dsicol"},"content":"    public static Command runEvent() {","lastModifiedDate":"2023-02-24"},{"lineNumber":141,"author":{"gitId":"dsicol"},"content":"        try {","lastModifiedDate":"2023-02-11"},{"lineNumber":142,"author":{"gitId":"dsicol"},"content":"            String description \u003d userString[INDEX_ENTRY].trim();","lastModifiedDate":"2023-02-24"},{"lineNumber":143,"author":{"gitId":"dsicol"},"content":"            String task \u003d Util.fetchTask(description, Util.DELIMITER_EVENT_FROM);","lastModifiedDate":"2023-02-24"},{"lineNumber":144,"author":{"gitId":"dsicol"},"content":"            String from \u003d Util.fetchFrom(description);","lastModifiedDate":"2023-02-24"},{"lineNumber":145,"author":{"gitId":"dsicol"},"content":"            String to \u003d Util.fetchTo(description);","lastModifiedDate":"2023-02-24"},{"lineNumber":146,"author":{"gitId":"dsicol"},"content":"            return new EventCommand(task, Util.parseDateTime(from), Util.parseDateTime(to));","lastModifiedDate":"2023-02-22"},{"lineNumber":147,"author":{"gitId":"dsicol"},"content":"        } catch (IndexOutOfBoundsException | EmptyStringException e) {","lastModifiedDate":"2023-02-27"},{"lineNumber":148,"author":{"gitId":"dsicol"},"content":"            return new InvalidCommand(Messages.MESSAGE_PROMPT_VALID_EVENT);","lastModifiedDate":"2023-02-21"},{"lineNumber":149,"author":{"gitId":"dsicol"},"content":"        } catch (InvalidDateTimeFormat | InvalidDate | InvalidEventFromAndToDate i) {","lastModifiedDate":"2023-02-27"},{"lineNumber":150,"author":{"gitId":"dsicol"},"content":"            return new InvalidCommand(Messages.MESSAGE_PROMPT_VALID_EVENT_DATE);","lastModifiedDate":"2023-02-27"},{"lineNumber":151,"author":{"gitId":"dsicol"},"content":"        }","lastModifiedDate":"2023-02-21"},{"lineNumber":152,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":153,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":154,"author":{"gitId":"dsicol"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":155,"author":{"gitId":"dsicol"},"content":"     * Collects user input and prepares {@code DeleteCommand} for execution.","lastModifiedDate":"2023-02-23"},{"lineNumber":156,"author":{"gitId":"dsicol"},"content":"     * This method handles empty user inputs.","lastModifiedDate":"2023-02-23"},{"lineNumber":157,"author":{"gitId":"dsicol"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":158,"author":{"gitId":"dsicol"},"content":"     * @param taskList the task list the target task is in.","lastModifiedDate":"2023-02-23"},{"lineNumber":159,"author":{"gitId":"dsicol"},"content":"     * @return the {@code DeleteCommand} with the user input as its description.","lastModifiedDate":"2023-02-23"},{"lineNumber":160,"author":{"gitId":"dsicol"},"content":"     * Else an {@code InvalidCommand} with a corresponding prompt.","lastModifiedDate":"2023-02-23"},{"lineNumber":161,"author":{"gitId":"dsicol"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":162,"author":{"gitId":"dsicol"},"content":"    public static Command runDelete(TaskList taskList) {","lastModifiedDate":"2023-02-24"},{"lineNumber":163,"author":{"gitId":"dsicol"},"content":"        try {","lastModifiedDate":"2023-02-21"},{"lineNumber":164,"author":{"gitId":"dsicol"},"content":"            String description \u003d userString[INDEX_ENTRY].trim();","lastModifiedDate":"2023-02-26"},{"lineNumber":165,"author":{"gitId":"dsicol"},"content":"            int targetIndex \u003d Util.fetchIndexFromString(taskList, description);","lastModifiedDate":"2023-02-26"},{"lineNumber":166,"author":{"gitId":"dsicol"},"content":"            return new DeleteCommand(targetIndex);","lastModifiedDate":"2023-02-21"},{"lineNumber":167,"author":{"gitId":"dsicol"},"content":"        } catch (IndexOutOfBoundsException | EmptyStringException | NumberFormatException e) {","lastModifiedDate":"2023-02-26"},{"lineNumber":168,"author":{"gitId":"dsicol"},"content":"            return new InvalidCommand(Messages.MESSAGE_PROMPT_VALID_DELETE);","lastModifiedDate":"2023-02-26"},{"lineNumber":169,"author":{"gitId":"dsicol"},"content":"        }","lastModifiedDate":"2023-02-21"},{"lineNumber":170,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":171,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":172,"author":{"gitId":"dsicol"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":173,"author":{"gitId":"dsicol"},"content":"     * Collects user input and prepares {@code MarkCommand} for execution.","lastModifiedDate":"2023-02-23"},{"lineNumber":174,"author":{"gitId":"dsicol"},"content":"     * This method handles empty user inputs.","lastModifiedDate":"2023-02-23"},{"lineNumber":175,"author":{"gitId":"dsicol"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":176,"author":{"gitId":"dsicol"},"content":"     * @param taskList the task list the target task is in.","lastModifiedDate":"2023-02-23"},{"lineNumber":177,"author":{"gitId":"dsicol"},"content":"     * @return the {@code MarkCommand} with the user input as its description.","lastModifiedDate":"2023-02-23"},{"lineNumber":178,"author":{"gitId":"dsicol"},"content":"     * Else an {@code InvalidCommand} with a corresponding prompt.","lastModifiedDate":"2023-02-23"},{"lineNumber":179,"author":{"gitId":"dsicol"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":180,"author":{"gitId":"dsicol"},"content":"    public static Command runMark(TaskList taskList) {","lastModifiedDate":"2023-02-24"},{"lineNumber":181,"author":{"gitId":"dsicol"},"content":"        try {","lastModifiedDate":"2023-02-21"},{"lineNumber":182,"author":{"gitId":"dsicol"},"content":"            String description \u003d userString[INDEX_ENTRY].trim();","lastModifiedDate":"2023-02-26"},{"lineNumber":183,"author":{"gitId":"dsicol"},"content":"            int targetIndex \u003d Util.fetchIndexFromString(taskList, description);","lastModifiedDate":"2023-02-26"},{"lineNumber":184,"author":{"gitId":"dsicol"},"content":"            return new MarkCommand(targetIndex);","lastModifiedDate":"2023-02-21"},{"lineNumber":185,"author":{"gitId":"dsicol"},"content":"        } catch (IndexOutOfBoundsException | EmptyStringException | NumberFormatException e) {","lastModifiedDate":"2023-02-26"},{"lineNumber":186,"author":{"gitId":"dsicol"},"content":"            return new InvalidCommand(Messages.MESSAGE_PROMPT_VALID_MARK);","lastModifiedDate":"2023-02-26"},{"lineNumber":187,"author":{"gitId":"dsicol"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":188,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":189,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":190,"author":{"gitId":"dsicol"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":191,"author":{"gitId":"dsicol"},"content":"     * Collects user input and prepares {@code UnMarkCommand} for execution.","lastModifiedDate":"2023-02-23"},{"lineNumber":192,"author":{"gitId":"dsicol"},"content":"     * This method handles empty user inputs.","lastModifiedDate":"2023-02-23"},{"lineNumber":193,"author":{"gitId":"dsicol"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":194,"author":{"gitId":"dsicol"},"content":"     * @param taskList the task list the target task is in.","lastModifiedDate":"2023-02-23"},{"lineNumber":195,"author":{"gitId":"dsicol"},"content":"     * @return the {@code UnMarkCommand} with the user input as its description.","lastModifiedDate":"2023-02-23"},{"lineNumber":196,"author":{"gitId":"dsicol"},"content":"     * Else an {@code InvalidCommand} with a corresponding prompt.","lastModifiedDate":"2023-02-23"},{"lineNumber":197,"author":{"gitId":"dsicol"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":198,"author":{"gitId":"dsicol"},"content":"    public static Command runUnmark(TaskList taskList) {","lastModifiedDate":"2023-02-24"},{"lineNumber":199,"author":{"gitId":"dsicol"},"content":"        try {","lastModifiedDate":"2023-02-11"},{"lineNumber":200,"author":{"gitId":"dsicol"},"content":"            String description \u003d userString[INDEX_ENTRY].trim();","lastModifiedDate":"2023-02-26"},{"lineNumber":201,"author":{"gitId":"dsicol"},"content":"            int targetIndex \u003d Util.fetchIndexFromString(taskList, description);","lastModifiedDate":"2023-02-26"},{"lineNumber":202,"author":{"gitId":"dsicol"},"content":"            return new UnmarkCommand(targetIndex);","lastModifiedDate":"2023-03-03"},{"lineNumber":203,"author":{"gitId":"dsicol"},"content":"        } catch (IndexOutOfBoundsException | EmptyStringException | NumberFormatException e) {","lastModifiedDate":"2023-02-26"},{"lineNumber":204,"author":{"gitId":"dsicol"},"content":"            return new InvalidCommand(Messages.MESSAGE_PROMPT_VALID_UNMARK);","lastModifiedDate":"2023-02-26"},{"lineNumber":205,"author":{"gitId":"dsicol"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":206,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":207,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":208,"author":{"gitId":"dsicol"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":209,"author":{"gitId":"dsicol"},"content":"     * Collects user input as a date and prepares {@code ListWithDateCommand} for execution.","lastModifiedDate":"2023-02-23"},{"lineNumber":210,"author":{"gitId":"dsicol"},"content":"     * If a date is not provided, the method prepares {@code ListDefaultCommand} for execution.","lastModifiedDate":"2023-02-23"},{"lineNumber":211,"author":{"gitId":"dsicol"},"content":"     * This method handles empty user inputs.","lastModifiedDate":"2023-02-23"},{"lineNumber":212,"author":{"gitId":"dsicol"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":213,"author":{"gitId":"dsicol"},"content":"     * @return the {@code ListWithDateCommand} with the user input as the date to query.","lastModifiedDate":"2023-02-23"},{"lineNumber":214,"author":{"gitId":"dsicol"},"content":"     * If there is no date provided, {@code ListDefaultCommand} is returned instead.","lastModifiedDate":"2023-02-23"},{"lineNumber":215,"author":{"gitId":"dsicol"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":216,"author":{"gitId":"dsicol"},"content":"    public static Command runListWithDate() {","lastModifiedDate":"2023-02-26"},{"lineNumber":217,"author":{"gitId":"dsicol"},"content":"        try {","lastModifiedDate":"2023-02-22"},{"lineNumber":218,"author":{"gitId":"dsicol"},"content":"            String dateString \u003d userString[INDEX_ENTRY].trim();","lastModifiedDate":"2023-02-24"},{"lineNumber":219,"author":{"gitId":"dsicol"},"content":"            LocalDate date \u003d Util.parseDate(dateString);","lastModifiedDate":"2023-02-24"},{"lineNumber":220,"author":{"gitId":"dsicol"},"content":"            return new ListWithDateCommand(date);","lastModifiedDate":"2023-02-22"},{"lineNumber":221,"author":{"gitId":"dsicol"},"content":"        } catch (ArrayIndexOutOfBoundsException | EmptyStringException e) {","lastModifiedDate":"2023-02-24"},{"lineNumber":222,"author":{"gitId":"dsicol"},"content":"            return new ListDefaultCommand();","lastModifiedDate":"2023-02-23"},{"lineNumber":223,"author":{"gitId":"dsicol"},"content":"        } catch (InvalidDateFormat e) {","lastModifiedDate":"2023-02-22"},{"lineNumber":224,"author":{"gitId":"dsicol"},"content":"            return new InvalidCommand(Messages.MESSAGE_PROMPT_VALID_DATE);","lastModifiedDate":"2023-02-22"},{"lineNumber":225,"author":{"gitId":"dsicol"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":226,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":227,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":228,"author":{"gitId":"dsicol"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":229,"author":{"gitId":"dsicol"},"content":"     * Collects user input as a key word and prepares {@code FindCommand} for execution.","lastModifiedDate":"2023-02-23"},{"lineNumber":230,"author":{"gitId":"dsicol"},"content":"     * This method handles empty user inputs.","lastModifiedDate":"2023-02-23"},{"lineNumber":231,"author":{"gitId":"dsicol"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":232,"author":{"gitId":"dsicol"},"content":"     * @return the {@code FindCommand} with the user input as the key word to query.","lastModifiedDate":"2023-02-23"},{"lineNumber":233,"author":{"gitId":"dsicol"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":234,"author":{"gitId":"dsicol"},"content":"    public static Command runFindCommand() {","lastModifiedDate":"2023-02-26"},{"lineNumber":235,"author":{"gitId":"dsicol"},"content":"        try {","lastModifiedDate":"2023-02-22"},{"lineNumber":236,"author":{"gitId":"dsicol"},"content":"            String keyword \u003d userString[INDEX_ENTRY].trim();","lastModifiedDate":"2023-02-24"},{"lineNumber":237,"author":{"gitId":"dsicol"},"content":"            ExceptionManager.checkEmptyString(keyword);","lastModifiedDate":"2023-02-24"},{"lineNumber":238,"author":{"gitId":"dsicol"},"content":"            return new FindCommand(keyword);","lastModifiedDate":"2023-02-24"},{"lineNumber":239,"author":{"gitId":"dsicol"},"content":"        } catch (ArrayIndexOutOfBoundsException | EmptyStringException e) {","lastModifiedDate":"2023-02-26"},{"lineNumber":240,"author":{"gitId":"dsicol"},"content":"            return new InvalidCommand(Messages.MESSAGE_PROMPT_VALID_FIND);","lastModifiedDate":"2023-02-26"},{"lineNumber":241,"author":{"gitId":"dsicol"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":242,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":243,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":244,"author":{"gitId":"dsicol"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":245,"author":{"gitId":"dsicol"},"content":"     * Parses each saved task from the {@code TaskList} data from the storage file and return it.","lastModifiedDate":"2023-02-23"},{"lineNumber":246,"author":{"gitId":"dsicol"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":247,"author":{"gitId":"dsicol"},"content":"     * @return the task read from the storage file","lastModifiedDate":"2023-02-23"},{"lineNumber":248,"author":{"gitId":"dsicol"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":249,"author":{"gitId":"dsicol"},"content":"    public static Task decodeString(String fileString) {","lastModifiedDate":"2023-02-11"},{"lineNumber":250,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":251,"author":{"gitId":"dsicol"},"content":"        String[] fileStrings \u003d fileString.split(\"//\");","lastModifiedDate":"2023-02-11"},{"lineNumber":252,"author":{"gitId":"dsicol"},"content":"        String taskType \u003d fileStrings[DECODED_TASK_TYPE];","lastModifiedDate":"2023-02-11"},{"lineNumber":253,"author":{"gitId":"dsicol"},"content":"        String task \u003d fileStrings[DECODED_TASK];","lastModifiedDate":"2023-02-11"},{"lineNumber":254,"author":{"gitId":"dsicol"},"content":"        String markStatus \u003d fileStrings[DECODED_MARK];","lastModifiedDate":"2023-02-11"},{"lineNumber":255,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":256,"author":{"gitId":"dsicol"},"content":"        switch (taskType) {","lastModifiedDate":"2023-02-11"},{"lineNumber":257,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":258,"author":{"gitId":"dsicol"},"content":"        case DECODE_TODO:","lastModifiedDate":"2023-02-21"},{"lineNumber":259,"author":{"gitId":"dsicol"},"content":"            Todo todo \u003d new Todo(task);","lastModifiedDate":"2023-02-11"},{"lineNumber":260,"author":{"gitId":"dsicol"},"content":"            if (markStatus.equals(DECODE_MARKED)) {","lastModifiedDate":"2023-02-21"},{"lineNumber":261,"author":{"gitId":"dsicol"},"content":"                todo.setDone();","lastModifiedDate":"2023-02-11"},{"lineNumber":262,"author":{"gitId":"dsicol"},"content":"            }","lastModifiedDate":"2023-02-11"},{"lineNumber":263,"author":{"gitId":"dsicol"},"content":"            return todo;","lastModifiedDate":"2023-02-11"},{"lineNumber":264,"author":{"gitId":"dsicol"},"content":"        case DECODE_DEADLINE:","lastModifiedDate":"2023-02-21"},{"lineNumber":265,"author":{"gitId":"dsicol"},"content":"            String byDate \u003d fileStrings[DECODED_DUE_DATE];","lastModifiedDate":"2023-02-22"},{"lineNumber":266,"author":{"gitId":"dsicol"},"content":"            LocalDateTime by \u003d LocalDateTime.parse(byDate);","lastModifiedDate":"2023-02-22"},{"lineNumber":267,"author":{"gitId":"dsicol"},"content":"            DeadLine deadLine \u003d new DeadLine(task, by);","lastModifiedDate":"2023-02-22"},{"lineNumber":268,"author":{"gitId":"dsicol"},"content":"            if (markStatus.equals(DECODE_MARKED)) {","lastModifiedDate":"2023-02-21"},{"lineNumber":269,"author":{"gitId":"dsicol"},"content":"                deadLine.setDone();","lastModifiedDate":"2023-02-11"},{"lineNumber":270,"author":{"gitId":"dsicol"},"content":"            }","lastModifiedDate":"2023-02-11"},{"lineNumber":271,"author":{"gitId":"dsicol"},"content":"            return deadLine;","lastModifiedDate":"2023-02-11"},{"lineNumber":272,"author":{"gitId":"dsicol"},"content":"        case DECODE_EVENT:","lastModifiedDate":"2023-02-21"},{"lineNumber":273,"author":{"gitId":"dsicol"},"content":"            String fromDate \u003d fileStrings[DECODED_FROM_DATE];","lastModifiedDate":"2023-02-11"},{"lineNumber":274,"author":{"gitId":"dsicol"},"content":"            String toDate \u003d fileStrings[DECODED_TO_DATE];","lastModifiedDate":"2023-02-11"},{"lineNumber":275,"author":{"gitId":"dsicol"},"content":"            LocalDateTime from \u003d LocalDateTime.parse(fromDate);","lastModifiedDate":"2023-02-22"},{"lineNumber":276,"author":{"gitId":"dsicol"},"content":"            LocalDateTime to \u003d LocalDateTime.parse(toDate);","lastModifiedDate":"2023-02-22"},{"lineNumber":277,"author":{"gitId":"dsicol"},"content":"            Event event \u003d new Event(task, from, to);","lastModifiedDate":"2023-02-22"},{"lineNumber":278,"author":{"gitId":"dsicol"},"content":"            if (markStatus.equals(DECODE_MARKED)) {","lastModifiedDate":"2023-02-21"},{"lineNumber":279,"author":{"gitId":"dsicol"},"content":"                event.setDone();","lastModifiedDate":"2023-02-11"},{"lineNumber":280,"author":{"gitId":"dsicol"},"content":"            }","lastModifiedDate":"2023-02-11"},{"lineNumber":281,"author":{"gitId":"dsicol"},"content":"            return event;","lastModifiedDate":"2023-02-11"},{"lineNumber":282,"author":{"gitId":"dsicol"},"content":"        default:","lastModifiedDate":"2023-02-11"},{"lineNumber":283,"author":{"gitId":"dsicol"},"content":"            return null;","lastModifiedDate":"2023-02-11"},{"lineNumber":284,"author":{"gitId":"dsicol"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":285,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":286,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":287,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":288,"author":{"gitId":"dsicol"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"dsicol":288}},{"path":"src/main/java/inu/storage/StorageFile.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dsicol"},"content":"package inu.storage;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"dsicol"},"content":"import java.io.File;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"dsicol"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"dsicol"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"dsicol"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"dsicol"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"dsicol"},"content":"import inu.task.Task;","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"dsicol"},"content":"import inu.task.TaskList;","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"dsicol"},"content":"import inu.parser.Parser;","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"dsicol"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"dsicol"},"content":" * Represents the file used to store the task list.","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"dsicol"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"dsicol"},"content":"public class StorageFile {","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"dsicol"},"content":"    /** Default file path used */","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"dsicol"},"content":"    public static final String DEFAULT_STORAGE_FILEPATH \u003d System.getProperty(\"user.dir\") + \"/inu.txt\";","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"dsicol"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"dsicol"},"content":"     * Creates a directory and file.","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"dsicol"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"dsicol"},"content":"    private static File f \u003d new File(DEFAULT_STORAGE_FILEPATH);","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"dsicol"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"dsicol"},"content":"     * Loads the {@code TaskList} data from the storage file and update the new {@code TaskList}.","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"dsicol"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"dsicol"},"content":"    public static void loadTaskListFromFile(TaskList taskList) {","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"dsicol"},"content":"        try {","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"dsicol"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"dsicol"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"dsicol"},"content":"                 String fileString \u003d s.nextLine();","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"dsicol"},"content":"                 Task task \u003d Parser.decodeString(fileString);","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"dsicol"},"content":"                 taskList.addTask(task);","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"dsicol"},"content":"            }","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":37,"author":{"gitId":"dsicol"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-02-11"},{"lineNumber":38,"author":{"gitId":"dsicol"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-02-11"},{"lineNumber":39,"author":{"gitId":"dsicol"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":40,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":41,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":42,"author":{"gitId":"dsicol"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":43,"author":{"gitId":"dsicol"},"content":"     * Saves the {@code TaskList} data to the storage file.","lastModifiedDate":"2023-02-23"},{"lineNumber":44,"author":{"gitId":"dsicol"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"dsicol"},"content":"     * @param taskList task list data to save","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"dsicol"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":47,"author":{"gitId":"dsicol"},"content":"    public static void saveTaskListToFile(TaskList taskList) {","lastModifiedDate":"2023-02-12"},{"lineNumber":48,"author":{"gitId":"dsicol"},"content":"        try {","lastModifiedDate":"2023-02-11"},{"lineNumber":49,"author":{"gitId":"dsicol"},"content":"            FileWriter fw \u003d new FileWriter(DEFAULT_STORAGE_FILEPATH);","lastModifiedDate":"2023-02-11"},{"lineNumber":50,"author":{"gitId":"dsicol"},"content":"            for (int i \u003d 0; i \u003c taskList.getTaskListSize(); i++) {","lastModifiedDate":"2023-02-11"},{"lineNumber":51,"author":{"gitId":"dsicol"},"content":"                Task currentTask \u003d taskList.getTask(i);","lastModifiedDate":"2023-02-11"},{"lineNumber":52,"author":{"gitId":"dsicol"},"content":"                String fileEntry \u003d currentTask.encodeTaskToString() + System.lineSeparator();","lastModifiedDate":"2023-02-23"},{"lineNumber":53,"author":{"gitId":"dsicol"},"content":"                fw.write(fileEntry);","lastModifiedDate":"2023-02-11"},{"lineNumber":54,"author":{"gitId":"dsicol"},"content":"            }","lastModifiedDate":"2023-02-11"},{"lineNumber":55,"author":{"gitId":"dsicol"},"content":"            fw.close();","lastModifiedDate":"2023-02-11"},{"lineNumber":56,"author":{"gitId":"dsicol"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-11"},{"lineNumber":57,"author":{"gitId":"dsicol"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-02-11"},{"lineNumber":58,"author":{"gitId":"dsicol"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":59,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":60,"author":{"gitId":"dsicol"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"dsicol":60}},{"path":"src/main/java/inu/task/DeadLine.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dsicol"},"content":"package inu.task;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"dsicol"},"content":"import inu.commons.Util;","lastModifiedDate":"2023-02-22"},{"lineNumber":4,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":5,"author":{"gitId":"dsicol"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-22"},{"lineNumber":6,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":7,"author":{"gitId":"dsicol"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"dsicol"},"content":" * Represents a deadline.","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"dsicol"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"dsicol"},"content":"public class DeadLine extends Task {","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"dsicol"},"content":"    private LocalDateTime by;","lastModifiedDate":"2023-02-22"},{"lineNumber":13,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"dsicol"},"content":"    public DeadLine(String description, LocalDateTime by) {","lastModifiedDate":"2023-02-22"},{"lineNumber":15,"author":{"gitId":"dsicol"},"content":"        super(description);","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"dsicol"},"content":"        setBy(by);","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"dsicol"},"content":"    public LocalDateTime getBy() {","lastModifiedDate":"2023-02-22"},{"lineNumber":20,"author":{"gitId":"dsicol"},"content":"        return by;","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":23,"author":{"gitId":"dsicol"},"content":"    public void setBy(LocalDateTime by) {","lastModifiedDate":"2023-02-22"},{"lineNumber":24,"author":{"gitId":"dsicol"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"dsicol"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"dsicol"},"content":"    public String toString() {","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"dsicol"},"content":"        String byDate \u003d Util.convertDateTimeToString(by);","lastModifiedDate":"2023-02-22"},{"lineNumber":30,"author":{"gitId":"dsicol"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), byDate);","lastModifiedDate":"2023-02-22"},{"lineNumber":31,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"dsicol"},"content":"    @Override","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"dsicol"},"content":"    public String encodeTaskToString() {","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"dsicol"},"content":"        return String.format(\"D//%s//%s//%s\", getStatusIcon(), getDescription(), getBy());","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":37,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":38,"author":{"gitId":"dsicol"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"dsicol":38}},{"path":"src/main/java/inu/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dsicol"},"content":"package inu.task;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"dsicol"},"content":"import inu.commons.Util;","lastModifiedDate":"2023-02-22"},{"lineNumber":4,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":5,"author":{"gitId":"dsicol"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-22"},{"lineNumber":6,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":7,"author":{"gitId":"dsicol"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"dsicol"},"content":" * Represents an event.","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"dsicol"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"dsicol"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"dsicol"},"content":"    private LocalDateTime from;","lastModifiedDate":"2023-02-22"},{"lineNumber":13,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"dsicol"},"content":"    private LocalDateTime to;","lastModifiedDate":"2023-02-22"},{"lineNumber":15,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"dsicol"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-02-22"},{"lineNumber":17,"author":{"gitId":"dsicol"},"content":"        super(description);","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"dsicol"},"content":"        setFrom(from);","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"dsicol"},"content":"        setTo(to);","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"dsicol"},"content":"    public LocalDateTime getFrom() {","lastModifiedDate":"2023-02-22"},{"lineNumber":23,"author":{"gitId":"dsicol"},"content":"        return from;","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"dsicol"},"content":"    public LocalDateTime getTo() {","lastModifiedDate":"2023-02-22"},{"lineNumber":27,"author":{"gitId":"dsicol"},"content":"        return to;","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"dsicol"},"content":"    public void setFrom(LocalDateTime from) {","lastModifiedDate":"2023-02-22"},{"lineNumber":31,"author":{"gitId":"dsicol"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"dsicol"},"content":"    public void setTo(LocalDateTime to) {","lastModifiedDate":"2023-02-22"},{"lineNumber":35,"author":{"gitId":"dsicol"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"dsicol"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"dsicol"},"content":"    public String toString() {","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"dsicol"},"content":"        String fromDate \u003d Util.convertDateTimeToString(from);","lastModifiedDate":"2023-02-22"},{"lineNumber":41,"author":{"gitId":"dsicol"},"content":"        String toDate \u003d Util.convertDateTimeToString(to);","lastModifiedDate":"2023-02-22"},{"lineNumber":42,"author":{"gitId":"dsicol"},"content":"        return String.format(\"[E]%s (from: %s || to: %s)\", super.toString(), fromDate, toDate);","lastModifiedDate":"2023-02-22"},{"lineNumber":43,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"dsicol"},"content":"    @Override","lastModifiedDate":"2023-02-11"},{"lineNumber":46,"author":{"gitId":"dsicol"},"content":"    public String encodeTaskToString() {","lastModifiedDate":"2023-02-23"},{"lineNumber":47,"author":{"gitId":"dsicol"},"content":"        return String.format(\"E//%s//%s//%s//%s\", getStatusIcon(), getDescription(), getFrom(), getTo());","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":49,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":50,"author":{"gitId":"dsicol"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"dsicol":50}},{"path":"src/main/java/inu/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dsicol"},"content":"package inu.task;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"dsicol"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"dsicol"},"content":" * Represents a task.","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"dsicol"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"dsicol"},"content":"public abstract class Task {","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"dsicol"},"content":"    private String description;","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"dsicol"},"content":"    private boolean isDone;","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"dsicol"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"dsicol"},"content":"     * Constructor for task.","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"dsicol"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"dsicol"},"content":"     * @param description description of the task","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"dsicol"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"dsicol"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"dsicol"},"content":"        setDescription(description);","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"dsicol"},"content":"        resetDone();","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"dsicol"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"dsicol"},"content":"        return description;","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"dsicol"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"dsicol"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"dsicol"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"dsicol"},"content":"     * Set status of task to done.","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"dsicol"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"dsicol"},"content":"    public void setDone() {","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"dsicol"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"dsicol"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"dsicol"},"content":"     * Set status of task to not done.","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"dsicol"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":40,"author":{"gitId":"dsicol"},"content":"    public void resetDone() {","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"dsicol"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"dsicol"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"dsicol"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2023-02-22"},{"lineNumber":46,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"dsicol"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"dsicol"},"content":"    public String toString() {","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"dsicol"},"content":"        return String.format(\"%s %s\", getStatusIcon(), getDescription());","lastModifiedDate":"2023-02-22"},{"lineNumber":51,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"dsicol"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":54,"author":{"gitId":"dsicol"},"content":"     * Converts task to string to be saved in storage file.","lastModifiedDate":"2023-02-23"},{"lineNumber":55,"author":{"gitId":"dsicol"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":56,"author":{"gitId":"dsicol"},"content":"     * @return string to save in file.","lastModifiedDate":"2023-02-23"},{"lineNumber":57,"author":{"gitId":"dsicol"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":58,"author":{"gitId":"dsicol"},"content":"    public abstract String encodeTaskToString();","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":60,"author":{"gitId":"dsicol"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"dsicol":60}},{"path":"src/main/java/inu/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dsicol"},"content":"package inu.task;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"dsicol"},"content":"import inu.commons.Messages;","lastModifiedDate":"2023-02-22"},{"lineNumber":4,"author":{"gitId":"dsicol"},"content":"import inu.exceptionhandling.EmptyStringException;","lastModifiedDate":"2023-02-22"},{"lineNumber":5,"author":{"gitId":"dsicol"},"content":"import inu.exceptionhandling.ExceptionManager;","lastModifiedDate":"2023-02-22"},{"lineNumber":6,"author":{"gitId":"dsicol"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-22"},{"lineNumber":7,"author":{"gitId":"dsicol"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"dsicol"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"dsicol"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"dsicol"},"content":" * Represents the task list and methods to manage the task list.","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"dsicol"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"dsicol"},"content":"public class TaskList {","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"dsicol"},"content":"    private final ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-02-21"},{"lineNumber":16,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":17,"author":{"gitId":"dsicol"},"content":"    private final String EMPTY_STRING \u003d \"\";","lastModifiedDate":"2023-02-21"},{"lineNumber":18,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"dsicol"},"content":"    private final String STRING_PERIOD \u003d \". \";","lastModifiedDate":"2023-02-22"},{"lineNumber":20,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":21,"author":{"gitId":"dsicol"},"content":"    private final int INDEX_OFFSET \u003d 1;","lastModifiedDate":"2023-02-10"},{"lineNumber":22,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"dsicol"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"dsicol"},"content":"     * Constructor for a new task list.","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"dsicol"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"dsicol"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"dsicol"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"dsicol"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"dsicol"},"content":"     * Displays all tasks in a given task list in the order they were added.","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"dsicol"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"dsicol"},"content":"     * @param taskList the given task list to display as a string.","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"dsicol"},"content":"     * @return the task list as a string","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"dsicol"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"dsicol"},"content":"    public String printList(TaskList taskList) {","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"dsicol"},"content":"        String printTaskListResult \u003d EMPTY_STRING;","lastModifiedDate":"2023-02-21"},{"lineNumber":38,"author":{"gitId":"dsicol"},"content":"        for (int taskIndex \u003d 0; taskIndex \u003c taskList.getTaskListSize(); taskIndex++) {","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"dsicol"},"content":"            int taskNumber \u003d taskIndex + INDEX_OFFSET;","lastModifiedDate":"2023-02-10"},{"lineNumber":40,"author":{"gitId":"dsicol"},"content":"            String currentTaskDisplay \u003d taskList.getTask(taskIndex).toString();","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"dsicol"},"content":"            printTaskListResult +\u003d (\"\\n\" + taskNumber + STRING_PERIOD + currentTaskDisplay);","lastModifiedDate":"2023-02-22"},{"lineNumber":42,"author":{"gitId":"dsicol"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"dsicol"},"content":"        try {","lastModifiedDate":"2023-02-23"},{"lineNumber":44,"author":{"gitId":"dsicol"},"content":"            ExceptionManager.checkEmptyString(printTaskListResult);","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"dsicol"},"content":"            return printTaskListResult;","lastModifiedDate":"2023-02-21"},{"lineNumber":46,"author":{"gitId":"dsicol"},"content":"        } catch (EmptyStringException e) {","lastModifiedDate":"2023-02-23"},{"lineNumber":47,"author":{"gitId":"dsicol"},"content":"            return Messages.MESSAGE_PROMPT_EMPTY_TASK_LIST;","lastModifiedDate":"2023-02-23"},{"lineNumber":48,"author":{"gitId":"dsicol"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":49,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"dsicol"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":52,"author":{"gitId":"dsicol"},"content":"     * Creates a new task list containing tasks that occur on a specified date.","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"dsicol"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":54,"author":{"gitId":"dsicol"},"content":"     * @param date the date to query.","lastModifiedDate":"2023-02-23"},{"lineNumber":55,"author":{"gitId":"dsicol"},"content":"     * @return a new task list with the filtered tasks.","lastModifiedDate":"2023-02-23"},{"lineNumber":56,"author":{"gitId":"dsicol"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":57,"author":{"gitId":"dsicol"},"content":"    public TaskList filterDate(LocalDate date) {","lastModifiedDate":"2023-02-23"},{"lineNumber":58,"author":{"gitId":"dsicol"},"content":"        TaskList dateTaskList \u003d new TaskList();","lastModifiedDate":"2023-02-23"},{"lineNumber":59,"author":{"gitId":"dsicol"},"content":"        for (Task currentTask : taskList) {","lastModifiedDate":"2023-02-23"},{"lineNumber":60,"author":{"gitId":"dsicol"},"content":"            if (currentTask instanceof DeadLine) {","lastModifiedDate":"2023-02-22"},{"lineNumber":61,"author":{"gitId":"dsicol"},"content":"                LocalDate byDate \u003d ((DeadLine) currentTask).getBy().toLocalDate();","lastModifiedDate":"2023-02-22"},{"lineNumber":62,"author":{"gitId":"dsicol"},"content":"                if (byDate.equals(date)) {","lastModifiedDate":"2023-02-22"},{"lineNumber":63,"author":{"gitId":"dsicol"},"content":"                    dateTaskList.addTask(currentTask);","lastModifiedDate":"2023-02-23"},{"lineNumber":64,"author":{"gitId":"dsicol"},"content":"                }","lastModifiedDate":"2023-02-22"},{"lineNumber":65,"author":{"gitId":"dsicol"},"content":"            } else if (currentTask instanceof Event) {","lastModifiedDate":"2023-02-22"},{"lineNumber":66,"author":{"gitId":"dsicol"},"content":"                LocalDate fromDate \u003d ((Event) currentTask).getFrom().toLocalDate();","lastModifiedDate":"2023-02-22"},{"lineNumber":67,"author":{"gitId":"dsicol"},"content":"                LocalDate toDate \u003d ((Event) currentTask).getTo().toLocalDate();","lastModifiedDate":"2023-02-22"},{"lineNumber":68,"author":{"gitId":"dsicol"},"content":"                if (fromDate.equals(date) || (date.isAfter(fromDate) \u0026\u0026 date.isBefore(toDate)) || toDate.equals(date)) {","lastModifiedDate":"2023-02-23"},{"lineNumber":69,"author":{"gitId":"dsicol"},"content":"                    dateTaskList.addTask(currentTask);","lastModifiedDate":"2023-02-23"},{"lineNumber":70,"author":{"gitId":"dsicol"},"content":"                }","lastModifiedDate":"2023-02-22"},{"lineNumber":71,"author":{"gitId":"dsicol"},"content":"            }","lastModifiedDate":"2023-02-22"},{"lineNumber":72,"author":{"gitId":"dsicol"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":73,"author":{"gitId":"dsicol"},"content":"        return dateTaskList;","lastModifiedDate":"2023-02-23"},{"lineNumber":74,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":75,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":76,"author":{"gitId":"dsicol"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":77,"author":{"gitId":"dsicol"},"content":"     * Creates a new task list containing tasks that contain a specific key word.","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"dsicol"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":79,"author":{"gitId":"dsicol"},"content":"     * @param keyWord the key word to query.","lastModifiedDate":"2023-02-23"},{"lineNumber":80,"author":{"gitId":"dsicol"},"content":"     * @return a new task list with the filtered tasks.","lastModifiedDate":"2023-02-23"},{"lineNumber":81,"author":{"gitId":"dsicol"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":82,"author":{"gitId":"dsicol"},"content":"    public TaskList filterKeyWord(String keyWord) {","lastModifiedDate":"2023-02-23"},{"lineNumber":83,"author":{"gitId":"dsicol"},"content":"        // Use of Streams","lastModifiedDate":"2023-02-23"},{"lineNumber":84,"author":{"gitId":"dsicol"},"content":"        ArrayList\u003cTask\u003e streamKeyWordTaskList \u003d taskList","lastModifiedDate":"2023-02-23"},{"lineNumber":85,"author":{"gitId":"dsicol"},"content":"                .stream()","lastModifiedDate":"2023-02-23"},{"lineNumber":86,"author":{"gitId":"dsicol"},"content":"                .filter(c -\u003e c.getDescription().contains(keyWord))","lastModifiedDate":"2023-02-23"},{"lineNumber":87,"author":{"gitId":"dsicol"},"content":"                .collect(Collectors.toCollection(ArrayList::new));","lastModifiedDate":"2023-02-23"},{"lineNumber":88,"author":{"gitId":"dsicol"},"content":"        TaskList keyWordTaskList \u003d new TaskList();","lastModifiedDate":"2023-02-23"},{"lineNumber":89,"author":{"gitId":"dsicol"},"content":"        for (Task t : streamKeyWordTaskList) {","lastModifiedDate":"2023-02-23"},{"lineNumber":90,"author":{"gitId":"dsicol"},"content":"            keyWordTaskList.addTask(t);","lastModifiedDate":"2023-02-23"},{"lineNumber":91,"author":{"gitId":"dsicol"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":92,"author":{"gitId":"dsicol"},"content":"        return keyWordTaskList;","lastModifiedDate":"2023-02-23"},{"lineNumber":93,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":94,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":95,"author":{"gitId":"dsicol"},"content":"    public void addTask(Task t) {","lastModifiedDate":"2023-01-30"},{"lineNumber":96,"author":{"gitId":"dsicol"},"content":"        taskList.add(t);","lastModifiedDate":"2023-02-10"},{"lineNumber":97,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":98,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":99,"author":{"gitId":"dsicol"},"content":"    public void markTask(int index) {","lastModifiedDate":"2023-02-21"},{"lineNumber":100,"author":{"gitId":"dsicol"},"content":"        taskList.get(index).setDone();","lastModifiedDate":"2023-02-21"},{"lineNumber":101,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":102,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":103,"author":{"gitId":"dsicol"},"content":"    public void unmarkTask(int index) {","lastModifiedDate":"2023-03-03"},{"lineNumber":104,"author":{"gitId":"dsicol"},"content":"        taskList.get(index).resetDone();","lastModifiedDate":"2023-02-21"},{"lineNumber":105,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":106,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":107,"author":{"gitId":"dsicol"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2023-02-21"},{"lineNumber":108,"author":{"gitId":"dsicol"},"content":"        taskList.remove(index);","lastModifiedDate":"2023-02-21"},{"lineNumber":109,"author":{"gitId":"dsicol"},"content":"        taskList.trimToSize();","lastModifiedDate":"2023-02-10"},{"lineNumber":110,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":111,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":112,"author":{"gitId":"dsicol"},"content":"    public int getTaskListSize() {","lastModifiedDate":"2023-02-10"},{"lineNumber":113,"author":{"gitId":"dsicol"},"content":"        return taskList.size();","lastModifiedDate":"2023-02-10"},{"lineNumber":114,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":115,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":116,"author":{"gitId":"dsicol"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-01-30"},{"lineNumber":117,"author":{"gitId":"dsicol"},"content":"        return taskList.get(index);","lastModifiedDate":"2023-02-10"},{"lineNumber":118,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":119,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":120,"author":{"gitId":"dsicol"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":121,"author":{"gitId":"dsicol"},"content":"     * Gets the most recent task added to the task list","lastModifiedDate":"2023-02-23"},{"lineNumber":122,"author":{"gitId":"dsicol"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":123,"author":{"gitId":"dsicol"},"content":"     * @return the most recent task","lastModifiedDate":"2023-02-23"},{"lineNumber":124,"author":{"gitId":"dsicol"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":125,"author":{"gitId":"dsicol"},"content":"    public Task getLastTask() {","lastModifiedDate":"2023-01-30"},{"lineNumber":126,"author":{"gitId":"dsicol"},"content":"        int lastIndex \u003d getTaskListSize() - INDEX_OFFSET;","lastModifiedDate":"2023-02-10"},{"lineNumber":127,"author":{"gitId":"dsicol"},"content":"        return taskList.get(lastIndex);","lastModifiedDate":"2023-02-10"},{"lineNumber":128,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":129,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":130,"author":{"gitId":"dsicol"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"dsicol":130}},{"path":"src/main/java/inu/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dsicol"},"content":"package inu.task;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"dsicol"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"dsicol"},"content":" * Represents a to-do.","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"dsicol"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"dsicol"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"dsicol"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"dsicol"},"content":"        super(description);","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"dsicol"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"dsicol"},"content":"    public String toString() {","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"dsicol"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"dsicol"},"content":"    @Override","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"dsicol"},"content":"    public String encodeTaskToString() {","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"dsicol"},"content":"        return String.format(\"T//%s//%s\", getStatusIcon(), getDescription());","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"dsicol"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"dsicol"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"dsicol"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"dsicol":22}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"dsicol"},"content":"list","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"dsicol"},"content":"todo Tutorials","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"dsicol"},"content":"deadline","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"dsicol"},"content":"deadline Lab","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"dsicol"},"content":"deadline Lab /","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"dsicol"},"content":"deadline Lab /Tuesday morning","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"dsicol"},"content":"event Career Fair","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"dsicol"},"content":"event Career Fair /","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"dsicol"},"content":"event Career Fair /18 Jan 11am /18 Jan 5pm","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"dsicol"},"content":"list","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"dsicol"},"content":"mark 99","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"dsicol"},"content":"mark 3","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"dsicol"},"content":"list","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"dsicol"},"content":"unmark 99","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"dsicol"},"content":"unmark 3","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"dsicol"},"content":"list","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"dsicol":16}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"dsicol"},"content":"javac -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\inu\\parser\\*.java","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"dsicol"},"content":"java -classpath ..\\bin Inu \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"dsicol":2,"-":19}}]
