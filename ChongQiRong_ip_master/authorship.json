[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ChongQiRong"},"content":"# Duke User Guide","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"ChongQiRong"},"content":"## What is Duke?","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"ChongQiRong"},"content":"Duke is a command-line interface(CLI) application. Users can use Duke to keep track of their various types of tasks such as *todo*, *deadline* and *event* tasks.","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"ChongQiRong"},"content":"## Quick Start","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"ChongQiRong"},"content":"1. Ensure you have Java 11 or above installed in your Computer.","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"ChongQiRong"},"content":"2. Download the latest *duke.jar* from [here](https://github.com/ChongQiRong/ip/releases).","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"ChongQiRong"},"content":"3. Move *duke.jar* to your desired folder.","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"ChongQiRong"},"content":"4. Launch your terminal or command prompt.","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"ChongQiRong"},"content":"5. Navigate to the folder containing the *duke.jar* file. ","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"ChongQiRong"},"content":"6. Use the `java -jar duke.jar` command to start the application.","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"ChongQiRong"},"content":"#### 1. Add task","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"ChongQiRong"},"content":"Adds a task of *todo*, *deadline* or *event* to the list.","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"ChongQiRong"},"content":"#### 2. List tasks","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"ChongQiRong"},"content":"List out all the tasks in the list.","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"ChongQiRong"},"content":"#### 3. Mark/unmark task","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"ChongQiRong"},"content":"Mark or unmark a particular task as completed or uncompleted respectively.","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"ChongQiRong"},"content":"#### 4. Delete task","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"ChongQiRong"},"content":"Remove a task from the list.","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"ChongQiRong"},"content":"#### 5. Find task","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"ChongQiRong"},"content":"Find tasks in the list containing particular words.","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"ChongQiRong"},"content":"#### 6. Save tasks","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"ChongQiRong"},"content":"Automatically saves the list into a *duke.txt* file.","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"ChongQiRong"},"content":"#### 7. Load tasks","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"ChongQiRong"},"content":"Loads the list from a *duke.txt* file. If it does not exist, a new file will be created.","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"ChongQiRong"},"content":"## Commands","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"ChongQiRong"},"content":"### `todo` - Adds a *todo* task to the list","lastModifiedDate":"2023-03-02"},{"lineNumber":33,"author":{"gitId":"ChongQiRong"},"content":"Adds a task of type *todo* to the list. Required to provide **description**.","lastModifiedDate":"2023-03-02"},{"lineNumber":34,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":35,"author":{"gitId":"ChongQiRong"},"content":"Format: `todo \u003cdescription\u003e`","lastModifiedDate":"2023-03-02"},{"lineNumber":36,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":37,"author":{"gitId":"ChongQiRong"},"content":"Example of usage:","lastModifiedDate":"2023-03-02"},{"lineNumber":38,"author":{"gitId":"ChongQiRong"},"content":"`todo buy bak kwa`","lastModifiedDate":"2023-03-02"},{"lineNumber":39,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":40,"author":{"gitId":"ChongQiRong"},"content":"Sample Output:","lastModifiedDate":"2023-03-02"},{"lineNumber":41,"author":{"gitId":"ChongQiRong"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":42,"author":{"gitId":"ChongQiRong"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-02"},{"lineNumber":43,"author":{"gitId":"ChongQiRong"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-03-02"},{"lineNumber":44,"author":{"gitId":"ChongQiRong"},"content":"[T][] buy bak kwa","lastModifiedDate":"2023-03-02"},{"lineNumber":45,"author":{"gitId":"ChongQiRong"},"content":"Now you have 1 task in the list","lastModifiedDate":"2023-03-02"},{"lineNumber":46,"author":{"gitId":"ChongQiRong"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-02"},{"lineNumber":47,"author":{"gitId":"ChongQiRong"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":48,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":49,"author":{"gitId":"ChongQiRong"},"content":"### `deadline` - Adds a *deadline* task to the list","lastModifiedDate":"2023-03-02"},{"lineNumber":50,"author":{"gitId":"ChongQiRong"},"content":"Adds a task of type *deadline* to the list. Required to provide **description** and **deadline**.","lastModifiedDate":"2023-03-02"},{"lineNumber":51,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":52,"author":{"gitId":"ChongQiRong"},"content":"Format: `deadline \u003cdescription\u003e /by \u003cdue date\u003e`","lastModifiedDate":"2023-03-02"},{"lineNumber":53,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":54,"author":{"gitId":"ChongQiRong"},"content":"Example of usage:","lastModifiedDate":"2023-03-02"},{"lineNumber":55,"author":{"gitId":"ChongQiRong"},"content":"`deadline put bak kwa in fridge /by 8pm`","lastModifiedDate":"2023-03-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":57,"author":{"gitId":"ChongQiRong"},"content":"Sample Output:","lastModifiedDate":"2023-03-02"},{"lineNumber":58,"author":{"gitId":"ChongQiRong"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":59,"author":{"gitId":"ChongQiRong"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-02"},{"lineNumber":60,"author":{"gitId":"ChongQiRong"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-03-02"},{"lineNumber":61,"author":{"gitId":"ChongQiRong"},"content":"[D][] put bak kwa in fridge (by: 8pm)","lastModifiedDate":"2023-03-02"},{"lineNumber":62,"author":{"gitId":"ChongQiRong"},"content":"Now you have 2 tasks in the list","lastModifiedDate":"2023-03-02"},{"lineNumber":63,"author":{"gitId":"ChongQiRong"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-02"},{"lineNumber":64,"author":{"gitId":"ChongQiRong"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":66,"author":{"gitId":"ChongQiRong"},"content":"### `event` - Adds an *event* task to the list","lastModifiedDate":"2023-03-02"},{"lineNumber":67,"author":{"gitId":"ChongQiRong"},"content":"Adds a task of type *event* to the list. Required to provide **description**, **start time** and **end time**.","lastModifiedDate":"2023-03-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":69,"author":{"gitId":"ChongQiRong"},"content":"Format: `event \u003cdescription\u003e /from \u003cstart time\u003e /to \u003cend time\u003e`","lastModifiedDate":"2023-03-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":71,"author":{"gitId":"ChongQiRong"},"content":"Example of usage:","lastModifiedDate":"2023-03-02"},{"lineNumber":72,"author":{"gitId":"ChongQiRong"},"content":"`event project meeting /from 7am /to 10am`","lastModifiedDate":"2023-03-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":74,"author":{"gitId":"ChongQiRong"},"content":"Sample Output:","lastModifiedDate":"2023-03-02"},{"lineNumber":75,"author":{"gitId":"ChongQiRong"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":76,"author":{"gitId":"ChongQiRong"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-02"},{"lineNumber":77,"author":{"gitId":"ChongQiRong"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-03-02"},{"lineNumber":78,"author":{"gitId":"ChongQiRong"},"content":"[E][] project meeting (from: 7am to: 10am)","lastModifiedDate":"2023-03-02"},{"lineNumber":79,"author":{"gitId":"ChongQiRong"},"content":"Now you have 3 tasks in the list","lastModifiedDate":"2023-03-02"},{"lineNumber":80,"author":{"gitId":"ChongQiRong"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-02"},{"lineNumber":81,"author":{"gitId":"ChongQiRong"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":83,"author":{"gitId":"ChongQiRong"},"content":"### `list` - List out all tasks in the list","lastModifiedDate":"2023-03-02"},{"lineNumber":84,"author":{"gitId":"ChongQiRong"},"content":"Lists all task from the tasklists. Indicates type of task, completion status and description","lastModifiedDate":"2023-03-02"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":86,"author":{"gitId":"ChongQiRong"},"content":"Format: `list`","lastModifiedDate":"2023-03-02"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":89,"author":{"gitId":"ChongQiRong"},"content":"`list`","lastModifiedDate":"2023-03-02"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":91,"author":{"gitId":"ChongQiRong"},"content":"Sample Output:","lastModifiedDate":"2023-03-02"},{"lineNumber":92,"author":{"gitId":"ChongQiRong"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":93,"author":{"gitId":"ChongQiRong"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-02"},{"lineNumber":94,"author":{"gitId":"ChongQiRong"},"content":"1.[T][] buy bak kwa","lastModifiedDate":"2023-03-02"},{"lineNumber":95,"author":{"gitId":"ChongQiRong"},"content":"2.[D][] put bak kwa in fridge (by: 8pm)","lastModifiedDate":"2023-03-02"},{"lineNumber":96,"author":{"gitId":"ChongQiRong"},"content":"3.[E][] project meeting (from: 7am to: 10am)","lastModifiedDate":"2023-03-02"},{"lineNumber":97,"author":{"gitId":"ChongQiRong"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-02"},{"lineNumber":98,"author":{"gitId":"ChongQiRong"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":100,"author":{"gitId":"ChongQiRong"},"content":"### `mark` - Mark a task as completed","lastModifiedDate":"2023-03-02"},{"lineNumber":101,"author":{"gitId":"ChongQiRong"},"content":"Marks a task as completed and will be marked with a cross [X]. Required to provide **index**.","lastModifiedDate":"2023-03-02"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":103,"author":{"gitId":"ChongQiRong"},"content":"Format: `mark \u003cindex\u003e`","lastModifiedDate":"2023-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":105,"author":{"gitId":"ChongQiRong"},"content":"Example of usage:","lastModifiedDate":"2023-03-02"},{"lineNumber":106,"author":{"gitId":"ChongQiRong"},"content":"`mark 2`","lastModifiedDate":"2023-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":108,"author":{"gitId":"ChongQiRong"},"content":"Sample Output:","lastModifiedDate":"2023-03-02"},{"lineNumber":109,"author":{"gitId":"ChongQiRong"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":110,"author":{"gitId":"ChongQiRong"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-02"},{"lineNumber":111,"author":{"gitId":"ChongQiRong"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2023-03-02"},{"lineNumber":112,"author":{"gitId":"ChongQiRong"},"content":"[D][X] put bak kwa in fridge (by: 8pm)","lastModifiedDate":"2023-03-02"},{"lineNumber":113,"author":{"gitId":"ChongQiRong"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-02"},{"lineNumber":114,"author":{"gitId":"ChongQiRong"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":116,"author":{"gitId":"ChongQiRong"},"content":"### `unmark` - Unmark a task as not completed","lastModifiedDate":"2023-03-02"},{"lineNumber":117,"author":{"gitId":"ChongQiRong"},"content":"Unmarks a task as not completed and will be marked with []. Required to provide **index**.","lastModifiedDate":"2023-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":119,"author":{"gitId":"ChongQiRong"},"content":"Format: `mark \u003cindex\u003e`","lastModifiedDate":"2023-03-02"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":121,"author":{"gitId":"ChongQiRong"},"content":"Example of usage:","lastModifiedDate":"2023-03-02"},{"lineNumber":122,"author":{"gitId":"ChongQiRong"},"content":"`mark 2`","lastModifiedDate":"2023-03-02"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":124,"author":{"gitId":"ChongQiRong"},"content":"Sample Output:","lastModifiedDate":"2023-03-02"},{"lineNumber":125,"author":{"gitId":"ChongQiRong"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":126,"author":{"gitId":"ChongQiRong"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-02"},{"lineNumber":127,"author":{"gitId":"ChongQiRong"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2023-03-02"},{"lineNumber":128,"author":{"gitId":"ChongQiRong"},"content":"[D][] put bak kwa in fridge (by: 8pm)","lastModifiedDate":"2023-03-02"},{"lineNumber":129,"author":{"gitId":"ChongQiRong"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-02"},{"lineNumber":130,"author":{"gitId":"ChongQiRong"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":131,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":132,"author":{"gitId":"ChongQiRong"},"content":"### `delete` - Deletes a task to the list","lastModifiedDate":"2023-03-02"},{"lineNumber":133,"author":{"gitId":"ChongQiRong"},"content":"Deletes a task from the list. Required to provide **index**.","lastModifiedDate":"2023-03-02"},{"lineNumber":134,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":135,"author":{"gitId":"ChongQiRong"},"content":"Format: `delete \u003cindex\u003e`","lastModifiedDate":"2023-03-02"},{"lineNumber":136,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":137,"author":{"gitId":"ChongQiRong"},"content":"Example of usage:","lastModifiedDate":"2023-03-02"},{"lineNumber":138,"author":{"gitId":"ChongQiRong"},"content":"`delete 1`","lastModifiedDate":"2023-03-02"},{"lineNumber":139,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":140,"author":{"gitId":"ChongQiRong"},"content":"Sample Output:","lastModifiedDate":"2023-03-02"},{"lineNumber":141,"author":{"gitId":"ChongQiRong"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":142,"author":{"gitId":"ChongQiRong"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-02"},{"lineNumber":143,"author":{"gitId":"ChongQiRong"},"content":"Got it. I\u0027ve removed this task:","lastModifiedDate":"2023-03-02"},{"lineNumber":144,"author":{"gitId":"ChongQiRong"},"content":"[T][] buy bak kwa","lastModifiedDate":"2023-03-02"},{"lineNumber":145,"author":{"gitId":"ChongQiRong"},"content":"Now you have 2 tasks in the list","lastModifiedDate":"2023-03-02"},{"lineNumber":146,"author":{"gitId":"ChongQiRong"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-02"},{"lineNumber":147,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":148,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":149,"author":{"gitId":"ChongQiRong"},"content":"### `find` - find tasks matching description provided","lastModifiedDate":"2023-03-02"},{"lineNumber":150,"author":{"gitId":"ChongQiRong"},"content":"Prints out a list that matches description provided. Required to provide **description**.","lastModifiedDate":"2023-03-02"},{"lineNumber":151,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":152,"author":{"gitId":"ChongQiRong"},"content":"Format: `find \u003cdescription\u003e`","lastModifiedDate":"2023-03-02"},{"lineNumber":153,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":154,"author":{"gitId":"ChongQiRong"},"content":"Example of usage:","lastModifiedDate":"2023-03-02"},{"lineNumber":155,"author":{"gitId":"ChongQiRong"},"content":"`find meeting`","lastModifiedDate":"2023-03-02"},{"lineNumber":156,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":157,"author":{"gitId":"ChongQiRong"},"content":"Sample Output:","lastModifiedDate":"2023-03-02"},{"lineNumber":158,"author":{"gitId":"ChongQiRong"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":159,"author":{"gitId":"ChongQiRong"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-02"},{"lineNumber":160,"author":{"gitId":"ChongQiRong"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2023-03-02"},{"lineNumber":161,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":162,"author":{"gitId":"ChongQiRong"},"content":"2.[E][] project meeting (from: 7am to: 10am)","lastModifiedDate":"2023-03-02"},{"lineNumber":163,"author":{"gitId":"ChongQiRong"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-02"},{"lineNumber":164,"author":{"gitId":"ChongQiRong"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":165,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":166,"author":{"gitId":"ChongQiRong"},"content":"### `bye` - Exits the application","lastModifiedDate":"2023-03-02"},{"lineNumber":167,"author":{"gitId":"ChongQiRong"},"content":"Format: `bye`","lastModifiedDate":"2023-03-02"},{"lineNumber":168,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":169,"author":{"gitId":"ChongQiRong"},"content":"Example of usage:","lastModifiedDate":"2023-03-02"},{"lineNumber":170,"author":{"gitId":"ChongQiRong"},"content":"`bye`","lastModifiedDate":"2023-03-02"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":172,"author":{"gitId":"ChongQiRong"},"content":"Sample Output:","lastModifiedDate":"2023-03-02"},{"lineNumber":173,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":174,"author":{"gitId":"ChongQiRong"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-02"},{"lineNumber":175,"author":{"gitId":"ChongQiRong"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2023-03-02"},{"lineNumber":176,"author":{"gitId":"ChongQiRong"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-02"},{"lineNumber":177,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"ChongQiRong":153,"-":24}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChongQiRong"},"content":"import command.Command;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"ChongQiRong"},"content":"import components.Parser;","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"ChongQiRong"},"content":"import components.Storage;","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"ChongQiRong"},"content":"import components.TaskList;","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"ChongQiRong"},"content":"import components.UI;","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"ChongQiRong"},"content":"import exception.DukeException;","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"ChongQiRong"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"ChongQiRong"},"content":"    private Storage storage;","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"ChongQiRong"},"content":"    private final UI ui;","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"ChongQiRong"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"ChongQiRong"},"content":"    private Duke(String filePath) {","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"ChongQiRong"},"content":"        ui \u003d new UI();","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"ChongQiRong"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"ChongQiRong"},"content":"        try {","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"ChongQiRong"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"ChongQiRong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"ChongQiRong"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"ChongQiRong"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"ChongQiRong"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"ChongQiRong"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"ChongQiRong"},"content":"    private void run() {","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"ChongQiRong"},"content":"        ui.greet();","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"ChongQiRong"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"ChongQiRong"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"ChongQiRong"},"content":"        while (!isExit) {","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"ChongQiRong"},"content":"            try {","lastModifiedDate":"2023-02-10"},{"lineNumber":32,"author":{"gitId":"ChongQiRong"},"content":"                String fullCommand \u003d ui.readCommand(in);","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"ChongQiRong"},"content":"                ui.printHorizontalLine();","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"ChongQiRong"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"ChongQiRong"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"ChongQiRong"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"ChongQiRong"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"ChongQiRong"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"ChongQiRong"},"content":"            } finally {","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"ChongQiRong"},"content":"                ui.printHorizontalLine();","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"ChongQiRong"},"content":"            }","lastModifiedDate":"2023-02-21"},{"lineNumber":42,"author":{"gitId":"ChongQiRong"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":43,"author":{"gitId":"ChongQiRong"},"content":"        ui.exit();","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"ChongQiRong"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":45,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":47,"author":{"gitId":"ChongQiRong"},"content":"        new Duke(\"duke.txt\").run();","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"ChongQiRong":45,"-":4}},{"path":"src/main/java/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChongQiRong"},"content":"package command;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"ChongQiRong"},"content":"import task.Deadline;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"ChongQiRong"},"content":"import components.TaskList;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"ChongQiRong"},"content":"import components.UI;","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"ChongQiRong"},"content":"import components.Storage;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"ChongQiRong"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"ChongQiRong"},"content":"    public AddDeadlineCommand(String[] commandFields) {","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"ChongQiRong"},"content":"        super(commandFields);","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"ChongQiRong"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"ChongQiRong"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"ChongQiRong"},"content":"     * Adds and writes task of \u003ccode\u003eDeadline\u003c/code\u003e to the ArrayList.","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"ChongQiRong"},"content":"     *","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"ChongQiRong"},"content":"     * @param tasks   ArrayList of tasks.","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"ChongQiRong"},"content":"     * @param ui      Deals with interactions with the user.","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"ChongQiRong"},"content":"     * @param storage Deals with saving and loading tasks in the file.","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"ChongQiRong"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"ChongQiRong"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"ChongQiRong"},"content":"        tasks.tasks.add(new Deadline(commandFields[0], commandFields[1]));","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"ChongQiRong"},"content":"        ui.taskAdded(tasks.tasks);","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"ChongQiRong"},"content":"        storage.writeToFile(tasks.tasks, storage.filePath);","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"ChongQiRong"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"ChongQiRong"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"ChongQiRong"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"ChongQiRong"},"content":"        return false;","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"ChongQiRong"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"ChongQiRong"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"ChongQiRong":30}},{"path":"src/main/java/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChongQiRong"},"content":"package command;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"ChongQiRong"},"content":"import task.Event;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"ChongQiRong"},"content":"import components.TaskList;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"ChongQiRong"},"content":"import components.UI;","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"ChongQiRong"},"content":"import components.Storage;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"ChongQiRong"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"ChongQiRong"},"content":"    public AddEventCommand(String[] commandFields) {","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"ChongQiRong"},"content":"        super(commandFields);","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"ChongQiRong"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"ChongQiRong"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"ChongQiRong"},"content":"     * Adds and writes task of \u003ccode\u003eEvent\u003c/code\u003e to the ArrayList.","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"ChongQiRong"},"content":"     *","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"ChongQiRong"},"content":"     * @param tasks   ArrayList of tasks.","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"ChongQiRong"},"content":"     * @param ui      Deals with interactions with the user.","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"ChongQiRong"},"content":"     * @param storage Deals with saving and loading tasks in the file.","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"ChongQiRong"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"ChongQiRong"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"ChongQiRong"},"content":"        tasks.tasks.add(new Event(commandFields[0], commandFields[1], commandFields[2]));","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"ChongQiRong"},"content":"        ui.taskAdded(tasks.tasks);","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"ChongQiRong"},"content":"        storage.writeToFile(tasks.tasks, storage.filePath);","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"ChongQiRong"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"ChongQiRong"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"ChongQiRong"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"ChongQiRong"},"content":"        return false;","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"ChongQiRong"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"ChongQiRong"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"ChongQiRong":30}},{"path":"src/main/java/command/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChongQiRong"},"content":"package command;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"ChongQiRong"},"content":"import task.Todo;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"ChongQiRong"},"content":"import components.TaskList;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"ChongQiRong"},"content":"import components.UI;","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"ChongQiRong"},"content":"import components.Storage;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"ChongQiRong"},"content":"public class AddTodoCommand extends Command {","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"ChongQiRong"},"content":"    public AddTodoCommand(String[] commandFields) {","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"ChongQiRong"},"content":"        super(commandFields);","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"ChongQiRong"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"ChongQiRong"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"ChongQiRong"},"content":"     * Adds and writes task of \u003ccode\u003eTodo\u003c/code\u003e to the ArrayList.","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"ChongQiRong"},"content":"     *","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"ChongQiRong"},"content":"     * @param tasks   ArrayList of tasks.","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"ChongQiRong"},"content":"     * @param ui      Deals with interactions with the user.","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"ChongQiRong"},"content":"     * @param storage Deals with saving and loading tasks in the file.","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"ChongQiRong"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"ChongQiRong"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"ChongQiRong"},"content":"        tasks.tasks.add(new Todo(commandFields[0]));","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"ChongQiRong"},"content":"        ui.taskAdded(tasks.tasks);","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"ChongQiRong"},"content":"        storage.writeToFile(tasks.tasks, storage.filePath);","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"ChongQiRong"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"ChongQiRong"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"ChongQiRong"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"ChongQiRong"},"content":"        return false;","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"ChongQiRong"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"ChongQiRong"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"ChongQiRong":31}},{"path":"src/main/java/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChongQiRong"},"content":"package command;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"ChongQiRong"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"ChongQiRong"},"content":"    public ByeCommand() {","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"ChongQiRong"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"ChongQiRong"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"ChongQiRong"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"ChongQiRong"},"content":"        return true;","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"ChongQiRong"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"ChongQiRong"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"ChongQiRong":11}},{"path":"src/main/java/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChongQiRong"},"content":"package command;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"ChongQiRong"},"content":"import exception.DukeException;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"ChongQiRong"},"content":"import components.TaskList;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"ChongQiRong"},"content":"import components.UI;","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"ChongQiRong"},"content":"import components.Storage;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"ChongQiRong"},"content":"public abstract class Command {","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"ChongQiRong"},"content":"    String[] commandFields;","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"ChongQiRong"},"content":"    public Command(String[] commandFields) {","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"ChongQiRong"},"content":"        this.commandFields \u003d commandFields;","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"ChongQiRong"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"ChongQiRong"},"content":"    public Command() {","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"ChongQiRong"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"ChongQiRong"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"ChongQiRong"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"ChongQiRong"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"ChongQiRong"},"content":"        return false;","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"ChongQiRong"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"ChongQiRong"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"ChongQiRong":24}},{"path":"src/main/java/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChongQiRong"},"content":"package command;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"ChongQiRong"},"content":"import exception.DukeException;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"ChongQiRong"},"content":"import exception.ErrorMessage;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"ChongQiRong"},"content":"import task.Task;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"ChongQiRong"},"content":"import components.TaskList;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"ChongQiRong"},"content":"import components.UI;","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"ChongQiRong"},"content":"import components.Storage;","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"ChongQiRong"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"ChongQiRong"},"content":"    public DeleteCommand(String[] commandFields) {","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"ChongQiRong"},"content":"        super(commandFields);","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"ChongQiRong"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"ChongQiRong"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"ChongQiRong"},"content":"     * Remove an item from the ArrayList of tasks given the task index.","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"ChongQiRong"},"content":"     *","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"ChongQiRong"},"content":"     * @param tasks   ArrayList of tasks.","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"ChongQiRong"},"content":"     * @param ui      Deals with interactions with the user.","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"ChongQiRong"},"content":"     * @param storage Deals with saving and loading tasks in the file.","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"ChongQiRong"},"content":"     * @throws DukeException If the index to delete exceeds number of tasks.","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"ChongQiRong"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"ChongQiRong"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"ChongQiRong"},"content":"        int taskNumber \u003d Integer.parseInt(commandFields[0]);","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"ChongQiRong"},"content":"        if (taskNumber \u003e tasks.tasks.size()) {","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"ChongQiRong"},"content":"            throw new DukeException(ErrorMessage.INVALID_DELETE.toString());","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"ChongQiRong"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"ChongQiRong"},"content":"        Task taskToRemove \u003d tasks.tasks.get(taskNumber - 1);","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"ChongQiRong"},"content":"        tasks.tasks.remove(taskNumber - 1);","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"ChongQiRong"},"content":"        ui.taskRemoved(tasks.tasks, taskToRemove);","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"ChongQiRong"},"content":"        storage.writeToFile(tasks.tasks, storage.filePath);","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"ChongQiRong"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"ChongQiRong"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"ChongQiRong"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"ChongQiRong"},"content":"        return false;","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"ChongQiRong"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"ChongQiRong"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"ChongQiRong":40}},{"path":"src/main/java/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChongQiRong"},"content":"package command;","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"ChongQiRong"},"content":"import components.Storage;","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"ChongQiRong"},"content":"import components.TaskList;","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"ChongQiRong"},"content":"import components.UI;","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"ChongQiRong"},"content":"import exception.DukeException;","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"ChongQiRong"},"content":"import exception.ErrorMessage;","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"ChongQiRong"},"content":"import task.Task;","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"ChongQiRong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"ChongQiRong"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"ChongQiRong"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"ChongQiRong"},"content":"    public FindCommand(String[] commandFields) {","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"ChongQiRong"},"content":"        super(commandFields);","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"ChongQiRong"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"ChongQiRong"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"ChongQiRong"},"content":"     * Prints out a list of matching tasks based on user input.","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"ChongQiRong"},"content":"     *","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"ChongQiRong"},"content":"     * @param tasks   ArrayList of tasks.","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"ChongQiRong"},"content":"     * @param ui      Deals with interactions with the user.","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"ChongQiRong"},"content":"     * @param storage Deals with saving and loading tasks in the file.","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"ChongQiRong"},"content":"     * @throws DukeException If there is no matching tasks.","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"ChongQiRong"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"ChongQiRong"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"ChongQiRong"},"content":"        ArrayList\u003cTask\u003e filteredList \u003d (ArrayList\u003cTask\u003e) tasks.tasks.stream()","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"ChongQiRong"},"content":"                .filter(t -\u003e t.getDescription().contains((commandFields[0])))","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"ChongQiRong"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"ChongQiRong"},"content":"        if (filteredList.size() \u003d\u003d 0) {","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"ChongQiRong"},"content":"            throw new DukeException(ErrorMessage.NO_MATCHING_TASKS.toString());","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"ChongQiRong"},"content":"        } else {","lastModifiedDate":"2023-03-02"},{"lineNumber":33,"author":{"gitId":"ChongQiRong"},"content":"            System.out.println(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2023-03-02"},{"lineNumber":34,"author":{"gitId":"ChongQiRong"},"content":"            for (Task task : filteredList) {","lastModifiedDate":"2023-03-02"},{"lineNumber":35,"author":{"gitId":"ChongQiRong"},"content":"                ui.printTaskInList(tasks, task);","lastModifiedDate":"2023-03-02"},{"lineNumber":36,"author":{"gitId":"ChongQiRong"},"content":"            }","lastModifiedDate":"2023-03-02"},{"lineNumber":37,"author":{"gitId":"ChongQiRong"},"content":"        }","lastModifiedDate":"2023-03-02"},{"lineNumber":38,"author":{"gitId":"ChongQiRong"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":39,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":40,"author":{"gitId":"ChongQiRong"},"content":"    @Override","lastModifiedDate":"2023-03-02"},{"lineNumber":41,"author":{"gitId":"ChongQiRong"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-03-02"},{"lineNumber":42,"author":{"gitId":"ChongQiRong"},"content":"        return false;","lastModifiedDate":"2023-03-02"},{"lineNumber":43,"author":{"gitId":"ChongQiRong"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":44,"author":{"gitId":"ChongQiRong"},"content":"}","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"ChongQiRong":44}},{"path":"src/main/java/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChongQiRong"},"content":"package command;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"ChongQiRong"},"content":"import exception.DukeException;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"ChongQiRong"},"content":"import exception.ErrorMessage;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"ChongQiRong"},"content":"import task.Task;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"ChongQiRong"},"content":"import components.TaskList;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"ChongQiRong"},"content":"import components.UI;","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"ChongQiRong"},"content":"import components.Storage;","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"ChongQiRong"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"ChongQiRong"},"content":"    public ListCommand() {","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"ChongQiRong"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"ChongQiRong"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"ChongQiRong"},"content":"     * Prints the items in the ArrayList.","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"ChongQiRong"},"content":"     *","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"ChongQiRong"},"content":"     * @param tasks   ArrayList of tasks.","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"ChongQiRong"},"content":"     * @param ui      Deals with interactions with the user.","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"ChongQiRong"},"content":"     * @param storage Deals with saving and loading tasks in the file.","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"ChongQiRong"},"content":"     * @throws DukeException If the list is empty.","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"ChongQiRong"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"ChongQiRong"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"ChongQiRong"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"ChongQiRong"},"content":"        if (tasks.tasks.size() \u003e 0) {","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"ChongQiRong"},"content":"            for (Task task : tasks.tasks) {","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"ChongQiRong"},"content":"                ui.printTaskInList(tasks, task);","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"ChongQiRong"},"content":"            }","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"ChongQiRong"},"content":"        } else {","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"ChongQiRong"},"content":"            throw new DukeException(ErrorMessage.EMPTY_LIST.toString());","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"ChongQiRong"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"ChongQiRong"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"ChongQiRong"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"ChongQiRong"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"ChongQiRong"},"content":"        return false;","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"ChongQiRong"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"ChongQiRong"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"ChongQiRong":37}},{"path":"src/main/java/command/ToggleMarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChongQiRong"},"content":"package command;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"ChongQiRong"},"content":"import exception.DukeException;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"ChongQiRong"},"content":"import exception.ErrorMessage;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"ChongQiRong"},"content":"import components.TaskList;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"ChongQiRong"},"content":"import components.UI;","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"ChongQiRong"},"content":"import components.Storage;","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"ChongQiRong"},"content":"public class ToggleMarkCommand extends Command {","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"ChongQiRong"},"content":"    public ToggleMarkCommand(String[] commandFields) {","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"ChongQiRong"},"content":"        super(commandFields);","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"ChongQiRong"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"ChongQiRong"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"ChongQiRong"},"content":"     * Mark or Unmark the task given the index.","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"ChongQiRong"},"content":"     *","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"ChongQiRong"},"content":"     * @param tasks   ArrayList of tasks.","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"ChongQiRong"},"content":"     * @param ui      Deals with interactions with the user.","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"ChongQiRong"},"content":"     * @param storage Deals with saving and loading tasks in the file.","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"ChongQiRong"},"content":"     * @throws DukeException If a number is not provided or the index exceeds number of tasks in the list.","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"ChongQiRong"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"ChongQiRong"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"ChongQiRong"},"content":"        try {","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"ChongQiRong"},"content":"            int taskNumber \u003d Integer.parseInt(commandFields[1]);","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"ChongQiRong"},"content":"            if (taskNumber \u003e tasks.tasks.size()) {","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"ChongQiRong"},"content":"                throw new DukeException(ErrorMessage.INVALID_TASK.toString());","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"ChongQiRong"},"content":"            }","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"ChongQiRong"},"content":"            if (commandFields[0].equals(\"mark\")) {","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"ChongQiRong"},"content":"                tasks.tasks.get(taskNumber - 1).toggleMark(1);","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"ChongQiRong"},"content":"                storage.writeToFile(tasks.tasks, storage.filePath);","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"ChongQiRong"},"content":"                ui.taskMarked();","lastModifiedDate":"2023-03-02"},{"lineNumber":35,"author":{"gitId":"ChongQiRong"},"content":"            } else {","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"ChongQiRong"},"content":"                tasks.tasks.get(taskNumber - 1).toggleMark(0);","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"ChongQiRong"},"content":"                storage.writeToFile(tasks.tasks, storage.filePath);","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"ChongQiRong"},"content":"                ui.taskUnmarked();","lastModifiedDate":"2023-03-02"},{"lineNumber":39,"author":{"gitId":"ChongQiRong"},"content":"            }","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"ChongQiRong"},"content":"            ui.printTask(tasks, taskNumber);","lastModifiedDate":"2023-03-02"},{"lineNumber":41,"author":{"gitId":"ChongQiRong"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"ChongQiRong"},"content":"            throw new DukeException(ErrorMessage.INVALID_NUMBER.toString());","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"ChongQiRong"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"ChongQiRong"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"ChongQiRong"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"ChongQiRong"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"ChongQiRong"},"content":"        return false;","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"ChongQiRong"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"ChongQiRong"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"ChongQiRong":50}},{"path":"src/main/java/components/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChongQiRong"},"content":"package components;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"ChongQiRong"},"content":"import command.AddDeadlineCommand;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"ChongQiRong"},"content":"import command.AddEventCommand;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"ChongQiRong"},"content":"import command.AddTodoCommand;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"ChongQiRong"},"content":"import command.ByeCommand;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"ChongQiRong"},"content":"import command.Command;","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"ChongQiRong"},"content":"import command.DeleteCommand;","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"ChongQiRong"},"content":"import command.FindCommand;","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"ChongQiRong"},"content":"import command.ListCommand;","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"ChongQiRong"},"content":"import command.ToggleMarkCommand;","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"ChongQiRong"},"content":"import exception.DukeException;","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"ChongQiRong"},"content":"import exception.ErrorMessage;","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"ChongQiRong"},"content":"/**","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"ChongQiRong"},"content":" * Deals with making sense of the user command.","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"ChongQiRong"},"content":" */","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"ChongQiRong"},"content":"public class Parser {","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"ChongQiRong"},"content":"    private static void ParseTodoCommand(String fullCommand, String[] commandFields) throws DukeException {","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"ChongQiRong"},"content":"        try {","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"ChongQiRong"},"content":"            commandFields[0] \u003d fullCommand.substring(5);","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"ChongQiRong"},"content":"        } catch (IndexOutOfBoundsException error) {","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"ChongQiRong"},"content":"            throw new DukeException(ErrorMessage.MISSING_TODO_PARAMETER.toString());","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"ChongQiRong"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"ChongQiRong"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"ChongQiRong"},"content":"    private static void ParseEventCommand(String fullCommand, String[] commandFields) throws DukeException {","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"ChongQiRong"},"content":"        try {","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"ChongQiRong"},"content":"            int positionOfFrom \u003d fullCommand.indexOf(\"/from\");","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"ChongQiRong"},"content":"            if (positionOfFrom \u003d\u003d -1) {","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"ChongQiRong"},"content":"                throw new DukeException(ErrorMessage.MISSING_TWO_EVENT_PARAMETER.toString());","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"ChongQiRong"},"content":"            }","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"ChongQiRong"},"content":"            if (positionOfFrom \u003e fullCommand.indexOf(\"/to\")) {","lastModifiedDate":"2023-03-02"},{"lineNumber":34,"author":{"gitId":"ChongQiRong"},"content":"                throw new DukeException(ErrorMessage.INVALID_FROM_TO_ORDER.toString());","lastModifiedDate":"2023-03-02"},{"lineNumber":35,"author":{"gitId":"ChongQiRong"},"content":"            }","lastModifiedDate":"2023-03-02"},{"lineNumber":36,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"ChongQiRong"},"content":"            String startEnd \u003d fullCommand.substring(positionOfFrom + 1);","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"ChongQiRong"},"content":"            int positionOfTo \u003d startEnd.indexOf(\"/to\");","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"ChongQiRong"},"content":"            if (positionOfTo \u003d\u003d -1) {","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"ChongQiRong"},"content":"                throw new DukeException(ErrorMessage.MISSING_ONE_EVENT_PARAMETER.toString());","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"ChongQiRong"},"content":"            }","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"ChongQiRong"},"content":"            commandFields[1] \u003d startEnd.substring(5, positionOfTo - 1);","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"ChongQiRong"},"content":"            commandFields[2] \u003d startEnd.substring(positionOfTo + 4);","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"ChongQiRong"},"content":"            commandFields[0] \u003d fullCommand.substring(6, positionOfFrom - 1);","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"ChongQiRong"},"content":"        } catch (IndexOutOfBoundsException error) {","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"ChongQiRong"},"content":"            throw new DukeException(ErrorMessage.MISSING_EVENT_PARAMETER.toString());","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"ChongQiRong"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"ChongQiRong"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"ChongQiRong"},"content":"    private static void ParseDeadlineCommand(String fullCommand, String[] commandFields) throws DukeException {","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"ChongQiRong"},"content":"        int positionOfBy \u003d fullCommand.indexOf(\"/by\");","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"ChongQiRong"},"content":"        if (positionOfBy \u003d\u003d -1) {","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"ChongQiRong"},"content":"            throw new DukeException(ErrorMessage.MISSING_DEADLINE_BY_PARAMETER.toString());","lastModifiedDate":"2023-03-01"},{"lineNumber":56,"author":{"gitId":"ChongQiRong"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":58,"author":{"gitId":"ChongQiRong"},"content":"        try {","lastModifiedDate":"2023-03-01"},{"lineNumber":59,"author":{"gitId":"ChongQiRong"},"content":"            commandFields[1] \u003d fullCommand.substring(positionOfBy + 4);","lastModifiedDate":"2023-03-01"},{"lineNumber":60,"author":{"gitId":"ChongQiRong"},"content":"            try {","lastModifiedDate":"2023-03-01"},{"lineNumber":61,"author":{"gitId":"ChongQiRong"},"content":"                commandFields[0] \u003d fullCommand.substring(9, positionOfBy - 1);","lastModifiedDate":"2023-03-01"},{"lineNumber":62,"author":{"gitId":"ChongQiRong"},"content":"            } catch (IndexOutOfBoundsException error) {","lastModifiedDate":"2023-03-01"},{"lineNumber":63,"author":{"gitId":"ChongQiRong"},"content":"                throw new DukeException(ErrorMessage.MISSING_DEADLINE_PARAMETER.toString());","lastModifiedDate":"2023-03-01"},{"lineNumber":64,"author":{"gitId":"ChongQiRong"},"content":"            }","lastModifiedDate":"2023-03-01"},{"lineNumber":65,"author":{"gitId":"ChongQiRong"},"content":"        } catch (IndexOutOfBoundsException error) {","lastModifiedDate":"2023-03-01"},{"lineNumber":66,"author":{"gitId":"ChongQiRong"},"content":"            throw new DukeException(ErrorMessage.EMPTY_DEADLINE_BY_PARAMETER.toString());","lastModifiedDate":"2023-03-01"},{"lineNumber":67,"author":{"gitId":"ChongQiRong"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":68,"author":{"gitId":"ChongQiRong"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":69,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":70,"author":{"gitId":"ChongQiRong"},"content":"    private static void ParseDeleteCommand(String[] words, String[] commandFields) throws DukeException {","lastModifiedDate":"2023-03-01"},{"lineNumber":71,"author":{"gitId":"ChongQiRong"},"content":"        try {","lastModifiedDate":"2023-03-01"},{"lineNumber":72,"author":{"gitId":"ChongQiRong"},"content":"            commandFields[0] \u003d words[1];","lastModifiedDate":"2023-03-01"},{"lineNumber":73,"author":{"gitId":"ChongQiRong"},"content":"        } catch (IndexOutOfBoundsException error) {","lastModifiedDate":"2023-03-01"},{"lineNumber":74,"author":{"gitId":"ChongQiRong"},"content":"            throw new DukeException(ErrorMessage.EMPTY_DELETE_PARAMETER.toString());","lastModifiedDate":"2023-03-01"},{"lineNumber":75,"author":{"gitId":"ChongQiRong"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":76,"author":{"gitId":"ChongQiRong"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":77,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":78,"author":{"gitId":"ChongQiRong"},"content":"    private static void ParseToggleCommand(String[] words, String[] commandFields) throws DukeException {","lastModifiedDate":"2023-03-01"},{"lineNumber":79,"author":{"gitId":"ChongQiRong"},"content":"        try {","lastModifiedDate":"2023-03-01"},{"lineNumber":80,"author":{"gitId":"ChongQiRong"},"content":"            commandFields[0] \u003d words[0];","lastModifiedDate":"2023-03-01"},{"lineNumber":81,"author":{"gitId":"ChongQiRong"},"content":"            commandFields[1] \u003d words[1];","lastModifiedDate":"2023-03-01"},{"lineNumber":82,"author":{"gitId":"ChongQiRong"},"content":"        } catch (IndexOutOfBoundsException error) {","lastModifiedDate":"2023-03-01"},{"lineNumber":83,"author":{"gitId":"ChongQiRong"},"content":"            throw new DukeException(ErrorMessage.EMPTY_MARK_OR_UNMARK_PARAMETER.toString());","lastModifiedDate":"2023-03-01"},{"lineNumber":84,"author":{"gitId":"ChongQiRong"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":85,"author":{"gitId":"ChongQiRong"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":86,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":87,"author":{"gitId":"ChongQiRong"},"content":"    private static void ParseFindCommand(String fullCommand, String[] commandFields) throws DukeException {","lastModifiedDate":"2023-03-02"},{"lineNumber":88,"author":{"gitId":"ChongQiRong"},"content":"        try {","lastModifiedDate":"2023-03-02"},{"lineNumber":89,"author":{"gitId":"ChongQiRong"},"content":"            commandFields[0] \u003d fullCommand.substring(5);","lastModifiedDate":"2023-03-02"},{"lineNumber":90,"author":{"gitId":"ChongQiRong"},"content":"        } catch (IndexOutOfBoundsException error) {","lastModifiedDate":"2023-03-02"},{"lineNumber":91,"author":{"gitId":"ChongQiRong"},"content":"            throw new DukeException(ErrorMessage.MISSING_FIND_PARAMETER.toString());","lastModifiedDate":"2023-03-02"},{"lineNumber":92,"author":{"gitId":"ChongQiRong"},"content":"        }","lastModifiedDate":"2023-03-02"},{"lineNumber":93,"author":{"gitId":"ChongQiRong"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":94,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":95,"author":{"gitId":"ChongQiRong"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":96,"author":{"gitId":"ChongQiRong"},"content":"     * Returns new command object based on command by user.","lastModifiedDate":"2023-03-02"},{"lineNumber":97,"author":{"gitId":"ChongQiRong"},"content":"     *","lastModifiedDate":"2023-03-02"},{"lineNumber":98,"author":{"gitId":"ChongQiRong"},"content":"     * @param fullCommand Command entered by user.","lastModifiedDate":"2023-03-02"},{"lineNumber":99,"author":{"gitId":"ChongQiRong"},"content":"     * @return Command object based on description.","lastModifiedDate":"2023-03-02"},{"lineNumber":100,"author":{"gitId":"ChongQiRong"},"content":"     * @throws DukeException If command is invalid.","lastModifiedDate":"2023-03-02"},{"lineNumber":101,"author":{"gitId":"ChongQiRong"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":102,"author":{"gitId":"ChongQiRong"},"content":"    public static Command parse(String fullCommand) throws DukeException {","lastModifiedDate":"2023-03-01"},{"lineNumber":103,"author":{"gitId":"ChongQiRong"},"content":"        String[] words \u003d fullCommand.split(\" \");","lastModifiedDate":"2023-03-01"},{"lineNumber":104,"author":{"gitId":"ChongQiRong"},"content":"        String[] commandFields \u003d new String[5];","lastModifiedDate":"2023-03-01"},{"lineNumber":105,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":106,"author":{"gitId":"ChongQiRong"},"content":"        if (words[0].equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2023-03-01"},{"lineNumber":107,"author":{"gitId":"ChongQiRong"},"content":"            return new ByeCommand();","lastModifiedDate":"2023-03-01"},{"lineNumber":108,"author":{"gitId":"ChongQiRong"},"content":"        } else if (words[0].equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2023-03-02"},{"lineNumber":109,"author":{"gitId":"ChongQiRong"},"content":"            return new ListCommand();","lastModifiedDate":"2023-03-01"},{"lineNumber":110,"author":{"gitId":"ChongQiRong"},"content":"        } else if (words[0].equalsIgnoreCase(\"todo\")) {","lastModifiedDate":"2023-03-01"},{"lineNumber":111,"author":{"gitId":"ChongQiRong"},"content":"            ParseTodoCommand(fullCommand, commandFields);","lastModifiedDate":"2023-03-01"},{"lineNumber":112,"author":{"gitId":"ChongQiRong"},"content":"            return new AddTodoCommand(commandFields);","lastModifiedDate":"2023-03-01"},{"lineNumber":113,"author":{"gitId":"ChongQiRong"},"content":"        } else if (words[0].equalsIgnoreCase(\"event\")) {","lastModifiedDate":"2023-03-01"},{"lineNumber":114,"author":{"gitId":"ChongQiRong"},"content":"            ParseEventCommand(fullCommand, commandFields);","lastModifiedDate":"2023-03-01"},{"lineNumber":115,"author":{"gitId":"ChongQiRong"},"content":"            return new AddEventCommand(commandFields);","lastModifiedDate":"2023-03-01"},{"lineNumber":116,"author":{"gitId":"ChongQiRong"},"content":"        } else if (words[0].equalsIgnoreCase(\"deadline\")) {","lastModifiedDate":"2023-03-01"},{"lineNumber":117,"author":{"gitId":"ChongQiRong"},"content":"            ParseDeadlineCommand(fullCommand, commandFields);","lastModifiedDate":"2023-03-01"},{"lineNumber":118,"author":{"gitId":"ChongQiRong"},"content":"            return new AddDeadlineCommand(commandFields);","lastModifiedDate":"2023-03-01"},{"lineNumber":119,"author":{"gitId":"ChongQiRong"},"content":"        } else if (words[0].equalsIgnoreCase(\"delete\")) {","lastModifiedDate":"2023-03-01"},{"lineNumber":120,"author":{"gitId":"ChongQiRong"},"content":"            ParseDeleteCommand(words, commandFields);","lastModifiedDate":"2023-03-01"},{"lineNumber":121,"author":{"gitId":"ChongQiRong"},"content":"            return new DeleteCommand(commandFields);","lastModifiedDate":"2023-03-01"},{"lineNumber":122,"author":{"gitId":"ChongQiRong"},"content":"        } else if (words[0].equalsIgnoreCase(\"mark\")) {","lastModifiedDate":"2023-03-01"},{"lineNumber":123,"author":{"gitId":"ChongQiRong"},"content":"            ParseToggleCommand(words, commandFields);","lastModifiedDate":"2023-03-01"},{"lineNumber":124,"author":{"gitId":"ChongQiRong"},"content":"            return new ToggleMarkCommand(commandFields);","lastModifiedDate":"2023-03-01"},{"lineNumber":125,"author":{"gitId":"ChongQiRong"},"content":"        } else if (words[0].equalsIgnoreCase(\"unmark\")) {","lastModifiedDate":"2023-03-01"},{"lineNumber":126,"author":{"gitId":"ChongQiRong"},"content":"            ParseToggleCommand(words, commandFields);","lastModifiedDate":"2023-03-01"},{"lineNumber":127,"author":{"gitId":"ChongQiRong"},"content":"            return new ToggleMarkCommand(commandFields);","lastModifiedDate":"2023-03-01"},{"lineNumber":128,"author":{"gitId":"ChongQiRong"},"content":"        } else if (words[0].equalsIgnoreCase(\"find\")) {","lastModifiedDate":"2023-03-02"},{"lineNumber":129,"author":{"gitId":"ChongQiRong"},"content":"            ParseFindCommand(fullCommand, commandFields);","lastModifiedDate":"2023-03-02"},{"lineNumber":130,"author":{"gitId":"ChongQiRong"},"content":"            return new FindCommand(commandFields);","lastModifiedDate":"2023-03-02"},{"lineNumber":131,"author":{"gitId":"ChongQiRong"},"content":"        } else {","lastModifiedDate":"2023-03-01"},{"lineNumber":132,"author":{"gitId":"ChongQiRong"},"content":"            throw new DukeException(ErrorMessage.INVALID_COMMAND.toString());","lastModifiedDate":"2023-03-01"},{"lineNumber":133,"author":{"gitId":"ChongQiRong"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":134,"author":{"gitId":"ChongQiRong"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":135,"author":{"gitId":"ChongQiRong"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"ChongQiRong":135}},{"path":"src/main/java/components/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChongQiRong"},"content":"package components;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"ChongQiRong"},"content":"import task.Task;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"ChongQiRong"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"ChongQiRong"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"ChongQiRong"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"ChongQiRong"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"ChongQiRong"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"ChongQiRong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"ChongQiRong"},"content":"/**","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"ChongQiRong"},"content":" * Deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"ChongQiRong"},"content":" */","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"ChongQiRong"},"content":"public class Storage {","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"ChongQiRong"},"content":"    public String filePath;","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"ChongQiRong"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"ChongQiRong"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"ChongQiRong"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"ChongQiRong"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"ChongQiRong"},"content":"     * Load data from previous file and put it in an arraylist.","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"ChongQiRong"},"content":"     *","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"ChongQiRong"},"content":"     * @return ArrayList.","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"ChongQiRong"},"content":"     * @throws IOException            If file is not found","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"ChongQiRong"},"content":"     * @throws ClassNotFoundException If there is error in loading the ArrayList object from the file","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"ChongQiRong"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"ChongQiRong"},"content":"    public ArrayList\u003cTask\u003e load() throws IOException, ClassNotFoundException {","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"ChongQiRong"},"content":"        FileInputStream readData \u003d new FileInputStream(this.filePath);","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"ChongQiRong"},"content":"        ObjectInputStream readStream \u003d new ObjectInputStream(readData);","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"ChongQiRong"},"content":"        ArrayList\u003cTask\u003e data \u003d (ArrayList\u003cTask\u003e) readStream.readObject();","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"ChongQiRong"},"content":"        readStream.close();","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"ChongQiRong"},"content":"        return data;","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"ChongQiRong"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":37,"author":{"gitId":"ChongQiRong"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":38,"author":{"gitId":"ChongQiRong"},"content":"     * Write ArrayList to file.","lastModifiedDate":"2023-03-02"},{"lineNumber":39,"author":{"gitId":"ChongQiRong"},"content":"     *","lastModifiedDate":"2023-03-02"},{"lineNumber":40,"author":{"gitId":"ChongQiRong"},"content":"     * @param tasks    ArrayList of tasks.","lastModifiedDate":"2023-03-02"},{"lineNumber":41,"author":{"gitId":"ChongQiRong"},"content":"     * @param filePath Name of file.","lastModifiedDate":"2023-03-02"},{"lineNumber":42,"author":{"gitId":"ChongQiRong"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":43,"author":{"gitId":"ChongQiRong"},"content":"    public void writeToFile(ArrayList\u003cTask\u003e tasks, String filePath) {","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"ChongQiRong"},"content":"        try {","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"ChongQiRong"},"content":"            FileOutputStream writeData \u003d new FileOutputStream(filePath);","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"ChongQiRong"},"content":"            ObjectOutputStream writeStream \u003d new ObjectOutputStream(writeData);","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"ChongQiRong"},"content":"            writeStream.writeObject(tasks);","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"ChongQiRong"},"content":"            writeStream.flush();","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"ChongQiRong"},"content":"            writeStream.close();","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"ChongQiRong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"ChongQiRong"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"ChongQiRong"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"ChongQiRong"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"ChongQiRong"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"ChongQiRong":55}},{"path":"src/main/java/components/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChongQiRong"},"content":"package components;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"ChongQiRong"},"content":"import task.Task;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"ChongQiRong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"ChongQiRong"},"content":"/**","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"ChongQiRong"},"content":" * Contains the tasklist.","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"ChongQiRong"},"content":" */","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"ChongQiRong"},"content":"public class TaskList {","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"ChongQiRong"},"content":"    public ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"ChongQiRong"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"ChongQiRong"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"ChongQiRong"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"ChongQiRong"},"content":"    public TaskList() {","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"ChongQiRong"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"ChongQiRong"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"ChongQiRong"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"ChongQiRong":20}},{"path":"src/main/java/components/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChongQiRong"},"content":"package components;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"ChongQiRong"},"content":"import task.Task;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"ChongQiRong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"ChongQiRong"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"ChongQiRong"},"content":"/**","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"ChongQiRong"},"content":" * Deals with interactions with the user.","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"ChongQiRong"},"content":" */","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"ChongQiRong"},"content":"public class UI {","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"ChongQiRong"},"content":"    public UI() {","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"ChongQiRong"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"ChongQiRong"},"content":"    private static final String LOGO \u003d","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"ChongQiRong"},"content":"            \" ____        _\\n\"","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"ChongQiRong"},"content":"                    + \"|  _ \\\\ _   _| | _____\\n\"","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"ChongQiRong"},"content":"                    + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"ChongQiRong"},"content":"                    + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"ChongQiRong"},"content":"                    + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"ChongQiRong"},"content":"    private void printWelcomeMessage() {","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"ChongQiRong"},"content":"        System.out.println(\"Hello from\\n\" + LOGO);","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"ChongQiRong"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"ChongQiRong"},"content":"    public void printHorizontalLine() {","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"ChongQiRong"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"ChongQiRong"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"ChongQiRong"},"content":"    public void greet() {","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"ChongQiRong"},"content":"        printWelcomeMessage();","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"ChongQiRong"},"content":"        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\\n\");","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"ChongQiRong"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"ChongQiRong"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"ChongQiRong"},"content":"    public void exit() {","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"ChongQiRong"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\\n\");","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"ChongQiRong"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"ChongQiRong"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"ChongQiRong"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"ChongQiRong"},"content":"        System.out.println(\"Could not find any Duke.txt but don\u0027t worry. One will be created later\");","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"ChongQiRong"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"ChongQiRong"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"ChongQiRong"},"content":"    public String readCommand(Scanner in) {","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"ChongQiRong"},"content":"        return in.nextLine();","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"ChongQiRong"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"ChongQiRong"},"content":"    public void showError(String errorMessage) {","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"ChongQiRong"},"content":"        System.out.println(errorMessage);","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"ChongQiRong"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"ChongQiRong"},"content":"    public void taskAdded(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"ChongQiRong"},"content":"        boolean isLessThanOne \u003d (tasks.size() \u003c\u003d 1);","lastModifiedDate":"2023-03-02"},{"lineNumber":56,"author":{"gitId":"ChongQiRong"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\\n\" + tasks.get(tasks.size() - 1) +","lastModifiedDate":"2023-03-02"},{"lineNumber":57,"author":{"gitId":"ChongQiRong"},"content":"                \"\\nNow you have \" + tasks.size() + (isLessThanOne ? \" task\" : \" tasks\") + \" in the list.\");","lastModifiedDate":"2023-03-02"},{"lineNumber":58,"author":{"gitId":"ChongQiRong"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":59,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":60,"author":{"gitId":"ChongQiRong"},"content":"    public void taskRemoved(ArrayList\u003cTask\u003e tasks, Task t) {","lastModifiedDate":"2023-03-01"},{"lineNumber":61,"author":{"gitId":"ChongQiRong"},"content":"        boolean isLessThanOne \u003d (tasks.size() \u003c\u003d 1);","lastModifiedDate":"2023-03-01"},{"lineNumber":62,"author":{"gitId":"ChongQiRong"},"content":"        System.out.println(\"Got it. I\u0027ve removed this task:\\n\" + t.toString() +","lastModifiedDate":"2023-03-02"},{"lineNumber":63,"author":{"gitId":"ChongQiRong"},"content":"                \"\\nNow you have \" + tasks.size() + (isLessThanOne ? \" task\" : \" tasks\") + \" in the list.\");","lastModifiedDate":"2023-03-02"},{"lineNumber":64,"author":{"gitId":"ChongQiRong"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":65,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":66,"author":{"gitId":"ChongQiRong"},"content":"    public void taskMarked() {","lastModifiedDate":"2023-03-02"},{"lineNumber":67,"author":{"gitId":"ChongQiRong"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-03-02"},{"lineNumber":68,"author":{"gitId":"ChongQiRong"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":69,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":70,"author":{"gitId":"ChongQiRong"},"content":"    public void taskUnmarked() {","lastModifiedDate":"2023-03-02"},{"lineNumber":71,"author":{"gitId":"ChongQiRong"},"content":"        System.out.println(\"Ok, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-03-02"},{"lineNumber":72,"author":{"gitId":"ChongQiRong"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":73,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":74,"author":{"gitId":"ChongQiRong"},"content":"    public void printTask(TaskList tasks, int taskNumber) {","lastModifiedDate":"2023-03-02"},{"lineNumber":75,"author":{"gitId":"ChongQiRong"},"content":"        System.out.println(tasks.tasks.get(taskNumber - 1));","lastModifiedDate":"2023-03-02"},{"lineNumber":76,"author":{"gitId":"ChongQiRong"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":77,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":78,"author":{"gitId":"ChongQiRong"},"content":"    public void printTaskInList(TaskList tasks, Task task) {","lastModifiedDate":"2023-03-02"},{"lineNumber":79,"author":{"gitId":"ChongQiRong"},"content":"        System.out.println((tasks.tasks.indexOf(task) + 1) + \".\" + task);","lastModifiedDate":"2023-03-02"},{"lineNumber":80,"author":{"gitId":"ChongQiRong"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":81,"author":{"gitId":"ChongQiRong"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"ChongQiRong":81}},{"path":"src/main/java/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChongQiRong"},"content":"package exception;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"ChongQiRong"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"ChongQiRong"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"ChongQiRong"},"content":"        super(errorMessage);","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"ChongQiRong"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"ChongQiRong"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"ChongQiRong":7}},{"path":"src/main/java/exception/ErrorMessage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChongQiRong"},"content":"package exception;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"ChongQiRong"},"content":"/**","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"ChongQiRong"},"content":" * List of error messages","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"ChongQiRong"},"content":" */","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"ChongQiRong"},"content":"public enum ErrorMessage {","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"ChongQiRong"},"content":"    INVALID_COMMAND(\"I am sorry, I do not understand what this command means\\n\" +","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"ChongQiRong"},"content":"            \"Commands are available as follows:\\n\" +","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"ChongQiRong"},"content":"            \"1.todo\\n2.event\\n3.deadline\\n4.list\\n5.mark\\n6.unmark\\n7.delete\\n8.find\\n9.bye\"),","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"ChongQiRong"},"content":"    MISSING_TODO_PARAMETER(\"I am sorry, you are missing a parameter for todo.\\nExample: todo borrow book\"),","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"ChongQiRong"},"content":"    MISSING_TWO_EVENT_PARAMETER(\"I am sorry, you are missing a start \u0026 end time.\\n\" +","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"ChongQiRong"},"content":"            \"Example: event project meeting /from Mon 2pm /to 4pm\"),","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"ChongQiRong"},"content":"    MISSING_ONE_EVENT_PARAMETER(\"I am sorry, you are missing an end time\\n\" +","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"ChongQiRong"},"content":"            \"Example: event project meeting /from Mon 2pm /to 4pm\"),","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"ChongQiRong"},"content":"    INVALID_FROM_TO_ORDER(\"I am sorry, you /from field has to be before the /to field\"),","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"ChongQiRong"},"content":"    MISSING_EVENT_PARAMETER(\"I am sorry, you are missing a description for event.\\n\" +","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"ChongQiRong"},"content":"            \"Example: event project meeting /from Mon 2pm /to 4pm\"),","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"ChongQiRong"},"content":"    MISSING_DEADLINE_BY_PARAMETER(\"I am sorry, you are missing the by parameter for your deadline.\\n\" +","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"ChongQiRong"},"content":"            \"Example: deadline return book /by Sunday\"),","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"ChongQiRong"},"content":"    EMPTY_DEADLINE_BY_PARAMETER(\"I am sorry, you are inputting an empty by parameter for your deadline.\\n\" +","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"ChongQiRong"},"content":"            \"Example: deadline return book /by Sunday\"),","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"ChongQiRong"},"content":"    MISSING_DEADLINE_PARAMETER(\"I am sorry, you are missing a description for deadline.\\n\" +","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"ChongQiRong"},"content":"            \"Example: deadline return book /by Sunday\"),","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"ChongQiRong"},"content":"    INVALID_TASK(\"I am sorry, you are trying to mark/unmark a task that does not exist.\"),","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"ChongQiRong"},"content":"    EMPTY_DELETE_PARAMETER(\"I am sorry, please indicate the task number you want to delete\"),","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"ChongQiRong"},"content":"    EMPTY_MARK_OR_UNMARK_PARAMETER(\"I am sorry, you need to indicate the task number you want to mark or unmark.\\n\" +","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"ChongQiRong"},"content":"            \"Example: mark 3\"),","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"ChongQiRong"},"content":"    INVALID_NUMBER(\"I am sorry, please enter a valid task number\\n\" +","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"ChongQiRong"},"content":"            \"Example: mark 3\"),","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"ChongQiRong"},"content":"    MISSING_FIND_PARAMETER(\"I am sorry, pls enter the parameter you are trying to find\\n\" +","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"ChongQiRong"},"content":"            \"Example: find borrow book\"),","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"ChongQiRong"},"content":"    INVALID_DELETE(\"I am sorry, you are trying to delete a task that does not exist.\"),","lastModifiedDate":"2023-02-10"},{"lineNumber":33,"author":{"gitId":"ChongQiRong"},"content":"    EMPTY_LIST(\"I am sorry, you need to have something in your list before I can show you\"),","lastModifiedDate":"2023-03-02"},{"lineNumber":34,"author":{"gitId":"ChongQiRong"},"content":"    NO_MATCHING_TASKS(\"I am sorry, there is no matching tasks\");","lastModifiedDate":"2023-03-02"},{"lineNumber":35,"author":{"gitId":"ChongQiRong"},"content":"    private final String error;","lastModifiedDate":"2023-02-05"},{"lineNumber":36,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":37,"author":{"gitId":"ChongQiRong"},"content":"    ErrorMessage(String error) {","lastModifiedDate":"2023-02-05"},{"lineNumber":38,"author":{"gitId":"ChongQiRong"},"content":"        this.error \u003d error;","lastModifiedDate":"2023-02-05"},{"lineNumber":39,"author":{"gitId":"ChongQiRong"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":40,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":41,"author":{"gitId":"ChongQiRong"},"content":"    @Override","lastModifiedDate":"2023-02-05"},{"lineNumber":42,"author":{"gitId":"ChongQiRong"},"content":"    public String toString() {","lastModifiedDate":"2023-02-05"},{"lineNumber":43,"author":{"gitId":"ChongQiRong"},"content":"        return error;","lastModifiedDate":"2023-02-05"},{"lineNumber":44,"author":{"gitId":"ChongQiRong"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":45,"author":{"gitId":"ChongQiRong"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"ChongQiRong":45}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChongQiRong"},"content":"package task;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"ChongQiRong"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"ChongQiRong"},"content":"    private final String by;","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"ChongQiRong"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"ChongQiRong"},"content":"        super(description);","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"ChongQiRong"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"ChongQiRong"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"ChongQiRong"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"ChongQiRong"},"content":"    public String toString() {","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"ChongQiRong"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"ChongQiRong"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"ChongQiRong"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"ChongQiRong":15}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChongQiRong"},"content":"package task;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"ChongQiRong"},"content":"public class Event extends Task {","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"ChongQiRong"},"content":"    private final String startTime;","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"ChongQiRong"},"content":"    private final String endTime;","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"ChongQiRong"},"content":"    public Event(String description, String startTime, String endTime) {","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"ChongQiRong"},"content":"        super(description);","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"ChongQiRong"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"ChongQiRong"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"ChongQiRong"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"ChongQiRong"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"ChongQiRong"},"content":"    public String toString() {","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"ChongQiRong"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + startTime + \" to: \" + endTime + \")\";","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"ChongQiRong"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"ChongQiRong"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"ChongQiRong":17}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChongQiRong"},"content":"package task;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"ChongQiRong"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"ChongQiRong"},"content":"public abstract class Task implements Serializable {","lastModifiedDate":"2023-02-21"},{"lineNumber":6,"author":{"gitId":"ChongQiRong"},"content":"    private final String description;","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"ChongQiRong"},"content":"    private boolean isDone;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"ChongQiRong"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"ChongQiRong"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"ChongQiRong"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"ChongQiRong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"ChongQiRong"},"content":"    public void toggleMark(int value) {","lastModifiedDate":"2023-02-21"},{"lineNumber":16,"author":{"gitId":"ChongQiRong"},"content":"        if (value \u003d\u003d 1) {","lastModifiedDate":"2023-02-21"},{"lineNumber":17,"author":{"gitId":"ChongQiRong"},"content":"            isDone \u003d true;","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"ChongQiRong"},"content":"        } else {","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"ChongQiRong"},"content":"            isDone \u003d false;","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"ChongQiRong"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"ChongQiRong"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":22,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"ChongQiRong"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"ChongQiRong"},"content":"        return (isDone ? \"X\" : \"\");","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"ChongQiRong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"ChongQiRong"},"content":"    public String getDescription() {","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"ChongQiRong"},"content":"        return description;","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"ChongQiRong"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"ChongQiRong"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"ChongQiRong"},"content":"    public String toString() {","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"ChongQiRong"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"ChongQiRong"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"ChongQiRong"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"ChongQiRong":35}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChongQiRong"},"content":"package task;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"ChongQiRong"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"ChongQiRong"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"ChongQiRong"},"content":"        super(description);","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"ChongQiRong"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"ChongQiRong"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"ChongQiRong"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"ChongQiRong"},"content":"    public String toString() {","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"ChongQiRong"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"ChongQiRong"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"ChongQiRong"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"ChongQiRong":12}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ChongQiRong"},"content":"list","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"ChongQiRong"},"content":"todo borrow book","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"ChongQiRong"},"content":"todo","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"ChongQiRong"},"content":"todo attend lecture","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"ChongQiRong"},"content":"undo","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"ChongQiRong"},"content":"deadline","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"ChongQiRong"},"content":"deadline /by Sunday","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"ChongQiRong"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"ChongQiRong"},"content":"event","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"ChongQiRong"},"content":"event /from Mon 2pm","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"ChongQiRong"},"content":"event /from Mon 2pm /to 4pm","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"ChongQiRong"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"ChongQiRong"},"content":"list","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"ChongQiRong"},"content":"mark 10","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"ChongQiRong"},"content":"mark 3","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"ChongQiRong"},"content":"mark 7","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"ChongQiRong"},"content":"find","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"ChongQiRong"},"content":"find book","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"ChongQiRong"},"content":"delete 1","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"ChongQiRong"},"content":"find book","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"ChongQiRong"},"content":"unmark 3","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"ChongQiRong"},"content":"bye","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"ChongQiRong":22}}]
