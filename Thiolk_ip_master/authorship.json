[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Thiolk"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"Thiolk"},"content":" * Represents a special type of Task that has a due date.","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"Thiolk"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"Thiolk"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"Thiolk"},"content":"    protected String by;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"Thiolk"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"Thiolk"},"content":"    public Deadline(String name, boolean isCompleted, String by) {","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"Thiolk"},"content":"        super(name, isCompleted);","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"Thiolk"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"Thiolk"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"Thiolk"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"Thiolk"},"content":"    public String getBy() {","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"Thiolk"},"content":"        return by;","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"Thiolk"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"Thiolk"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"Thiolk"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"Thiolk"},"content":"    public String toString() {","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"Thiolk"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"Thiolk"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"Thiolk"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"Thiolk":20}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Thiolk"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"Thiolk"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"Thiolk"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"Thiolk"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"Thiolk"},"content":" * Represents a ChatBot that acts as a task tracker.","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"Thiolk"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"Thiolk"},"content":"    private Storage storage;","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"Thiolk"},"content":"    private TaskList listOfTasks;","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"Thiolk"},"content":"    private UI ui;","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"Thiolk"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"Thiolk"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"Thiolk"},"content":"     * Loads users saved tasks if any","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"Thiolk"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"Thiolk"},"content":"     * @param folderPath The folder where the user\u0027s saved file is kept.","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"Thiolk"},"content":"     * @param filePath the file which contains the user\u0027s saved tasks.","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"Thiolk"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"Thiolk"},"content":"    public Duke(String folderPath, String filePath) {","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"Thiolk"},"content":"        ui \u003d new UI();","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"Thiolk"},"content":"        storage \u003d new Storage(folderPath, filePath);","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"Thiolk"},"content":"        try {","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"Thiolk"},"content":"            listOfTasks \u003d new TaskList(storage.initialiseDuke());","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"Thiolk"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"Thiolk"},"content":"            System.out.println(e);","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"Thiolk"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"Thiolk"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"Thiolk"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"Thiolk"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"Thiolk"},"content":"     * Starts ChatBot and reads in user input","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"Thiolk"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"Thiolk"},"content":"    public void run() {","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"Thiolk"},"content":"        UI.printHelloMessage();","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"Thiolk"},"content":"        String input;","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"Thiolk"},"content":"        do {","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"Thiolk"},"content":"            ui.printHorizontalLine();","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"Thiolk"},"content":"            Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"Thiolk"},"content":"            input \u003d in.nextLine();","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"Thiolk"},"content":"            ui.printHorizontalLine();","lastModifiedDate":"2023-02-12"},{"lineNumber":39,"author":{"gitId":"Thiolk"},"content":"            Parser.checkInput(input, listOfTasks.getTaskList());","lastModifiedDate":"2023-02-12"},{"lineNumber":40,"author":{"gitId":"Thiolk"},"content":"        } while (!input.equals(\"bye\"));","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"Thiolk"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":42,"author":{"gitId":"Thiolk"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":43,"author":{"gitId":"Thiolk"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":44,"author":{"gitId":"Thiolk"},"content":"     * Exits ChatBot and saves user\u0027s inputted task into a local file","lastModifiedDate":"2023-02-13"},{"lineNumber":45,"author":{"gitId":"Thiolk"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":46,"author":{"gitId":"Thiolk"},"content":"    public void exit() {","lastModifiedDate":"2023-02-12"},{"lineNumber":47,"author":{"gitId":"Thiolk"},"content":"        try {","lastModifiedDate":"2023-02-11"},{"lineNumber":48,"author":{"gitId":"Thiolk"},"content":"            storage.saveTasks(listOfTasks.getTaskList());","lastModifiedDate":"2023-02-12"},{"lineNumber":49,"author":{"gitId":"Thiolk"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-11"},{"lineNumber":50,"author":{"gitId":"Thiolk"},"content":"            System.out.println(\"File not found\");","lastModifiedDate":"2023-02-11"},{"lineNumber":51,"author":{"gitId":"Thiolk"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":52,"author":{"gitId":"Thiolk"},"content":"        ui.printGoodbyeMessage();","lastModifiedDate":"2023-02-12"},{"lineNumber":53,"author":{"gitId":"Thiolk"},"content":"        ui.printHorizontalLine();","lastModifiedDate":"2023-02-12"},{"lineNumber":54,"author":{"gitId":"Thiolk"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":55,"author":{"gitId":"Thiolk"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-12"},{"lineNumber":57,"author":{"gitId":"Thiolk"},"content":"        String homePath \u003d System.getProperty(\"user.home\") + \"/Desktop\";","lastModifiedDate":"2023-02-12"},{"lineNumber":58,"author":{"gitId":"Thiolk"},"content":"        String folderPath \u003d homePath + \"/data\";","lastModifiedDate":"2023-02-12"},{"lineNumber":59,"author":{"gitId":"Thiolk"},"content":"        String filePath \u003d folderPath + \"/duke.txt\";","lastModifiedDate":"2023-02-12"},{"lineNumber":60,"author":{"gitId":"Thiolk"},"content":"        Duke ChatBot \u003d new Duke(folderPath, filePath);","lastModifiedDate":"2023-02-12"},{"lineNumber":61,"author":{"gitId":"Thiolk"},"content":"        ChatBot.run();","lastModifiedDate":"2023-02-12"},{"lineNumber":62,"author":{"gitId":"Thiolk"},"content":"        ChatBot.exit();","lastModifiedDate":"2023-02-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Thiolk":60,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Thiolk"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"Thiolk"},"content":" * Represents an exception that will print a Duke Chat Bot specific error message.","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"Thiolk"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"Thiolk"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"Thiolk"},"content":"    protected String errorMessage;","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"Thiolk"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"Thiolk"},"content":"    public DukeException (String errorMessage) {","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"Thiolk"},"content":"        this.errorMessage \u003d errorMessage;","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"Thiolk"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"Thiolk"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"Thiolk":10}},{"path":"src/main/java/DukeExceptionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Thiolk"},"content":"public class DukeExceptionTest {","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"Thiolk"},"content":"    public static void checkMissingTodoName (String input) throws MissingTaskNameException{","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"Thiolk"},"content":"        String[] inputs \u003d input.split(\" \");","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"Thiolk"},"content":"        if (inputs.length \u003c 2) {","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"Thiolk"},"content":"            throw new MissingTaskNameException(\"☹ OOPS!!! Please input the name of the todo task.\");","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"Thiolk"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"Thiolk"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"Thiolk"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"Thiolk":8}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Thiolk"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"Thiolk"},"content":" * Represents a special task that has a start date or time and an end date or time.","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"Thiolk"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"Thiolk"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"Thiolk"},"content":"    protected String start;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"Thiolk"},"content":"    protected String end;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"Thiolk"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"Thiolk"},"content":"    public Event(String name, boolean isCompleted, String start, String end) {","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"Thiolk"},"content":"        super(name, isCompleted);","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"Thiolk"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"Thiolk"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"Thiolk"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"Thiolk"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"Thiolk"},"content":"    public String getStart() {","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"Thiolk"},"content":"        return start;","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"Thiolk"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"Thiolk"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"Thiolk"},"content":"    public String getEnd() {","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"Thiolk"},"content":"        return end;","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"Thiolk"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"Thiolk"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"Thiolk"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"Thiolk"},"content":"    public String toString() {","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"Thiolk"},"content":"        return \"[E]\" + super.toString() + (\" (from: \" + start + \" to: \" + end + \")\");","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"Thiolk"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"Thiolk"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"Thiolk":26}},{"path":"src/main/java/InvalidTaskTypeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Thiolk"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"Thiolk"},"content":" * Represents an exception that is thrown when the user inputs a type of task that is not Todo, Event or Deadline.","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"Thiolk"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"Thiolk"},"content":"public class InvalidTaskTypeException extends DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"Thiolk"},"content":"    public InvalidTaskTypeException (String errorMessage) {","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"Thiolk"},"content":"        super(errorMessage);","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"Thiolk"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"Thiolk"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"Thiolk"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"Thiolk"},"content":"    public String toString() {","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"Thiolk"},"content":"        return errorMessage;","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"Thiolk"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"Thiolk"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"Thiolk":13}},{"path":"src/main/java/MissingTaskNameException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Thiolk"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"Thiolk"},"content":" * Represents an exception when the user inputs a correct Task type but missing task name.","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"Thiolk"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"Thiolk"},"content":"public class MissingTaskNameException extends DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"Thiolk"},"content":"    public MissingTaskNameException (String errorMessage) {","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"Thiolk"},"content":"        super(errorMessage);","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"Thiolk"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"Thiolk"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"Thiolk"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"Thiolk"},"content":"    public String toString() {","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"Thiolk"},"content":"        return errorMessage;","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"Thiolk"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"Thiolk"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"Thiolk":13}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Thiolk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"Thiolk"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"Thiolk"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"Thiolk"},"content":" * Represents a checker that validates and categorise all user inputs","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"Thiolk"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"Thiolk"},"content":"public class Parser {","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"Thiolk"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"Thiolk"},"content":"     * checks user input for valid commands.","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"Thiolk"},"content":"     * If no valid command is found, user is attempting to input task and check for task type.","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"Thiolk"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"Thiolk"},"content":"     * @param input the user input.","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"Thiolk"},"content":"     * @param listOfTasks the list of tasks that is currently in the ChatBot.","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"Thiolk"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"Thiolk"},"content":"    public static void checkInput(String input, ArrayList\u003cTask\u003e listOfTasks) {","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"Thiolk"},"content":"        String[] inputs \u003d input.split(\" \");","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"Thiolk"},"content":"        switch (inputs[0]) {","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"Thiolk"},"content":"        case \"bye\":","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"Thiolk"},"content":"            break;","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"Thiolk"},"content":"        case \"list\":","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"Thiolk"},"content":"            TaskList.listTasks(listOfTasks);","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"Thiolk"},"content":"            break;","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"Thiolk"},"content":"        case \"mark\":","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"Thiolk"},"content":"            Task taskToBeMarked \u003d listOfTasks.get(Integer.parseInt(inputs[1]) - 1);","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"Thiolk"},"content":"            taskToBeMarked.setStatus(true);","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"Thiolk"},"content":"            UI.printUpdateStatusMessage(taskToBeMarked.getStatus(), taskToBeMarked);","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"Thiolk"},"content":"            break;","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"Thiolk"},"content":"        case \"unmark\":","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"Thiolk"},"content":"            Task taskToBeUnmarked \u003d listOfTasks.get(Integer.parseInt(inputs[1]) - 1);","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"Thiolk"},"content":"            taskToBeUnmarked.setStatus(false);","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"Thiolk"},"content":"            UI.printUpdateStatusMessage(taskToBeUnmarked.getStatus(), taskToBeUnmarked);","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"Thiolk"},"content":"            break;","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"Thiolk"},"content":"        case \"delete\":","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"Thiolk"},"content":"            int taskNumber \u003d Integer.parseInt(inputs[1]) - 1;","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"Thiolk"},"content":"            TaskList.deleteTask(taskNumber, listOfTasks);","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"Thiolk"},"content":"            break;","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"Thiolk"},"content":"        case \"find\":","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"Thiolk"},"content":"            TaskList.findTask(input, listOfTasks);","lastModifiedDate":"2023-02-13"},{"lineNumber":38,"author":{"gitId":"Thiolk"},"content":"            break;","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"Thiolk"},"content":"        default:","lastModifiedDate":"2023-02-12"},{"lineNumber":40,"author":{"gitId":"Thiolk"},"content":"            try {","lastModifiedDate":"2023-02-12"},{"lineNumber":41,"author":{"gitId":"Thiolk"},"content":"                Parser.checkTaskType(input, listOfTasks);","lastModifiedDate":"2023-02-12"},{"lineNumber":42,"author":{"gitId":"Thiolk"},"content":"                break;","lastModifiedDate":"2023-02-12"},{"lineNumber":43,"author":{"gitId":"Thiolk"},"content":"            } catch (InvalidTaskTypeException e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":44,"author":{"gitId":"Thiolk"},"content":"                System.out.println(e);","lastModifiedDate":"2023-02-12"},{"lineNumber":45,"author":{"gitId":"Thiolk"},"content":"            }","lastModifiedDate":"2023-02-12"},{"lineNumber":46,"author":{"gitId":"Thiolk"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":47,"author":{"gitId":"Thiolk"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":48,"author":{"gitId":"Thiolk"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":49,"author":{"gitId":"Thiolk"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":50,"author":{"gitId":"Thiolk"},"content":"     * Checks for valid task type in user input.","lastModifiedDate":"2023-02-13"},{"lineNumber":51,"author":{"gitId":"Thiolk"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":52,"author":{"gitId":"Thiolk"},"content":"     * @param input the user input.","lastModifiedDate":"2023-02-13"},{"lineNumber":53,"author":{"gitId":"Thiolk"},"content":"     * @param listOfTasks the list of tasks that is currently in the ChatBot.","lastModifiedDate":"2023-02-13"},{"lineNumber":54,"author":{"gitId":"Thiolk"},"content":"     * @throws InvalidTaskTypeException if task is not todo, deadline or event.","lastModifiedDate":"2023-02-13"},{"lineNumber":55,"author":{"gitId":"Thiolk"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":56,"author":{"gitId":"Thiolk"},"content":"    public static void checkTaskType(String input, ArrayList\u003cTask\u003e listOfTasks) throws InvalidTaskTypeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":57,"author":{"gitId":"Thiolk"},"content":"        String taskType \u003d input;","lastModifiedDate":"2023-02-12"},{"lineNumber":58,"author":{"gitId":"Thiolk"},"content":"        int endTaskTypeIndex \u003d input.indexOf(\" \");","lastModifiedDate":"2023-02-12"},{"lineNumber":59,"author":{"gitId":"Thiolk"},"content":"        if (endTaskTypeIndex \u003e 0) {","lastModifiedDate":"2023-02-12"},{"lineNumber":60,"author":{"gitId":"Thiolk"},"content":"            taskType \u003d input.substring(0, endTaskTypeIndex);","lastModifiedDate":"2023-02-12"},{"lineNumber":61,"author":{"gitId":"Thiolk"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":62,"author":{"gitId":"Thiolk"},"content":"        switch (taskType) {","lastModifiedDate":"2023-02-12"},{"lineNumber":63,"author":{"gitId":"Thiolk"},"content":"        case \"todo\":","lastModifiedDate":"2023-02-12"},{"lineNumber":64,"author":{"gitId":"Thiolk"},"content":"            TaskList.addTodoToList(input, listOfTasks);","lastModifiedDate":"2023-02-12"},{"lineNumber":65,"author":{"gitId":"Thiolk"},"content":"            break;","lastModifiedDate":"2023-02-12"},{"lineNumber":66,"author":{"gitId":"Thiolk"},"content":"        case \"deadline\":","lastModifiedDate":"2023-02-12"},{"lineNumber":67,"author":{"gitId":"Thiolk"},"content":"            TaskList.addDeadlineToList(input, listOfTasks);","lastModifiedDate":"2023-02-12"},{"lineNumber":68,"author":{"gitId":"Thiolk"},"content":"            break;","lastModifiedDate":"2023-02-12"},{"lineNumber":69,"author":{"gitId":"Thiolk"},"content":"        case \"event\":","lastModifiedDate":"2023-02-12"},{"lineNumber":70,"author":{"gitId":"Thiolk"},"content":"            TaskList.addEventToList(input, listOfTasks);","lastModifiedDate":"2023-02-12"},{"lineNumber":71,"author":{"gitId":"Thiolk"},"content":"            break;","lastModifiedDate":"2023-02-12"},{"lineNumber":72,"author":{"gitId":"Thiolk"},"content":"        default:","lastModifiedDate":"2023-02-12"},{"lineNumber":73,"author":{"gitId":"Thiolk"},"content":"            throw new InvalidTaskTypeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-02-12"},{"lineNumber":74,"author":{"gitId":"Thiolk"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":75,"author":{"gitId":"Thiolk"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":76,"author":{"gitId":"Thiolk"},"content":"}","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"Thiolk":76}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Thiolk"},"content":"import java.io.File;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"Thiolk"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"Thiolk"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"Thiolk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"Thiolk"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"Thiolk"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"Thiolk"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"Thiolk"},"content":" * Represents Duke ChatBot storage","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"Thiolk"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"Thiolk"},"content":"public class Storage {","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"Thiolk"},"content":"    private String filePath;","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"Thiolk"},"content":"    private String folderPath;","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"Thiolk"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"Thiolk"},"content":"    public Storage(String folderPath, String filePath) {","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"Thiolk"},"content":"        this.folderPath \u003d folderPath;","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"Thiolk"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"Thiolk"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"Thiolk"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"Thiolk"},"content":"    public String getFilePath() {","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"Thiolk"},"content":"        return filePath;","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"Thiolk"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"Thiolk"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"Thiolk"},"content":"    public String getFolderPath() {","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"Thiolk"},"content":"        return folderPath;","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"Thiolk"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"Thiolk"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"Thiolk"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"Thiolk"},"content":"     * Returns an ArrayList that acts as the list of task that the user has saved previously.","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"Thiolk"},"content":"     * If it\u0027s a first time, returns empty list.","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"Thiolk"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"Thiolk"},"content":"     * @return List of tasks previously saved, else return empty list.","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"Thiolk"},"content":"     * @throws IOException If file is not found.","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"Thiolk"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"Thiolk"},"content":"    public ArrayList\u003cTask\u003e initialiseDuke()  throws IOException {","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"Thiolk"},"content":"        ArrayList\u003cTask\u003e savedTaskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"Thiolk"},"content":"        new File(getFolderPath()).mkdir();","lastModifiedDate":"2023-02-12"},{"lineNumber":37,"author":{"gitId":"Thiolk"},"content":"        File dukeDataFile \u003d new File(getFilePath());","lastModifiedDate":"2023-02-12"},{"lineNumber":38,"author":{"gitId":"Thiolk"},"content":"        new File(getFilePath()).createNewFile();","lastModifiedDate":"2023-02-12"},{"lineNumber":39,"author":{"gitId":"Thiolk"},"content":"        try {","lastModifiedDate":"2023-02-12"},{"lineNumber":40,"author":{"gitId":"Thiolk"},"content":"            loadSavedData(dukeDataFile, savedTaskList);","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"Thiolk"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":42,"author":{"gitId":"Thiolk"},"content":"            System.out.println(e);","lastModifiedDate":"2023-02-12"},{"lineNumber":43,"author":{"gitId":"Thiolk"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":44,"author":{"gitId":"Thiolk"},"content":"        return savedTaskList;","lastModifiedDate":"2023-02-13"},{"lineNumber":45,"author":{"gitId":"Thiolk"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":46,"author":{"gitId":"Thiolk"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":47,"author":{"gitId":"Thiolk"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":48,"author":{"gitId":"Thiolk"},"content":"     * Puts all the user\u0027s previously saved tasks into an ArrayList.","lastModifiedDate":"2023-02-13"},{"lineNumber":49,"author":{"gitId":"Thiolk"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":50,"author":{"gitId":"Thiolk"},"content":"     * @param dukeDataFile The file which contains the user\u0027s saved tasks.","lastModifiedDate":"2023-02-13"},{"lineNumber":51,"author":{"gitId":"Thiolk"},"content":"     * @param savedTaskList List where all the user\u0027s saved task will be added to.","lastModifiedDate":"2023-02-13"},{"lineNumber":52,"author":{"gitId":"Thiolk"},"content":"     * @throws IOException If file is not found.","lastModifiedDate":"2023-02-13"},{"lineNumber":53,"author":{"gitId":"Thiolk"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":54,"author":{"gitId":"Thiolk"},"content":"    public void loadSavedData(File dukeDataFile, ArrayList\u003cTask\u003e savedTaskList) throws IOException {","lastModifiedDate":"2023-02-13"},{"lineNumber":55,"author":{"gitId":"Thiolk"},"content":"        Scanner dukeData \u003d new Scanner(dukeDataFile);","lastModifiedDate":"2023-02-12"},{"lineNumber":56,"author":{"gitId":"Thiolk"},"content":"        while (dukeData.hasNextLine()) {","lastModifiedDate":"2023-02-12"},{"lineNumber":57,"author":{"gitId":"Thiolk"},"content":"            try {","lastModifiedDate":"2023-02-12"},{"lineNumber":58,"author":{"gitId":"Thiolk"},"content":"                Parser.checkTaskType(dukeData.nextLine(), savedTaskList);","lastModifiedDate":"2023-02-13"},{"lineNumber":59,"author":{"gitId":"Thiolk"},"content":"                UI.printHorizontalLine();","lastModifiedDate":"2023-02-12"},{"lineNumber":60,"author":{"gitId":"Thiolk"},"content":"            } catch (InvalidTaskTypeException e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":61,"author":{"gitId":"Thiolk"},"content":"                System.out.println(e);","lastModifiedDate":"2023-02-12"},{"lineNumber":62,"author":{"gitId":"Thiolk"},"content":"            }","lastModifiedDate":"2023-02-12"},{"lineNumber":63,"author":{"gitId":"Thiolk"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":64,"author":{"gitId":"Thiolk"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":65,"author":{"gitId":"Thiolk"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":66,"author":{"gitId":"Thiolk"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":67,"author":{"gitId":"Thiolk"},"content":"     * Saves task that user has inputted in the current session into local file","lastModifiedDate":"2023-02-13"},{"lineNumber":68,"author":{"gitId":"Thiolk"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":69,"author":{"gitId":"Thiolk"},"content":"     * @param listOfTasks","lastModifiedDate":"2023-02-13"},{"lineNumber":70,"author":{"gitId":"Thiolk"},"content":"     * @throws IOException","lastModifiedDate":"2023-02-13"},{"lineNumber":71,"author":{"gitId":"Thiolk"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":72,"author":{"gitId":"Thiolk"},"content":"    public void saveTasks(ArrayList\u003cTask\u003e listOfTasks) throws IOException {","lastModifiedDate":"2023-02-12"},{"lineNumber":73,"author":{"gitId":"Thiolk"},"content":"        String content \u003d \"\";","lastModifiedDate":"2023-02-12"},{"lineNumber":74,"author":{"gitId":"Thiolk"},"content":"        for (Task task : listOfTasks) {","lastModifiedDate":"2023-02-12"},{"lineNumber":75,"author":{"gitId":"Thiolk"},"content":"            content +\u003d formatContentToBeSaved(task);","lastModifiedDate":"2023-02-12"},{"lineNumber":76,"author":{"gitId":"Thiolk"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":77,"author":{"gitId":"Thiolk"},"content":"        FileWriter fileToWriteTo \u003d new FileWriter(getFilePath());","lastModifiedDate":"2023-02-12"},{"lineNumber":78,"author":{"gitId":"Thiolk"},"content":"        fileToWriteTo.write(content);","lastModifiedDate":"2023-02-12"},{"lineNumber":79,"author":{"gitId":"Thiolk"},"content":"        fileToWriteTo.close();","lastModifiedDate":"2023-02-12"},{"lineNumber":80,"author":{"gitId":"Thiolk"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":81,"author":{"gitId":"Thiolk"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":82,"author":{"gitId":"Thiolk"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":83,"author":{"gitId":"Thiolk"},"content":"     * Formats the content into a user input so that the bot is able to initialise it next time.","lastModifiedDate":"2023-02-13"},{"lineNumber":84,"author":{"gitId":"Thiolk"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":85,"author":{"gitId":"Thiolk"},"content":"     * @param task The current task to be saved.","lastModifiedDate":"2023-02-13"},{"lineNumber":86,"author":{"gitId":"Thiolk"},"content":"     * @return The current task details in the proper format","lastModifiedDate":"2023-02-13"},{"lineNumber":87,"author":{"gitId":"Thiolk"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":88,"author":{"gitId":"Thiolk"},"content":"    public static String formatContentToBeSaved (Task task) {","lastModifiedDate":"2023-02-12"},{"lineNumber":89,"author":{"gitId":"Thiolk"},"content":"        String content \u003d \"\";","lastModifiedDate":"2023-02-12"},{"lineNumber":90,"author":{"gitId":"Thiolk"},"content":"        String type;","lastModifiedDate":"2023-02-12"},{"lineNumber":91,"author":{"gitId":"Thiolk"},"content":"        if (task instanceof Todo) {","lastModifiedDate":"2023-02-12"},{"lineNumber":92,"author":{"gitId":"Thiolk"},"content":"            type \u003d \"todo\";","lastModifiedDate":"2023-02-12"},{"lineNumber":93,"author":{"gitId":"Thiolk"},"content":"            content \u003d type + \" \" + task.getName();","lastModifiedDate":"2023-02-12"},{"lineNumber":94,"author":{"gitId":"Thiolk"},"content":"        } else if (task instanceof Deadline) {","lastModifiedDate":"2023-02-12"},{"lineNumber":95,"author":{"gitId":"Thiolk"},"content":"            type \u003d \"deadline\";","lastModifiedDate":"2023-02-12"},{"lineNumber":96,"author":{"gitId":"Thiolk"},"content":"            content \u003d type + \" \" + task.getName() + \" /by \" + ((Deadline) task).getBy();","lastModifiedDate":"2023-02-12"},{"lineNumber":97,"author":{"gitId":"Thiolk"},"content":"        } else {","lastModifiedDate":"2023-02-12"},{"lineNumber":98,"author":{"gitId":"Thiolk"},"content":"            type \u003d \"event\";","lastModifiedDate":"2023-02-12"},{"lineNumber":99,"author":{"gitId":"Thiolk"},"content":"            content \u003d type + \" \" + task.getName() + \" /from \" + ((Event) task).getStart()","lastModifiedDate":"2023-02-12"},{"lineNumber":100,"author":{"gitId":"Thiolk"},"content":"                    + \" /to \" + ((Event) task).getEnd();","lastModifiedDate":"2023-02-12"},{"lineNumber":101,"author":{"gitId":"Thiolk"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":102,"author":{"gitId":"Thiolk"},"content":"        return content + \"\\n\";","lastModifiedDate":"2023-02-12"},{"lineNumber":103,"author":{"gitId":"Thiolk"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":104,"author":{"gitId":"Thiolk"},"content":"}","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"Thiolk":104}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Thiolk"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"Thiolk"},"content":" * Represents a user inputted task.","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"Thiolk"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"Thiolk"},"content":"public class Task {","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"Thiolk"},"content":"    private String name;","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"Thiolk"},"content":"    private boolean isCompleted;","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"Thiolk"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"Thiolk"},"content":"    public Task(String name, boolean isCompleted) {","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"Thiolk"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"Thiolk"},"content":"        this.isCompleted \u003d isCompleted;","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"Thiolk"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"Thiolk"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"Thiolk"},"content":"    public boolean getStatus() {","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"Thiolk"},"content":"        return isCompleted;","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"Thiolk"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"Thiolk"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"Thiolk"},"content":"    public String getName() {","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"Thiolk"},"content":"        return name;","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"Thiolk"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"Thiolk"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"Thiolk"},"content":"    public void setStatus(boolean isCompleted) {","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"Thiolk"},"content":"        this.isCompleted \u003d isCompleted;","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"Thiolk"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"Thiolk"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":25,"author":{"gitId":"Thiolk"},"content":"    public String toString() {","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"Thiolk"},"content":"        if (this.isCompleted) {","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"Thiolk"},"content":"            return \"[X] \" + this.name;","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"Thiolk"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"Thiolk"},"content":"        return \"[ ] \" + this.name;","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"Thiolk"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":31,"author":{"gitId":"Thiolk"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"Thiolk":31}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Thiolk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"Thiolk"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"Thiolk"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"Thiolk"},"content":" * Represents a list of tasks that the user currently has inputted into the ChatBot","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"Thiolk"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"Thiolk"},"content":"public class TaskList {","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"Thiolk"},"content":"    private ArrayList\u003cTask\u003e listOfTasks;","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"Thiolk"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"Thiolk"},"content":"    public TaskList(ArrayList\u003cTask\u003e listOfTasks) {","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"Thiolk"},"content":"        this.listOfTasks \u003d listOfTasks;","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"Thiolk"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"Thiolk"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"Thiolk"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"Thiolk"},"content":"        return listOfTasks;","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"Thiolk"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"Thiolk"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"Thiolk"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"Thiolk"},"content":"     * Lists all tasks that user has currently inputted in the current session.","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"Thiolk"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"Thiolk"},"content":"     * @param listOfTasks list of tasks in the current session.","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"Thiolk"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"Thiolk"},"content":"    public static void listTasks(ArrayList\u003cTask\u003e listOfTasks) {","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"Thiolk"},"content":"        for (int i \u003d 0; i \u003c listOfTasks.size(); i++) {","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"Thiolk"},"content":"            System.out.println((i + 1) + \".\" + listOfTasks.get(i));","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"Thiolk"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"Thiolk"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"Thiolk"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"Thiolk"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"Thiolk"},"content":"     * Adds Todo task type to current list of task.","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"Thiolk"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"Thiolk"},"content":"     * @param input user input.","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"Thiolk"},"content":"     * @param listOfTasks list of tasks in the current session.","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"Thiolk"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"Thiolk"},"content":"    public static void addTodoToList(String input, ArrayList\u003cTask\u003e listOfTasks) {","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"Thiolk"},"content":"        try {","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"Thiolk"},"content":"            DukeExceptionTest.checkMissingTodoName(input);","lastModifiedDate":"2023-02-12"},{"lineNumber":37,"author":{"gitId":"Thiolk"},"content":"        } catch (MissingTaskNameException e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":38,"author":{"gitId":"Thiolk"},"content":"            System.out.println(e);","lastModifiedDate":"2023-02-12"},{"lineNumber":39,"author":{"gitId":"Thiolk"},"content":"            return;","lastModifiedDate":"2023-02-12"},{"lineNumber":40,"author":{"gitId":"Thiolk"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":41,"author":{"gitId":"Thiolk"},"content":"        int nameStartIndex \u003d input.indexOf(\" \");","lastModifiedDate":"2023-02-12"},{"lineNumber":42,"author":{"gitId":"Thiolk"},"content":"        String name \u003d input.substring(nameStartIndex + 1);","lastModifiedDate":"2023-02-12"},{"lineNumber":43,"author":{"gitId":"Thiolk"},"content":"        Task todo \u003d new Todo(name, false);","lastModifiedDate":"2023-02-12"},{"lineNumber":44,"author":{"gitId":"Thiolk"},"content":"        listOfTasks.add(todo);","lastModifiedDate":"2023-02-12"},{"lineNumber":45,"author":{"gitId":"Thiolk"},"content":"        UI.printAddTaskMessage(todo, listOfTasks);","lastModifiedDate":"2023-02-12"},{"lineNumber":46,"author":{"gitId":"Thiolk"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":47,"author":{"gitId":"Thiolk"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":48,"author":{"gitId":"Thiolk"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":49,"author":{"gitId":"Thiolk"},"content":"     * Adds Deadline task type to current list of task.","lastModifiedDate":"2023-02-13"},{"lineNumber":50,"author":{"gitId":"Thiolk"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":51,"author":{"gitId":"Thiolk"},"content":"     * @param input user input.","lastModifiedDate":"2023-02-13"},{"lineNumber":52,"author":{"gitId":"Thiolk"},"content":"     * @param listOfTasks list of tasks in the current session.","lastModifiedDate":"2023-02-13"},{"lineNumber":53,"author":{"gitId":"Thiolk"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":54,"author":{"gitId":"Thiolk"},"content":"    public static void addDeadlineToList(String input, ArrayList\u003cTask\u003e listOfTasks) {","lastModifiedDate":"2023-02-12"},{"lineNumber":55,"author":{"gitId":"Thiolk"},"content":"        int nameStartIndex \u003d input.indexOf(\" \");","lastModifiedDate":"2023-02-12"},{"lineNumber":56,"author":{"gitId":"Thiolk"},"content":"        int nameEndIndex \u003d input.indexOf(\"/by\");","lastModifiedDate":"2023-02-12"},{"lineNumber":57,"author":{"gitId":"Thiolk"},"content":"        String name \u003d input.substring(nameStartIndex + 1, nameEndIndex -1);","lastModifiedDate":"2023-02-12"},{"lineNumber":58,"author":{"gitId":"Thiolk"},"content":"        String dueDate \u003d input.substring(nameEndIndex + 4);","lastModifiedDate":"2023-02-12"},{"lineNumber":59,"author":{"gitId":"Thiolk"},"content":"        Task deadline \u003d new Deadline(name, false, dueDate);","lastModifiedDate":"2023-02-12"},{"lineNumber":60,"author":{"gitId":"Thiolk"},"content":"        listOfTasks.add(deadline);","lastModifiedDate":"2023-02-12"},{"lineNumber":61,"author":{"gitId":"Thiolk"},"content":"        UI.printAddTaskMessage(deadline, listOfTasks);","lastModifiedDate":"2023-02-12"},{"lineNumber":62,"author":{"gitId":"Thiolk"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":63,"author":{"gitId":"Thiolk"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":64,"author":{"gitId":"Thiolk"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":65,"author":{"gitId":"Thiolk"},"content":"     * Adds Event task type to current list of task.","lastModifiedDate":"2023-02-13"},{"lineNumber":66,"author":{"gitId":"Thiolk"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":67,"author":{"gitId":"Thiolk"},"content":"     * @param input user input.","lastModifiedDate":"2023-02-13"},{"lineNumber":68,"author":{"gitId":"Thiolk"},"content":"     * @param listOfTasks list of tasks in the current session.","lastModifiedDate":"2023-02-13"},{"lineNumber":69,"author":{"gitId":"Thiolk"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":70,"author":{"gitId":"Thiolk"},"content":"    public static void addEventToList(String input, ArrayList\u003cTask\u003e listOfTasks) {","lastModifiedDate":"2023-02-12"},{"lineNumber":71,"author":{"gitId":"Thiolk"},"content":"        int nameStartIndex \u003d input.indexOf(\" \");","lastModifiedDate":"2023-02-12"},{"lineNumber":72,"author":{"gitId":"Thiolk"},"content":"        int nameEndIndex \u003d input.indexOf(\"/from\");","lastModifiedDate":"2023-02-12"},{"lineNumber":73,"author":{"gitId":"Thiolk"},"content":"        String name \u003d input.substring(nameStartIndex + 1, nameEndIndex - 1);","lastModifiedDate":"2023-02-12"},{"lineNumber":74,"author":{"gitId":"Thiolk"},"content":"        String remainingInfo \u003d input.substring(nameEndIndex + 6);","lastModifiedDate":"2023-02-12"},{"lineNumber":75,"author":{"gitId":"Thiolk"},"content":"        int toIndex \u003d remainingInfo.indexOf(\"/to\");","lastModifiedDate":"2023-02-12"},{"lineNumber":76,"author":{"gitId":"Thiolk"},"content":"        String eventStart \u003d remainingInfo.substring(0, toIndex - 1);","lastModifiedDate":"2023-02-12"},{"lineNumber":77,"author":{"gitId":"Thiolk"},"content":"        String eventEnd \u003d remainingInfo.substring(toIndex + 4);","lastModifiedDate":"2023-02-12"},{"lineNumber":78,"author":{"gitId":"Thiolk"},"content":"        Task event \u003d new Event(name, false, eventStart, eventEnd);","lastModifiedDate":"2023-02-12"},{"lineNumber":79,"author":{"gitId":"Thiolk"},"content":"        listOfTasks.add(event);","lastModifiedDate":"2023-02-12"},{"lineNumber":80,"author":{"gitId":"Thiolk"},"content":"        UI.printAddTaskMessage(event, listOfTasks);","lastModifiedDate":"2023-02-12"},{"lineNumber":81,"author":{"gitId":"Thiolk"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":82,"author":{"gitId":"Thiolk"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":83,"author":{"gitId":"Thiolk"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":84,"author":{"gitId":"Thiolk"},"content":"     * Deletes task in the current list of task.","lastModifiedDate":"2023-02-13"},{"lineNumber":85,"author":{"gitId":"Thiolk"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":86,"author":{"gitId":"Thiolk"},"content":"     * @param taskNumber the xth numbered task in the current session.","lastModifiedDate":"2023-02-13"},{"lineNumber":87,"author":{"gitId":"Thiolk"},"content":"     * @param listOfTasks list of tasks in the current session.","lastModifiedDate":"2023-02-13"},{"lineNumber":88,"author":{"gitId":"Thiolk"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":89,"author":{"gitId":"Thiolk"},"content":"    public static void deleteTask(int taskNumber, ArrayList\u003cTask\u003e listOfTasks) {","lastModifiedDate":"2023-02-12"},{"lineNumber":90,"author":{"gitId":"Thiolk"},"content":"        UI.printDeleteTaskMessage(taskNumber, listOfTasks);","lastModifiedDate":"2023-02-12"},{"lineNumber":91,"author":{"gitId":"Thiolk"},"content":"        listOfTasks.remove(taskNumber);","lastModifiedDate":"2023-02-12"},{"lineNumber":92,"author":{"gitId":"Thiolk"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":93,"author":{"gitId":"Thiolk"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":94,"author":{"gitId":"Thiolk"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":95,"author":{"gitId":"Thiolk"},"content":"     * List all tasks in the current list of task that matches the inputted keyword.","lastModifiedDate":"2023-02-13"},{"lineNumber":96,"author":{"gitId":"Thiolk"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":97,"author":{"gitId":"Thiolk"},"content":"     * @param input user input.","lastModifiedDate":"2023-02-13"},{"lineNumber":98,"author":{"gitId":"Thiolk"},"content":"     * @param listOfTasks list of tasks in the current session.","lastModifiedDate":"2023-02-13"},{"lineNumber":99,"author":{"gitId":"Thiolk"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":100,"author":{"gitId":"Thiolk"},"content":"    public static void findTask(String input, ArrayList\u003cTask\u003e listOfTasks) {","lastModifiedDate":"2023-02-13"},{"lineNumber":101,"author":{"gitId":"Thiolk"},"content":"        String keyword \u003d input.substring(input.indexOf(\" \") + 1);","lastModifiedDate":"2023-02-13"},{"lineNumber":102,"author":{"gitId":"Thiolk"},"content":"        for (int i \u003d 0; i \u003c listOfTasks.size(); i ++) {","lastModifiedDate":"2023-02-13"},{"lineNumber":103,"author":{"gitId":"Thiolk"},"content":"            String taskName \u003d listOfTasks.get(i).getName();","lastModifiedDate":"2023-02-13"},{"lineNumber":104,"author":{"gitId":"Thiolk"},"content":"            if (taskName.contains(keyword)) {","lastModifiedDate":"2023-02-13"},{"lineNumber":105,"author":{"gitId":"Thiolk"},"content":"                UI.printFindTaskMessage(i+1, listOfTasks.get(i));","lastModifiedDate":"2023-02-13"},{"lineNumber":106,"author":{"gitId":"Thiolk"},"content":"            }","lastModifiedDate":"2023-02-13"},{"lineNumber":107,"author":{"gitId":"Thiolk"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":108,"author":{"gitId":"Thiolk"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":109,"author":{"gitId":"Thiolk"},"content":"}","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"Thiolk":109}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Thiolk"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"Thiolk"},"content":" * Represents a special type of task that has no deadline.","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"Thiolk"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"Thiolk"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"Thiolk"},"content":"    public Todo(String name, boolean isCompleted) {","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"Thiolk"},"content":"        super(name, isCompleted);","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"Thiolk"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"Thiolk"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"Thiolk"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"Thiolk"},"content":"    public String toString() {","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"Thiolk"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"Thiolk"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"Thiolk"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"Thiolk":13}},{"path":"src/main/java/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Thiolk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"Thiolk"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"Thiolk"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"Thiolk"},"content":" * Represents all the outputs that the ChatBot can display to the user so the user understands the current state of","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"Thiolk"},"content":" * the ChatBot.","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"Thiolk"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"Thiolk"},"content":"public class UI {","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"Thiolk"},"content":"    public static void printHorizontalLine() {","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"Thiolk"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"Thiolk"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"Thiolk"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"Thiolk"},"content":"    public static void printHelloMessage() {","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"Thiolk"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"Thiolk"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"Thiolk"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"Thiolk"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"Thiolk"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"Thiolk"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"Thiolk"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"Thiolk"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"Thiolk"},"content":"        System.out.println(\"All saved data has been loaded. What can I for you today?\");","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"Thiolk"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"Thiolk"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"Thiolk"},"content":"    public static void printUpdateStatusMessage(boolean isDone, Task currentTask) {","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"Thiolk"},"content":"        if (isDone) {","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"Thiolk"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"Thiolk"},"content":"        } else {","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"Thiolk"},"content":"            System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"Thiolk"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"Thiolk"},"content":"        System.out.println(\"  \" + currentTask);","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"Thiolk"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"Thiolk"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"Thiolk"},"content":"    public static void printAddTaskMessage(Task task, ArrayList\u003cTask\u003e listOfTasks) {","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"Thiolk"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"Thiolk"},"content":"        System.out.println(\"  \" + task);","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"Thiolk"},"content":"        System.out.println(\"Now you have \" + listOfTasks.size() + \" task in the list.\");","lastModifiedDate":"2023-02-12"},{"lineNumber":37,"author":{"gitId":"Thiolk"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":38,"author":{"gitId":"Thiolk"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":39,"author":{"gitId":"Thiolk"},"content":"    public static void printGoodbyeMessage() {","lastModifiedDate":"2023-02-12"},{"lineNumber":40,"author":{"gitId":"Thiolk"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-02-12"},{"lineNumber":41,"author":{"gitId":"Thiolk"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":42,"author":{"gitId":"Thiolk"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":43,"author":{"gitId":"Thiolk"},"content":"    public static void printDeleteTaskMessage(int taskNumber, ArrayList\u003cTask\u003e listOfTasks) {","lastModifiedDate":"2023-02-12"},{"lineNumber":44,"author":{"gitId":"Thiolk"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-02-12"},{"lineNumber":45,"author":{"gitId":"Thiolk"},"content":"        System.out.println(\"  \" + listOfTasks.get(taskNumber));","lastModifiedDate":"2023-02-12"},{"lineNumber":46,"author":{"gitId":"Thiolk"},"content":"        System.out.println(\"Now you have \" + (listOfTasks.size() - 1) + \" task in the list.\");","lastModifiedDate":"2023-02-12"},{"lineNumber":47,"author":{"gitId":"Thiolk"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":48,"author":{"gitId":"Thiolk"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":49,"author":{"gitId":"Thiolk"},"content":"    public static void printFindTaskMessage(int index, Task task) {","lastModifiedDate":"2023-02-13"},{"lineNumber":50,"author":{"gitId":"Thiolk"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-02-13"},{"lineNumber":51,"author":{"gitId":"Thiolk"},"content":"        System.out.println(index + \". \" + task);","lastModifiedDate":"2023-02-13"},{"lineNumber":52,"author":{"gitId":"Thiolk"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":53,"author":{"gitId":"Thiolk"},"content":"}","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"Thiolk":53}}]
