[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"liuziyang020319"},"content":"# DukeRobot project template","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"liuziyang020319"},"content":"3. After that, locate the `src/main/java/DukeRobot.java` file, right-click it, and choose `Run DukeRobot.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"liuziyang020319":2,"-":22}},{"path":"data/list.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"liuziyang020319"},"content":"T | 0 | join sports club","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"liuziyang020319"},"content":"T | 0 | borrow book","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"liuziyang020319"},"content":"T | 0 | swimming","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"liuziyang020319"},"content":"D | 0 | running | 2019-10-15","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"liuziyang020319"},"content":"D | 0 | jumping | not decided yet","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"liuziyang020319"},"content":"D | 1 | homework | 2019-12-02-1800","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"liuziyang020319"},"content":"E | 1 | greeting | 2019-10-14 | 2019-10-16","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"liuziyang020319"},"content":"T | 0 | play football","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"liuziyang020319"},"content":"D | 0 | Midterm assignment | not announce yet","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"liuziyang020319"},"content":"D | 0 | Final exam | 2019-10-15","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"liuziyang020319"},"content":"E | 0 | recess week | 2023-2-20 | 2023-2-27","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"liuziyang020319"},"content":"E | 0 | tour | 2023-02-20 | 2023-02-22","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"liuziyang020319":12}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"liuziyang020319"},"content":"\u003c!-- ---","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"liuziyang020319"},"content":"layout: page","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"liuziyang020319"},"content":"title: User Guide","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"liuziyang020319"},"content":"--- --\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"liuziyang020319"},"content":"\u003ch1\u003e User Guide \u003c/h1\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"liuziyang020319"},"content":"\u003ch2\u003e Introduction \u003c/h2\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"liuziyang020319"},"content":"Task Manager is a \u003cstrong\u003eCommand Line Interface(CLI) task manager application that helps you to manage your tasks\u003c/strong\u003e. If you are a fast typist, you can manage your tasks faster than traditional GUI apps.","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"liuziyang020319"},"content":"\u003ch2\u003e Table of Contents \u003c/h2\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"liuziyang020319"},"content":"* **[Quick Start](#quick-start)**","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"liuziyang020319"},"content":"* **[Features](#features)**","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"liuziyang020319"},"content":"    * **[Adding a task: `todo`](#adding-a-task-todo)**","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"liuziyang020319"},"content":"    * **[Adding a deadline: `deadline`](#adding-a-task-deadline)**","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"liuziyang020319"},"content":"    * **[Adding an event: `event`](#adding-a-task-event)**","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"liuziyang020319"},"content":"    * **[Listing all tasks: `list`](#listing-all-tasks-list)**","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"liuziyang020319"},"content":"    * **[Marking a task as done: `mark`](#marking-a-task-as-done-mark)**","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"liuziyang020319"},"content":"    * **[Unmarking a task as done: `unmark`](#unmarking-a-task-as-done-unmark)**","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"liuziyang020319"},"content":"    * **[Finding a task: `find`](#finding-a-task-find)**","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"liuziyang020319"},"content":"    * **[Deleting a task: `delete`](#deleting-a-task-delete)**","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"liuziyang020319"},"content":"    * **[Searching a task by date: `date`](#searching-a-task-by-date-date)**","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"liuziyang020319"},"content":"    * **[Exiting the program: `bye`](#exiting-the-program-bye)**","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"liuziyang020319"},"content":"* **[FAQ](#faq)**","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"liuziyang020319"},"content":"* **[Command Summary](#command-summary)**","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":25,"author":{"gitId":"liuziyang020319"},"content":"\u003ch2 id\u003d\"quick-start\"\u003e Quick Start\u003c/h2\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":27,"author":{"gitId":"liuziyang020319"},"content":"1. Enusure you have `Java 11` installed on your Computer.","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"liuziyang020319"},"content":"2. Download the latest `ip.jar` from here.","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"liuziyang020319"},"content":"3. Copy the file to the folder you want to use as home folder for the task manager.","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"liuziyang020319"},"content":"4. Use `Win+R` to open the command prompt and type `cmd` and press Enter.","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"liuziyang020319"},"content":"5. Then `cd` into the folder where you copied the jar file. e.g. `cd C:\\Users\\Lau\\Desktop\\MyTask`","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"liuziyang020319"},"content":"6. Type `java -jar ip.jar` and press Enter to start the program.","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"liuziyang020319"},"content":"7. Type the command in the command prompt and press Enter to execute it.","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"liuziyang020319"},"content":"\u003ch2 id\u003d\"features\"\u003e Features\u003c/h2\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"liuziyang020319"},"content":"\u003col\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"liuziyang020319"},"content":"\u003cli\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"liuziyang020319"},"content":"Words in \u003cstrong\u003eUPPER_CASE\u003c/strong\u003e are the parameters to be supplied by the user.","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"liuziyang020319"},"content":"    ","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"liuziyang020319"},"content":"e.g. in \u003ccode class\u003d\"language-plaintext highlighter-rouge\"\u003etodo DESCRIPTION\u003c/code\u003e, \u003ccode class\u003d\"language-plaintext highlighter-rouge\"\u003eDESCRIPTION\u003c/code\u003e is a parameter which can be used as \u003ccode class\u003d\"language-plaintext highlighter-rouge\"\u003etodo readbook\u003c/code\u003e.","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"liuziyang020319"},"content":"\u003c/li\u003e    ","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"liuziyang020319"},"content":"\u003cli\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"liuziyang020319"},"content":"\u003cstrong\u003eExtraneous parameters\u003c/strong\u003e for commands that do not take in parameters (such as \u003ccode class\u003d\"language-plaintext highlighter-rouge\"\u003ebye\u003c/code\u003e and \u003ccode class\u003d\"language-plaintext highlighter-rouge\"\u003elist\u003c/code\u003e) \u003cstrong\u003ewill be ignored\u003c/strong\u003e.","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"liuziyang020319"},"content":"e.g. if the command specifies \u003ccode class\u003d\"language-plaintext highlighter-rouge\"\u003ebye 123\u003c/code\u003e, it will be interpreted as \u003ccode class\u003d\"language-plaintext highlighter-rouge\"\u003ebye\u003c/code\u003e.","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"liuziyang020319"},"content":"\u003c/li\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"liuziyang020319"},"content":"\u003c/ol\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"liuziyang020319"},"content":"\u003ch2 id\u003d\"adding-a-task-todo\"\u003e Adding a task: \u003ccode class\u003d\"language-plaintext highlighter-rouge\"\u003etodo\u003c/code\u003e\u003c/h2\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"liuziyang020319"},"content":"Add a task to the task manager.\u003cbr\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"liuziyang020319"},"content":"**Format**: `todo DESCRIPTION`\u003cbr\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"liuziyang020319"},"content":"**Constraints**: `DESCRIPTION` must be a non-empty string.\u003cbr\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"liuziyang020319"},"content":"**Example**: ","lastModifiedDate":"2023-02-28"},{"lineNumber":54,"author":{"gitId":"liuziyang020319"},"content":"```","lastModifiedDate":"2023-02-28"},{"lineNumber":55,"author":{"gitId":"liuziyang020319"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-28"},{"lineNumber":56,"author":{"gitId":"liuziyang020319"},"content":"todo play football","lastModifiedDate":"2023-02-28"},{"lineNumber":57,"author":{"gitId":"liuziyang020319"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-02-28"},{"lineNumber":58,"author":{"gitId":"liuziyang020319"},"content":"[T] [ ] play football","lastModifiedDate":"2023-02-28"},{"lineNumber":59,"author":{"gitId":"liuziyang020319"},"content":"Now you have 9 tasks in the list.","lastModifiedDate":"2023-02-28"},{"lineNumber":60,"author":{"gitId":"liuziyang020319"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-28"},{"lineNumber":61,"author":{"gitId":"liuziyang020319"},"content":"```","lastModifiedDate":"2023-02-28"},{"lineNumber":62,"author":{"gitId":"liuziyang020319"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":63,"author":{"gitId":"liuziyang020319"},"content":"\u003ch2 id\u003d\"adding-a-task-deadline\"\u003e Adding a deadline: \u003ccode class\u003d\"language-plaintext highlighter-rouge\"\u003edeadline\u003c/code\u003e\u003c/h2\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":64,"author":{"gitId":"liuziyang020319"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":65,"author":{"gitId":"liuziyang020319"},"content":"Add a deadline to the task manager.\u003cbr\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":66,"author":{"gitId":"liuziyang020319"},"content":"**Format**: `deadline DESCRIPTION /by DATE`\u003cbr\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":67,"author":{"gitId":"liuziyang020319"},"content":"**Constraints**: `DESCRIPTION` must be a non-empty string. `DATE` can be in the format of `YYYY-MM-DD`. \u003cbr\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":68,"author":{"gitId":"liuziyang020319"},"content":"If the `DATE` is in the format of `YYYY-MM-DD`, the manager will automatically convert it to `MMM DD YYYY`. \u003cbr\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":69,"author":{"gitId":"liuziyang020319"},"content":"If the `DATE` is not in the format of `YYYY-MM-DD`, the manager still accepts it but will not convert it. \u003cbr\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":70,"author":{"gitId":"liuziyang020319"},"content":"**Example**: ","lastModifiedDate":"2023-02-28"},{"lineNumber":71,"author":{"gitId":"liuziyang020319"},"content":"```","lastModifiedDate":"2023-02-28"},{"lineNumber":72,"author":{"gitId":"liuziyang020319"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-28"},{"lineNumber":73,"author":{"gitId":"liuziyang020319"},"content":"deadline Midterm assignment /by not announce yet","lastModifiedDate":"2023-02-28"},{"lineNumber":74,"author":{"gitId":"liuziyang020319"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-02-28"},{"lineNumber":75,"author":{"gitId":"liuziyang020319"},"content":"[D] [ ] Midterm assignment (by: not announce yet)","lastModifiedDate":"2023-02-28"},{"lineNumber":76,"author":{"gitId":"liuziyang020319"},"content":"Now you have 10 tasks in the list.","lastModifiedDate":"2023-02-28"},{"lineNumber":77,"author":{"gitId":"liuziyang020319"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-28"},{"lineNumber":78,"author":{"gitId":"liuziyang020319"},"content":"deadline Final exam /by 2019-10-15","lastModifiedDate":"2023-02-28"},{"lineNumber":79,"author":{"gitId":"liuziyang020319"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-02-28"},{"lineNumber":80,"author":{"gitId":"liuziyang020319"},"content":"[D] [ ] Final exam (by: Oct 15 2019)","lastModifiedDate":"2023-02-28"},{"lineNumber":81,"author":{"gitId":"liuziyang020319"},"content":"Now you have 11 tasks in the list.","lastModifiedDate":"2023-02-28"},{"lineNumber":82,"author":{"gitId":"liuziyang020319"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-28"},{"lineNumber":83,"author":{"gitId":"liuziyang020319"},"content":"```","lastModifiedDate":"2023-02-28"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":85,"author":{"gitId":"liuziyang020319"},"content":"\u003ch2 id\u003d\"adding-a-task-event\"\u003e Adding an event: \u003ccode class\u003d\"language-plaintext highlighter-rouge\"\u003eevent\u003c/code\u003e\u003c/h2\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":87,"author":{"gitId":"liuziyang020319"},"content":"Add an event to the task manager.\u003cbr\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":88,"author":{"gitId":"liuziyang020319"},"content":"**Format**: `event DESCRIPTION /from START_DATE /to END_DATE`\u003cbr\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":89,"author":{"gitId":"liuziyang020319"},"content":"**Constraints**: `DESCRIPTION` must be a non-empty string. `START_DATE` and `END_DATE` can be in the format of `YYYY-MM-DD`.\u003cbr\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":90,"author":{"gitId":"liuziyang020319"},"content":"If the `START_DATE` and `END_DATE` are in the format of `YYYY-MM-DD`, the manager will automatically convert it to `MMM DD YYYY`.\u003cbr\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":91,"author":{"gitId":"liuziyang020319"},"content":"If the `START_DATE` and `END_DATE` are not in the format of `YYYY-MM-DD`, the manager still accepts it but will not convert it.\u003cbr\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":92,"author":{"gitId":"liuziyang020319"},"content":"**Example**: ","lastModifiedDate":"2023-02-28"},{"lineNumber":93,"author":{"gitId":"liuziyang020319"},"content":"```","lastModifiedDate":"2023-02-28"},{"lineNumber":94,"author":{"gitId":"liuziyang020319"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-28"},{"lineNumber":95,"author":{"gitId":"liuziyang020319"},"content":"event recess week /from 2023-2-20 /to 2023-2-27","lastModifiedDate":"2023-02-28"},{"lineNumber":96,"author":{"gitId":"liuziyang020319"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-02-28"},{"lineNumber":97,"author":{"gitId":"liuziyang020319"},"content":"[E] [ ] recess week (from: 2023-2-20 to: 2023-2-27)","lastModifiedDate":"2023-02-28"},{"lineNumber":98,"author":{"gitId":"liuziyang020319"},"content":"Now you have 12 tasks in the list.","lastModifiedDate":"2023-02-28"},{"lineNumber":99,"author":{"gitId":"liuziyang020319"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-28"},{"lineNumber":100,"author":{"gitId":"liuziyang020319"},"content":"event tour /from 2023-02-20 /to 2023-02-22","lastModifiedDate":"2023-02-28"},{"lineNumber":101,"author":{"gitId":"liuziyang020319"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-02-28"},{"lineNumber":102,"author":{"gitId":"liuziyang020319"},"content":"[E] [ ] tour (from: Feb 20 2023 to: Feb 22 2023)","lastModifiedDate":"2023-02-28"},{"lineNumber":103,"author":{"gitId":"liuziyang020319"},"content":"Now you have 13 tasks in the list.","lastModifiedDate":"2023-02-28"},{"lineNumber":104,"author":{"gitId":"liuziyang020319"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-28"},{"lineNumber":105,"author":{"gitId":"liuziyang020319"},"content":"```","lastModifiedDate":"2023-02-28"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":107,"author":{"gitId":"liuziyang020319"},"content":"\u003ch2 id\u003d\"listing-all-tasks-list\"\u003e Listing all tasks: \u003ccode class\u003d\"language-plaintext highlighter-rouge\"\u003elist\u003c/code\u003e\u003c/h2\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":109,"author":{"gitId":"liuziyang020319"},"content":"List all the tasks in the task manager.\u003cbr\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":110,"author":{"gitId":"liuziyang020319"},"content":"**Format**: `list`\u003cbr\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":111,"author":{"gitId":"liuziyang020319"},"content":"**Example**: ","lastModifiedDate":"2023-02-28"},{"lineNumber":112,"author":{"gitId":"liuziyang020319"},"content":"```","lastModifiedDate":"2023-02-28"},{"lineNumber":113,"author":{"gitId":"liuziyang020319"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-28"},{"lineNumber":114,"author":{"gitId":"liuziyang020319"},"content":"list","lastModifiedDate":"2023-02-28"},{"lineNumber":115,"author":{"gitId":"liuziyang020319"},"content":"Here are the tasks in your list:","lastModifiedDate":"2023-02-28"},{"lineNumber":116,"author":{"gitId":"liuziyang020319"},"content":"1.[T] [X] readbook","lastModifiedDate":"2023-02-28"},{"lineNumber":117,"author":{"gitId":"liuziyang020319"},"content":"2.[E] [ ] project meeting (from: Aug 6th 2pm to: 4pm)","lastModifiedDate":"2023-02-28"},{"lineNumber":118,"author":{"gitId":"liuziyang020319"},"content":"3.[T] [ ] join sports club","lastModifiedDate":"2023-02-28"},{"lineNumber":119,"author":{"gitId":"liuziyang020319"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-28"},{"lineNumber":120,"author":{"gitId":"liuziyang020319"},"content":"```","lastModifiedDate":"2023-02-28"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":123,"author":{"gitId":"liuziyang020319"},"content":"\u003ch2 id\u003d\"marking-a-task-as-done-mark\"\u003e Marking a task as done: \u003ccode class\u003d\"language-plaintext highlighter-rouge\"\u003emark\u003c/code\u003e\u003c/h2\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":125,"author":{"gitId":"liuziyang020319"},"content":"Mark a task as done.\u003cbr\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":126,"author":{"gitId":"liuziyang020319"},"content":"**Format**: `mark INDEX`\u003cbr\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":127,"author":{"gitId":"liuziyang020319"},"content":"**Constraints**: `INDEX` must be a positive integer and must be within the range of the task list. \u003cbr\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":128,"author":{"gitId":"liuziyang020319"},"content":"If the `INDEX` is out of range, an error message will be shown. \u003cbr\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":129,"author":{"gitId":"liuziyang020319"},"content":"If the task is already marked as done, an warning message will be shown.\u003cbr\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":130,"author":{"gitId":"liuziyang020319"},"content":"**Example**: ","lastModifiedDate":"2023-02-28"},{"lineNumber":131,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-02-28"},{"lineNumber":132,"author":{"gitId":"liuziyang020319"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-28"},{"lineNumber":133,"author":{"gitId":"liuziyang020319"},"content":"mark 2","lastModifiedDate":"2023-02-28"},{"lineNumber":134,"author":{"gitId":"liuziyang020319"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2023-02-28"},{"lineNumber":135,"author":{"gitId":"liuziyang020319"},"content":"[E] [X] project meeting (from: Aug 6th 2pm to: 4pm)","lastModifiedDate":"2023-02-28"},{"lineNumber":136,"author":{"gitId":"liuziyang020319"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-28"},{"lineNumber":137,"author":{"gitId":"liuziyang020319"},"content":"mark 2","lastModifiedDate":"2023-02-28"},{"lineNumber":138,"author":{"gitId":"liuziyang020319"},"content":"[Warning] This task is already done!","lastModifiedDate":"2023-02-28"},{"lineNumber":139,"author":{"gitId":"liuziyang020319"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2023-02-28"},{"lineNumber":140,"author":{"gitId":"liuziyang020319"},"content":"[E] [X] project meeting (from: Aug 6th 2pm to: 4pm)","lastModifiedDate":"2023-02-28"},{"lineNumber":141,"author":{"gitId":"liuziyang020319"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-28"},{"lineNumber":142,"author":{"gitId":"liuziyang020319"},"content":"mark -1","lastModifiedDate":"2023-02-28"},{"lineNumber":143,"author":{"gitId":"liuziyang020319"},"content":"[\u003eError] [mark] Sorry, the id is invalid!","lastModifiedDate":"2023-02-28"},{"lineNumber":144,"author":{"gitId":"liuziyang020319"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-28"},{"lineNumber":145,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-02-28"},{"lineNumber":146,"author":{"gitId":"liuziyang020319"},"content":"\u003ch2 id\u003d\"unmarking-a-task-as-done-unmark\"\u003e Unmarking a task as done: \u003ccode class\u003d\"language-plaintext highlighter-rouge\"\u003eunmark\u003c/code\u003e\u003c/h2\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":147,"author":{"gitId":"liuziyang020319"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":148,"author":{"gitId":"liuziyang020319"},"content":"When a task is marked as done, you can unmark it as done.\u003cbr\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":149,"author":{"gitId":"liuziyang020319"},"content":"**Format**: `unmark INDEX`\u003cbr\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":150,"author":{"gitId":"liuziyang020319"},"content":"**Constraints**: `INDEX` must be a positive integer and must be within the range of the task list. \u003cbr\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":151,"author":{"gitId":"liuziyang020319"},"content":"If the `INDEX` is out of range, an error message will be shown. \u003cbr\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":152,"author":{"gitId":"liuziyang020319"},"content":"If the task is not marked as done, an warning message will be shown.\u003cbr\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":153,"author":{"gitId":"liuziyang020319"},"content":"**Example**: ","lastModifiedDate":"2023-02-28"},{"lineNumber":154,"author":{"gitId":"liuziyang020319"},"content":"```","lastModifiedDate":"2023-02-28"},{"lineNumber":155,"author":{"gitId":"liuziyang020319"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-28"},{"lineNumber":156,"author":{"gitId":"liuziyang020319"},"content":"unmark 2","lastModifiedDate":"2023-02-28"},{"lineNumber":157,"author":{"gitId":"liuziyang020319"},"content":"Nice! I\u0027ve unmarked this task as done:","lastModifiedDate":"2023-02-28"},{"lineNumber":158,"author":{"gitId":"liuziyang020319"},"content":"[E] [ ] project meeting (from: Aug 6th 2pm to: 4pm)","lastModifiedDate":"2023-02-28"},{"lineNumber":159,"author":{"gitId":"liuziyang020319"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-28"},{"lineNumber":160,"author":{"gitId":"liuziyang020319"},"content":"unmark 2","lastModifiedDate":"2023-02-28"},{"lineNumber":161,"author":{"gitId":"liuziyang020319"},"content":"[Warning] This task is not done yet!","lastModifiedDate":"2023-02-28"},{"lineNumber":162,"author":{"gitId":"liuziyang020319"},"content":"Nice! I\u0027ve unmarked this task as done:","lastModifiedDate":"2023-02-28"},{"lineNumber":163,"author":{"gitId":"liuziyang020319"},"content":"[E] [ ] project meeting (from: Aug 6th 2pm to: 4pm)","lastModifiedDate":"2023-02-28"},{"lineNumber":164,"author":{"gitId":"liuziyang020319"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-28"},{"lineNumber":165,"author":{"gitId":"liuziyang020319"},"content":"unmark 10","lastModifiedDate":"2023-02-28"},{"lineNumber":166,"author":{"gitId":"liuziyang020319"},"content":"[\u003eError] [unmark] Sorry, the id is invalid!","lastModifiedDate":"2023-02-28"},{"lineNumber":167,"author":{"gitId":"liuziyang020319"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-28"},{"lineNumber":168,"author":{"gitId":"liuziyang020319"},"content":"```","lastModifiedDate":"2023-02-28"},{"lineNumber":169,"author":{"gitId":"liuziyang020319"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":170,"author":{"gitId":"liuziyang020319"},"content":"\u003ch2 id\u003d\"finding-a-task-find\"\u003e Finding a task: \u003ccode class\u003d\"language-plaintext highlighter-rouge\"\u003efind\u003c/code\u003e\u003c/h2\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":171,"author":{"gitId":"liuziyang020319"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":172,"author":{"gitId":"liuziyang020319"},"content":"Find all the tasks that contain the keyword.\u003cbr\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":173,"author":{"gitId":"liuziyang020319"},"content":"**Format**: `find KEYWORD`\u003cbr\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":174,"author":{"gitId":"liuziyang020319"},"content":"**Constraints**: `KEYWORD` must be a non-empty string.\u003cbr\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":175,"author":{"gitId":"liuziyang020319"},"content":"**Example**: ","lastModifiedDate":"2023-02-28"},{"lineNumber":176,"author":{"gitId":"liuziyang020319"},"content":"```","lastModifiedDate":"2023-02-28"},{"lineNumber":177,"author":{"gitId":"liuziyang020319"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-28"},{"lineNumber":178,"author":{"gitId":"liuziyang020319"},"content":"find book","lastModifiedDate":"2023-02-28"},{"lineNumber":179,"author":{"gitId":"liuziyang020319"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2023-02-28"},{"lineNumber":180,"author":{"gitId":"liuziyang020319"},"content":"1.[T] [X] readbook","lastModifiedDate":"2023-02-28"},{"lineNumber":181,"author":{"gitId":"liuziyang020319"},"content":"3.[T] [ ] borrow book","lastModifiedDate":"2023-02-28"},{"lineNumber":182,"author":{"gitId":"liuziyang020319"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-28"},{"lineNumber":183,"author":{"gitId":"liuziyang020319"},"content":"```","lastModifiedDate":"2023-02-28"},{"lineNumber":184,"author":{"gitId":"liuziyang020319"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":185,"author":{"gitId":"liuziyang020319"},"content":"\u003ch2 id\u003d\"deleting-a-task-delete\"\u003e Deleting a task: \u003ccode class\u003d\"language-plaintext highlighter-rouge\"\u003edelete\u003c/code\u003e\u003c/h2\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":186,"author":{"gitId":"liuziyang020319"},"content":"Delete a task from the task manager by its index.","lastModifiedDate":"2023-02-28"},{"lineNumber":187,"author":{"gitId":"liuziyang020319"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":188,"author":{"gitId":"liuziyang020319"},"content":"**Format**: `delete INDEX`\u003cbr\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":189,"author":{"gitId":"liuziyang020319"},"content":"**Constraints**: `INDEX` must be a positive integer and must be within the range of the task list. If the `INDEX` is out of range, an error message will be shown.\u003cbr\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":190,"author":{"gitId":"liuziyang020319"},"content":"**Example**: ","lastModifiedDate":"2023-02-28"},{"lineNumber":191,"author":{"gitId":"liuziyang020319"},"content":"```","lastModifiedDate":"2023-02-28"},{"lineNumber":192,"author":{"gitId":"liuziyang020319"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-28"},{"lineNumber":193,"author":{"gitId":"liuziyang020319"},"content":"delete 2","lastModifiedDate":"2023-02-28"},{"lineNumber":194,"author":{"gitId":"liuziyang020319"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2023-02-28"},{"lineNumber":195,"author":{"gitId":"liuziyang020319"},"content":"[E] [ ] project meeting (from: Aug 6th 2pm to: 4pm)","lastModifiedDate":"2023-02-28"},{"lineNumber":196,"author":{"gitId":"liuziyang020319"},"content":"Now you have 8 tasks in the list.","lastModifiedDate":"2023-02-28"},{"lineNumber":197,"author":{"gitId":"liuziyang020319"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-28"},{"lineNumber":198,"author":{"gitId":"liuziyang020319"},"content":"delete 0","lastModifiedDate":"2023-02-28"},{"lineNumber":199,"author":{"gitId":"liuziyang020319"},"content":"[\u003eError] [delete] Sorry, the id is invalid!","lastModifiedDate":"2023-02-28"},{"lineNumber":200,"author":{"gitId":"liuziyang020319"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-28"},{"lineNumber":201,"author":{"gitId":"liuziyang020319"},"content":"```","lastModifiedDate":"2023-02-28"},{"lineNumber":202,"author":{"gitId":"liuziyang020319"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":203,"author":{"gitId":"liuziyang020319"},"content":"\u003ch2 id\u003d\"searching-a-task-by-date-date\"\u003e Searching a task by date: \u003ccode class\u003d\"language-plaintext highlighter-rouge\"\u003edate\u003c/code\u003e\u003c/h2\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":204,"author":{"gitId":"liuziyang020319"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":205,"author":{"gitId":"liuziyang020319"},"content":"Search all the tasks that are on the date.\u003cbr\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":206,"author":{"gitId":"liuziyang020319"},"content":"**Format**: `date DATE`\u003cbr\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":207,"author":{"gitId":"liuziyang020319"},"content":"**Constraints**: `DATE` must be in the format of `YYYY-MM-DD`.\u003cbr\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":208,"author":{"gitId":"liuziyang020319"},"content":"**Example**: ","lastModifiedDate":"2023-02-28"},{"lineNumber":209,"author":{"gitId":"liuziyang020319"},"content":"```","lastModifiedDate":"2023-02-28"},{"lineNumber":210,"author":{"gitId":"liuziyang020319"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-28"},{"lineNumber":211,"author":{"gitId":"liuziyang020319"},"content":"date 2019-10-15","lastModifiedDate":"2023-02-28"},{"lineNumber":212,"author":{"gitId":"liuziyang020319"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2023-02-28"},{"lineNumber":213,"author":{"gitId":"liuziyang020319"},"content":"5.[D] [ ] running (by: Oct 15 2019)","lastModifiedDate":"2023-02-28"},{"lineNumber":214,"author":{"gitId":"liuziyang020319"},"content":"8.[E] [X] greeting (from: Oct 14 2019 to: Oct 16 2019)","lastModifiedDate":"2023-02-28"},{"lineNumber":215,"author":{"gitId":"liuziyang020319"},"content":"11.[D] [ ] Final exam (by: Oct 15 2019)","lastModifiedDate":"2023-02-28"},{"lineNumber":216,"author":{"gitId":"liuziyang020319"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-28"},{"lineNumber":217,"author":{"gitId":"liuziyang020319"},"content":"```","lastModifiedDate":"2023-02-28"},{"lineNumber":218,"author":{"gitId":"liuziyang020319"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":219,"author":{"gitId":"liuziyang020319"},"content":"\u003ch2 id\u003d\"exiting-the-program-bye\"\u003e Exiting the program: \u003ccode class\u003d\"language-plaintext highlighter-rouge\"\u003ebye\u003c/code\u003e\u003c/h2\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":220,"author":{"gitId":"liuziyang020319"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":221,"author":{"gitId":"liuziyang020319"},"content":"Exit the program.\u003cbr\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":222,"author":{"gitId":"liuziyang020319"},"content":"**Format**: `bye`\u003cbr\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":223,"author":{"gitId":"liuziyang020319"},"content":"**Example**: ","lastModifiedDate":"2023-02-28"},{"lineNumber":224,"author":{"gitId":"liuziyang020319"},"content":"```","lastModifiedDate":"2023-02-28"},{"lineNumber":225,"author":{"gitId":"liuziyang020319"},"content":"bye","lastModifiedDate":"2023-02-28"},{"lineNumber":226,"author":{"gitId":"liuziyang020319"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2023-02-28"},{"lineNumber":227,"author":{"gitId":"liuziyang020319"},"content":"  ____  ___   ___  ____  ______   _______ _","lastModifiedDate":"2023-02-28"},{"lineNumber":228,"author":{"gitId":"liuziyang020319"},"content":" / ___|/ _ \\ / _ \\|  _ \\| __ ) \\ / / ____| |","lastModifiedDate":"2023-02-28"},{"lineNumber":229,"author":{"gitId":"liuziyang020319"},"content":"| |  _| | | | | | | | | |  _ \\\\ V /|  _| | |","lastModifiedDate":"2023-02-28"},{"lineNumber":230,"author":{"gitId":"liuziyang020319"},"content":"| |_| | |_| | |_| | |_| | |_) || | | |___|_|","lastModifiedDate":"2023-02-28"},{"lineNumber":231,"author":{"gitId":"liuziyang020319"},"content":" \\____|\\___/ \\___/|____/|____/ |_| |_____(_)","lastModifiedDate":"2023-02-28"},{"lineNumber":232,"author":{"gitId":"liuziyang020319"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":233,"author":{"gitId":"liuziyang020319"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-28"},{"lineNumber":234,"author":{"gitId":"liuziyang020319"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":235,"author":{"gitId":"liuziyang020319"},"content":"Process finished with exit code 0","lastModifiedDate":"2023-02-28"},{"lineNumber":236,"author":{"gitId":"liuziyang020319"},"content":"```","lastModifiedDate":"2023-02-28"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":238,"author":{"gitId":"liuziyang020319"},"content":"\u003ch2 id\u003d\u0027faq\u0027\u003e FAQ \u003c/h2\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":239,"author":{"gitId":"liuziyang020319"},"content":"\u003cstrong\u003eQ\u003c/strong\u003e: If I do not use the correct format, will the program still work?\u003cbr\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":240,"author":{"gitId":"liuziyang020319"},"content":"\u003cstrong\u003eA\u003c/strong\u003e: No, the program will show an error message and provide you the correct format.\u003cbr\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":241,"author":{"gitId":"liuziyang020319"},"content":"\u003cstrong\u003eExample\u003c/strong\u003e: ","lastModifiedDate":"2023-02-28"},{"lineNumber":242,"author":{"gitId":"liuziyang020319"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":243,"author":{"gitId":"liuziyang020319"},"content":"```","lastModifiedDate":"2023-02-28"},{"lineNumber":244,"author":{"gitId":"liuziyang020319"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-28"},{"lineNumber":245,"author":{"gitId":"liuziyang020319"},"content":"event hahahah","lastModifiedDate":"2023-02-28"},{"lineNumber":246,"author":{"gitId":"liuziyang020319"},"content":"[\u003eError] Please use the format: event \u003ctask name\u003e /from \u003cevent time from\u003e /to \u003cevent time to\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":247,"author":{"gitId":"liuziyang020319"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-28"},{"lineNumber":248,"author":{"gitId":"liuziyang020319"},"content":"```","lastModifiedDate":"2023-02-28"},{"lineNumber":249,"author":{"gitId":"liuziyang020319"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":250,"author":{"gitId":"liuziyang020319"},"content":"\u003ch2 id\u003d\u0027command-summary\u0027\u003e Command Summary \u003c/h2\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":251,"author":{"gitId":"liuziyang020319"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":252,"author":{"gitId":"liuziyang020319"},"content":"|  Action   | \tFormat  | Example |","lastModifiedDate":"2023-02-28"},{"lineNumber":253,"author":{"gitId":"liuziyang020319"},"content":"|  ----  | ----  | ----  |","lastModifiedDate":"2023-02-28"},{"lineNumber":254,"author":{"gitId":"liuziyang020319"},"content":"|  [todo](#adding-a-task-todo)  | \t**todo** DESCRIPTION  | todo readbook |","lastModifiedDate":"2023-02-28"},{"lineNumber":255,"author":{"gitId":"liuziyang020319"},"content":"|  [deadline](#adding-a-task-deadline)  | \t**deadline** DESCRIPTION /by DATE  | deadline return book /by 2023-02-28 |","lastModifiedDate":"2023-02-28"},{"lineNumber":256,"author":{"gitId":"liuziyang020319"},"content":"|  [event](#adding-a-task-event)  | \t**event** DESCRIPTION /from DATE /to DATE  | event project meeting /from 2023-02-28 3pm /to 4pm |","lastModifiedDate":"2023-02-28"},{"lineNumber":257,"author":{"gitId":"liuziyang020319"},"content":"|  [list](#listing-all-tasks-list)  | \t**list**  | list |","lastModifiedDate":"2023-02-28"},{"lineNumber":258,"author":{"gitId":"liuziyang020319"},"content":"|  [mark](#marking-a-task-as-done-mark)  | \t**mark** INDEX  | mark 1 |","lastModifiedDate":"2023-02-28"},{"lineNumber":259,"author":{"gitId":"liuziyang020319"},"content":"|  [unmark](#unmarking-a-task-as-done-unmark)  | \t**unmark** INDEX  | unmark 1 |","lastModifiedDate":"2023-02-28"},{"lineNumber":260,"author":{"gitId":"liuziyang020319"},"content":"|  [find](#finding-a-task-find)  | \t**find** KEYWORD  | find book |","lastModifiedDate":"2023-02-28"},{"lineNumber":261,"author":{"gitId":"liuziyang020319"},"content":"|  [delete](#deleting-a-task-delete)  | \t**delete** INDEX  | delete 1 |","lastModifiedDate":"2023-02-28"},{"lineNumber":262,"author":{"gitId":"liuziyang020319"},"content":"|  [date](#searching-a-task-by-date-date)  | \t**date** DATE  | date 2023-02-28 |","lastModifiedDate":"2023-02-28"},{"lineNumber":263,"author":{"gitId":"liuziyang020319"},"content":"|  [bye](#exiting-the-program-bye)  | \t**bye**  | bye |","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"liuziyang020319":247,"-":16}},{"path":"src/main/java/Duke/DukeCommandLine/DukeCommandLineInput.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"liuziyang020319"},"content":"package Duke.DukeCommandLine;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"liuziyang020319"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"liuziyang020319"},"content":"import Duke.DukeFunction.DukeList;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"liuziyang020319"},"content":"import Duke.DukeFunction.DukeStorage;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"liuziyang020319"},"content":"import Duke.DukeFunction.DukeUI;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"liuziyang020319"},"content":"import Duke.DukeTask.DukeDeadline;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"liuziyang020319"},"content":"import Duke.DukeTask.DukeEvent;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"liuziyang020319"},"content":"import Duke.DukeTask.DukeTask;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"liuziyang020319"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"liuziyang020319"},"content":"public class DukeCommandLineInput {","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"liuziyang020319"},"content":"    private static final String INVALID_ID_MESSAGE \u003d \"Sorry, the id is invalid!\";","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"liuziyang020319"},"content":"    private static final String WRONG_TYPE_MESSAGE \u003d \"Sorry, I don\u0027t know what that means :-( \";","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"liuziyang020319"},"content":"    private static final String COMMAND_LIST \u003d \"list\";","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"liuziyang020319"},"content":"    private static final String COMMAND_BYE \u003d \"bye\";","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"liuziyang020319"},"content":"    private static final String COMMAND_MARK \u003d \"mark\";","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"liuziyang020319"},"content":"    private static final String COMMAND_UNMARK \u003d \"unmark\";","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"liuziyang020319"},"content":"    private static final String COMMAND_DELETE \u003d \"delete\";","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"liuziyang020319"},"content":"    private static final String COMMAND_TODO \u003d \"todo\";","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"liuziyang020319"},"content":"    private static final String COMMAND_DEADLINE \u003d \"deadline\";","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"liuziyang020319"},"content":"    private static final String COMMAND_EVENT \u003d \"event\";","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"liuziyang020319"},"content":"    private static final String COMMAND_FIND \u003d \"find\";","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"liuziyang020319"},"content":"    private static final String COMMAND_DATE \u003d \"date\";","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"liuziyang020319"},"content":"    String commandType;","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"liuziyang020319"},"content":"    String commandMessage;","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"liuziyang020319"},"content":"    public DukeCommandLineInput(String commandType, String commandMessage) {","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"liuziyang020319"},"content":"        this.commandType \u003d commandType;","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"liuziyang020319"},"content":"        this.commandMessage \u003d commandMessage;","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"liuziyang020319"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"liuziyang020319"},"content":"    public String getCommandType() {","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"liuziyang020319"},"content":"        return this.commandType;","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"liuziyang020319"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"liuziyang020319"},"content":"    public String getCommandMessage() {","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"liuziyang020319"},"content":"        return this.commandMessage;","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"liuziyang020319"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"liuziyang020319"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"liuziyang020319"},"content":"        return this.commandType.equals(COMMAND_BYE);","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"liuziyang020319"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"liuziyang020319"},"content":"    public void execute(DukeList tasks, DukeUI ui,","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"liuziyang020319"},"content":"                        DukeParser parser, DukeStorage storage) throws DukeException {","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"liuziyang020319"},"content":"        int id;","lastModifiedDate":"2023-02-20"},{"lineNumber":41,"author":{"gitId":"liuziyang020319"},"content":"        switch (this.commandType){","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"liuziyang020319"},"content":"        case COMMAND_BYE:","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"liuziyang020319"},"content":"            ui.printGoodbyeLogo();","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"liuziyang020319"},"content":"            break;","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"liuziyang020319"},"content":"        case COMMAND_LIST:","lastModifiedDate":"2023-02-20"},{"lineNumber":46,"author":{"gitId":"liuziyang020319"},"content":"            tasks.listTask();","lastModifiedDate":"2023-02-20"},{"lineNumber":47,"author":{"gitId":"liuziyang020319"},"content":"            break;","lastModifiedDate":"2023-02-20"},{"lineNumber":48,"author":{"gitId":"liuziyang020319"},"content":"        case COMMAND_MARK:","lastModifiedDate":"2023-02-20"},{"lineNumber":49,"author":{"gitId":"liuziyang020319"},"content":"            try {","lastModifiedDate":"2023-02-20"},{"lineNumber":50,"author":{"gitId":"liuziyang020319"},"content":"                id \u003d Integer.parseInt(this.commandMessage);","lastModifiedDate":"2023-02-20"},{"lineNumber":51,"author":{"gitId":"liuziyang020319"},"content":"            } catch (NumberFormatException integerException) {","lastModifiedDate":"2023-02-20"},{"lineNumber":52,"author":{"gitId":"liuziyang020319"},"content":"                throw new DukeException(INVALID_ID_MESSAGE);","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"liuziyang020319"},"content":"            }","lastModifiedDate":"2023-02-20"},{"lineNumber":54,"author":{"gitId":"liuziyang020319"},"content":"            tasks.markDone(id-1);","lastModifiedDate":"2023-02-20"},{"lineNumber":55,"author":{"gitId":"liuziyang020319"},"content":"            break;","lastModifiedDate":"2023-02-20"},{"lineNumber":56,"author":{"gitId":"liuziyang020319"},"content":"        case COMMAND_UNMARK:","lastModifiedDate":"2023-02-20"},{"lineNumber":57,"author":{"gitId":"liuziyang020319"},"content":"            try {","lastModifiedDate":"2023-02-20"},{"lineNumber":58,"author":{"gitId":"liuziyang020319"},"content":"                id \u003d Integer.parseInt(this.commandMessage);","lastModifiedDate":"2023-02-20"},{"lineNumber":59,"author":{"gitId":"liuziyang020319"},"content":"            } catch (NumberFormatException integerException) {","lastModifiedDate":"2023-02-20"},{"lineNumber":60,"author":{"gitId":"liuziyang020319"},"content":"                throw new DukeException(INVALID_ID_MESSAGE);","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"liuziyang020319"},"content":"            }","lastModifiedDate":"2023-02-20"},{"lineNumber":62,"author":{"gitId":"liuziyang020319"},"content":"            tasks.unmarkDone(id-1);","lastModifiedDate":"2023-02-20"},{"lineNumber":63,"author":{"gitId":"liuziyang020319"},"content":"            break;","lastModifiedDate":"2023-02-20"},{"lineNumber":64,"author":{"gitId":"liuziyang020319"},"content":"        case COMMAND_DELETE:","lastModifiedDate":"2023-02-20"},{"lineNumber":65,"author":{"gitId":"liuziyang020319"},"content":"            try {","lastModifiedDate":"2023-02-20"},{"lineNumber":66,"author":{"gitId":"liuziyang020319"},"content":"                id \u003d Integer.parseInt(this.commandMessage);","lastModifiedDate":"2023-02-20"},{"lineNumber":67,"author":{"gitId":"liuziyang020319"},"content":"            } catch (NumberFormatException integerException) {","lastModifiedDate":"2023-02-20"},{"lineNumber":68,"author":{"gitId":"liuziyang020319"},"content":"                throw new DukeException(INVALID_ID_MESSAGE);","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"liuziyang020319"},"content":"            }","lastModifiedDate":"2023-02-20"},{"lineNumber":70,"author":{"gitId":"liuziyang020319"},"content":"            tasks.deleteTask(id-1);","lastModifiedDate":"2023-02-20"},{"lineNumber":71,"author":{"gitId":"liuziyang020319"},"content":"            break;","lastModifiedDate":"2023-02-20"},{"lineNumber":72,"author":{"gitId":"liuziyang020319"},"content":"        case COMMAND_TODO:","lastModifiedDate":"2023-02-20"},{"lineNumber":73,"author":{"gitId":"liuziyang020319"},"content":"            try {","lastModifiedDate":"2023-02-20"},{"lineNumber":74,"author":{"gitId":"liuziyang020319"},"content":"                DukeTask newTask \u003d parser.processTask(this.commandMessage);","lastModifiedDate":"2023-02-20"},{"lineNumber":75,"author":{"gitId":"liuziyang020319"},"content":"                tasks.addTask(newTask);","lastModifiedDate":"2023-02-20"},{"lineNumber":76,"author":{"gitId":"liuziyang020319"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-02-20"},{"lineNumber":77,"author":{"gitId":"liuziyang020319"},"content":"                throw e;","lastModifiedDate":"2023-02-20"},{"lineNumber":78,"author":{"gitId":"liuziyang020319"},"content":"            }","lastModifiedDate":"2023-02-20"},{"lineNumber":79,"author":{"gitId":"liuziyang020319"},"content":"            break;","lastModifiedDate":"2023-02-20"},{"lineNumber":80,"author":{"gitId":"liuziyang020319"},"content":"        case COMMAND_DEADLINE:","lastModifiedDate":"2023-02-20"},{"lineNumber":81,"author":{"gitId":"liuziyang020319"},"content":"            try {","lastModifiedDate":"2023-02-20"},{"lineNumber":82,"author":{"gitId":"liuziyang020319"},"content":"                DukeDeadline deadline \u003d parser.processDeadline(this.commandMessage);","lastModifiedDate":"2023-02-20"},{"lineNumber":83,"author":{"gitId":"liuziyang020319"},"content":"                tasks.addTask(deadline);","lastModifiedDate":"2023-02-20"},{"lineNumber":84,"author":{"gitId":"liuziyang020319"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-02-20"},{"lineNumber":85,"author":{"gitId":"liuziyang020319"},"content":"                throw e;","lastModifiedDate":"2023-02-20"},{"lineNumber":86,"author":{"gitId":"liuziyang020319"},"content":"            }","lastModifiedDate":"2023-02-20"},{"lineNumber":87,"author":{"gitId":"liuziyang020319"},"content":"            break;","lastModifiedDate":"2023-02-20"},{"lineNumber":88,"author":{"gitId":"liuziyang020319"},"content":"        case COMMAND_EVENT:","lastModifiedDate":"2023-02-20"},{"lineNumber":89,"author":{"gitId":"liuziyang020319"},"content":"            try {","lastModifiedDate":"2023-02-20"},{"lineNumber":90,"author":{"gitId":"liuziyang020319"},"content":"                DukeEvent event \u003d parser.processEvent(this.commandMessage);","lastModifiedDate":"2023-02-20"},{"lineNumber":91,"author":{"gitId":"liuziyang020319"},"content":"                tasks.addTask(event);","lastModifiedDate":"2023-02-20"},{"lineNumber":92,"author":{"gitId":"liuziyang020319"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-02-20"},{"lineNumber":93,"author":{"gitId":"liuziyang020319"},"content":"                throw e;","lastModifiedDate":"2023-02-20"},{"lineNumber":94,"author":{"gitId":"liuziyang020319"},"content":"            }","lastModifiedDate":"2023-02-20"},{"lineNumber":95,"author":{"gitId":"liuziyang020319"},"content":"            break;","lastModifiedDate":"2023-02-20"},{"lineNumber":96,"author":{"gitId":"liuziyang020319"},"content":"        case COMMAND_DATE:","lastModifiedDate":"2023-02-20"},{"lineNumber":97,"author":{"gitId":"liuziyang020319"},"content":"            try {","lastModifiedDate":"2023-02-20"},{"lineNumber":98,"author":{"gitId":"liuziyang020319"},"content":"                tasks.listTaskByDate(this.commandMessage);","lastModifiedDate":"2023-02-20"},{"lineNumber":99,"author":{"gitId":"liuziyang020319"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-02-20"},{"lineNumber":100,"author":{"gitId":"liuziyang020319"},"content":"                throw e;","lastModifiedDate":"2023-02-20"},{"lineNumber":101,"author":{"gitId":"liuziyang020319"},"content":"            }","lastModifiedDate":"2023-02-20"},{"lineNumber":102,"author":{"gitId":"liuziyang020319"},"content":"            break;","lastModifiedDate":"2023-02-20"},{"lineNumber":103,"author":{"gitId":"liuziyang020319"},"content":"        case COMMAND_FIND:","lastModifiedDate":"2023-02-20"},{"lineNumber":104,"author":{"gitId":"liuziyang020319"},"content":"            tasks.findTask(this.commandMessage);","lastModifiedDate":"2023-02-20"},{"lineNumber":105,"author":{"gitId":"liuziyang020319"},"content":"            break;","lastModifiedDate":"2023-02-20"},{"lineNumber":106,"author":{"gitId":"liuziyang020319"},"content":"        default:","lastModifiedDate":"2023-03-03"},{"lineNumber":107,"author":{"gitId":"liuziyang020319"},"content":"            throw new DukeException(WRONG_TYPE_MESSAGE + \"(\" + this.commandType + \")\");","lastModifiedDate":"2023-03-03"},{"lineNumber":108,"author":{"gitId":"liuziyang020319"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":109,"author":{"gitId":"liuziyang020319"},"content":"        storage.saveTask(tasks);","lastModifiedDate":"2023-02-20"},{"lineNumber":110,"author":{"gitId":"liuziyang020319"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":111,"author":{"gitId":"liuziyang020319"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"liuziyang020319":111}},{"path":"src/main/java/Duke/DukeCommandLine/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"liuziyang020319"},"content":"package Duke.DukeCommandLine;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"liuziyang020319"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"liuziyang020319"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"liuziyang020319"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"liuziyang020319"},"content":"     * Constructor for DukeException.","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"liuziyang020319"},"content":"     * @param message the message to be printed when the exception is thrown.","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"liuziyang020319"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"liuziyang020319"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"liuziyang020319"},"content":"        super(message);","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"liuziyang020319"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"liuziyang020319"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"liuziyang020319":11}},{"path":"src/main/java/Duke/DukeCommandLine/DukeParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"liuziyang020319"},"content":"package Duke.DukeCommandLine;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"liuziyang020319"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"liuziyang020319"},"content":"import Duke.DukeTask.DukeDeadline;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"liuziyang020319"},"content":"import Duke.DukeTask.DukeEvent;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"liuziyang020319"},"content":"import Duke.DukeTask.DukeTask;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"liuziyang020319"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"liuziyang020319"},"content":"public class DukeParser {","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"liuziyang020319"},"content":"    private static String WRONG_TASK_FORMAT_MESSAGE \u003d","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"liuziyang020319"},"content":"            \"☹ OOPS!!! The description of a task cannot be empty.\";","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"liuziyang020319"},"content":"    private static String WRONG_EVENT_FORMAT_MESSAGE \u003d","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"liuziyang020319"},"content":"            \"Please use the format: \" +","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"liuziyang020319"},"content":"                    \"event \u003ctask name\u003e /from \u003cevent time from\u003e /to \u003cevent time to\u003e\";","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"liuziyang020319"},"content":"    private static String WRONG_DEADLINE_FORMAT_MESSAGE \u003d","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"liuziyang020319"},"content":"            \"\\\"Please use the format: \" +","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"liuziyang020319"},"content":"                    \"deadline \u003ctask name\u003e /by \u003cdeadline time\u003e\";","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"liuziyang020319"},"content":"    private static String COMMAND_TOKEN \u003d \" \";","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"liuziyang020319"},"content":"    private static String DEADLINE_TOKEN \u003d \"/by\";","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"liuziyang020319"},"content":"    private static String EVENT_TOKEN_FROM \u003d \"/from\";","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"liuziyang020319"},"content":"    private static String EVENT_TOKEN_TO \u003d \"/to\";","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"liuziyang020319"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"liuziyang020319"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"liuziyang020319"},"content":"     * Parses the input from the user and returns a DukeCommandLineInput object.","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"liuziyang020319"},"content":"     * @param commandLine the command line input by the user.","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"liuziyang020319"},"content":"     * @return type of the command and the message of the command in a DukeCommandLineInput object.","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"liuziyang020319"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"liuziyang020319"},"content":"    public DukeCommandLineInput parse(String commandLine) {","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"liuziyang020319"},"content":"        commandLine \u003d commandLine.trim();","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"liuziyang020319"},"content":"        if(!commandLine.contains(COMMAND_TOKEN)) {","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"liuziyang020319"},"content":"            return new DukeCommandLineInput(commandLine, \"\");","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"liuziyang020319"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"liuziyang020319"},"content":"        String[] command \u003d commandLine.split(\" \");","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"liuziyang020319"},"content":"        String lineRemaining \u003d commandLine.substring(commandLine.indexOf(COMMAND_TOKEN)+1);","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"liuziyang020319"},"content":"        lineRemaining \u003d lineRemaining.trim();","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"liuziyang020319"},"content":"        return new DukeCommandLineInput(command[0], lineRemaining);","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"liuziyang020319"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"liuziyang020319"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"liuziyang020319"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"liuziyang020319"},"content":"     * Parses the input from the user and returns a DukeTask object.","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"liuziyang020319"},"content":"     * @param inputTask the message of the command to be processed.","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"liuziyang020319"},"content":"     * @return a DukeTask object if the input is invalid, else throws a DukeException.","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"liuziyang020319"},"content":"     * @throws DukeException if the input is invalid (the String is empty).","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"liuziyang020319"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"liuziyang020319"},"content":"    public DukeTask processTask(String inputTask) throws DukeException {","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"liuziyang020319"},"content":"        if(inputTask.equals(\"\")) {","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"liuziyang020319"},"content":"            throw new DukeException(WRONG_TASK_FORMAT_MESSAGE);","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"liuziyang020319"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":47,"author":{"gitId":"liuziyang020319"},"content":"        return new DukeTask(inputTask);","lastModifiedDate":"2023-02-20"},{"lineNumber":48,"author":{"gitId":"liuziyang020319"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":49,"author":{"gitId":"liuziyang020319"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"liuziyang020319"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"liuziyang020319"},"content":"     * Parses the input from the user and returns a DukeDeadline object.","lastModifiedDate":"2023-02-28"},{"lineNumber":52,"author":{"gitId":"liuziyang020319"},"content":"     * @param inputTask the message of the command to be processed.","lastModifiedDate":"2023-02-28"},{"lineNumber":53,"author":{"gitId":"liuziyang020319"},"content":"     * @return a DukeDeadline object if the format of the input is invalid, else throws a DukeException.","lastModifiedDate":"2023-02-28"},{"lineNumber":54,"author":{"gitId":"liuziyang020319"},"content":"     * @throws DukeException if the format of the input is invalid (the String does not contain \"/by\").","lastModifiedDate":"2023-02-28"},{"lineNumber":55,"author":{"gitId":"liuziyang020319"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":56,"author":{"gitId":"liuziyang020319"},"content":"    public DukeDeadline processDeadline(String inputTask) throws DukeException {","lastModifiedDate":"2023-02-20"},{"lineNumber":57,"author":{"gitId":"liuziyang020319"},"content":"        try {","lastModifiedDate":"2023-02-20"},{"lineNumber":58,"author":{"gitId":"liuziyang020319"},"content":"            String deadlineName \u003d inputTask.substring(0, inputTask.indexOf(DEADLINE_TOKEN));","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"liuziyang020319"},"content":"            deadlineName \u003d deadlineName.trim();","lastModifiedDate":"2023-02-20"},{"lineNumber":60,"author":{"gitId":"liuziyang020319"},"content":"            String deadlineTime \u003d inputTask.substring(inputTask.indexOf(DEADLINE_TOKEN)+4);","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"liuziyang020319"},"content":"            deadlineTime \u003d deadlineTime.trim();","lastModifiedDate":"2023-02-20"},{"lineNumber":62,"author":{"gitId":"liuziyang020319"},"content":"            return new DukeDeadline(deadlineName, deadlineTime);","lastModifiedDate":"2023-02-20"},{"lineNumber":63,"author":{"gitId":"liuziyang020319"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-20"},{"lineNumber":64,"author":{"gitId":"liuziyang020319"},"content":"            throw new DukeException(WRONG_DEADLINE_FORMAT_MESSAGE);","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"liuziyang020319"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":66,"author":{"gitId":"liuziyang020319"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":67,"author":{"gitId":"liuziyang020319"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":68,"author":{"gitId":"liuziyang020319"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":69,"author":{"gitId":"liuziyang020319"},"content":"     * Parses the input from the user and returns a DukeEvent object.","lastModifiedDate":"2023-02-28"},{"lineNumber":70,"author":{"gitId":"liuziyang020319"},"content":"     * @param inputTask the message of the command to be processed.","lastModifiedDate":"2023-02-28"},{"lineNumber":71,"author":{"gitId":"liuziyang020319"},"content":"     * @return a DukeEvent object if the format of the input is invalid, else throws a DukeException.","lastModifiedDate":"2023-02-28"},{"lineNumber":72,"author":{"gitId":"liuziyang020319"},"content":"     * @throws DukeException if the format of the input is invalid","lastModifiedDate":"2023-02-28"},{"lineNumber":73,"author":{"gitId":"liuziyang020319"},"content":"     * (the String does not contain \"/from\" and \"/to\").","lastModifiedDate":"2023-02-28"},{"lineNumber":74,"author":{"gitId":"liuziyang020319"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":75,"author":{"gitId":"liuziyang020319"},"content":"    public DukeEvent processEvent(String inputTask) throws DukeException {","lastModifiedDate":"2023-02-20"},{"lineNumber":76,"author":{"gitId":"liuziyang020319"},"content":"        try {","lastModifiedDate":"2023-02-20"},{"lineNumber":77,"author":{"gitId":"liuziyang020319"},"content":"            String eventName \u003d inputTask.substring(0, inputTask.indexOf(EVENT_TOKEN_FROM)-1);","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"liuziyang020319"},"content":"            eventName \u003d eventName.trim();","lastModifiedDate":"2023-02-20"},{"lineNumber":79,"author":{"gitId":"liuziyang020319"},"content":"            String eventTimeFrom \u003d inputTask.substring(inputTask.indexOf(EVENT_TOKEN_FROM)+6,","lastModifiedDate":"2023-03-03"},{"lineNumber":80,"author":{"gitId":"liuziyang020319"},"content":"                    inputTask.indexOf(EVENT_TOKEN_TO)-1);","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"liuziyang020319"},"content":"            eventTimeFrom \u003d eventTimeFrom.trim();","lastModifiedDate":"2023-02-20"},{"lineNumber":82,"author":{"gitId":"liuziyang020319"},"content":"            String eventTimeTo \u003d inputTask.substring(inputTask.indexOf(EVENT_TOKEN_TO)+4);","lastModifiedDate":"2023-03-03"},{"lineNumber":83,"author":{"gitId":"liuziyang020319"},"content":"            return new DukeEvent(eventName, eventTimeFrom, eventTimeTo);","lastModifiedDate":"2023-02-20"},{"lineNumber":84,"author":{"gitId":"liuziyang020319"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-20"},{"lineNumber":85,"author":{"gitId":"liuziyang020319"},"content":"            throw new DukeException(WRONG_EVENT_FORMAT_MESSAGE);","lastModifiedDate":"2023-03-03"},{"lineNumber":86,"author":{"gitId":"liuziyang020319"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":87,"author":{"gitId":"liuziyang020319"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":88,"author":{"gitId":"liuziyang020319"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"liuziyang020319":88}},{"path":"src/main/java/Duke/DukeFunction/DukeList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"liuziyang020319"},"content":"package Duke.DukeFunction;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"liuziyang020319"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"liuziyang020319"},"content":"import Duke.DukeCommandLine.DukeException;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"liuziyang020319"},"content":"import Duke.DukeTask.DukeTask;","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"liuziyang020319"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"liuziyang020319"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"liuziyang020319"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"liuziyang020319"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"liuziyang020319"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"liuziyang020319"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"liuziyang020319"},"content":"public class DukeList {","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"liuziyang020319"},"content":"    private static final ArrayList\u003cDukeTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"liuziyang020319"},"content":"    private static final String FILE_PATH \u003d \"data/list.txt\";","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"liuziyang020319"},"content":"    private static final String INVALID_ID_MESSAGE \u003d \"Sorry, the id is invalid!\";","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"liuziyang020319"},"content":"    private static final String WRONG_DATE_FORMAT_MESSAGE \u003d \"Please use the format: yyyy-mm-dd\";","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"liuziyang020319"},"content":"    private static final String TASK_ADDED_INFORMATION \u003d \"Got it. I\u0027ve added this task:\";","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"liuziyang020319"},"content":"    private static final String TASK_LIST_INFORMATION \u003d \"Got it. I\u0027ve added this task:\";","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"liuziyang020319"},"content":"    private static final String TASK_LIST_MATCHING_INFORMATION \u003d \"Here are the matching tasks in your list:\";","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"liuziyang020319"},"content":"    private static final String TASK_DELETED_INFORMATION \u003d \"Noted. I\u0027ve removed this task:\";","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"liuziyang020319"},"content":"    private static final String TASK_MARK_INFORMATION \u003d \"Nice! I\u0027ve marked this task as done:\";","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"liuziyang020319"},"content":"    private static final String TASK_UNMARK_INFORMATION \u003d \"Nice! I\u0027ve marked this task as undone:\";","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"liuziyang020319"},"content":"    private static final String MARK_FLAG \u003d \"[mark] \";","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"liuziyang020319"},"content":"    private static final String UNMARK_FLAG \u003d \"[unmark] \";","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"liuziyang020319"},"content":"    private static final String DATE_FLAG \u003d \"[date] \";","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"liuziyang020319"},"content":"    private static final String DELETE_FLAG \u003d \"[delete] \";","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"liuziyang020319"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"liuziyang020319"},"content":"    private static void isValidID(int id) throws DukeException {","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"liuziyang020319"},"content":"        boolean isIDInValid \u003d id \u003c 0 || id \u003e\u003d taskList.size();","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"liuziyang020319"},"content":"        if(isIDInValid) {","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"liuziyang020319"},"content":"            throw new DukeException(INVALID_ID_MESSAGE);","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"liuziyang020319"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"liuziyang020319"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"liuziyang020319"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"liuziyang020319"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"liuziyang020319"},"content":"     * @param task the task to be added.","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"liuziyang020319"},"content":"     * @throws DukeException if the task cannot be added (when the arraylist is full).","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"liuziyang020319"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"liuziyang020319"},"content":"    public void addTask(DukeTask task) throws DukeException {","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"liuziyang020319"},"content":"        try {","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"liuziyang020319"},"content":"            taskList.add(task);","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"liuziyang020319"},"content":"            System.out.println(TASK_ADDED_INFORMATION);","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"liuziyang020319"},"content":"            task.printTask();","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"liuziyang020319"},"content":"            System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"liuziyang020319"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"liuziyang020319"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2023-02-20"},{"lineNumber":46,"author":{"gitId":"liuziyang020319"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":47,"author":{"gitId":"liuziyang020319"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"liuziyang020319"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"liuziyang020319"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"liuziyang020319"},"content":"     * Lists all the tasks in the task list.","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"liuziyang020319"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":52,"author":{"gitId":"liuziyang020319"},"content":"    public void listTask() {","lastModifiedDate":"2023-02-20"},{"lineNumber":53,"author":{"gitId":"liuziyang020319"},"content":"        System.out.println(TASK_LIST_INFORMATION);","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"liuziyang020319"},"content":"        for(int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"liuziyang020319"},"content":"            taskList.get(i).printTask(i);","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"liuziyang020319"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"liuziyang020319"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"liuziyang020319"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":59,"author":{"gitId":"liuziyang020319"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":60,"author":{"gitId":"liuziyang020319"},"content":"     * Marks a task as done with the given id.","lastModifiedDate":"2023-02-28"},{"lineNumber":61,"author":{"gitId":"liuziyang020319"},"content":"     * @param id the id of the task to be marked as done.","lastModifiedDate":"2023-02-28"},{"lineNumber":62,"author":{"gitId":"liuziyang020319"},"content":"     * @throws DukeException if the id is invalid (when the id is out of bound).","lastModifiedDate":"2023-02-28"},{"lineNumber":63,"author":{"gitId":"liuziyang020319"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":64,"author":{"gitId":"liuziyang020319"},"content":"    public void markDone(int id) throws DukeException {","lastModifiedDate":"2023-02-20"},{"lineNumber":65,"author":{"gitId":"liuziyang020319"},"content":"        try {","lastModifiedDate":"2023-02-20"},{"lineNumber":66,"author":{"gitId":"liuziyang020319"},"content":"            isValidID(id);","lastModifiedDate":"2023-02-20"},{"lineNumber":67,"author":{"gitId":"liuziyang020319"},"content":"            taskList.get(id).markAsDone();","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"liuziyang020319"},"content":"            System.out.println(TASK_MARK_INFORMATION);","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"liuziyang020319"},"content":"            taskList.get(id).printTask();","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"liuziyang020319"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-20"},{"lineNumber":71,"author":{"gitId":"liuziyang020319"},"content":"            throw new DukeException(MARK_FLAG + e.getMessage());","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"liuziyang020319"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":73,"author":{"gitId":"liuziyang020319"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":74,"author":{"gitId":"liuziyang020319"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":75,"author":{"gitId":"liuziyang020319"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":76,"author":{"gitId":"liuziyang020319"},"content":"     * Unmarks a task as done with the given id.","lastModifiedDate":"2023-02-28"},{"lineNumber":77,"author":{"gitId":"liuziyang020319"},"content":"     * @param id the id of the task to be undone;","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"liuziyang020319"},"content":"     * @throws DukeException if the id is invalid (when the id is out of bound).","lastModifiedDate":"2023-02-28"},{"lineNumber":79,"author":{"gitId":"liuziyang020319"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":80,"author":{"gitId":"liuziyang020319"},"content":"    public void unmarkDone(int id) throws DukeException {","lastModifiedDate":"2023-02-20"},{"lineNumber":81,"author":{"gitId":"liuziyang020319"},"content":"        try {","lastModifiedDate":"2023-02-20"},{"lineNumber":82,"author":{"gitId":"liuziyang020319"},"content":"            isValidID(id);","lastModifiedDate":"2023-02-20"},{"lineNumber":83,"author":{"gitId":"liuziyang020319"},"content":"            taskList.get(id).unmarkAsDone();","lastModifiedDate":"2023-02-01"},{"lineNumber":84,"author":{"gitId":"liuziyang020319"},"content":"            System.out.println(TASK_UNMARK_INFORMATION);","lastModifiedDate":"2023-03-03"},{"lineNumber":85,"author":{"gitId":"liuziyang020319"},"content":"            taskList.get(id).printTask();","lastModifiedDate":"2023-02-01"},{"lineNumber":86,"author":{"gitId":"liuziyang020319"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-20"},{"lineNumber":87,"author":{"gitId":"liuziyang020319"},"content":"            throw new DukeException(UNMARK_FLAG + e.getMessage());","lastModifiedDate":"2023-03-03"},{"lineNumber":88,"author":{"gitId":"liuziyang020319"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":89,"author":{"gitId":"liuziyang020319"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":90,"author":{"gitId":"liuziyang020319"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":91,"author":{"gitId":"liuziyang020319"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":92,"author":{"gitId":"liuziyang020319"},"content":"     * Deletes a task from the task list with the given id.","lastModifiedDate":"2023-02-28"},{"lineNumber":93,"author":{"gitId":"liuziyang020319"},"content":"     * @param id the id of the task to be deleted.","lastModifiedDate":"2023-02-28"},{"lineNumber":94,"author":{"gitId":"liuziyang020319"},"content":"     * @throws DukeException if the id is invalid (when the id is out of bound).","lastModifiedDate":"2023-02-28"},{"lineNumber":95,"author":{"gitId":"liuziyang020319"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":96,"author":{"gitId":"liuziyang020319"},"content":"    public void deleteTask(int id) throws DukeException {","lastModifiedDate":"2023-02-20"},{"lineNumber":97,"author":{"gitId":"liuziyang020319"},"content":"        try {","lastModifiedDate":"2023-02-20"},{"lineNumber":98,"author":{"gitId":"liuziyang020319"},"content":"            isValidID(id);","lastModifiedDate":"2023-02-20"},{"lineNumber":99,"author":{"gitId":"liuziyang020319"},"content":"            System.out.println(TASK_DELETED_INFORMATION);","lastModifiedDate":"2023-03-03"},{"lineNumber":100,"author":{"gitId":"liuziyang020319"},"content":"            taskList.get(id).printTask();","lastModifiedDate":"2023-02-14"},{"lineNumber":101,"author":{"gitId":"liuziyang020319"},"content":"            taskList.remove(id);","lastModifiedDate":"2023-02-14"},{"lineNumber":102,"author":{"gitId":"liuziyang020319"},"content":"            System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2023-02-14"},{"lineNumber":103,"author":{"gitId":"liuziyang020319"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-20"},{"lineNumber":104,"author":{"gitId":"liuziyang020319"},"content":"            throw new DukeException(DELETE_FLAG + e.getMessage());","lastModifiedDate":"2023-03-03"},{"lineNumber":105,"author":{"gitId":"liuziyang020319"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":106,"author":{"gitId":"liuziyang020319"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":107,"author":{"gitId":"liuziyang020319"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":108,"author":{"gitId":"liuziyang020319"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":109,"author":{"gitId":"liuziyang020319"},"content":"     * Stores the task list by using a file writer.","lastModifiedDate":"2023-02-28"},{"lineNumber":110,"author":{"gitId":"liuziyang020319"},"content":"     * @param fileWriter the file writer to write the task list to the file.","lastModifiedDate":"2023-02-28"},{"lineNumber":111,"author":{"gitId":"liuziyang020319"},"content":"     * @throws IOException if the file cannot be written.","lastModifiedDate":"2023-02-28"},{"lineNumber":112,"author":{"gitId":"liuziyang020319"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":113,"author":{"gitId":"liuziyang020319"},"content":"    public void storeTask(FileWriter fileWriter) throws IOException {","lastModifiedDate":"2023-02-20"},{"lineNumber":114,"author":{"gitId":"liuziyang020319"},"content":"        try {","lastModifiedDate":"2023-02-14"},{"lineNumber":115,"author":{"gitId":"liuziyang020319"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-02-14"},{"lineNumber":116,"author":{"gitId":"liuziyang020319"},"content":"                fileWriter.write(taskList.get(i).saveTask());","lastModifiedDate":"2023-02-14"},{"lineNumber":117,"author":{"gitId":"liuziyang020319"},"content":"            }","lastModifiedDate":"2023-02-14"},{"lineNumber":118,"author":{"gitId":"liuziyang020319"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-14"},{"lineNumber":119,"author":{"gitId":"liuziyang020319"},"content":"            throw e;","lastModifiedDate":"2023-02-20"},{"lineNumber":120,"author":{"gitId":"liuziyang020319"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":121,"author":{"gitId":"liuziyang020319"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":122,"author":{"gitId":"liuziyang020319"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":123,"author":{"gitId":"liuziyang020319"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":124,"author":{"gitId":"liuziyang020319"},"content":"     * Lists the tasks which are due on the given date,","lastModifiedDate":"2023-02-28"},{"lineNumber":125,"author":{"gitId":"liuziyang020319"},"content":"     * or the events which are happening on the given date.","lastModifiedDate":"2023-02-28"},{"lineNumber":126,"author":{"gitId":"liuziyang020319"},"content":"     * @param date Date that the user wants to find for the event/deadline.","lastModifiedDate":"2023-02-28"},{"lineNumber":127,"author":{"gitId":"liuziyang020319"},"content":"     * @throws DukeException if the date cannot be parsed.","lastModifiedDate":"2023-02-28"},{"lineNumber":128,"author":{"gitId":"liuziyang020319"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":129,"author":{"gitId":"liuziyang020319"},"content":"    public void listTaskByDate(String date) throws DukeException {","lastModifiedDate":"2023-02-20"},{"lineNumber":130,"author":{"gitId":"liuziyang020319"},"content":"        try {","lastModifiedDate":"2023-02-20"},{"lineNumber":131,"author":{"gitId":"liuziyang020319"},"content":"            LocalDate localDate \u003d LocalDate.parse(date);","lastModifiedDate":"2023-02-20"},{"lineNumber":132,"author":{"gitId":"liuziyang020319"},"content":"            System.out.println(TASK_LIST_MATCHING_INFORMATION);","lastModifiedDate":"2023-03-03"},{"lineNumber":133,"author":{"gitId":"liuziyang020319"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-02-20"},{"lineNumber":134,"author":{"gitId":"liuziyang020319"},"content":"                if (taskList.get(i).isDateMatch(localDate)) {","lastModifiedDate":"2023-02-20"},{"lineNumber":135,"author":{"gitId":"liuziyang020319"},"content":"                    taskList.get(i).printTask(i);","lastModifiedDate":"2023-02-20"},{"lineNumber":136,"author":{"gitId":"liuziyang020319"},"content":"                }","lastModifiedDate":"2023-02-20"},{"lineNumber":137,"author":{"gitId":"liuziyang020319"},"content":"            }","lastModifiedDate":"2023-02-20"},{"lineNumber":138,"author":{"gitId":"liuziyang020319"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-02-20"},{"lineNumber":139,"author":{"gitId":"liuziyang020319"},"content":"            throw new DukeException(DATE_FLAG + e.getMessage() +","lastModifiedDate":"2023-03-03"},{"lineNumber":140,"author":{"gitId":"liuziyang020319"},"content":"                    WRONG_DATE_FORMAT_MESSAGE);","lastModifiedDate":"2023-03-03"},{"lineNumber":141,"author":{"gitId":"liuziyang020319"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":142,"author":{"gitId":"liuziyang020319"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":143,"author":{"gitId":"liuziyang020319"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":144,"author":{"gitId":"liuziyang020319"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":145,"author":{"gitId":"liuziyang020319"},"content":"     * Finds and Prints the tasks which contains the given keyword.","lastModifiedDate":"2023-02-28"},{"lineNumber":146,"author":{"gitId":"liuziyang020319"},"content":"     * @param keyword the keyword to be searched.","lastModifiedDate":"2023-02-28"},{"lineNumber":147,"author":{"gitId":"liuziyang020319"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":148,"author":{"gitId":"liuziyang020319"},"content":"    public void findTask(String keyword) {","lastModifiedDate":"2023-02-20"},{"lineNumber":149,"author":{"gitId":"liuziyang020319"},"content":"        System.out.println(TASK_LIST_MATCHING_INFORMATION);","lastModifiedDate":"2023-03-03"},{"lineNumber":150,"author":{"gitId":"liuziyang020319"},"content":"        for(int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-02-20"},{"lineNumber":151,"author":{"gitId":"liuziyang020319"},"content":"            if(taskList.get(i).containsName(keyword)) {","lastModifiedDate":"2023-02-20"},{"lineNumber":152,"author":{"gitId":"liuziyang020319"},"content":"                taskList.get(i).printTask(i);","lastModifiedDate":"2023-02-20"},{"lineNumber":153,"author":{"gitId":"liuziyang020319"},"content":"            }","lastModifiedDate":"2023-02-20"},{"lineNumber":154,"author":{"gitId":"liuziyang020319"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":155,"author":{"gitId":"liuziyang020319"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":156,"author":{"gitId":"liuziyang020319"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"liuziyang020319":156}},{"path":"src/main/java/Duke/DukeFunction/DukeStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"liuziyang020319"},"content":"package Duke.DukeFunction;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"liuziyang020319"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"liuziyang020319"},"content":"import Duke.DukeCommandLine.DukeException;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"liuziyang020319"},"content":"import Duke.DukeTask.DukeDeadline;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"liuziyang020319"},"content":"import Duke.DukeTask.DukeEvent;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"liuziyang020319"},"content":"import Duke.DukeTask.DukeTask;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"liuziyang020319"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"liuziyang020319"},"content":"import java.io.File;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"liuziyang020319"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"liuziyang020319"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"liuziyang020319"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"liuziyang020319"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"liuziyang020319"},"content":"public class DukeStorage {","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"liuziyang020319"},"content":"    private static final String FILE_PATH \u003d \"data/list.txt\";","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"liuziyang020319"},"content":"    private static final String NO_FILE_MESSAGE \u003d \"No file to load!\";","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"liuziyang020319"},"content":"    private static final String WRONG_FORMAT_MESSAGE \u003d \"Sorry, I can\u0027t read the file, the format is wrong\";","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"liuziyang020319"},"content":"    private static final String IO_EXCEPTION_MESSAGE \u003d \"[IOException] Sorry, I can\u0027t load the file, \";","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"liuziyang020319"},"content":"    private static final String MESSAGE_INTERVAL \u003d \" \\\\| \";","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"liuziyang020319"},"content":"    private static final int TASK_TYPE_INDEX \u003d 0;","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"liuziyang020319"},"content":"    private static final int TASK_STATUS_INDEX \u003d 1;","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"liuziyang020319"},"content":"    private static final int TASK_NAME_INDEX \u003d 2;","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"liuziyang020319"},"content":"    private static final int TASK_BY_INDEX \u003d 3;","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"liuziyang020319"},"content":"    private static final int TASK_FROM_INDEX \u003d 3;","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"liuziyang020319"},"content":"    private static final int TASK_TO_INDEX \u003d 4;","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"liuziyang020319"},"content":"    private static final String TASK_TYPE_DEADLINE \u003d \"D\";","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"liuziyang020319"},"content":"    private static final String TASK_TYPE_EVENT \u003d \"E\";","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"liuziyang020319"},"content":"    private static final String TASK_TYPE_TODO \u003d \"T\";","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"liuziyang020319"},"content":"    private static final String TASK_STATUS_DONE \u003d \"1\";","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"liuziyang020319"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"liuziyang020319"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"liuziyang020319"},"content":"     * Saves the task list to the file.","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"liuziyang020319"},"content":"     * @param tasks the task list to be saved.","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"liuziyang020319"},"content":"     * @throws DukeException if the file cannot be saved.","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"liuziyang020319"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"liuziyang020319"},"content":"    public void saveTask(DukeList tasks) throws DukeException {","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"liuziyang020319"},"content":"        File file \u003d new File(FILE_PATH);","lastModifiedDate":"2023-02-20"},{"lineNumber":37,"author":{"gitId":"liuziyang020319"},"content":"        try {","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"liuziyang020319"},"content":"            if(!file.exists()) {","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"liuziyang020319"},"content":"                file.getParentFile().mkdirs();","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"liuziyang020319"},"content":"                file.createNewFile();","lastModifiedDate":"2023-02-20"},{"lineNumber":41,"author":{"gitId":"liuziyang020319"},"content":"            }","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"liuziyang020319"},"content":"            FileWriter fileWriter \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"liuziyang020319"},"content":"            tasks.storeTask(fileWriter);","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"liuziyang020319"},"content":"            fileWriter.close();","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"liuziyang020319"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-20"},{"lineNumber":46,"author":{"gitId":"liuziyang020319"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2023-02-20"},{"lineNumber":47,"author":{"gitId":"liuziyang020319"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":48,"author":{"gitId":"liuziyang020319"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":49,"author":{"gitId":"liuziyang020319"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"liuziyang020319"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"liuziyang020319"},"content":"     * Loads the task list from the file.","lastModifiedDate":"2023-02-28"},{"lineNumber":52,"author":{"gitId":"liuziyang020319"},"content":"     * @param tasks the task list to be loaded.","lastModifiedDate":"2023-02-28"},{"lineNumber":53,"author":{"gitId":"liuziyang020319"},"content":"     * @throws DukeException if the file cannot be loaded or there is no such file.","lastModifiedDate":"2023-02-28"},{"lineNumber":54,"author":{"gitId":"liuziyang020319"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":55,"author":{"gitId":"liuziyang020319"},"content":"    public void loadTask(DukeList tasks) throws DukeException {","lastModifiedDate":"2023-02-20"},{"lineNumber":56,"author":{"gitId":"liuziyang020319"},"content":"        File file \u003d new File(FILE_PATH);","lastModifiedDate":"2023-02-20"},{"lineNumber":57,"author":{"gitId":"liuziyang020319"},"content":"        try {","lastModifiedDate":"2023-02-20"},{"lineNumber":58,"author":{"gitId":"liuziyang020319"},"content":"            if(!file.exists()) {","lastModifiedDate":"2023-02-20"},{"lineNumber":59,"author":{"gitId":"liuziyang020319"},"content":"                throw new DukeException(NO_FILE_MESSAGE);","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"liuziyang020319"},"content":"            }","lastModifiedDate":"2023-02-20"},{"lineNumber":61,"author":{"gitId":"liuziyang020319"},"content":"            Scanner fileReader \u003d new Scanner(file);","lastModifiedDate":"2023-02-20"},{"lineNumber":62,"author":{"gitId":"liuziyang020319"},"content":"            String TaskLine;","lastModifiedDate":"2023-02-20"},{"lineNumber":63,"author":{"gitId":"liuziyang020319"},"content":"            while(fileReader.hasNextLine()) {","lastModifiedDate":"2023-02-20"},{"lineNumber":64,"author":{"gitId":"liuziyang020319"},"content":"                TaskLine \u003d fileReader.nextLine();","lastModifiedDate":"2023-02-20"},{"lineNumber":65,"author":{"gitId":"liuziyang020319"},"content":"                String[] taskInfo \u003d TaskLine.split(MESSAGE_INTERVAL);","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"liuziyang020319"},"content":"                String taskType \u003d taskInfo[TASK_TYPE_INDEX].trim();","lastModifiedDate":"2023-02-20"},{"lineNumber":67,"author":{"gitId":"liuziyang020319"},"content":"                String taskStatus \u003d taskInfo[TASK_STATUS_INDEX].trim();","lastModifiedDate":"2023-02-20"},{"lineNumber":68,"author":{"gitId":"liuziyang020319"},"content":"                String taskName \u003d taskInfo[TASK_NAME_INDEX].trim();","lastModifiedDate":"2023-02-20"},{"lineNumber":69,"author":{"gitId":"liuziyang020319"},"content":"                switch (taskType) {","lastModifiedDate":"2023-02-20"},{"lineNumber":70,"author":{"gitId":"liuziyang020319"},"content":"                case TASK_TYPE_TODO:","lastModifiedDate":"2023-02-20"},{"lineNumber":71,"author":{"gitId":"liuziyang020319"},"content":"                    DukeTask task \u003d new DukeTask(taskName);","lastModifiedDate":"2023-02-20"},{"lineNumber":72,"author":{"gitId":"liuziyang020319"},"content":"                    if(taskStatus.equals(TASK_STATUS_DONE)) {","lastModifiedDate":"2023-02-20"},{"lineNumber":73,"author":{"gitId":"liuziyang020319"},"content":"                        task.markAsDone();","lastModifiedDate":"2023-02-20"},{"lineNumber":74,"author":{"gitId":"liuziyang020319"},"content":"                    }","lastModifiedDate":"2023-02-20"},{"lineNumber":75,"author":{"gitId":"liuziyang020319"},"content":"                    tasks.addTask(task);","lastModifiedDate":"2023-02-20"},{"lineNumber":76,"author":{"gitId":"liuziyang020319"},"content":"                    break;","lastModifiedDate":"2023-02-20"},{"lineNumber":77,"author":{"gitId":"liuziyang020319"},"content":"                case TASK_TYPE_DEADLINE:","lastModifiedDate":"2023-02-20"},{"lineNumber":78,"author":{"gitId":"liuziyang020319"},"content":"                    String taskBy \u003d taskInfo[TASK_BY_INDEX].trim();","lastModifiedDate":"2023-02-20"},{"lineNumber":79,"author":{"gitId":"liuziyang020319"},"content":"                    DukeTask deadline \u003d new DukeDeadline(taskName, taskBy);","lastModifiedDate":"2023-02-20"},{"lineNumber":80,"author":{"gitId":"liuziyang020319"},"content":"                    if(taskStatus.equals(TASK_STATUS_DONE)) {","lastModifiedDate":"2023-02-20"},{"lineNumber":81,"author":{"gitId":"liuziyang020319"},"content":"                        deadline.markAsDone();","lastModifiedDate":"2023-02-20"},{"lineNumber":82,"author":{"gitId":"liuziyang020319"},"content":"                    }","lastModifiedDate":"2023-02-20"},{"lineNumber":83,"author":{"gitId":"liuziyang020319"},"content":"                    tasks.addTask(deadline);","lastModifiedDate":"2023-02-20"},{"lineNumber":84,"author":{"gitId":"liuziyang020319"},"content":"                    break;","lastModifiedDate":"2023-02-20"},{"lineNumber":85,"author":{"gitId":"liuziyang020319"},"content":"                case TASK_TYPE_EVENT:","lastModifiedDate":"2023-02-20"},{"lineNumber":86,"author":{"gitId":"liuziyang020319"},"content":"                    String taskFrom \u003d taskInfo[TASK_FROM_INDEX].trim();","lastModifiedDate":"2023-02-20"},{"lineNumber":87,"author":{"gitId":"liuziyang020319"},"content":"                    String taskTo \u003d taskInfo[TASK_TO_INDEX].trim();","lastModifiedDate":"2023-02-20"},{"lineNumber":88,"author":{"gitId":"liuziyang020319"},"content":"                    DukeTask event \u003d new DukeEvent(taskName, taskFrom, taskTo);","lastModifiedDate":"2023-02-20"},{"lineNumber":89,"author":{"gitId":"liuziyang020319"},"content":"                    if(taskStatus.equals(TASK_STATUS_DONE)) {","lastModifiedDate":"2023-02-20"},{"lineNumber":90,"author":{"gitId":"liuziyang020319"},"content":"                        event.markAsDone();","lastModifiedDate":"2023-02-20"},{"lineNumber":91,"author":{"gitId":"liuziyang020319"},"content":"                    }","lastModifiedDate":"2023-02-20"},{"lineNumber":92,"author":{"gitId":"liuziyang020319"},"content":"                    tasks.addTask(event);","lastModifiedDate":"2023-02-20"},{"lineNumber":93,"author":{"gitId":"liuziyang020319"},"content":"                    break;","lastModifiedDate":"2023-02-20"},{"lineNumber":94,"author":{"gitId":"liuziyang020319"},"content":"                default:","lastModifiedDate":"2023-02-20"},{"lineNumber":95,"author":{"gitId":"liuziyang020319"},"content":"                    throw new DukeException(WRONG_FORMAT_MESSAGE);","lastModifiedDate":"2023-03-03"},{"lineNumber":96,"author":{"gitId":"liuziyang020319"},"content":"                }","lastModifiedDate":"2023-02-20"},{"lineNumber":97,"author":{"gitId":"liuziyang020319"},"content":"            }","lastModifiedDate":"2023-02-20"},{"lineNumber":98,"author":{"gitId":"liuziyang020319"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-20"},{"lineNumber":99,"author":{"gitId":"liuziyang020319"},"content":"            throw new DukeException(IO_EXCEPTION_MESSAGE + e.getMessage());","lastModifiedDate":"2023-03-03"},{"lineNumber":100,"author":{"gitId":"liuziyang020319"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":101,"author":{"gitId":"liuziyang020319"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":102,"author":{"gitId":"liuziyang020319"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":103,"author":{"gitId":"liuziyang020319"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"liuziyang020319":103}},{"path":"src/main/java/Duke/DukeFunction/DukeUI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"liuziyang020319"},"content":"package Duke.DukeFunction;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"liuziyang020319"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"liuziyang020319"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"liuziyang020319"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"liuziyang020319"},"content":"public class DukeUI {","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"liuziyang020319"},"content":"    private static final String LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"liuziyang020319"},"content":"    private static final String DUKE_LOGO \u003d \"Hello from\\n\" +","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"liuziyang020319"},"content":"            \" ____        _        \\n\"","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"liuziyang020319"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"liuziyang020319"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"liuziyang020319"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"liuziyang020319"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"liuziyang020319"},"content":"    private static final String EDITOR_LOGO \u003d  \" _____ ____ ___ _____ ___  ____      _     ___ _   _ __________   __ _    _   _  ____\\n\" +","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"liuziyang020319"},"content":"                                  \"| ____|  _ \\\\_ _|_   _/ _ \\\\|  _ \\\\ _  | |   |_ _| | | |__  /_ _\\\\ \\\\ / // \\\\  | \\\\ | |/ ___|\\n\" +","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"liuziyang020319"},"content":"                                  \"|  _| | | | | |  | || | | | |_) (_) | |    | || | | | / / | | \\\\ V // _ \\\\ |  \\\\| | |  _\\n\" +","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"liuziyang020319"},"content":"                                  \"| |___| |_| | |  | || |_| |  _ \u003c _  | |___ | || |_| |/ /_ | |  | |/ ___ \\\\| |\\\\  | |_| |\\n\" +","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"liuziyang020319"},"content":"                                  \"|_____|____/___| |_| \\\\___/|_| \\\\_(_) |_____|___|\\\\___//____|___| |_/_/   \\\\_\\\\_| \\\\_|\\\\____|\\n\";","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"liuziyang020319"},"content":"    private static final String GOODBYE_LOGO \u003d \"Bye. Hope to see you again soon!\\n\" +","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"liuziyang020319"},"content":"                                    \"  ____  ___   ___  ____  ______   _______ _\\n\" +","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"liuziyang020319"},"content":"                                    \" / ___|/ _ \\\\ / _ \\\\|  _ \\\\| __ ) \\\\ / / ____| |\\n\" +","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"liuziyang020319"},"content":"                                    \"| |  _| | | | | | | | | |  _ \\\\\\\\ V /|  _| | |\\n\" +","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"liuziyang020319"},"content":"                                    \"| |_| | |_| | |_| | |_| | |_) || | | |___|_|\\n\" +","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"liuziyang020319"},"content":"                                    \" \\\\____|\\\\___/ \\\\___/|____/|____/ |_| |_____(_)\\n\";","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"liuziyang020319"},"content":"    private static final String ERROR_MESSAGE \u003d \"[\u003eError] \";","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"liuziyang020319"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"liuziyang020319"},"content":"    private static final String EDITOR_MESSAGE \u003d \"Hello! I\u0027m DukeRobot, edited by liuziyang\\n\" +","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"liuziyang020319"},"content":"            \"What can I do for you?\";","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"liuziyang020319"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"liuziyang020319"},"content":"    public Scanner in;","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"liuziyang020319"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"liuziyang020319"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"liuziyang020319"},"content":"     * Constructor for DukeUI","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"liuziyang020319"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"liuziyang020319"},"content":"    public DukeUI() {","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"liuziyang020319"},"content":"        in \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"liuziyang020319"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":37,"author":{"gitId":"liuziyang020319"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"liuziyang020319"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"liuziyang020319"},"content":"     * Returns the line that reads from the command line.","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"liuziyang020319"},"content":"     * @return String of the next line of input.","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"liuziyang020319"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"liuziyang020319"},"content":"    public String readCommand() {","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"liuziyang020319"},"content":"        return in.nextLine();","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"liuziyang020319"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"liuziyang020319"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"liuziyang020319"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"liuziyang020319"},"content":"     * Prints the Duke logo.","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"liuziyang020319"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"liuziyang020319"},"content":"    public void printDukeLogo() { System.out.println(DUKE_LOGO);}","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"liuziyang020319"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"liuziyang020319"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":52,"author":{"gitId":"liuziyang020319"},"content":"     * Prints the Editor logo.","lastModifiedDate":"2023-02-28"},{"lineNumber":53,"author":{"gitId":"liuziyang020319"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":54,"author":{"gitId":"liuziyang020319"},"content":"    public void printEditorLogo(){","lastModifiedDate":"2023-02-20"},{"lineNumber":55,"author":{"gitId":"liuziyang020319"},"content":"        System.out.println(EDITOR_LOGO + EDITOR_MESSAGE);","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"liuziyang020319"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"liuziyang020319"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":58,"author":{"gitId":"liuziyang020319"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":59,"author":{"gitId":"liuziyang020319"},"content":"     * Prints all the greetings to the user.","lastModifiedDate":"2023-02-28"},{"lineNumber":60,"author":{"gitId":"liuziyang020319"},"content":"     * Includes the Duke logo, editor logo, and the greeting message.","lastModifiedDate":"2023-02-28"},{"lineNumber":61,"author":{"gitId":"liuziyang020319"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":62,"author":{"gitId":"liuziyang020319"},"content":"    public void printGreeting(){","lastModifiedDate":"2023-02-20"},{"lineNumber":63,"author":{"gitId":"liuziyang020319"},"content":"        printDukeLogo();","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"liuziyang020319"},"content":"        printEditorLogo();","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"liuziyang020319"},"content":"        printLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"liuziyang020319"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"liuziyang020319"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":68,"author":{"gitId":"liuziyang020319"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":69,"author":{"gitId":"liuziyang020319"},"content":"     * Prints the Goodbye logo.","lastModifiedDate":"2023-02-28"},{"lineNumber":70,"author":{"gitId":"liuziyang020319"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":71,"author":{"gitId":"liuziyang020319"},"content":"    public void printGoodbyeLogo(){","lastModifiedDate":"2023-02-20"},{"lineNumber":72,"author":{"gitId":"liuziyang020319"},"content":"        System.out.println(GOODBYE_LOGO);","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"liuziyang020319"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":74,"author":{"gitId":"liuziyang020319"},"content":"    public void printString(String s){","lastModifiedDate":"2023-02-20"},{"lineNumber":75,"author":{"gitId":"liuziyang020319"},"content":"        System.out.println(s);","lastModifiedDate":"2023-01-25"},{"lineNumber":76,"author":{"gitId":"liuziyang020319"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":77,"author":{"gitId":"liuziyang020319"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":78,"author":{"gitId":"liuziyang020319"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":79,"author":{"gitId":"liuziyang020319"},"content":"     * Prints the message when an error occurs.","lastModifiedDate":"2023-02-28"},{"lineNumber":80,"author":{"gitId":"liuziyang020319"},"content":"     * @param s String to be printed.","lastModifiedDate":"2023-02-28"},{"lineNumber":81,"author":{"gitId":"liuziyang020319"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":82,"author":{"gitId":"liuziyang020319"},"content":"    public void printError(String s){","lastModifiedDate":"2023-02-20"},{"lineNumber":83,"author":{"gitId":"liuziyang020319"},"content":"        System.out.println(ERROR_MESSAGE + s);","lastModifiedDate":"2023-03-03"},{"lineNumber":84,"author":{"gitId":"liuziyang020319"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":85,"author":{"gitId":"liuziyang020319"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":86,"author":{"gitId":"liuziyang020319"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":87,"author":{"gitId":"liuziyang020319"},"content":"     * Prints the dividing line.","lastModifiedDate":"2023-02-28"},{"lineNumber":88,"author":{"gitId":"liuziyang020319"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":89,"author":{"gitId":"liuziyang020319"},"content":"    public void printLine(){","lastModifiedDate":"2023-02-20"},{"lineNumber":90,"author":{"gitId":"liuziyang020319"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-01-25"},{"lineNumber":91,"author":{"gitId":"liuziyang020319"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":92,"author":{"gitId":"liuziyang020319"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"liuziyang020319":92}},{"path":"src/main/java/Duke/DukeRobot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"liuziyang020319"},"content":"package Duke;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"liuziyang020319"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"liuziyang020319"},"content":"import Duke.DukeCommandLine.DukeCommandLineInput;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"liuziyang020319"},"content":"import Duke.DukeCommandLine.DukeParser;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"liuziyang020319"},"content":"import Duke.DukeCommandLine.DukeException;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"liuziyang020319"},"content":"import Duke.DukeFunction.DukeList;","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"liuziyang020319"},"content":"import Duke.DukeFunction.DukeStorage;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"liuziyang020319"},"content":"import Duke.DukeFunction.DukeUI;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"liuziyang020319"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"liuziyang020319"},"content":"public class DukeRobot {","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"liuziyang020319"},"content":"    private static String LOADING_MESSAGE \u003d \"Loading tasks from file...\";","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"liuziyang020319"},"content":"    private DukeUI ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"liuziyang020319"},"content":"    private DukeList tasks;","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"liuziyang020319"},"content":"    private DukeParser parser;","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"liuziyang020319"},"content":"    private DukeStorage storage;","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"liuziyang020319"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"liuziyang020319"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"liuziyang020319"},"content":"     * Constructor for DukeRobot.","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"liuziyang020319"},"content":"     * Prepares the DukeRobot for use:","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"liuziyang020319"},"content":"     * initialises the ui, tasks, parser and storage.","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"liuziyang020319"},"content":"     * loads the existing tasks from the storage.","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"liuziyang020319"},"content":"     * prints all the greetings.","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"liuziyang020319"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"liuziyang020319"},"content":"    public DukeRobot() {","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"liuziyang020319"},"content":"        this.ui \u003d new DukeUI();","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"liuziyang020319"},"content":"        this.tasks \u003d new DukeList();","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"liuziyang020319"},"content":"        this.parser \u003d new DukeParser();","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"liuziyang020319"},"content":"        this.storage \u003d new DukeStorage();","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"liuziyang020319"},"content":"        ui.printGreeting();","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"liuziyang020319"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"liuziyang020319"},"content":"            System.out.println(LOADING_MESSAGE);","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"liuziyang020319"},"content":"            storage.loadTask(tasks);","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"liuziyang020319"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"liuziyang020319"},"content":"            ui.printString(e.getMessage());","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"liuziyang020319"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"liuziyang020319"},"content":"        ui.printLine();","lastModifiedDate":"2023-02-20"},{"lineNumber":37,"author":{"gitId":"liuziyang020319"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"liuziyang020319"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"liuziyang020319"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"liuziyang020319"},"content":"     * Runs the program until termination (user types \"bye\").","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"liuziyang020319"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"liuziyang020319"},"content":"    public void run() {","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"liuziyang020319"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"liuziyang020319"},"content":"        while(!isExit) {","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"liuziyang020319"},"content":"            try {","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"liuziyang020319"},"content":"                String fullCommand  \u003d ui.readCommand();","lastModifiedDate":"2023-02-20"},{"lineNumber":47,"author":{"gitId":"liuziyang020319"},"content":"                DukeCommandLineInput command \u003d parser.parse(fullCommand);","lastModifiedDate":"2023-02-20"},{"lineNumber":48,"author":{"gitId":"liuziyang020319"},"content":"                command.execute(tasks, ui, parser, storage);","lastModifiedDate":"2023-02-20"},{"lineNumber":49,"author":{"gitId":"liuziyang020319"},"content":"                isExit \u003d command.isExit();","lastModifiedDate":"2023-02-20"},{"lineNumber":50,"author":{"gitId":"liuziyang020319"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-02-20"},{"lineNumber":51,"author":{"gitId":"liuziyang020319"},"content":"                ui.printError(e.getMessage());","lastModifiedDate":"2023-02-20"},{"lineNumber":52,"author":{"gitId":"liuziyang020319"},"content":"            } finally {","lastModifiedDate":"2023-02-20"},{"lineNumber":53,"author":{"gitId":"liuziyang020319"},"content":"                ui.printLine();","lastModifiedDate":"2023-02-20"},{"lineNumber":54,"author":{"gitId":"liuziyang020319"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"liuziyang020319"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"liuziyang020319"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"liuziyang020319"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":58,"author":{"gitId":"liuziyang020319"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-20"},{"lineNumber":59,"author":{"gitId":"liuziyang020319"},"content":"        new DukeRobot().run();","lastModifiedDate":"2023-02-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"liuziyang020319":59,"-":2}},{"path":"src/main/java/Duke/DukeTask/DukeDeadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"liuziyang020319"},"content":"package Duke.DukeTask;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"liuziyang020319"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"liuziyang020319"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"liuziyang020319"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"liuziyang020319"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"liuziyang020319"},"content":"public class DukeDeadline extends DukeTask {","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"liuziyang020319"},"content":"    protected String deadline;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"liuziyang020319"},"content":"    protected boolean formatted;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"liuziyang020319"},"content":"    protected LocalDate deadlineDate;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"liuziyang020319"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"liuziyang020319"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"liuziyang020319"},"content":"     * Constructor for DukeDeadline","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"liuziyang020319"},"content":"     * If the date is formatted, it will be parsed into LocalDate.","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"liuziyang020319"},"content":"     * @param taskName Name of the task.","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"liuziyang020319"},"content":"     * @param deadline Deadline of the task(by).","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"liuziyang020319"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"liuziyang020319"},"content":"    public DukeDeadline(String taskName, String deadline) {","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"liuziyang020319"},"content":"        super(taskName);","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"liuziyang020319"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"liuziyang020319"},"content":"        try {","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"liuziyang020319"},"content":"            this.deadlineDate \u003d LocalDate.parse(deadline);","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"liuziyang020319"},"content":"            this.formatted \u003d true;","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"liuziyang020319"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"liuziyang020319"},"content":"            this.formatted \u003d false;","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"liuziyang020319"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"liuziyang020319"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"liuziyang020319"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"liuziyang020319"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"liuziyang020319"},"content":"     * Prints the task in the format of:","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"liuziyang020319"},"content":"     * \"id. [Task Type] [Status Icon] Task Name (by: deadline)\".","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"liuziyang020319"},"content":"     * If the date can be parsed into LocalDate, it will be printed in the format of MMM d yyyy.","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"liuziyang020319"},"content":"     * @param id the id of the task in the list.","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"liuziyang020319"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"liuziyang020319"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"liuziyang020319"},"content":"    public void printTask(int id) {","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"liuziyang020319"},"content":"        System.out.println((id +1) + \".[D] [\" +","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"liuziyang020319"},"content":"                this.getStatusIcon() + \"] \" + this.taskName + \" (by: \" +","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"liuziyang020319"},"content":"                ((this.formatted) ? deadlineDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) : deadline)","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"liuziyang020319"},"content":"                + \")\");","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"liuziyang020319"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"liuziyang020319"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"liuziyang020319"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"liuziyang020319"},"content":"     * Prints the task in the format of:","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"liuziyang020319"},"content":"     * \"[Task Type] [Status Icon] Task Name (by: deadline)\".","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"liuziyang020319"},"content":"     * If the date can be parsed into LocalDate, it will be printed in the format of MMM d yyyy.","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"liuziyang020319"},"content":"     * @param id the id of the task in the list.","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"liuziyang020319"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"liuziyang020319"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"liuziyang020319"},"content":"    public void printTask() {","lastModifiedDate":"2023-02-02"},{"lineNumber":50,"author":{"gitId":"liuziyang020319"},"content":"        System.out.println(\"[D] [\" +","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"liuziyang020319"},"content":"                this.getStatusIcon() + \"] \" + this.taskName + \" (by: \" +","lastModifiedDate":"2023-02-20"},{"lineNumber":52,"author":{"gitId":"liuziyang020319"},"content":"                ((this.formatted) ? deadlineDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) : deadline)","lastModifiedDate":"2023-02-20"},{"lineNumber":53,"author":{"gitId":"liuziyang020319"},"content":"                + \")\");","lastModifiedDate":"2023-02-20"},{"lineNumber":54,"author":{"gitId":"liuziyang020319"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":55,"author":{"gitId":"liuziyang020319"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":56,"author":{"gitId":"liuziyang020319"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":57,"author":{"gitId":"liuziyang020319"},"content":"     * Returns the String in the format of:","lastModifiedDate":"2023-02-28"},{"lineNumber":58,"author":{"gitId":"liuziyang020319"},"content":"     * \"D | [Status Icon] | Task Name | deadline\".","lastModifiedDate":"2023-02-28"},{"lineNumber":59,"author":{"gitId":"liuziyang020319"},"content":"     * @return the string representation of the deadline.","lastModifiedDate":"2023-02-28"},{"lineNumber":60,"author":{"gitId":"liuziyang020319"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":61,"author":{"gitId":"liuziyang020319"},"content":"    @Override","lastModifiedDate":"2023-02-14"},{"lineNumber":62,"author":{"gitId":"liuziyang020319"},"content":"    public String saveTask() {","lastModifiedDate":"2023-02-14"},{"lineNumber":63,"author":{"gitId":"liuziyang020319"},"content":"        return \"D | \" + (this.isDone ? \"1\" : \"0\") + \" | \" + this.taskName + \" | \" + this.deadline + \u0027\\n\u0027;","lastModifiedDate":"2023-02-14"},{"lineNumber":64,"author":{"gitId":"liuziyang020319"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":65,"author":{"gitId":"liuziyang020319"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":66,"author":{"gitId":"liuziyang020319"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":67,"author":{"gitId":"liuziyang020319"},"content":"     * @param date the date to be checked. (in the format of yyyy-mm-dd)","lastModifiedDate":"2023-02-28"},{"lineNumber":68,"author":{"gitId":"liuziyang020319"},"content":"     * @return true if the deadline is before the date.","lastModifiedDate":"2023-02-28"},{"lineNumber":69,"author":{"gitId":"liuziyang020319"},"content":"     * If the date is not formatted, it will return false.","lastModifiedDate":"2023-02-28"},{"lineNumber":70,"author":{"gitId":"liuziyang020319"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":71,"author":{"gitId":"liuziyang020319"},"content":"    @Override","lastModifiedDate":"2023-02-20"},{"lineNumber":72,"author":{"gitId":"liuziyang020319"},"content":"    public boolean isDateMatch(LocalDate date) {","lastModifiedDate":"2023-02-20"},{"lineNumber":73,"author":{"gitId":"liuziyang020319"},"content":"        if(!this.formatted) {","lastModifiedDate":"2023-02-20"},{"lineNumber":74,"author":{"gitId":"liuziyang020319"},"content":"            return false;","lastModifiedDate":"2023-02-20"},{"lineNumber":75,"author":{"gitId":"liuziyang020319"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":76,"author":{"gitId":"liuziyang020319"},"content":"        return this.deadlineDate.isEqual(date);","lastModifiedDate":"2023-02-20"},{"lineNumber":77,"author":{"gitId":"liuziyang020319"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":78,"author":{"gitId":"liuziyang020319"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"liuziyang020319":78}},{"path":"src/main/java/Duke/DukeTask/DukeEvent.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"liuziyang020319"},"content":"package Duke.DukeTask;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"liuziyang020319"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"liuziyang020319"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"liuziyang020319"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"liuziyang020319"},"content":"public class DukeEvent extends DukeTask {","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"liuziyang020319"},"content":"    protected String eventFrom;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"liuziyang020319"},"content":"    protected String eventTo;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"liuziyang020319"},"content":"    protected boolean formatted;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"liuziyang020319"},"content":"    protected LocalDate eventFromDate;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"liuziyang020319"},"content":"    protected LocalDate eventToDate;","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"liuziyang020319"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"liuziyang020319"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"liuziyang020319"},"content":"     * Constructor for DukeEvent.","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"liuziyang020319"},"content":"     * If the date is formatted, it will be parsed into LocalDate.","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"liuziyang020319"},"content":"     * @param taskName Name of the task.","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"liuziyang020319"},"content":"     * @param eventFrom The start date of the event.","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"liuziyang020319"},"content":"     * @param eventTo The end date of the event.","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"liuziyang020319"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"liuziyang020319"},"content":"    public DukeEvent(String taskName, String eventFrom, String eventTo) {","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"liuziyang020319"},"content":"        super(taskName);","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"liuziyang020319"},"content":"        this.eventFrom \u003d eventFrom;","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"liuziyang020319"},"content":"        this.eventTo \u003d eventTo;","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"liuziyang020319"},"content":"        try {","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"liuziyang020319"},"content":"            this.eventFromDate \u003d LocalDate.parse(eventFrom);","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"liuziyang020319"},"content":"            this.eventToDate \u003d LocalDate.parse(eventTo);","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"liuziyang020319"},"content":"            this.formatted \u003d true;","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"liuziyang020319"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"liuziyang020319"},"content":"            this.formatted \u003d false;","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"liuziyang020319"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"liuziyang020319"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"liuziyang020319"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"liuziyang020319"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"liuziyang020319"},"content":"     * Prints the task in the format of:","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"liuziyang020319"},"content":"     * \"id. [Task Type] [Status Icon] Task Name (from: start date to: end date)\".","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"liuziyang020319"},"content":"     * If the date can be parsed into LocalDate, it will be printed in the format of MMM d yyyy.","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"liuziyang020319"},"content":"     * @param id the id of the task in the list.","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"liuziyang020319"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"liuziyang020319"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"liuziyang020319"},"content":"    public void printTask(int id) {","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"liuziyang020319"},"content":"        System.out.println((id +1) + \".[E] [\" + this.getStatusIcon() + \"] \"","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"liuziyang020319"},"content":"                + this.taskName + \" (from: \"","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"liuziyang020319"},"content":"                + ((this.formatted) ? eventFromDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) : eventFrom)","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"liuziyang020319"},"content":"                + \" to: \"","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"liuziyang020319"},"content":"                + ((this.formatted) ? eventToDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) : eventTo)","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"liuziyang020319"},"content":"                + \")\");","lastModifiedDate":"2023-02-20"},{"lineNumber":46,"author":{"gitId":"liuziyang020319"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"liuziyang020319"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"liuziyang020319"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"liuziyang020319"},"content":"     * Prints the task in the format of:","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"liuziyang020319"},"content":"     * \"[Task Type] [Status Icon] Task Name (from: start date to: end date)\".","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"liuziyang020319"},"content":"     * If the date can be parsed into LocalDate, it will be printed in the format of MMM d yyyy.","lastModifiedDate":"2023-02-28"},{"lineNumber":52,"author":{"gitId":"liuziyang020319"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":53,"author":{"gitId":"liuziyang020319"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":54,"author":{"gitId":"liuziyang020319"},"content":"    public void printTask() {","lastModifiedDate":"2023-02-02"},{"lineNumber":55,"author":{"gitId":"liuziyang020319"},"content":"        System.out.println(\"[E] [\" + this.getStatusIcon() + \"] \"","lastModifiedDate":"2023-02-02"},{"lineNumber":56,"author":{"gitId":"liuziyang020319"},"content":"                + this.taskName + \" (from: \"","lastModifiedDate":"2023-02-20"},{"lineNumber":57,"author":{"gitId":"liuziyang020319"},"content":"                + ((this.formatted) ? eventFromDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) : eventFrom)","lastModifiedDate":"2023-02-20"},{"lineNumber":58,"author":{"gitId":"liuziyang020319"},"content":"                + \" to: \"","lastModifiedDate":"2023-02-20"},{"lineNumber":59,"author":{"gitId":"liuziyang020319"},"content":"                + ((this.formatted) ? eventToDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) : eventTo)","lastModifiedDate":"2023-02-20"},{"lineNumber":60,"author":{"gitId":"liuziyang020319"},"content":"                + \")\");","lastModifiedDate":"2023-02-20"},{"lineNumber":61,"author":{"gitId":"liuziyang020319"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":62,"author":{"gitId":"liuziyang020319"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":63,"author":{"gitId":"liuziyang020319"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":64,"author":{"gitId":"liuziyang020319"},"content":"     * Returns the String in the format of:","lastModifiedDate":"2023-02-28"},{"lineNumber":65,"author":{"gitId":"liuziyang020319"},"content":"     * \"E | [Status Icon] | Task Name | start date | end date\".","lastModifiedDate":"2023-02-28"},{"lineNumber":66,"author":{"gitId":"liuziyang020319"},"content":"     * @return the string representation of the event.","lastModifiedDate":"2023-02-28"},{"lineNumber":67,"author":{"gitId":"liuziyang020319"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":68,"author":{"gitId":"liuziyang020319"},"content":"    @Override","lastModifiedDate":"2023-02-14"},{"lineNumber":69,"author":{"gitId":"liuziyang020319"},"content":"    public String saveTask() {","lastModifiedDate":"2023-02-14"},{"lineNumber":70,"author":{"gitId":"liuziyang020319"},"content":"        return \"E | \" + (this.isDone ? \"1\" : \"0\") + \" | \" + this.taskName + \" | \"","lastModifiedDate":"2023-02-14"},{"lineNumber":71,"author":{"gitId":"liuziyang020319"},"content":"                + this.eventFrom + \" | \" + this.eventTo + \u0027\\n\u0027;","lastModifiedDate":"2023-02-14"},{"lineNumber":72,"author":{"gitId":"liuziyang020319"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":73,"author":{"gitId":"liuziyang020319"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":74,"author":{"gitId":"liuziyang020319"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":75,"author":{"gitId":"liuziyang020319"},"content":"     * Checks if the event is on the date. (in the format of yyyy-mm-dd)","lastModifiedDate":"2023-02-28"},{"lineNumber":76,"author":{"gitId":"liuziyang020319"},"content":"     * @param date the date to be checked.","lastModifiedDate":"2023-02-28"},{"lineNumber":77,"author":{"gitId":"liuziyang020319"},"content":"     * @return true if the date is between the start date and end date of the event.","lastModifiedDate":"2023-02-28"},{"lineNumber":78,"author":{"gitId":"liuziyang020319"},"content":"     * If the date cannot be parsed into LocalDate, it will return false.","lastModifiedDate":"2023-02-28"},{"lineNumber":79,"author":{"gitId":"liuziyang020319"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":80,"author":{"gitId":"liuziyang020319"},"content":"    @Override","lastModifiedDate":"2023-02-20"},{"lineNumber":81,"author":{"gitId":"liuziyang020319"},"content":"    public boolean isDateMatch(LocalDate date) {","lastModifiedDate":"2023-02-20"},{"lineNumber":82,"author":{"gitId":"liuziyang020319"},"content":"        if(!this.formatted) {","lastModifiedDate":"2023-02-20"},{"lineNumber":83,"author":{"gitId":"liuziyang020319"},"content":"            return false;","lastModifiedDate":"2023-02-20"},{"lineNumber":84,"author":{"gitId":"liuziyang020319"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":85,"author":{"gitId":"liuziyang020319"},"content":"        boolean afterFrom \u003d this.eventFromDate.isBefore(date) || this.eventFromDate.isEqual(date);","lastModifiedDate":"2023-02-20"},{"lineNumber":86,"author":{"gitId":"liuziyang020319"},"content":"        boolean beforeTo \u003d this.eventToDate.isAfter(date) || this.eventToDate.isEqual(date);","lastModifiedDate":"2023-02-20"},{"lineNumber":87,"author":{"gitId":"liuziyang020319"},"content":"        return afterFrom \u0026\u0026 beforeTo;","lastModifiedDate":"2023-02-20"},{"lineNumber":88,"author":{"gitId":"liuziyang020319"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":89,"author":{"gitId":"liuziyang020319"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"liuziyang020319":89}},{"path":"src/main/java/Duke/DukeTask/DukeTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"liuziyang020319"},"content":"package Duke.DukeTask;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"liuziyang020319"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"liuziyang020319"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"liuziyang020319"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"liuziyang020319"},"content":"public class DukeTask {","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"liuziyang020319"},"content":"    protected String taskName;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"liuziyang020319"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"liuziyang020319"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"liuziyang020319"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"liuziyang020319"},"content":"     * Constructor for DukeTask","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"liuziyang020319"},"content":"     * @param taskName Name of the task","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"liuziyang020319"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"liuziyang020319"},"content":"    public DukeTask(String taskName) {","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"liuziyang020319"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"liuziyang020319"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"liuziyang020319"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"liuziyang020319"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"liuziyang020319"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"liuziyang020319"},"content":"     * Returns the status icon of the task.","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"liuziyang020319"},"content":"     * @return the task status icon, with X if done, else with space.","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"liuziyang020319"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"liuziyang020319"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"liuziyang020319"},"content":"        return (this.isDone ? \"X\" : \" \");","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"liuziyang020319"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"liuziyang020319"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"liuziyang020319"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"liuziyang020319"},"content":"     * Marks the particular task as done.","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"liuziyang020319"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"liuziyang020319"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"liuziyang020319"},"content":"        if(this.isDone) {","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"liuziyang020319"},"content":"            System.out.println(\"[Warning] This task is already done!\");","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"liuziyang020319"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"liuziyang020319"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"liuziyang020319"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"liuziyang020319"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"liuziyang020319"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"liuziyang020319"},"content":"     * Unmarks the particular task as done (withdrawing the done status).","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"liuziyang020319"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"liuziyang020319"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"liuziyang020319"},"content":"        if(!this.isDone) {","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"liuziyang020319"},"content":"            System.out.println(\"[Warning] This task is not done yet!\");","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"liuziyang020319"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"liuziyang020319"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"liuziyang020319"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"liuziyang020319"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"liuziyang020319"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"liuziyang020319"},"content":"     * Prints the task in the format of [Task Type] [Status Icon] Task Name.","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"liuziyang020319"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"liuziyang020319"},"content":"    public void printTask(){","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"liuziyang020319"},"content":"        System.out.println(\"[T] [\" +","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"liuziyang020319"},"content":"                this.getStatusIcon() + \"] \" + this.taskName);","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"liuziyang020319"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"liuziyang020319"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":54,"author":{"gitId":"liuziyang020319"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":55,"author":{"gitId":"liuziyang020319"},"content":"     * Prints the task in the format of id. [Task Type] [Status Icon] Task Name.","lastModifiedDate":"2023-02-28"},{"lineNumber":56,"author":{"gitId":"liuziyang020319"},"content":"     * @param id the id of the task in the list.","lastModifiedDate":"2023-02-28"},{"lineNumber":57,"author":{"gitId":"liuziyang020319"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":58,"author":{"gitId":"liuziyang020319"},"content":"    public void printTask(int id) {","lastModifiedDate":"2023-02-02"},{"lineNumber":59,"author":{"gitId":"liuziyang020319"},"content":"        System.out.println((id+1) + \".[T] [\" +","lastModifiedDate":"2023-02-02"},{"lineNumber":60,"author":{"gitId":"liuziyang020319"},"content":"                this.getStatusIcon() + \"] \" + this.taskName);","lastModifiedDate":"2023-02-02"},{"lineNumber":61,"author":{"gitId":"liuziyang020319"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"liuziyang020319"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":63,"author":{"gitId":"liuziyang020319"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":64,"author":{"gitId":"liuziyang020319"},"content":"     * Returns the String in the format of [Task Type] | [Status Icon] | Task Name,","lastModifiedDate":"2023-02-28"},{"lineNumber":65,"author":{"gitId":"liuziyang020319"},"content":"     * which is used to save the task in the hard disk.","lastModifiedDate":"2023-02-28"},{"lineNumber":66,"author":{"gitId":"liuziyang020319"},"content":"     * @return the string representation of the task to be saved in the file.","lastModifiedDate":"2023-02-28"},{"lineNumber":67,"author":{"gitId":"liuziyang020319"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":68,"author":{"gitId":"liuziyang020319"},"content":"    public String saveTask() {","lastModifiedDate":"2023-02-14"},{"lineNumber":69,"author":{"gitId":"liuziyang020319"},"content":"        return \"T | \" + (this.isDone ? \"1\" : \"0\") + \" | \" + this.taskName + \u0027\\n\u0027;","lastModifiedDate":"2023-02-14"},{"lineNumber":70,"author":{"gitId":"liuziyang020319"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":71,"author":{"gitId":"liuziyang020319"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":72,"author":{"gitId":"liuziyang020319"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":73,"author":{"gitId":"liuziyang020319"},"content":"     * Checks whether the task is a date match with the given date. (in the format of yyyy-mm-dd)","lastModifiedDate":"2023-02-28"},{"lineNumber":74,"author":{"gitId":"liuziyang020319"},"content":"     * @param date the date to be checked.","lastModifiedDate":"2023-02-28"},{"lineNumber":75,"author":{"gitId":"liuziyang020319"},"content":"     * @return false, since this is a task without date.","lastModifiedDate":"2023-02-28"},{"lineNumber":76,"author":{"gitId":"liuziyang020319"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":77,"author":{"gitId":"liuziyang020319"},"content":"    public boolean isDateMatch(LocalDate date) {","lastModifiedDate":"2023-02-20"},{"lineNumber":78,"author":{"gitId":"liuziyang020319"},"content":"        return false;","lastModifiedDate":"2023-02-20"},{"lineNumber":79,"author":{"gitId":"liuziyang020319"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":80,"author":{"gitId":"liuziyang020319"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":81,"author":{"gitId":"liuziyang020319"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":82,"author":{"gitId":"liuziyang020319"},"content":"     * Checks whether the task is a keyword match with the given keyword.","lastModifiedDate":"2023-02-28"},{"lineNumber":83,"author":{"gitId":"liuziyang020319"},"content":"     * @param keyword the keyword to be searched.","lastModifiedDate":"2023-02-28"},{"lineNumber":84,"author":{"gitId":"liuziyang020319"},"content":"     * @return true if the task name contains the keyword, else false.","lastModifiedDate":"2023-02-28"},{"lineNumber":85,"author":{"gitId":"liuziyang020319"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":86,"author":{"gitId":"liuziyang020319"},"content":"    public boolean containsName(String keyword) {","lastModifiedDate":"2023-02-20"},{"lineNumber":87,"author":{"gitId":"liuziyang020319"},"content":"        return this.taskName.contains(keyword);","lastModifiedDate":"2023-02-20"},{"lineNumber":88,"author":{"gitId":"liuziyang020319"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":89,"author":{"gitId":"liuziyang020319"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"liuziyang020319":89}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"liuziyang020319"},"content":"todo read book","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"liuziyang020319"},"content":"deadline return book /by June 6th","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"liuziyang020319"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"liuziyang020319"},"content":"todo join sports club","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"liuziyang020319"},"content":"todo borrow book","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"liuziyang020319"},"content":"mark 1","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"liuziyang020319"},"content":"mark 2","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"liuziyang020319"},"content":"mark 4","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"liuziyang020319"},"content":"unmark 2","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"liuziyang020319"},"content":"list","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"liuziyang020319"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"liuziyang020319"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"liuziyang020319"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"liuziyang020319"},"content":"bye","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"liuziyang020319":14}}]
