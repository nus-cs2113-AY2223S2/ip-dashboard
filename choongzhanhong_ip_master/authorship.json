[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"choongzhanhong"},"content":"import io.DukeException;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"choongzhanhong"},"content":"import io.IO;","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"choongzhanhong"},"content":"import task.Deadline;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"choongzhanhong"},"content":"import task.Event;","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"choongzhanhong"},"content":"import task.TaskList;","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"choongzhanhong"},"content":"import task.Todo;","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"choongzhanhong"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"choongzhanhong"},"content":"    private static final TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"choongzhanhong"},"content":"        IO.printGreeting();","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"choongzhanhong"},"content":"        // Input variables initialised.","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"choongzhanhong"},"content":"        Scanner myScanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"choongzhanhong"},"content":"        String userInput;","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"choongzhanhong"},"content":"        // The main loop, which ends when user says Bye","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"choongzhanhong"},"content":"        while (true) {","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"choongzhanhong"},"content":"            System.out.print(\"\u003e \");","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"choongzhanhong"},"content":"            userInput \u003d myScanner.nextLine();","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"choongzhanhong"},"content":"            // Execute command and print out the feedback string.","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"choongzhanhong"},"content":"            String feedback \u003d executeCommand(userInput.toLowerCase());","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"choongzhanhong"},"content":"            System.out.println(feedback);","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":29,"author":{"gitId":"choongzhanhong"},"content":"            IO.printHLine();","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"choongzhanhong"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":32,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":33,"author":{"gitId":"choongzhanhong"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":34,"author":{"gitId":"choongzhanhong"},"content":"     * Performs each input\u0027s methods as long as it exists, if not return error","lastModifiedDate":"2023-02-06"},{"lineNumber":35,"author":{"gitId":"choongzhanhong"},"content":"     * @param inputLine Input directly from command-line","lastModifiedDate":"2023-02-06"},{"lineNumber":36,"author":{"gitId":"choongzhanhong"},"content":"     * @return Feedback string or error string","lastModifiedDate":"2023-02-06"},{"lineNumber":37,"author":{"gitId":"choongzhanhong"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":38,"author":{"gitId":"choongzhanhong"},"content":"    public static String executeCommand(String inputLine) {","lastModifiedDate":"2023-02-06"},{"lineNumber":39,"author":{"gitId":"choongzhanhong"},"content":"        final String[] commandTypeAndArgs \u003d IO.splitCommandAndArgs(inputLine);","lastModifiedDate":"2023-02-06"},{"lineNumber":40,"author":{"gitId":"choongzhanhong"},"content":"        final String command \u003d commandTypeAndArgs[0];","lastModifiedDate":"2023-02-06"},{"lineNumber":41,"author":{"gitId":"choongzhanhong"},"content":"        final String commandArgs \u003d commandTypeAndArgs[1];","lastModifiedDate":"2023-02-06"},{"lineNumber":42,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":43,"author":{"gitId":"choongzhanhong"},"content":"        // Check command against the set list of commands.","lastModifiedDate":"2023-02-06"},{"lineNumber":44,"author":{"gitId":"choongzhanhong"},"content":"        // If it doesn\u0027t exist, default is invalid","lastModifiedDate":"2023-02-06"},{"lineNumber":45,"author":{"gitId":"choongzhanhong"},"content":"        switch(command) {","lastModifiedDate":"2023-02-06"},{"lineNumber":46,"author":{"gitId":"choongzhanhong"},"content":"        case IO.COMMAND_HELP:","lastModifiedDate":"2023-02-06"},{"lineNumber":47,"author":{"gitId":"choongzhanhong"},"content":"            return IO.MESSAGE_HELP;","lastModifiedDate":"2023-02-06"},{"lineNumber":48,"author":{"gitId":"choongzhanhong"},"content":"        case IO.COMMAND_LIST:","lastModifiedDate":"2023-02-06"},{"lineNumber":49,"author":{"gitId":"choongzhanhong"},"content":"            if (tasks.getNumberOfTasks() \u003c 1) {","lastModifiedDate":"2023-02-06"},{"lineNumber":50,"author":{"gitId":"choongzhanhong"},"content":"                return IO.ERROR_TASKS_EMPTY;","lastModifiedDate":"2023-02-06"},{"lineNumber":51,"author":{"gitId":"choongzhanhong"},"content":"            }","lastModifiedDate":"2023-02-06"},{"lineNumber":52,"author":{"gitId":"choongzhanhong"},"content":"            return TaskList.getTaskListString();","lastModifiedDate":"2023-02-06"},{"lineNumber":53,"author":{"gitId":"choongzhanhong"},"content":"        case IO.COMMAND_MARK: // Fallthrough","lastModifiedDate":"2023-02-06"},{"lineNumber":54,"author":{"gitId":"choongzhanhong"},"content":"        case IO.COMMAND_UNMARK:","lastModifiedDate":"2023-02-06"},{"lineNumber":55,"author":{"gitId":"choongzhanhong"},"content":"            return TaskList.executeMarkUnmark(command, commandArgs);","lastModifiedDate":"2023-02-06"},{"lineNumber":56,"author":{"gitId":"choongzhanhong"},"content":"        case IO.COMMAND_TASK_TODO:","lastModifiedDate":"2023-02-06"},{"lineNumber":57,"author":{"gitId":"choongzhanhong"},"content":"            return handleAddTaskTodo(commandArgs);","lastModifiedDate":"2023-02-06"},{"lineNumber":58,"author":{"gitId":"choongzhanhong"},"content":"        case IO.COMMAND_TASK_DEADLINE:","lastModifiedDate":"2023-02-06"},{"lineNumber":59,"author":{"gitId":"choongzhanhong"},"content":"            return handleAddTaskDeadline(commandArgs);","lastModifiedDate":"2023-02-06"},{"lineNumber":60,"author":{"gitId":"choongzhanhong"},"content":"        case IO.COMMAND_TASK_EVENT:","lastModifiedDate":"2023-02-06"},{"lineNumber":61,"author":{"gitId":"choongzhanhong"},"content":"            return handleAddTaskEvent(commandArgs);","lastModifiedDate":"2023-02-06"},{"lineNumber":62,"author":{"gitId":"choongzhanhong"},"content":"        case IO.COMMAND_BYE:","lastModifiedDate":"2023-02-06"},{"lineNumber":63,"author":{"gitId":"choongzhanhong"},"content":"            IO.printExitMessage();","lastModifiedDate":"2023-02-06"},{"lineNumber":64,"author":{"gitId":"choongzhanhong"},"content":"            System.exit(0);","lastModifiedDate":"2023-02-06"},{"lineNumber":65,"author":{"gitId":"choongzhanhong"},"content":"            // Fallthrough (If somehow cannot exit? LOL)","lastModifiedDate":"2023-02-06"},{"lineNumber":66,"author":{"gitId":"choongzhanhong"},"content":"        default:","lastModifiedDate":"2023-02-06"},{"lineNumber":67,"author":{"gitId":"choongzhanhong"},"content":"            return IO.ERROR_MESSAGE_INVALID_COMMAND;","lastModifiedDate":"2023-02-06"},{"lineNumber":68,"author":{"gitId":"choongzhanhong"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":69,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":70,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":71,"author":{"gitId":"choongzhanhong"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":72,"author":{"gitId":"choongzhanhong"},"content":"     * \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-02-06"},{"lineNumber":73,"author":{"gitId":"choongzhanhong"},"content":"     * Below handling Tasks (Validation and addTask)","lastModifiedDate":"2023-02-06"},{"lineNumber":74,"author":{"gitId":"choongzhanhong"},"content":"     * \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-02-06"},{"lineNumber":75,"author":{"gitId":"choongzhanhong"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":76,"author":{"gitId":"choongzhanhong"},"content":"    private static String handleAddTaskTodo(String commandArgs) {","lastModifiedDate":"2023-02-06"},{"lineNumber":77,"author":{"gitId":"choongzhanhong"},"content":"        try {","lastModifiedDate":"2023-02-06"},{"lineNumber":78,"author":{"gitId":"choongzhanhong"},"content":"            Todo newTask \u003d new Todo(IO.processTaskTodo(commandArgs), TaskList.getNextTaskNumber());","lastModifiedDate":"2023-02-06"},{"lineNumber":79,"author":{"gitId":"choongzhanhong"},"content":"            tasks.addTask(newTask);","lastModifiedDate":"2023-01-30"},{"lineNumber":80,"author":{"gitId":"choongzhanhong"},"content":"            return IO.feedbackTaskAdded(newTask);","lastModifiedDate":"2023-02-06"},{"lineNumber":81,"author":{"gitId":"choongzhanhong"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-06"},{"lineNumber":82,"author":{"gitId":"choongzhanhong"},"content":"            return IO.ERROR_MESSAGE_ARGUMENT_MISSING;","lastModifiedDate":"2023-02-06"},{"lineNumber":83,"author":{"gitId":"choongzhanhong"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":84,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":85,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":86,"author":{"gitId":"choongzhanhong"},"content":"    private static String handleAddTaskDeadline(String commandArgs) {","lastModifiedDate":"2023-02-06"},{"lineNumber":87,"author":{"gitId":"choongzhanhong"},"content":"        try {","lastModifiedDate":"2023-02-06"},{"lineNumber":88,"author":{"gitId":"choongzhanhong"},"content":"            String[] deadlineArgs \u003d IO.processTaskDeadline(commandArgs);","lastModifiedDate":"2023-02-06"},{"lineNumber":89,"author":{"gitId":"choongzhanhong"},"content":"            Deadline newTask \u003d","lastModifiedDate":"2023-02-06"},{"lineNumber":90,"author":{"gitId":"choongzhanhong"},"content":"                    new Deadline(deadlineArgs[0], TaskList.getNextTaskNumber(), deadlineArgs[1]);","lastModifiedDate":"2023-02-06"},{"lineNumber":91,"author":{"gitId":"choongzhanhong"},"content":"            tasks.addTask(newTask);","lastModifiedDate":"2023-01-30"},{"lineNumber":92,"author":{"gitId":"choongzhanhong"},"content":"            return IO.feedbackTaskAdded(newTask);","lastModifiedDate":"2023-02-06"},{"lineNumber":93,"author":{"gitId":"choongzhanhong"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-06"},{"lineNumber":94,"author":{"gitId":"choongzhanhong"},"content":"            return IO.ERROR_MESSAGE_ARGUMENT_NUMBER;","lastModifiedDate":"2023-02-06"},{"lineNumber":95,"author":{"gitId":"choongzhanhong"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":96,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":97,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":98,"author":{"gitId":"choongzhanhong"},"content":"    private static String handleAddTaskEvent(String commandArgs) {","lastModifiedDate":"2023-02-06"},{"lineNumber":99,"author":{"gitId":"choongzhanhong"},"content":"        try {","lastModifiedDate":"2023-02-06"},{"lineNumber":100,"author":{"gitId":"choongzhanhong"},"content":"            String[] eventArgs \u003d IO.processTaskEvent(commandArgs);","lastModifiedDate":"2023-02-06"},{"lineNumber":101,"author":{"gitId":"choongzhanhong"},"content":"            Event newTask \u003d","lastModifiedDate":"2023-02-06"},{"lineNumber":102,"author":{"gitId":"choongzhanhong"},"content":"                    new Event(eventArgs[0], TaskList.getNextTaskNumber(),","lastModifiedDate":"2023-02-06"},{"lineNumber":103,"author":{"gitId":"choongzhanhong"},"content":"                            eventArgs[1], eventArgs[2]);","lastModifiedDate":"2023-02-06"},{"lineNumber":104,"author":{"gitId":"choongzhanhong"},"content":"            tasks.addTask(newTask);","lastModifiedDate":"2023-01-30"},{"lineNumber":105,"author":{"gitId":"choongzhanhong"},"content":"            return IO.feedbackTaskAdded(newTask);","lastModifiedDate":"2023-02-06"},{"lineNumber":106,"author":{"gitId":"choongzhanhong"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-06"},{"lineNumber":107,"author":{"gitId":"choongzhanhong"},"content":"            return IO.ERROR_MESSAGE_ARGUMENT_NUMBER;","lastModifiedDate":"2023-02-06"},{"lineNumber":108,"author":{"gitId":"choongzhanhong"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"choongzhanhong":106,"-":4}},{"path":"src/main/java/io/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"choongzhanhong"},"content":"package io;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"choongzhanhong"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"choongzhanhong"},"content":"    // Nothing needed here","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"choongzhanhong"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"choongzhanhong":5}},{"path":"src/main/java/io/IO.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"choongzhanhong"},"content":"package io;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"choongzhanhong"},"content":"import task.Task;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"choongzhanhong"},"content":"import task.TaskList;","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"choongzhanhong"},"content":"/*","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"choongzhanhong"},"content":"* Use this class for INPUT and OUTPUT (IO) related stuff","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"choongzhanhong"},"content":"* Got some inspiration from Contacts (Week 4)","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"choongzhanhong"},"content":"*/","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"choongzhanhong"},"content":"public final class IO {","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"choongzhanhong"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"choongzhanhong"},"content":"     * \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"choongzhanhong"},"content":"     * This section will cover Inputs,","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"choongzhanhong"},"content":"     * Input Validations,","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"choongzhanhong"},"content":"     * and Input Processing Methods","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"choongzhanhong"},"content":"     * \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"choongzhanhong"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"choongzhanhong"},"content":"    public static final String COMMAND_HELP \u003d \"help\";","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"choongzhanhong"},"content":"    public static final String COMMAND_LIST \u003d \"list\";","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"choongzhanhong"},"content":"    public static final String COMMAND_BYE \u003d \"bye\";","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"choongzhanhong"},"content":"    public static final String COMMAND_MARK \u003d \"mark\";","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"choongzhanhong"},"content":"    public static final String COMMAND_UNMARK \u003d \"unmark\";","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"choongzhanhong"},"content":"    /** Add task commands. Sample usage as below. not delimited by spaces.","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"choongzhanhong"},"content":"     *  todo: \"todo task_name\"","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"choongzhanhong"},"content":"     *  deadline: \"deadline task_name /by due_date\"","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"choongzhanhong"},"content":"     *  event: \"event task_name /from start_time /to end_time\"","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"choongzhanhong"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":29,"author":{"gitId":"choongzhanhong"},"content":"    public static final String COMMAND_TASK_TODO \u003d \"todo\";","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"choongzhanhong"},"content":"    public static final String COMMAND_TASK_DEADLINE \u003d \"deadline\";","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"choongzhanhong"},"content":"    public static final String COMMAND_TASK_DEADLINE_DELIMITER \u003d \"/by\";","lastModifiedDate":"2023-02-06"},{"lineNumber":32,"author":{"gitId":"choongzhanhong"},"content":"    public static final String COMMAND_TASK_DEADLINE_DELIMITER_REGEX \u003d","lastModifiedDate":"2023-02-06"},{"lineNumber":33,"author":{"gitId":"choongzhanhong"},"content":"            \"\\\\s+\\\\\" + COMMAND_TASK_DEADLINE_DELIMITER + \"\\\\s+\";","lastModifiedDate":"2023-02-06"},{"lineNumber":34,"author":{"gitId":"choongzhanhong"},"content":"    public static final String COMMAND_TASK_EVENT \u003d \"event\";","lastModifiedDate":"2023-02-06"},{"lineNumber":35,"author":{"gitId":"choongzhanhong"},"content":"    public static final String COMMAND_TASK_EVENT_DELIMITER1 \u003d \"/from\";","lastModifiedDate":"2023-02-06"},{"lineNumber":36,"author":{"gitId":"choongzhanhong"},"content":"    public static final String COMMAND_TASK_EVENT_DELIMITER2 \u003d \"/to\";","lastModifiedDate":"2023-02-06"},{"lineNumber":37,"author":{"gitId":"choongzhanhong"},"content":"    public static final String COMMAND_TASK_EVENT_DELIMITER_REGEX \u003d","lastModifiedDate":"2023-02-06"},{"lineNumber":38,"author":{"gitId":"choongzhanhong"},"content":"            \"\\\\s+\\\\\" + COMMAND_TASK_EVENT_DELIMITER1 +","lastModifiedDate":"2023-02-06"},{"lineNumber":39,"author":{"gitId":"choongzhanhong"},"content":"            \"\\\\s+|\\\\s+\\\\\" + COMMAND_TASK_EVENT_DELIMITER2 + \"\\\\s+\";","lastModifiedDate":"2023-02-06"},{"lineNumber":40,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":41,"author":{"gitId":"choongzhanhong"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":42,"author":{"gitId":"choongzhanhong"},"content":"     * Split input into 1st arg and subsequent line.","lastModifiedDate":"2023-02-06"},{"lineNumber":43,"author":{"gitId":"choongzhanhong"},"content":"     * @param inputLine A line of input direct from user","lastModifiedDate":"2023-02-06"},{"lineNumber":44,"author":{"gitId":"choongzhanhong"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":45,"author":{"gitId":"choongzhanhong"},"content":"    public static String[] splitCommandAndArgs(String inputLine) {","lastModifiedDate":"2023-02-06"},{"lineNumber":46,"author":{"gitId":"choongzhanhong"},"content":"        // Trim trailing and beginning whitespace, then split once. Output is [command, args].","lastModifiedDate":"2023-02-06"},{"lineNumber":47,"author":{"gitId":"choongzhanhong"},"content":"        final String[] split \u003d inputLine.trim().split(\"\\\\s+\", 2);","lastModifiedDate":"2023-02-06"},{"lineNumber":48,"author":{"gitId":"choongzhanhong"},"content":"        // Else case: no parameters","lastModifiedDate":"2023-02-06"},{"lineNumber":49,"author":{"gitId":"choongzhanhong"},"content":"        return split.length \u003d\u003d 2 ? split : new String[]{split[0], \"\"};","lastModifiedDate":"2023-02-06"},{"lineNumber":50,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":51,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":52,"author":{"gitId":"choongzhanhong"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":53,"author":{"gitId":"choongzhanhong"},"content":"     * Input validation for Todo Task. Check if input empty.","lastModifiedDate":"2023-02-06"},{"lineNumber":54,"author":{"gitId":"choongzhanhong"},"content":"     * @param commandArgs Line input, should simply be the task name","lastModifiedDate":"2023-02-06"},{"lineNumber":55,"author":{"gitId":"choongzhanhong"},"content":"     * @return the same input, unless blank","lastModifiedDate":"2023-02-06"},{"lineNumber":56,"author":{"gitId":"choongzhanhong"},"content":"     * @throws DukeException only if blank","lastModifiedDate":"2023-02-06"},{"lineNumber":57,"author":{"gitId":"choongzhanhong"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":58,"author":{"gitId":"choongzhanhong"},"content":"    public static String processTaskTodo(String commandArgs) throws DukeException {","lastModifiedDate":"2023-02-06"},{"lineNumber":59,"author":{"gitId":"choongzhanhong"},"content":"        if (commandArgs.isBlank()) {","lastModifiedDate":"2023-02-06"},{"lineNumber":60,"author":{"gitId":"choongzhanhong"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-06"},{"lineNumber":61,"author":{"gitId":"choongzhanhong"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":62,"author":{"gitId":"choongzhanhong"},"content":"        return commandArgs;","lastModifiedDate":"2023-02-06"},{"lineNumber":63,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":64,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":65,"author":{"gitId":"choongzhanhong"},"content":"    public static String[] processTaskDeadline(String commandArgs) throws DukeException {","lastModifiedDate":"2023-02-06"},{"lineNumber":66,"author":{"gitId":"choongzhanhong"},"content":"        String[] deadlineArgs \u003d commandArgs.split(COMMAND_TASK_DEADLINE_DELIMITER_REGEX);","lastModifiedDate":"2023-02-06"},{"lineNumber":67,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":68,"author":{"gitId":"choongzhanhong"},"content":"        // Needs to be specifically 2, i.e. [task_name, deadline]","lastModifiedDate":"2023-02-06"},{"lineNumber":69,"author":{"gitId":"choongzhanhong"},"content":"        // Is this a magic number?","lastModifiedDate":"2023-02-06"},{"lineNumber":70,"author":{"gitId":"choongzhanhong"},"content":"        if (deadlineArgs.length !\u003d 2) {","lastModifiedDate":"2023-02-06"},{"lineNumber":71,"author":{"gitId":"choongzhanhong"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-06"},{"lineNumber":72,"author":{"gitId":"choongzhanhong"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":73,"author":{"gitId":"choongzhanhong"},"content":"        return deadlineArgs;","lastModifiedDate":"2023-02-06"},{"lineNumber":74,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":75,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":76,"author":{"gitId":"choongzhanhong"},"content":"    public static String[] processTaskEvent(String commandArgs) throws DukeException {","lastModifiedDate":"2023-02-06"},{"lineNumber":77,"author":{"gitId":"choongzhanhong"},"content":"        // ensure it contains both.","lastModifiedDate":"2023-02-06"},{"lineNumber":78,"author":{"gitId":"choongzhanhong"},"content":"        if (!commandArgs.contains(COMMAND_TASK_EVENT_DELIMITER1) ||","lastModifiedDate":"2023-02-06"},{"lineNumber":79,"author":{"gitId":"choongzhanhong"},"content":"                !commandArgs.contains(COMMAND_TASK_EVENT_DELIMITER2)) {","lastModifiedDate":"2023-02-06"},{"lineNumber":80,"author":{"gitId":"choongzhanhong"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-06"},{"lineNumber":81,"author":{"gitId":"choongzhanhong"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":82,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":83,"author":{"gitId":"choongzhanhong"},"content":"        // TODO check for inputs like /from abc /from abc /to","lastModifiedDate":"2023-02-06"},{"lineNumber":84,"author":{"gitId":"choongzhanhong"},"content":"        String[] eventArgs \u003d commandArgs.split(COMMAND_TASK_EVENT_DELIMITER_REGEX);","lastModifiedDate":"2023-02-06"},{"lineNumber":85,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":86,"author":{"gitId":"choongzhanhong"},"content":"        // Needs to be specifically 3, i.e. [task_name, from, to]","lastModifiedDate":"2023-02-06"},{"lineNumber":87,"author":{"gitId":"choongzhanhong"},"content":"        if (eventArgs.length !\u003d 3) {","lastModifiedDate":"2023-02-06"},{"lineNumber":88,"author":{"gitId":"choongzhanhong"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-06"},{"lineNumber":89,"author":{"gitId":"choongzhanhong"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":90,"author":{"gitId":"choongzhanhong"},"content":"        return eventArgs;","lastModifiedDate":"2023-02-06"},{"lineNumber":91,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":92,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":93,"author":{"gitId":"choongzhanhong"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":94,"author":{"gitId":"choongzhanhong"},"content":"     * \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-02-06"},{"lineNumber":95,"author":{"gitId":"choongzhanhong"},"content":"     * Below are Outputs for PAPA to print.","lastModifiedDate":"2023-02-06"},{"lineNumber":96,"author":{"gitId":"choongzhanhong"},"content":"     * Note string format placeholders, so ensure to use printf/format.","lastModifiedDate":"2023-02-06"},{"lineNumber":97,"author":{"gitId":"choongzhanhong"},"content":"     * \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-02-06"},{"lineNumber":98,"author":{"gitId":"choongzhanhong"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":99,"author":{"gitId":"choongzhanhong"},"content":"    public static final String MESSAGE_HELP \u003d \"PAPA is your personal task tracker. Options:\\n\" +","lastModifiedDate":"2023-02-06"},{"lineNumber":100,"author":{"gitId":"choongzhanhong"},"content":"            \"Add tasks: \\n\" +","lastModifiedDate":"2023-02-06"},{"lineNumber":101,"author":{"gitId":"choongzhanhong"},"content":"            String.format(\"   %s \u003ctask_name\u003e\\n\", COMMAND_TASK_TODO) +","lastModifiedDate":"2023-02-06"},{"lineNumber":102,"author":{"gitId":"choongzhanhong"},"content":"            String.format(\"   %s \u003ctask_name\u003e %s \u003cdue_date\u003e\\n\",","lastModifiedDate":"2023-02-06"},{"lineNumber":103,"author":{"gitId":"choongzhanhong"},"content":"                    COMMAND_TASK_DEADLINE, COMMAND_TASK_DEADLINE_DELIMITER) +","lastModifiedDate":"2023-02-06"},{"lineNumber":104,"author":{"gitId":"choongzhanhong"},"content":"            String.format(\"   %s \u003ctask_name\u003e %s \u003cstart\u003e %s \u003cend\u003e\\n\",","lastModifiedDate":"2023-02-06"},{"lineNumber":105,"author":{"gitId":"choongzhanhong"},"content":"                    COMMAND_TASK_EVENT, COMMAND_TASK_EVENT_DELIMITER1, COMMAND_TASK_EVENT_DELIMITER2) +","lastModifiedDate":"2023-02-06"},{"lineNumber":106,"author":{"gitId":"choongzhanhong"},"content":"            String.format(\"%s        Show these tips.\\n\", COMMAND_HELP) +","lastModifiedDate":"2023-02-06"},{"lineNumber":107,"author":{"gitId":"choongzhanhong"},"content":"            String.format(\"%s        List out existing tasks.\\n\", COMMAND_LIST) +","lastModifiedDate":"2023-02-06"},{"lineNumber":108,"author":{"gitId":"choongzhanhong"},"content":"            String.format(\"%s         Exit PAPA.\\n\", COMMAND_BYE) +","lastModifiedDate":"2023-02-06"},{"lineNumber":109,"author":{"gitId":"choongzhanhong"},"content":"            String.format(\"%s \u003cn\u003e    Mark the n-th task as done.\\n\", COMMAND_MARK) +","lastModifiedDate":"2023-02-06"},{"lineNumber":110,"author":{"gitId":"choongzhanhong"},"content":"            String.format(\"%s \u003cn\u003e  Mark the n-th task as undone.\", COMMAND_UNMARK);","lastModifiedDate":"2023-02-06"},{"lineNumber":111,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":112,"author":{"gitId":"choongzhanhong"},"content":"    public static final String MESSAGE_LOGO \u003d","lastModifiedDate":"2023-02-06"},{"lineNumber":113,"author":{"gitId":"choongzhanhong"},"content":"            \"██████╗  █████╗ ██████╗  █████╗ \\n\" +","lastModifiedDate":"2023-02-06"},{"lineNumber":114,"author":{"gitId":"choongzhanhong"},"content":"            \"██╔══██╗██╔══██╗██╔══██╗██╔══██╗\\n\" +","lastModifiedDate":"2023-02-06"},{"lineNumber":115,"author":{"gitId":"choongzhanhong"},"content":"            \"██████╔╝███████║██████╔╝███████║\\n\" +","lastModifiedDate":"2023-02-06"},{"lineNumber":116,"author":{"gitId":"choongzhanhong"},"content":"            \"██╔═══╝ ██╔══██║██╔═══╝ ██╔══██║\\n\" +","lastModifiedDate":"2023-02-06"},{"lineNumber":117,"author":{"gitId":"choongzhanhong"},"content":"            \"██║     ██║  ██║██║     ██║  ██║\\n\" +","lastModifiedDate":"2023-02-06"},{"lineNumber":118,"author":{"gitId":"choongzhanhong"},"content":"            \"╚═╝     ╚═╝  ╚═╝╚═╝     ╚═╝  ╚═╝\";","lastModifiedDate":"2023-02-06"},{"lineNumber":119,"author":{"gitId":"choongzhanhong"},"content":"    public static final String MESSAGE_INTRO \u003d","lastModifiedDate":"2023-02-06"},{"lineNumber":120,"author":{"gitId":"choongzhanhong"},"content":"            \"Hello! I\u0027m PAPA, your Personal Assistant, Personal Angel.\" +","lastModifiedDate":"2023-02-06"},{"lineNumber":121,"author":{"gitId":"choongzhanhong"},"content":"            \"What can I do for you? Type \u0027help\u0027 for a list of commands.\";","lastModifiedDate":"2023-02-06"},{"lineNumber":122,"author":{"gitId":"choongzhanhong"},"content":"    public static final String MESSAGE_OUTRO \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-02-06"},{"lineNumber":123,"author":{"gitId":"choongzhanhong"},"content":"    public static final String MESSAGE_TASK_ADDED \u003d","lastModifiedDate":"2023-02-06"},{"lineNumber":124,"author":{"gitId":"choongzhanhong"},"content":"            \"Great! I\u0027ve added the task for you: \";","lastModifiedDate":"2023-02-06"},{"lineNumber":125,"author":{"gitId":"choongzhanhong"},"content":"    public static final String MESSAGE_TASK_COUNT \u003d","lastModifiedDate":"2023-02-06"},{"lineNumber":126,"author":{"gitId":"choongzhanhong"},"content":"            \"Now you have %d tasks\"; // Format at runtime.","lastModifiedDate":"2023-02-06"},{"lineNumber":127,"author":{"gitId":"choongzhanhong"},"content":"    public static final String MESSAGE_TASK_DONE \u003d","lastModifiedDate":"2023-02-06"},{"lineNumber":128,"author":{"gitId":"choongzhanhong"},"content":"            \"Great! This task is now done: \";","lastModifiedDate":"2023-02-06"},{"lineNumber":129,"author":{"gitId":"choongzhanhong"},"content":"    public static final String MESSAGE_TASK_UNDONE \u003d","lastModifiedDate":"2023-02-06"},{"lineNumber":130,"author":{"gitId":"choongzhanhong"},"content":"            \"Okay, I\u0027ve marked this task as not done yet: \";","lastModifiedDate":"2023-02-06"},{"lineNumber":131,"author":{"gitId":"choongzhanhong"},"content":"    public static final String ERROR_TASKS_EMPTY \u003d","lastModifiedDate":"2023-02-06"},{"lineNumber":132,"author":{"gitId":"choongzhanhong"},"content":"            \"Looks like you don\u0027t have anything to do. Nice!\";","lastModifiedDate":"2023-02-06"},{"lineNumber":133,"author":{"gitId":"choongzhanhong"},"content":"    public static final String ERROR_MESSAGE_HELP \u003d","lastModifiedDate":"2023-02-06"},{"lineNumber":134,"author":{"gitId":"choongzhanhong"},"content":"            String.format(\"Type %s for information on commands!\", COMMAND_HELP);","lastModifiedDate":"2023-02-06"},{"lineNumber":135,"author":{"gitId":"choongzhanhong"},"content":"    public static final String ERROR_MESSAGE_INVALID_COMMAND \u003d","lastModifiedDate":"2023-02-06"},{"lineNumber":136,"author":{"gitId":"choongzhanhong"},"content":"            \"Oops, I don\u0027t understand you.\\n\" + ERROR_MESSAGE_HELP;","lastModifiedDate":"2023-02-06"},{"lineNumber":137,"author":{"gitId":"choongzhanhong"},"content":"    public static final String ERROR_MESSAGE_ARGUMENT_MISSING \u003d","lastModifiedDate":"2023-02-06"},{"lineNumber":138,"author":{"gitId":"choongzhanhong"},"content":"            \"I think you might be missing something.\\n\" + ERROR_MESSAGE_HELP;","lastModifiedDate":"2023-02-06"},{"lineNumber":139,"author":{"gitId":"choongzhanhong"},"content":"    public static final String ERROR_MESSAGE_ARGUMENT_NUMBER \u003d","lastModifiedDate":"2023-02-06"},{"lineNumber":140,"author":{"gitId":"choongzhanhong"},"content":"            \"You might be missing some arguments, or have too many.\\n\" + ERROR_MESSAGE_HELP;","lastModifiedDate":"2023-02-06"},{"lineNumber":141,"author":{"gitId":"choongzhanhong"},"content":"    public static final String ERROR_MESSAGE_TASK_INDEX \u003d","lastModifiedDate":"2023-02-06"},{"lineNumber":142,"author":{"gitId":"choongzhanhong"},"content":"            \"Erm, do make sure to give me the correct task number.\" +","lastModifiedDate":"2023-02-06"},{"lineNumber":143,"author":{"gitId":"choongzhanhong"},"content":"            \"Type \u0027task\u0027 to list out the existing tasks!\";","lastModifiedDate":"2023-02-06"},{"lineNumber":144,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":145,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":146,"author":{"gitId":"choongzhanhong"},"content":"    // Prints a horizontal line of 32 \u0027\u003d\u0027 characters.","lastModifiedDate":"2023-02-06"},{"lineNumber":147,"author":{"gitId":"choongzhanhong"},"content":"    public static void printHLine() {","lastModifiedDate":"2023-02-06"},{"lineNumber":148,"author":{"gitId":"choongzhanhong"},"content":"        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-02-06"},{"lineNumber":149,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":150,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":151,"author":{"gitId":"choongzhanhong"},"content":"    // Greets the user.","lastModifiedDate":"2023-02-06"},{"lineNumber":152,"author":{"gitId":"choongzhanhong"},"content":"    public static void printGreeting() {","lastModifiedDate":"2023-02-06"},{"lineNumber":153,"author":{"gitId":"choongzhanhong"},"content":"        System.out.println(MESSAGE_LOGO);","lastModifiedDate":"2023-02-06"},{"lineNumber":154,"author":{"gitId":"choongzhanhong"},"content":"        // Greet message","lastModifiedDate":"2023-02-06"},{"lineNumber":155,"author":{"gitId":"choongzhanhong"},"content":"        printHLine();","lastModifiedDate":"2023-02-06"},{"lineNumber":156,"author":{"gitId":"choongzhanhong"},"content":"        System.out.println(MESSAGE_INTRO);","lastModifiedDate":"2023-02-06"},{"lineNumber":157,"author":{"gitId":"choongzhanhong"},"content":"        printHLine();","lastModifiedDate":"2023-02-06"},{"lineNumber":158,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":159,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":160,"author":{"gitId":"choongzhanhong"},"content":"    // Exit, goodbye message.","lastModifiedDate":"2023-02-06"},{"lineNumber":161,"author":{"gitId":"choongzhanhong"},"content":"    public static void printExitMessage() {","lastModifiedDate":"2023-02-06"},{"lineNumber":162,"author":{"gitId":"choongzhanhong"},"content":"        System.out.println(MESSAGE_OUTRO);","lastModifiedDate":"2023-02-06"},{"lineNumber":163,"author":{"gitId":"choongzhanhong"},"content":"        printHLine();","lastModifiedDate":"2023-02-06"},{"lineNumber":164,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":165,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":166,"author":{"gitId":"choongzhanhong"},"content":"    // Announce the number of tasks.","lastModifiedDate":"2023-02-06"},{"lineNumber":167,"author":{"gitId":"choongzhanhong"},"content":"    public static String feedbackTaskAdded(Task task) {","lastModifiedDate":"2023-02-06"},{"lineNumber":168,"author":{"gitId":"choongzhanhong"},"content":"        String output \u003d MESSAGE_TASK_ADDED + \u0027\\n\u0027 + task + \u0027\\n\u0027;","lastModifiedDate":"2023-02-06"},{"lineNumber":169,"author":{"gitId":"choongzhanhong"},"content":"        output +\u003d \"Total number of tasks: \" + TaskList.getNumberOfTasks();","lastModifiedDate":"2023-02-06"},{"lineNumber":170,"author":{"gitId":"choongzhanhong"},"content":"        return output;","lastModifiedDate":"2023-02-06"},{"lineNumber":171,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":172,"author":{"gitId":"choongzhanhong"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"choongzhanhong":172}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"choongzhanhong"},"content":"package task;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"choongzhanhong"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"choongzhanhong"},"content":"    protected String by;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"choongzhanhong"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"choongzhanhong"},"content":"     * A task with a deadline.","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"choongzhanhong"},"content":"     * @param description Name of task","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"choongzhanhong"},"content":"     * @param by Deadline","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"choongzhanhong"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"choongzhanhong"},"content":"    public Deadline(String description, int taskNumber, String by) {","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"choongzhanhong"},"content":"        super(description, taskNumber);","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"choongzhanhong"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"choongzhanhong"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"choongzhanhong"},"content":"    public String toString() {","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"choongzhanhong"},"content":"        String byWhen \u003d \" (by: \" + this.by + \")\";","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"choongzhanhong"},"content":"        return \"[D]\" + super.toString() + byWhen;","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"choongzhanhong"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"choongzhanhong":21}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"choongzhanhong"},"content":"package task;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"choongzhanhong"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"choongzhanhong"},"content":"    protected String timeStart;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"choongzhanhong"},"content":"    protected String timeEnd;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"choongzhanhong"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"choongzhanhong"},"content":"     * Constructor for Event","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"choongzhanhong"},"content":"     * Task with start and end time.","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"choongzhanhong"},"content":"     * @param description","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"choongzhanhong"},"content":"     * @param taskNumber","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"choongzhanhong"},"content":"     * @param timeStart","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"choongzhanhong"},"content":"     * @param timeEnd","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"choongzhanhong"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"choongzhanhong"},"content":"    public Event(String description, int taskNumber, String timeStart, String timeEnd) {","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"choongzhanhong"},"content":"        super(description, taskNumber);","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"choongzhanhong"},"content":"        this.timeStart \u003d timeStart;","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"choongzhanhong"},"content":"        this.timeEnd \u003d timeEnd;","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"choongzhanhong"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"choongzhanhong"},"content":"    public String toString() {","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"choongzhanhong"},"content":"        String eventTime \u003d String.format(\" from %s to %s\", this.timeStart, this.timeEnd);","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"choongzhanhong"},"content":"        return \"[E]\" + super.toString() + eventTime;","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"choongzhanhong"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"choongzhanhong":27}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"choongzhanhong"},"content":"package task;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"choongzhanhong"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"choongzhanhong"},"content":" * Individual tasks.","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"choongzhanhong"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"choongzhanhong"},"content":"public class Task {","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"choongzhanhong"},"content":"    protected String description;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"choongzhanhong"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"choongzhanhong"},"content":"    protected int taskNumber;","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"choongzhanhong"},"content":"    // Constructor","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"choongzhanhong"},"content":"    public Task(String description, int taskNumber) {","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"choongzhanhong"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"choongzhanhong"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"choongzhanhong"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"choongzhanhong"},"content":"    // To be used to list out the task.","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"choongzhanhong"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"choongzhanhong"},"content":"    public String toString() {","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"choongzhanhong"},"content":"        return (this.getDoneIcon() + \" \" + this.description);","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"choongzhanhong"},"content":"    // return a string to indicate done or not done.","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"choongzhanhong"},"content":"    private String getDoneIcon() {","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"choongzhanhong"},"content":"        return (this.isDone ? \"[X]\" : \"[ ]\"); // mark done task with X","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"choongzhanhong"},"content":"    protected String getTaskNumber() {","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"choongzhanhong"},"content":"        return (this.taskNumber + \".\");","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"choongzhanhong"},"content":"    // use \"mark\" to mark done","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"choongzhanhong"},"content":"    public String markAsDone() {","lastModifiedDate":"2023-02-06"},{"lineNumber":36,"author":{"gitId":"choongzhanhong"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"choongzhanhong"},"content":"        return \"Marked as done: \" + this;","lastModifiedDate":"2023-02-06"},{"lineNumber":38,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"choongzhanhong"},"content":"    // use \"unmark\" to mark a task not done","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"choongzhanhong"},"content":"    public String markAsUndone() {","lastModifiedDate":"2023-02-06"},{"lineNumber":41,"author":{"gitId":"choongzhanhong"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"choongzhanhong"},"content":"        return \"Marked as undone: \" + this;","lastModifiedDate":"2023-02-06"},{"lineNumber":43,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"choongzhanhong"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"choongzhanhong":44}},{"path":"src/main/java/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"choongzhanhong"},"content":"package task;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"choongzhanhong"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"choongzhanhong"},"content":"public class TaskList {","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"choongzhanhong"},"content":"    private static final Task[] tasks \u003d new Task[100];","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"choongzhanhong"},"content":"    private static int numberOfTasks \u003d 0;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"choongzhanhong"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"choongzhanhong"},"content":"     * Print the contents of Task List","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"choongzhanhong"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"choongzhanhong"},"content":"    public static String getTaskListString() {","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"choongzhanhong"},"content":"        String output \u003d \"Your Tasks: \\n\";","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"choongzhanhong"},"content":"        for (Task task : Arrays.copyOf(tasks, numberOfTasks)) {","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"choongzhanhong"},"content":"            output +\u003d task.getTaskNumber() + task.toString() + \u0027\\n\u0027;","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"choongzhanhong"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"choongzhanhong"},"content":"        return output;","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"choongzhanhong"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"choongzhanhong"},"content":"     * Adds a String task to the list of strings.","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"choongzhanhong"},"content":"     * @param task: Name of task, String to be added","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"choongzhanhong"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"choongzhanhong"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"choongzhanhong"},"content":"        tasks[numberOfTasks] \u003d task;","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"choongzhanhong"},"content":"        numberOfTasks++;","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":28,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"choongzhanhong"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"choongzhanhong"},"content":"     * Two-in-one method to mark or unmark task since it is so similar","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"choongzhanhong"},"content":"     * @param command Either \"mark\" or \"unmark\"","lastModifiedDate":"2023-02-06"},{"lineNumber":32,"author":{"gitId":"choongzhanhong"},"content":"     * @param commandArgs Should be an int corresponding to the task number (1-index)","lastModifiedDate":"2023-02-06"},{"lineNumber":33,"author":{"gitId":"choongzhanhong"},"content":"     * @return Feedback string: \"Task marked: ____\"","lastModifiedDate":"2023-02-06"},{"lineNumber":34,"author":{"gitId":"choongzhanhong"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":35,"author":{"gitId":"choongzhanhong"},"content":"    public static String executeMarkUnmark(String command, String commandArgs) {","lastModifiedDate":"2023-02-06"},{"lineNumber":36,"author":{"gitId":"choongzhanhong"},"content":"        int taskNumber;","lastModifiedDate":"2023-02-06"},{"lineNumber":37,"author":{"gitId":"choongzhanhong"},"content":"        // Check is Integer","lastModifiedDate":"2023-02-06"},{"lineNumber":38,"author":{"gitId":"choongzhanhong"},"content":"        try {","lastModifiedDate":"2023-02-06"},{"lineNumber":39,"author":{"gitId":"choongzhanhong"},"content":"            taskNumber \u003d Integer.parseInt(commandArgs);","lastModifiedDate":"2023-02-06"},{"lineNumber":40,"author":{"gitId":"choongzhanhong"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-06"},{"lineNumber":41,"author":{"gitId":"choongzhanhong"},"content":"            // Not an int. Send back an error message.","lastModifiedDate":"2023-02-06"},{"lineNumber":42,"author":{"gitId":"choongzhanhong"},"content":"            return IO.ERROR_MESSAGE_TASK_INDEX;","lastModifiedDate":"2023-02-06"},{"lineNumber":43,"author":{"gitId":"choongzhanhong"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"choongzhanhong"},"content":"        // Check Integer is in range","lastModifiedDate":"2023-02-06"},{"lineNumber":45,"author":{"gitId":"choongzhanhong"},"content":"        try {","lastModifiedDate":"2023-02-06"},{"lineNumber":46,"author":{"gitId":"choongzhanhong"},"content":"            if (command.equals(\"mark\")) {","lastModifiedDate":"2023-02-06"},{"lineNumber":47,"author":{"gitId":"choongzhanhong"},"content":"                return tasks[taskNumber - 1].markAsDone();","lastModifiedDate":"2023-02-06"},{"lineNumber":48,"author":{"gitId":"choongzhanhong"},"content":"            } else if (command.equals(\"unmark\")) {","lastModifiedDate":"2023-02-06"},{"lineNumber":49,"author":{"gitId":"choongzhanhong"},"content":"                return tasks[taskNumber - 1].markAsUndone();","lastModifiedDate":"2023-02-06"},{"lineNumber":50,"author":{"gitId":"choongzhanhong"},"content":"            }","lastModifiedDate":"2023-02-06"},{"lineNumber":51,"author":{"gitId":"choongzhanhong"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-06"},{"lineNumber":52,"author":{"gitId":"choongzhanhong"},"content":"            return IO.ERROR_MESSAGE_TASK_INDEX;","lastModifiedDate":"2023-02-06"},{"lineNumber":53,"author":{"gitId":"choongzhanhong"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":54,"author":{"gitId":"choongzhanhong"},"content":"        // If nothing else works...","lastModifiedDate":"2023-02-06"},{"lineNumber":55,"author":{"gitId":"choongzhanhong"},"content":"        return \"Huh?\";","lastModifiedDate":"2023-02-06"},{"lineNumber":56,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"choongzhanhong"},"content":"    // Getter for number of task","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"choongzhanhong"},"content":"    public static int getNumberOfTasks() {","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"choongzhanhong"},"content":"        return numberOfTasks;","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":63,"author":{"gitId":"choongzhanhong"},"content":"    // A bit unoptimised, but this is to get the next number for numbering purposes.","lastModifiedDate":"2023-01-30"},{"lineNumber":64,"author":{"gitId":"choongzhanhong"},"content":"    public static int getNextTaskNumber() {","lastModifiedDate":"2023-01-30"},{"lineNumber":65,"author":{"gitId":"choongzhanhong"},"content":"        return numberOfTasks + 1;","lastModifiedDate":"2023-01-30"},{"lineNumber":66,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":67,"author":{"gitId":"choongzhanhong"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"choongzhanhong":67}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"choongzhanhong"},"content":"package task;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"choongzhanhong"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"choongzhanhong"},"content":"    // Constructor","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"choongzhanhong"},"content":"    public Todo(String description, int taskNumber) {","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"choongzhanhong"},"content":"        super(description, taskNumber);","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"choongzhanhong"},"content":"    // Return [T][ ] task","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"choongzhanhong"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"choongzhanhong"},"content":"    public String toString() {","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"choongzhanhong"},"content":"        return (\"[T]\" + super.toString());","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"choongzhanhong"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"choongzhanhong":15}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"choongzhanhong"},"content":"todo ANSWER CS2113 TUTORIAL QUESTIONS","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"choongzhanhong"},"content":"deadline weekly quiz /by monday 9pm","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"choongzhanhong"},"content":"event cs2113 lecture /from friday 4pm /to 6pm","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"choongzhanhong"},"content":"mark 1","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"choongzhanhong"},"content":"list","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"choongzhanhong"},"content":"bye","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"choongzhanhong":6}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"choongzhanhong"},"content":"javac -cp ..\\src\\main\\java -encoding ISO-8859-1 -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"choongzhanhong":1,"-":20}}]
