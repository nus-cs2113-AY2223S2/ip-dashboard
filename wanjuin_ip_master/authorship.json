[{"path":"src/main/java/siri/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wanjuin"},"content":"package siri;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"wanjuin"},"content":"import siri.exception.AddTaskIndexOutOfBounds;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"wanjuin"},"content":"import siri.exception.MarkerArrayIndexOutOfBoundsException;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"wanjuin"},"content":"import siri.exception.UnknownCommandException;","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"wanjuin"},"content":"import siri.general.Parser;","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"wanjuin"},"content":"import siri.task.*;","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"wanjuin"},"content":"import siri.general.Ui;","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"wanjuin"},"content":"import siri.general.Storage;","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"wanjuin"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"wanjuin"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"wanjuin"},"content":"/**","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"wanjuin"},"content":" * Entry point of the Task application.","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"wanjuin"},"content":" * Initializes the application and starts the interaction with the user.","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"wanjuin"},"content":" */","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"wanjuin"},"content":"    /** file path of the file that stores the lists*/","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"wanjuin"},"content":"    private static final String TASK_FILE \u003d \"data/tasklists.txt\";","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"wanjuin"},"content":"    private Ui ui;","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"wanjuin"},"content":"    public static Storage storage;","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"wanjuin"},"content":"    public static TaskList tasks;","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"wanjuin"},"content":"    public static int indexOfTask \u003d 0;","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"wanjuin"},"content":"    public static boolean isExit \u003d false;","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"wanjuin"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":29,"author":{"gitId":"wanjuin"},"content":"     * Reads the user command and executes it, until the user issues the exit command (isExit \u003d\u003d true).","lastModifiedDate":"2023-02-27"},{"lineNumber":30,"author":{"gitId":"wanjuin"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":31,"author":{"gitId":"wanjuin"},"content":"    public void runCommandLoopUntilExitCommand() {","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"wanjuin"},"content":"        while (isExit \u003d\u003d false) {","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"wanjuin"},"content":"            String input \u003d ui.readCommand();","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":35,"author":{"gitId":"wanjuin"},"content":"            ui.drawSiriChatBox();","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"wanjuin"},"content":"            try {","lastModifiedDate":"2023-02-06"},{"lineNumber":38,"author":{"gitId":"wanjuin"},"content":"                Parser p \u003d new Parser(input);","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"wanjuin"},"content":"                p.parse();","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"wanjuin"},"content":"            } catch (UnknownCommandException e) {","lastModifiedDate":"2023-02-06"},{"lineNumber":41,"author":{"gitId":"wanjuin"},"content":"                ui.showError(e.printError());","lastModifiedDate":"2023-02-27"},{"lineNumber":42,"author":{"gitId":"wanjuin"},"content":"            } catch (AddTaskIndexOutOfBounds e) {","lastModifiedDate":"2023-02-06"},{"lineNumber":43,"author":{"gitId":"wanjuin"},"content":"                ui.showError(e.printError());","lastModifiedDate":"2023-02-27"},{"lineNumber":44,"author":{"gitId":"wanjuin"},"content":"            } catch (MarkerArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-06"},{"lineNumber":45,"author":{"gitId":"wanjuin"},"content":"                ui.showError(e.printError());","lastModifiedDate":"2023-02-27"},{"lineNumber":46,"author":{"gitId":"wanjuin"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-06"},{"lineNumber":47,"author":{"gitId":"wanjuin"},"content":"                System.out.println(\"Please mark / unmark each task one by one, in the following format: \");","lastModifiedDate":"2023-02-06"},{"lineNumber":48,"author":{"gitId":"wanjuin"},"content":"                System.out.println(\"For example if you want to mark / unmark task 2 as done / undone: mark 2 / unmark 2\");","lastModifiedDate":"2023-02-06"},{"lineNumber":49,"author":{"gitId":"wanjuin"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-06"},{"lineNumber":50,"author":{"gitId":"wanjuin"},"content":"                System.out.println(\"Please add the tasks in the following format: \\n\");","lastModifiedDate":"2023-02-06"},{"lineNumber":51,"author":{"gitId":"wanjuin"},"content":"                System.out.println(\"Todo task format: todo task_name\");","lastModifiedDate":"2023-02-06"},{"lineNumber":52,"author":{"gitId":"wanjuin"},"content":"                System.out.println(\"Deadline task format: deadline deadline_name /by deadline_date\");","lastModifiedDate":"2023-02-06"},{"lineNumber":53,"author":{"gitId":"wanjuin"},"content":"                System.out.println(\"Event task format: event event_name /from event_from_timing /to event_to_timing\");","lastModifiedDate":"2023-02-06"},{"lineNumber":54,"author":{"gitId":"wanjuin"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-14"},{"lineNumber":55,"author":{"gitId":"wanjuin"},"content":"                System.out.println(\"Please only mark / unmark / delete task that is available in your task list.\");","lastModifiedDate":"2023-02-14"},{"lineNumber":56,"author":{"gitId":"wanjuin"},"content":"                System.out.println(\"You have up to \" + indexOfTask + \" number of tasks.\");","lastModifiedDate":"2023-02-14"},{"lineNumber":57,"author":{"gitId":"wanjuin"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-02-14"},{"lineNumber":58,"author":{"gitId":"wanjuin"},"content":"                ui.showLoadingError();","lastModifiedDate":"2023-02-24"},{"lineNumber":59,"author":{"gitId":"wanjuin"},"content":"            }","lastModifiedDate":"2023-02-24"},{"lineNumber":60,"author":{"gitId":"wanjuin"},"content":"            ui.drawStraightLine();","lastModifiedDate":"2023-02-24"},{"lineNumber":61,"author":{"gitId":"wanjuin"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":62,"author":{"gitId":"wanjuin"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":63,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":64,"author":{"gitId":"wanjuin"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":65,"author":{"gitId":"wanjuin"},"content":"     * Read the file and load data (tasks) into task list.","lastModifiedDate":"2023-02-27"},{"lineNumber":66,"author":{"gitId":"wanjuin"},"content":"     * If file is not created, create a new file and create an empty task list.","lastModifiedDate":"2023-02-27"},{"lineNumber":67,"author":{"gitId":"wanjuin"},"content":"     *","lastModifiedDate":"2023-02-27"},{"lineNumber":68,"author":{"gitId":"wanjuin"},"content":"     * @param filePath","lastModifiedDate":"2023-02-27"},{"lineNumber":69,"author":{"gitId":"wanjuin"},"content":"     * @throws IOException","lastModifiedDate":"2023-02-27"},{"lineNumber":70,"author":{"gitId":"wanjuin"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":71,"author":{"gitId":"wanjuin"},"content":"    public Duke(String filePath) throws IOException {","lastModifiedDate":"2023-02-24"},{"lineNumber":72,"author":{"gitId":"wanjuin"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-02-24"},{"lineNumber":73,"author":{"gitId":"wanjuin"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-02-24"},{"lineNumber":74,"author":{"gitId":"wanjuin"},"content":"        try {","lastModifiedDate":"2023-02-24"},{"lineNumber":75,"author":{"gitId":"wanjuin"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-02-24"},{"lineNumber":76,"author":{"gitId":"wanjuin"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-02-24"},{"lineNumber":77,"author":{"gitId":"wanjuin"},"content":"            storage.createFile();","lastModifiedDate":"2023-02-24"},{"lineNumber":78,"author":{"gitId":"wanjuin"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-02-24"},{"lineNumber":79,"author":{"gitId":"wanjuin"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":80,"author":{"gitId":"wanjuin"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":81,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":82,"author":{"gitId":"wanjuin"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":83,"author":{"gitId":"wanjuin"},"content":"     * Runs the program until termination","lastModifiedDate":"2023-02-27"},{"lineNumber":84,"author":{"gitId":"wanjuin"},"content":"     *","lastModifiedDate":"2023-02-27"},{"lineNumber":85,"author":{"gitId":"wanjuin"},"content":"     * @throws IOException","lastModifiedDate":"2023-02-27"},{"lineNumber":86,"author":{"gitId":"wanjuin"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":87,"author":{"gitId":"wanjuin"},"content":"    public void run() throws IOException {","lastModifiedDate":"2023-02-24"},{"lineNumber":88,"author":{"gitId":"wanjuin"},"content":"        ui.greet();","lastModifiedDate":"2023-02-24"},{"lineNumber":89,"author":{"gitId":"wanjuin"},"content":"        runCommandLoopUntilExitCommand();","lastModifiedDate":"2023-02-24"},{"lineNumber":90,"author":{"gitId":"wanjuin"},"content":"        storage.overwriteEntireList();","lastModifiedDate":"2023-02-24"},{"lineNumber":91,"author":{"gitId":"wanjuin"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":92,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":93,"author":{"gitId":"wanjuin"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2023-02-24"},{"lineNumber":94,"author":{"gitId":"wanjuin"},"content":"        new Duke(TASK_FILE).run();","lastModifiedDate":"2023-02-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":3,"wanjuin":93}},{"path":"src/main/java/siri/exception/AddTaskIndexOutOfBounds.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wanjuin"},"content":"package siri.exception;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"wanjuin"},"content":"/**","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"wanjuin"},"content":" * Signals an error caused by not entering a task description.","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"wanjuin"},"content":" */","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"wanjuin"},"content":"public class AddTaskIndexOutOfBounds extends Exception {","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"wanjuin"},"content":"    protected String taskType;","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"wanjuin"},"content":"    public AddTaskIndexOutOfBounds(String taskType) {","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"wanjuin"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"wanjuin"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"wanjuin"},"content":"    public String printError() {","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"wanjuin"},"content":"        String errorMessage \u003d \"OPPS!!! The description of a \" + taskType + \" cannot be empty.\";","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"wanjuin"},"content":"        return errorMessage;","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"wanjuin"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"wanjuin"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"wanjuin":18}},{"path":"src/main/java/siri/exception/MarkerArrayIndexOutOfBoundsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wanjuin"},"content":"package siri.exception;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"wanjuin"},"content":"/**","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"wanjuin"},"content":" * Signals an error caused by not entering task number to be marked or unmarked.","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"wanjuin"},"content":" */","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"wanjuin"},"content":"public class MarkerArrayIndexOutOfBoundsException extends Exception {","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"wanjuin"},"content":"    public String printError(){","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"wanjuin"},"content":"        String errorMessage \u003d \"Please enter the task number that you would like to mark / unmark, \" +","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"wanjuin"},"content":"                \"in the following format: \" +","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"wanjuin"},"content":"                \"\\nFor example if you want to mark / unmark task 2 as \" +","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"wanjuin"},"content":"                \"done / undone: mark 2 / unmark 2\";","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"wanjuin"},"content":"        return errorMessage;","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"wanjuin"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"wanjuin"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"wanjuin":15}},{"path":"src/main/java/siri/exception/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wanjuin"},"content":"package siri.exception;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"wanjuin"},"content":"/**","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"wanjuin"},"content":" * Signals an error caused by entering command that is not a \"default\" command in the application.","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"wanjuin"},"content":" */","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"wanjuin"},"content":"public class UnknownCommandException extends Exception {","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"wanjuin"},"content":"    public String printError(){","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"wanjuin"},"content":"        String errorMessage \u003d \"T^T OPPS!!! I\u0027m sorry, but I don\u0027t know what that means\";","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"wanjuin"},"content":"        return errorMessage;","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"wanjuin"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"wanjuin"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"wanjuin":11}},{"path":"src/main/java/siri/general/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wanjuin"},"content":"package siri.general;","lastModifiedDate":"2023-02-24"},{"lineNumber":2,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"wanjuin"},"content":"import siri.exception.AddTaskIndexOutOfBounds;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"wanjuin"},"content":"import siri.exception.MarkerArrayIndexOutOfBoundsException;","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"wanjuin"},"content":"import siri.exception.UnknownCommandException;","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"wanjuin"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"wanjuin"},"content":"import static siri.Duke.storage;","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"wanjuin"},"content":"import static siri.Duke.tasks;","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"wanjuin"},"content":"import static siri.Duke.indexOfTask;","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"wanjuin"},"content":"import static siri.Duke.isExit;","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"wanjuin"},"content":"/**","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"wanjuin"},"content":" * Parse the user command into different parts.","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"wanjuin"},"content":" */","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"wanjuin"},"content":"public class Parser {","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"wanjuin"},"content":"    protected String userInput;","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"wanjuin"},"content":"    protected Ui ui;","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"wanjuin"},"content":"    public Parser(String command){","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"wanjuin"},"content":"        this.userInput \u003d command;","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"wanjuin"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"wanjuin"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"wanjuin"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":26,"author":{"gitId":"wanjuin"},"content":"     * Parse the user input into task command and command description.","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"wanjuin"},"content":"     *","lastModifiedDate":"2023-02-27"},{"lineNumber":28,"author":{"gitId":"wanjuin"},"content":"     * @throws MarkerArrayIndexOutOfBoundsException","lastModifiedDate":"2023-02-27"},{"lineNumber":29,"author":{"gitId":"wanjuin"},"content":"     * @throws AddTaskIndexOutOfBounds","lastModifiedDate":"2023-02-27"},{"lineNumber":30,"author":{"gitId":"wanjuin"},"content":"     * @throws UnknownCommandException","lastModifiedDate":"2023-02-27"},{"lineNumber":31,"author":{"gitId":"wanjuin"},"content":"     * @throws IOException","lastModifiedDate":"2023-02-27"},{"lineNumber":32,"author":{"gitId":"wanjuin"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":33,"author":{"gitId":"wanjuin"},"content":"    public void parse() throws MarkerArrayIndexOutOfBoundsException, AddTaskIndexOutOfBounds, UnknownCommandException, IOException {","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"wanjuin"},"content":"        String[] command \u003d userInput.split(\" \", 2);","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"wanjuin"},"content":"        switch (command[0]) {","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"wanjuin"},"content":"        case \"bye\":","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"wanjuin"},"content":"            isExit \u003d true;","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"wanjuin"},"content":"            ui.sayGoodbye();","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"wanjuin"},"content":"            break;","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"wanjuin"},"content":"        case \"list\":","lastModifiedDate":"2023-02-24"},{"lineNumber":41,"author":{"gitId":"wanjuin"},"content":"            tasks.printTaskList();","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"wanjuin"},"content":"            break;","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"wanjuin"},"content":"        case \"mark\":","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"wanjuin"},"content":"        case \"unmark\":","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"wanjuin"},"content":"            if (command.length \u003d\u003d 1) {","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"wanjuin"},"content":"                throw new MarkerArrayIndexOutOfBoundsException();","lastModifiedDate":"2023-02-24"},{"lineNumber":47,"author":{"gitId":"wanjuin"},"content":"            }","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"wanjuin"},"content":"            int taskNumber_m \u003d Integer.parseInt(command[1]);","lastModifiedDate":"2023-02-27"},{"lineNumber":49,"author":{"gitId":"wanjuin"},"content":"            tasks.markTask(command[0], taskNumber_m);","lastModifiedDate":"2023-02-27"},{"lineNumber":50,"author":{"gitId":"wanjuin"},"content":"            break;","lastModifiedDate":"2023-02-24"},{"lineNumber":51,"author":{"gitId":"wanjuin"},"content":"        case \"delete\":","lastModifiedDate":"2023-02-24"},{"lineNumber":52,"author":{"gitId":"wanjuin"},"content":"            int taskNumber_d \u003d Integer.parseInt(command[1]);","lastModifiedDate":"2023-02-27"},{"lineNumber":53,"author":{"gitId":"wanjuin"},"content":"            tasks.deleteTask(taskNumber_d);","lastModifiedDate":"2023-02-27"},{"lineNumber":54,"author":{"gitId":"wanjuin"},"content":"            break;","lastModifiedDate":"2023-02-24"},{"lineNumber":55,"author":{"gitId":"wanjuin"},"content":"        case \"todo\":","lastModifiedDate":"2023-02-24"},{"lineNumber":56,"author":{"gitId":"wanjuin"},"content":"        case \"deadline\":","lastModifiedDate":"2023-02-24"},{"lineNumber":57,"author":{"gitId":"wanjuin"},"content":"        case \"event\":","lastModifiedDate":"2023-02-24"},{"lineNumber":58,"author":{"gitId":"wanjuin"},"content":"            if (command.length \u003d\u003d 1) {","lastModifiedDate":"2023-02-24"},{"lineNumber":59,"author":{"gitId":"wanjuin"},"content":"                throw new AddTaskIndexOutOfBounds(command[0]);","lastModifiedDate":"2023-02-24"},{"lineNumber":60,"author":{"gitId":"wanjuin"},"content":"            }","lastModifiedDate":"2023-02-24"},{"lineNumber":61,"author":{"gitId":"wanjuin"},"content":"            tasks.addTask(command[0], command[1]);","lastModifiedDate":"2023-02-24"},{"lineNumber":62,"author":{"gitId":"wanjuin"},"content":"            storage.appendToFile(tasks.getTaskList().get(indexOfTask).toFileString());","lastModifiedDate":"2023-02-27"},{"lineNumber":63,"author":{"gitId":"wanjuin"},"content":"            tasks.printNewTask();","lastModifiedDate":"2023-02-24"},{"lineNumber":64,"author":{"gitId":"wanjuin"},"content":"            indexOfTask++;","lastModifiedDate":"2023-02-24"},{"lineNumber":65,"author":{"gitId":"wanjuin"},"content":"            break;","lastModifiedDate":"2023-02-24"},{"lineNumber":66,"author":{"gitId":"wanjuin"},"content":"        case \"find\":","lastModifiedDate":"2023-02-24"},{"lineNumber":67,"author":{"gitId":"wanjuin"},"content":"            tasks.findTask(command[1]);","lastModifiedDate":"2023-02-24"},{"lineNumber":68,"author":{"gitId":"wanjuin"},"content":"            break;","lastModifiedDate":"2023-02-24"},{"lineNumber":69,"author":{"gitId":"wanjuin"},"content":"        default:","lastModifiedDate":"2023-02-24"},{"lineNumber":70,"author":{"gitId":"wanjuin"},"content":"            throw new UnknownCommandException();","lastModifiedDate":"2023-02-24"},{"lineNumber":71,"author":{"gitId":"wanjuin"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":72,"author":{"gitId":"wanjuin"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":73,"author":{"gitId":"wanjuin"},"content":"}","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"wanjuin":73}},{"path":"src/main/java/siri/general/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wanjuin"},"content":"package siri.general;","lastModifiedDate":"2023-02-24"},{"lineNumber":2,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"wanjuin"},"content":"import siri.task.*;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"wanjuin"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"wanjuin"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"wanjuin"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"wanjuin"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"wanjuin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"wanjuin"},"content":"import java.io.File;","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"wanjuin"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"wanjuin"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"wanjuin"},"content":"import static siri.Duke.indexOfTask;","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"wanjuin"},"content":"import static siri.Duke.tasks;","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"wanjuin"},"content":"/**","lastModifiedDate":"2023-02-27"},{"lineNumber":19,"author":{"gitId":"wanjuin"},"content":" * Represents the file used to store task lists data.","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"wanjuin"},"content":" */","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"wanjuin"},"content":"public class Storage {","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"wanjuin"},"content":"    protected String filePath;","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"wanjuin"},"content":"    protected File file;","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"wanjuin"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"wanjuin"},"content":"     * Store tasks that have been previously loaded.","lastModifiedDate":"2023-02-27"},{"lineNumber":28,"author":{"gitId":"wanjuin"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":29,"author":{"gitId":"wanjuin"},"content":"    protected ArrayList\u003cTask\u003e oldTasks;","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":31,"author":{"gitId":"wanjuin"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":32,"author":{"gitId":"wanjuin"},"content":"     * Constructor that creates a new file and array list (old tasks).","lastModifiedDate":"2023-02-27"},{"lineNumber":33,"author":{"gitId":"wanjuin"},"content":"     *","lastModifiedDate":"2023-02-27"},{"lineNumber":34,"author":{"gitId":"wanjuin"},"content":"     * @param filePath","lastModifiedDate":"2023-02-27"},{"lineNumber":35,"author":{"gitId":"wanjuin"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":36,"author":{"gitId":"wanjuin"},"content":"    public Storage (String filePath){","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"wanjuin"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"wanjuin"},"content":"        this.file \u003d new File(filePath);","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"wanjuin"},"content":"        this.oldTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"wanjuin"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":41,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"wanjuin"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":43,"author":{"gitId":"wanjuin"},"content":"     * Create a new file if there is no existing file.","lastModifiedDate":"2023-02-27"},{"lineNumber":44,"author":{"gitId":"wanjuin"},"content":"     *","lastModifiedDate":"2023-02-27"},{"lineNumber":45,"author":{"gitId":"wanjuin"},"content":"     * @throws IOException","lastModifiedDate":"2023-02-27"},{"lineNumber":46,"author":{"gitId":"wanjuin"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":47,"author":{"gitId":"wanjuin"},"content":"    public void createFile() throws IOException {","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"wanjuin"},"content":"        Path path \u003d Paths.get(filePath);","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"wanjuin"},"content":"        Files.createDirectories(path.getParent());","lastModifiedDate":"2023-02-24"},{"lineNumber":50,"author":{"gitId":"wanjuin"},"content":"        file.createNewFile();","lastModifiedDate":"2023-02-24"},{"lineNumber":51,"author":{"gitId":"wanjuin"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":52,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":53,"author":{"gitId":"wanjuin"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":54,"author":{"gitId":"wanjuin"},"content":"     * Loads the {@code ArrayList\u003cTask\u003e} data from this storage file, and then returns it.","lastModifiedDate":"2023-02-27"},{"lineNumber":55,"author":{"gitId":"wanjuin"},"content":"     * Returns an empty {@code ArrayList\u003cTask\u003e} if the file is empty.","lastModifiedDate":"2023-02-27"},{"lineNumber":56,"author":{"gitId":"wanjuin"},"content":"     *","lastModifiedDate":"2023-02-27"},{"lineNumber":57,"author":{"gitId":"wanjuin"},"content":"     * @return oldTasks Task List data stored in the storage file","lastModifiedDate":"2023-02-27"},{"lineNumber":58,"author":{"gitId":"wanjuin"},"content":"     * @throws IOException","lastModifiedDate":"2023-02-27"},{"lineNumber":59,"author":{"gitId":"wanjuin"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":60,"author":{"gitId":"wanjuin"},"content":"    public ArrayList\u003cTask\u003e load() throws IOException {","lastModifiedDate":"2023-02-24"},{"lineNumber":61,"author":{"gitId":"wanjuin"},"content":"        Scanner s \u003d new Scanner(file);","lastModifiedDate":"2023-02-24"},{"lineNumber":62,"author":{"gitId":"wanjuin"},"content":"        while (s.hasNext()){","lastModifiedDate":"2023-02-24"},{"lineNumber":63,"author":{"gitId":"wanjuin"},"content":"            String[] command \u003d s.nextLine().split(\" | \", 2);","lastModifiedDate":"2023-02-24"},{"lineNumber":64,"author":{"gitId":"wanjuin"},"content":"            readFile(command[0], command[1]);","lastModifiedDate":"2023-02-24"},{"lineNumber":65,"author":{"gitId":"wanjuin"},"content":"            indexOfTask++;","lastModifiedDate":"2023-02-24"},{"lineNumber":66,"author":{"gitId":"wanjuin"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":67,"author":{"gitId":"wanjuin"},"content":"        return oldTasks;","lastModifiedDate":"2023-02-24"},{"lineNumber":68,"author":{"gitId":"wanjuin"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":69,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":70,"author":{"gitId":"wanjuin"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":71,"author":{"gitId":"wanjuin"},"content":"     * Read the file and load the tasks data into {@code oldTasks}.","lastModifiedDate":"2023-02-27"},{"lineNumber":72,"author":{"gitId":"wanjuin"},"content":"     * Add different task types according to {@param taskCommand} and {@param taskD}.","lastModifiedDate":"2023-02-27"},{"lineNumber":73,"author":{"gitId":"wanjuin"},"content":"     *","lastModifiedDate":"2023-02-27"},{"lineNumber":74,"author":{"gitId":"wanjuin"},"content":"     * @param taskCommand arguments in the storage file","lastModifiedDate":"2023-02-27"},{"lineNumber":75,"author":{"gitId":"wanjuin"},"content":"     * @param taskD arguments in the storage file","lastModifiedDate":"2023-02-27"},{"lineNumber":76,"author":{"gitId":"wanjuin"},"content":"     * @throws IOException","lastModifiedDate":"2023-02-27"},{"lineNumber":77,"author":{"gitId":"wanjuin"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":78,"author":{"gitId":"wanjuin"},"content":"    private void readFile(String taskCommand, String taskD) throws IOException {","lastModifiedDate":"2023-02-24"},{"lineNumber":79,"author":{"gitId":"wanjuin"},"content":"        String[] taskStatus \u003d taskD.split(\" | \", 3);//taskStatus[1] is the status","lastModifiedDate":"2023-02-24"},{"lineNumber":80,"author":{"gitId":"wanjuin"},"content":"        String[] taskName \u003d taskStatus[2].split(\"| \", 2);","lastModifiedDate":"2023-02-24"},{"lineNumber":81,"author":{"gitId":"wanjuin"},"content":"        switch(taskCommand) {","lastModifiedDate":"2023-02-24"},{"lineNumber":82,"author":{"gitId":"wanjuin"},"content":"        case \"T\":","lastModifiedDate":"2023-02-24"},{"lineNumber":83,"author":{"gitId":"wanjuin"},"content":"            oldTasks.add(new ToDo(taskName[1].trim()));","lastModifiedDate":"2023-02-24"},{"lineNumber":84,"author":{"gitId":"wanjuin"},"content":"            break;","lastModifiedDate":"2023-02-24"},{"lineNumber":85,"author":{"gitId":"wanjuin"},"content":"        case \"D\":","lastModifiedDate":"2023-02-24"},{"lineNumber":86,"author":{"gitId":"wanjuin"},"content":"            String[] deadlineTaskD \u003d taskName[1].split(\" /by: \",2);","lastModifiedDate":"2023-02-24"},{"lineNumber":87,"author":{"gitId":"wanjuin"},"content":"            oldTasks.add(new Deadline(deadlineTaskD[0].trim(), deadlineTaskD[1].trim()));","lastModifiedDate":"2023-02-24"},{"lineNumber":88,"author":{"gitId":"wanjuin"},"content":"            break;","lastModifiedDate":"2023-02-24"},{"lineNumber":89,"author":{"gitId":"wanjuin"},"content":"        case \"E\":","lastModifiedDate":"2023-02-24"},{"lineNumber":90,"author":{"gitId":"wanjuin"},"content":"            String[] eventName \u003d taskName[1].split(\" /from: \", 2);","lastModifiedDate":"2023-02-24"},{"lineNumber":91,"author":{"gitId":"wanjuin"},"content":"            String[] eventDate \u003d eventName[1].split(\" to: \", 2);","lastModifiedDate":"2023-02-24"},{"lineNumber":92,"author":{"gitId":"wanjuin"},"content":"            oldTasks.add(new Event(eventName[0].trim(), eventDate[0].trim(), eventDate[1].trim()));","lastModifiedDate":"2023-02-24"},{"lineNumber":93,"author":{"gitId":"wanjuin"},"content":"            break;","lastModifiedDate":"2023-02-24"},{"lineNumber":94,"author":{"gitId":"wanjuin"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":95,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":96,"author":{"gitId":"wanjuin"},"content":"        if(taskStatus[1].equals(\"X\")){","lastModifiedDate":"2023-02-24"},{"lineNumber":97,"author":{"gitId":"wanjuin"},"content":"            oldTasks.get(indexOfTask).setDone(true);","lastModifiedDate":"2023-02-24"},{"lineNumber":98,"author":{"gitId":"wanjuin"},"content":"        } else {","lastModifiedDate":"2023-02-24"},{"lineNumber":99,"author":{"gitId":"wanjuin"},"content":"            oldTasks.get(indexOfTask).setDone(false);","lastModifiedDate":"2023-02-24"},{"lineNumber":100,"author":{"gitId":"wanjuin"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":101,"author":{"gitId":"wanjuin"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":102,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":103,"author":{"gitId":"wanjuin"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":104,"author":{"gitId":"wanjuin"},"content":"     * Add task to the storage file.","lastModifiedDate":"2023-02-27"},{"lineNumber":105,"author":{"gitId":"wanjuin"},"content":"     *","lastModifiedDate":"2023-02-27"},{"lineNumber":106,"author":{"gitId":"wanjuin"},"content":"     * @param taskToAdd formatted task description according to user input","lastModifiedDate":"2023-02-27"},{"lineNumber":107,"author":{"gitId":"wanjuin"},"content":"     * @throws IOException","lastModifiedDate":"2023-02-27"},{"lineNumber":108,"author":{"gitId":"wanjuin"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":109,"author":{"gitId":"wanjuin"},"content":"    public void appendToFile(String taskToAdd) throws IOException {","lastModifiedDate":"2023-02-27"},{"lineNumber":110,"author":{"gitId":"wanjuin"},"content":"        FileWriter fw \u003d new FileWriter(filePath, true);","lastModifiedDate":"2023-02-24"},{"lineNumber":111,"author":{"gitId":"wanjuin"},"content":"        fw.write(taskToAdd + System.lineSeparator());","lastModifiedDate":"2023-02-24"},{"lineNumber":112,"author":{"gitId":"wanjuin"},"content":"        fw.close();","lastModifiedDate":"2023-02-24"},{"lineNumber":113,"author":{"gitId":"wanjuin"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":114,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":115,"author":{"gitId":"wanjuin"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":116,"author":{"gitId":"wanjuin"},"content":"     * Update the task list in the storage file at the end of the application.","lastModifiedDate":"2023-02-27"},{"lineNumber":117,"author":{"gitId":"wanjuin"},"content":"     *","lastModifiedDate":"2023-02-27"},{"lineNumber":118,"author":{"gitId":"wanjuin"},"content":"     * @throws IOException","lastModifiedDate":"2023-02-27"},{"lineNumber":119,"author":{"gitId":"wanjuin"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":120,"author":{"gitId":"wanjuin"},"content":"    public void overwriteEntireList() throws IOException {","lastModifiedDate":"2023-02-24"},{"lineNumber":121,"author":{"gitId":"wanjuin"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2023-02-24"},{"lineNumber":122,"author":{"gitId":"wanjuin"},"content":"        for(int i \u003d 0; i \u003c indexOfTask; ++i){","lastModifiedDate":"2023-02-24"},{"lineNumber":123,"author":{"gitId":"wanjuin"},"content":"            fw.write(tasks.getTaskList().get(i).toFileString() + System.lineSeparator());","lastModifiedDate":"2023-02-24"},{"lineNumber":124,"author":{"gitId":"wanjuin"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":125,"author":{"gitId":"wanjuin"},"content":"        fw.close();","lastModifiedDate":"2023-02-24"},{"lineNumber":126,"author":{"gitId":"wanjuin"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":127,"author":{"gitId":"wanjuin"},"content":"}","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"wanjuin":127}},{"path":"src/main/java/siri/general/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wanjuin"},"content":"package siri.general;","lastModifiedDate":"2023-02-24"},{"lineNumber":2,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"wanjuin"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"wanjuin"},"content":"/**","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"wanjuin"},"content":" * Text UI of the application.","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"wanjuin"},"content":" */","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"wanjuin"},"content":"public class Ui {","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"wanjuin"},"content":"    /** Logo that shows up at welcome message. */","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"wanjuin"},"content":"    private static final String logo \u003d \"  ______     __     __  _____     __\\n\"","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"wanjuin"},"content":"            + \" | _____|   |__|   |  |/ ____|   |__|\\n\"","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"wanjuin"},"content":"            + \" | |____     __    |   /          __\\n\"","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"wanjuin"},"content":"            + \" |_____ |   |  |   |  |          |  |\\n\"","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"wanjuin"},"content":"            + \" _____| |   |  |   |  |          |  |\\n\"","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"wanjuin"},"content":"            + \" |______|   |__|   |__|          |__|\\n\";","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"wanjuin"},"content":"    private static String straightLine \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";","lastModifiedDate":"2023-02-27"},{"lineNumber":19,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"wanjuin"},"content":"    private static String siriChatBox \u003d \"Siri:\\n\";","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"wanjuin"},"content":"    protected static String userChatBox \u003d \"User:\\n\";","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"wanjuin"},"content":"    /** Line that indicates that the user is in the conversation. */","lastModifiedDate":"2023-02-27"},{"lineNumber":25,"author":{"gitId":"wanjuin"},"content":"    public void drawUserChatBox (){","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"wanjuin"},"content":"        System.out.println(userChatBox);","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"wanjuin"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"wanjuin"},"content":"    /** Line that indicates that \"Siri\" is in the conversation. */","lastModifiedDate":"2023-02-27"},{"lineNumber":30,"author":{"gitId":"wanjuin"},"content":"    public void drawSiriChatBox(){","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"wanjuin"},"content":"        System.out.println(siriChatBox);","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"wanjuin"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"wanjuin"},"content":"    /** Straight line that separates \"Siri\" conversation and the user conversation. */","lastModifiedDate":"2023-02-27"},{"lineNumber":35,"author":{"gitId":"wanjuin"},"content":"    public void drawStraightLine(){","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"wanjuin"},"content":"        System.out.println(straightLine);","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"wanjuin"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":39,"author":{"gitId":"wanjuin"},"content":"    /** Print welcome messages. */","lastModifiedDate":"2023-02-27"},{"lineNumber":40,"author":{"gitId":"wanjuin"},"content":"    public void greet(){","lastModifiedDate":"2023-02-24"},{"lineNumber":41,"author":{"gitId":"wanjuin"},"content":"        System.out.println(\"Hello from \\n\" + logo);","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"wanjuin"},"content":"        System.out.println(straightLine);","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"wanjuin"},"content":"        System.out.println(siriChatBox);","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"wanjuin"},"content":"        System.out.println(\"Hey, I\u0027m Siri\\n\" + \"What can I do for you?\");","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"wanjuin"},"content":"        System.out.println(straightLine);","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"wanjuin"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":47,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"wanjuin"},"content":"    /** Print goodbye message. */","lastModifiedDate":"2023-02-27"},{"lineNumber":49,"author":{"gitId":"wanjuin"},"content":"    public void sayGoodbye() {","lastModifiedDate":"2023-02-24"},{"lineNumber":50,"author":{"gitId":"wanjuin"},"content":"        System.out.println(\"\u003eo\u003c Goodbye! Hope to see you again soon! \u003eo\u003c\");","lastModifiedDate":"2023-02-24"},{"lineNumber":51,"author":{"gitId":"wanjuin"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":52,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":53,"author":{"gitId":"wanjuin"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":54,"author":{"gitId":"wanjuin"},"content":"     * Prompts for the command and reads the text entered by the user.","lastModifiedDate":"2023-02-27"},{"lineNumber":55,"author":{"gitId":"wanjuin"},"content":"     * Return the user input.","lastModifiedDate":"2023-02-27"},{"lineNumber":56,"author":{"gitId":"wanjuin"},"content":"     *","lastModifiedDate":"2023-02-27"},{"lineNumber":57,"author":{"gitId":"wanjuin"},"content":"     * @return user input entered by the user","lastModifiedDate":"2023-02-27"},{"lineNumber":58,"author":{"gitId":"wanjuin"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":59,"author":{"gitId":"wanjuin"},"content":"    public String readCommand(){","lastModifiedDate":"2023-02-24"},{"lineNumber":60,"author":{"gitId":"wanjuin"},"content":"        System.out.println(userChatBox);","lastModifiedDate":"2023-02-24"},{"lineNumber":61,"author":{"gitId":"wanjuin"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-24"},{"lineNumber":62,"author":{"gitId":"wanjuin"},"content":"        String userInput \u003d in.nextLine().trim();","lastModifiedDate":"2023-02-24"},{"lineNumber":63,"author":{"gitId":"wanjuin"},"content":"        System.out.println(straightLine);","lastModifiedDate":"2023-02-24"},{"lineNumber":64,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":65,"author":{"gitId":"wanjuin"},"content":"        return userInput;","lastModifiedDate":"2023-02-24"},{"lineNumber":66,"author":{"gitId":"wanjuin"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":67,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":68,"author":{"gitId":"wanjuin"},"content":"    /** Print the loading of files error. */","lastModifiedDate":"2023-02-27"},{"lineNumber":69,"author":{"gitId":"wanjuin"},"content":"    public void showLoadingError(){","lastModifiedDate":"2023-02-24"},{"lineNumber":70,"author":{"gitId":"wanjuin"},"content":"        System.out.println(\"The reason you get this error could be: \");","lastModifiedDate":"2023-02-24"},{"lineNumber":71,"author":{"gitId":"wanjuin"},"content":"        System.out.println(\"    1) Unable to write to files.\");","lastModifiedDate":"2023-02-24"},{"lineNumber":72,"author":{"gitId":"wanjuin"},"content":"        System.out.println(\"    2) Unable to create files.\");","lastModifiedDate":"2023-02-24"},{"lineNumber":73,"author":{"gitId":"wanjuin"},"content":"        System.out.println(\"    3) Unable to update new task list.\");","lastModifiedDate":"2023-02-24"},{"lineNumber":74,"author":{"gitId":"wanjuin"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":75,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":76,"author":{"gitId":"wanjuin"},"content":"    /** Print error message by \"catch\" statement. */","lastModifiedDate":"2023-02-27"},{"lineNumber":77,"author":{"gitId":"wanjuin"},"content":"    public void showError(String errorMessage){","lastModifiedDate":"2023-02-27"},{"lineNumber":78,"author":{"gitId":"wanjuin"},"content":"        System.out.println(errorMessage);","lastModifiedDate":"2023-02-27"},{"lineNumber":79,"author":{"gitId":"wanjuin"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":80,"author":{"gitId":"wanjuin"},"content":"}","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"wanjuin":80}},{"path":"src/main/java/siri/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wanjuin"},"content":"package siri.task;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"wanjuin"},"content":"/**","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"wanjuin"},"content":" * Represents a deadline task in the task list.","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"wanjuin"},"content":" */","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"wanjuin"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"wanjuin"},"content":"    protected String by;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"wanjuin"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"wanjuin"},"content":"     * Create a Deadline task with its task description and deadline.","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"wanjuin"},"content":"     *","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"wanjuin"},"content":"     * @param description","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"wanjuin"},"content":"     * @param by","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"wanjuin"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"wanjuin"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"wanjuin"},"content":"        super(description);","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"wanjuin"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"wanjuin"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"wanjuin"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"wanjuin"},"content":"    public String toString() {","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"wanjuin"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"wanjuin"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"wanjuin"},"content":"    @Override","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"wanjuin"},"content":"    public String toFileString(){","lastModifiedDate":"2023-02-14"},{"lineNumber":27,"author":{"gitId":"wanjuin"},"content":"        return \"D | \" + super.toFileString() + \" /by: \" + by ;","lastModifiedDate":"2023-02-14"},{"lineNumber":28,"author":{"gitId":"wanjuin"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":29,"author":{"gitId":"wanjuin"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"wanjuin":29}},{"path":"src/main/java/siri/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wanjuin"},"content":"package siri.task;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"wanjuin"},"content":"/**","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"wanjuin"},"content":" * Represents an Event task in the task list.","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"wanjuin"},"content":" */","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"wanjuin"},"content":"public class Event extends Task {","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"wanjuin"},"content":"    protected String from;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"wanjuin"},"content":"    protected String to;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"wanjuin"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"wanjuin"},"content":"     * Create an Event task with its task description, from and to dates.","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"wanjuin"},"content":"     *","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"wanjuin"},"content":"     * @param description","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"wanjuin"},"content":"     * @param from","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"wanjuin"},"content":"     * @param to","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"wanjuin"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"wanjuin"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"wanjuin"},"content":"        super(description);","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"wanjuin"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"wanjuin"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"wanjuin"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"wanjuin"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"wanjuin"},"content":"    public String toString() {","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"wanjuin"},"content":"        return (\"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\");","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"wanjuin"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":28,"author":{"gitId":"wanjuin"},"content":"    @Override","lastModifiedDate":"2023-02-14"},{"lineNumber":29,"author":{"gitId":"wanjuin"},"content":"    public String toFileString(){","lastModifiedDate":"2023-02-14"},{"lineNumber":30,"author":{"gitId":"wanjuin"},"content":"        return \"E | \" + super.toFileString() + \" /from: \" + from + \" to: \" + to;","lastModifiedDate":"2023-02-14"},{"lineNumber":31,"author":{"gitId":"wanjuin"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":32,"author":{"gitId":"wanjuin"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"wanjuin":32}},{"path":"src/main/java/siri/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wanjuin"},"content":"package siri.task;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"wanjuin"},"content":"/**","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"wanjuin"},"content":" * Represents a Task.","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"wanjuin"},"content":" */","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"wanjuin"},"content":"public class Task {","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"wanjuin"},"content":"    protected String description;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"wanjuin"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"wanjuin"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"wanjuin"},"content":"     * Creates a Task with a description.","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"wanjuin"},"content":"     *","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"wanjuin"},"content":"     * @param description","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"wanjuin"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"wanjuin"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"wanjuin"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"wanjuin"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"wanjuin"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"wanjuin"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"wanjuin"},"content":"     * @return description of the task.","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"wanjuin"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":24,"author":{"gitId":"wanjuin"},"content":"    public String getDescription() {","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"wanjuin"},"content":"        return description;","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"wanjuin"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"wanjuin"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":29,"author":{"gitId":"wanjuin"},"content":"     * Setting the task as done or not done.","lastModifiedDate":"2023-02-27"},{"lineNumber":30,"author":{"gitId":"wanjuin"},"content":"     * @param done","lastModifiedDate":"2023-02-27"},{"lineNumber":31,"author":{"gitId":"wanjuin"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":32,"author":{"gitId":"wanjuin"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2023-02-09"},{"lineNumber":33,"author":{"gitId":"wanjuin"},"content":"        isDone \u003d done;","lastModifiedDate":"2023-02-09"},{"lineNumber":34,"author":{"gitId":"wanjuin"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":36,"author":{"gitId":"wanjuin"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":37,"author":{"gitId":"wanjuin"},"content":"     * @return the string that represents Done and Not done in the task list.","lastModifiedDate":"2023-02-27"},{"lineNumber":38,"author":{"gitId":"wanjuin"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":39,"author":{"gitId":"wanjuin"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"wanjuin"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"wanjuin"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"wanjuin"},"content":"    public String toString() {","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"wanjuin"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"wanjuin"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":47,"author":{"gitId":"wanjuin"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":48,"author":{"gitId":"wanjuin"},"content":"     * @return the string that represents Done and Not done in the task list in file.","lastModifiedDate":"2023-02-27"},{"lineNumber":49,"author":{"gitId":"wanjuin"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":50,"author":{"gitId":"wanjuin"},"content":"    public String getFileStatusIcon(){","lastModifiedDate":"2023-02-14"},{"lineNumber":51,"author":{"gitId":"wanjuin"},"content":"        return (isDone? \"X\" : \"0\");","lastModifiedDate":"2023-02-14"},{"lineNumber":52,"author":{"gitId":"wanjuin"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":53,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":54,"author":{"gitId":"wanjuin"},"content":"    public String toFileString() {","lastModifiedDate":"2023-02-14"},{"lineNumber":55,"author":{"gitId":"wanjuin"},"content":"        return getFileStatusIcon() + \" | \" + description;","lastModifiedDate":"2023-02-14"},{"lineNumber":56,"author":{"gitId":"wanjuin"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":57,"author":{"gitId":"wanjuin"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"wanjuin":57}},{"path":"src/main/java/siri/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wanjuin"},"content":"package siri.task;","lastModifiedDate":"2023-02-24"},{"lineNumber":2,"author":{"gitId":"wanjuin"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"wanjuin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"wanjuin"},"content":"import static siri.Duke.indexOfTask;","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"wanjuin"},"content":"/**","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"wanjuin"},"content":" * Represents the list of task.","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"wanjuin"},"content":" */","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"wanjuin"},"content":"public class TaskList {","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"wanjuin"},"content":"    protected static ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"wanjuin"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"wanjuin"},"content":"     * Create a new empty task list.","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"wanjuin"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"wanjuin"},"content":"    public TaskList(){","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"wanjuin"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"wanjuin"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"wanjuin"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"wanjuin"},"content":"     * Create a new task list with the loaded data (loaded task list) from storage file.","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"wanjuin"},"content":"     * @param oldTaskList","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"wanjuin"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":24,"author":{"gitId":"wanjuin"},"content":"    public TaskList(ArrayList\u003cTask\u003e oldTaskList){","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"wanjuin"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e(oldTaskList);","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"wanjuin"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":28,"author":{"gitId":"wanjuin"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":29,"author":{"gitId":"wanjuin"},"content":"     * @return task list.","lastModifiedDate":"2023-02-27"},{"lineNumber":30,"author":{"gitId":"wanjuin"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":31,"author":{"gitId":"wanjuin"},"content":"    public ArrayList\u003cTask\u003e getTaskList(){","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"wanjuin"},"content":"        return taskList;","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"wanjuin"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":35,"author":{"gitId":"wanjuin"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":36,"author":{"gitId":"wanjuin"},"content":"     * Print the task list task by task.","lastModifiedDate":"2023-02-27"},{"lineNumber":37,"author":{"gitId":"wanjuin"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":38,"author":{"gitId":"wanjuin"},"content":"    public void printTaskList() {","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"wanjuin"},"content":"        System.out.println(\"Below is your task list\");","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"wanjuin"},"content":"        for (int i \u003d 0; i \u003c indexOfTask; ++i) {","lastModifiedDate":"2023-02-24"},{"lineNumber":41,"author":{"gitId":"wanjuin"},"content":"            System.out.println((i + 1) + \". \" + taskList.get(i).toString());","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"wanjuin"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"wanjuin"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"wanjuin"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":46,"author":{"gitId":"wanjuin"},"content":"     * Add different types of task to the task list and storage file in different format respectively.","lastModifiedDate":"2023-02-27"},{"lineNumber":47,"author":{"gitId":"wanjuin"},"content":"     *","lastModifiedDate":"2023-02-27"},{"lineNumber":48,"author":{"gitId":"wanjuin"},"content":"     * @param taskCommand represents the task type (Todo, Deadline, Event).","lastModifiedDate":"2023-02-27"},{"lineNumber":49,"author":{"gitId":"wanjuin"},"content":"     * @param taskD represents the task description of each task.","lastModifiedDate":"2023-02-27"},{"lineNumber":50,"author":{"gitId":"wanjuin"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":51,"author":{"gitId":"wanjuin"},"content":"    public void addTask(String taskCommand, String taskD) {","lastModifiedDate":"2023-02-27"},{"lineNumber":52,"author":{"gitId":"wanjuin"},"content":"        switch (taskCommand) {","lastModifiedDate":"2023-02-24"},{"lineNumber":53,"author":{"gitId":"wanjuin"},"content":"        case \"todo\":","lastModifiedDate":"2023-02-24"},{"lineNumber":54,"author":{"gitId":"wanjuin"},"content":"            taskList.add(new ToDo(taskD.trim()));","lastModifiedDate":"2023-02-24"},{"lineNumber":55,"author":{"gitId":"wanjuin"},"content":"            break;","lastModifiedDate":"2023-02-24"},{"lineNumber":56,"author":{"gitId":"wanjuin"},"content":"        case \"deadline\":","lastModifiedDate":"2023-02-24"},{"lineNumber":57,"author":{"gitId":"wanjuin"},"content":"            String[] deadlineTaskD \u003d taskD.split(\"/by \", 2);","lastModifiedDate":"2023-02-24"},{"lineNumber":58,"author":{"gitId":"wanjuin"},"content":"            taskList.add(new Deadline(deadlineTaskD[0].trim(), deadlineTaskD[1].trim()));","lastModifiedDate":"2023-02-24"},{"lineNumber":59,"author":{"gitId":"wanjuin"},"content":"            break;","lastModifiedDate":"2023-02-24"},{"lineNumber":60,"author":{"gitId":"wanjuin"},"content":"        case \"event\":","lastModifiedDate":"2023-02-24"},{"lineNumber":61,"author":{"gitId":"wanjuin"},"content":"            String[] eventName \u003d taskD.split(\"/from \", 2);","lastModifiedDate":"2023-02-24"},{"lineNumber":62,"author":{"gitId":"wanjuin"},"content":"            String[] eventDate \u003d eventName[1].split(\"/to \", 2);","lastModifiedDate":"2023-02-24"},{"lineNumber":63,"author":{"gitId":"wanjuin"},"content":"            taskList.add(new Event(eventName[0].trim(), eventDate[0].trim(), eventDate[1].trim()));","lastModifiedDate":"2023-02-24"},{"lineNumber":64,"author":{"gitId":"wanjuin"},"content":"            break;","lastModifiedDate":"2023-02-24"},{"lineNumber":65,"author":{"gitId":"wanjuin"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":66,"author":{"gitId":"wanjuin"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":67,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":68,"author":{"gitId":"wanjuin"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":69,"author":{"gitId":"wanjuin"},"content":"     * Print the task that has just been added.","lastModifiedDate":"2023-02-27"},{"lineNumber":70,"author":{"gitId":"wanjuin"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":71,"author":{"gitId":"wanjuin"},"content":"    public void printNewTask() {","lastModifiedDate":"2023-02-24"},{"lineNumber":72,"author":{"gitId":"wanjuin"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-02-24"},{"lineNumber":73,"author":{"gitId":"wanjuin"},"content":"        System.out.println(\"  \" + taskList.get(indexOfTask).toString());","lastModifiedDate":"2023-02-24"},{"lineNumber":74,"author":{"gitId":"wanjuin"},"content":"        System.out.println(\"Now you have \" + (indexOfTask + 1) + \" tasks in the list.\");","lastModifiedDate":"2023-02-24"},{"lineNumber":75,"author":{"gitId":"wanjuin"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":76,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":77,"author":{"gitId":"wanjuin"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":78,"author":{"gitId":"wanjuin"},"content":"     * Delete the task according to the task number input by user, decreasing the size of the task list.","lastModifiedDate":"2023-02-27"},{"lineNumber":79,"author":{"gitId":"wanjuin"},"content":"     *","lastModifiedDate":"2023-02-27"},{"lineNumber":80,"author":{"gitId":"wanjuin"},"content":"     * @param taskNumber represents the task of that index that the user wants to remove.","lastModifiedDate":"2023-02-27"},{"lineNumber":81,"author":{"gitId":"wanjuin"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":82,"author":{"gitId":"wanjuin"},"content":"    public void deleteTask(int taskNumber) {","lastModifiedDate":"2023-02-27"},{"lineNumber":83,"author":{"gitId":"wanjuin"},"content":"        printDeletedTask(taskNumber);","lastModifiedDate":"2023-02-24"},{"lineNumber":84,"author":{"gitId":"wanjuin"},"content":"        taskList.remove(taskNumber - 1);","lastModifiedDate":"2023-02-24"},{"lineNumber":85,"author":{"gitId":"wanjuin"},"content":"        indexOfTask--;","lastModifiedDate":"2023-02-24"},{"lineNumber":86,"author":{"gitId":"wanjuin"},"content":"        //IndexOutOfBoundsException","lastModifiedDate":"2023-02-24"},{"lineNumber":87,"author":{"gitId":"wanjuin"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":88,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":89,"author":{"gitId":"wanjuin"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":90,"author":{"gitId":"wanjuin"},"content":"     * Print the task that has just been deleted according to the task number.","lastModifiedDate":"2023-02-27"},{"lineNumber":91,"author":{"gitId":"wanjuin"},"content":"     *","lastModifiedDate":"2023-02-27"},{"lineNumber":92,"author":{"gitId":"wanjuin"},"content":"     * @param taskNumber represents the task of that index that has been deleted.","lastModifiedDate":"2023-02-27"},{"lineNumber":93,"author":{"gitId":"wanjuin"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":94,"author":{"gitId":"wanjuin"},"content":"    public void printDeletedTask(int taskNumber) {","lastModifiedDate":"2023-02-24"},{"lineNumber":95,"author":{"gitId":"wanjuin"},"content":"        String deleteString \u003d taskList.get(taskNumber - 1).toString();","lastModifiedDate":"2023-02-24"},{"lineNumber":96,"author":{"gitId":"wanjuin"},"content":"        System.out.println(\"Noted! I\u0027ve deleted this task:\");","lastModifiedDate":"2023-02-24"},{"lineNumber":97,"author":{"gitId":"wanjuin"},"content":"        System.out.println(deleteString);","lastModifiedDate":"2023-02-24"},{"lineNumber":98,"author":{"gitId":"wanjuin"},"content":"        System.out.println(\"Now you have \" + (indexOfTask - 1) + \" tasks in the list.\");","lastModifiedDate":"2023-02-24"},{"lineNumber":99,"author":{"gitId":"wanjuin"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":100,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":101,"author":{"gitId":"wanjuin"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":102,"author":{"gitId":"wanjuin"},"content":"     * Mark and Unmark the task that is indicated by the task number (index of the task).","lastModifiedDate":"2023-02-27"},{"lineNumber":103,"author":{"gitId":"wanjuin"},"content":"     *","lastModifiedDate":"2023-02-27"},{"lineNumber":104,"author":{"gitId":"wanjuin"},"content":"     * @param marker represents the task command (mark or unmark).","lastModifiedDate":"2023-02-27"},{"lineNumber":105,"author":{"gitId":"wanjuin"},"content":"     * @param taskNumber represents the task number to be marked / unmarked.","lastModifiedDate":"2023-02-27"},{"lineNumber":106,"author":{"gitId":"wanjuin"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":107,"author":{"gitId":"wanjuin"},"content":"    public void markTask(String marker, int taskNumber) {","lastModifiedDate":"2023-02-27"},{"lineNumber":108,"author":{"gitId":"wanjuin"},"content":"        if (marker.equals(\"mark\")) {","lastModifiedDate":"2023-02-24"},{"lineNumber":109,"author":{"gitId":"wanjuin"},"content":"            taskList.get(taskNumber - 1).setDone(true);","lastModifiedDate":"2023-02-24"},{"lineNumber":110,"author":{"gitId":"wanjuin"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done: \");","lastModifiedDate":"2023-02-24"},{"lineNumber":111,"author":{"gitId":"wanjuin"},"content":"            System.out.println(taskList.get(taskNumber - 1).toString());","lastModifiedDate":"2023-02-24"},{"lineNumber":112,"author":{"gitId":"wanjuin"},"content":"        } else {","lastModifiedDate":"2023-02-24"},{"lineNumber":113,"author":{"gitId":"wanjuin"},"content":"            taskList.get(taskNumber - 1).setDone(false);","lastModifiedDate":"2023-02-24"},{"lineNumber":114,"author":{"gitId":"wanjuin"},"content":"            System.out.println(\"Ok! I\u0027ve marked this task as not done yet: \");","lastModifiedDate":"2023-02-24"},{"lineNumber":115,"author":{"gitId":"wanjuin"},"content":"            System.out.println(taskList.get(taskNumber - 1).toString());","lastModifiedDate":"2023-02-24"},{"lineNumber":116,"author":{"gitId":"wanjuin"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":117,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":118,"author":{"gitId":"wanjuin"},"content":"        //Null Pointer Exception (taskNumber \u003e indexOfTask)","lastModifiedDate":"2023-02-24"},{"lineNumber":119,"author":{"gitId":"wanjuin"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":120,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":121,"author":{"gitId":"wanjuin"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":122,"author":{"gitId":"wanjuin"},"content":"     * Find the task according to the keyword provided by user,","lastModifiedDate":"2023-02-27"},{"lineNumber":123,"author":{"gitId":"wanjuin"},"content":"     * and print the list of matching tasks.","lastModifiedDate":"2023-02-27"},{"lineNumber":124,"author":{"gitId":"wanjuin"},"content":"     *","lastModifiedDate":"2023-02-27"},{"lineNumber":125,"author":{"gitId":"wanjuin"},"content":"     * @param keyword user input","lastModifiedDate":"2023-02-27"},{"lineNumber":126,"author":{"gitId":"wanjuin"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":127,"author":{"gitId":"wanjuin"},"content":"    public void findTask(String keyword){","lastModifiedDate":"2023-02-24"},{"lineNumber":128,"author":{"gitId":"wanjuin"},"content":"        boolean is_empty \u003d false;","lastModifiedDate":"2023-02-27"},{"lineNumber":129,"author":{"gitId":"wanjuin"},"content":"        System.out.println(\"Here are the matching tasks in your list: \\n\");","lastModifiedDate":"2023-02-27"},{"lineNumber":130,"author":{"gitId":"wanjuin"},"content":"        for (int i \u003d 0; i \u003c indexOfTask; ++i) {","lastModifiedDate":"2023-02-24"},{"lineNumber":131,"author":{"gitId":"wanjuin"},"content":"            if (taskList.get(i).getDescription().contains(keyword)){","lastModifiedDate":"2023-02-24"},{"lineNumber":132,"author":{"gitId":"wanjuin"},"content":"                System.out.println((i + 1) + \". \" + taskList.get(i).toString());","lastModifiedDate":"2023-02-24"},{"lineNumber":133,"author":{"gitId":"wanjuin"},"content":"                is_empty \u003d true;","lastModifiedDate":"2023-02-27"},{"lineNumber":134,"author":{"gitId":"wanjuin"},"content":"            }","lastModifiedDate":"2023-02-27"},{"lineNumber":135,"author":{"gitId":"wanjuin"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":136,"author":{"gitId":"wanjuin"},"content":"        if(is_empty \u003d\u003d false){","lastModifiedDate":"2023-02-27"},{"lineNumber":137,"author":{"gitId":"wanjuin"},"content":"            System.out.println(\"There is no matching tasks in your list :(\");","lastModifiedDate":"2023-02-27"},{"lineNumber":138,"author":{"gitId":"wanjuin"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":139,"author":{"gitId":"wanjuin"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":140,"author":{"gitId":"wanjuin"},"content":"}","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"wanjuin":140}},{"path":"src/main/java/siri/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wanjuin"},"content":"package siri.task;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"wanjuin"},"content":"/**","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"wanjuin"},"content":" * Represents a Todo task in the task list.","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"wanjuin"},"content":" */","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"wanjuin"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"wanjuin"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"wanjuin"},"content":"     * Create an Todo task with its task description.","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"wanjuin"},"content":"     * @param description","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"wanjuin"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"wanjuin"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"wanjuin"},"content":"        super(description);","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"wanjuin"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"wanjuin"},"content":"    @Override","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"wanjuin"},"content":"    public String toString() {","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"wanjuin"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"wanjuin"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"wanjuin"},"content":"    @Override","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"wanjuin"},"content":"    public String toFileString(){","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"wanjuin"},"content":"        return \"T | \" + super.toFileString();","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"wanjuin"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"wanjuin"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"wanjuin":25}}]
