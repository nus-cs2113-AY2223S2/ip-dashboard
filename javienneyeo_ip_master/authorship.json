[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"javienneyeo"},"content":"# duke.Duke project template","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"javienneyeo"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"javienneyeo":2,"-":22}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"javienneyeo"},"content":"package duke;","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"javienneyeo"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"javienneyeo"},"content":"import duke.exceptions.EmptyDescriptionException;","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"javienneyeo"},"content":"import duke.exceptions.TaskToMarkDoesNotExistException;","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"javienneyeo"},"content":"import duke.exceptions.UnknownCommandException;","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"javienneyeo"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"javienneyeo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"javienneyeo"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"javienneyeo"},"content":" * Main class of Duke that contains code for Duke to function","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"javienneyeo"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"javienneyeo"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"javienneyeo"},"content":"        Ui.printGreet();","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"javienneyeo"},"content":"        ArrayList\u003cTask\u003e tasks \u003d TaskList.tasks;","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"javienneyeo"},"content":"        try {","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"javienneyeo"},"content":"            tasks \u003d Storage.getData();","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"javienneyeo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"javienneyeo"},"content":"            System.out.println(\"Error obtaining data from file\");","lastModifiedDate":"2023-02-27"},{"lineNumber":24,"author":{"gitId":"javienneyeo"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":25,"author":{"gitId":"javienneyeo"},"content":"        try {","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"javienneyeo"},"content":"            TaskList.editList();","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"javienneyeo"},"content":"        } catch (UnknownCommandException e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"javienneyeo"},"content":"            e.printErrorMessage();","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"javienneyeo"},"content":"        } catch (EmptyDescriptionException e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"javienneyeo"},"content":"            e.printErrorMessage();","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"javienneyeo"},"content":"        } catch (TaskToMarkDoesNotExistException e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"javienneyeo"},"content":"            e.printErrorMessage();","lastModifiedDate":"2023-02-15"},{"lineNumber":33,"author":{"gitId":"javienneyeo"},"content":"            Ui.printNumberOfTasks(tasks);","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"javienneyeo"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":35,"author":{"gitId":"javienneyeo"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"javienneyeo":34,"-":2}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"javienneyeo"},"content":"package duke;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"javienneyeo"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"javienneyeo"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"javienneyeo"},"content":" * Deals with loading tasks from the file and saving tasks in the file","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"javienneyeo"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"javienneyeo"},"content":"public class Parser {","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"javienneyeo"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"javienneyeo"},"content":"     * Takes in the user input and split the sentence into 2 parts by the \" \"","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"javienneyeo"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"javienneyeo"},"content":"     * @param input line that user has inputted","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"javienneyeo"},"content":"     * @return an array of Strings that contains the command at index 0 and the description of the task at index 1","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"javienneyeo"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"javienneyeo"},"content":"    public static String[] parse(Scanner input) {","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"javienneyeo"},"content":"        String text \u003d input.nextLine(); // input the whole sentence into text","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"javienneyeo"},"content":"        return text.split(\" \", 2);","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"javienneyeo"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"javienneyeo"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"javienneyeo":20}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"javienneyeo"},"content":"package duke;","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"javienneyeo"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"javienneyeo"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"javienneyeo"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"javienneyeo"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"javienneyeo"},"content":"import java.io.File;","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"javienneyeo"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"javienneyeo"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"javienneyeo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"javienneyeo"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"javienneyeo"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"javienneyeo"},"content":" * Deals with loading tasks from the file and saving tasks in the file","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"javienneyeo"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"javienneyeo"},"content":"public class Storage {","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"javienneyeo"},"content":"    private static final String filepath \u003d \"./data/duke.txt\";","lastModifiedDate":"2023-02-27"},{"lineNumber":19,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"javienneyeo"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"javienneyeo"},"content":"     * Identify the type of task in the file, split the line into the","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"javienneyeo"},"content":"     * correct variables of description, status and start, end date and return","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"javienneyeo"},"content":"     * the Task with the required information","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"javienneyeo"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"javienneyeo"},"content":"     * @param description name of task","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"javienneyeo"},"content":"     * @return taskToAdd the Task identified to be put into the ArrayList of Tasks","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"javienneyeo"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"javienneyeo"},"content":"    public static Task addTask(String description) {","lastModifiedDate":"2023-02-27"},{"lineNumber":29,"author":{"gitId":"javienneyeo"},"content":"        String[] taskDescription;","lastModifiedDate":"2023-02-27"},{"lineNumber":30,"author":{"gitId":"javienneyeo"},"content":"        taskDescription \u003d description.split(\"|\", 3);","lastModifiedDate":"2023-02-27"},{"lineNumber":31,"author":{"gitId":"javienneyeo"},"content":"        Task taskToAdd;","lastModifiedDate":"2023-02-27"},{"lineNumber":32,"author":{"gitId":"javienneyeo"},"content":"        switch (taskDescription[0]) {","lastModifiedDate":"2023-02-27"},{"lineNumber":33,"author":{"gitId":"javienneyeo"},"content":"        case \"T\":","lastModifiedDate":"2023-02-27"},{"lineNumber":34,"author":{"gitId":"javienneyeo"},"content":"            taskToAdd \u003d new Todo(taskDescription[2]);","lastModifiedDate":"2023-02-27"},{"lineNumber":35,"author":{"gitId":"javienneyeo"},"content":"            if (taskDescription[1].equals(\"1\")) {","lastModifiedDate":"2023-02-27"},{"lineNumber":36,"author":{"gitId":"javienneyeo"},"content":"                taskToAdd.setDone();","lastModifiedDate":"2023-02-27"},{"lineNumber":37,"author":{"gitId":"javienneyeo"},"content":"            } else {","lastModifiedDate":"2023-02-27"},{"lineNumber":38,"author":{"gitId":"javienneyeo"},"content":"                taskToAdd.setUndone();","lastModifiedDate":"2023-02-27"},{"lineNumber":39,"author":{"gitId":"javienneyeo"},"content":"            }","lastModifiedDate":"2023-02-27"},{"lineNumber":40,"author":{"gitId":"javienneyeo"},"content":"            break;","lastModifiedDate":"2023-02-27"},{"lineNumber":41,"author":{"gitId":"javienneyeo"},"content":"        case \"D\":","lastModifiedDate":"2023-02-27"},{"lineNumber":42,"author":{"gitId":"javienneyeo"},"content":"            String[] deadlineDescription \u003d taskDescription[2].split(\"|\", 2);","lastModifiedDate":"2023-02-27"},{"lineNumber":43,"author":{"gitId":"javienneyeo"},"content":"            taskToAdd \u003d new Deadline(deadlineDescription[0], deadlineDescription[1]);","lastModifiedDate":"2023-02-27"},{"lineNumber":44,"author":{"gitId":"javienneyeo"},"content":"            if (taskDescription[1].equals(\"1\")) {","lastModifiedDate":"2023-02-27"},{"lineNumber":45,"author":{"gitId":"javienneyeo"},"content":"                taskToAdd.setDone();","lastModifiedDate":"2023-02-27"},{"lineNumber":46,"author":{"gitId":"javienneyeo"},"content":"            } else {","lastModifiedDate":"2023-02-27"},{"lineNumber":47,"author":{"gitId":"javienneyeo"},"content":"                taskToAdd.setUndone();","lastModifiedDate":"2023-02-27"},{"lineNumber":48,"author":{"gitId":"javienneyeo"},"content":"            }","lastModifiedDate":"2023-02-27"},{"lineNumber":49,"author":{"gitId":"javienneyeo"},"content":"            break;","lastModifiedDate":"2023-02-27"},{"lineNumber":50,"author":{"gitId":"javienneyeo"},"content":"        case \"E\":","lastModifiedDate":"2023-02-27"},{"lineNumber":51,"author":{"gitId":"javienneyeo"},"content":"            String[] eventDescription \u003d taskDescription[2].split(\"|\", 2);","lastModifiedDate":"2023-02-27"},{"lineNumber":52,"author":{"gitId":"javienneyeo"},"content":"            String dates[] \u003d eventDescription[1].split(\"-\");","lastModifiedDate":"2023-02-27"},{"lineNumber":53,"author":{"gitId":"javienneyeo"},"content":"            String start \u003d dates[0];","lastModifiedDate":"2023-02-27"},{"lineNumber":54,"author":{"gitId":"javienneyeo"},"content":"            String end \u003d dates[1];","lastModifiedDate":"2023-02-27"},{"lineNumber":55,"author":{"gitId":"javienneyeo"},"content":"            taskToAdd \u003d new Event(eventDescription[0], start, end);","lastModifiedDate":"2023-02-27"},{"lineNumber":56,"author":{"gitId":"javienneyeo"},"content":"            if (taskDescription[1].equals(\"1\")) {","lastModifiedDate":"2023-02-27"},{"lineNumber":57,"author":{"gitId":"javienneyeo"},"content":"                taskToAdd.setDone();","lastModifiedDate":"2023-02-27"},{"lineNumber":58,"author":{"gitId":"javienneyeo"},"content":"            } else {","lastModifiedDate":"2023-02-27"},{"lineNumber":59,"author":{"gitId":"javienneyeo"},"content":"                taskToAdd.setUndone();","lastModifiedDate":"2023-02-27"},{"lineNumber":60,"author":{"gitId":"javienneyeo"},"content":"            }","lastModifiedDate":"2023-02-27"},{"lineNumber":61,"author":{"gitId":"javienneyeo"},"content":"            break;","lastModifiedDate":"2023-02-27"},{"lineNumber":62,"author":{"gitId":"javienneyeo"},"content":"        default:","lastModifiedDate":"2023-02-27"},{"lineNumber":63,"author":{"gitId":"javienneyeo"},"content":"            taskToAdd \u003d null;","lastModifiedDate":"2023-02-27"},{"lineNumber":64,"author":{"gitId":"javienneyeo"},"content":"            break;","lastModifiedDate":"2023-02-27"},{"lineNumber":65,"author":{"gitId":"javienneyeo"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":66,"author":{"gitId":"javienneyeo"},"content":"        return taskToAdd;","lastModifiedDate":"2023-02-27"},{"lineNumber":67,"author":{"gitId":"javienneyeo"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":68,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":69,"author":{"gitId":"javienneyeo"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"javienneyeo"},"content":"     * Read a file from the filepath and creates a new file if a current file does not exist","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"javienneyeo"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"javienneyeo"},"content":"     * @return an array of Tasks that stores the tasks in the file","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"javienneyeo"},"content":"     * @throws IOException when file does not exist","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"javienneyeo"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"javienneyeo"},"content":"    public static ArrayList\u003cTask\u003e getData() throws IOException {","lastModifiedDate":"2023-02-27"},{"lineNumber":76,"author":{"gitId":"javienneyeo"},"content":"        ArrayList\u003cTask\u003e currentList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-27"},{"lineNumber":77,"author":{"gitId":"javienneyeo"},"content":"        File f \u003d new File(filepath);","lastModifiedDate":"2023-02-27"},{"lineNumber":78,"author":{"gitId":"javienneyeo"},"content":"        if (!f.getParentFile().exists()) {","lastModifiedDate":"2023-02-27"},{"lineNumber":79,"author":{"gitId":"javienneyeo"},"content":"            f.getParentFile().mkdir();","lastModifiedDate":"2023-02-27"},{"lineNumber":80,"author":{"gitId":"javienneyeo"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":81,"author":{"gitId":"javienneyeo"},"content":"        if (f.exists()) {","lastModifiedDate":"2023-02-27"},{"lineNumber":82,"author":{"gitId":"javienneyeo"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2023-02-27"},{"lineNumber":83,"author":{"gitId":"javienneyeo"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2023-02-27"},{"lineNumber":84,"author":{"gitId":"javienneyeo"},"content":"                String description \u003d s.nextLine();","lastModifiedDate":"2023-02-27"},{"lineNumber":85,"author":{"gitId":"javienneyeo"},"content":"                currentList.add(addTask(description));","lastModifiedDate":"2023-02-27"},{"lineNumber":86,"author":{"gitId":"javienneyeo"},"content":"            }","lastModifiedDate":"2023-02-27"},{"lineNumber":87,"author":{"gitId":"javienneyeo"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":88,"author":{"gitId":"javienneyeo"},"content":"        return currentList;","lastModifiedDate":"2023-02-27"},{"lineNumber":89,"author":{"gitId":"javienneyeo"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":90,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":91,"author":{"gitId":"javienneyeo"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":92,"author":{"gitId":"javienneyeo"},"content":"     * Identifies whether the task is done or undone","lastModifiedDate":"2023-03-03"},{"lineNumber":93,"author":{"gitId":"javienneyeo"},"content":"     * If the task is done, return \"1\" but if the task is not done, return \"0\"","lastModifiedDate":"2023-03-03"},{"lineNumber":94,"author":{"gitId":"javienneyeo"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":95,"author":{"gitId":"javienneyeo"},"content":"     * @param task the task that we are currently interested in","lastModifiedDate":"2023-03-03"},{"lineNumber":96,"author":{"gitId":"javienneyeo"},"content":"     * @return a string of either a \"0\" or \"1\"","lastModifiedDate":"2023-03-03"},{"lineNumber":97,"author":{"gitId":"javienneyeo"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":98,"author":{"gitId":"javienneyeo"},"content":"    public static String getNumberIcon(Task task) {","lastModifiedDate":"2023-02-27"},{"lineNumber":99,"author":{"gitId":"javienneyeo"},"content":"        if (task.getStatusIcon().equals(\"X\")) {","lastModifiedDate":"2023-02-27"},{"lineNumber":100,"author":{"gitId":"javienneyeo"},"content":"            return \"1\";","lastModifiedDate":"2023-02-27"},{"lineNumber":101,"author":{"gitId":"javienneyeo"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":102,"author":{"gitId":"javienneyeo"},"content":"        return \"0\";","lastModifiedDate":"2023-02-27"},{"lineNumber":103,"author":{"gitId":"javienneyeo"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":104,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":105,"author":{"gitId":"javienneyeo"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":106,"author":{"gitId":"javienneyeo"},"content":"     * Convert the information of the task into the correct format that will be stored in the file","lastModifiedDate":"2023-03-03"},{"lineNumber":107,"author":{"gitId":"javienneyeo"},"content":"     * The format tells us the type of task, the status of it and the name of the task, split with \"|\"","lastModifiedDate":"2023-03-03"},{"lineNumber":108,"author":{"gitId":"javienneyeo"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":109,"author":{"gitId":"javienneyeo"},"content":"     * @param tasks the array of tasks","lastModifiedDate":"2023-03-03"},{"lineNumber":110,"author":{"gitId":"javienneyeo"},"content":"     * @return a String of the Task in the correct format","lastModifiedDate":"2023-03-03"},{"lineNumber":111,"author":{"gitId":"javienneyeo"},"content":"     * @throws IOException when file does not exist","lastModifiedDate":"2023-03-03"},{"lineNumber":112,"author":{"gitId":"javienneyeo"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":113,"author":{"gitId":"javienneyeo"},"content":"    public static String formatTask(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2023-02-27"},{"lineNumber":114,"author":{"gitId":"javienneyeo"},"content":"        String text \u003d null;","lastModifiedDate":"2023-02-27"},{"lineNumber":115,"author":{"gitId":"javienneyeo"},"content":"        for (Task i : tasks) {","lastModifiedDate":"2023-02-27"},{"lineNumber":116,"author":{"gitId":"javienneyeo"},"content":"            if (i.getType().equals(\"todo\")) {","lastModifiedDate":"2023-02-27"},{"lineNumber":117,"author":{"gitId":"javienneyeo"},"content":"                text \u003d \"T\" + \" | \" + getNumberIcon(i) + \" | \" + i.getDescription();","lastModifiedDate":"2023-02-27"},{"lineNumber":118,"author":{"gitId":"javienneyeo"},"content":"            }","lastModifiedDate":"2023-02-27"},{"lineNumber":119,"author":{"gitId":"javienneyeo"},"content":"            if (i.getType().equals(\"deadline\")) {","lastModifiedDate":"2023-02-27"},{"lineNumber":120,"author":{"gitId":"javienneyeo"},"content":"                text \u003d \"D\" + \" | \" + getNumberIcon(i) + \" | \" + i.getDescription() + \" | \" + i.getEnd();","lastModifiedDate":"2023-02-27"},{"lineNumber":121,"author":{"gitId":"javienneyeo"},"content":"            }","lastModifiedDate":"2023-02-27"},{"lineNumber":122,"author":{"gitId":"javienneyeo"},"content":"            if (i.getType().equals(\"event\")) {","lastModifiedDate":"2023-02-27"},{"lineNumber":123,"author":{"gitId":"javienneyeo"},"content":"                text \u003d \"E\" + \" | \" + getNumberIcon(i) + \" | \" + i.getDescription() + \" | \" + i.getStart() + \"-\" + i.getEnd();","lastModifiedDate":"2023-02-27"},{"lineNumber":124,"author":{"gitId":"javienneyeo"},"content":"            }","lastModifiedDate":"2023-02-27"},{"lineNumber":125,"author":{"gitId":"javienneyeo"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":126,"author":{"gitId":"javienneyeo"},"content":"        return text;","lastModifiedDate":"2023-02-27"},{"lineNumber":127,"author":{"gitId":"javienneyeo"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":128,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":129,"author":{"gitId":"javienneyeo"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":130,"author":{"gitId":"javienneyeo"},"content":"     * Write to the file specified by the filepath when there are changes made to the list of tasks","lastModifiedDate":"2023-03-03"},{"lineNumber":131,"author":{"gitId":"javienneyeo"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":132,"author":{"gitId":"javienneyeo"},"content":"     * @param tasks an array of tasks that will be added to the file","lastModifiedDate":"2023-03-03"},{"lineNumber":133,"author":{"gitId":"javienneyeo"},"content":"     * @throws IOException when file does not exist","lastModifiedDate":"2023-03-03"},{"lineNumber":134,"author":{"gitId":"javienneyeo"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":135,"author":{"gitId":"javienneyeo"},"content":"    public static void updateFile(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2023-02-27"},{"lineNumber":136,"author":{"gitId":"javienneyeo"},"content":"        FileWriter fw \u003d new FileWriter(filepath);","lastModifiedDate":"2023-02-27"},{"lineNumber":137,"author":{"gitId":"javienneyeo"},"content":"        String textToAdd \u003d formatTask(tasks);","lastModifiedDate":"2023-02-27"},{"lineNumber":138,"author":{"gitId":"javienneyeo"},"content":"        fw.write(textToAdd);","lastModifiedDate":"2023-02-27"},{"lineNumber":139,"author":{"gitId":"javienneyeo"},"content":"        fw.close();","lastModifiedDate":"2023-02-27"},{"lineNumber":140,"author":{"gitId":"javienneyeo"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":141,"author":{"gitId":"javienneyeo"},"content":"}","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"javienneyeo":141}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"javienneyeo"},"content":"package duke;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"javienneyeo"},"content":"import duke.exceptions.EmptyDescriptionException;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"javienneyeo"},"content":"import duke.exceptions.TaskToMarkDoesNotExistException;","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"javienneyeo"},"content":"import duke.exceptions.UnknownCommandException;","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"javienneyeo"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"javienneyeo"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"javienneyeo"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"javienneyeo"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"javienneyeo"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"javienneyeo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"javienneyeo"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"javienneyeo"},"content":" * Contains the task list","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"javienneyeo"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"javienneyeo"},"content":"public class TaskList {","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"javienneyeo"},"content":"    protected static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"javienneyeo"},"content":"    private static final String ADDED_COMMAND \u003d \"Got it. I\u0027ve added this task:\";","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"javienneyeo"},"content":"    private static final String REMOVED_COMMAND \u003d \"Noted. I\u0027ve removed this task:\";","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"javienneyeo"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"javienneyeo"},"content":"     * Prints out all the tasks in the list in the correct format","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"javienneyeo"},"content":"     * Prints out \"You currently don\u0027t have any tasks in your list\" when list is empty","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"javienneyeo"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"javienneyeo"},"content":"    public static void displayList() {","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"javienneyeo"},"content":"        if (tasks.size() \u003e 0) {","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"javienneyeo"},"content":"            System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"javienneyeo"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i +\u003d 1) {","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"javienneyeo"},"content":"                System.out.print(i + 1 + \". \");","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"javienneyeo"},"content":"                tasks.get(i).printTask();","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"javienneyeo"},"content":"            }","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"javienneyeo"},"content":"        } else {","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"javienneyeo"},"content":"            System.out.println(\"You currently don\u0027t have any tasks in your list\");","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"javienneyeo"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"javienneyeo"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"javienneyeo"},"content":"    private static void markTask(String task) {","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"javienneyeo"},"content":"        tasks.get(Integer.parseInt(task) - 1).setDone();","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"javienneyeo"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"javienneyeo"},"content":"        TaskList.displayList();","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"javienneyeo"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"javienneyeo"},"content":"    private static void unmarkTask(String task) {","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"javienneyeo"},"content":"        tasks.get(Integer.parseInt(task) - 1).setUndone();","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"javienneyeo"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"javienneyeo"},"content":"        TaskList.displayList();","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"javienneyeo"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"javienneyeo"},"content":"    private static void createTodo(String task) {","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"javienneyeo"},"content":"        Task todoToAdd \u003d new Todo(task);","lastModifiedDate":"2023-02-28"},{"lineNumber":52,"author":{"gitId":"javienneyeo"},"content":"        tasks.add(todoToAdd);","lastModifiedDate":"2023-02-28"},{"lineNumber":53,"author":{"gitId":"javienneyeo"},"content":"        System.out.println(ADDED_COMMAND);","lastModifiedDate":"2023-02-28"},{"lineNumber":54,"author":{"gitId":"javienneyeo"},"content":"        tasks.get(tasks.size() - 1).printTask();","lastModifiedDate":"2023-02-28"},{"lineNumber":55,"author":{"gitId":"javienneyeo"},"content":"        Ui.printNumberOfTasks(tasks);","lastModifiedDate":"2023-02-28"},{"lineNumber":56,"author":{"gitId":"javienneyeo"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":57,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":58,"author":{"gitId":"javienneyeo"},"content":"    private static void createEvent(String task) {","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"javienneyeo"},"content":"        String[] input \u003d task.split(\"/from\");","lastModifiedDate":"2023-02-28"},{"lineNumber":60,"author":{"gitId":"javienneyeo"},"content":"        String description \u003d input[0];","lastModifiedDate":"2023-02-28"},{"lineNumber":61,"author":{"gitId":"javienneyeo"},"content":"        String[] period \u003d input[1].split(\"/to\");","lastModifiedDate":"2023-02-28"},{"lineNumber":62,"author":{"gitId":"javienneyeo"},"content":"        String start \u003d period[0];","lastModifiedDate":"2023-02-28"},{"lineNumber":63,"author":{"gitId":"javienneyeo"},"content":"        String end \u003d period[1];","lastModifiedDate":"2023-02-28"},{"lineNumber":64,"author":{"gitId":"javienneyeo"},"content":"        Task eventToAdd \u003d new Event(description, start, end);","lastModifiedDate":"2023-02-28"},{"lineNumber":65,"author":{"gitId":"javienneyeo"},"content":"        tasks.add(eventToAdd);","lastModifiedDate":"2023-02-28"},{"lineNumber":66,"author":{"gitId":"javienneyeo"},"content":"        System.out.println(ADDED_COMMAND);","lastModifiedDate":"2023-02-28"},{"lineNumber":67,"author":{"gitId":"javienneyeo"},"content":"        tasks.get(tasks.size() - 1).printTask();","lastModifiedDate":"2023-02-28"},{"lineNumber":68,"author":{"gitId":"javienneyeo"},"content":"        Ui.printNumberOfTasks(tasks);","lastModifiedDate":"2023-02-28"},{"lineNumber":69,"author":{"gitId":"javienneyeo"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":70,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":71,"author":{"gitId":"javienneyeo"},"content":"    private static void createDeadline(String task) {","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"javienneyeo"},"content":"        String[] words \u003d task.split(\"/by\");","lastModifiedDate":"2023-02-28"},{"lineNumber":73,"author":{"gitId":"javienneyeo"},"content":"        String description \u003d words[0];","lastModifiedDate":"2023-02-28"},{"lineNumber":74,"author":{"gitId":"javienneyeo"},"content":"        String end \u003d words[1];","lastModifiedDate":"2023-02-28"},{"lineNumber":75,"author":{"gitId":"javienneyeo"},"content":"        Task deadlineToAdd \u003d new Deadline(description, end);","lastModifiedDate":"2023-02-28"},{"lineNumber":76,"author":{"gitId":"javienneyeo"},"content":"        tasks.add(deadlineToAdd);","lastModifiedDate":"2023-02-28"},{"lineNumber":77,"author":{"gitId":"javienneyeo"},"content":"        System.out.println(ADDED_COMMAND);","lastModifiedDate":"2023-02-28"},{"lineNumber":78,"author":{"gitId":"javienneyeo"},"content":"        tasks.get(tasks.size() - 1).printTask();","lastModifiedDate":"2023-02-28"},{"lineNumber":79,"author":{"gitId":"javienneyeo"},"content":"        Ui.printNumberOfTasks(tasks);","lastModifiedDate":"2023-02-28"},{"lineNumber":80,"author":{"gitId":"javienneyeo"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":81,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":82,"author":{"gitId":"javienneyeo"},"content":"    private static void deleteTask(String task) {","lastModifiedDate":"2023-03-03"},{"lineNumber":83,"author":{"gitId":"javienneyeo"},"content":"        Task taskToDelete \u003d tasks.get(Integer.parseInt(task) - 1);","lastModifiedDate":"2023-02-28"},{"lineNumber":84,"author":{"gitId":"javienneyeo"},"content":"        tasks.remove(Integer.parseInt(task) - 1);","lastModifiedDate":"2023-02-28"},{"lineNumber":85,"author":{"gitId":"javienneyeo"},"content":"        System.out.println(REMOVED_COMMAND);","lastModifiedDate":"2023-02-28"},{"lineNumber":86,"author":{"gitId":"javienneyeo"},"content":"        taskToDelete.printTask();","lastModifiedDate":"2023-02-28"},{"lineNumber":87,"author":{"gitId":"javienneyeo"},"content":"        Ui.printNumberOfTasks(tasks);","lastModifiedDate":"2023-02-28"},{"lineNumber":88,"author":{"gitId":"javienneyeo"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":89,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":90,"author":{"gitId":"javienneyeo"},"content":"    private static void findTask(String task) {","lastModifiedDate":"2023-03-03"},{"lineNumber":91,"author":{"gitId":"javienneyeo"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-02-28"},{"lineNumber":92,"author":{"gitId":"javienneyeo"},"content":"        int matchingTasksCount \u003d 0;","lastModifiedDate":"2023-02-28"},{"lineNumber":93,"author":{"gitId":"javienneyeo"},"content":"        for (Task i : tasks) {","lastModifiedDate":"2023-02-28"},{"lineNumber":94,"author":{"gitId":"javienneyeo"},"content":"            if (i.getDescription().contains(task)) {","lastModifiedDate":"2023-02-28"},{"lineNumber":95,"author":{"gitId":"javienneyeo"},"content":"                matchingTasksCount++;","lastModifiedDate":"2023-02-28"},{"lineNumber":96,"author":{"gitId":"javienneyeo"},"content":"                System.out.print(matchingTasksCount + \". \");","lastModifiedDate":"2023-02-28"},{"lineNumber":97,"author":{"gitId":"javienneyeo"},"content":"                i.printTask();","lastModifiedDate":"2023-02-28"},{"lineNumber":98,"author":{"gitId":"javienneyeo"},"content":"            }","lastModifiedDate":"2023-02-28"},{"lineNumber":99,"author":{"gitId":"javienneyeo"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":100,"author":{"gitId":"javienneyeo"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":101,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":102,"author":{"gitId":"javienneyeo"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":103,"author":{"gitId":"javienneyeo"},"content":"     * Identify the command user has inputted and edit the list of tasks accordingly","lastModifiedDate":"2023-03-03"},{"lineNumber":104,"author":{"gitId":"javienneyeo"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":105,"author":{"gitId":"javienneyeo"},"content":"     * @throws UnknownCommandException when user inputs an invalid command","lastModifiedDate":"2023-03-03"},{"lineNumber":106,"author":{"gitId":"javienneyeo"},"content":"     * @throws EmptyDescriptionException when user does not include the description of the task","lastModifiedDate":"2023-03-03"},{"lineNumber":107,"author":{"gitId":"javienneyeo"},"content":"     * @throws TaskToMarkDoesNotExistException when user enters a task that does not exist","lastModifiedDate":"2023-03-03"},{"lineNumber":108,"author":{"gitId":"javienneyeo"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":109,"author":{"gitId":"javienneyeo"},"content":"    public static void editList() throws UnknownCommandException, EmptyDescriptionException, TaskToMarkDoesNotExistException {","lastModifiedDate":"2023-02-28"},{"lineNumber":110,"author":{"gitId":"javienneyeo"},"content":"        String[] splitText \u003d Ui.getInput();","lastModifiedDate":"2023-02-28"},{"lineNumber":111,"author":{"gitId":"javienneyeo"},"content":"        while (!splitText[0].equals(\"bye\")) {","lastModifiedDate":"2023-02-28"},{"lineNumber":112,"author":{"gitId":"javienneyeo"},"content":"            switch (splitText[0]) {","lastModifiedDate":"2023-02-28"},{"lineNumber":113,"author":{"gitId":"javienneyeo"},"content":"            case \"mark\":","lastModifiedDate":"2023-02-28"},{"lineNumber":114,"author":{"gitId":"javienneyeo"},"content":"                try {","lastModifiedDate":"2023-02-28"},{"lineNumber":115,"author":{"gitId":"javienneyeo"},"content":"                    TaskList.markTask(splitText[1]);","lastModifiedDate":"2023-02-28"},{"lineNumber":116,"author":{"gitId":"javienneyeo"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-28"},{"lineNumber":117,"author":{"gitId":"javienneyeo"},"content":"                    throw new EmptyDescriptionException(\"marked\");","lastModifiedDate":"2023-02-28"},{"lineNumber":118,"author":{"gitId":"javienneyeo"},"content":"                } catch (NullPointerException e) {","lastModifiedDate":"2023-02-28"},{"lineNumber":119,"author":{"gitId":"javienneyeo"},"content":"                    throw new TaskToMarkDoesNotExistException(\"mark\");","lastModifiedDate":"2023-02-28"},{"lineNumber":120,"author":{"gitId":"javienneyeo"},"content":"                }","lastModifiedDate":"2023-02-28"},{"lineNumber":121,"author":{"gitId":"javienneyeo"},"content":"                break;","lastModifiedDate":"2023-02-28"},{"lineNumber":122,"author":{"gitId":"javienneyeo"},"content":"            case \"unmark\":","lastModifiedDate":"2023-02-28"},{"lineNumber":123,"author":{"gitId":"javienneyeo"},"content":"                try {","lastModifiedDate":"2023-02-28"},{"lineNumber":124,"author":{"gitId":"javienneyeo"},"content":"                    TaskList.unmarkTask(splitText[1]);","lastModifiedDate":"2023-02-28"},{"lineNumber":125,"author":{"gitId":"javienneyeo"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-28"},{"lineNumber":126,"author":{"gitId":"javienneyeo"},"content":"                    throw new EmptyDescriptionException(\"unmarked\");","lastModifiedDate":"2023-02-28"},{"lineNumber":127,"author":{"gitId":"javienneyeo"},"content":"                } catch (NullPointerException e) {","lastModifiedDate":"2023-02-28"},{"lineNumber":128,"author":{"gitId":"javienneyeo"},"content":"                    throw new TaskToMarkDoesNotExistException(\"unmark\");","lastModifiedDate":"2023-02-28"},{"lineNumber":129,"author":{"gitId":"javienneyeo"},"content":"                }","lastModifiedDate":"2023-02-28"},{"lineNumber":130,"author":{"gitId":"javienneyeo"},"content":"                break;","lastModifiedDate":"2023-02-28"},{"lineNumber":131,"author":{"gitId":"javienneyeo"},"content":"            case \"list\":","lastModifiedDate":"2023-02-28"},{"lineNumber":132,"author":{"gitId":"javienneyeo"},"content":"                TaskList.displayList();","lastModifiedDate":"2023-02-28"},{"lineNumber":133,"author":{"gitId":"javienneyeo"},"content":"                break;","lastModifiedDate":"2023-02-28"},{"lineNumber":134,"author":{"gitId":"javienneyeo"},"content":"            case \"todo\":","lastModifiedDate":"2023-02-28"},{"lineNumber":135,"author":{"gitId":"javienneyeo"},"content":"                try {","lastModifiedDate":"2023-02-28"},{"lineNumber":136,"author":{"gitId":"javienneyeo"},"content":"                    TaskList.createTodo(splitText[1]);","lastModifiedDate":"2023-02-28"},{"lineNumber":137,"author":{"gitId":"javienneyeo"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-28"},{"lineNumber":138,"author":{"gitId":"javienneyeo"},"content":"                    throw new EmptyDescriptionException(\"todo\");","lastModifiedDate":"2023-02-28"},{"lineNumber":139,"author":{"gitId":"javienneyeo"},"content":"                }","lastModifiedDate":"2023-02-28"},{"lineNumber":140,"author":{"gitId":"javienneyeo"},"content":"                break;","lastModifiedDate":"2023-02-28"},{"lineNumber":141,"author":{"gitId":"javienneyeo"},"content":"            case \"deadline\":","lastModifiedDate":"2023-02-28"},{"lineNumber":142,"author":{"gitId":"javienneyeo"},"content":"                try {","lastModifiedDate":"2023-02-28"},{"lineNumber":143,"author":{"gitId":"javienneyeo"},"content":"                    TaskList.createDeadline(splitText[1]);","lastModifiedDate":"2023-02-28"},{"lineNumber":144,"author":{"gitId":"javienneyeo"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-28"},{"lineNumber":145,"author":{"gitId":"javienneyeo"},"content":"                    throw new EmptyDescriptionException(\"deadline\");","lastModifiedDate":"2023-02-28"},{"lineNumber":146,"author":{"gitId":"javienneyeo"},"content":"                }","lastModifiedDate":"2023-02-28"},{"lineNumber":147,"author":{"gitId":"javienneyeo"},"content":"                break;","lastModifiedDate":"2023-02-28"},{"lineNumber":148,"author":{"gitId":"javienneyeo"},"content":"            case \"event\":","lastModifiedDate":"2023-02-28"},{"lineNumber":149,"author":{"gitId":"javienneyeo"},"content":"                try {","lastModifiedDate":"2023-02-28"},{"lineNumber":150,"author":{"gitId":"javienneyeo"},"content":"                    TaskList.createEvent(splitText[1]);","lastModifiedDate":"2023-02-28"},{"lineNumber":151,"author":{"gitId":"javienneyeo"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-28"},{"lineNumber":152,"author":{"gitId":"javienneyeo"},"content":"                    throw new EmptyDescriptionException(\"event\");","lastModifiedDate":"2023-02-28"},{"lineNumber":153,"author":{"gitId":"javienneyeo"},"content":"                }","lastModifiedDate":"2023-02-28"},{"lineNumber":154,"author":{"gitId":"javienneyeo"},"content":"                break;","lastModifiedDate":"2023-02-28"},{"lineNumber":155,"author":{"gitId":"javienneyeo"},"content":"            case \"delete\":","lastModifiedDate":"2023-02-28"},{"lineNumber":156,"author":{"gitId":"javienneyeo"},"content":"                try {","lastModifiedDate":"2023-02-28"},{"lineNumber":157,"author":{"gitId":"javienneyeo"},"content":"                    TaskList.deleteTask(splitText[1]);","lastModifiedDate":"2023-02-28"},{"lineNumber":158,"author":{"gitId":"javienneyeo"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-28"},{"lineNumber":159,"author":{"gitId":"javienneyeo"},"content":"                    throw new EmptyDescriptionException(\"deleted\");","lastModifiedDate":"2023-02-28"},{"lineNumber":160,"author":{"gitId":"javienneyeo"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-28"},{"lineNumber":161,"author":{"gitId":"javienneyeo"},"content":"                    throw new TaskToMarkDoesNotExistException(\"delete\");","lastModifiedDate":"2023-02-28"},{"lineNumber":162,"author":{"gitId":"javienneyeo"},"content":"                }","lastModifiedDate":"2023-02-28"},{"lineNumber":163,"author":{"gitId":"javienneyeo"},"content":"                break;","lastModifiedDate":"2023-02-28"},{"lineNumber":164,"author":{"gitId":"javienneyeo"},"content":"            case \"find\":","lastModifiedDate":"2023-02-28"},{"lineNumber":165,"author":{"gitId":"javienneyeo"},"content":"                TaskList.findTask(splitText[1]);","lastModifiedDate":"2023-02-28"},{"lineNumber":166,"author":{"gitId":"javienneyeo"},"content":"                break;","lastModifiedDate":"2023-02-28"},{"lineNumber":167,"author":{"gitId":"javienneyeo"},"content":"            default:","lastModifiedDate":"2023-02-28"},{"lineNumber":168,"author":{"gitId":"javienneyeo"},"content":"                throw new UnknownCommandException();","lastModifiedDate":"2023-02-28"},{"lineNumber":169,"author":{"gitId":"javienneyeo"},"content":"            }","lastModifiedDate":"2023-02-28"},{"lineNumber":170,"author":{"gitId":"javienneyeo"},"content":"            splitText \u003d Ui.getInput();","lastModifiedDate":"2023-02-28"},{"lineNumber":171,"author":{"gitId":"javienneyeo"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":172,"author":{"gitId":"javienneyeo"},"content":"        try {","lastModifiedDate":"2023-02-28"},{"lineNumber":173,"author":{"gitId":"javienneyeo"},"content":"            Storage.updateFile(tasks);","lastModifiedDate":"2023-02-28"},{"lineNumber":174,"author":{"gitId":"javienneyeo"},"content":"        } catch (IOException e){","lastModifiedDate":"2023-02-28"},{"lineNumber":175,"author":{"gitId":"javienneyeo"},"content":"            System.out.println(\"Error updating data in file\");","lastModifiedDate":"2023-02-28"},{"lineNumber":176,"author":{"gitId":"javienneyeo"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":177,"author":{"gitId":"javienneyeo"},"content":"        Ui.printBye();","lastModifiedDate":"2023-02-28"},{"lineNumber":178,"author":{"gitId":"javienneyeo"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":179,"author":{"gitId":"javienneyeo"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"javienneyeo":179}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"javienneyeo"},"content":"package duke;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"javienneyeo"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"javienneyeo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"javienneyeo"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"javienneyeo"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"javienneyeo"},"content":" * Deals with interactions with the user","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"javienneyeo"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"javienneyeo"},"content":"public class Ui {","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"javienneyeo"},"content":"    public static void printGreet() {","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"javienneyeo"},"content":"        System.out.println(\"Hello! I\u0027m duke.\");","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"javienneyeo"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"javienneyeo"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"javienneyeo"},"content":"    public static void printBye() {","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"javienneyeo"},"content":"        System.out.println(\"Bye! Hope to see you again soon!\");","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"javienneyeo"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"javienneyeo"},"content":"    public static String[] getInput() {","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"javienneyeo"},"content":"        Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"javienneyeo"},"content":"        return Parser.parse(input);","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"javienneyeo"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"javienneyeo"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"javienneyeo"},"content":"     * Print the total number of tasks that are currently in the list","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"javienneyeo"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"javienneyeo"},"content":"     * @param tasks the array of tasks","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"javienneyeo"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"javienneyeo"},"content":"    public static void printNumberOfTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"javienneyeo"},"content":"        System.out.println(\"You currently have \" + tasks.size() + \" tasks in your list.\");","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"javienneyeo"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"javienneyeo"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"javienneyeo":34}},{"path":"src/main/java/duke/exceptions/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"javienneyeo"},"content":"package duke.exceptions;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"javienneyeo"},"content":"public class EmptyDescriptionException extends Exception {","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"javienneyeo"},"content":"    protected String typeOfTask;","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"javienneyeo"},"content":"    public EmptyDescriptionException (String typeOfTask) {","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"javienneyeo"},"content":"        this.typeOfTask \u003d typeOfTask;","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"javienneyeo"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"javienneyeo"},"content":"    public void printErrorMessage() {","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"javienneyeo"},"content":"        if (typeOfTask.equals(\"marked\") || typeOfTask.equals(\"unmarked\") || typeOfTask.equals(\"deleted\")) {","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"javienneyeo"},"content":"            System.out.println(\"OOPS!! Task to be \" + typeOfTask + \" was not specified!\");","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"javienneyeo"},"content":"        } else {","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"javienneyeo"},"content":"            System.out.println(\"OOPS!! The description of \" + typeOfTask + \" cannot be empty!\");","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"javienneyeo"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"javienneyeo"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"javienneyeo"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"javienneyeo":16}},{"path":"src/main/java/duke/exceptions/TaskToMarkDoesNotExistException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"javienneyeo"},"content":"package duke.exceptions;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"javienneyeo"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"javienneyeo"},"content":"public class TaskToMarkDoesNotExistException extends Exception {","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"javienneyeo"},"content":"    protected String command;","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"javienneyeo"},"content":"    public TaskToMarkDoesNotExistException(String command) {","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"javienneyeo"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"javienneyeo"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"javienneyeo"},"content":"    public void printErrorMessage() {","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"javienneyeo"},"content":"        System.out.println(\"You can only \" + command + \" tasks that are currently in the list!\");","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"javienneyeo"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"javienneyeo"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"javienneyeo":15}},{"path":"src/main/java/duke/exceptions/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"javienneyeo"},"content":"package duke.exceptions;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"javienneyeo"},"content":"public class UnknownCommandException extends Exception {","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"javienneyeo"},"content":"    public void printErrorMessage() {","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"javienneyeo"},"content":"        System.out.println(\"OOPS!! I\u0027m sorry but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"javienneyeo"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"javienneyeo"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"javienneyeo":7}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"javienneyeo"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"javienneyeo"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"javienneyeo"},"content":" * Represents tasks that are classified as a \u003ccode\u003eDeadline\u003c/code\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"javienneyeo"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"javienneyeo"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"javienneyeo"},"content":"    protected String type \u003d \"deadline\";","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"javienneyeo"},"content":"    protected String end;","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"javienneyeo"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"javienneyeo"},"content":"     * Creates a new object of type \u003ccode\u003eDeadline\u003c/code\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"javienneyeo"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"javienneyeo"},"content":"     * @param description name of task","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"javienneyeo"},"content":"     * @param end the date at which task has to be completed by","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"javienneyeo"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"javienneyeo"},"content":"    public Deadline(String description, String end)","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"javienneyeo"},"content":"    {","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"javienneyeo"},"content":"        super(description);","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"javienneyeo"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"javienneyeo"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"javienneyeo"},"content":"    @Override","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"javienneyeo"},"content":"    public void printTask() {","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"javienneyeo"},"content":"        System.out.println(\"[D][\" + getStatusIcon() + \"] \" + description + \"(by:\" + end + \")\");","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"javienneyeo"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"javienneyeo"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"javienneyeo":26}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"javienneyeo"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"javienneyeo"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"javienneyeo"},"content":" * Represents tasks that are classified as a \u003ccode\u003eEvent\u003c/code\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"javienneyeo"},"content":" * These are tasks that have a start and end date","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"javienneyeo"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"javienneyeo"},"content":"public class Event extends Task {","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"javienneyeo"},"content":"    protected String start;","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"javienneyeo"},"content":"    protected String end;","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"javienneyeo"},"content":"    protected String type \u003d \"event\";","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"javienneyeo"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"javienneyeo"},"content":"     * Creates an object of type \u003ccode\u003eEvent\u003c/code\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"javienneyeo"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"javienneyeo"},"content":"     * @param description name of task","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"javienneyeo"},"content":"     * @param start event\u0027s start date","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"javienneyeo"},"content":"     * @param end event\u0027s end date","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"javienneyeo"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"javienneyeo"},"content":"    public Event(String description, String start, String end) {","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"javienneyeo"},"content":"        super(description);","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"javienneyeo"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"javienneyeo"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"javienneyeo"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"javienneyeo"},"content":"    @Override","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"javienneyeo"},"content":"    public void printTask() {","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"javienneyeo"},"content":"        System.out.println(\"[E][\" + getStatusIcon() + \"] \" + description + \"(from:\" + start + \"to:\" + end + \")\");","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"javienneyeo"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"javienneyeo"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"javienneyeo":29}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"javienneyeo"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"javienneyeo"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"javienneyeo"},"content":" * Represents tasks set by user","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"javienneyeo"},"content":" * Keeps track of the task type, description, dates and status","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"javienneyeo"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"javienneyeo"},"content":"public class Task {","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"javienneyeo"},"content":"    protected String description;","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"javienneyeo"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"javienneyeo"},"content":"    protected String type;","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"javienneyeo"},"content":"    protected String start;","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"javienneyeo"},"content":"    protected String end;","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"javienneyeo"},"content":"    public String getDescription() {","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"javienneyeo"},"content":"        return description;","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"javienneyeo"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"javienneyeo"},"content":"    public String getType() {","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"javienneyeo"},"content":"        return type;","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"javienneyeo"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"javienneyeo"},"content":"    public String getStart() {","lastModifiedDate":"2023-02-27"},{"lineNumber":24,"author":{"gitId":"javienneyeo"},"content":"        return start;","lastModifiedDate":"2023-02-27"},{"lineNumber":25,"author":{"gitId":"javienneyeo"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":26,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"javienneyeo"},"content":"    public String getEnd() {","lastModifiedDate":"2023-02-27"},{"lineNumber":28,"author":{"gitId":"javienneyeo"},"content":"        return end;","lastModifiedDate":"2023-02-27"},{"lineNumber":29,"author":{"gitId":"javienneyeo"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":30,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"javienneyeo"},"content":"    public Task(String description) {","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"javienneyeo"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-04"},{"lineNumber":33,"author":{"gitId":"javienneyeo"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-02-04"},{"lineNumber":34,"author":{"gitId":"javienneyeo"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":35,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":36,"author":{"gitId":"javienneyeo"},"content":"    public void setDone() {","lastModifiedDate":"2023-02-04"},{"lineNumber":37,"author":{"gitId":"javienneyeo"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-02-04"},{"lineNumber":38,"author":{"gitId":"javienneyeo"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":39,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":40,"author":{"gitId":"javienneyeo"},"content":"    public void setUndone() {","lastModifiedDate":"2023-02-04"},{"lineNumber":41,"author":{"gitId":"javienneyeo"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-02-04"},{"lineNumber":42,"author":{"gitId":"javienneyeo"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":43,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":44,"author":{"gitId":"javienneyeo"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"javienneyeo"},"content":"     * Checks whether the task is done and returns the correct icon to represent the status of the task","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"javienneyeo"},"content":"     * @return \u0027X\u0027 if the task is done and \u0027 \u0027 if task is not done","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"javienneyeo"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"javienneyeo"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-02-04"},{"lineNumber":49,"author":{"gitId":"javienneyeo"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"javienneyeo"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":51,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":52,"author":{"gitId":"javienneyeo"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"javienneyeo"},"content":"     * Prints the Task in the correct format required in the list","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"javienneyeo"},"content":"     * The format is determined by the type of task","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"javienneyeo"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"javienneyeo"},"content":"    public void printTask() {","lastModifiedDate":"2023-02-08"},{"lineNumber":57,"author":{"gitId":"javienneyeo"},"content":"        System.out.println(\"task\");","lastModifiedDate":"2023-02-08"},{"lineNumber":58,"author":{"gitId":"javienneyeo"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":59,"author":{"gitId":"javienneyeo"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"javienneyeo":59}},{"path":"src/main/java/duke/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"javienneyeo"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"javienneyeo"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"javienneyeo"},"content":" * Represents tasks that are classified as a \u003ccode\u003eTodo\u003c/code\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"javienneyeo"},"content":" * These are tasks that does not have a start or end date","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"javienneyeo"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"javienneyeo"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"javienneyeo"},"content":"    protected String type \u003d \"todo\";","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"javienneyeo"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"javienneyeo"},"content":"     * Creates an object of type \u003ccode\u003eTodo\u003c/code\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"javienneyeo"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"javienneyeo"},"content":"     * @param description name of task","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"javienneyeo"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"javienneyeo"},"content":"    public Todo (String description) {","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"javienneyeo"},"content":"        super(description);","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"javienneyeo"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"javienneyeo"},"content":"    @Override","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"javienneyeo"},"content":"    public void printTask() {","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"javienneyeo"},"content":"        System.out.println(\"[T][\" + getStatusIcon() + \"] \" + description);","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"javienneyeo"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"javienneyeo"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"javienneyeo":23}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"javienneyeo"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-02-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"javienneyeo":1}}]
