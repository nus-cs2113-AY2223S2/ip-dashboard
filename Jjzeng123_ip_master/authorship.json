[{"path":"data/Mikey.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Jjzeng123"},"content":"D | 1 | testing","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"Jjzeng123":1}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"Jjzeng123"},"content":"Hey there! Thanks for making Mikey your friend! He\u0027s here to help you with anything you may need, and this guide will help you get to know dear Mikey better! Let\u0027s jump right in!","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"Jjzeng123"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"Jjzeng123"},"content":"# Table of Contents","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"Jjzeng123"},"content":"1. [Getting Started](#getting-started)","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"Jjzeng123"},"content":"2. [Features](#features)","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"Jjzeng123"},"content":"   1. [Tasks](#tasks)","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"Jjzeng123"},"content":"      1. [Todo](#todo)","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"Jjzeng123"},"content":"      2. [Deadline](#deadline)","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"Jjzeng123"},"content":"      3. [Event](#event)","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"Jjzeng123"},"content":"   2. [List](#list)","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"Jjzeng123"},"content":"   3. [Marking Tasks](#marking-tasks)","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"Jjzeng123"},"content":"      1. [Mark](#mark)","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"Jjzeng123"},"content":"      2. [Unmark](#unmark)","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"Jjzeng123"},"content":"   4. [Delete](#delete)","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"Jjzeng123"},"content":"   5. [Find](#find)","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"Jjzeng123"},"content":"   6. [Saving](#saving)","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"Jjzeng123"},"content":"3. [Command list](#command-list)","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"Jjzeng123"},"content":"4. [Conclusion](#conclusion)","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"Jjzeng123"},"content":"  ","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"Jjzeng123"},"content":"## Getting Started","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"Jjzeng123"},"content":"1. Java 11 is required for Mikey to function properly, please make sure your device has Java 11 installed. If not, you may download it [here](https://www.oracle.com/sg/java/technologies/downloads/#java11)","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"Jjzeng123"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"Jjzeng123"},"content":"2. Once you have ascertained that your device has Java 11 installed, you may download the .jar file [here](https://github.com/Jjzeng123/ip/releases/tag/A-Release). Place the file in a folder.","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"Jjzeng123"},"content":"![jar.png](images/jar.png)","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"Jjzeng123"},"content":"Click on ip.jar to automatically download the file.","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"Jjzeng123"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"Jjzeng123"},"content":"3. Open the command terminal and navigate to the folder where you downloaded ip.jar using the `cd \u003cfile path\u003e` commands as necessary.","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"Jjzeng123"},"content":"4. Ensure that the terminal is in the correct folder.","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"Jjzeng123"},"content":"5. Use the command `java -jar ip.jar` to launch Mikey.","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"Jjzeng123"},"content":"![startup.png](images/startup.png)","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"Jjzeng123"},"content":"6. When you are finished with Mikey\u0027s assistance, use the `bye` command to terminate the application. This will ensure that your data is saved properly for future access.","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":35,"author":{"gitId":"Jjzeng123"},"content":"The below sections will briefly explore some of Mikey\u0027s features. Mikey features three types of tasks: To do, Deadline, and Event. The following sections will explore each type of task as well as other features.","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"Jjzeng123"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"Jjzeng123"},"content":"### Tasks","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"Jjzeng123"},"content":"Mikey contains 3 different types of tasks for your convenience. The following sections will go into closer detail on how to use these tasks.","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"Jjzeng123"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"Jjzeng123"},"content":"#### Todo","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"Jjzeng123"},"content":"The Todo task takes a single parameter and creates a \"to do\" task that will be added to the list.","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"Jjzeng123"},"content":"Use the command `todo \u003ctask\u003e` to complete this action. For example, `todo graded essay`.","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"Jjzeng123"},"content":"![todo.png](images/todo.png)","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"Jjzeng123"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"Jjzeng123"},"content":"#### Deadline","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"Jjzeng123"},"content":"The Deadline task requires both a task description and a date/time by which it is due.","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"Jjzeng123"},"content":"Use the command `deadline \u003ctask\u003e /by \u003cdate/time\u003e` to complete this action. For example, `deadline graded quiz /by 9pm`.","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"Jjzeng123"},"content":"The `/by` portion of the command is required for Mikey to distinguish between the two portions of the command. ","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"Jjzeng123"},"content":"![deadline.png](images/deadline.png)","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":51,"author":{"gitId":"Jjzeng123"},"content":"#### Event","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"Jjzeng123"},"content":"The Event task requires a task description, a start date/time and an end date/time. ","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"Jjzeng123"},"content":"Use the command `event \u003ctask\u003e /from \u003cstart date/time\u003e /to \u003cend date/time\u003e` to complete this action. For example, `event group meeting /from 5pm /to 10pm`.","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"Jjzeng123"},"content":"The `/from` and `/to` portions of the command are required for Mikey to distinguish between the two portions of the command.","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"Jjzeng123"},"content":"![event.png](images/event.png)","lastModifiedDate":"2023-03-01"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":57,"author":{"gitId":"Jjzeng123"},"content":"### List","lastModifiedDate":"2023-03-01"},{"lineNumber":58,"author":{"gitId":"Jjzeng123"},"content":"The List command will display all your current tasks. Simply use the `list` command. This command ignores any other parameters that are erroneously entered after the `list` command.","lastModifiedDate":"2023-03-01"},{"lineNumber":59,"author":{"gitId":"Jjzeng123"},"content":"![list.png](images/list.png)","lastModifiedDate":"2023-03-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":61,"author":{"gitId":"Jjzeng123"},"content":"### Marking Tasks","lastModifiedDate":"2023-03-01"},{"lineNumber":62,"author":{"gitId":"Jjzeng123"},"content":"Mikey is able to help you mark tasks as complete or incomplete. New tasks are by default always added as incomplete. Incorrect use of this command will give an error message.","lastModifiedDate":"2023-03-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":64,"author":{"gitId":"Jjzeng123"},"content":"#### Mark tasks","lastModifiedDate":"2023-03-01"},{"lineNumber":65,"author":{"gitId":"Jjzeng123"},"content":"Upon completing a task, you may use the command `mark \u003ctask index\u003e` to mark it as complete. For example, `mark 1`.","lastModifiedDate":"2023-03-01"},{"lineNumber":66,"author":{"gitId":"Jjzeng123"},"content":"![mark.png](images/mark.png)","lastModifiedDate":"2023-03-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":68,"author":{"gitId":"Jjzeng123"},"content":"#### Unmark tasks","lastModifiedDate":"2023-03-01"},{"lineNumber":69,"author":{"gitId":"Jjzeng123"},"content":"If you wish to unmark a task, you may use the command `unmark \u003ctask index\u003e` to mark it as incomplete. For example, `unmark 1`.","lastModifiedDate":"2023-03-01"},{"lineNumber":70,"author":{"gitId":"Jjzeng123"},"content":"![unmark.png](images/unmark.png)","lastModifiedDate":"2023-03-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":72,"author":{"gitId":"Jjzeng123"},"content":"### Delete","lastModifiedDate":"2023-03-01"},{"lineNumber":73,"author":{"gitId":"Jjzeng123"},"content":"Mikey unfortunately is unable to edit tasks. Should you make a mistake, you may want to delete a task. You may use the command `delete \u003ctask index\u003e` to complete this action. For example, `delete 1`. ","lastModifiedDate":"2023-03-01"},{"lineNumber":74,"author":{"gitId":"Jjzeng123"},"content":"![delete.png](images/delete.png)","lastModifiedDate":"2023-03-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":76,"author":{"gitId":"Jjzeng123"},"content":"### Find","lastModifiedDate":"2023-03-01"},{"lineNumber":77,"author":{"gitId":"Jjzeng123"},"content":"If you wish to search the list of tasks by keyword, you may use the command `find \u003ckeyword\u003e` to complete this action. For example, `find book`.","lastModifiedDate":"2023-03-01"},{"lineNumber":78,"author":{"gitId":"Jjzeng123"},"content":"![find.png](images/find.png)","lastModifiedDate":"2023-03-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":80,"author":{"gitId":"Jjzeng123"},"content":"### Saving files","lastModifiedDate":"2023-03-01"},{"lineNumber":81,"author":{"gitId":"Jjzeng123"},"content":"When Mikey is first launched, Mikey will create a text file in the current working directory, which should be the same directory as the location of the `.jar` file that you downloaded. ","lastModifiedDate":"2023-03-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":83,"author":{"gitId":"Jjzeng123"},"content":"Upon receiving the command `bye`, Mikey will save the information in a text file (Mikey.txt). The file will display the contents on individual lines, in the order of Task type, completion status, description and time information (if any). An example is shown below:","lastModifiedDate":"2023-03-01"},{"lineNumber":84,"author":{"gitId":"Jjzeng123"},"content":"![save.png](images/save.png)","lastModifiedDate":"2023-03-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":86,"author":{"gitId":"Jjzeng123"},"content":"### Command List","lastModifiedDate":"2023-03-01"},{"lineNumber":87,"author":{"gitId":"Jjzeng123"},"content":"The table below will contain the list of commands available to you, as well as example commands for your reference.","lastModifiedDate":"2023-03-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":89,"author":{"gitId":"Jjzeng123"},"content":"| Feature | Command | Examples |","lastModifiedDate":"2023-03-01"},{"lineNumber":90,"author":{"gitId":"Jjzeng123"},"content":"| ------- | ------- | -------- |","lastModifiedDate":"2023-03-01"},{"lineNumber":91,"author":{"gitId":"Jjzeng123"},"content":"| New To Do task | `todo \u003ctask\u003e` | `todo graded quiz` |","lastModifiedDate":"2023-03-01"},{"lineNumber":92,"author":{"gitId":"Jjzeng123"},"content":"| New Deadline task | `deadline \u003ctask\u003e /by \u003cdate/time\u003e` | `deadline essay submission /by Sunday 9pm` |","lastModifiedDate":"2023-03-01"},{"lineNumber":93,"author":{"gitId":"Jjzeng123"},"content":"| New Event task | `event \u003ctask\u003e /from \u003cstart date/time\u003e /to \u003cend date/time\u003e` | `event group meeting /from 5pm /to 10pm` |","lastModifiedDate":"2023-03-01"},{"lineNumber":94,"author":{"gitId":"Jjzeng123"},"content":"| List all tasks | `list` | `list` |","lastModifiedDate":"2023-03-01"},{"lineNumber":95,"author":{"gitId":"Jjzeng123"},"content":"| Mark tasks completed | `mark \u003ctask index\u003e` | `mark 3` |","lastModifiedDate":"2023-03-01"},{"lineNumber":96,"author":{"gitId":"Jjzeng123"},"content":"| Unmark tasks | `unmark \u003ctask index\u003e` | `unmark 2` |","lastModifiedDate":"2023-03-01"},{"lineNumber":97,"author":{"gitId":"Jjzeng123"},"content":"| Delete tasks | `delete \u003ctask index\u003e` | `delete 1` |","lastModifiedDate":"2023-03-01"},{"lineNumber":98,"author":{"gitId":"Jjzeng123"},"content":"| Find by keyword | `find \u003ckeyword\u003e` | `find book` |","lastModifiedDate":"2023-03-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":100,"author":{"gitId":"Jjzeng123"},"content":"## Conclusion","lastModifiedDate":"2023-03-01"},{"lineNumber":101,"author":{"gitId":"Jjzeng123"},"content":"Thank you for using Mikey, I hope you have as much fun working with him as I did working on him! If you have any further queries or features you would like to suggest, please feel free to reach out to me at [my email](jackie.zeng@u.nus.edu)!","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"-":15,"Jjzeng123":86}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jjzeng123"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"Jjzeng123"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"Jjzeng123"},"content":"    protected String dateDue;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"Jjzeng123"},"content":"    public Deadline(String name, String dateDue) {","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"Jjzeng123"},"content":"        super(name);","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"Jjzeng123"},"content":"        this.dateDue \u003d dateDue;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"Jjzeng123"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"Jjzeng123"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"Jjzeng123"},"content":"    public String toString() {","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"Jjzeng123"},"content":"        return \"(by \" + dateDue + \")\";","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"Jjzeng123"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"Jjzeng123"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"Jjzeng123"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"Jjzeng123"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"Jjzeng123"},"content":"        return \"D\";","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"Jjzeng123"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"Jjzeng123"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"Jjzeng123":17}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jjzeng123"},"content":"public class Event extends Task {","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"Jjzeng123"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"Jjzeng123"},"content":"    protected String timeOfEvent;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"Jjzeng123"},"content":"    public Event(String name, String timeOfEvent) {","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"Jjzeng123"},"content":"        super(name);","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"Jjzeng123"},"content":"        this.timeOfEvent \u003d timeOfEvent;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"Jjzeng123"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"Jjzeng123"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"Jjzeng123"},"content":"    public String toString() {","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"Jjzeng123"},"content":"        timeOfEvent \u003d timeOfEvent.replace(\"/\", \"\");","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"Jjzeng123"},"content":"        return timeOfEvent;","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"Jjzeng123"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"Jjzeng123"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"Jjzeng123"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"Jjzeng123"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"Jjzeng123"},"content":"        return \"E\";","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"Jjzeng123"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"Jjzeng123"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"Jjzeng123":18}},{"path":"src/main/java/Mikey.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jjzeng123"},"content":"import java.io.File;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"Jjzeng123"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"Jjzeng123"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"Jjzeng123"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"Jjzeng123"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"Jjzeng123"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"Jjzeng123"},"content":"import java.util.StringJoiner;","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"Jjzeng123"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"Jjzeng123"},"content":"public class Mikey {","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"Jjzeng123"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"Jjzeng123"},"content":"    public static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"Jjzeng123"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"Jjzeng123"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"Jjzeng123"},"content":"     * Returns a new Task of the \"To Do\" type and adds it to the \"tasks\" arraylist.","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"Jjzeng123"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"Jjzeng123"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"Jjzeng123"},"content":"     * @param taskName the description of the task","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"Jjzeng123"},"content":"     * @param completion the completion status of the task","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"Jjzeng123"},"content":"     * @return a new task of the \"To Do\" type","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"Jjzeng123"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"Jjzeng123"},"content":"    public static Task newTodo(String taskName, int completion) {","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"Jjzeng123"},"content":"        Task newTask \u003d null;","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"Jjzeng123"},"content":"        newTask \u003d new Todo(taskName);","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"Jjzeng123"},"content":"        if(completion \u003d\u003d 1) {","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"Jjzeng123"},"content":"            newTask.isDone \u003d true;","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"Jjzeng123"},"content":"        } else {","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"Jjzeng123"},"content":"            newTask.isDone \u003d false;","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"Jjzeng123"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"Jjzeng123"},"content":"        tasks.add(newTask);","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"Jjzeng123"},"content":"        return newTask;","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"Jjzeng123"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"Jjzeng123"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"Jjzeng123"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"Jjzeng123"},"content":"     * Returns a new Task of the \"Deadline\" type and adds it to the \"tasks\" arraylist.","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"Jjzeng123"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"Jjzeng123"},"content":"     * @param taskName the description of the task","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"Jjzeng123"},"content":"     * @param dateDue the date the task is due","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"Jjzeng123"},"content":"     * @param completion the completion status of the task","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"Jjzeng123"},"content":"     * @return a new task of the \"Deadline\" type","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"Jjzeng123"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"Jjzeng123"},"content":"    public static Task newDeadline(String taskName, String dateDue, int completion) {","lastModifiedDate":"2023-02-16"},{"lineNumber":42,"author":{"gitId":"Jjzeng123"},"content":"        Task newTask \u003d null;","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"Jjzeng123"},"content":"        newTask \u003d new Deadline(taskName, dateDue);","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"Jjzeng123"},"content":"        if(completion \u003d\u003d 1) {","lastModifiedDate":"2023-02-16"},{"lineNumber":45,"author":{"gitId":"Jjzeng123"},"content":"            newTask.isDone \u003d true;","lastModifiedDate":"2023-02-16"},{"lineNumber":46,"author":{"gitId":"Jjzeng123"},"content":"        } else {","lastModifiedDate":"2023-02-16"},{"lineNumber":47,"author":{"gitId":"Jjzeng123"},"content":"            newTask.isDone \u003d false;","lastModifiedDate":"2023-02-16"},{"lineNumber":48,"author":{"gitId":"Jjzeng123"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":49,"author":{"gitId":"Jjzeng123"},"content":"        tasks.add(newTask);","lastModifiedDate":"2023-02-02"},{"lineNumber":50,"author":{"gitId":"Jjzeng123"},"content":"        return newTask;","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"Jjzeng123"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"Jjzeng123"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":53,"author":{"gitId":"Jjzeng123"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"Jjzeng123"},"content":"     * Returns a new task of the \"Event\" type and adds it to the \"tasks\" arraylist","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"Jjzeng123"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":56,"author":{"gitId":"Jjzeng123"},"content":"     * @param taskName the description of the task","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"Jjzeng123"},"content":"     * @param timeOfEvent the start and end times of the task","lastModifiedDate":"2023-03-01"},{"lineNumber":58,"author":{"gitId":"Jjzeng123"},"content":"     * @param completion the completion status of the task","lastModifiedDate":"2023-03-01"},{"lineNumber":59,"author":{"gitId":"Jjzeng123"},"content":"     * @return a new task of the \"Event\" type","lastModifiedDate":"2023-03-01"},{"lineNumber":60,"author":{"gitId":"Jjzeng123"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":61,"author":{"gitId":"Jjzeng123"},"content":"    public static Task newEvent(String taskName, String timeOfEvent, int completion) {","lastModifiedDate":"2023-02-16"},{"lineNumber":62,"author":{"gitId":"Jjzeng123"},"content":"        Task newTask \u003d null;","lastModifiedDate":"2023-02-02"},{"lineNumber":63,"author":{"gitId":"Jjzeng123"},"content":"        newTask \u003d new Event(taskName, timeOfEvent);","lastModifiedDate":"2023-02-02"},{"lineNumber":64,"author":{"gitId":"Jjzeng123"},"content":"        if(completion \u003d\u003d 1) {","lastModifiedDate":"2023-02-16"},{"lineNumber":65,"author":{"gitId":"Jjzeng123"},"content":"            newTask.isDone \u003d true;","lastModifiedDate":"2023-02-16"},{"lineNumber":66,"author":{"gitId":"Jjzeng123"},"content":"        } else {","lastModifiedDate":"2023-02-16"},{"lineNumber":67,"author":{"gitId":"Jjzeng123"},"content":"            newTask.isDone \u003d false;","lastModifiedDate":"2023-02-16"},{"lineNumber":68,"author":{"gitId":"Jjzeng123"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":69,"author":{"gitId":"Jjzeng123"},"content":"        tasks.add(newTask);","lastModifiedDate":"2023-02-02"},{"lineNumber":70,"author":{"gitId":"Jjzeng123"},"content":"        return newTask;","lastModifiedDate":"2023-02-02"},{"lineNumber":71,"author":{"gitId":"Jjzeng123"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":72,"author":{"gitId":"Jjzeng123"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":73,"author":{"gitId":"Jjzeng123"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":74,"author":{"gitId":"Jjzeng123"},"content":"     * Prints out a formatted version of the task with its type, completion status, description and date (if any)","lastModifiedDate":"2023-03-01"},{"lineNumber":75,"author":{"gitId":"Jjzeng123"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":76,"author":{"gitId":"Jjzeng123"},"content":"     * @param taskNumber the number of the task in the list","lastModifiedDate":"2023-03-01"},{"lineNumber":77,"author":{"gitId":"Jjzeng123"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":78,"author":{"gitId":"Jjzeng123"},"content":"    public static void printTask(int taskNumber) {","lastModifiedDate":"2023-02-14"},{"lineNumber":79,"author":{"gitId":"Jjzeng123"},"content":"        System.out.println(\"[\" + tasks.get(taskNumber).getTaskType() + \"]\" + \"[\"","lastModifiedDate":"2023-02-14"},{"lineNumber":80,"author":{"gitId":"Jjzeng123"},"content":"                + tasks.get(taskNumber).getStatusIcon() + \"] \" +  tasks.get(taskNumber).getName() + \" \"","lastModifiedDate":"2023-02-16"},{"lineNumber":81,"author":{"gitId":"Jjzeng123"},"content":"                    + tasks.get(taskNumber).getDate());","lastModifiedDate":"2023-02-16"},{"lineNumber":82,"author":{"gitId":"Jjzeng123"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":83,"author":{"gitId":"Jjzeng123"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":84,"author":{"gitId":"Jjzeng123"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":85,"author":{"gitId":"Jjzeng123"},"content":"     * Prints out a series of messages confirming to the user that their task has been added","lastModifiedDate":"2023-03-01"},{"lineNumber":86,"author":{"gitId":"Jjzeng123"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":87,"author":{"gitId":"Jjzeng123"},"content":"    public static void addTaskMessage() {","lastModifiedDate":"2023-02-02"},{"lineNumber":88,"author":{"gitId":"Jjzeng123"},"content":"        System.out.println(\"Now yous got \" + tasks.size() + \" thing(s) ta do in ya list\");","lastModifiedDate":"2023-02-02"},{"lineNumber":89,"author":{"gitId":"Jjzeng123"},"content":"        System.out.println(\"Anythin else ya need me ta help ya with?\");","lastModifiedDate":"2023-02-02"},{"lineNumber":90,"author":{"gitId":"Jjzeng123"},"content":"        System.out.println();","lastModifiedDate":"2023-01-27"},{"lineNumber":91,"author":{"gitId":"Jjzeng123"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":92,"author":{"gitId":"Jjzeng123"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":93,"author":{"gitId":"Jjzeng123"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":94,"author":{"gitId":"Jjzeng123"},"content":"     * Deletes a task from the \"tasks\" arraylist","lastModifiedDate":"2023-03-01"},{"lineNumber":95,"author":{"gitId":"Jjzeng123"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":96,"author":{"gitId":"Jjzeng123"},"content":"     * @param taskNumber the number of the task in the list","lastModifiedDate":"2023-03-01"},{"lineNumber":97,"author":{"gitId":"Jjzeng123"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":98,"author":{"gitId":"Jjzeng123"},"content":"    public static void deleteTask(int taskNumber) {","lastModifiedDate":"2023-02-14"},{"lineNumber":99,"author":{"gitId":"Jjzeng123"},"content":"        System.out.println(\"I\u0027ve gotcha mate, removed [\" + tasks.get(taskNumber).getTaskType() + \"]\" + \"[\"","lastModifiedDate":"2023-02-14"},{"lineNumber":100,"author":{"gitId":"Jjzeng123"},"content":"            + tasks.get(taskNumber).getStatusIcon() + \"]\" + tasks.get(taskNumber).getName() + \" \"","lastModifiedDate":"2023-02-14"},{"lineNumber":101,"author":{"gitId":"Jjzeng123"},"content":"                + tasks.get(taskNumber).getDate());","lastModifiedDate":"2023-02-14"},{"lineNumber":102,"author":{"gitId":"Jjzeng123"},"content":"        tasks.remove(taskNumber);","lastModifiedDate":"2023-02-14"},{"lineNumber":103,"author":{"gitId":"Jjzeng123"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":104,"author":{"gitId":"Jjzeng123"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":105,"author":{"gitId":"Jjzeng123"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":106,"author":{"gitId":"Jjzeng123"},"content":"     * Saves the data in the \"tasks\" arraylist to a text file in a certain format, and throws an IO exception","lastModifiedDate":"2023-03-01"},{"lineNumber":107,"author":{"gitId":"Jjzeng123"},"content":"     * if the save fails, then creates the file manually and tries again.","lastModifiedDate":"2023-03-01"},{"lineNumber":108,"author":{"gitId":"Jjzeng123"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":109,"author":{"gitId":"Jjzeng123"},"content":"     * @throws java.io.IOException if the home directory and file cannot be found","lastModifiedDate":"2023-03-01"},{"lineNumber":110,"author":{"gitId":"Jjzeng123"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":111,"author":{"gitId":"Jjzeng123"},"content":"    public static void saveToFile() throws java.io.IOException {","lastModifiedDate":"2023-02-14"},{"lineNumber":112,"author":{"gitId":"Jjzeng123"},"content":"        StringJoiner taskFormatter \u003d new StringJoiner(System.lineSeparator());","lastModifiedDate":"2023-02-14"},{"lineNumber":113,"author":{"gitId":"Jjzeng123"},"content":"        for (Task t: tasks) {","lastModifiedDate":"2023-02-14"},{"lineNumber":114,"author":{"gitId":"Jjzeng123"},"content":"            taskFormatter.add(t.taskStringFormat());","lastModifiedDate":"2023-02-14"},{"lineNumber":115,"author":{"gitId":"Jjzeng123"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":116,"author":{"gitId":"Jjzeng123"},"content":"        while (true) {","lastModifiedDate":"2023-02-14"},{"lineNumber":117,"author":{"gitId":"Jjzeng123"},"content":"            try {","lastModifiedDate":"2023-02-14"},{"lineNumber":118,"author":{"gitId":"Jjzeng123"},"content":"                FileWriter listWrite \u003d new FileWriter(\"./data/Mikey.txt\");","lastModifiedDate":"2023-02-14"},{"lineNumber":119,"author":{"gitId":"Jjzeng123"},"content":"                listWrite.write(taskFormatter.toString());","lastModifiedDate":"2023-02-14"},{"lineNumber":120,"author":{"gitId":"Jjzeng123"},"content":"                listWrite.close();","lastModifiedDate":"2023-02-14"},{"lineNumber":121,"author":{"gitId":"Jjzeng123"},"content":"                break;","lastModifiedDate":"2023-02-14"},{"lineNumber":122,"author":{"gitId":"Jjzeng123"},"content":"            } catch (FileNotFoundException e) {","lastModifiedDate":"2023-02-14"},{"lineNumber":123,"author":{"gitId":"Jjzeng123"},"content":"                fileNotFound(taskFormatter.toString());","lastModifiedDate":"2023-02-14"},{"lineNumber":124,"author":{"gitId":"Jjzeng123"},"content":"            }","lastModifiedDate":"2023-02-14"},{"lineNumber":125,"author":{"gitId":"Jjzeng123"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":126,"author":{"gitId":"Jjzeng123"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":127,"author":{"gitId":"Jjzeng123"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":128,"author":{"gitId":"Jjzeng123"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":129,"author":{"gitId":"Jjzeng123"},"content":"     * Reads data from a text file and converts it into data to create new tasks to add to the \"tasks\" arraylist,","lastModifiedDate":"2023-03-01"},{"lineNumber":130,"author":{"gitId":"Jjzeng123"},"content":"     * throws an exception if the file is not found and creates the file","lastModifiedDate":"2023-03-01"},{"lineNumber":131,"author":{"gitId":"Jjzeng123"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":132,"author":{"gitId":"Jjzeng123"},"content":"     * @throws java.io.IOException if the home directory and the file cannot be found","lastModifiedDate":"2023-03-01"},{"lineNumber":133,"author":{"gitId":"Jjzeng123"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":134,"author":{"gitId":"Jjzeng123"},"content":"    public static void readFromFile() throws java.io.IOException{","lastModifiedDate":"2023-02-16"},{"lineNumber":135,"author":{"gitId":"Jjzeng123"},"content":"        try {","lastModifiedDate":"2023-02-16"},{"lineNumber":136,"author":{"gitId":"Jjzeng123"},"content":"            File readingFile \u003d new File(\"./data/Mikey.txt\");","lastModifiedDate":"2023-02-16"},{"lineNumber":137,"author":{"gitId":"Jjzeng123"},"content":"            Scanner fileScan \u003d new Scanner(readingFile);","lastModifiedDate":"2023-02-16"},{"lineNumber":138,"author":{"gitId":"Jjzeng123"},"content":"            while(fileScan.hasNextLine()) {","lastModifiedDate":"2023-02-16"},{"lineNumber":139,"author":{"gitId":"Jjzeng123"},"content":"                String taskLine \u003d fileScan.nextLine();","lastModifiedDate":"2023-02-16"},{"lineNumber":140,"author":{"gitId":"Jjzeng123"},"content":"                String[] taskDetails \u003d taskLine.split(\" \\\\|\\\\ \", 0);","lastModifiedDate":"2023-03-01"},{"lineNumber":141,"author":{"gitId":"Jjzeng123"},"content":"                String taskType \u003d taskDetails[0];","lastModifiedDate":"2023-02-16"},{"lineNumber":142,"author":{"gitId":"Jjzeng123"},"content":"                String taskCompletion \u003d taskDetails[1];","lastModifiedDate":"2023-03-01"},{"lineNumber":143,"author":{"gitId":"Jjzeng123"},"content":"                String taskDescription \u003d taskDetails[2];","lastModifiedDate":"2023-03-01"},{"lineNumber":144,"author":{"gitId":"Jjzeng123"},"content":"                if(taskType.equalsIgnoreCase(\"T\")) {","lastModifiedDate":"2023-02-16"},{"lineNumber":145,"author":{"gitId":"Jjzeng123"},"content":"                    try {","lastModifiedDate":"2023-02-16"},{"lineNumber":146,"author":{"gitId":"Jjzeng123"},"content":"                        newTodo(taskDescription, Integer.parseInt(taskCompletion));","lastModifiedDate":"2023-02-16"},{"lineNumber":147,"author":{"gitId":"Jjzeng123"},"content":"                    } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-16"},{"lineNumber":148,"author":{"gitId":"Jjzeng123"},"content":"                        System.out.println(\"Oi mate, I can\u0027t create an empty task yea?\");","lastModifiedDate":"2023-02-16"},{"lineNumber":149,"author":{"gitId":"Jjzeng123"},"content":"                        System.out.println();","lastModifiedDate":"2023-02-16"},{"lineNumber":150,"author":{"gitId":"Jjzeng123"},"content":"                    }","lastModifiedDate":"2023-02-16"},{"lineNumber":151,"author":{"gitId":"Jjzeng123"},"content":"                } else if (taskType.equalsIgnoreCase(\"D\")) {","lastModifiedDate":"2023-02-16"},{"lineNumber":152,"author":{"gitId":"Jjzeng123"},"content":"                    try {","lastModifiedDate":"2023-02-16"},{"lineNumber":153,"author":{"gitId":"Jjzeng123"},"content":"                        String[] taskDateTemp \u003d taskDetails[3].split(\"\\\\(by \", 0);","lastModifiedDate":"2023-03-01"},{"lineNumber":154,"author":{"gitId":"Jjzeng123"},"content":"                        String taskDate \u003d taskDateTemp[1].substring(0);","lastModifiedDate":"2023-03-01"},{"lineNumber":155,"author":{"gitId":"Jjzeng123"},"content":"                        taskDate \u003d taskDate.replace(\")\", \"\");","lastModifiedDate":"2023-02-16"},{"lineNumber":156,"author":{"gitId":"Jjzeng123"},"content":"                        newDeadline(taskDescription, taskDate, Integer.parseInt(taskCompletion));","lastModifiedDate":"2023-02-16"},{"lineNumber":157,"author":{"gitId":"Jjzeng123"},"content":"                    } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-16"},{"lineNumber":158,"author":{"gitId":"Jjzeng123"},"content":"                        System.out.println(\"Oi mate, I can\u0027t create an empty task yea?\");","lastModifiedDate":"2023-02-16"},{"lineNumber":159,"author":{"gitId":"Jjzeng123"},"content":"                        System.out.println();","lastModifiedDate":"2023-02-16"},{"lineNumber":160,"author":{"gitId":"Jjzeng123"},"content":"                    }","lastModifiedDate":"2023-02-16"},{"lineNumber":161,"author":{"gitId":"Jjzeng123"},"content":"                } else if (taskType.equalsIgnoreCase(\"E\")) {","lastModifiedDate":"2023-02-16"},{"lineNumber":162,"author":{"gitId":"Jjzeng123"},"content":"                    try {","lastModifiedDate":"2023-02-16"},{"lineNumber":163,"author":{"gitId":"Jjzeng123"},"content":"                        String[] taskDateTemp \u003d taskDetails[3].split(\"\\\\(\");","lastModifiedDate":"2023-03-01"},{"lineNumber":164,"author":{"gitId":"Jjzeng123"},"content":"                        String taskDate \u003d taskDateTemp[0].substring(0);","lastModifiedDate":"2023-03-01"},{"lineNumber":165,"author":{"gitId":"Jjzeng123"},"content":"                        newEvent(taskDescription, taskDate, Integer.parseInt(taskCompletion));","lastModifiedDate":"2023-02-16"},{"lineNumber":166,"author":{"gitId":"Jjzeng123"},"content":"                    } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-16"},{"lineNumber":167,"author":{"gitId":"Jjzeng123"},"content":"                        System.out.println(\"Oi mate, I can\u0027t create an empty task yea?\");","lastModifiedDate":"2023-02-16"},{"lineNumber":168,"author":{"gitId":"Jjzeng123"},"content":"                        System.out.println();","lastModifiedDate":"2023-02-16"},{"lineNumber":169,"author":{"gitId":"Jjzeng123"},"content":"                    }","lastModifiedDate":"2023-02-16"},{"lineNumber":170,"author":{"gitId":"Jjzeng123"},"content":"                }","lastModifiedDate":"2023-02-16"},{"lineNumber":171,"author":{"gitId":"Jjzeng123"},"content":"            }","lastModifiedDate":"2023-02-16"},{"lineNumber":172,"author":{"gitId":"Jjzeng123"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-02-16"},{"lineNumber":173,"author":{"gitId":"Jjzeng123"},"content":"            fileNotFound(\"\");","lastModifiedDate":"2023-02-16"},{"lineNumber":174,"author":{"gitId":"Jjzeng123"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":175,"author":{"gitId":"Jjzeng123"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":176,"author":{"gitId":"Jjzeng123"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":177,"author":{"gitId":"Jjzeng123"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":178,"author":{"gitId":"Jjzeng123"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":179,"author":{"gitId":"Jjzeng123"},"content":"     * Handler for the FileNotFoundException in the saveToFile and readFromFile methods, creates a new directory","lastModifiedDate":"2023-03-01"},{"lineNumber":180,"author":{"gitId":"Jjzeng123"},"content":"     * and text file","lastModifiedDate":"2023-03-01"},{"lineNumber":181,"author":{"gitId":"Jjzeng123"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":182,"author":{"gitId":"Jjzeng123"},"content":"     * @param taskFormatter the formatted string of details of a task to be written to the file, set to empty when a new","lastModifiedDate":"2023-03-01"},{"lineNumber":183,"author":{"gitId":"Jjzeng123"},"content":"     *                      blank file is created","lastModifiedDate":"2023-03-01"},{"lineNumber":184,"author":{"gitId":"Jjzeng123"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":185,"author":{"gitId":"Jjzeng123"},"content":"    public static void fileNotFound(String taskFormatter) {","lastModifiedDate":"2023-02-14"},{"lineNumber":186,"author":{"gitId":"Jjzeng123"},"content":"        System.out.println(\"Ooh deary me bruv, I reckon that file don\u0027t exists yet, I\u0027m gonna go ahead and make one\");","lastModifiedDate":"2023-02-16"},{"lineNumber":187,"author":{"gitId":"Jjzeng123"},"content":"        try {","lastModifiedDate":"2023-02-14"},{"lineNumber":188,"author":{"gitId":"Jjzeng123"},"content":"            File newFile \u003d new File(\"./data/Mikey.txt\");","lastModifiedDate":"2023-02-14"},{"lineNumber":189,"author":{"gitId":"Jjzeng123"},"content":"            newFile.getParentFile().mkdirs();","lastModifiedDate":"2023-02-14"},{"lineNumber":190,"author":{"gitId":"Jjzeng123"},"content":"            FileWriter listWrite \u003d new FileWriter(\"./data/Mikey.txt\");","lastModifiedDate":"2023-02-14"},{"lineNumber":191,"author":{"gitId":"Jjzeng123"},"content":"            listWrite.write(taskFormatter.toString());","lastModifiedDate":"2023-02-14"},{"lineNumber":192,"author":{"gitId":"Jjzeng123"},"content":"            listWrite.close();","lastModifiedDate":"2023-02-14"},{"lineNumber":193,"author":{"gitId":"Jjzeng123"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-14"},{"lineNumber":194,"author":{"gitId":"Jjzeng123"},"content":"            System.out.println(\"Oopsie mate, I can\u0027t create a new file\");","lastModifiedDate":"2023-02-14"},{"lineNumber":195,"author":{"gitId":"Jjzeng123"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":196,"author":{"gitId":"Jjzeng123"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":197,"author":{"gitId":"Jjzeng123"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":198,"author":{"gitId":"Jjzeng123"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":199,"author":{"gitId":"Jjzeng123"},"content":"     * Method to find a task based on a keyword in a search term and prints out a list of tasks containing that keyword","lastModifiedDate":"2023-03-01"},{"lineNumber":200,"author":{"gitId":"Jjzeng123"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":201,"author":{"gitId":"Jjzeng123"},"content":"     * @param searchTerm the keyword to search for within the list of tasks","lastModifiedDate":"2023-03-01"},{"lineNumber":202,"author":{"gitId":"Jjzeng123"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":203,"author":{"gitId":"Jjzeng123"},"content":"    public static void findTasks(String searchTerm) {","lastModifiedDate":"2023-03-01"},{"lineNumber":204,"author":{"gitId":"Jjzeng123"},"content":"        String keyword \u003d searchTerm;","lastModifiedDate":"2023-03-01"},{"lineNumber":205,"author":{"gitId":"Jjzeng123"},"content":"        System.out.println(\"Here ya go bruv, that\u0027s everythin that contains that search term:\");","lastModifiedDate":"2023-03-01"},{"lineNumber":206,"author":{"gitId":"Jjzeng123"},"content":"        int counter \u003d 0;","lastModifiedDate":"2023-03-01"},{"lineNumber":207,"author":{"gitId":"Jjzeng123"},"content":"        for(int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-03-01"},{"lineNumber":208,"author":{"gitId":"Jjzeng123"},"content":"            String temp \u003d tasks.get(i).getName();","lastModifiedDate":"2023-03-01"},{"lineNumber":209,"author":{"gitId":"Jjzeng123"},"content":"            if (temp.contains(keyword)) {","lastModifiedDate":"2023-03-01"},{"lineNumber":210,"author":{"gitId":"Jjzeng123"},"content":"                counter++;","lastModifiedDate":"2023-03-01"},{"lineNumber":211,"author":{"gitId":"Jjzeng123"},"content":"                System.out.print(counter + \". \");","lastModifiedDate":"2023-03-01"},{"lineNumber":212,"author":{"gitId":"Jjzeng123"},"content":"                printTask(i);","lastModifiedDate":"2023-03-01"},{"lineNumber":213,"author":{"gitId":"Jjzeng123"},"content":"            }","lastModifiedDate":"2023-03-01"},{"lineNumber":214,"author":{"gitId":"Jjzeng123"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":215,"author":{"gitId":"Jjzeng123"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":216,"author":{"gitId":"Jjzeng123"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":217,"author":{"gitId":"Jjzeng123"},"content":"    public static void main(String[] args) throws java.io.IOException {","lastModifiedDate":"2023-02-14"},{"lineNumber":218,"author":{"gitId":"Jjzeng123"},"content":"        System.out.println(\"Its yobbo-in time innit bruv\\n\");","lastModifiedDate":"2023-03-01"},{"lineNumber":219,"author":{"gitId":"Jjzeng123"},"content":"        System.out.println();","lastModifiedDate":"2023-01-27"},{"lineNumber":220,"author":{"gitId":"Jjzeng123"},"content":"        System.out.println(\"Ello bruv, me name\u0027s Mikey!\");","lastModifiedDate":"2023-01-27"},{"lineNumber":221,"author":{"gitId":"Jjzeng123"},"content":"        System.out.println(\"How can ah help ya bruv?\");","lastModifiedDate":"2023-01-27"},{"lineNumber":222,"author":{"gitId":"Jjzeng123"},"content":"        System.out.println();","lastModifiedDate":"2023-01-27"},{"lineNumber":223,"author":{"gitId":"Jjzeng123"},"content":"        readFromFile();","lastModifiedDate":"2023-02-16"},{"lineNumber":224,"author":{"gitId":"Jjzeng123"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":225,"author":{"gitId":"Jjzeng123"},"content":"        Scanner inputText \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-27"},{"lineNumber":226,"author":{"gitId":"Jjzeng123"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":227,"author":{"gitId":"Jjzeng123"},"content":"        while(true) {","lastModifiedDate":"2023-01-27"},{"lineNumber":228,"author":{"gitId":"Jjzeng123"},"content":"            String userInput \u003d inputText.nextLine();","lastModifiedDate":"2023-01-27"},{"lineNumber":229,"author":{"gitId":"Jjzeng123"},"content":"            String keyword \u003d null;","lastModifiedDate":"2023-02-07"},{"lineNumber":230,"author":{"gitId":"Jjzeng123"},"content":"            keyword \u003d userInput.split(\" \", 0)[0];","lastModifiedDate":"2023-02-07"},{"lineNumber":231,"author":{"gitId":"Jjzeng123"},"content":"            if (keyword.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2023-01-27"},{"lineNumber":232,"author":{"gitId":"Jjzeng123"},"content":"                System.out.println(\"Cheerio mate! I\u0027ll be seein ya soon, innit? o7\");","lastModifiedDate":"2023-01-27"},{"lineNumber":233,"author":{"gitId":"Jjzeng123"},"content":"                System.out.println();","lastModifiedDate":"2023-01-27"},{"lineNumber":234,"author":{"gitId":"Jjzeng123"},"content":"                break;","lastModifiedDate":"2023-01-27"},{"lineNumber":235,"author":{"gitId":"Jjzeng123"},"content":"            } else if (keyword.equalsIgnoreCase(\"list\")){","lastModifiedDate":"2023-01-27"},{"lineNumber":236,"author":{"gitId":"Jjzeng123"},"content":"                System.out.println(\"Aight bruv here\u0027s ya list of stuff yous gotta do\");","lastModifiedDate":"2023-01-27"},{"lineNumber":237,"author":{"gitId":"Jjzeng123"},"content":"                for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-01-27"},{"lineNumber":238,"author":{"gitId":"Jjzeng123"},"content":"                    System.out.println(i + 1 + \". \" + \"[\" + tasks.get(i).getTaskType() + \"]\" + \"[\"","lastModifiedDate":"2023-02-02"},{"lineNumber":239,"author":{"gitId":"Jjzeng123"},"content":"                            + tasks.get(i).getStatusIcon() + \"] \" +  tasks.get(i).getName() + \" \"","lastModifiedDate":"2023-02-16"},{"lineNumber":240,"author":{"gitId":"Jjzeng123"},"content":"                                + tasks.get(i).getDate());","lastModifiedDate":"2023-02-16"},{"lineNumber":241,"author":{"gitId":"Jjzeng123"},"content":"                }","lastModifiedDate":"2023-01-27"},{"lineNumber":242,"author":{"gitId":"Jjzeng123"},"content":"                System.out.println();","lastModifiedDate":"2023-01-27"},{"lineNumber":243,"author":{"gitId":"Jjzeng123"},"content":"            } else if (keyword.equalsIgnoreCase(\"mark\")) {","lastModifiedDate":"2023-01-27"},{"lineNumber":244,"author":{"gitId":"Jjzeng123"},"content":"                try {","lastModifiedDate":"2023-02-07"},{"lineNumber":245,"author":{"gitId":"Jjzeng123"},"content":"                    int taskNumber \u003d Integer.parseInt(userInput.split(\" \")[1]) - 1;","lastModifiedDate":"2023-02-14"},{"lineNumber":246,"author":{"gitId":"Jjzeng123"},"content":"                    tasks.get(taskNumber).isDone \u003d true;","lastModifiedDate":"2023-02-14"},{"lineNumber":247,"author":{"gitId":"Jjzeng123"},"content":"                    System.out.println(\"Well done bruv, you finished this: \");","lastModifiedDate":"2023-01-27"},{"lineNumber":248,"author":{"gitId":"Jjzeng123"},"content":"                    printTask(taskNumber);","lastModifiedDate":"2023-02-14"},{"lineNumber":249,"author":{"gitId":"Jjzeng123"},"content":"                    System.out.println();","lastModifiedDate":"2023-03-01"},{"lineNumber":250,"author":{"gitId":"Jjzeng123"},"content":"                    saveToFile();","lastModifiedDate":"2023-02-14"},{"lineNumber":251,"author":{"gitId":"Jjzeng123"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-07"},{"lineNumber":252,"author":{"gitId":"Jjzeng123"},"content":"                    System.out.println(\"Bloody \u0027ell buddy, I can\u0027t mark an imaginary task now innit?\");","lastModifiedDate":"2023-02-07"},{"lineNumber":253,"author":{"gitId":"Jjzeng123"},"content":"                    System.out.println();","lastModifiedDate":"2023-02-07"},{"lineNumber":254,"author":{"gitId":"Jjzeng123"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-07"},{"lineNumber":255,"author":{"gitId":"Jjzeng123"},"content":"                    System.out.println(\"Bloody \u0027ell buddy, I can\u0027t mark an imaginary task now innit?\");","lastModifiedDate":"2023-02-07"},{"lineNumber":256,"author":{"gitId":"Jjzeng123"},"content":"                    System.out.println();","lastModifiedDate":"2023-02-07"},{"lineNumber":257,"author":{"gitId":"Jjzeng123"},"content":"                }","lastModifiedDate":"2023-02-07"},{"lineNumber":258,"author":{"gitId":"Jjzeng123"},"content":"            } else if (keyword.equalsIgnoreCase(\"unmark\")){","lastModifiedDate":"2023-01-27"},{"lineNumber":259,"author":{"gitId":"Jjzeng123"},"content":"                try {","lastModifiedDate":"2023-02-07"},{"lineNumber":260,"author":{"gitId":"Jjzeng123"},"content":"                    int taskNumber \u003d Integer.parseInt(userInput.split(\" \")[1]) - 1;","lastModifiedDate":"2023-02-14"},{"lineNumber":261,"author":{"gitId":"Jjzeng123"},"content":"                    tasks.get(taskNumber).isDone \u003d false;","lastModifiedDate":"2023-02-14"},{"lineNumber":262,"author":{"gitId":"Jjzeng123"},"content":"                    System.out.println(\"Aye good Sir/Ma\u0027am, I\u0027ve marked that uncompleted: \");","lastModifiedDate":"2023-01-27"},{"lineNumber":263,"author":{"gitId":"Jjzeng123"},"content":"                    printTask(taskNumber);","lastModifiedDate":"2023-02-14"},{"lineNumber":264,"author":{"gitId":"Jjzeng123"},"content":"                    System.out.println();","lastModifiedDate":"2023-03-01"},{"lineNumber":265,"author":{"gitId":"Jjzeng123"},"content":"                    saveToFile();","lastModifiedDate":"2023-02-14"},{"lineNumber":266,"author":{"gitId":"Jjzeng123"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-07"},{"lineNumber":267,"author":{"gitId":"Jjzeng123"},"content":"                    System.out.println(\"Bloody \u0027ell buddy, I can\u0027t unmark an imaginary task now innit?\");","lastModifiedDate":"2023-02-07"},{"lineNumber":268,"author":{"gitId":"Jjzeng123"},"content":"                    System.out.println();","lastModifiedDate":"2023-02-07"},{"lineNumber":269,"author":{"gitId":"Jjzeng123"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-07"},{"lineNumber":270,"author":{"gitId":"Jjzeng123"},"content":"                    System.out.println(\"Bloody \u0027ell buddy, I can\u0027t unmark an imaginary task now innit?\");","lastModifiedDate":"2023-02-07"},{"lineNumber":271,"author":{"gitId":"Jjzeng123"},"content":"                    System.out.println();","lastModifiedDate":"2023-02-07"},{"lineNumber":272,"author":{"gitId":"Jjzeng123"},"content":"                }","lastModifiedDate":"2023-02-07"},{"lineNumber":273,"author":{"gitId":"Jjzeng123"},"content":"            } else if (keyword.equalsIgnoreCase(\"todo\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":274,"author":{"gitId":"Jjzeng123"},"content":"                int start \u003d 0;","lastModifiedDate":"2023-02-07"},{"lineNumber":275,"author":{"gitId":"Jjzeng123"},"content":"                try {","lastModifiedDate":"2023-02-07"},{"lineNumber":276,"author":{"gitId":"Jjzeng123"},"content":"                    start \u003d userInput.indexOf(keyword) + 5;","lastModifiedDate":"2023-02-07"},{"lineNumber":277,"author":{"gitId":"Jjzeng123"},"content":"                    String taskName \u003d userInput.substring(start);","lastModifiedDate":"2023-02-02"},{"lineNumber":278,"author":{"gitId":"Jjzeng123"},"content":"                    System.out.println(\"Gotcha mate, added this task to your list: \");","lastModifiedDate":"2023-02-02"},{"lineNumber":279,"author":{"gitId":"Jjzeng123"},"content":"                    newTodo(taskName, 0);","lastModifiedDate":"2023-02-16"},{"lineNumber":280,"author":{"gitId":"Jjzeng123"},"content":"                    printTask((tasks.size() - 1));","lastModifiedDate":"2023-02-02"},{"lineNumber":281,"author":{"gitId":"Jjzeng123"},"content":"                    System.out.println();","lastModifiedDate":"2023-03-01"},{"lineNumber":282,"author":{"gitId":"Jjzeng123"},"content":"                    addTaskMessage();","lastModifiedDate":"2023-02-02"},{"lineNumber":283,"author":{"gitId":"Jjzeng123"},"content":"                    saveToFile();","lastModifiedDate":"2023-02-14"},{"lineNumber":284,"author":{"gitId":"Jjzeng123"},"content":"                } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-07"},{"lineNumber":285,"author":{"gitId":"Jjzeng123"},"content":"                    System.out.println(\"Oi mate, I can\u0027t create an empty task yea?\");","lastModifiedDate":"2023-02-07"},{"lineNumber":286,"author":{"gitId":"Jjzeng123"},"content":"                    System.out.println();","lastModifiedDate":"2023-02-07"},{"lineNumber":287,"author":{"gitId":"Jjzeng123"},"content":"                }","lastModifiedDate":"2023-02-07"},{"lineNumber":288,"author":{"gitId":"Jjzeng123"},"content":"            } else if (keyword.equalsIgnoreCase(\"deadline\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":289,"author":{"gitId":"Jjzeng123"},"content":"                int start \u003d 0;","lastModifiedDate":"2023-02-07"},{"lineNumber":290,"author":{"gitId":"Jjzeng123"},"content":"                try {","lastModifiedDate":"2023-02-07"},{"lineNumber":291,"author":{"gitId":"Jjzeng123"},"content":"                    start \u003d userInput.indexOf(keyword) + 9;","lastModifiedDate":"2023-02-07"},{"lineNumber":292,"author":{"gitId":"Jjzeng123"},"content":"                    int startOfBy \u003d userInput.indexOf(\"/by\");","lastModifiedDate":"2023-02-02"},{"lineNumber":293,"author":{"gitId":"Jjzeng123"},"content":"                    String taskName \u003d userInput.substring(start, startOfBy - 1);","lastModifiedDate":"2023-02-02"},{"lineNumber":294,"author":{"gitId":"Jjzeng123"},"content":"                    String dateTime \u003d userInput.substring(startOfBy + 4);","lastModifiedDate":"2023-02-02"},{"lineNumber":295,"author":{"gitId":"Jjzeng123"},"content":"                    newDeadline(taskName, dateTime, 0);","lastModifiedDate":"2023-02-16"},{"lineNumber":296,"author":{"gitId":"Jjzeng123"},"content":"                    System.out.println(\"Gotcha mate, added this task to your list: \");","lastModifiedDate":"2023-02-02"},{"lineNumber":297,"author":{"gitId":"Jjzeng123"},"content":"                    printTask((tasks.size() -1));","lastModifiedDate":"2023-02-02"},{"lineNumber":298,"author":{"gitId":"Jjzeng123"},"content":"                    System.out.println();","lastModifiedDate":"2023-03-01"},{"lineNumber":299,"author":{"gitId":"Jjzeng123"},"content":"                    addTaskMessage();","lastModifiedDate":"2023-02-02"},{"lineNumber":300,"author":{"gitId":"Jjzeng123"},"content":"                    saveToFile();","lastModifiedDate":"2023-02-14"},{"lineNumber":301,"author":{"gitId":"Jjzeng123"},"content":"                } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-07"},{"lineNumber":302,"author":{"gitId":"Jjzeng123"},"content":"                    System.out.println(\"Oi mate, I can\u0027t create an empty task yea?\");","lastModifiedDate":"2023-02-07"},{"lineNumber":303,"author":{"gitId":"Jjzeng123"},"content":"                    System.out.println();","lastModifiedDate":"2023-02-07"},{"lineNumber":304,"author":{"gitId":"Jjzeng123"},"content":"                }","lastModifiedDate":"2023-02-07"},{"lineNumber":305,"author":{"gitId":"Jjzeng123"},"content":"            } else if (keyword.equalsIgnoreCase(\"event\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":306,"author":{"gitId":"Jjzeng123"},"content":"                int start \u003d 0;","lastModifiedDate":"2023-02-07"},{"lineNumber":307,"author":{"gitId":"Jjzeng123"},"content":"                try {","lastModifiedDate":"2023-02-07"},{"lineNumber":308,"author":{"gitId":"Jjzeng123"},"content":"                    start \u003d userInput.indexOf(keyword) + 6;","lastModifiedDate":"2023-02-07"},{"lineNumber":309,"author":{"gitId":"Jjzeng123"},"content":"                    int startOfFrom \u003d userInput.indexOf(\"/from\");","lastModifiedDate":"2023-02-02"},{"lineNumber":310,"author":{"gitId":"Jjzeng123"},"content":"                    String taskName \u003d userInput.substring(start, startOfFrom - 1);","lastModifiedDate":"2023-02-16"},{"lineNumber":311,"author":{"gitId":"Jjzeng123"},"content":"                    String timeOfEvent \u003d userInput.substring(startOfFrom);","lastModifiedDate":"2023-02-02"},{"lineNumber":312,"author":{"gitId":"Jjzeng123"},"content":"                    timeOfEvent \u003d timeOfEvent.replace(\"from\", \"from:\");","lastModifiedDate":"2023-02-02"},{"lineNumber":313,"author":{"gitId":"Jjzeng123"},"content":"                    timeOfEvent \u003d timeOfEvent.replace(\"to\", \"to:\");","lastModifiedDate":"2023-02-02"},{"lineNumber":314,"author":{"gitId":"Jjzeng123"},"content":"                    newEvent(taskName, timeOfEvent, 0);","lastModifiedDate":"2023-02-16"},{"lineNumber":315,"author":{"gitId":"Jjzeng123"},"content":"                    System.out.println(\"Gotcha mate, added this task to your list: \");","lastModifiedDate":"2023-02-02"},{"lineNumber":316,"author":{"gitId":"Jjzeng123"},"content":"                    printTask((tasks.size() -1));","lastModifiedDate":"2023-02-02"},{"lineNumber":317,"author":{"gitId":"Jjzeng123"},"content":"                    System.out.println();","lastModifiedDate":"2023-03-01"},{"lineNumber":318,"author":{"gitId":"Jjzeng123"},"content":"                    addTaskMessage();","lastModifiedDate":"2023-02-02"},{"lineNumber":319,"author":{"gitId":"Jjzeng123"},"content":"                    saveToFile();","lastModifiedDate":"2023-02-14"},{"lineNumber":320,"author":{"gitId":"Jjzeng123"},"content":"                } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-07"},{"lineNumber":321,"author":{"gitId":"Jjzeng123"},"content":"                    System.out.println(\"Oi mate, I can\u0027t create an empty task yea?\");","lastModifiedDate":"2023-02-07"},{"lineNumber":322,"author":{"gitId":"Jjzeng123"},"content":"                    System.out.println();","lastModifiedDate":"2023-02-07"},{"lineNumber":323,"author":{"gitId":"Jjzeng123"},"content":"                }","lastModifiedDate":"2023-02-07"},{"lineNumber":324,"author":{"gitId":"Jjzeng123"},"content":"            } else if (keyword.equalsIgnoreCase(\"delete\")) {","lastModifiedDate":"2023-02-14"},{"lineNumber":325,"author":{"gitId":"Jjzeng123"},"content":"                try {","lastModifiedDate":"2023-02-14"},{"lineNumber":326,"author":{"gitId":"Jjzeng123"},"content":"                    int taskNumber \u003d Integer.parseInt(userInput.split(\" \")[1]) - 1;","lastModifiedDate":"2023-02-14"},{"lineNumber":327,"author":{"gitId":"Jjzeng123"},"content":"                    deleteTask(taskNumber);","lastModifiedDate":"2023-02-14"},{"lineNumber":328,"author":{"gitId":"Jjzeng123"},"content":"                    addTaskMessage();","lastModifiedDate":"2023-02-14"},{"lineNumber":329,"author":{"gitId":"Jjzeng123"},"content":"                    saveToFile();","lastModifiedDate":"2023-02-14"},{"lineNumber":330,"author":{"gitId":"Jjzeng123"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-14"},{"lineNumber":331,"author":{"gitId":"Jjzeng123"},"content":"                    System.out.println(\"C\u0027mon bruv, I can\u0027t deletes an imaginary task now, can I?\");","lastModifiedDate":"2023-02-14"},{"lineNumber":332,"author":{"gitId":"Jjzeng123"},"content":"                    System.out.println();","lastModifiedDate":"2023-02-14"},{"lineNumber":333,"author":{"gitId":"Jjzeng123"},"content":"                }","lastModifiedDate":"2023-02-14"},{"lineNumber":334,"author":{"gitId":"Jjzeng123"},"content":"            } else if (keyword.equalsIgnoreCase(\"find\")) {","lastModifiedDate":"2023-03-01"},{"lineNumber":335,"author":{"gitId":"Jjzeng123"},"content":"                try {","lastModifiedDate":"2023-03-01"},{"lineNumber":336,"author":{"gitId":"Jjzeng123"},"content":"                    int start \u003d userInput.indexOf(keyword) + 5;","lastModifiedDate":"2023-03-01"},{"lineNumber":337,"author":{"gitId":"Jjzeng123"},"content":"                    String searchTerm \u003d userInput.substring(start);","lastModifiedDate":"2023-03-01"},{"lineNumber":338,"author":{"gitId":"Jjzeng123"},"content":"                    findTasks(searchTerm);","lastModifiedDate":"2023-03-01"},{"lineNumber":339,"author":{"gitId":"Jjzeng123"},"content":"                } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-03-01"},{"lineNumber":340,"author":{"gitId":"Jjzeng123"},"content":"                    System.out.println(\"Sorry mate, ah can\u0027t find something that ain\u0027t there!\");","lastModifiedDate":"2023-03-01"},{"lineNumber":341,"author":{"gitId":"Jjzeng123"},"content":"                    System.out.println();","lastModifiedDate":"2023-03-01"},{"lineNumber":342,"author":{"gitId":"Jjzeng123"},"content":"                }","lastModifiedDate":"2023-03-01"},{"lineNumber":343,"author":{"gitId":"Jjzeng123"},"content":"                System.out.println();","lastModifiedDate":"2023-03-01"},{"lineNumber":344,"author":{"gitId":"Jjzeng123"},"content":"            } else {","lastModifiedDate":"2023-01-27"},{"lineNumber":345,"author":{"gitId":"Jjzeng123"},"content":"                System.out.println(\"Crikey bruv, yous \u0027avin a laugh? I don know what that means!\");","lastModifiedDate":"2023-02-07"},{"lineNumber":346,"author":{"gitId":"Jjzeng123"},"content":"                System.out.println();","lastModifiedDate":"2023-02-07"},{"lineNumber":347,"author":{"gitId":"Jjzeng123"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":348,"author":{"gitId":"Jjzeng123"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":349,"author":{"gitId":"Jjzeng123"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":350,"author":{"gitId":"Jjzeng123"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":351,"author":{"gitId":"Jjzeng123"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"Jjzeng123":351}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jjzeng123"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"Jjzeng123"},"content":" * inspiration for creating a new task class was derived from a senior\u0027s advice when consulted for help","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"Jjzeng123"},"content":" * senior consulted was Jonathan, github.com/wutdequack/ip","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"Jjzeng123"},"content":" * task class further improved with notes from course website https://nus-cs2113-ay2223s2.github.io/website/schedule/","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"Jjzeng123"},"content":" * week3/project.html","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"Jjzeng123"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"Jjzeng123"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"Jjzeng123"},"content":"public class Task {","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"Jjzeng123"},"content":"    public String name;","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"Jjzeng123"},"content":"    protected String description;","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"Jjzeng123"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"Jjzeng123"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"Jjzeng123"},"content":"    public Task(String name) {","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"Jjzeng123"},"content":"        setName(name);","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"Jjzeng123"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"Jjzeng123"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"Jjzeng123"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"Jjzeng123"},"content":"    public String getName() {","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"Jjzeng123"},"content":"        return name;","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"Jjzeng123"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"Jjzeng123"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"Jjzeng123"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"Jjzeng123"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"Jjzeng123"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"Jjzeng123"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"Jjzeng123"},"content":"    public void setName(String name) {","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"Jjzeng123"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"Jjzeng123"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"Jjzeng123"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"Jjzeng123"},"content":"    public void taskDone() {","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"Jjzeng123"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"Jjzeng123"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"Jjzeng123"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"Jjzeng123"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"Jjzeng123"},"content":"        return \" \";","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"Jjzeng123"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"Jjzeng123"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"Jjzeng123"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":39,"author":{"gitId":"Jjzeng123"},"content":"    public String getDate() {","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"Jjzeng123"},"content":"        String date \u003d null;","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"Jjzeng123"},"content":"        if (getTaskType().equalsIgnoreCase(\"T\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"Jjzeng123"},"content":"            date \u003d \" \";","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"Jjzeng123"},"content":"        }  else if (getTaskType().equalsIgnoreCase(\"D\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"Jjzeng123"},"content":"            date \u003d toString(); //change later","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"Jjzeng123"},"content":"        } else if (getTaskType().equalsIgnoreCase(\"E\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"Jjzeng123"},"content":"            date \u003d toString(); //change later","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"Jjzeng123"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":48,"author":{"gitId":"Jjzeng123"},"content":"        return date;","lastModifiedDate":"2023-02-02"},{"lineNumber":49,"author":{"gitId":"Jjzeng123"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":50,"author":{"gitId":"Jjzeng123"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":51,"author":{"gitId":"Jjzeng123"},"content":"    public int getTaskStatus() {","lastModifiedDate":"2023-02-14"},{"lineNumber":52,"author":{"gitId":"Jjzeng123"},"content":"        return (isDone ? 1 : 0);","lastModifiedDate":"2023-02-14"},{"lineNumber":53,"author":{"gitId":"Jjzeng123"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":54,"author":{"gitId":"Jjzeng123"},"content":"    public String taskStringFormat() {","lastModifiedDate":"2023-02-14"},{"lineNumber":55,"author":{"gitId":"Jjzeng123"},"content":"        return String.format(getTaskType() + \" | \" + getTaskStatus() + \" | \" + getName()) + \" | \" + getDate();","lastModifiedDate":"2023-02-16"},{"lineNumber":56,"author":{"gitId":"Jjzeng123"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":57,"author":{"gitId":"Jjzeng123"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"Jjzeng123":57}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jjzeng123"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"Jjzeng123"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"Jjzeng123"},"content":"    public Todo(String name) {","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"Jjzeng123"},"content":"        super(name);","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"Jjzeng123"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"Jjzeng123"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"Jjzeng123"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"Jjzeng123"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"Jjzeng123"},"content":"        return \"T\";","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"Jjzeng123"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"Jjzeng123"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"Jjzeng123":11}}]
