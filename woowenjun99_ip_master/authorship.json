[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"woowenjun99"},"content":"import constants.Command;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"woowenjun99"},"content":"import constants.ErrorMessage;","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"woowenjun99"},"content":"import constants.Message;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"woowenjun99"},"content":"import controller.TaskController;","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"woowenjun99"},"content":"import database.Database;","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"woowenjun99"},"content":"import validator.error.InvalidTaskError;","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"woowenjun99"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"woowenjun99"},"content":"  private static final Database db \u003d new Database();","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"woowenjun99"},"content":"  private static final TaskController controller \u003d new TaskController(db);","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"woowenjun99"},"content":"  private static boolean isRunning \u003d true;","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"woowenjun99"},"content":"  private static void terminate() {","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"woowenjun99"},"content":"    isRunning \u003d false;","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"woowenjun99"},"content":"  }","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"woowenjun99"},"content":"  private static void process(String[] words) {","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"woowenjun99"},"content":"    try {","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"woowenjun99"},"content":"      String command \u003d words[0];","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"woowenjun99"},"content":"      String taskDescription;","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"woowenjun99"},"content":"      switch (command) {","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"woowenjun99"},"content":"      case Command.LIST:","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"woowenjun99"},"content":"        controller.listTasks();","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"woowenjun99"},"content":"        break;","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"woowenjun99"},"content":"      case Command.DEADLINE:","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"woowenjun99"},"content":"        taskDescription \u003d words[1];","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"woowenjun99"},"content":"        controller.addDeadlineTask(taskDescription);","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"woowenjun99"},"content":"        break;","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"woowenjun99"},"content":"      case Command.TODO:","lastModifiedDate":"2023-02-04"},{"lineNumber":34,"author":{"gitId":"woowenjun99"},"content":"        taskDescription \u003d words[1];","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"woowenjun99"},"content":"        controller.addTodoTask(taskDescription);","lastModifiedDate":"2023-02-04"},{"lineNumber":36,"author":{"gitId":"woowenjun99"},"content":"        break;","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"woowenjun99"},"content":"      case Command.EVENT:","lastModifiedDate":"2023-02-04"},{"lineNumber":38,"author":{"gitId":"woowenjun99"},"content":"        taskDescription \u003d words[1];","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"woowenjun99"},"content":"        controller.addEventTask(taskDescription);","lastModifiedDate":"2023-02-04"},{"lineNumber":40,"author":{"gitId":"woowenjun99"},"content":"        break;","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"woowenjun99"},"content":"      case Command.MARK:","lastModifiedDate":"2023-02-04"},{"lineNumber":42,"author":{"gitId":"woowenjun99"},"content":"      case Command.UNMARK:","lastModifiedDate":"2023-02-04"},{"lineNumber":43,"author":{"gitId":"woowenjun99"},"content":"        int index \u003d Integer.parseInt(words[1]) - 1;","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"woowenjun99"},"content":"        boolean isMark \u003d words[0].equals(Command.MARK);","lastModifiedDate":"2023-02-04"},{"lineNumber":45,"author":{"gitId":"woowenjun99"},"content":"        controller.toggleMark(isMark, index);","lastModifiedDate":"2023-02-04"},{"lineNumber":46,"author":{"gitId":"woowenjun99"},"content":"        break;","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"woowenjun99"},"content":"      case Command.BYE:","lastModifiedDate":"2023-02-04"},{"lineNumber":48,"author":{"gitId":"woowenjun99"},"content":"        terminate();","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"woowenjun99"},"content":"        break;","lastModifiedDate":"2023-01-23"},{"lineNumber":50,"author":{"gitId":"woowenjun99"},"content":"      default:","lastModifiedDate":"2023-01-23"},{"lineNumber":51,"author":{"gitId":"woowenjun99"},"content":"        throw new InvalidTaskError(ErrorMessage.INVALID_COMMAND.message);","lastModifiedDate":"2023-02-04"},{"lineNumber":52,"author":{"gitId":"woowenjun99"},"content":"      }","lastModifiedDate":"2023-01-22"},{"lineNumber":53,"author":{"gitId":"woowenjun99"},"content":"    } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-04"},{"lineNumber":54,"author":{"gitId":"woowenjun99"},"content":"      System.out.println(ErrorMessage.NO_DESCRIPTION.message);","lastModifiedDate":"2023-02-04"},{"lineNumber":55,"author":{"gitId":"woowenjun99"},"content":"    } catch (InvalidTaskError e) {","lastModifiedDate":"2023-02-04"},{"lineNumber":56,"author":{"gitId":"woowenjun99"},"content":"      System.out.println(e.getDescription());","lastModifiedDate":"2023-02-04"},{"lineNumber":57,"author":{"gitId":"woowenjun99"},"content":"    } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-04"},{"lineNumber":58,"author":{"gitId":"woowenjun99"},"content":"      System.out.println(","lastModifiedDate":"2023-02-04"},{"lineNumber":59,"author":{"gitId":"woowenjun99"},"content":"              ErrorMessage.INVALID_NUMBER.message","lastModifiedDate":"2023-02-04"},{"lineNumber":60,"author":{"gitId":"woowenjun99"},"content":"      );","lastModifiedDate":"2023-02-04"},{"lineNumber":61,"author":{"gitId":"woowenjun99"},"content":"    } catch (Exception e) {","lastModifiedDate":"2023-02-04"},{"lineNumber":62,"author":{"gitId":"woowenjun99"},"content":"      System.out.printf(\"Server error %s\\n\", e.getMessage());","lastModifiedDate":"2023-02-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":64,"author":{"gitId":"woowenjun99"},"content":"  }","lastModifiedDate":"2023-02-04"},{"lineNumber":65,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":66,"author":{"gitId":"woowenjun99"},"content":"  public void run() {","lastModifiedDate":"2023-02-04"},{"lineNumber":67,"author":{"gitId":"woowenjun99"},"content":"    Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-04"},{"lineNumber":68,"author":{"gitId":"woowenjun99"},"content":"    System.out.println(Message.WELCOME.message);","lastModifiedDate":"2023-02-04"},{"lineNumber":69,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":70,"author":{"gitId":"woowenjun99"},"content":"    while (isRunning) {","lastModifiedDate":"2023-02-04"},{"lineNumber":71,"author":{"gitId":"woowenjun99"},"content":"      String line \u003d in.nextLine().trim();","lastModifiedDate":"2023-02-04"},{"lineNumber":72,"author":{"gitId":"woowenjun99"},"content":"      String[] words \u003d line.split(\" \", 2);","lastModifiedDate":"2023-02-04"},{"lineNumber":73,"author":{"gitId":"woowenjun99"},"content":"      process(words);","lastModifiedDate":"2023-02-04"},{"lineNumber":74,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":75,"author":{"gitId":"woowenjun99"},"content":"    System.out.println(Message.GOODBYE.message);","lastModifiedDate":"2023-01-27"},{"lineNumber":76,"author":{"gitId":"woowenjun99"},"content":"    in.close(); // Closed to prevent memory leak","lastModifiedDate":"2023-01-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2019-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"woowenjun99":74,"-":4}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"woowenjun99"},"content":"public class Main {","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"woowenjun99"},"content":"    private static final Duke duke \u003d new Duke();","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"woowenjun99"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"woowenjun99"},"content":"        duke.run();","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"woowenjun99"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"woowenjun99":6}},{"path":"src/main/java/constants/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"woowenjun99"},"content":"package constants;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"woowenjun99"},"content":"// Use of interface here as I am not creating any object","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"woowenjun99"},"content":"public interface Command {","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"woowenjun99"},"content":"  String DEADLINE \u003d \"deadline\";","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"woowenjun99"},"content":"  String LIST \u003d \"list\";","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"woowenjun99"},"content":"  String TODO \u003d \"todo\";","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"woowenjun99"},"content":"  String EVENT \u003d \"event\";","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"woowenjun99"},"content":"  String MARK \u003d \"mark\";","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"woowenjun99"},"content":"  String UNMARK \u003d \"unmark\";","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"woowenjun99"},"content":"  String BYE \u003d \"bye\";","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"woowenjun99"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"woowenjun99":13}},{"path":"src/main/java/constants/ErrorMessage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"woowenjun99"},"content":"package constants;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"woowenjun99"},"content":"public enum ErrorMessage {","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"woowenjun99"},"content":"    INVALID_COMMAND(\"An invalid command has been provided\"),","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"woowenjun99"},"content":"    INVALID_FORMAT(\"Ensure that your /from comes before your /to\"),","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"woowenjun99"},"content":"    INVALID_NUMBER(\"Please provide a number when marking or un-marking a task\"),","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"woowenjun99"},"content":"    NO_DESCRIPTION(\"You did not provide a task description\"),","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"woowenjun99"},"content":"    NO_BY(\"You have not provided a deadline. Ensure you have the /by keyword\"),","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"woowenjun99"},"content":"    NO_FROM(\"You did not provide a /from\"),","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"woowenjun99"},"content":"    NO_TASK(\"Please provide a task\"),","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"woowenjun99"},"content":"    NO_TO(\"You did not provide a /to\");","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"woowenjun99"},"content":"    public final String message;","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"woowenjun99"},"content":"    ErrorMessage(String message) {","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"woowenjun99"},"content":"        this.message \u003d message;","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"woowenjun99"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"woowenjun99":18}},{"path":"src/main/java/constants/Message.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"woowenjun99"},"content":"package constants;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"woowenjun99"},"content":"public enum Message {","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"woowenjun99"},"content":"    TASK_ADDED(\"Got it. I\u0027ve added this task:\"),","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"woowenjun99"},"content":"    GOODBYE(\"Bye. Hope to see you again soon!\"),","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"woowenjun99"},"content":"    LIST_NUMBER(\"Now you have %d tasks in the list.\\n\"),","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"woowenjun99"},"content":"    LIST_TASKS(\"Here are the tasks in your list:\"),","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"woowenjun99"},"content":"    MARKED(\"Nice! I\u0027ve marked this task as done:\"),","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"woowenjun99"},"content":"    UNMARKED(\"OK, I\u0027ve marked this task as not done yet:\"),","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"woowenjun99"},"content":"    WELCOME(\"Hello! I\u0027m Duke\\nWhat can I do for you?\\n\");","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"woowenjun99"},"content":"    public final String message;","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"woowenjun99"},"content":"    Message(String message) {","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"woowenjun99"},"content":"        this.message \u003d message;","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"woowenjun99"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"woowenjun99":17}},{"path":"src/main/java/controller/TaskController.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"woowenjun99"},"content":"package controller;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"woowenjun99"},"content":"import constants.Message;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"woowenjun99"},"content":"import database.Database;","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"woowenjun99"},"content":"import model.task.Deadline;","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"woowenjun99"},"content":"import model.task.Event;","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"woowenjun99"},"content":"import model.task.Task;","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"woowenjun99"},"content":"import model.task.Todo;","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"woowenjun99"},"content":"import validator.Validator;","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"woowenjun99"},"content":"import view.TaskView;","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"woowenjun99"},"content":"public class TaskController {","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"woowenjun99"},"content":"  protected TaskView view \u003d new TaskView();","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"woowenjun99"},"content":"  protected Validator validator \u003d new Validator();","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"woowenjun99"},"content":"  protected Database db;","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"woowenjun99"},"content":"  static int counter \u003d 0;","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"woowenjun99"},"content":"  // We connect our controller to the instance of the database","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"woowenjun99"},"content":"  public TaskController(Database db) {","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"woowenjun99"},"content":"    this.db \u003d db;","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"woowenjun99"},"content":"  }","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"woowenjun99"},"content":"  private void printDescription(Task model) {","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"woowenjun99"},"content":"    System.out.println(Message.TASK_ADDED.message);","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"woowenjun99"},"content":"    view.printTaskDescriptionText(model);","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"woowenjun99"},"content":"    System.out.printf(Message.LIST_NUMBER.message, counter);","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"woowenjun99"},"content":"  }","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"woowenjun99"},"content":"  /**","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"woowenjun99"},"content":"   * List out all the tasks in the database.","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"woowenjun99"},"content":"   *","lastModifiedDate":"2023-02-04"},{"lineNumber":33,"author":{"gitId":"woowenjun99"},"content":"   * @throws Exception An exception if there is an issue with","lastModifiedDate":"2023-02-04"},{"lineNumber":34,"author":{"gitId":"woowenjun99"},"content":"   *                   fetching the data from the database.","lastModifiedDate":"2023-02-04"},{"lineNumber":35,"author":{"gitId":"woowenjun99"},"content":"   */","lastModifiedDate":"2023-02-04"},{"lineNumber":36,"author":{"gitId":"woowenjun99"},"content":"  public void listTasks() throws Exception {","lastModifiedDate":"2023-02-04"},{"lineNumber":37,"author":{"gitId":"woowenjun99"},"content":"    System.out.println(Message.LIST_TASKS.message);","lastModifiedDate":"2023-02-04"},{"lineNumber":38,"author":{"gitId":"woowenjun99"},"content":"    int numberOfEntries \u003d counter;","lastModifiedDate":"2023-02-04"},{"lineNumber":39,"author":{"gitId":"woowenjun99"},"content":"    for (int i \u003d 0; i \u003c numberOfEntries; i +\u003d 1) {","lastModifiedDate":"2023-02-04"},{"lineNumber":40,"author":{"gitId":"woowenjun99"},"content":"      Task model \u003d db.read(i);","lastModifiedDate":"2023-02-04"},{"lineNumber":41,"author":{"gitId":"woowenjun99"},"content":"      System.out.printf(\"%d. \", (i + 1));","lastModifiedDate":"2023-02-04"},{"lineNumber":42,"author":{"gitId":"woowenjun99"},"content":"      view.printTaskDescriptionText(model);","lastModifiedDate":"2023-02-04"},{"lineNumber":43,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":44,"author":{"gitId":"woowenjun99"},"content":"  }","lastModifiedDate":"2023-02-04"},{"lineNumber":45,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":46,"author":{"gitId":"woowenjun99"},"content":"  /**","lastModifiedDate":"2023-02-04"},{"lineNumber":47,"author":{"gitId":"woowenjun99"},"content":"   * Adds a todo task into the database.","lastModifiedDate":"2023-02-04"},{"lineNumber":48,"author":{"gitId":"woowenjun99"},"content":"   *","lastModifiedDate":"2023-02-04"},{"lineNumber":49,"author":{"gitId":"woowenjun99"},"content":"   * @param taskDescription The description of the todo task.","lastModifiedDate":"2023-02-04"},{"lineNumber":50,"author":{"gitId":"woowenjun99"},"content":"   * @throws Exception An exception if there is an issue with","lastModifiedDate":"2023-02-04"},{"lineNumber":51,"author":{"gitId":"woowenjun99"},"content":"   *                   adding the data from the database.","lastModifiedDate":"2023-02-04"},{"lineNumber":52,"author":{"gitId":"woowenjun99"},"content":"   */","lastModifiedDate":"2023-02-04"},{"lineNumber":53,"author":{"gitId":"woowenjun99"},"content":"  public void addTodoTask(String taskDescription) throws Exception {","lastModifiedDate":"2023-02-04"},{"lineNumber":54,"author":{"gitId":"woowenjun99"},"content":"    Todo model \u003d new Todo(taskDescription);","lastModifiedDate":"2023-02-04"},{"lineNumber":55,"author":{"gitId":"woowenjun99"},"content":"    counter +\u003d 1;","lastModifiedDate":"2023-02-04"},{"lineNumber":56,"author":{"gitId":"woowenjun99"},"content":"    db.create(model);","lastModifiedDate":"2023-02-04"},{"lineNumber":57,"author":{"gitId":"woowenjun99"},"content":"    printDescription(model);","lastModifiedDate":"2023-02-04"},{"lineNumber":58,"author":{"gitId":"woowenjun99"},"content":"  }","lastModifiedDate":"2023-02-04"},{"lineNumber":59,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":60,"author":{"gitId":"woowenjun99"},"content":"  /**","lastModifiedDate":"2023-02-04"},{"lineNumber":61,"author":{"gitId":"woowenjun99"},"content":"   * Updates the task model in the database with the updated value.","lastModifiedDate":"2023-02-04"},{"lineNumber":62,"author":{"gitId":"woowenjun99"},"content":"   * Following which, we will read the model and print the corresponding value.","lastModifiedDate":"2023-02-04"},{"lineNumber":63,"author":{"gitId":"woowenjun99"},"content":"   *","lastModifiedDate":"2023-02-04"},{"lineNumber":64,"author":{"gitId":"woowenjun99"},"content":"   * @param isMark The value to update the task with","lastModifiedDate":"2023-02-04"},{"lineNumber":65,"author":{"gitId":"woowenjun99"},"content":"   * @param index  The index of the task to be updated","lastModifiedDate":"2023-02-04"},{"lineNumber":66,"author":{"gitId":"woowenjun99"},"content":"   * @throws Exception An exception if the task is invalid","lastModifiedDate":"2023-02-04"},{"lineNumber":67,"author":{"gitId":"woowenjun99"},"content":"   */","lastModifiedDate":"2023-02-04"},{"lineNumber":68,"author":{"gitId":"woowenjun99"},"content":"  public void toggleMark(boolean isMark, int index) throws Exception {","lastModifiedDate":"2023-02-04"},{"lineNumber":69,"author":{"gitId":"woowenjun99"},"content":"    db.update(index, isMark);","lastModifiedDate":"2023-02-04"},{"lineNumber":70,"author":{"gitId":"woowenjun99"},"content":"    Task model \u003d db.read(index);","lastModifiedDate":"2023-02-04"},{"lineNumber":71,"author":{"gitId":"woowenjun99"},"content":"    System.out.printf(","lastModifiedDate":"2023-02-04"},{"lineNumber":72,"author":{"gitId":"woowenjun99"},"content":"            \"%s\\n\",","lastModifiedDate":"2023-02-04"},{"lineNumber":73,"author":{"gitId":"woowenjun99"},"content":"            isMark ? Message.MARKED.message : Message.UNMARKED.message","lastModifiedDate":"2023-02-04"},{"lineNumber":74,"author":{"gitId":"woowenjun99"},"content":"    );","lastModifiedDate":"2023-02-04"},{"lineNumber":75,"author":{"gitId":"woowenjun99"},"content":"    view.printTaskDescriptionText(model);","lastModifiedDate":"2023-02-04"},{"lineNumber":76,"author":{"gitId":"woowenjun99"},"content":"  }","lastModifiedDate":"2023-02-04"},{"lineNumber":77,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":78,"author":{"gitId":"woowenjun99"},"content":"  /**","lastModifiedDate":"2023-02-04"},{"lineNumber":79,"author":{"gitId":"woowenjun99"},"content":"   * Adds a deadline task into the database","lastModifiedDate":"2023-02-04"},{"lineNumber":80,"author":{"gitId":"woowenjun99"},"content":"   *","lastModifiedDate":"2023-02-04"},{"lineNumber":81,"author":{"gitId":"woowenjun99"},"content":"   * @param taskDescription The task description","lastModifiedDate":"2023-02-04"},{"lineNumber":82,"author":{"gitId":"woowenjun99"},"content":"   * @throws Exception An exception if the task is invalid","lastModifiedDate":"2023-02-04"},{"lineNumber":83,"author":{"gitId":"woowenjun99"},"content":"   */","lastModifiedDate":"2023-02-04"},{"lineNumber":84,"author":{"gitId":"woowenjun99"},"content":"  public void addDeadlineTask(String taskDescription) throws Exception {","lastModifiedDate":"2023-02-04"},{"lineNumber":85,"author":{"gitId":"woowenjun99"},"content":"    int index \u003d taskDescription.indexOf(\"/by\");","lastModifiedDate":"2023-02-04"},{"lineNumber":86,"author":{"gitId":"woowenjun99"},"content":"    validator.validateDeadlineTask(index);","lastModifiedDate":"2023-02-04"},{"lineNumber":87,"author":{"gitId":"woowenjun99"},"content":"    String description \u003d taskDescription.substring(0, index);","lastModifiedDate":"2023-02-04"},{"lineNumber":88,"author":{"gitId":"woowenjun99"},"content":"    String endDuration \u003d taskDescription.substring(index + \"/by \".length());","lastModifiedDate":"2023-02-04"},{"lineNumber":89,"author":{"gitId":"woowenjun99"},"content":"    Deadline model \u003d new Deadline(description, endDuration);","lastModifiedDate":"2023-02-04"},{"lineNumber":90,"author":{"gitId":"woowenjun99"},"content":"    counter +\u003d 1;","lastModifiedDate":"2023-02-04"},{"lineNumber":91,"author":{"gitId":"woowenjun99"},"content":"    db.create(model);","lastModifiedDate":"2023-02-04"},{"lineNumber":92,"author":{"gitId":"woowenjun99"},"content":"    printDescription(model);","lastModifiedDate":"2023-02-04"},{"lineNumber":93,"author":{"gitId":"woowenjun99"},"content":"  }","lastModifiedDate":"2023-02-04"},{"lineNumber":94,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":95,"author":{"gitId":"woowenjun99"},"content":"  /**","lastModifiedDate":"2023-02-04"},{"lineNumber":96,"author":{"gitId":"woowenjun99"},"content":"   * Adds an event task into the tasks array and prints","lastModifiedDate":"2023-02-04"},{"lineNumber":97,"author":{"gitId":"woowenjun99"},"content":"   * out the corresponding message","lastModifiedDate":"2023-02-04"},{"lineNumber":98,"author":{"gitId":"woowenjun99"},"content":"   *","lastModifiedDate":"2023-02-04"},{"lineNumber":99,"author":{"gitId":"woowenjun99"},"content":"   * @param taskDescription A string after removing the","lastModifiedDate":"2023-02-04"},{"lineNumber":100,"author":{"gitId":"woowenjun99"},"content":"   *                        command","lastModifiedDate":"2023-02-04"},{"lineNumber":101,"author":{"gitId":"woowenjun99"},"content":"   */","lastModifiedDate":"2023-02-04"},{"lineNumber":102,"author":{"gitId":"woowenjun99"},"content":"  public void addEventTask(String taskDescription) throws Exception {","lastModifiedDate":"2023-02-04"},{"lineNumber":103,"author":{"gitId":"woowenjun99"},"content":"    int indexOfFrom \u003d taskDescription.indexOf(\"/from\");","lastModifiedDate":"2023-02-04"},{"lineNumber":104,"author":{"gitId":"woowenjun99"},"content":"    int indexOfTo \u003d taskDescription.indexOf(\"/to\");","lastModifiedDate":"2023-02-04"},{"lineNumber":105,"author":{"gitId":"woowenjun99"},"content":"    validator.validateEventTask(indexOfFrom, indexOfTo);","lastModifiedDate":"2023-02-04"},{"lineNumber":106,"author":{"gitId":"woowenjun99"},"content":"    String description \u003d taskDescription.substring(0, indexOfFrom);","lastModifiedDate":"2023-02-04"},{"lineNumber":107,"author":{"gitId":"woowenjun99"},"content":"    String from \u003d taskDescription.substring(","lastModifiedDate":"2023-02-04"},{"lineNumber":108,"author":{"gitId":"woowenjun99"},"content":"            indexOfFrom + \"/from \".length(),","lastModifiedDate":"2023-02-04"},{"lineNumber":109,"author":{"gitId":"woowenjun99"},"content":"            indexOfTo","lastModifiedDate":"2023-02-04"},{"lineNumber":110,"author":{"gitId":"woowenjun99"},"content":"    );","lastModifiedDate":"2023-02-04"},{"lineNumber":111,"author":{"gitId":"woowenjun99"},"content":"    String to \u003d taskDescription.substring(indexOfTo + \"/to \".length());","lastModifiedDate":"2023-02-04"},{"lineNumber":112,"author":{"gitId":"woowenjun99"},"content":"    counter +\u003d 1;","lastModifiedDate":"2023-02-04"},{"lineNumber":113,"author":{"gitId":"woowenjun99"},"content":"    Event model \u003d new Event(description, from, to);","lastModifiedDate":"2023-02-04"},{"lineNumber":114,"author":{"gitId":"woowenjun99"},"content":"    db.create(model);","lastModifiedDate":"2023-02-04"},{"lineNumber":115,"author":{"gitId":"woowenjun99"},"content":"    printDescription(model);","lastModifiedDate":"2023-02-04"},{"lineNumber":116,"author":{"gitId":"woowenjun99"},"content":"  }","lastModifiedDate":"2023-02-04"},{"lineNumber":117,"author":{"gitId":"woowenjun99"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"woowenjun99":117}},{"path":"src/main/java/database/Database.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"woowenjun99"},"content":"package database;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"woowenjun99"},"content":"import model.task.Task;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"woowenjun99"},"content":"import parser.FileParser;","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"woowenjun99"},"content":"public class Database {","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"woowenjun99"},"content":"  protected final int MAX_TASK \u003d 100;","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"woowenjun99"},"content":"  protected final FileParser parser \u003d FileParser.getInstance();","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"woowenjun99"},"content":"  protected final Task[] tasks \u003d new Task[MAX_TASK];","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"woowenjun99"},"content":"  protected static int counter \u003d 0;","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"woowenjun99"},"content":"  /**","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"woowenjun99"},"content":"   * A simple function to mimic the database CREATE functionality.","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"woowenjun99"},"content":"   *","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"woowenjun99"},"content":"   * @param task The task to be set. The task will be set in the next","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"woowenjun99"},"content":"   *             available index if there is still space.","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"woowenjun99"},"content":"   * @throws Exception An exception if the database is already full.","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"woowenjun99"},"content":"   */","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"woowenjun99"},"content":"  public void create(Task task) throws Exception {","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"woowenjun99"},"content":"    if (counter \u003e\u003d MAX_TASK) {","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"woowenjun99"},"content":"      throw new Exception(\"The database is full. Don\u0027t ask me how\");","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"woowenjun99"},"content":"    parser.writeToFile(task.getDescriptionText());","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"woowenjun99"},"content":"    tasks[counter] \u003d task;","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"woowenjun99"},"content":"    counter +\u003d 1;","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"woowenjun99"},"content":"  }","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"woowenjun99"},"content":"  /**","lastModifiedDate":"2023-02-04"},{"lineNumber":33,"author":{"gitId":"woowenjun99"},"content":"   * A simple function to mimic the database READ functionality.","lastModifiedDate":"2023-02-04"},{"lineNumber":34,"author":{"gitId":"woowenjun99"},"content":"   *","lastModifiedDate":"2023-02-04"},{"lineNumber":35,"author":{"gitId":"woowenjun99"},"content":"   * @param index The index of the task to be read.","lastModifiedDate":"2023-02-04"},{"lineNumber":36,"author":{"gitId":"woowenjun99"},"content":"   * @return The task at the index.","lastModifiedDate":"2023-02-04"},{"lineNumber":37,"author":{"gitId":"woowenjun99"},"content":"   * @throws Exception An exception if an invalid index is provided.","lastModifiedDate":"2023-02-04"},{"lineNumber":38,"author":{"gitId":"woowenjun99"},"content":"   */","lastModifiedDate":"2023-02-04"},{"lineNumber":39,"author":{"gitId":"woowenjun99"},"content":"  public Task read(int index) throws Exception {","lastModifiedDate":"2023-02-04"},{"lineNumber":40,"author":{"gitId":"woowenjun99"},"content":"    if (index \u003e\u003d counter || index \u003c 0) {","lastModifiedDate":"2023-02-04"},{"lineNumber":41,"author":{"gitId":"woowenjun99"},"content":"      throw new Exception(\"Invalid index provided.\");","lastModifiedDate":"2023-02-04"},{"lineNumber":42,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":43,"author":{"gitId":"woowenjun99"},"content":"    return tasks[index];","lastModifiedDate":"2023-02-04"},{"lineNumber":44,"author":{"gitId":"woowenjun99"},"content":"  }","lastModifiedDate":"2023-02-04"},{"lineNumber":45,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":46,"author":{"gitId":"woowenjun99"},"content":"  /**","lastModifiedDate":"2023-02-04"},{"lineNumber":47,"author":{"gitId":"woowenjun99"},"content":"   * A simple function to micmic the database UPDATE functionality.","lastModifiedDate":"2023-02-04"},{"lineNumber":48,"author":{"gitId":"woowenjun99"},"content":"   *","lastModifiedDate":"2023-02-04"},{"lineNumber":49,"author":{"gitId":"woowenjun99"},"content":"   * @param index The index of the task to be updated.","lastModifiedDate":"2023-02-04"},{"lineNumber":50,"author":{"gitId":"woowenjun99"},"content":"   * @param task  The new state of the task.","lastModifiedDate":"2023-02-04"},{"lineNumber":51,"author":{"gitId":"woowenjun99"},"content":"   * @throws Exception An exception if the index is invalid.","lastModifiedDate":"2023-02-04"},{"lineNumber":52,"author":{"gitId":"woowenjun99"},"content":"   */","lastModifiedDate":"2023-02-04"},{"lineNumber":53,"author":{"gitId":"woowenjun99"},"content":"  public void update(int index, boolean value) throws Exception {","lastModifiedDate":"2023-02-04"},{"lineNumber":54,"author":{"gitId":"woowenjun99"},"content":"    if (index \u003e\u003d counter || index \u003c 0) {","lastModifiedDate":"2023-02-04"},{"lineNumber":55,"author":{"gitId":"woowenjun99"},"content":"      throw new Exception(\"Invalid index provided.\");","lastModifiedDate":"2023-02-04"},{"lineNumber":56,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":57,"author":{"gitId":"woowenjun99"},"content":"    tasks[index].setDone(value);","lastModifiedDate":"2023-02-04"},{"lineNumber":58,"author":{"gitId":"woowenjun99"},"content":"  }","lastModifiedDate":"2023-02-04"},{"lineNumber":59,"author":{"gitId":"woowenjun99"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"woowenjun99":59}},{"path":"src/main/java/model/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"woowenjun99"},"content":"package model.task;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"woowenjun99"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"woowenjun99"},"content":"    protected String endDate;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"woowenjun99"},"content":"    public Deadline(String taskName, String endDate) {","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"woowenjun99"},"content":"        super(taskName);","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"woowenjun99"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"woowenjun99"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"woowenjun99"},"content":"    public String getDescriptionText() {","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"woowenjun99"},"content":"        String symbol \u003d super.isDone() ? \"X\" : \" \";","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"woowenjun99"},"content":"        return String.format(\"[D][%s] %s (by: %s)\",","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"woowenjun99"},"content":"                symbol,","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"woowenjun99"},"content":"                super.getTaskName(),","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"woowenjun99"},"content":"                this.endDate","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"woowenjun99"},"content":"        );","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"woowenjun99"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"woowenjun99":20}},{"path":"src/main/java/model/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"woowenjun99"},"content":"package model.task;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"woowenjun99"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"woowenjun99"},"content":"    protected String from;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"woowenjun99"},"content":"    protected String to;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"woowenjun99"},"content":"    public Event(String taskName, String from, String to) {","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"woowenjun99"},"content":"        super(taskName);","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"woowenjun99"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"woowenjun99"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"woowenjun99"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"woowenjun99"},"content":"    public String getDescriptionText() {","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"woowenjun99"},"content":"        String symbol \u003d super.isDone() ? \"X\" : \" \";","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"woowenjun99"},"content":"        return String.format(\"[E][%s] %s (from: %s to: %s)\",","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"woowenjun99"},"content":"                symbol,","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"woowenjun99"},"content":"                super.getTaskName(),","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"woowenjun99"},"content":"                this.from,","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"woowenjun99"},"content":"                this.to","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"woowenjun99"},"content":"        );","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"woowenjun99"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"woowenjun99":23}},{"path":"src/main/java/model/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"woowenjun99"},"content":"package model.task;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"woowenjun99"},"content":"public abstract class Task {","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"woowenjun99"},"content":"    private boolean isDone;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"woowenjun99"},"content":"    private final String taskName;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"woowenjun99"},"content":"    public Task(String taskName) {","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"woowenjun99"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"woowenjun99"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"woowenjun99"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"woowenjun99"},"content":"        return isDone;","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"woowenjun99"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"woowenjun99"},"content":"        isDone \u003d done;","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"woowenjun99"},"content":"    public String getTaskName() {","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"woowenjun99"},"content":"        return taskName;","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"woowenjun99"},"content":"    public abstract String getDescriptionText();","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"woowenjun99"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"woowenjun99":24}},{"path":"src/main/java/model/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"woowenjun99"},"content":"package model.task;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"woowenjun99"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"woowenjun99"},"content":"    public Todo(String taskName) {","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"woowenjun99"},"content":"        super(taskName);","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"woowenjun99"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"woowenjun99"},"content":"    public String getDescriptionText() {","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"woowenjun99"},"content":"        String symbol \u003d super.isDone() ? \"X\" : \" \";","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"woowenjun99"},"content":"        return String.format(\"[T][%s] %s\", symbol, super.getTaskName());","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"woowenjun99"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"woowenjun99":14}},{"path":"src/main/java/parser/FileParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"woowenjun99"},"content":"package parser;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"woowenjun99"},"content":"import java.io.File;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"woowenjun99"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"woowenjun99"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"woowenjun99"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"woowenjun99"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"woowenjun99"},"content":"public class FileParser {","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"woowenjun99"},"content":"    protected static FileParser instance \u003d null;","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"woowenjun99"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"woowenjun99"},"content":"     * This function is used to create a file if it does not exist. This helps","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"woowenjun99"},"content":"     * the user to reduce the trouble of having to create his own file and","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"woowenjun99"},"content":"     * creating it in the incorrect location.","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"woowenjun99"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"woowenjun99"},"content":"     * @throws IOException If an I/O exception occurs","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"woowenjun99"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"woowenjun99"},"content":"    protected static void createFileIfNotExist() {","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"woowenjun99"},"content":"        try {","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"woowenjun99"},"content":"            File db \u003d new File(\"mongo.txt\");","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"woowenjun99"},"content":"            db.createNewFile();","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"woowenjun99"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"woowenjun99"},"content":"            System.out.println(\"An IO Exception occured\");","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"woowenjun99"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"woowenjun99"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"woowenjun99"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"woowenjun99"},"content":"     * This function is used to read from an existing file. In order to reduce","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"woowenjun99"},"content":"     * the possibility of file does not exist, I will forcefully create a new","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"woowenjun99"},"content":"     * file prior to reading.","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"woowenjun99"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"woowenjun99"},"content":"    protected static void readFromFile() {","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"woowenjun99"},"content":"        try {","lastModifiedDate":"2023-02-12"},{"lineNumber":37,"author":{"gitId":"woowenjun99"},"content":"            createFileIfNotExist();","lastModifiedDate":"2023-02-12"},{"lineNumber":38,"author":{"gitId":"woowenjun99"},"content":"            File db \u003d new File(\"mongo.txt\");","lastModifiedDate":"2023-02-12"},{"lineNumber":39,"author":{"gitId":"woowenjun99"},"content":"            Scanner reader \u003d new Scanner(db);","lastModifiedDate":"2023-02-12"},{"lineNumber":40,"author":{"gitId":"woowenjun99"},"content":"            while (reader.hasNextLine()) {","lastModifiedDate":"2023-02-12"},{"lineNumber":41,"author":{"gitId":"woowenjun99"},"content":"                // TODO: Replace the printing with other logic","lastModifiedDate":"2023-02-12"},{"lineNumber":42,"author":{"gitId":"woowenjun99"},"content":"                System.out.println(reader.nextLine());","lastModifiedDate":"2023-02-12"},{"lineNumber":43,"author":{"gitId":"woowenjun99"},"content":"            }","lastModifiedDate":"2023-02-12"},{"lineNumber":44,"author":{"gitId":"woowenjun99"},"content":"            reader.close();","lastModifiedDate":"2023-02-12"},{"lineNumber":45,"author":{"gitId":"woowenjun99"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":46,"author":{"gitId":"woowenjun99"},"content":"            System.out.println(\"A file not found exception occured\");","lastModifiedDate":"2023-02-12"},{"lineNumber":47,"author":{"gitId":"woowenjun99"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-12"},{"lineNumber":48,"author":{"gitId":"woowenjun99"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":49,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":50,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":51,"author":{"gitId":"woowenjun99"},"content":"    public void writeToFile(String text) {","lastModifiedDate":"2023-02-12"},{"lineNumber":52,"author":{"gitId":"woowenjun99"},"content":"        try {","lastModifiedDate":"2023-02-12"},{"lineNumber":53,"author":{"gitId":"woowenjun99"},"content":"            createFileIfNotExist();","lastModifiedDate":"2023-02-12"},{"lineNumber":54,"author":{"gitId":"woowenjun99"},"content":"            FileWriter writer \u003d new FileWriter(\"mongo.txt\");","lastModifiedDate":"2023-02-12"},{"lineNumber":55,"author":{"gitId":"woowenjun99"},"content":"            writer.write(text);","lastModifiedDate":"2023-02-12"},{"lineNumber":56,"author":{"gitId":"woowenjun99"},"content":"            writer.close();","lastModifiedDate":"2023-02-12"},{"lineNumber":57,"author":{"gitId":"woowenjun99"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":58,"author":{"gitId":"woowenjun99"},"content":"            System.out.println(\"Oops, something went wrong\");","lastModifiedDate":"2023-02-12"},{"lineNumber":59,"author":{"gitId":"woowenjun99"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-12"},{"lineNumber":60,"author":{"gitId":"woowenjun99"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":61,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":62,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":63,"author":{"gitId":"woowenjun99"},"content":"    protected FileParser() {","lastModifiedDate":"2023-02-12"},{"lineNumber":64,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":65,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":66,"author":{"gitId":"woowenjun99"},"content":"    public static FileParser getInstance() {","lastModifiedDate":"2023-02-12"},{"lineNumber":67,"author":{"gitId":"woowenjun99"},"content":"        if (instance \u003d\u003d null) {","lastModifiedDate":"2023-02-12"},{"lineNumber":68,"author":{"gitId":"woowenjun99"},"content":"            instance \u003d new FileParser();","lastModifiedDate":"2023-02-12"},{"lineNumber":69,"author":{"gitId":"woowenjun99"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":70,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":71,"author":{"gitId":"woowenjun99"},"content":"        createFileIfNotExist();","lastModifiedDate":"2023-02-12"},{"lineNumber":72,"author":{"gitId":"woowenjun99"},"content":"        return instance;","lastModifiedDate":"2023-02-12"},{"lineNumber":73,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":74,"author":{"gitId":"woowenjun99"},"content":"}","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"woowenjun99":74}},{"path":"src/main/java/validator/Validator.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"woowenjun99"},"content":"package validator;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"woowenjun99"},"content":"import constants.ErrorMessage;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"woowenjun99"},"content":"import validator.error.InvalidTaskError;","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"woowenjun99"},"content":"public class Validator {","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"woowenjun99"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"woowenjun99"},"content":"     * A validator function containing all the guard clauses to validate the","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"woowenjun99"},"content":"     * deadline tasks.","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"woowenjun99"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"woowenjun99"},"content":"     * @param index The index of the description.","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"woowenjun99"},"content":"     * @throws InvalidTaskError If an invalid deadline task has been provided.","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"woowenjun99"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"woowenjun99"},"content":"    public void validateDeadlineTask(int index) throws InvalidTaskError {","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"woowenjun99"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"woowenjun99"},"content":"            throw new InvalidTaskError(ErrorMessage.NO_BY.message);","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"woowenjun99"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"woowenjun99"},"content":"        if (index \u003d\u003d 0) {","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"woowenjun99"},"content":"            throw new InvalidTaskError(ErrorMessage.NO_TASK.message);","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"woowenjun99"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"woowenjun99"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"woowenjun99"},"content":"     * A validator function containing all the guard clauses to validate the","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"woowenjun99"},"content":"     * deadline tasks.","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"woowenjun99"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"woowenjun99"},"content":"     * @param indexOfFrom Index of the /from.","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"woowenjun99"},"content":"     * @param indexOfTo   Index of the /to.","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"woowenjun99"},"content":"     * @throws InvalidTaskError If an invalid deadline task has been provided.","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"woowenjun99"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":33,"author":{"gitId":"woowenjun99"},"content":"    public void validateEventTask(int indexOfFrom, int indexOfTo)","lastModifiedDate":"2023-02-04"},{"lineNumber":34,"author":{"gitId":"woowenjun99"},"content":"            throws InvalidTaskError {","lastModifiedDate":"2023-02-04"},{"lineNumber":35,"author":{"gitId":"woowenjun99"},"content":"        if (indexOfFrom \u003d\u003d -1) {","lastModifiedDate":"2023-02-04"},{"lineNumber":36,"author":{"gitId":"woowenjun99"},"content":"            throw new InvalidTaskError(ErrorMessage.NO_FROM.message);","lastModifiedDate":"2023-02-04"},{"lineNumber":37,"author":{"gitId":"woowenjun99"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":38,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":39,"author":{"gitId":"woowenjun99"},"content":"        if (indexOfTo \u003d\u003d -1) {","lastModifiedDate":"2023-02-04"},{"lineNumber":40,"author":{"gitId":"woowenjun99"},"content":"            throw new InvalidTaskError(ErrorMessage.NO_TO.message);","lastModifiedDate":"2023-02-04"},{"lineNumber":41,"author":{"gitId":"woowenjun99"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":42,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":43,"author":{"gitId":"woowenjun99"},"content":"        if (indexOfFrom \u003e indexOfTo) {","lastModifiedDate":"2023-02-04"},{"lineNumber":44,"author":{"gitId":"woowenjun99"},"content":"            throw new InvalidTaskError(","lastModifiedDate":"2023-02-04"},{"lineNumber":45,"author":{"gitId":"woowenjun99"},"content":"                    ErrorMessage.INVALID_FORMAT.message","lastModifiedDate":"2023-02-04"},{"lineNumber":46,"author":{"gitId":"woowenjun99"},"content":"            );","lastModifiedDate":"2023-02-04"},{"lineNumber":47,"author":{"gitId":"woowenjun99"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":48,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":49,"author":{"gitId":"woowenjun99"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"woowenjun99":49}},{"path":"src/main/java/validator/error/InvalidTaskError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"woowenjun99"},"content":"package validator.error;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"woowenjun99"},"content":"public class InvalidTaskError extends Exception {","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"woowenjun99"},"content":"    String description;","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"woowenjun99"},"content":"    public InvalidTaskError(String description) {","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"woowenjun99"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"woowenjun99"},"content":"    public String getDescription() {","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"woowenjun99"},"content":"        return this.description;","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"woowenjun99"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"woowenjun99":13}},{"path":"src/main/java/view/TaskView.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"woowenjun99"},"content":"package view;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"woowenjun99"},"content":"import model.task.Task;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"woowenjun99"},"content":"public class TaskView {","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"woowenjun99"},"content":"    public void printTaskDescriptionText(Task model) {","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"woowenjun99"},"content":"        System.out.println(model.getDescriptionText());","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"woowenjun99"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"woowenjun99":9}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"woowenjun99"},"content":"todo borrow book","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"woowenjun99"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"woowenjun99"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"woowenjun99"},"content":"list","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"woowenjun99"},"content":"mark 2","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"woowenjun99"},"content":"bye","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"woowenjun99":6}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"woowenjun99"},"content":"java -classpath ..\\bin Main \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"woowenjun99":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"woowenjun99"},"content":"java -classpath ../bin Main \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"woowenjun99":1,"-":37}}]
