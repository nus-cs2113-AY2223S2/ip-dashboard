[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"woowenjun99"},"content":"plugins {","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"woowenjun99"},"content":"    id \u0027java\u0027","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"woowenjun99"},"content":"    id \u0027application\u0027","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"woowenjun99"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"woowenjun99"},"content":"}","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"woowenjun99"},"content":"repositories {","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"woowenjun99"},"content":"    mavenCentral()","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"woowenjun99"},"content":"}","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"woowenjun99"},"content":"dependencies {","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"woowenjun99"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"woowenjun99"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"woowenjun99"},"content":"    implementation \u0027com.google.code.gson:gson:2.10.1\u0027","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"woowenjun99"},"content":"}","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"woowenjun99"},"content":"test {","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"woowenjun99"},"content":"    useJUnitPlatform()","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"woowenjun99"},"content":"    testLogging {","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"woowenjun99"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"woowenjun99"},"content":"        showExceptions true","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"woowenjun99"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"woowenjun99"},"content":"        showCauses true","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"woowenjun99"},"content":"        showStackTraces true","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"woowenjun99"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"woowenjun99"},"content":"}","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"woowenjun99"},"content":"application {","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"woowenjun99"},"content":"    mainClassName \u003d \"Main\"","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"woowenjun99"},"content":"}","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"woowenjun99"},"content":"shadowJar {","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"woowenjun99"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"woowenjun99"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"woowenjun99"},"content":"}","lastModifiedDate":"2023-02-16"},{"lineNumber":39,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"woowenjun99"},"content":"run{","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"woowenjun99"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2023-02-16"},{"lineNumber":42,"author":{"gitId":"woowenjun99"},"content":"}","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"woowenjun99":42}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"woowenjun99"},"content":"Have you ever find it difficult to keep track of the many tasks at hand? Do you ever wish for a personal assistant to help you record all of your tasks? Well, Duke is here to save the day. This user guide will provide a step-by-step guide on how you can use Duke to make your life easier.","lastModifiedDate":"2023-02-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":5,"author":{"gitId":"woowenjun99"},"content":"## Table of Contents","lastModifiedDate":"2023-02-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":7,"author":{"gitId":"woowenjun99"},"content":"1. Setup","lastModifiedDate":"2023-02-25"},{"lineNumber":8,"author":{"gitId":"woowenjun99"},"content":"2. Features","lastModifiedDate":"2023-02-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":10,"author":{"gitId":"woowenjun99"},"content":"## Setup","lastModifiedDate":"2023-02-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":12,"author":{"gitId":"woowenjun99"},"content":"1. Install the jar file.","lastModifiedDate":"2023-02-25"},{"lineNumber":13,"author":{"gitId":"woowenjun99"},"content":"2. Execute the following command to run the program. The jar file already contains the necessary dependencies. A `data.json` file will automatically be created in the same directory as the jar file if none exist, and you may start using the app as per your desire. A word of caution: **Please do not manually edit the data.json unless you know what you are doing, as it will lead to unexpected consequences.**","lastModifiedDate":"2023-02-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":15,"author":{"gitId":"woowenjun99"},"content":"```bash","lastModifiedDate":"2023-02-25"},{"lineNumber":16,"author":{"gitId":"woowenjun99"},"content":"\u003e\u003e\u003e java -jar duke.jar","lastModifiedDate":"2023-02-25"},{"lineNumber":17,"author":{"gitId":"woowenjun99"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":18,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"woowenjun99"},"content":"1. Greeting","lastModifiedDate":"2023-02-25"},{"lineNumber":22,"author":{"gitId":"woowenjun99"},"content":"2. Save a todo task","lastModifiedDate":"2023-02-25"},{"lineNumber":23,"author":{"gitId":"woowenjun99"},"content":"3. Save an event task","lastModifiedDate":"2023-02-25"},{"lineNumber":24,"author":{"gitId":"woowenjun99"},"content":"4. Save a deadline task","lastModifiedDate":"2023-02-25"},{"lineNumber":25,"author":{"gitId":"woowenjun99"},"content":"5. Delete tasks","lastModifiedDate":"2023-02-25"},{"lineNumber":26,"author":{"gitId":"woowenjun99"},"content":"6. Find tasks","lastModifiedDate":"2023-02-25"},{"lineNumber":27,"author":{"gitId":"woowenjun99"},"content":"7. List tasks","lastModifiedDate":"2023-02-25"},{"lineNumber":28,"author":{"gitId":"woowenjun99"},"content":"8. Mark/Unmark task as completed","lastModifiedDate":"2023-02-25"},{"lineNumber":29,"author":{"gitId":"woowenjun99"},"content":"9. Terminate the program","lastModifiedDate":"2023-02-25"},{"lineNumber":30,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":31,"author":{"gitId":"woowenjun99"},"content":"### Feature 1: Greeting","lastModifiedDate":"2023-02-25"},{"lineNumber":32,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":33,"author":{"gitId":"woowenjun99"},"content":"Upon starting up the app, the Chatbot will greet you with the following message.","lastModifiedDate":"2023-02-25"},{"lineNumber":34,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":35,"author":{"gitId":"woowenjun99"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":36,"author":{"gitId":"woowenjun99"},"content":"WELCOME","lastModifiedDate":"2023-02-25"},{"lineNumber":37,"author":{"gitId":"woowenjun99"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":38,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":39,"author":{"gitId":"woowenjun99"},"content":"### Feature 2: Save a todo task","lastModifiedDate":"2023-02-25"},{"lineNumber":40,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":41,"author":{"gitId":"woowenjun99"},"content":"If you have a task that does not have any start or end date, you may save it in the following format `todo \u003cTask Name\u003e`.","lastModifiedDate":"2023-02-25"},{"lineNumber":42,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":43,"author":{"gitId":"woowenjun99"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":44,"author":{"gitId":"woowenjun99"},"content":"# todo \u003cTask Name\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":45,"author":{"gitId":"woowenjun99"},"content":"todo Kiss my girlfriend","lastModifiedDate":"2023-02-25"},{"lineNumber":46,"author":{"gitId":"woowenjun99"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":47,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":48,"author":{"gitId":"woowenjun99"},"content":"The expected outcome will be as such.","lastModifiedDate":"2023-02-25"},{"lineNumber":49,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":50,"author":{"gitId":"woowenjun99"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":51,"author":{"gitId":"woowenjun99"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-02-25"},{"lineNumber":52,"author":{"gitId":"woowenjun99"},"content":"[T][ ] Kiss my girlfriend","lastModifiedDate":"2023-02-25"},{"lineNumber":53,"author":{"gitId":"woowenjun99"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2023-02-25"},{"lineNumber":54,"author":{"gitId":"woowenjun99"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":56,"author":{"gitId":"woowenjun99"},"content":"### Feature 3: Save an event task","lastModifiedDate":"2023-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":58,"author":{"gitId":"woowenjun99"},"content":"If you are attending an event with a start and end date, you may save it in the following format `event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e`","lastModifiedDate":"2023-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":60,"author":{"gitId":"woowenjun99"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":61,"author":{"gitId":"woowenjun99"},"content":"event attend my wedding /from 12 PM /to 6 PM","lastModifiedDate":"2023-02-25"},{"lineNumber":62,"author":{"gitId":"woowenjun99"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":64,"author":{"gitId":"woowenjun99"},"content":"The expected outcome will be as such.","lastModifiedDate":"2023-02-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":66,"author":{"gitId":"woowenjun99"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":67,"author":{"gitId":"woowenjun99"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-02-25"},{"lineNumber":68,"author":{"gitId":"woowenjun99"},"content":"[E][ ] attend my wedding (from: 12 PM to: 6 PM)","lastModifiedDate":"2023-02-25"},{"lineNumber":69,"author":{"gitId":"woowenjun99"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2023-02-25"},{"lineNumber":70,"author":{"gitId":"woowenjun99"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":72,"author":{"gitId":"woowenjun99"},"content":"### Feature 4: Save a deadline task","lastModifiedDate":"2023-02-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":74,"author":{"gitId":"woowenjun99"},"content":"If the task is a deadline task, you may save it in the following format `deadline \u003cdescription\u003e /by \u003cdeadline\u003e`","lastModifiedDate":"2023-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":76,"author":{"gitId":"woowenjun99"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":77,"author":{"gitId":"woowenjun99"},"content":"deadline RSVP /by tomorrow","lastModifiedDate":"2023-02-25"},{"lineNumber":78,"author":{"gitId":"woowenjun99"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":80,"author":{"gitId":"woowenjun99"},"content":"The expected outcome will be as such.","lastModifiedDate":"2023-02-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":83,"author":{"gitId":"woowenjun99"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-02-25"},{"lineNumber":84,"author":{"gitId":"woowenjun99"},"content":"[D][ ] RSVP (by: tomorrow)","lastModifiedDate":"2023-02-25"},{"lineNumber":85,"author":{"gitId":"woowenjun99"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2023-02-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":87,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":88,"author":{"gitId":"woowenjun99"},"content":"### Feature 5: Delete tasks","lastModifiedDate":"2023-02-25"},{"lineNumber":89,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":90,"author":{"gitId":"woowenjun99"},"content":"In the event that you want to delete a task, you can do so by indicating the id of the task in the following format `delete \u003cid\u003e`","lastModifiedDate":"2023-02-25"},{"lineNumber":91,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":92,"author":{"gitId":"woowenjun99"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":93,"author":{"gitId":"woowenjun99"},"content":"delete 1","lastModifiedDate":"2023-02-25"},{"lineNumber":94,"author":{"gitId":"woowenjun99"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":95,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":96,"author":{"gitId":"woowenjun99"},"content":"The expected outcome is","lastModifiedDate":"2023-02-25"},{"lineNumber":97,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":98,"author":{"gitId":"woowenjun99"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":99,"author":{"gitId":"woowenjun99"},"content":"Task successfully deleted","lastModifiedDate":"2023-02-25"},{"lineNumber":100,"author":{"gitId":"woowenjun99"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":101,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":102,"author":{"gitId":"woowenjun99"},"content":"In the event that the id is invalid, the following message will be shown:","lastModifiedDate":"2023-02-25"},{"lineNumber":103,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":104,"author":{"gitId":"woowenjun99"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":105,"author":{"gitId":"woowenjun99"},"content":"Invalid index provided.","lastModifiedDate":"2023-02-25"},{"lineNumber":106,"author":{"gitId":"woowenjun99"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":107,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":108,"author":{"gitId":"woowenjun99"},"content":"### Feature 6: Find task","lastModifiedDate":"2023-02-25"},{"lineNumber":109,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":110,"author":{"gitId":"woowenjun99"},"content":"You may search for a task with a keyword using the following format `find \u003ckeyword\u003e`.","lastModifiedDate":"2023-02-25"},{"lineNumber":111,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":112,"author":{"gitId":"woowenjun99"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":113,"author":{"gitId":"woowenjun99"},"content":"find RSVP","lastModifiedDate":"2023-02-25"},{"lineNumber":114,"author":{"gitId":"woowenjun99"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":115,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":116,"author":{"gitId":"woowenjun99"},"content":"The expected outcome is as such:","lastModifiedDate":"2023-02-25"},{"lineNumber":117,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":118,"author":{"gitId":"woowenjun99"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":119,"author":{"gitId":"woowenjun99"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2023-02-25"},{"lineNumber":120,"author":{"gitId":"woowenjun99"},"content":"1. [D][ ] RSVP (by: tomorrow)","lastModifiedDate":"2023-02-25"},{"lineNumber":121,"author":{"gitId":"woowenjun99"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":123,"author":{"gitId":"woowenjun99"},"content":"Whether there is a task that matches the outuput, the `Here are the matching tasks in your list:` will always be printed so do not worry if no task is found.","lastModifiedDate":"2023-02-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":125,"author":{"gitId":"woowenjun99"},"content":"### Feature 7: List tasks","lastModifiedDate":"2023-02-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":127,"author":{"gitId":"woowenjun99"},"content":"You may list out all the tasks using the following format `list`.","lastModifiedDate":"2023-02-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":129,"author":{"gitId":"woowenjun99"},"content":"The expected outcome is as such:","lastModifiedDate":"2023-02-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":131,"author":{"gitId":"woowenjun99"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":132,"author":{"gitId":"woowenjun99"},"content":"Here are the tasks in your list:","lastModifiedDate":"2023-02-25"},{"lineNumber":133,"author":{"gitId":"woowenjun99"},"content":"1. [E][ ] attend my wedding (from: 12 PM to: 6 PM)","lastModifiedDate":"2023-02-25"},{"lineNumber":134,"author":{"gitId":"woowenjun99"},"content":"2. [D][ ] RSVP (by: tomorrow)","lastModifiedDate":"2023-02-25"},{"lineNumber":135,"author":{"gitId":"woowenjun99"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":136,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":137,"author":{"gitId":"woowenjun99"},"content":"Whether there is a task in the list, the `Here are the tasks in your list:` will always be printed so do not worry if no tasks are displayed.","lastModifiedDate":"2023-02-25"},{"lineNumber":138,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":139,"author":{"gitId":"woowenjun99"},"content":"### Feature 8: Mark/Unmark task as completed","lastModifiedDate":"2023-02-25"},{"lineNumber":140,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":141,"author":{"gitId":"woowenjun99"},"content":"Supposed you are done with the task, you may mark it as complete using the following command `mark \u003cid\u003e` or `unmark \u003cid\u003e`.","lastModifiedDate":"2023-02-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":143,"author":{"gitId":"woowenjun99"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":144,"author":{"gitId":"woowenjun99"},"content":"mark 1","lastModifiedDate":"2023-02-25"},{"lineNumber":145,"author":{"gitId":"woowenjun99"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":146,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":147,"author":{"gitId":"woowenjun99"},"content":"The expected outcome is as such:","lastModifiedDate":"2023-02-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":150,"author":{"gitId":"woowenjun99"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2023-02-25"},{"lineNumber":151,"author":{"gitId":"woowenjun99"},"content":"[D][X] RSVP (by: tomorrow)","lastModifiedDate":"2023-02-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":153,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":154,"author":{"gitId":"woowenjun99"},"content":"If an invalid index has been provided, the following message will be shown:","lastModifiedDate":"2023-02-25"},{"lineNumber":155,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":156,"author":{"gitId":"woowenjun99"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":157,"author":{"gitId":"woowenjun99"},"content":"Invalid index provided.","lastModifiedDate":"2023-02-25"},{"lineNumber":158,"author":{"gitId":"woowenjun99"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":159,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":160,"author":{"gitId":"woowenjun99"},"content":"### Feature 9: Terminate the programme","lastModifiedDate":"2023-02-25"},{"lineNumber":161,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":162,"author":{"gitId":"woowenjun99"},"content":"In the event that you are done for the day, you may terminate the programme with the following command `bye`.","lastModifiedDate":"2023-02-25"},{"lineNumber":163,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":164,"author":{"gitId":"woowenjun99"},"content":"The expected outcome is as such:","lastModifiedDate":"2023-02-25"},{"lineNumber":165,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":166,"author":{"gitId":"woowenjun99"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":167,"author":{"gitId":"woowenjun99"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2023-02-25"},{"lineNumber":168,"author":{"gitId":"woowenjun99"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":169,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":170,"author":{"gitId":"woowenjun99"},"content":"The tasks that you have previously saved will not be deleted as it is already saved in the data.json.","lastModifiedDate":"2023-02-25"}],"authorContributionMap":{"woowenjun99":140,"-":30}},{"path":"settings.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"woowenjun99"},"content":"/*","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"woowenjun99"},"content":" * This file was generated by the Gradle \u0027init\u0027 task.","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"woowenjun99"},"content":" *","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"woowenjun99"},"content":" * The settings file is used to specify which projects to include in your build.","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"woowenjun99"},"content":" *","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"woowenjun99"},"content":" * Detailed information about configuring a multi-project build in Gradle can be found","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"woowenjun99"},"content":" * in the user manual at https://docs.gradle.org/8.0/userguide/multi_project_builds.html","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"woowenjun99"},"content":" */","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"woowenjun99"},"content":"rootProject.name \u003d \u0027ip\u0027","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"woowenjun99":10}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"woowenjun99"},"content":"import duke.Duke;","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"woowenjun99"},"content":"import storage.Storage;","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"woowenjun99"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"woowenjun99"},"content":" * The main class where we compile and run.","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"woowenjun99"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"woowenjun99"},"content":"public class Main {","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"woowenjun99"},"content":"    private static final Duke duke \u003d Duke.getInstance();","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"woowenjun99"},"content":"    /*","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"woowenjun99"},"content":"     * Entry point of the project.","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"woowenjun99"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"woowenjun99"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-21"},{"lineNumber":14,"author":{"gitId":"woowenjun99"},"content":"        Storage parser \u003d Storage.getInstance();","lastModifiedDate":"2023-02-21"},{"lineNumber":15,"author":{"gitId":"woowenjun99"},"content":"        parser.readFromFile();","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"woowenjun99"},"content":"        duke.run();","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"woowenjun99"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"woowenjun99":18}},{"path":"src/main/java/constants/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"woowenjun99"},"content":"package constants;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"woowenjun99"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"woowenjun99"},"content":" * An interface containing all the commands that will be processed.","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"woowenjun99"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"woowenjun99"},"content":"public interface Command {","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"woowenjun99"},"content":"  String FIND \u003d \"find\";","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"woowenjun99"},"content":"  String DELETE \u003d \"delete\";","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"woowenjun99"},"content":"  String DEADLINE \u003d \"deadline\";","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"woowenjun99"},"content":"  String LIST \u003d \"list\";","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"woowenjun99"},"content":"  String TODO \u003d \"todo\";","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"woowenjun99"},"content":"  String EVENT \u003d \"event\";","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"woowenjun99"},"content":"  String MARK \u003d \"mark\";","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"woowenjun99"},"content":"  String UNMARK \u003d \"unmark\";","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"woowenjun99"},"content":"  String BYE \u003d \"bye\";","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"woowenjun99"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"woowenjun99":16}},{"path":"src/main/java/constants/ErrorMessage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"woowenjun99"},"content":"package constants;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"woowenjun99"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"woowenjun99"},"content":" * This interface will contain most of the error messages that will be used throughout the","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"woowenjun99"},"content":" * application.","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"woowenjun99"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"woowenjun99"},"content":"public interface ErrorMessage {","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"woowenjun99"},"content":"  String IO_EXCEPTION_ERROR \u003d \"Named file exists but is a directory rather than a regular file, does not exist but cannot be created, or cannot be opened for any other reason.\";","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"woowenjun99"},"content":"  String FOUND_NOT_FOUND_EXCEPTION \u003d \"A file not found exception occurred\";","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"woowenjun99"},"content":"  String INVALID_INDEX \u003d \"You have provided an invalid index.\";","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"woowenjun99"},"content":"  String INVALID_COMMAND \u003d \"An invalid command has been provided\";","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"woowenjun99"},"content":"  String INVALID_INPUT \u003d \"A valid command has been provided but the input format is incorrect\";","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"woowenjun99"},"content":"  String NO_DEADLINE_PROVIDED \u003d \"No deadline provided\";","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"woowenjun99"},"content":"  String NO_DESCRIPTION_PROVIDED \u003d \"No description has been provided\";","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"woowenjun99"},"content":"  String NO_START_OR_END \u003d \"No start or end provided\";","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"woowenjun99"},"content":"  String PARSE_INT_ERROR \u003d \"You have provided a non-number index\\n\";","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"woowenjun99"},"content":"  String UNKNOWN_COMMAND \u003d \"An unknown command has been provided\";","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"woowenjun99"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"woowenjun99":18}},{"path":"src/main/java/constants/Keyword.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"woowenjun99"},"content":"package constants;","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"woowenjun99"},"content":"public interface Keyword {","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"woowenjun99"},"content":"    String BY \u003d \"by\";","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"woowenjun99"},"content":"    String COMMAND \u003d \"command\";","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"woowenjun99"},"content":"    String DEADLINE \u003d \"deadline\";","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"woowenjun99"},"content":"    String DESCRIPTION \u003d \"description\";","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"woowenjun99"},"content":"    String EMPTY_ARRAY \u003d \"[]\";","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"woowenjun99"},"content":"    String END \u003d \"end\";","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"woowenjun99"},"content":"    String FILE_NAME \u003d \"./data.json\";","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"woowenjun99"},"content":"    String FROM \u003d \"from \";","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"woowenjun99"},"content":"    String INDEX \u003d \"index\";","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"woowenjun99"},"content":"    String KEYWORD \u003d \"keyword\";","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"woowenjun99"},"content":"    String SLASH \u003d \"/\";","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"woowenjun99"},"content":"    String START \u003d \"start\";","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"woowenjun99"},"content":"    String SPACE \u003d \" \";","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"woowenjun99"},"content":"    String TO \u003d \"to \";","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"woowenjun99"},"content":"}","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"woowenjun99":18}},{"path":"src/main/java/constants/Message.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"woowenjun99"},"content":"package constants;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"woowenjun99"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"woowenjun99"},"content":" * An interface that contains the usual automated messages mentioned by the chatbot.","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"woowenjun99"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"woowenjun99"},"content":"public interface Message {","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"woowenjun99"},"content":"    String GOODBYE \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"woowenjun99"},"content":"    String FIND_TASK \u003d \"Here are the matching tasks in your list:\";","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"woowenjun99"},"content":"    String LIST_NUMBER \u003d \"Now you have %d tasks in the list.\\n\";","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"woowenjun99"},"content":"    String LIST_TASKS \u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"woowenjun99"},"content":"    String MARKED \u003d \"Nice! I\u0027ve marked this task as done:\";","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"woowenjun99"},"content":"    String TASK_ADDED \u003d \"Got it. I\u0027ve added this task:\";","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"woowenjun99"},"content":"    String TASK_DELETED \u003d \"Task successfully deleted\";","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"woowenjun99"},"content":"    String UNMARKED \u003d \"OK, I\u0027ve marked this task as not done yet:\";","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"woowenjun99"},"content":"    String WELCOME \u003d \"Hello! I\u0027m Duke\\nWhat can I do for you?\\n\";","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"woowenjun99"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"woowenjun99":16}},{"path":"src/main/java/controller/TaskController.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"woowenjun99"},"content":"package controller;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"woowenjun99"},"content":"import constants.Message;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"woowenjun99"},"content":"import model.task.Deadline;","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"woowenjun99"},"content":"import model.task.Event;","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"woowenjun99"},"content":"import model.task.Task;","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"woowenjun99"},"content":"import model.task.Todo;","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"woowenjun99"},"content":"import tasklist.TaskList;","lastModifiedDate":"2023-02-21"},{"lineNumber":9,"author":{"gitId":"woowenjun99"},"content":"import ui.Ui;","lastModifiedDate":"2023-02-21"},{"lineNumber":10,"author":{"gitId":"woowenjun99"},"content":"import view.TaskView;","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"woowenjun99"},"content":"/**","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"woowenjun99"},"content":" * This class serves as a controller that will be used to link the model to","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"woowenjun99"},"content":" * the view. The MVC framework has been used for separation of concerns.","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"woowenjun99"},"content":" */","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"woowenjun99"},"content":"public class TaskController {","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"woowenjun99"},"content":"  protected TaskView view \u003d new TaskView();","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"woowenjun99"},"content":"  protected TaskList db \u003d TaskList.getInstance();","lastModifiedDate":"2023-02-21"},{"lineNumber":20,"author":{"gitId":"woowenjun99"},"content":"  protected Ui ui \u003d Ui.getInstance();","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"woowenjun99"},"content":"  private void printDescription(Task model) {","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"woowenjun99"},"content":"    ui.printMessage(Message.TASK_ADDED);","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"woowenjun99"},"content":"    view.printTaskDescriptionText(model);","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"woowenjun99"},"content":"    ui.printf(Message.LIST_NUMBER, db.getSize());","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"woowenjun99"},"content":"  }","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"woowenjun99"},"content":"  /**","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"woowenjun99"},"content":"   * Iterate through the array list and prints out the corresponding task.","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"woowenjun99"},"content":"   *","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"woowenjun99"},"content":"   * @throws Exception An exception if there is an issue with","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"woowenjun99"},"content":"   *                   fetching the data from the database.","lastModifiedDate":"2023-02-04"},{"lineNumber":33,"author":{"gitId":"woowenjun99"},"content":"   */","lastModifiedDate":"2023-02-04"},{"lineNumber":34,"author":{"gitId":"woowenjun99"},"content":"  public void listTasks() throws Exception {","lastModifiedDate":"2023-02-04"},{"lineNumber":35,"author":{"gitId":"woowenjun99"},"content":"    ui.printMessage(Message.LIST_TASKS);","lastModifiedDate":"2023-03-02"},{"lineNumber":36,"author":{"gitId":"woowenjun99"},"content":"    int numberOfEntries \u003d db.getSize();","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"woowenjun99"},"content":"    for (int i \u003d 0; i \u003c numberOfEntries; i +\u003d 1) {","lastModifiedDate":"2023-02-04"},{"lineNumber":38,"author":{"gitId":"woowenjun99"},"content":"      Task model \u003d db.read(i);","lastModifiedDate":"2023-02-04"},{"lineNumber":39,"author":{"gitId":"woowenjun99"},"content":"      ui.printf(\"%d. \", (i + 1));","lastModifiedDate":"2023-02-21"},{"lineNumber":40,"author":{"gitId":"woowenjun99"},"content":"      view.printTaskDescriptionText(model);","lastModifiedDate":"2023-02-04"},{"lineNumber":41,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":42,"author":{"gitId":"woowenjun99"},"content":"  }","lastModifiedDate":"2023-02-04"},{"lineNumber":43,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":44,"author":{"gitId":"woowenjun99"},"content":"  /**","lastModifiedDate":"2023-02-04"},{"lineNumber":45,"author":{"gitId":"woowenjun99"},"content":"   * This function takes in a description for a todo task and add it to the","lastModifiedDate":"2023-03-02"},{"lineNumber":46,"author":{"gitId":"woowenjun99"},"content":"   * end of the task list. Following which, the JSON file will be updated.","lastModifiedDate":"2023-03-02"},{"lineNumber":47,"author":{"gitId":"woowenjun99"},"content":"   *","lastModifiedDate":"2023-02-04"},{"lineNumber":48,"author":{"gitId":"woowenjun99"},"content":"   * @param taskDescription The description of the todo task.","lastModifiedDate":"2023-02-04"},{"lineNumber":49,"author":{"gitId":"woowenjun99"},"content":"   */","lastModifiedDate":"2023-02-04"},{"lineNumber":50,"author":{"gitId":"woowenjun99"},"content":"  public void addTodoTask(String taskDescription) {","lastModifiedDate":"2023-03-02"},{"lineNumber":51,"author":{"gitId":"woowenjun99"},"content":"    Todo model \u003d new Todo(taskDescription);","lastModifiedDate":"2023-02-04"},{"lineNumber":52,"author":{"gitId":"woowenjun99"},"content":"    db.create(model);","lastModifiedDate":"2023-02-04"},{"lineNumber":53,"author":{"gitId":"woowenjun99"},"content":"    printDescription(model);","lastModifiedDate":"2023-02-04"},{"lineNumber":54,"author":{"gitId":"woowenjun99"},"content":"  }","lastModifiedDate":"2023-02-04"},{"lineNumber":55,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":56,"author":{"gitId":"woowenjun99"},"content":"  /**","lastModifiedDate":"2023-02-04"},{"lineNumber":57,"author":{"gitId":"woowenjun99"},"content":"   * Toggle the task to mark or un-mark based on the user\u0027s request. Following","lastModifiedDate":"2023-03-02"},{"lineNumber":58,"author":{"gitId":"woowenjun99"},"content":"   * which, we will update the JSON file with the updated values in the task","lastModifiedDate":"2023-03-02"},{"lineNumber":59,"author":{"gitId":"woowenjun99"},"content":"   * list.","lastModifiedDate":"2023-03-02"},{"lineNumber":60,"author":{"gitId":"woowenjun99"},"content":"   *","lastModifiedDate":"2023-02-04"},{"lineNumber":61,"author":{"gitId":"woowenjun99"},"content":"   * @param isMark The value to update the task with.","lastModifiedDate":"2023-03-02"},{"lineNumber":62,"author":{"gitId":"woowenjun99"},"content":"   * @param index  The index of the task to be updated.","lastModifiedDate":"2023-03-02"},{"lineNumber":63,"author":{"gitId":"woowenjun99"},"content":"   * @throws Exception An exception if the task is invalid","lastModifiedDate":"2023-02-04"},{"lineNumber":64,"author":{"gitId":"woowenjun99"},"content":"   */","lastModifiedDate":"2023-02-04"},{"lineNumber":65,"author":{"gitId":"woowenjun99"},"content":"  public void toggleMark(boolean isMark, int index) throws Exception {","lastModifiedDate":"2023-02-04"},{"lineNumber":66,"author":{"gitId":"woowenjun99"},"content":"    db.update(index, isMark);","lastModifiedDate":"2023-02-13"},{"lineNumber":67,"author":{"gitId":"woowenjun99"},"content":"    Task model \u003d db.read(index);","lastModifiedDate":"2023-02-16"},{"lineNumber":68,"author":{"gitId":"woowenjun99"},"content":"    ui.printf(","lastModifiedDate":"2023-02-21"},{"lineNumber":69,"author":{"gitId":"woowenjun99"},"content":"            \"%s\\n\",","lastModifiedDate":"2023-02-04"},{"lineNumber":70,"author":{"gitId":"woowenjun99"},"content":"            isMark ? Message.MARKED : Message.UNMARKED","lastModifiedDate":"2023-03-02"},{"lineNumber":71,"author":{"gitId":"woowenjun99"},"content":"    );","lastModifiedDate":"2023-02-04"},{"lineNumber":72,"author":{"gitId":"woowenjun99"},"content":"    view.printTaskDescriptionText(model);","lastModifiedDate":"2023-02-04"},{"lineNumber":73,"author":{"gitId":"woowenjun99"},"content":"  }","lastModifiedDate":"2023-02-04"},{"lineNumber":74,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":75,"author":{"gitId":"woowenjun99"},"content":"  /**","lastModifiedDate":"2023-02-04"},{"lineNumber":76,"author":{"gitId":"woowenjun99"},"content":"   * This function takes in a deadline task and add it to the end of the","lastModifiedDate":"2023-03-02"},{"lineNumber":77,"author":{"gitId":"woowenjun99"},"content":"   * task list. Following which, we will update the JSON file again.","lastModifiedDate":"2023-03-02"},{"lineNumber":78,"author":{"gitId":"woowenjun99"},"content":"   *","lastModifiedDate":"2023-02-04"},{"lineNumber":79,"author":{"gitId":"woowenjun99"},"content":"   * @param description The task description.","lastModifiedDate":"2023-03-02"},{"lineNumber":80,"author":{"gitId":"woowenjun99"},"content":"   * @param deadline    The deadline for the deadline task.","lastModifiedDate":"2023-03-02"},{"lineNumber":81,"author":{"gitId":"woowenjun99"},"content":"   */","lastModifiedDate":"2023-02-04"},{"lineNumber":82,"author":{"gitId":"woowenjun99"},"content":"  public void addDeadlineTask(String description, String deadline) {","lastModifiedDate":"2023-03-02"},{"lineNumber":83,"author":{"gitId":"woowenjun99"},"content":"    Deadline model \u003d new Deadline(description, deadline);","lastModifiedDate":"2023-02-16"},{"lineNumber":84,"author":{"gitId":"woowenjun99"},"content":"    db.create(model);","lastModifiedDate":"2023-02-04"},{"lineNumber":85,"author":{"gitId":"woowenjun99"},"content":"    printDescription(model);","lastModifiedDate":"2023-02-04"},{"lineNumber":86,"author":{"gitId":"woowenjun99"},"content":"  }","lastModifiedDate":"2023-02-04"},{"lineNumber":87,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":88,"author":{"gitId":"woowenjun99"},"content":"  /**","lastModifiedDate":"2023-02-04"},{"lineNumber":89,"author":{"gitId":"woowenjun99"},"content":"   * This function takes in an event task and add it to the end of the","lastModifiedDate":"2023-03-02"},{"lineNumber":90,"author":{"gitId":"woowenjun99"},"content":"   *  task list. Following which, we will update the JSON file again.","lastModifiedDate":"2023-03-02"},{"lineNumber":91,"author":{"gitId":"woowenjun99"},"content":"   *","lastModifiedDate":"2023-02-04"},{"lineNumber":92,"author":{"gitId":"woowenjun99"},"content":"   * @param taskDescription A string after removing the command.","lastModifiedDate":"2023-03-02"},{"lineNumber":93,"author":{"gitId":"woowenjun99"},"content":"   * @param start The start time of the event task.","lastModifiedDate":"2023-03-02"},{"lineNumber":94,"author":{"gitId":"woowenjun99"},"content":"   * @param end The end time of the event task.","lastModifiedDate":"2023-03-02"},{"lineNumber":95,"author":{"gitId":"woowenjun99"},"content":"   */","lastModifiedDate":"2023-02-04"},{"lineNumber":96,"author":{"gitId":"woowenjun99"},"content":"  public void addEventTask(String taskDescription, String start, String end) {","lastModifiedDate":"2023-03-02"},{"lineNumber":97,"author":{"gitId":"woowenjun99"},"content":"    Event model \u003d new Event(taskDescription, start, end);","lastModifiedDate":"2023-02-16"},{"lineNumber":98,"author":{"gitId":"woowenjun99"},"content":"    db.create(model);","lastModifiedDate":"2023-02-04"},{"lineNumber":99,"author":{"gitId":"woowenjun99"},"content":"    printDescription(model);","lastModifiedDate":"2023-02-04"},{"lineNumber":100,"author":{"gitId":"woowenjun99"},"content":"  }","lastModifiedDate":"2023-02-04"},{"lineNumber":101,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":102,"author":{"gitId":"woowenjun99"},"content":"  /**","lastModifiedDate":"2023-02-23"},{"lineNumber":103,"author":{"gitId":"woowenjun99"},"content":"   * Manually add the tasks into the tasks list. This function is used only","lastModifiedDate":"2023-03-02"},{"lineNumber":104,"author":{"gitId":"woowenjun99"},"content":"   * when we are parsing the JSON file from the task lists and loading up.","lastModifiedDate":"2023-03-02"},{"lineNumber":105,"author":{"gitId":"woowenjun99"},"content":"   *","lastModifiedDate":"2023-02-23"},{"lineNumber":106,"author":{"gitId":"woowenjun99"},"content":"   * @param model The task model","lastModifiedDate":"2023-02-23"},{"lineNumber":107,"author":{"gitId":"woowenjun99"},"content":"   */","lastModifiedDate":"2023-02-23"},{"lineNumber":108,"author":{"gitId":"woowenjun99"},"content":"  public void manuallyAdd(Task model) {","lastModifiedDate":"2023-02-16"},{"lineNumber":109,"author":{"gitId":"woowenjun99"},"content":"    db.create(model);","lastModifiedDate":"2023-02-16"},{"lineNumber":110,"author":{"gitId":"woowenjun99"},"content":"  }","lastModifiedDate":"2023-02-16"},{"lineNumber":111,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":112,"author":{"gitId":"woowenjun99"},"content":"  /**","lastModifiedDate":"2023-02-23"},{"lineNumber":113,"author":{"gitId":"woowenjun99"},"content":"   * Deletes the task from the task list based on the index provided. Following","lastModifiedDate":"2023-03-02"},{"lineNumber":114,"author":{"gitId":"woowenjun99"},"content":"   * which, we will update the JSON file.","lastModifiedDate":"2023-03-02"},{"lineNumber":115,"author":{"gitId":"woowenjun99"},"content":"   *","lastModifiedDate":"2023-02-23"},{"lineNumber":116,"author":{"gitId":"woowenjun99"},"content":"   * @param index The index of the task to be deleted","lastModifiedDate":"2023-02-23"},{"lineNumber":117,"author":{"gitId":"woowenjun99"},"content":"   * @throws Exception When the index is out of bounds","lastModifiedDate":"2023-02-23"},{"lineNumber":118,"author":{"gitId":"woowenjun99"},"content":"   */","lastModifiedDate":"2023-02-23"},{"lineNumber":119,"author":{"gitId":"woowenjun99"},"content":"  public void deleteTask(int index) throws Exception {","lastModifiedDate":"2023-02-17"},{"lineNumber":120,"author":{"gitId":"woowenjun99"},"content":"    db.delete(index);","lastModifiedDate":"2023-02-17"},{"lineNumber":121,"author":{"gitId":"woowenjun99"},"content":"  }","lastModifiedDate":"2023-02-17"},{"lineNumber":122,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":123,"author":{"gitId":"woowenjun99"},"content":"  /**","lastModifiedDate":"2023-03-02"},{"lineNumber":124,"author":{"gitId":"woowenjun99"},"content":"   * This function is used to help search for the tasks that contains the","lastModifiedDate":"2023-03-02"},{"lineNumber":125,"author":{"gitId":"woowenjun99"},"content":"   * keywords in the description, and then prints out the corresponding","lastModifiedDate":"2023-03-02"},{"lineNumber":126,"author":{"gitId":"woowenjun99"},"content":"   * description.","lastModifiedDate":"2023-03-02"},{"lineNumber":127,"author":{"gitId":"woowenjun99"},"content":"   *","lastModifiedDate":"2023-03-02"},{"lineNumber":128,"author":{"gitId":"woowenjun99"},"content":"   * @param keyword The keyword provided by the user.","lastModifiedDate":"2023-03-02"},{"lineNumber":129,"author":{"gitId":"woowenjun99"},"content":"   * @throws Exception When the index provided is out of bounds.","lastModifiedDate":"2023-03-02"},{"lineNumber":130,"author":{"gitId":"woowenjun99"},"content":"   */","lastModifiedDate":"2023-03-02"},{"lineNumber":131,"author":{"gitId":"woowenjun99"},"content":"  public void findTask(String keyword) throws Exception {","lastModifiedDate":"2023-02-23"},{"lineNumber":132,"author":{"gitId":"woowenjun99"},"content":"    int numberOfEntries \u003d db.getSize();","lastModifiedDate":"2023-02-23"},{"lineNumber":133,"author":{"gitId":"woowenjun99"},"content":"    int counter \u003d 1;","lastModifiedDate":"2023-02-23"},{"lineNumber":134,"author":{"gitId":"woowenjun99"},"content":"    ui.printMessage(Message.FIND_TASK);","lastModifiedDate":"2023-03-02"},{"lineNumber":135,"author":{"gitId":"woowenjun99"},"content":"    for (int i \u003d 0; i \u003c numberOfEntries; i +\u003d 1) {","lastModifiedDate":"2023-02-23"},{"lineNumber":136,"author":{"gitId":"woowenjun99"},"content":"      Task model \u003d db.read(i);","lastModifiedDate":"2023-02-23"},{"lineNumber":137,"author":{"gitId":"woowenjun99"},"content":"      String taskName \u003d model.getDescriptionText();","lastModifiedDate":"2023-02-23"},{"lineNumber":138,"author":{"gitId":"woowenjun99"},"content":"      if (model.getTaskName().contains(keyword)) {","lastModifiedDate":"2023-02-23"},{"lineNumber":139,"author":{"gitId":"woowenjun99"},"content":"        ui.printf(\"%d. %s\\n\", counter, taskName);","lastModifiedDate":"2023-02-23"},{"lineNumber":140,"author":{"gitId":"woowenjun99"},"content":"        counter +\u003d 1;","lastModifiedDate":"2023-02-23"},{"lineNumber":141,"author":{"gitId":"woowenjun99"},"content":"      }","lastModifiedDate":"2023-02-23"},{"lineNumber":142,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":143,"author":{"gitId":"woowenjun99"},"content":"  }","lastModifiedDate":"2023-02-23"},{"lineNumber":144,"author":{"gitId":"woowenjun99"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"woowenjun99":144}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"woowenjun99"},"content":"package duke;","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"woowenjun99"},"content":"import constants.Command;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"woowenjun99"},"content":"import constants.ErrorMessage;","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"woowenjun99"},"content":"import constants.Keyword;","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"woowenjun99"},"content":"import constants.Message;","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"woowenjun99"},"content":"import controller.TaskController;","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"woowenjun99"},"content":"import exception.DukeException;","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"woowenjun99"},"content":"import parser.Parser;","lastModifiedDate":"2023-02-21"},{"lineNumber":10,"author":{"gitId":"woowenjun99"},"content":"import ui.Ui;","lastModifiedDate":"2023-02-21"},{"lineNumber":11,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"woowenjun99"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-02-21"},{"lineNumber":13,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"woowenjun99"},"content":"  protected static Duke instance;","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"woowenjun99"},"content":"  protected Duke() {","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"woowenjun99"},"content":"  }","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"woowenjun99"},"content":"  /**","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"woowenjun99"},"content":"   * The function that is used to return the instance of Duke. Singleton pattern","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"woowenjun99"},"content":"   * is used.","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"woowenjun99"},"content":"   *","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"woowenjun99"},"content":"   * @return The Duke instance","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"woowenjun99"},"content":"   */","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"woowenjun99"},"content":"  public static Duke getInstance() {","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"woowenjun99"},"content":"    if (instance \u003d\u003d null) {","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"woowenjun99"},"content":"      instance \u003d new Duke();","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"woowenjun99"},"content":"    return instance;","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"woowenjun99"},"content":"  }","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"woowenjun99"},"content":"  private static final TaskController controller \u003d new TaskController();","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"woowenjun99"},"content":"  private static final Parser parser \u003d new Parser();","lastModifiedDate":"2023-02-21"},{"lineNumber":35,"author":{"gitId":"woowenjun99"},"content":"  private static final Ui ui \u003d Ui.getInstance();","lastModifiedDate":"2023-03-02"},{"lineNumber":36,"author":{"gitId":"woowenjun99"},"content":"  private static boolean isRunning \u003d true;","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"woowenjun99"},"content":"  private static void terminate() {","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"woowenjun99"},"content":"    isRunning \u003d false;","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"woowenjun99"},"content":"  }","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"woowenjun99"},"content":"  private static void process(String words) {","lastModifiedDate":"2023-02-16"},{"lineNumber":43,"author":{"gitId":"woowenjun99"},"content":"    try {","lastModifiedDate":"2023-02-23"},{"lineNumber":44,"author":{"gitId":"woowenjun99"},"content":"      HashMap\u003cString, String\u003e dictionary \u003d parser.parse(words);","lastModifiedDate":"2023-02-16"},{"lineNumber":45,"author":{"gitId":"woowenjun99"},"content":"      String command \u003d dictionary.get(Keyword.COMMAND);","lastModifiedDate":"2023-03-02"},{"lineNumber":46,"author":{"gitId":"woowenjun99"},"content":"      processDictionary(dictionary, command);","lastModifiedDate":"2023-03-02"},{"lineNumber":47,"author":{"gitId":"woowenjun99"},"content":"    } catch (DukeException e) {","lastModifiedDate":"2023-03-02"},{"lineNumber":48,"author":{"gitId":"woowenjun99"},"content":"      ui.printMessage(e.getDescription());","lastModifiedDate":"2023-03-02"},{"lineNumber":49,"author":{"gitId":"woowenjun99"},"content":"    } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-02"},{"lineNumber":50,"author":{"gitId":"woowenjun99"},"content":"      ui.printMessage(ErrorMessage.PARSE_INT_ERROR);","lastModifiedDate":"2023-03-02"},{"lineNumber":51,"author":{"gitId":"woowenjun99"},"content":"    } catch (Exception e) {","lastModifiedDate":"2023-03-02"},{"lineNumber":52,"author":{"gitId":"woowenjun99"},"content":"      ui.printMessage(e.getMessage());","lastModifiedDate":"2023-03-02"},{"lineNumber":53,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":54,"author":{"gitId":"woowenjun99"},"content":"  }","lastModifiedDate":"2023-03-02"},{"lineNumber":55,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":56,"author":{"gitId":"woowenjun99"},"content":"  private static void processDictionary(HashMap\u003cString, String\u003e dictionary, String command) throws Exception {","lastModifiedDate":"2023-03-02"},{"lineNumber":57,"author":{"gitId":"woowenjun99"},"content":"    switch (command) {","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"woowenjun99"},"content":"    case Command.DELETE:","lastModifiedDate":"2023-02-17"},{"lineNumber":59,"author":{"gitId":"woowenjun99"},"content":"      handleDelete(dictionary);","lastModifiedDate":"2023-03-02"},{"lineNumber":60,"author":{"gitId":"woowenjun99"},"content":"      break;","lastModifiedDate":"2023-02-17"},{"lineNumber":61,"author":{"gitId":"woowenjun99"},"content":"    case Command.LIST:","lastModifiedDate":"2023-02-04"},{"lineNumber":62,"author":{"gitId":"woowenjun99"},"content":"      controller.listTasks();","lastModifiedDate":"2023-02-04"},{"lineNumber":63,"author":{"gitId":"woowenjun99"},"content":"      break;","lastModifiedDate":"2023-01-23"},{"lineNumber":64,"author":{"gitId":"woowenjun99"},"content":"    case Command.BYE:","lastModifiedDate":"2023-02-04"},{"lineNumber":65,"author":{"gitId":"woowenjun99"},"content":"      terminate();","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"woowenjun99"},"content":"      break;","lastModifiedDate":"2023-01-23"},{"lineNumber":67,"author":{"gitId":"woowenjun99"},"content":"    case Command.TODO:","lastModifiedDate":"2023-02-16"},{"lineNumber":68,"author":{"gitId":"woowenjun99"},"content":"      handleTodo(dictionary);","lastModifiedDate":"2023-03-02"},{"lineNumber":69,"author":{"gitId":"woowenjun99"},"content":"      break;","lastModifiedDate":"2023-02-16"},{"lineNumber":70,"author":{"gitId":"woowenjun99"},"content":"    case Command.MARK:","lastModifiedDate":"2023-02-16"},{"lineNumber":71,"author":{"gitId":"woowenjun99"},"content":"    case Command.UNMARK:","lastModifiedDate":"2023-02-16"},{"lineNumber":72,"author":{"gitId":"woowenjun99"},"content":"      handleMarkOrUnmark(dictionary, command);","lastModifiedDate":"2023-03-02"},{"lineNumber":73,"author":{"gitId":"woowenjun99"},"content":"      break;","lastModifiedDate":"2023-02-16"},{"lineNumber":74,"author":{"gitId":"woowenjun99"},"content":"    case Command.DEADLINE:","lastModifiedDate":"2023-02-16"},{"lineNumber":75,"author":{"gitId":"woowenjun99"},"content":"      handleDeadline(dictionary);","lastModifiedDate":"2023-03-02"},{"lineNumber":76,"author":{"gitId":"woowenjun99"},"content":"      break;","lastModifiedDate":"2023-02-16"},{"lineNumber":77,"author":{"gitId":"woowenjun99"},"content":"    case Command.EVENT:","lastModifiedDate":"2023-02-16"},{"lineNumber":78,"author":{"gitId":"woowenjun99"},"content":"      handleEvent(dictionary);","lastModifiedDate":"2023-03-02"},{"lineNumber":79,"author":{"gitId":"woowenjun99"},"content":"      break;","lastModifiedDate":"2023-02-16"},{"lineNumber":80,"author":{"gitId":"woowenjun99"},"content":"    case Command.FIND:","lastModifiedDate":"2023-02-23"},{"lineNumber":81,"author":{"gitId":"woowenjun99"},"content":"      handleFind(dictionary);","lastModifiedDate":"2023-03-02"},{"lineNumber":82,"author":{"gitId":"woowenjun99"},"content":"      break;","lastModifiedDate":"2023-02-23"},{"lineNumber":83,"author":{"gitId":"woowenjun99"},"content":"    default:","lastModifiedDate":"2023-02-16"},{"lineNumber":84,"author":{"gitId":"woowenjun99"},"content":"      throw new DukeException(ErrorMessage.INVALID_COMMAND);","lastModifiedDate":"2023-03-02"},{"lineNumber":85,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":86,"author":{"gitId":"woowenjun99"},"content":"  }","lastModifiedDate":"2023-02-04"},{"lineNumber":87,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":88,"author":{"gitId":"woowenjun99"},"content":"  private static void handleFind(HashMap\u003cString, String\u003e dictionary) throws Exception {","lastModifiedDate":"2023-03-02"},{"lineNumber":89,"author":{"gitId":"woowenjun99"},"content":"    String keyword \u003d dictionary.get(Keyword.KEYWORD);","lastModifiedDate":"2023-03-02"},{"lineNumber":90,"author":{"gitId":"woowenjun99"},"content":"    controller.findTask(keyword);","lastModifiedDate":"2023-03-02"},{"lineNumber":91,"author":{"gitId":"woowenjun99"},"content":"  }","lastModifiedDate":"2023-03-02"},{"lineNumber":92,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":93,"author":{"gitId":"woowenjun99"},"content":"  private static void handleTodo(HashMap\u003cString, String\u003e dictionary) {","lastModifiedDate":"2023-03-02"},{"lineNumber":94,"author":{"gitId":"woowenjun99"},"content":"    String description;","lastModifiedDate":"2023-03-02"},{"lineNumber":95,"author":{"gitId":"woowenjun99"},"content":"    description \u003d dictionary.get(Keyword.DESCRIPTION);","lastModifiedDate":"2023-03-02"},{"lineNumber":96,"author":{"gitId":"woowenjun99"},"content":"    controller.addTodoTask(description);","lastModifiedDate":"2023-03-02"},{"lineNumber":97,"author":{"gitId":"woowenjun99"},"content":"  }","lastModifiedDate":"2023-03-02"},{"lineNumber":98,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":99,"author":{"gitId":"woowenjun99"},"content":"  private static void handleDeadline(HashMap\u003cString, String\u003e dictionary) {","lastModifiedDate":"2023-03-02"},{"lineNumber":100,"author":{"gitId":"woowenjun99"},"content":"    String description \u003d dictionary.get(Keyword.DESCRIPTION);","lastModifiedDate":"2023-03-02"},{"lineNumber":101,"author":{"gitId":"woowenjun99"},"content":"    String deadline \u003d dictionary.get(Keyword.DEADLINE);","lastModifiedDate":"2023-03-02"},{"lineNumber":102,"author":{"gitId":"woowenjun99"},"content":"    controller.addDeadlineTask(description, deadline);","lastModifiedDate":"2023-03-02"},{"lineNumber":103,"author":{"gitId":"woowenjun99"},"content":"  }","lastModifiedDate":"2023-03-02"},{"lineNumber":104,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":105,"author":{"gitId":"woowenjun99"},"content":"  private static void handleEvent(HashMap\u003cString, String\u003e dictionary) {","lastModifiedDate":"2023-03-02"},{"lineNumber":106,"author":{"gitId":"woowenjun99"},"content":"    String description \u003d dictionary.get(Keyword.DESCRIPTION);","lastModifiedDate":"2023-03-02"},{"lineNumber":107,"author":{"gitId":"woowenjun99"},"content":"    String start \u003d dictionary.get(Keyword.START);","lastModifiedDate":"2023-03-02"},{"lineNumber":108,"author":{"gitId":"woowenjun99"},"content":"    String end \u003d dictionary.get(Keyword.END);","lastModifiedDate":"2023-03-02"},{"lineNumber":109,"author":{"gitId":"woowenjun99"},"content":"    controller.addEventTask(description, start, end);","lastModifiedDate":"2023-03-02"},{"lineNumber":110,"author":{"gitId":"woowenjun99"},"content":"  }","lastModifiedDate":"2023-03-02"},{"lineNumber":111,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":112,"author":{"gitId":"woowenjun99"},"content":"  private static void handleMarkOrUnmark(HashMap\u003cString, String\u003e dictionary, String command) throws Exception {","lastModifiedDate":"2023-03-02"},{"lineNumber":113,"author":{"gitId":"woowenjun99"},"content":"    String index \u003d dictionary.get(Keyword.INDEX);","lastModifiedDate":"2023-03-02"},{"lineNumber":114,"author":{"gitId":"woowenjun99"},"content":"    int position \u003d Integer.parseInt(index) - 1;","lastModifiedDate":"2023-03-02"},{"lineNumber":115,"author":{"gitId":"woowenjun99"},"content":"    boolean isMark \u003d command.equals(Command.MARK);","lastModifiedDate":"2023-03-02"},{"lineNumber":116,"author":{"gitId":"woowenjun99"},"content":"    controller.toggleMark(isMark, position);","lastModifiedDate":"2023-03-02"},{"lineNumber":117,"author":{"gitId":"woowenjun99"},"content":"  }","lastModifiedDate":"2023-03-02"},{"lineNumber":118,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":119,"author":{"gitId":"woowenjun99"},"content":"  private static void handleDelete(HashMap\u003cString, String\u003e dictionary) throws Exception {","lastModifiedDate":"2023-03-02"},{"lineNumber":120,"author":{"gitId":"woowenjun99"},"content":"    String index \u003d dictionary.get(Keyword.INDEX);","lastModifiedDate":"2023-03-02"},{"lineNumber":121,"author":{"gitId":"woowenjun99"},"content":"    int position \u003d Integer.parseInt(index) - 1;","lastModifiedDate":"2023-03-02"},{"lineNumber":122,"author":{"gitId":"woowenjun99"},"content":"    controller.deleteTask(position);","lastModifiedDate":"2023-03-02"},{"lineNumber":123,"author":{"gitId":"woowenjun99"},"content":"    ui.printMessage(Message.TASK_DELETED);","lastModifiedDate":"2023-03-02"},{"lineNumber":124,"author":{"gitId":"woowenjun99"},"content":"  }","lastModifiedDate":"2023-02-04"},{"lineNumber":125,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":126,"author":{"gitId":"woowenjun99"},"content":"  /**","lastModifiedDate":"2023-02-23"},{"lineNumber":127,"author":{"gitId":"woowenjun99"},"content":"   * This function is where the bot will run and when we can do whatever we","lastModifiedDate":"2023-03-02"},{"lineNumber":128,"author":{"gitId":"woowenjun99"},"content":"   * want with it.","lastModifiedDate":"2023-03-02"},{"lineNumber":129,"author":{"gitId":"woowenjun99"},"content":"   */","lastModifiedDate":"2023-02-23"},{"lineNumber":130,"author":{"gitId":"woowenjun99"},"content":"  public void run() {","lastModifiedDate":"2023-02-04"},{"lineNumber":131,"author":{"gitId":"woowenjun99"},"content":"    ui.printWelcomeMessage();","lastModifiedDate":"2023-02-21"},{"lineNumber":132,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":133,"author":{"gitId":"woowenjun99"},"content":"    while (isRunning) {","lastModifiedDate":"2023-02-04"},{"lineNumber":134,"author":{"gitId":"woowenjun99"},"content":"      String input \u003d ui.readInput();","lastModifiedDate":"2023-02-21"},{"lineNumber":135,"author":{"gitId":"woowenjun99"},"content":"      process(input);","lastModifiedDate":"2023-02-21"},{"lineNumber":136,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":137,"author":{"gitId":"woowenjun99"},"content":"    ui.printGoodbyeMessage();","lastModifiedDate":"2023-02-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2019-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"woowenjun99":136,"-":3}},{"path":"src/main/java/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"woowenjun99"},"content":"package exception;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"woowenjun99"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"woowenjun99"},"content":" * An exception for the Chatbot","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"woowenjun99"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"woowenjun99"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"woowenjun99"},"content":"    protected String description;","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"woowenjun99"},"content":"    public DukeException(String description) {","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"woowenjun99"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"woowenjun99"},"content":"    public String getDescription() {","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"woowenjun99"},"content":"        return this.description;","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"woowenjun99"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"woowenjun99":16}},{"path":"src/main/java/model/storage/JsonStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"woowenjun99"},"content":"package model.storage;","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"woowenjun99"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"woowenjun99"},"content":" * Uses the following model to store the data in the format inside the JSON file.","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"woowenjun99"},"content":" * The builder design pattern is used here to grant flexibility when creating a","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"woowenjun99"},"content":" * JSON Storage object.","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"woowenjun99"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"woowenjun99"},"content":"public class JsonStorage {","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"woowenjun99"},"content":"  public void setDescription(String description) {","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"woowenjun99"},"content":"    this.description \u003d description;","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"woowenjun99"},"content":"  }","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"woowenjun99"},"content":"  public void setMarked(boolean isMarked) {","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"woowenjun99"},"content":"    this.isMarked \u003d isMarked;","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"woowenjun99"},"content":"  }","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"woowenjun99"},"content":"  public void setStart(String start) {","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"woowenjun99"},"content":"    this.start \u003d start;","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"woowenjun99"},"content":"  }","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"woowenjun99"},"content":"  public void setEnd(String end) {","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"woowenjun99"},"content":"    this.end \u003d end;","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"woowenjun99"},"content":"  }","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"woowenjun99"},"content":"  public void setType(String type) {","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"woowenjun99"},"content":"    this.type \u003d type;","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"woowenjun99"},"content":"  }","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"woowenjun99"},"content":"  public String getDescription() {","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"woowenjun99"},"content":"    return description;","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"woowenjun99"},"content":"  }","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"woowenjun99"},"content":"  public String getType() {","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"woowenjun99"},"content":"    return type;","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"woowenjun99"},"content":"  }","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":39,"author":{"gitId":"woowenjun99"},"content":"  public boolean isMarked() {","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"woowenjun99"},"content":"    return isMarked;","lastModifiedDate":"2023-03-02"},{"lineNumber":41,"author":{"gitId":"woowenjun99"},"content":"  }","lastModifiedDate":"2023-02-16"},{"lineNumber":42,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":43,"author":{"gitId":"woowenjun99"},"content":"  public String getStart() {","lastModifiedDate":"2023-02-17"},{"lineNumber":44,"author":{"gitId":"woowenjun99"},"content":"    return start;","lastModifiedDate":"2023-02-17"},{"lineNumber":45,"author":{"gitId":"woowenjun99"},"content":"  }","lastModifiedDate":"2023-02-17"},{"lineNumber":46,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":47,"author":{"gitId":"woowenjun99"},"content":"  public String getEnd() {","lastModifiedDate":"2023-02-17"},{"lineNumber":48,"author":{"gitId":"woowenjun99"},"content":"    return end;","lastModifiedDate":"2023-02-17"},{"lineNumber":49,"author":{"gitId":"woowenjun99"},"content":"  }","lastModifiedDate":"2023-02-17"},{"lineNumber":50,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":51,"author":{"gitId":"woowenjun99"},"content":"  protected String description;","lastModifiedDate":"2023-02-17"},{"lineNumber":52,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":53,"author":{"gitId":"woowenjun99"},"content":"  protected String start;","lastModifiedDate":"2023-02-16"},{"lineNumber":54,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":55,"author":{"gitId":"woowenjun99"},"content":"  protected boolean isMarked;","lastModifiedDate":"2023-03-02"},{"lineNumber":56,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":57,"author":{"gitId":"woowenjun99"},"content":"  protected String end;","lastModifiedDate":"2023-02-16"},{"lineNumber":58,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":59,"author":{"gitId":"woowenjun99"},"content":"  protected String type;","lastModifiedDate":"2023-02-16"},{"lineNumber":60,"author":{"gitId":"woowenjun99"},"content":"}","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"woowenjun99":60}},{"path":"src/main/java/model/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"woowenjun99"},"content":"package model.task;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"woowenjun99"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"woowenjun99"},"content":" * A deadline task","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"woowenjun99"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"woowenjun99"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"woowenjun99"},"content":"    protected String endDate;","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"woowenjun99"},"content":"    public Deadline(String taskName, String endDate) {","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"woowenjun99"},"content":"        super(taskName);","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"woowenjun99"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"woowenjun99"},"content":"    public String getEndDate() {","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"woowenjun99"},"content":"        return endDate;","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"woowenjun99"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"woowenjun99"},"content":"    public String getDescriptionText() {","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"woowenjun99"},"content":"        String symbol \u003d super.isDone() ? \"X\" : \" \";","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"woowenjun99"},"content":"        return String.format(\"[D][%s] %s (by: %s)\",","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"woowenjun99"},"content":"                symbol,","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"woowenjun99"},"content":"                super.getTaskName(),","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"woowenjun99"},"content":"                this.endDate","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"woowenjun99"},"content":"        );","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"woowenjun99"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"woowenjun99":28}},{"path":"src/main/java/model/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"woowenjun99"},"content":"package model.task;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"woowenjun99"},"content":"/**","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"woowenjun99"},"content":" * An event model","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"woowenjun99"},"content":" */","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"woowenjun99"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"woowenjun99"},"content":"    protected String from;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"woowenjun99"},"content":"    protected String to;","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"woowenjun99"},"content":"    public String getTo() {","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"woowenjun99"},"content":"        return to;","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"woowenjun99"},"content":"    public String getFrom() {","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"woowenjun99"},"content":"        return from;","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"woowenjun99"},"content":"    public Event(String taskName, String from, String to) {","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"woowenjun99"},"content":"        super(taskName);","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"woowenjun99"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"woowenjun99"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"woowenjun99"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"woowenjun99"},"content":"    public String getDescriptionText() {","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"woowenjun99"},"content":"        String symbol \u003d super.isDone() ? \"X\" : \" \";","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"woowenjun99"},"content":"        return String.format(\"[E][%s] %s (from: %s to: %s)\",","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"woowenjun99"},"content":"                symbol,","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"woowenjun99"},"content":"                super.getTaskName(),","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"woowenjun99"},"content":"                this.from,","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"woowenjun99"},"content":"                this.to","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"woowenjun99"},"content":"        );","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"woowenjun99"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"woowenjun99":34}},{"path":"src/main/java/model/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"woowenjun99"},"content":"package model.task;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"woowenjun99"},"content":"/**","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"woowenjun99"},"content":" * The task class which is the super class for Deadline, Event and Todo","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"woowenjun99"},"content":" */","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"woowenjun99"},"content":"public abstract class Task {","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"woowenjun99"},"content":"    private boolean isDone;","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"woowenjun99"},"content":"    private final String taskName;","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"woowenjun99"},"content":"    public Task(String taskName) {","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"woowenjun99"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"woowenjun99"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"woowenjun99"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"woowenjun99"},"content":"        return isDone;","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"woowenjun99"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"woowenjun99"},"content":"        isDone \u003d done;","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"woowenjun99"},"content":"    public String getTaskName() {","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"woowenjun99"},"content":"        return taskName;","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"woowenjun99"},"content":"    public abstract String getDescriptionText();","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"woowenjun99"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"woowenjun99":28}},{"path":"src/main/java/model/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"woowenjun99"},"content":"package model.task;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"woowenjun99"},"content":"/**","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"woowenjun99"},"content":" * A Todo task that extends the Task","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"woowenjun99"},"content":" */","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"woowenjun99"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"woowenjun99"},"content":"    public Todo(String taskName) {","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"woowenjun99"},"content":"        super(taskName);","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"woowenjun99"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"woowenjun99"},"content":"    public String getDescriptionText() {","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"woowenjun99"},"content":"        String symbol \u003d super.isDone() ? \"X\" : \" \";","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"woowenjun99"},"content":"        return String.format(\"[T][%s] %s\", symbol, super.getTaskName());","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"woowenjun99"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"woowenjun99":17}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"woowenjun99"},"content":"package parser;","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"woowenjun99"},"content":"import constants.Command;","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"woowenjun99"},"content":"import constants.ErrorMessage;","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"woowenjun99"},"content":"import constants.Keyword;","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"woowenjun99"},"content":"import exception.DukeException;","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"woowenjun99"},"content":"import ui.Ui;","lastModifiedDate":"2023-02-21"},{"lineNumber":8,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"woowenjun99"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"woowenjun99"},"content":"import java.util.regex.PatternSyntaxException;","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"woowenjun99"},"content":"public class Parser {","lastModifiedDate":"2023-02-21"},{"lineNumber":13,"author":{"gitId":"woowenjun99"},"content":"    protected final Ui ui \u003d Ui.getInstance();","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"woowenjun99"},"content":"    protected HashMap\u003cString, String\u003e handleTodo(String text) {","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"woowenjun99"},"content":"        HashMap\u003cString, String\u003e dictionary \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"woowenjun99"},"content":"        putTodoPromptInDictionary(text, dictionary);","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"woowenjun99"},"content":"        return dictionary;","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"woowenjun99"},"content":"    private static void putTodoPromptInDictionary(String text, HashMap\u003cString, String\u003e dictionary) {","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"woowenjun99"},"content":"        dictionary.put(Keyword.COMMAND, Command.TODO);","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"woowenjun99"},"content":"        dictionary.put(Keyword.DESCRIPTION, text.trim());","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"woowenjun99"},"content":"    protected HashMap\u003cString, String\u003e handleDeadline(String text) throws DukeException {","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"woowenjun99"},"content":"        try {","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"woowenjun99"},"content":"            HashMap\u003cString, String\u003e dictionary \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"woowenjun99"},"content":"            String[] words \u003d text.split(Keyword.BY);","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"woowenjun99"},"content":"            if (words.length \u003d\u003d 1) {","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"woowenjun99"},"content":"                throw new DukeException(ErrorMessage.INVALID_INPUT);","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"woowenjun99"},"content":"            }","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"woowenjun99"},"content":"            String description \u003d words[0].trim();","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"woowenjun99"},"content":"            String deadline \u003d words[1].trim();","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"woowenjun99"},"content":"            putDeadlinePromptsInDictionary(dictionary, description, deadline);","lastModifiedDate":"2023-03-02"},{"lineNumber":36,"author":{"gitId":"woowenjun99"},"content":"            return dictionary;","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"woowenjun99"},"content":"        } catch (PatternSyntaxException e) {","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"woowenjun99"},"content":"            ui.printMessage(ErrorMessage.NO_DEADLINE_PROVIDED);","lastModifiedDate":"2023-03-02"},{"lineNumber":39,"author":{"gitId":"woowenjun99"},"content":"            return null;","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"woowenjun99"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":42,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":43,"author":{"gitId":"woowenjun99"},"content":"    private static void putDeadlinePromptsInDictionary(","lastModifiedDate":"2023-03-02"},{"lineNumber":44,"author":{"gitId":"woowenjun99"},"content":"            HashMap\u003cString, String\u003e dictionary,","lastModifiedDate":"2023-03-02"},{"lineNumber":45,"author":{"gitId":"woowenjun99"},"content":"            String description,","lastModifiedDate":"2023-03-02"},{"lineNumber":46,"author":{"gitId":"woowenjun99"},"content":"            String deadline","lastModifiedDate":"2023-03-02"},{"lineNumber":47,"author":{"gitId":"woowenjun99"},"content":"    ) {","lastModifiedDate":"2023-03-02"},{"lineNumber":48,"author":{"gitId":"woowenjun99"},"content":"        dictionary.put(Keyword.COMMAND, Command.DEADLINE);","lastModifiedDate":"2023-03-02"},{"lineNumber":49,"author":{"gitId":"woowenjun99"},"content":"        dictionary.put(Keyword.DESCRIPTION, description);","lastModifiedDate":"2023-03-02"},{"lineNumber":50,"author":{"gitId":"woowenjun99"},"content":"        dictionary.put(Keyword.DEADLINE, deadline);","lastModifiedDate":"2023-03-02"},{"lineNumber":51,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":52,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":53,"author":{"gitId":"woowenjun99"},"content":"    protected HashMap\u003cString, String\u003e handleMarkAndDelete(String text, String command) {","lastModifiedDate":"2023-02-17"},{"lineNumber":54,"author":{"gitId":"woowenjun99"},"content":"        HashMap\u003cString, String\u003e dictionary \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-02"},{"lineNumber":55,"author":{"gitId":"woowenjun99"},"content":"        dictionary.put(Keyword.COMMAND, command);","lastModifiedDate":"2023-03-02"},{"lineNumber":56,"author":{"gitId":"woowenjun99"},"content":"        dictionary.put(Keyword.INDEX, text);","lastModifiedDate":"2023-03-02"},{"lineNumber":57,"author":{"gitId":"woowenjun99"},"content":"        return dictionary;","lastModifiedDate":"2023-02-16"},{"lineNumber":58,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":59,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":60,"author":{"gitId":"woowenjun99"},"content":"    protected HashMap\u003cString, String\u003e handleOthers(String command) {","lastModifiedDate":"2023-02-16"},{"lineNumber":61,"author":{"gitId":"woowenjun99"},"content":"        HashMap\u003cString, String\u003e dictionary \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-02"},{"lineNumber":62,"author":{"gitId":"woowenjun99"},"content":"        dictionary.put(Keyword.COMMAND, command);","lastModifiedDate":"2023-03-02"},{"lineNumber":63,"author":{"gitId":"woowenjun99"},"content":"        return dictionary;","lastModifiedDate":"2023-02-16"},{"lineNumber":64,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":65,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":66,"author":{"gitId":"woowenjun99"},"content":"    protected HashMap\u003cString, String\u003e handleEvent(String text) throws DukeException {","lastModifiedDate":"2023-02-23"},{"lineNumber":67,"author":{"gitId":"woowenjun99"},"content":"        HashMap\u003cString, String\u003e dictionary \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-02"},{"lineNumber":68,"author":{"gitId":"woowenjun99"},"content":"        String[] words \u003d splitInput(text);","lastModifiedDate":"2023-03-02"},{"lineNumber":69,"author":{"gitId":"woowenjun99"},"content":"        validateStartAndEnd(words);","lastModifiedDate":"2023-03-02"},{"lineNumber":70,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":71,"author":{"gitId":"woowenjun99"},"content":"        String start \u003d \"\";","lastModifiedDate":"2023-02-16"},{"lineNumber":72,"author":{"gitId":"woowenjun99"},"content":"        String end \u003d \"\";","lastModifiedDate":"2023-02-16"},{"lineNumber":73,"author":{"gitId":"woowenjun99"},"content":"        String description \u003d \"\";","lastModifiedDate":"2023-02-16"},{"lineNumber":74,"author":{"gitId":"woowenjun99"},"content":"        for (int i \u003d 0; i \u003c 3; ++i) {","lastModifiedDate":"2023-03-02"},{"lineNumber":75,"author":{"gitId":"woowenjun99"},"content":"            if (words[i].startsWith(Keyword.TO)) {","lastModifiedDate":"2023-03-02"},{"lineNumber":76,"author":{"gitId":"woowenjun99"},"content":"                words[i] \u003d words[i].substring(Keyword.TO.length()).trim();","lastModifiedDate":"2023-03-02"},{"lineNumber":77,"author":{"gitId":"woowenjun99"},"content":"                end \u003d words[i];","lastModifiedDate":"2023-03-02"},{"lineNumber":78,"author":{"gitId":"woowenjun99"},"content":"            } else if (words[i].startsWith(Keyword.FROM)) {","lastModifiedDate":"2023-03-02"},{"lineNumber":79,"author":{"gitId":"woowenjun99"},"content":"                words[i] \u003d words[i].substring(Keyword.FROM.length()).trim();","lastModifiedDate":"2023-03-02"},{"lineNumber":80,"author":{"gitId":"woowenjun99"},"content":"                start \u003d words[i];","lastModifiedDate":"2023-03-02"},{"lineNumber":81,"author":{"gitId":"woowenjun99"},"content":"            } else {","lastModifiedDate":"2023-03-02"},{"lineNumber":82,"author":{"gitId":"woowenjun99"},"content":"                description \u003d words[i].trim();","lastModifiedDate":"2023-03-02"},{"lineNumber":83,"author":{"gitId":"woowenjun99"},"content":"            }","lastModifiedDate":"2023-03-02"},{"lineNumber":84,"author":{"gitId":"woowenjun99"},"content":"        }","lastModifiedDate":"2023-03-02"},{"lineNumber":85,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":86,"author":{"gitId":"woowenjun99"},"content":"        putEventPromptInDictionary(dictionary, start, end, description);","lastModifiedDate":"2023-03-02"},{"lineNumber":87,"author":{"gitId":"woowenjun99"},"content":"        return dictionary;","lastModifiedDate":"2023-03-02"},{"lineNumber":88,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":89,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":90,"author":{"gitId":"woowenjun99"},"content":"    private static String[] splitInput(String text) throws DukeException {","lastModifiedDate":"2023-03-02"},{"lineNumber":91,"author":{"gitId":"woowenjun99"},"content":"        String[] words \u003d text.split(Keyword.SLASH);","lastModifiedDate":"2023-03-02"},{"lineNumber":92,"author":{"gitId":"woowenjun99"},"content":"        if (words.length !\u003d 3) {","lastModifiedDate":"2023-03-02"},{"lineNumber":93,"author":{"gitId":"woowenjun99"},"content":"            throw new DukeException(ErrorMessage.INVALID_INPUT);","lastModifiedDate":"2023-03-02"},{"lineNumber":94,"author":{"gitId":"woowenjun99"},"content":"        }","lastModifiedDate":"2023-03-02"},{"lineNumber":95,"author":{"gitId":"woowenjun99"},"content":"        return words;","lastModifiedDate":"2023-03-02"},{"lineNumber":96,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":97,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":98,"author":{"gitId":"woowenjun99"},"content":"    private static void putEventPromptInDictionary(","lastModifiedDate":"2023-03-02"},{"lineNumber":99,"author":{"gitId":"woowenjun99"},"content":"            HashMap\u003cString, String\u003e dictionary,","lastModifiedDate":"2023-03-02"},{"lineNumber":100,"author":{"gitId":"woowenjun99"},"content":"            String start,","lastModifiedDate":"2023-03-02"},{"lineNumber":101,"author":{"gitId":"woowenjun99"},"content":"            String end,","lastModifiedDate":"2023-03-02"},{"lineNumber":102,"author":{"gitId":"woowenjun99"},"content":"            String description","lastModifiedDate":"2023-03-02"},{"lineNumber":103,"author":{"gitId":"woowenjun99"},"content":"    ) {","lastModifiedDate":"2023-03-02"},{"lineNumber":104,"author":{"gitId":"woowenjun99"},"content":"        dictionary.put(Keyword.COMMAND, Command.EVENT);","lastModifiedDate":"2023-03-02"},{"lineNumber":105,"author":{"gitId":"woowenjun99"},"content":"        dictionary.put(Keyword.START, start);","lastModifiedDate":"2023-03-02"},{"lineNumber":106,"author":{"gitId":"woowenjun99"},"content":"        dictionary.put(Keyword.END, end);","lastModifiedDate":"2023-03-02"},{"lineNumber":107,"author":{"gitId":"woowenjun99"},"content":"        dictionary.put(Keyword.DESCRIPTION, description);","lastModifiedDate":"2023-03-02"},{"lineNumber":108,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":109,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":110,"author":{"gitId":"woowenjun99"},"content":"    private static void validateStartAndEnd(String[] words) throws DukeException {","lastModifiedDate":"2023-03-02"},{"lineNumber":111,"author":{"gitId":"woowenjun99"},"content":"        int numOfStart \u003d 0;","lastModifiedDate":"2023-02-16"},{"lineNumber":112,"author":{"gitId":"woowenjun99"},"content":"        int numOfEnd \u003d 0;","lastModifiedDate":"2023-02-16"},{"lineNumber":113,"author":{"gitId":"woowenjun99"},"content":"        for (String word : words) {","lastModifiedDate":"2023-02-16"},{"lineNumber":114,"author":{"gitId":"woowenjun99"},"content":"            if (word.startsWith(Keyword.TO)) {","lastModifiedDate":"2023-03-02"},{"lineNumber":115,"author":{"gitId":"woowenjun99"},"content":"                numOfEnd++;","lastModifiedDate":"2023-02-16"},{"lineNumber":116,"author":{"gitId":"woowenjun99"},"content":"            } else if (word.startsWith(Keyword.FROM)) {","lastModifiedDate":"2023-03-02"},{"lineNumber":117,"author":{"gitId":"woowenjun99"},"content":"                numOfStart++;","lastModifiedDate":"2023-02-16"},{"lineNumber":118,"author":{"gitId":"woowenjun99"},"content":"            }","lastModifiedDate":"2023-02-16"},{"lineNumber":119,"author":{"gitId":"woowenjun99"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":120,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":121,"author":{"gitId":"woowenjun99"},"content":"        if (numOfEnd \u003d\u003d 0 \u0026\u0026 numOfStart \u003d\u003d 0) {","lastModifiedDate":"2023-02-16"},{"lineNumber":122,"author":{"gitId":"woowenjun99"},"content":"            throw new DukeException(ErrorMessage.NO_START_OR_END);","lastModifiedDate":"2023-03-02"},{"lineNumber":123,"author":{"gitId":"woowenjun99"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":124,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":125,"author":{"gitId":"woowenjun99"},"content":"        if (numOfEnd \u003e 1 || numOfStart \u003e 1) {","lastModifiedDate":"2023-02-16"},{"lineNumber":126,"author":{"gitId":"woowenjun99"},"content":"            throw new DukeException(ErrorMessage.NO_DESCRIPTION_PROVIDED);","lastModifiedDate":"2023-03-02"},{"lineNumber":127,"author":{"gitId":"woowenjun99"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":128,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":129,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":130,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":131,"author":{"gitId":"woowenjun99"},"content":"    protected HashMap\u003cString, String\u003e handleFind(String keyword) {","lastModifiedDate":"2023-02-23"},{"lineNumber":132,"author":{"gitId":"woowenjun99"},"content":"        HashMap\u003cString, String\u003e dictionary \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-02"},{"lineNumber":133,"author":{"gitId":"woowenjun99"},"content":"        keyword \u003d keyword.trim();","lastModifiedDate":"2023-02-23"},{"lineNumber":134,"author":{"gitId":"woowenjun99"},"content":"        dictionary.put(Keyword.COMMAND, Command.FIND);","lastModifiedDate":"2023-03-02"},{"lineNumber":135,"author":{"gitId":"woowenjun99"},"content":"        dictionary.put(Keyword.KEYWORD, keyword);","lastModifiedDate":"2023-03-02"},{"lineNumber":136,"author":{"gitId":"woowenjun99"},"content":"        return dictionary;","lastModifiedDate":"2023-02-23"},{"lineNumber":137,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":138,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":139,"author":{"gitId":"woowenjun99"},"content":"    public HashMap\u003cString, String\u003e parse(String input) throws DukeException {","lastModifiedDate":"2023-02-23"},{"lineNumber":140,"author":{"gitId":"woowenjun99"},"content":"        input \u003d input.trim();","lastModifiedDate":"2023-02-16"},{"lineNumber":141,"author":{"gitId":"woowenjun99"},"content":"        String[] words \u003d input.split(Keyword.SPACE, 2);","lastModifiedDate":"2023-03-02"},{"lineNumber":142,"author":{"gitId":"woowenjun99"},"content":"        String command \u003d words[0];","lastModifiedDate":"2023-02-16"},{"lineNumber":143,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":144,"author":{"gitId":"woowenjun99"},"content":"        switch (command) {","lastModifiedDate":"2023-02-16"},{"lineNumber":145,"author":{"gitId":"woowenjun99"},"content":"        case Command.FIND:","lastModifiedDate":"2023-02-23"},{"lineNumber":146,"author":{"gitId":"woowenjun99"},"content":"            return handleFind(words[1]);","lastModifiedDate":"2023-02-23"},{"lineNumber":147,"author":{"gitId":"woowenjun99"},"content":"        case Command.LIST:","lastModifiedDate":"2023-02-16"},{"lineNumber":148,"author":{"gitId":"woowenjun99"},"content":"        case Command.BYE:","lastModifiedDate":"2023-02-16"},{"lineNumber":149,"author":{"gitId":"woowenjun99"},"content":"            return handleOthers(command);","lastModifiedDate":"2023-02-16"},{"lineNumber":150,"author":{"gitId":"woowenjun99"},"content":"        case Command.TODO:","lastModifiedDate":"2023-02-16"},{"lineNumber":151,"author":{"gitId":"woowenjun99"},"content":"            return handleTodo(words[1]);","lastModifiedDate":"2023-02-16"},{"lineNumber":152,"author":{"gitId":"woowenjun99"},"content":"        case Command.MARK:","lastModifiedDate":"2023-02-16"},{"lineNumber":153,"author":{"gitId":"woowenjun99"},"content":"        case Command.UNMARK:","lastModifiedDate":"2023-02-16"},{"lineNumber":154,"author":{"gitId":"woowenjun99"},"content":"        case Command.DELETE:","lastModifiedDate":"2023-02-17"},{"lineNumber":155,"author":{"gitId":"woowenjun99"},"content":"            if (words.length \u003d\u003d 1) {","lastModifiedDate":"2023-03-02"},{"lineNumber":156,"author":{"gitId":"woowenjun99"},"content":"                throw new DukeException(ErrorMessage.INVALID_INDEX);","lastModifiedDate":"2023-03-02"},{"lineNumber":157,"author":{"gitId":"woowenjun99"},"content":"            }","lastModifiedDate":"2023-03-02"},{"lineNumber":158,"author":{"gitId":"woowenjun99"},"content":"            return handleMarkAndDelete(words[1], command);","lastModifiedDate":"2023-02-17"},{"lineNumber":159,"author":{"gitId":"woowenjun99"},"content":"        case Command.DEADLINE:","lastModifiedDate":"2023-02-16"},{"lineNumber":160,"author":{"gitId":"woowenjun99"},"content":"            return handleDeadline(words[1]);","lastModifiedDate":"2023-02-16"},{"lineNumber":161,"author":{"gitId":"woowenjun99"},"content":"        case Command.EVENT:","lastModifiedDate":"2023-02-16"},{"lineNumber":162,"author":{"gitId":"woowenjun99"},"content":"            return handleEvent(words[1]);","lastModifiedDate":"2023-02-16"},{"lineNumber":163,"author":{"gitId":"woowenjun99"},"content":"        default:","lastModifiedDate":"2023-02-23"},{"lineNumber":164,"author":{"gitId":"woowenjun99"},"content":"            throw new DukeException(ErrorMessage.UNKNOWN_COMMAND);","lastModifiedDate":"2023-03-02"},{"lineNumber":165,"author":{"gitId":"woowenjun99"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":166,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":167,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":168,"author":{"gitId":"woowenjun99"},"content":"}","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"woowenjun99":168}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"woowenjun99"},"content":"package storage;","lastModifiedDate":"2023-02-21"},{"lineNumber":2,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"woowenjun99"},"content":"import com.google.gson.Gson;","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"woowenjun99"},"content":"import constants.Command;","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"woowenjun99"},"content":"import constants.ErrorMessage;","lastModifiedDate":"2023-02-21"},{"lineNumber":6,"author":{"gitId":"woowenjun99"},"content":"import constants.Keyword;","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"woowenjun99"},"content":"import controller.TaskController;","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"woowenjun99"},"content":"import model.storage.JsonStorage;","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"woowenjun99"},"content":"import model.task.Deadline;","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"woowenjun99"},"content":"import model.task.Event;","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"woowenjun99"},"content":"import model.task.Task;","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"woowenjun99"},"content":"import model.task.Todo;","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"woowenjun99"},"content":"import ui.Ui;","lastModifiedDate":"2023-02-21"},{"lineNumber":14,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"woowenjun99"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"woowenjun99"},"content":"import java.io.File;","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"woowenjun99"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"woowenjun99"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"woowenjun99"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"woowenjun99"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"woowenjun99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-21"},{"lineNumber":22,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":23,"author":{"gitId":"woowenjun99"},"content":"public class Storage {","lastModifiedDate":"2023-02-21"},{"lineNumber":24,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"woowenjun99"},"content":"  protected static Storage instance \u003d null;","lastModifiedDate":"2023-02-21"},{"lineNumber":26,"author":{"gitId":"woowenjun99"},"content":"  protected static final String FILE_NAME \u003d Keyword.FILE_NAME;","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"woowenjun99"},"content":"  protected static final TaskController taskController \u003d new TaskController();","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"woowenjun99"},"content":"  protected static final Gson gson \u003d new Gson();","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"woowenjun99"},"content":"  protected static File file \u003d new File(FILE_NAME);","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"woowenjun99"},"content":"  protected static Ui ui \u003d Ui.getInstance();","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"woowenjun99"},"content":"  /**","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"woowenjun99"},"content":"   * This function is used to create a file if it does not exist. This helps","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"woowenjun99"},"content":"   * the user to reduce the trouble of having to create his own file and","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"woowenjun99"},"content":"   * creating it in the incorrect location.","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"woowenjun99"},"content":"   */","lastModifiedDate":"2023-02-12"},{"lineNumber":37,"author":{"gitId":"woowenjun99"},"content":"  protected static void createFileIfNotExist() {","lastModifiedDate":"2023-02-12"},{"lineNumber":38,"author":{"gitId":"woowenjun99"},"content":"    try {","lastModifiedDate":"2023-02-12"},{"lineNumber":39,"author":{"gitId":"woowenjun99"},"content":"      if (file.createNewFile()) {","lastModifiedDate":"2023-03-02"},{"lineNumber":40,"author":{"gitId":"woowenjun99"},"content":"        FileWriter writer \u003d new FileWriter(FILE_NAME);","lastModifiedDate":"2023-02-25"},{"lineNumber":41,"author":{"gitId":"woowenjun99"},"content":"        writer.write(Keyword.EMPTY_ARRAY);","lastModifiedDate":"2023-03-02"},{"lineNumber":42,"author":{"gitId":"woowenjun99"},"content":"        writer.close();","lastModifiedDate":"2023-02-25"},{"lineNumber":43,"author":{"gitId":"woowenjun99"},"content":"      }","lastModifiedDate":"2023-02-25"},{"lineNumber":44,"author":{"gitId":"woowenjun99"},"content":"    } catch (IOException e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":45,"author":{"gitId":"woowenjun99"},"content":"      ui.printMessage(ErrorMessage.IO_EXCEPTION_ERROR);","lastModifiedDate":"2023-03-02"},{"lineNumber":46,"author":{"gitId":"woowenjun99"},"content":"      e.printStackTrace();","lastModifiedDate":"2023-02-12"},{"lineNumber":47,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":48,"author":{"gitId":"woowenjun99"},"content":"  }","lastModifiedDate":"2023-02-12"},{"lineNumber":49,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":50,"author":{"gitId":"woowenjun99"},"content":"  /**","lastModifiedDate":"2023-02-12"},{"lineNumber":51,"author":{"gitId":"woowenjun99"},"content":"   * This function is used to read from an existing file. In order to reduce","lastModifiedDate":"2023-02-12"},{"lineNumber":52,"author":{"gitId":"woowenjun99"},"content":"   * the possibility of file does not exist, I will forcefully create a new","lastModifiedDate":"2023-02-12"},{"lineNumber":53,"author":{"gitId":"woowenjun99"},"content":"   * file prior to reading.","lastModifiedDate":"2023-02-12"},{"lineNumber":54,"author":{"gitId":"woowenjun99"},"content":"   */","lastModifiedDate":"2023-02-12"},{"lineNumber":55,"author":{"gitId":"woowenjun99"},"content":"  public void readFromFile() {","lastModifiedDate":"2023-02-17"},{"lineNumber":56,"author":{"gitId":"woowenjun99"},"content":"    try {","lastModifiedDate":"2023-02-12"},{"lineNumber":57,"author":{"gitId":"woowenjun99"},"content":"      createFileIfNotExist();","lastModifiedDate":"2023-02-12"},{"lineNumber":58,"author":{"gitId":"woowenjun99"},"content":"      BufferedReader br \u003d new BufferedReader(new FileReader(FILE_NAME));","lastModifiedDate":"2023-02-16"},{"lineNumber":59,"author":{"gitId":"woowenjun99"},"content":"      JsonStorage[] x \u003d gson.fromJson(br, JsonStorage[].class);","lastModifiedDate":"2023-02-16"},{"lineNumber":60,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":61,"author":{"gitId":"woowenjun99"},"content":"      for (JsonStorage item : x) {","lastModifiedDate":"2023-02-16"},{"lineNumber":62,"author":{"gitId":"woowenjun99"},"content":"        String type \u003d item.getType();","lastModifiedDate":"2023-02-16"},{"lineNumber":63,"author":{"gitId":"woowenjun99"},"content":"        addTaskToTaskList(item, type);","lastModifiedDate":"2023-03-02"},{"lineNumber":64,"author":{"gitId":"woowenjun99"},"content":"      }","lastModifiedDate":"2023-03-02"},{"lineNumber":65,"author":{"gitId":"woowenjun99"},"content":"    } catch (FileNotFoundException e) {","lastModifiedDate":"2023-03-02"},{"lineNumber":66,"author":{"gitId":"woowenjun99"},"content":"      ui.printMessage(ErrorMessage.FOUND_NOT_FOUND_EXCEPTION);","lastModifiedDate":"2023-03-02"},{"lineNumber":67,"author":{"gitId":"woowenjun99"},"content":"    } catch (Exception e) {","lastModifiedDate":"2023-03-02"},{"lineNumber":68,"author":{"gitId":"woowenjun99"},"content":"      ui.printMessage(e.getMessage());","lastModifiedDate":"2023-03-02"},{"lineNumber":69,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":70,"author":{"gitId":"woowenjun99"},"content":"  }","lastModifiedDate":"2023-03-02"},{"lineNumber":71,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":72,"author":{"gitId":"woowenjun99"},"content":"  private static void addTaskToTaskList(JsonStorage item, String type) {","lastModifiedDate":"2023-03-02"},{"lineNumber":73,"author":{"gitId":"woowenjun99"},"content":"    switch (type) {","lastModifiedDate":"2023-02-16"},{"lineNumber":74,"author":{"gitId":"woowenjun99"},"content":"    case Command.TODO:","lastModifiedDate":"2023-03-02"},{"lineNumber":75,"author":{"gitId":"woowenjun99"},"content":"        Todo todo \u003d new Todo(item.getDescription());","lastModifiedDate":"2023-02-16"},{"lineNumber":76,"author":{"gitId":"woowenjun99"},"content":"        todo.setDone(item.isMarked());","lastModifiedDate":"2023-03-02"},{"lineNumber":77,"author":{"gitId":"woowenjun99"},"content":"        taskController.manuallyAdd(todo);","lastModifiedDate":"2023-02-16"},{"lineNumber":78,"author":{"gitId":"woowenjun99"},"content":"        break;","lastModifiedDate":"2023-02-17"},{"lineNumber":79,"author":{"gitId":"woowenjun99"},"content":"    case Command.EVENT:","lastModifiedDate":"2023-03-02"},{"lineNumber":80,"author":{"gitId":"woowenjun99"},"content":"        Event event \u003d new Event(","lastModifiedDate":"2023-02-21"},{"lineNumber":81,"author":{"gitId":"woowenjun99"},"content":"          item.getDescription(),","lastModifiedDate":"2023-02-21"},{"lineNumber":82,"author":{"gitId":"woowenjun99"},"content":"          item.getStart(),","lastModifiedDate":"2023-02-21"},{"lineNumber":83,"author":{"gitId":"woowenjun99"},"content":"          item.getEnd()","lastModifiedDate":"2023-02-21"},{"lineNumber":84,"author":{"gitId":"woowenjun99"},"content":"        );","lastModifiedDate":"2023-02-21"},{"lineNumber":85,"author":{"gitId":"woowenjun99"},"content":"        event.setDone(item.isMarked());","lastModifiedDate":"2023-03-02"},{"lineNumber":86,"author":{"gitId":"woowenjun99"},"content":"        taskController.manuallyAdd(event);","lastModifiedDate":"2023-02-17"},{"lineNumber":87,"author":{"gitId":"woowenjun99"},"content":"        break;","lastModifiedDate":"2023-02-17"},{"lineNumber":88,"author":{"gitId":"woowenjun99"},"content":"      default:","lastModifiedDate":"2023-02-16"},{"lineNumber":89,"author":{"gitId":"woowenjun99"},"content":"        Deadline deadline \u003d new Deadline(","lastModifiedDate":"2023-02-21"},{"lineNumber":90,"author":{"gitId":"woowenjun99"},"content":"          item.getDescription(),","lastModifiedDate":"2023-02-21"},{"lineNumber":91,"author":{"gitId":"woowenjun99"},"content":"          item.getEnd()","lastModifiedDate":"2023-02-21"},{"lineNumber":92,"author":{"gitId":"woowenjun99"},"content":"        );","lastModifiedDate":"2023-02-21"},{"lineNumber":93,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":94,"author":{"gitId":"woowenjun99"},"content":"        deadline.setDone(item.isMarked());","lastModifiedDate":"2023-03-02"},{"lineNumber":95,"author":{"gitId":"woowenjun99"},"content":"        taskController.manuallyAdd(deadline);","lastModifiedDate":"2023-02-17"},{"lineNumber":96,"author":{"gitId":"woowenjun99"},"content":"        break;","lastModifiedDate":"2023-02-16"},{"lineNumber":97,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":98,"author":{"gitId":"woowenjun99"},"content":"  }","lastModifiedDate":"2023-02-16"},{"lineNumber":99,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":100,"author":{"gitId":"woowenjun99"},"content":"  /**","lastModifiedDate":"2023-02-24"},{"lineNumber":101,"author":{"gitId":"woowenjun99"},"content":"   * This function rewrites the whole JSON file based on the tasks provided.","lastModifiedDate":"2023-03-02"},{"lineNumber":102,"author":{"gitId":"woowenjun99"},"content":"   *","lastModifiedDate":"2023-02-24"},{"lineNumber":103,"author":{"gitId":"woowenjun99"},"content":"   * @param tasks The array list from the {@code Storage} class.","lastModifiedDate":"2023-03-02"},{"lineNumber":104,"author":{"gitId":"woowenjun99"},"content":"   */","lastModifiedDate":"2023-02-24"},{"lineNumber":105,"author":{"gitId":"woowenjun99"},"content":"  public void updateFile(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-17"},{"lineNumber":106,"author":{"gitId":"woowenjun99"},"content":"    ArrayList\u003cJsonStorage\u003e items \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-02"},{"lineNumber":107,"author":{"gitId":"woowenjun99"},"content":"    saveItemToItemsList(tasks, items);","lastModifiedDate":"2023-03-02"},{"lineNumber":108,"author":{"gitId":"woowenjun99"},"content":"    String json \u003d gson.toJson(items);","lastModifiedDate":"2023-03-02"},{"lineNumber":109,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":110,"author":{"gitId":"woowenjun99"},"content":"    try {","lastModifiedDate":"2023-03-02"},{"lineNumber":111,"author":{"gitId":"woowenjun99"},"content":"      FileWriter writer \u003d new FileWriter(FILE_NAME);","lastModifiedDate":"2023-03-02"},{"lineNumber":112,"author":{"gitId":"woowenjun99"},"content":"      writer.write(json);","lastModifiedDate":"2023-03-02"},{"lineNumber":113,"author":{"gitId":"woowenjun99"},"content":"      writer.close();","lastModifiedDate":"2023-03-02"},{"lineNumber":114,"author":{"gitId":"woowenjun99"},"content":"    } catch (IOException e) {","lastModifiedDate":"2023-03-02"},{"lineNumber":115,"author":{"gitId":"woowenjun99"},"content":"      ui.printMessage(ErrorMessage.IO_EXCEPTION_ERROR);","lastModifiedDate":"2023-03-02"},{"lineNumber":116,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":117,"author":{"gitId":"woowenjun99"},"content":"  }","lastModifiedDate":"2023-03-02"},{"lineNumber":118,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":119,"author":{"gitId":"woowenjun99"},"content":"  private static void saveItemToItemsList(ArrayList\u003cTask\u003e tasks, ArrayList\u003cJsonStorage\u003e items) {","lastModifiedDate":"2023-03-02"},{"lineNumber":120,"author":{"gitId":"woowenjun99"},"content":"    for (Task task : tasks) {","lastModifiedDate":"2023-02-17"},{"lineNumber":121,"author":{"gitId":"woowenjun99"},"content":"      JsonStorage item \u003d new JsonStorage();","lastModifiedDate":"2023-03-02"},{"lineNumber":122,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":123,"author":{"gitId":"woowenjun99"},"content":"      // Set the two properties as they are common for all types of task.","lastModifiedDate":"2023-03-02"},{"lineNumber":124,"author":{"gitId":"woowenjun99"},"content":"      item.setDescription(task.getTaskName());","lastModifiedDate":"2023-03-02"},{"lineNumber":125,"author":{"gitId":"woowenjun99"},"content":"      item.setMarked(task.isDone());","lastModifiedDate":"2023-03-02"},{"lineNumber":126,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":127,"author":{"gitId":"woowenjun99"},"content":"      // Set the properties based on the type of task.","lastModifiedDate":"2023-03-02"},{"lineNumber":128,"author":{"gitId":"woowenjun99"},"content":"      if (task instanceof Todo) {","lastModifiedDate":"2023-02-17"},{"lineNumber":129,"author":{"gitId":"woowenjun99"},"content":"        item.setStart(null);","lastModifiedDate":"2023-03-02"},{"lineNumber":130,"author":{"gitId":"woowenjun99"},"content":"        item.setEnd(null);","lastModifiedDate":"2023-03-02"},{"lineNumber":131,"author":{"gitId":"woowenjun99"},"content":"        item.setType(Command.TODO);","lastModifiedDate":"2023-03-02"},{"lineNumber":132,"author":{"gitId":"woowenjun99"},"content":"      } else if (task instanceof Deadline) {","lastModifiedDate":"2023-02-17"},{"lineNumber":133,"author":{"gitId":"woowenjun99"},"content":"        Deadline deadlineTask \u003d (Deadline) task;","lastModifiedDate":"2023-02-17"},{"lineNumber":134,"author":{"gitId":"woowenjun99"},"content":"        item.setStart(null);","lastModifiedDate":"2023-03-02"},{"lineNumber":135,"author":{"gitId":"woowenjun99"},"content":"        item.setEnd(deadlineTask.getEndDate());","lastModifiedDate":"2023-03-02"},{"lineNumber":136,"author":{"gitId":"woowenjun99"},"content":"        item.setType(Command.DEADLINE);","lastModifiedDate":"2023-03-02"},{"lineNumber":137,"author":{"gitId":"woowenjun99"},"content":"      } else if (task instanceof Event) {","lastModifiedDate":"2023-02-17"},{"lineNumber":138,"author":{"gitId":"woowenjun99"},"content":"        Event eventTask \u003d (Event) task;","lastModifiedDate":"2023-02-17"},{"lineNumber":139,"author":{"gitId":"woowenjun99"},"content":"        item.setStart(eventTask.getFrom());","lastModifiedDate":"2023-03-02"},{"lineNumber":140,"author":{"gitId":"woowenjun99"},"content":"        item.setEnd(eventTask.getTo());","lastModifiedDate":"2023-03-02"},{"lineNumber":141,"author":{"gitId":"woowenjun99"},"content":"        item.setType(Command.EVENT);","lastModifiedDate":"2023-03-02"},{"lineNumber":142,"author":{"gitId":"woowenjun99"},"content":"      }","lastModifiedDate":"2023-02-17"},{"lineNumber":143,"author":{"gitId":"woowenjun99"},"content":"      items.add(item);","lastModifiedDate":"2023-02-17"},{"lineNumber":144,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":145,"author":{"gitId":"woowenjun99"},"content":"  }","lastModifiedDate":"2023-02-17"},{"lineNumber":146,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":147,"author":{"gitId":"woowenjun99"},"content":"  protected Storage() {}","lastModifiedDate":"2023-02-21"},{"lineNumber":148,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":149,"author":{"gitId":"woowenjun99"},"content":"  public static Storage getInstance() {","lastModifiedDate":"2023-02-21"},{"lineNumber":150,"author":{"gitId":"woowenjun99"},"content":"    if (instance \u003d\u003d null) {","lastModifiedDate":"2023-02-12"},{"lineNumber":151,"author":{"gitId":"woowenjun99"},"content":"      instance \u003d new Storage();","lastModifiedDate":"2023-02-21"},{"lineNumber":152,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":153,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":154,"author":{"gitId":"woowenjun99"},"content":"    createFileIfNotExist();","lastModifiedDate":"2023-02-12"},{"lineNumber":155,"author":{"gitId":"woowenjun99"},"content":"    return instance;","lastModifiedDate":"2023-02-12"},{"lineNumber":156,"author":{"gitId":"woowenjun99"},"content":"  }","lastModifiedDate":"2023-02-12"},{"lineNumber":157,"author":{"gitId":"woowenjun99"},"content":"}","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"woowenjun99":157}},{"path":"src/main/java/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"woowenjun99"},"content":"package tasklist;","lastModifiedDate":"2023-02-21"},{"lineNumber":2,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"woowenjun99"},"content":"import constants.ErrorMessage;","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"woowenjun99"},"content":"import exception.DukeException;","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"woowenjun99"},"content":"import model.task.Task;","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"woowenjun99"},"content":"import storage.Storage;","lastModifiedDate":"2023-02-21"},{"lineNumber":7,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":8,"author":{"gitId":"woowenjun99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"woowenjun99"},"content":"/**","lastModifiedDate":"2023-02-21"},{"lineNumber":11,"author":{"gitId":"woowenjun99"},"content":" * Database is a class that is used to mock a real life database. It contains","lastModifiedDate":"2023-02-21"},{"lineNumber":12,"author":{"gitId":"woowenjun99"},"content":" * the basic CRUD operations in the modern database. The Singleton Design","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"woowenjun99"},"content":" * pattern is used here.","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"woowenjun99"},"content":" */","lastModifiedDate":"2023-02-21"},{"lineNumber":15,"author":{"gitId":"woowenjun99"},"content":"public class TaskList {","lastModifiedDate":"2023-02-21"},{"lineNumber":16,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"woowenjun99"},"content":"  protected static TaskList instance \u003d null;","lastModifiedDate":"2023-02-21"},{"lineNumber":18,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"woowenjun99"},"content":"  protected final ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"woowenjun99"},"content":"  protected final static Storage storage \u003d Storage.getInstance();","lastModifiedDate":"2023-02-21"},{"lineNumber":22,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":23,"author":{"gitId":"woowenjun99"},"content":"  protected TaskList() {}","lastModifiedDate":"2023-02-21"},{"lineNumber":24,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"woowenjun99"},"content":"  public static TaskList getInstance() {","lastModifiedDate":"2023-02-21"},{"lineNumber":26,"author":{"gitId":"woowenjun99"},"content":"    if (instance \u003d\u003d null) {","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"woowenjun99"},"content":"      instance \u003d new TaskList();","lastModifiedDate":"2023-02-21"},{"lineNumber":28,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"woowenjun99"},"content":"    return instance;","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"woowenjun99"},"content":"  }","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"woowenjun99"},"content":"  public int getSize() {","lastModifiedDate":"2023-02-21"},{"lineNumber":33,"author":{"gitId":"woowenjun99"},"content":"    return tasks.size();","lastModifiedDate":"2023-02-21"},{"lineNumber":34,"author":{"gitId":"woowenjun99"},"content":"  }","lastModifiedDate":"2023-02-21"},{"lineNumber":35,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":36,"author":{"gitId":"woowenjun99"},"content":"  /**","lastModifiedDate":"2023-02-04"},{"lineNumber":37,"author":{"gitId":"woowenjun99"},"content":"   * A simple function to mimic the database CREATE functionality. The user","lastModifiedDate":"2023-02-21"},{"lineNumber":38,"author":{"gitId":"woowenjun99"},"content":"   * would just need to pass in the task and it will be saved into the database","lastModifiedDate":"2023-02-21"},{"lineNumber":39,"author":{"gitId":"woowenjun99"},"content":"   *","lastModifiedDate":"2023-02-04"},{"lineNumber":40,"author":{"gitId":"woowenjun99"},"content":"   * @param task The task to be set.","lastModifiedDate":"2023-02-21"},{"lineNumber":41,"author":{"gitId":"woowenjun99"},"content":"   */","lastModifiedDate":"2023-02-04"},{"lineNumber":42,"author":{"gitId":"woowenjun99"},"content":"  public void create(Task model) {","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"woowenjun99"},"content":"    tasks.add(model);","lastModifiedDate":"2023-02-17"},{"lineNumber":44,"author":{"gitId":"woowenjun99"},"content":"    storage.updateFile(tasks);","lastModifiedDate":"2023-02-21"},{"lineNumber":45,"author":{"gitId":"woowenjun99"},"content":"  }","lastModifiedDate":"2023-02-04"},{"lineNumber":46,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":47,"author":{"gitId":"woowenjun99"},"content":"  /**","lastModifiedDate":"2023-02-04"},{"lineNumber":48,"author":{"gitId":"woowenjun99"},"content":"   * A simple function to mimic the database READ functionality. The user","lastModifiedDate":"2023-02-21"},{"lineNumber":49,"author":{"gitId":"woowenjun99"},"content":"   * inputs the index of the database that he would like to read and the","lastModifiedDate":"2023-02-21"},{"lineNumber":50,"author":{"gitId":"woowenjun99"},"content":"   * database will read it if it exists.","lastModifiedDate":"2023-02-21"},{"lineNumber":51,"author":{"gitId":"woowenjun99"},"content":"   *","lastModifiedDate":"2023-02-04"},{"lineNumber":52,"author":{"gitId":"woowenjun99"},"content":"   * @param index The index of the task to be read.","lastModifiedDate":"2023-02-04"},{"lineNumber":53,"author":{"gitId":"woowenjun99"},"content":"   * @return The task at the index.","lastModifiedDate":"2023-02-04"},{"lineNumber":54,"author":{"gitId":"woowenjun99"},"content":"   * @throws DukeException An exception if an invalid index is provided.","lastModifiedDate":"2023-03-02"},{"lineNumber":55,"author":{"gitId":"woowenjun99"},"content":"   */","lastModifiedDate":"2023-02-04"},{"lineNumber":56,"author":{"gitId":"woowenjun99"},"content":"  public Task read(int index) throws DukeException {","lastModifiedDate":"2023-03-02"},{"lineNumber":57,"author":{"gitId":"woowenjun99"},"content":"    int size \u003d tasks.size();","lastModifiedDate":"2023-02-17"},{"lineNumber":58,"author":{"gitId":"woowenjun99"},"content":"    if (index \u003e\u003d size || index \u003c 0) {","lastModifiedDate":"2023-02-17"},{"lineNumber":59,"author":{"gitId":"woowenjun99"},"content":"      throw new DukeException(ErrorMessage.INVALID_INDEX);","lastModifiedDate":"2023-03-02"},{"lineNumber":60,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":61,"author":{"gitId":"woowenjun99"},"content":"    return tasks.get(index);","lastModifiedDate":"2023-02-17"},{"lineNumber":62,"author":{"gitId":"woowenjun99"},"content":"  }","lastModifiedDate":"2023-02-04"},{"lineNumber":63,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":64,"author":{"gitId":"woowenjun99"},"content":"  /**","lastModifiedDate":"2023-02-04"},{"lineNumber":65,"author":{"gitId":"woowenjun99"},"content":"   * The user will provide the index and the value that they would like to","lastModifiedDate":"2023-03-02"},{"lineNumber":66,"author":{"gitId":"woowenjun99"},"content":"   * update it with. Following which, we will read the model from the task","lastModifiedDate":"2023-03-02"},{"lineNumber":67,"author":{"gitId":"woowenjun99"},"content":"   * list and update it.","lastModifiedDate":"2023-03-02"},{"lineNumber":68,"author":{"gitId":"woowenjun99"},"content":"   *","lastModifiedDate":"2023-02-04"},{"lineNumber":69,"author":{"gitId":"woowenjun99"},"content":"   * @param index The index of the task to be updated.","lastModifiedDate":"2023-02-04"},{"lineNumber":70,"author":{"gitId":"woowenjun99"},"content":"   * @param value The new state of the task.","lastModifiedDate":"2023-03-02"},{"lineNumber":71,"author":{"gitId":"woowenjun99"},"content":"   * @throws DukeException An exception if the index is invalid.","lastModifiedDate":"2023-03-02"},{"lineNumber":72,"author":{"gitId":"woowenjun99"},"content":"   */","lastModifiedDate":"2023-02-04"},{"lineNumber":73,"author":{"gitId":"woowenjun99"},"content":"  public void update(int index, boolean value) throws DukeException {","lastModifiedDate":"2023-03-02"},{"lineNumber":74,"author":{"gitId":"woowenjun99"},"content":"    int size \u003d tasks.size();","lastModifiedDate":"2023-02-17"},{"lineNumber":75,"author":{"gitId":"woowenjun99"},"content":"    if (index \u003e\u003d size || index \u003c 0) {","lastModifiedDate":"2023-02-17"},{"lineNumber":76,"author":{"gitId":"woowenjun99"},"content":"      throw new DukeException(ErrorMessage.INVALID_INDEX);","lastModifiedDate":"2023-03-02"},{"lineNumber":77,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":78,"author":{"gitId":"woowenjun99"},"content":"    Task model \u003d tasks.get(index);","lastModifiedDate":"2023-02-17"},{"lineNumber":79,"author":{"gitId":"woowenjun99"},"content":"    model.setDone(value);","lastModifiedDate":"2023-02-17"},{"lineNumber":80,"author":{"gitId":"woowenjun99"},"content":"    tasks.set(index, model);","lastModifiedDate":"2023-02-17"},{"lineNumber":81,"author":{"gitId":"woowenjun99"},"content":"    storage.updateFile(tasks);","lastModifiedDate":"2023-02-21"},{"lineNumber":82,"author":{"gitId":"woowenjun99"},"content":"  }","lastModifiedDate":"2023-02-17"},{"lineNumber":83,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":84,"author":{"gitId":"woowenjun99"},"content":"  /**","lastModifiedDate":"2023-02-21"},{"lineNumber":85,"author":{"gitId":"woowenjun99"},"content":"   * A simple function to mimic the database DELETE functionality.","lastModifiedDate":"2023-02-24"},{"lineNumber":86,"author":{"gitId":"woowenjun99"},"content":"   *","lastModifiedDate":"2023-02-21"},{"lineNumber":87,"author":{"gitId":"woowenjun99"},"content":"   * @param index The index of the task to be updated.","lastModifiedDate":"2023-02-21"},{"lineNumber":88,"author":{"gitId":"woowenjun99"},"content":"   * @throws DukeException An exception if the index is invalid.","lastModifiedDate":"2023-03-02"},{"lineNumber":89,"author":{"gitId":"woowenjun99"},"content":"   */","lastModifiedDate":"2023-02-21"},{"lineNumber":90,"author":{"gitId":"woowenjun99"},"content":"  public void delete(int index) throws DukeException {","lastModifiedDate":"2023-03-02"},{"lineNumber":91,"author":{"gitId":"woowenjun99"},"content":"    int size \u003d tasks.size();","lastModifiedDate":"2023-02-17"},{"lineNumber":92,"author":{"gitId":"woowenjun99"},"content":"    if (index \u003e\u003d size || index \u003c 0) {","lastModifiedDate":"2023-02-17"},{"lineNumber":93,"author":{"gitId":"woowenjun99"},"content":"      throw new DukeException(ErrorMessage.INVALID_INDEX);","lastModifiedDate":"2023-03-02"},{"lineNumber":94,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":95,"author":{"gitId":"woowenjun99"},"content":"    tasks.remove(index);","lastModifiedDate":"2023-02-17"},{"lineNumber":96,"author":{"gitId":"woowenjun99"},"content":"    storage.updateFile(tasks);","lastModifiedDate":"2023-02-21"},{"lineNumber":97,"author":{"gitId":"woowenjun99"},"content":"  }","lastModifiedDate":"2023-02-04"},{"lineNumber":98,"author":{"gitId":"woowenjun99"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"woowenjun99":98}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"woowenjun99"},"content":"package ui;","lastModifiedDate":"2023-02-21"},{"lineNumber":2,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":3,"author":{"gitId":"woowenjun99"},"content":"import constants.Message;","lastModifiedDate":"2023-02-21"},{"lineNumber":4,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":5,"author":{"gitId":"woowenjun99"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-21"},{"lineNumber":6,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":7,"author":{"gitId":"woowenjun99"},"content":"/**","lastModifiedDate":"2023-02-21"},{"lineNumber":8,"author":{"gitId":"woowenjun99"},"content":" * The UI class is used to render the User Interaction onto the screen.","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"woowenjun99"},"content":" * The Singleton pattern is used here so that we will only create one","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"woowenjun99"},"content":" * instance of the class throughout the whole application.","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"woowenjun99"},"content":" */","lastModifiedDate":"2023-02-21"},{"lineNumber":12,"author":{"gitId":"woowenjun99"},"content":"public class Ui {","lastModifiedDate":"2023-02-21"},{"lineNumber":13,"author":{"gitId":"woowenjun99"},"content":"  protected static Ui instance;","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"woowenjun99"},"content":"  protected Ui() {","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"woowenjun99"},"content":"  }","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"woowenjun99"},"content":"  public static Ui getInstance() {","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"woowenjun99"},"content":"    if (instance \u003d\u003d null) {","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"woowenjun99"},"content":"      instance \u003d new Ui();","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"woowenjun99"},"content":"    return instance;","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"woowenjun99"},"content":"  }","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":25,"author":{"gitId":"woowenjun99"},"content":"  protected final Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-21"},{"lineNumber":26,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":27,"author":{"gitId":"woowenjun99"},"content":"  /**","lastModifiedDate":"2023-02-21"},{"lineNumber":28,"author":{"gitId":"woowenjun99"},"content":"   * Prints the welcome message upon start up.","lastModifiedDate":"2023-02-21"},{"lineNumber":29,"author":{"gitId":"woowenjun99"},"content":"   */","lastModifiedDate":"2023-02-21"},{"lineNumber":30,"author":{"gitId":"woowenjun99"},"content":"  public void printWelcomeMessage() {","lastModifiedDate":"2023-02-21"},{"lineNumber":31,"author":{"gitId":"woowenjun99"},"content":"    System.out.println(Message.WELCOME);","lastModifiedDate":"2023-02-21"},{"lineNumber":32,"author":{"gitId":"woowenjun99"},"content":"  }","lastModifiedDate":"2023-02-21"},{"lineNumber":33,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":34,"author":{"gitId":"woowenjun99"},"content":"  /**","lastModifiedDate":"2023-02-21"},{"lineNumber":35,"author":{"gitId":"woowenjun99"},"content":"   * Prints the goodbye message upon termination.","lastModifiedDate":"2023-02-21"},{"lineNumber":36,"author":{"gitId":"woowenjun99"},"content":"   */","lastModifiedDate":"2023-02-21"},{"lineNumber":37,"author":{"gitId":"woowenjun99"},"content":"  public void printGoodbyeMessage() {","lastModifiedDate":"2023-02-21"},{"lineNumber":38,"author":{"gitId":"woowenjun99"},"content":"    System.out.println(Message.GOODBYE);","lastModifiedDate":"2023-03-02"},{"lineNumber":39,"author":{"gitId":"woowenjun99"},"content":"  }","lastModifiedDate":"2023-02-21"},{"lineNumber":40,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":41,"author":{"gitId":"woowenjun99"},"content":"  /**","lastModifiedDate":"2023-02-21"},{"lineNumber":42,"author":{"gitId":"woowenjun99"},"content":"   * Prints the error message","lastModifiedDate":"2023-02-21"},{"lineNumber":43,"author":{"gitId":"woowenjun99"},"content":"   */","lastModifiedDate":"2023-02-21"},{"lineNumber":44,"author":{"gitId":"woowenjun99"},"content":"  public void printMessage(String message) {","lastModifiedDate":"2023-02-21"},{"lineNumber":45,"author":{"gitId":"woowenjun99"},"content":"    System.out.println(message);","lastModifiedDate":"2023-02-21"},{"lineNumber":46,"author":{"gitId":"woowenjun99"},"content":"  }","lastModifiedDate":"2023-02-21"},{"lineNumber":47,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":48,"author":{"gitId":"woowenjun99"},"content":"  /**","lastModifiedDate":"2023-02-21"},{"lineNumber":49,"author":{"gitId":"woowenjun99"},"content":"   * Reads the input from the user","lastModifiedDate":"2023-02-21"},{"lineNumber":50,"author":{"gitId":"woowenjun99"},"content":"   *","lastModifiedDate":"2023-02-21"},{"lineNumber":51,"author":{"gitId":"woowenjun99"},"content":"   * @return The user input as a string","lastModifiedDate":"2023-02-21"},{"lineNumber":52,"author":{"gitId":"woowenjun99"},"content":"   */","lastModifiedDate":"2023-02-21"},{"lineNumber":53,"author":{"gitId":"woowenjun99"},"content":"  public String readInput() {","lastModifiedDate":"2023-02-21"},{"lineNumber":54,"author":{"gitId":"woowenjun99"},"content":"    String input \u003d scanner.nextLine().trim();","lastModifiedDate":"2023-02-21"},{"lineNumber":55,"author":{"gitId":"woowenjun99"},"content":"    return input;","lastModifiedDate":"2023-02-21"},{"lineNumber":56,"author":{"gitId":"woowenjun99"},"content":"  }","lastModifiedDate":"2023-02-21"},{"lineNumber":57,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":58,"author":{"gitId":"woowenjun99"},"content":"  /**","lastModifiedDate":"2023-02-21"},{"lineNumber":59,"author":{"gitId":"woowenjun99"},"content":"   * Mimics the printf","lastModifiedDate":"2023-02-21"},{"lineNumber":60,"author":{"gitId":"woowenjun99"},"content":"   *","lastModifiedDate":"2023-02-21"},{"lineNumber":61,"author":{"gitId":"woowenjun99"},"content":"   * @param format The string format","lastModifiedDate":"2023-02-21"},{"lineNumber":62,"author":{"gitId":"woowenjun99"},"content":"   * @param args The arguments","lastModifiedDate":"2023-02-21"},{"lineNumber":63,"author":{"gitId":"woowenjun99"},"content":"   */","lastModifiedDate":"2023-02-21"},{"lineNumber":64,"author":{"gitId":"woowenjun99"},"content":"  public void printf(String format, Object... args) {","lastModifiedDate":"2023-02-21"},{"lineNumber":65,"author":{"gitId":"woowenjun99"},"content":"    System.out.printf(format, args);","lastModifiedDate":"2023-02-21"},{"lineNumber":66,"author":{"gitId":"woowenjun99"},"content":"  }","lastModifiedDate":"2023-02-21"},{"lineNumber":67,"author":{"gitId":"woowenjun99"},"content":"}","lastModifiedDate":"2023-02-21"}],"authorContributionMap":{"woowenjun99":67}},{"path":"src/main/java/view/TaskView.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"woowenjun99"},"content":"package view;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"woowenjun99"},"content":"import model.task.Task;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"woowenjun99"},"content":"import ui.Ui;","lastModifiedDate":"2023-02-21"},{"lineNumber":5,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"woowenjun99"},"content":"public class TaskView {","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"woowenjun99"},"content":"    protected static Ui ui \u003d Ui.getInstance();","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":9,"author":{"gitId":"woowenjun99"},"content":"    public void printTaskDescriptionText(Task model) {","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"woowenjun99"},"content":"        ui.printMessage(model.getDescriptionText());","lastModifiedDate":"2023-02-21"},{"lineNumber":11,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"woowenjun99"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"woowenjun99":12}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"woowenjun99"},"content":"todo borrow book","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"woowenjun99"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"woowenjun99"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"woowenjun99"},"content":"list","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"woowenjun99"},"content":"mark 2","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"woowenjun99"},"content":"bye","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"woowenjun99":6}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"woowenjun99"},"content":"java -classpath ..\\bin Main \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"woowenjun99":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"woowenjun99"},"content":"java -classpath ../bin Main \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"woowenjun99":1,"-":37}}]
