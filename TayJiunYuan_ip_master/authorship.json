[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"TayJiunYuan"},"content":"# **Duke User Guide**","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"TayJiunYuan"},"content":"### Duke is a desktop application for managing tasks, used through the Command Line Interface (CLI). ","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"TayJiunYuan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"TayJiunYuan"},"content":"* ### Quick Start","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"TayJiunYuan"},"content":"* ### Features","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"TayJiunYuan"},"content":"  * #### Add todo: `todo`","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"TayJiunYuan"},"content":"  * #### Add deadline: `deadline`","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"TayJiunYuan"},"content":"  * #### Add event: `event`","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"TayJiunYuan"},"content":"  * #### Display taskslist: `list`","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"TayJiunYuan"},"content":"  * #### Mark task: `mark`","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"TayJiunYuan"},"content":"  * #### Unmark task: `unmark`","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"TayJiunYuan"},"content":"  * #### Delete task: `delete`","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"TayJiunYuan"},"content":"  * #### Find task: `find`","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"TayJiunYuan"},"content":"  * #### Save/ Exit Duke: `bye`","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"TayJiunYuan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":19,"author":{"gitId":"TayJiunYuan"},"content":"# Quick Start ","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":21,"author":{"gitId":"TayJiunYuan"},"content":"### 1. Ensure you have Java 11 installed in you Computer. ","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":23,"author":{"gitId":"TayJiunYuan"},"content":"### 2. Downlod the latest ip.jar from [here](https://github.com/TayJiunYuan/ip).","lastModifiedDate":"2023-02-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"TayJiunYuan"},"content":"### 3. Copy the jar file into a new folder.","lastModifiedDate":"2023-02-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"TayJiunYuan"},"content":"### 4. Open a terminal and cd into the new folder. Use `java -jar ip.jar` to run Duke.","lastModifiedDate":"2023-02-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"TayJiunYuan"},"content":"### 5. Refer to the Features below for each command.","lastModifiedDate":"2023-02-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":31,"author":{"gitId":"TayJiunYuan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":33,"author":{"gitId":"TayJiunYuan"},"content":"# Features ","lastModifiedDate":"2023-02-27"},{"lineNumber":34,"author":{"gitId":"TayJiunYuan"},"content":"## Add todo: `todo`","lastModifiedDate":"2023-02-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":36,"author":{"gitId":"TayJiunYuan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":37,"author":{"gitId":"TayJiunYuan"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":38,"author":{"gitId":"TayJiunYuan"},"content":"#### Adds a Todo task into the taskslist.","lastModifiedDate":"2023-02-27"},{"lineNumber":39,"author":{"gitId":"TayJiunYuan"},"content":"#### Format: `todo TASK_NAME`","lastModifiedDate":"2023-02-27"},{"lineNumber":40,"author":{"gitId":"TayJiunYuan"},"content":"#### Examples:","lastModifiedDate":"2023-02-27"},{"lineNumber":41,"author":{"gitId":"TayJiunYuan"},"content":"\u003e* #### `todo walk the dog`","lastModifiedDate":"2023-02-27"},{"lineNumber":42,"author":{"gitId":"TayJiunYuan"},"content":"\u003e* #### `todo do homework`","lastModifiedDate":"2023-02-27"},{"lineNumber":43,"author":{"gitId":"TayJiunYuan"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":44,"author":{"gitId":"TayJiunYuan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":45,"author":{"gitId":"TayJiunYuan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":46,"author":{"gitId":"TayJiunYuan"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":47,"author":{"gitId":"TayJiunYuan"},"content":"## Add deadline: `deadline`","lastModifiedDate":"2023-02-27"},{"lineNumber":48,"author":{"gitId":"TayJiunYuan"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":49,"author":{"gitId":"TayJiunYuan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":50,"author":{"gitId":"TayJiunYuan"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":51,"author":{"gitId":"TayJiunYuan"},"content":"#### Adds a Deadline task into the taskslist.","lastModifiedDate":"2023-02-27"},{"lineNumber":52,"author":{"gitId":"TayJiunYuan"},"content":"#### Format: `todo TASK_NAME /by yyyy-mm-dd`","lastModifiedDate":"2023-02-27"},{"lineNumber":53,"author":{"gitId":"TayJiunYuan"},"content":"#### Examples:","lastModifiedDate":"2023-02-27"},{"lineNumber":54,"author":{"gitId":"TayJiunYuan"},"content":"\u003e* #### `deadline assignment /by 2021-12-12`","lastModifiedDate":"2023-02-27"},{"lineNumber":55,"author":{"gitId":"TayJiunYuan"},"content":"\u003e* #### `deadline pay the bills /by 2023-04-11`","lastModifiedDate":"2023-02-27"},{"lineNumber":56,"author":{"gitId":"TayJiunYuan"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":57,"author":{"gitId":"TayJiunYuan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":58,"author":{"gitId":"TayJiunYuan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":59,"author":{"gitId":"TayJiunYuan"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":60,"author":{"gitId":"TayJiunYuan"},"content":"## Add event: `event`","lastModifiedDate":"2023-02-27"},{"lineNumber":61,"author":{"gitId":"TayJiunYuan"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":62,"author":{"gitId":"TayJiunYuan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":63,"author":{"gitId":"TayJiunYuan"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":64,"author":{"gitId":"TayJiunYuan"},"content":"#### Adds an Event task into the taskslist.","lastModifiedDate":"2023-02-27"},{"lineNumber":65,"author":{"gitId":"TayJiunYuan"},"content":"#### Format: `event TASK_NAME /from START_DATE /to END_DATE`","lastModifiedDate":"2023-02-27"},{"lineNumber":66,"author":{"gitId":"TayJiunYuan"},"content":"#### Examples:","lastModifiedDate":"2023-02-27"},{"lineNumber":67,"author":{"gitId":"TayJiunYuan"},"content":"\u003e* #### `event science lesson /from 4pm /to 6pm`","lastModifiedDate":"2023-02-27"},{"lineNumber":68,"author":{"gitId":"TayJiunYuan"},"content":"\u003e* #### `event camping trip /from 4th Nov /to 6th Nov`","lastModifiedDate":"2023-02-27"},{"lineNumber":69,"author":{"gitId":"TayJiunYuan"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":70,"author":{"gitId":"TayJiunYuan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":71,"author":{"gitId":"TayJiunYuan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":72,"author":{"gitId":"TayJiunYuan"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":73,"author":{"gitId":"TayJiunYuan"},"content":"## Display taskslist: `list`","lastModifiedDate":"2023-02-27"},{"lineNumber":74,"author":{"gitId":"TayJiunYuan"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":75,"author":{"gitId":"TayJiunYuan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":76,"author":{"gitId":"TayJiunYuan"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":77,"author":{"gitId":"TayJiunYuan"},"content":"#### Displays all tasks and their corresponding status.","lastModifiedDate":"2023-02-27"},{"lineNumber":78,"author":{"gitId":"TayJiunYuan"},"content":"#### Format: `list`","lastModifiedDate":"2023-02-27"},{"lineNumber":79,"author":{"gitId":"TayJiunYuan"},"content":"#### Examples:","lastModifiedDate":"2023-02-27"},{"lineNumber":80,"author":{"gitId":"TayJiunYuan"},"content":"![List ScreenShot](ListSS.png)","lastModifiedDate":"2023-02-27"},{"lineNumber":81,"author":{"gitId":"TayJiunYuan"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":82,"author":{"gitId":"TayJiunYuan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":83,"author":{"gitId":"TayJiunYuan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":84,"author":{"gitId":"TayJiunYuan"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":85,"author":{"gitId":"TayJiunYuan"},"content":"## Mark task: `mark`","lastModifiedDate":"2023-02-27"},{"lineNumber":86,"author":{"gitId":"TayJiunYuan"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":87,"author":{"gitId":"TayJiunYuan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":88,"author":{"gitId":"TayJiunYuan"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":89,"author":{"gitId":"TayJiunYuan"},"content":"#### Mark task as done by index in taskslist.","lastModifiedDate":"2023-02-27"},{"lineNumber":90,"author":{"gitId":"TayJiunYuan"},"content":"#### Format: `mark INDEX`","lastModifiedDate":"2023-02-27"},{"lineNumber":91,"author":{"gitId":"TayJiunYuan"},"content":"#### Examples:","lastModifiedDate":"2023-02-27"},{"lineNumber":92,"author":{"gitId":"TayJiunYuan"},"content":"\u003e* #### `mark 1`","lastModifiedDate":"2023-02-27"},{"lineNumber":93,"author":{"gitId":"TayJiunYuan"},"content":"![Mark Screenshot](MarkSS.png)","lastModifiedDate":"2023-02-27"},{"lineNumber":94,"author":{"gitId":"TayJiunYuan"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":95,"author":{"gitId":"TayJiunYuan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":96,"author":{"gitId":"TayJiunYuan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":97,"author":{"gitId":"TayJiunYuan"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":98,"author":{"gitId":"TayJiunYuan"},"content":"## Unmark task: `unmark`","lastModifiedDate":"2023-02-27"},{"lineNumber":99,"author":{"gitId":"TayJiunYuan"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":100,"author":{"gitId":"TayJiunYuan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":101,"author":{"gitId":"TayJiunYuan"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":102,"author":{"gitId":"TayJiunYuan"},"content":"#### Unmark task by index in taskslist.","lastModifiedDate":"2023-02-27"},{"lineNumber":103,"author":{"gitId":"TayJiunYuan"},"content":"#### Format: `unmark INDEX`","lastModifiedDate":"2023-02-27"},{"lineNumber":104,"author":{"gitId":"TayJiunYuan"},"content":"#### Examples:","lastModifiedDate":"2023-02-27"},{"lineNumber":105,"author":{"gitId":"TayJiunYuan"},"content":"\u003e * #### `unmark 1`","lastModifiedDate":"2023-02-27"},{"lineNumber":106,"author":{"gitId":"TayJiunYuan"},"content":"![Unmark Screenshot](UnmarkSS.png)","lastModifiedDate":"2023-02-27"},{"lineNumber":107,"author":{"gitId":"TayJiunYuan"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":108,"author":{"gitId":"TayJiunYuan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":109,"author":{"gitId":"TayJiunYuan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":110,"author":{"gitId":"TayJiunYuan"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":111,"author":{"gitId":"TayJiunYuan"},"content":"## Delete task: `delete`","lastModifiedDate":"2023-02-27"},{"lineNumber":112,"author":{"gitId":"TayJiunYuan"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":113,"author":{"gitId":"TayJiunYuan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":114,"author":{"gitId":"TayJiunYuan"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":115,"author":{"gitId":"TayJiunYuan"},"content":"#### Delete task by index in taskslist.","lastModifiedDate":"2023-02-27"},{"lineNumber":116,"author":{"gitId":"TayJiunYuan"},"content":"#### Format `delete INDEX`","lastModifiedDate":"2023-02-27"},{"lineNumber":117,"author":{"gitId":"TayJiunYuan"},"content":"#### Examples: ","lastModifiedDate":"2023-02-27"},{"lineNumber":118,"author":{"gitId":"TayJiunYuan"},"content":"\u003e * #### `delete 1`","lastModifiedDate":"2023-02-27"},{"lineNumber":119,"author":{"gitId":"TayJiunYuan"},"content":"![Delete Screenshot](DeleteSS.png)","lastModifiedDate":"2023-02-27"},{"lineNumber":120,"author":{"gitId":"TayJiunYuan"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":121,"author":{"gitId":"TayJiunYuan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":122,"author":{"gitId":"TayJiunYuan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":123,"author":{"gitId":"TayJiunYuan"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":124,"author":{"gitId":"TayJiunYuan"},"content":"## Find task: `find`","lastModifiedDate":"2023-02-27"},{"lineNumber":125,"author":{"gitId":"TayJiunYuan"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":126,"author":{"gitId":"TayJiunYuan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":127,"author":{"gitId":"TayJiunYuan"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":128,"author":{"gitId":"TayJiunYuan"},"content":"#### Find task by name (case sensitive) in tasklist.","lastModifiedDate":"2023-02-27"},{"lineNumber":129,"author":{"gitId":"TayJiunYuan"},"content":"#### Format: `find TASK_NAME`","lastModifiedDate":"2023-02-27"},{"lineNumber":130,"author":{"gitId":"TayJiunYuan"},"content":"#### Examples: ","lastModifiedDate":"2023-02-27"},{"lineNumber":131,"author":{"gitId":"TayJiunYuan"},"content":"\u003e * #### `find science`","lastModifiedDate":"2023-02-27"},{"lineNumber":132,"author":{"gitId":"TayJiunYuan"},"content":"\u003e * #### `find assignment`","lastModifiedDate":"2023-02-27"},{"lineNumber":133,"author":{"gitId":"TayJiunYuan"},"content":"![Find Screenshot](FindSS.png)","lastModifiedDate":"2023-02-27"},{"lineNumber":134,"author":{"gitId":"TayJiunYuan"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":135,"author":{"gitId":"TayJiunYuan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":136,"author":{"gitId":"TayJiunYuan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":137,"author":{"gitId":"TayJiunYuan"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":138,"author":{"gitId":"TayJiunYuan"},"content":"## Save/ Exit Duke: `bye`","lastModifiedDate":"2023-02-27"},{"lineNumber":139,"author":{"gitId":"TayJiunYuan"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":140,"author":{"gitId":"TayJiunYuan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":141,"author":{"gitId":"TayJiunYuan"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":142,"author":{"gitId":"TayJiunYuan"},"content":"#### Saves tasks and exits the program.","lastModifiedDate":"2023-02-27"},{"lineNumber":143,"author":{"gitId":"TayJiunYuan"},"content":"#### Format: `bye` ","lastModifiedDate":"2023-02-27"},{"lineNumber":144,"author":{"gitId":"TayJiunYuan"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":145,"author":{"gitId":"TayJiunYuan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":146,"author":{"gitId":"TayJiunYuan"},"content":"\u003chr\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"TayJiunYuan":135,"-":13}},{"path":"duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"TayJiunYuan"},"content":"","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"TayJiunYuan":1}},{"path":"src/main/java/Exceptions/InvalidAddTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TayJiunYuan"},"content":"package exceptions;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"TayJiunYuan"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"TayJiunYuan"},"content":"public class InvalidAddTaskException extends Exception{","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"TayJiunYuan"},"content":"    ","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"TayJiunYuan"},"content":"    public static String invalidAddTaskMessage \u003d \"Please the input correct task parameters!\";","lastModifiedDate":"2023-02-25"},{"lineNumber":6,"author":{"gitId":"TayJiunYuan"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"TayJiunYuan":6}},{"path":"src/main/java/Exceptions/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TayJiunYuan"},"content":"package exceptions;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"TayJiunYuan"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"TayJiunYuan"},"content":"public class InvalidCommandException extends Exception{","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"TayJiunYuan"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"TayJiunYuan"},"content":"    public static String invalidCommandMessage \u003d \"Please input a valid command!\";","lastModifiedDate":"2023-02-25"},{"lineNumber":6,"author":{"gitId":"TayJiunYuan"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"TayJiunYuan":6}},{"path":"src/main/java/Exceptions/InvalidFindTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TayJiunYuan"},"content":"package exceptions;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"TayJiunYuan"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"TayJiunYuan"},"content":"public class InvalidFindTaskException extends Exception{","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"TayJiunYuan"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"TayJiunYuan"},"content":"    public static String invalidFindTaskMessage \u003d \"Please input a task to find!\";","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"TayJiunYuan"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"TayJiunYuan":6}},{"path":"src/main/java/Exceptions/TaskListOutofBoundsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TayJiunYuan"},"content":"package exceptions;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"TayJiunYuan"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"TayJiunYuan"},"content":"public class TaskListOutofBoundsException extends Exception{","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"TayJiunYuan"},"content":"    ","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"TayJiunYuan"},"content":"    public static String taskListOutOfBoundsMessage \u003d \"The task you want to mark/unmark/delete is not found!\";","lastModifiedDate":"2023-02-25"},{"lineNumber":6,"author":{"gitId":"TayJiunYuan"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"TayJiunYuan":6}},{"path":"src/main/java/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TayJiunYuan"},"content":"package commands;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"TayJiunYuan"},"content":"import exceptions.InvalidAddTaskException;","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"TayJiunYuan"},"content":"import exceptions.InvalidCommandException;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"TayJiunYuan"},"content":"import exceptions.InvalidFindTaskException;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"TayJiunYuan"},"content":"import exceptions.TaskListOutofBoundsException;","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"TayJiunYuan"},"content":"import userInterface.Print;","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"TayJiunYuan"},"content":"import file.FileManager;","lastModifiedDate":"2023-02-25"},{"lineNumber":8,"author":{"gitId":"TayJiunYuan"},"content":"import tasklist.Tasklist;","lastModifiedDate":"2023-02-25"},{"lineNumber":9,"author":{"gitId":"TayJiunYuan"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-25"},{"lineNumber":10,"author":{"gitId":"TayJiunYuan"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"TayJiunYuan"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"TayJiunYuan"},"content":"/*","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"TayJiunYuan"},"content":" * Handles the execution of the command specified by the user\u0027s input","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"TayJiunYuan"},"content":" */","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"TayJiunYuan"},"content":"public class Command {","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"TayJiunYuan"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"TayJiunYuan"},"content":"    /*","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"TayJiunYuan"},"content":"     * Executes the corresponding methods to the user\u0027s input command ","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"TayJiunYuan"},"content":"     * Catches the exceptions thrown from the corresponding methods","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"TayJiunYuan"},"content":"     * ","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"TayJiunYuan"},"content":"     * @param String userInput from user","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"TayJiunYuan"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"TayJiunYuan"},"content":"    public static void runCommand(String userInput){","lastModifiedDate":"2023-02-25"},{"lineNumber":24,"author":{"gitId":"TayJiunYuan"},"content":"        String [] userInputArray \u003d userInput.split(\" \",2);","lastModifiedDate":"2023-02-25"},{"lineNumber":25,"author":{"gitId":"TayJiunYuan"},"content":"        String command \u003d Tasklist.retrieveCommand(userInputArray);","lastModifiedDate":"2023-02-25"},{"lineNumber":26,"author":{"gitId":"TayJiunYuan"},"content":"        try{","lastModifiedDate":"2023-02-25"},{"lineNumber":27,"author":{"gitId":"TayJiunYuan"},"content":"            switch (command){","lastModifiedDate":"2023-02-25"},{"lineNumber":28,"author":{"gitId":"TayJiunYuan"},"content":"            case \"bye\": ","lastModifiedDate":"2023-02-25"},{"lineNumber":29,"author":{"gitId":"TayJiunYuan"},"content":"                Print.printGoodbye();","lastModifiedDate":"2023-02-25"},{"lineNumber":30,"author":{"gitId":"TayJiunYuan"},"content":"                FileManager.saveFile();","lastModifiedDate":"2023-02-25"},{"lineNumber":31,"author":{"gitId":"TayJiunYuan"},"content":"                System.exit(0);","lastModifiedDate":"2023-02-25"},{"lineNumber":32,"author":{"gitId":"TayJiunYuan"},"content":"            case \"list\":","lastModifiedDate":"2023-02-25"},{"lineNumber":33,"author":{"gitId":"TayJiunYuan"},"content":"                Tasklist.displayTaskList();","lastModifiedDate":"2023-02-25"},{"lineNumber":34,"author":{"gitId":"TayJiunYuan"},"content":"                break;","lastModifiedDate":"2023-02-25"},{"lineNumber":35,"author":{"gitId":"TayJiunYuan"},"content":"            case \"mark\":","lastModifiedDate":"2023-02-25"},{"lineNumber":36,"author":{"gitId":"TayJiunYuan"},"content":"                Tasklist.markTask(Tasklist.retrieveMarkIndex(userInputArray));","lastModifiedDate":"2023-02-25"},{"lineNumber":37,"author":{"gitId":"TayJiunYuan"},"content":"                break;","lastModifiedDate":"2023-02-25"},{"lineNumber":38,"author":{"gitId":"TayJiunYuan"},"content":"            case \"unmark\":","lastModifiedDate":"2023-02-25"},{"lineNumber":39,"author":{"gitId":"TayJiunYuan"},"content":"                Tasklist.unmarkTask(Tasklist.retrieveMarkIndex(userInputArray));","lastModifiedDate":"2023-02-25"},{"lineNumber":40,"author":{"gitId":"TayJiunYuan"},"content":"                break;","lastModifiedDate":"2023-02-25"},{"lineNumber":41,"author":{"gitId":"TayJiunYuan"},"content":"            case \"delete\":","lastModifiedDate":"2023-02-25"},{"lineNumber":42,"author":{"gitId":"TayJiunYuan"},"content":"                Tasklist.deleteTask(Tasklist.retrieveMarkIndex(userInputArray));","lastModifiedDate":"2023-02-25"},{"lineNumber":43,"author":{"gitId":"TayJiunYuan"},"content":"                break;    ","lastModifiedDate":"2023-02-25"},{"lineNumber":44,"author":{"gitId":"TayJiunYuan"},"content":"            case \"todo\":","lastModifiedDate":"2023-02-25"},{"lineNumber":45,"author":{"gitId":"TayJiunYuan"},"content":"                Tasklist.addTodo(userInputArray);","lastModifiedDate":"2023-02-25"},{"lineNumber":46,"author":{"gitId":"TayJiunYuan"},"content":"                break;","lastModifiedDate":"2023-02-25"},{"lineNumber":47,"author":{"gitId":"TayJiunYuan"},"content":"            case \"deadline\":","lastModifiedDate":"2023-02-25"},{"lineNumber":48,"author":{"gitId":"TayJiunYuan"},"content":"                Tasklist.addDeadline(userInputArray);","lastModifiedDate":"2023-02-25"},{"lineNumber":49,"author":{"gitId":"TayJiunYuan"},"content":"                break;","lastModifiedDate":"2023-02-25"},{"lineNumber":50,"author":{"gitId":"TayJiunYuan"},"content":"            case \"event\":","lastModifiedDate":"2023-02-25"},{"lineNumber":51,"author":{"gitId":"TayJiunYuan"},"content":"                Tasklist.addEvent(userInputArray);","lastModifiedDate":"2023-02-25"},{"lineNumber":52,"author":{"gitId":"TayJiunYuan"},"content":"                break;","lastModifiedDate":"2023-02-25"},{"lineNumber":53,"author":{"gitId":"TayJiunYuan"},"content":"            case \"find\":","lastModifiedDate":"2023-02-26"},{"lineNumber":54,"author":{"gitId":"TayJiunYuan"},"content":"                Tasklist.findTask(userInputArray);","lastModifiedDate":"2023-02-26"},{"lineNumber":55,"author":{"gitId":"TayJiunYuan"},"content":"                break;","lastModifiedDate":"2023-02-26"},{"lineNumber":56,"author":{"gitId":"TayJiunYuan"},"content":"            default:","lastModifiedDate":"2023-02-25"},{"lineNumber":57,"author":{"gitId":"TayJiunYuan"},"content":"                Tasklist.throwInvalidCommand();","lastModifiedDate":"2023-02-25"},{"lineNumber":58,"author":{"gitId":"TayJiunYuan"},"content":"                break;","lastModifiedDate":"2023-02-25"},{"lineNumber":59,"author":{"gitId":"TayJiunYuan"},"content":"            }","lastModifiedDate":"2023-02-25"},{"lineNumber":60,"author":{"gitId":"TayJiunYuan"},"content":"        } catch (NumberFormatException e){","lastModifiedDate":"2023-02-25"},{"lineNumber":61,"author":{"gitId":"TayJiunYuan"},"content":"            System.out.println(\"Please type an integer behind mark/unmark/delete!\");","lastModifiedDate":"2023-02-25"},{"lineNumber":62,"author":{"gitId":"TayJiunYuan"},"content":"        } catch (TaskListOutofBoundsException e){","lastModifiedDate":"2023-02-25"},{"lineNumber":63,"author":{"gitId":"TayJiunYuan"},"content":"            System.out.println(TaskListOutofBoundsException.taskListOutOfBoundsMessage);","lastModifiedDate":"2023-02-25"},{"lineNumber":64,"author":{"gitId":"TayJiunYuan"},"content":"        } catch (InvalidCommandException e){","lastModifiedDate":"2023-02-25"},{"lineNumber":65,"author":{"gitId":"TayJiunYuan"},"content":"            System.out.println(InvalidCommandException.invalidCommandMessage);","lastModifiedDate":"2023-02-25"},{"lineNumber":66,"author":{"gitId":"TayJiunYuan"},"content":"        } catch (InvalidAddTaskException e){","lastModifiedDate":"2023-02-25"},{"lineNumber":67,"author":{"gitId":"TayJiunYuan"},"content":"            System.out.println(InvalidAddTaskException.invalidAddTaskMessage);","lastModifiedDate":"2023-02-25"},{"lineNumber":68,"author":{"gitId":"TayJiunYuan"},"content":"        } catch (IOException e){","lastModifiedDate":"2023-02-25"},{"lineNumber":69,"author":{"gitId":"TayJiunYuan"},"content":"            System.out.println(\"File Write Error\");","lastModifiedDate":"2023-02-25"},{"lineNumber":70,"author":{"gitId":"TayJiunYuan"},"content":"        } catch (InvalidFindTaskException e){","lastModifiedDate":"2023-02-26"},{"lineNumber":71,"author":{"gitId":"TayJiunYuan"},"content":"            System.out.println(InvalidFindTaskException.invalidFindTaskMessage);","lastModifiedDate":"2023-02-26"},{"lineNumber":72,"author":{"gitId":"TayJiunYuan"},"content":"        } catch (DateTimeParseException e){","lastModifiedDate":"2023-02-26"},{"lineNumber":73,"author":{"gitId":"TayJiunYuan"},"content":"            System.out.println(\"Pls enter the date in format yyyy-mm-dd!\");","lastModifiedDate":"2023-02-26"},{"lineNumber":74,"author":{"gitId":"TayJiunYuan"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":75,"author":{"gitId":"TayJiunYuan"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":76,"author":{"gitId":"TayJiunYuan"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"TayJiunYuan":76}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TayJiunYuan"},"content":"package duke;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"TayJiunYuan"},"content":"import commands.Command;","lastModifiedDate":"2023-02-25"},{"lineNumber":3,"author":{"gitId":"TayJiunYuan"},"content":"import file.FileManager;","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"TayJiunYuan"},"content":"import userInterface.Print;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"TayJiunYuan"},"content":"import userInterface.UserInput;","lastModifiedDate":"2023-02-25"},{"lineNumber":6,"author":{"gitId":"TayJiunYuan"},"content":"import tasklist.Tasklist;","lastModifiedDate":"2023-02-25"},{"lineNumber":7,"author":{"gitId":"TayJiunYuan"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"TayJiunYuan"},"content":"/*","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"TayJiunYuan"},"content":" * Handles the initialsation and running of the main program Duke","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"TayJiunYuan"},"content":" */","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"TayJiunYuan"},"content":"public class Duke {","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"TayJiunYuan"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"TayJiunYuan"},"content":"    private Tasklist tasksList;","lastModifiedDate":"2023-02-25"},{"lineNumber":14,"author":{"gitId":"TayJiunYuan"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"TayJiunYuan"},"content":"    public Duke(){","lastModifiedDate":"2023-02-25"},{"lineNumber":16,"author":{"gitId":"TayJiunYuan"},"content":"        tasksList \u003d new Tasklist();","lastModifiedDate":"2023-02-25"},{"lineNumber":17,"author":{"gitId":"TayJiunYuan"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"TayJiunYuan"},"content":"    public static void main(String[] args){","lastModifiedDate":"2023-02-25"},{"lineNumber":19,"author":{"gitId":"TayJiunYuan"},"content":"        FileManager.initialise();","lastModifiedDate":"2023-02-25"},{"lineNumber":20,"author":{"gitId":"TayJiunYuan"},"content":"        Print.printWelcome();","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"TayJiunYuan"},"content":"        while (true){","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"TayJiunYuan"},"content":"            Command.runCommand(UserInput.getInput());","lastModifiedDate":"2023-02-25"},{"lineNumber":23,"author":{"gitId":"TayJiunYuan"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"TayJiunYuan"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"TayJiunYuan"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"TayJiunYuan":25}},{"path":"src/main/java/file/FileManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TayJiunYuan"},"content":"package file;","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"TayJiunYuan"},"content":"import java.io.File;","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"TayJiunYuan"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"TayJiunYuan"},"content":"import tasks.Deadline;","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"TayJiunYuan"},"content":"import tasks.Event;","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"TayJiunYuan"},"content":"import tasks.Task;","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"TayJiunYuan"},"content":"import tasks.Todo;","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"TayJiunYuan"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"TayJiunYuan"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"TayJiunYuan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"TayJiunYuan"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"TayJiunYuan"},"content":"import tasklist.Tasklist;","lastModifiedDate":"2023-02-25"},{"lineNumber":13,"author":{"gitId":"TayJiunYuan"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"TayJiunYuan"},"content":"/*","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"TayJiunYuan"},"content":" * Handles the reading and writing to and from the duke.txt file","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"TayJiunYuan"},"content":" * File f represents the duke.txt file","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"TayJiunYuan"},"content":" */","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"TayJiunYuan"},"content":"public class FileManager {","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"TayJiunYuan"},"content":"    ","lastModifiedDate":"2023-02-25"},{"lineNumber":20,"author":{"gitId":"TayJiunYuan"},"content":"    public static File f \u003d new File(\"duke.txt\");","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"TayJiunYuan"},"content":"    ","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"TayJiunYuan"},"content":"    /*","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"TayJiunYuan"},"content":"     * Reads the duke.txt file into the Tasklist taskslist","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"TayJiunYuan"},"content":"     * Creates a new duke.txt if the file does not exist","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"TayJiunYuan"},"content":"     * Scanner s represents the scanner used in reading the file","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"TayJiunYuan"},"content":"     * ","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"TayJiunYuan"},"content":"     * @throws IOException if there is an input/output error","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"TayJiunYuan"},"content":"     * @see IOException","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"TayJiunYuan"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"TayJiunYuan"},"content":"    public static void readIntoList()throws IOException {","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"TayJiunYuan"},"content":"        if (!f.exists()){","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"TayJiunYuan"},"content":"            f.createNewFile();","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"TayJiunYuan"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"TayJiunYuan"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"TayJiunYuan"},"content":"        while(s.hasNext()){","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"TayJiunYuan"},"content":"            String[] currentLineArray \u003d s.nextLine().split(\"/\");","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"TayJiunYuan"},"content":"            String taskType \u003d currentLineArray[0];","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"TayJiunYuan"},"content":"            String markStatus \u003d currentLineArray[1];","lastModifiedDate":"2023-02-16"},{"lineNumber":39,"author":{"gitId":"TayJiunYuan"},"content":"            String eventDesc \u003d currentLineArray [2];","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"TayJiunYuan"},"content":"            switch(taskType){","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"TayJiunYuan"},"content":"            case \"todo\":","lastModifiedDate":"2023-02-16"},{"lineNumber":42,"author":{"gitId":"TayJiunYuan"},"content":"                Tasklist.tasksList.add(new Todo(eventDesc));","lastModifiedDate":"2023-02-25"},{"lineNumber":43,"author":{"gitId":"TayJiunYuan"},"content":"                break;","lastModifiedDate":"2023-02-16"},{"lineNumber":44,"author":{"gitId":"TayJiunYuan"},"content":"            case \"deadline\":","lastModifiedDate":"2023-02-16"},{"lineNumber":45,"author":{"gitId":"TayJiunYuan"},"content":"                LocalDate deadlineDate \u003d Tasklist.convertStringToDate(currentLineArray[3]);","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"TayJiunYuan"},"content":"                Tasklist.tasksList.add(new Deadline(eventDesc, deadlineDate));","lastModifiedDate":"2023-02-25"},{"lineNumber":47,"author":{"gitId":"TayJiunYuan"},"content":"                break;","lastModifiedDate":"2023-02-16"},{"lineNumber":48,"author":{"gitId":"TayJiunYuan"},"content":"            case \"event\":","lastModifiedDate":"2023-02-16"},{"lineNumber":49,"author":{"gitId":"TayJiunYuan"},"content":"                String startTime \u003d currentLineArray[3];","lastModifiedDate":"2023-02-16"},{"lineNumber":50,"author":{"gitId":"TayJiunYuan"},"content":"                String endTime \u003d currentLineArray[4];","lastModifiedDate":"2023-02-16"},{"lineNumber":51,"author":{"gitId":"TayJiunYuan"},"content":"                Tasklist.tasksList.add(new Event(eventDesc, startTime, endTime));","lastModifiedDate":"2023-02-25"},{"lineNumber":52,"author":{"gitId":"TayJiunYuan"},"content":"                break;","lastModifiedDate":"2023-02-16"},{"lineNumber":53,"author":{"gitId":"TayJiunYuan"},"content":"            }","lastModifiedDate":"2023-02-16"},{"lineNumber":54,"author":{"gitId":"TayJiunYuan"},"content":"            if (markStatus.equals(\"1\")){","lastModifiedDate":"2023-02-16"},{"lineNumber":55,"author":{"gitId":"TayJiunYuan"},"content":"                Task currentTask \u003d Tasklist.tasksList.get(Tasklist.tasksList.size()-1); ","lastModifiedDate":"2023-02-25"},{"lineNumber":56,"author":{"gitId":"TayJiunYuan"},"content":"                currentTask.markAsDone();","lastModifiedDate":"2023-02-16"},{"lineNumber":57,"author":{"gitId":"TayJiunYuan"},"content":"            }","lastModifiedDate":"2023-02-16"},{"lineNumber":58,"author":{"gitId":"TayJiunYuan"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":59,"author":{"gitId":"TayJiunYuan"},"content":"        s.close();","lastModifiedDate":"2023-02-16"},{"lineNumber":60,"author":{"gitId":"TayJiunYuan"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":61,"author":{"gitId":"TayJiunYuan"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":62,"author":{"gitId":"TayJiunYuan"},"content":"    /*","lastModifiedDate":"2023-02-26"},{"lineNumber":63,"author":{"gitId":"TayJiunYuan"},"content":"     * Write the encoded tasks in taskslist into the file","lastModifiedDate":"2023-02-26"},{"lineNumber":64,"author":{"gitId":"TayJiunYuan"},"content":"     * FileWriter fw represents the FileWriter used in writing the file","lastModifiedDate":"2023-02-26"},{"lineNumber":65,"author":{"gitId":"TayJiunYuan"},"content":"     * ","lastModifiedDate":"2023-02-26"},{"lineNumber":66,"author":{"gitId":"TayJiunYuan"},"content":"     * @throws IOException if there is an input/output error","lastModifiedDate":"2023-02-26"},{"lineNumber":67,"author":{"gitId":"TayJiunYuan"},"content":"     * @see IOException","lastModifiedDate":"2023-02-26"},{"lineNumber":68,"author":{"gitId":"TayJiunYuan"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":69,"author":{"gitId":"TayJiunYuan"},"content":"    public static void saveFile()throws IOException{","lastModifiedDate":"2023-02-16"},{"lineNumber":70,"author":{"gitId":"TayJiunYuan"},"content":"        FileWriter fw \u003d new FileWriter(f);","lastModifiedDate":"2023-02-16"},{"lineNumber":71,"author":{"gitId":"TayJiunYuan"},"content":"        for (int i \u003d 0; i \u003c Tasklist.tasksList.size(); i++){","lastModifiedDate":"2023-02-25"},{"lineNumber":72,"author":{"gitId":"TayJiunYuan"},"content":"            Task currentTask \u003d Tasklist.tasksList.get(i);","lastModifiedDate":"2023-02-25"},{"lineNumber":73,"author":{"gitId":"TayJiunYuan"},"content":"            fw.write(currentTask.encode() + System.lineSeparator());","lastModifiedDate":"2023-02-16"},{"lineNumber":74,"author":{"gitId":"TayJiunYuan"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":75,"author":{"gitId":"TayJiunYuan"},"content":"        fw.close();","lastModifiedDate":"2023-02-16"},{"lineNumber":76,"author":{"gitId":"TayJiunYuan"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":77,"author":{"gitId":"TayJiunYuan"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":78,"author":{"gitId":"TayJiunYuan"},"content":"    /*","lastModifiedDate":"2023-02-26"},{"lineNumber":79,"author":{"gitId":"TayJiunYuan"},"content":"     * Initailises readIntoList() method when duke is started","lastModifiedDate":"2023-02-26"},{"lineNumber":80,"author":{"gitId":"TayJiunYuan"},"content":"     * Catches the IOException throw by readIntoList()","lastModifiedDate":"2023-02-26"},{"lineNumber":81,"author":{"gitId":"TayJiunYuan"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":82,"author":{"gitId":"TayJiunYuan"},"content":"    public static void initialise(){","lastModifiedDate":"2023-02-25"},{"lineNumber":83,"author":{"gitId":"TayJiunYuan"},"content":"        try{","lastModifiedDate":"2023-02-25"},{"lineNumber":84,"author":{"gitId":"TayJiunYuan"},"content":"            readIntoList();","lastModifiedDate":"2023-02-25"},{"lineNumber":85,"author":{"gitId":"TayJiunYuan"},"content":"        } catch (IOException e){","lastModifiedDate":"2023-02-25"},{"lineNumber":86,"author":{"gitId":"TayJiunYuan"},"content":"            System.out.println(\"IO Error\");","lastModifiedDate":"2023-02-25"},{"lineNumber":87,"author":{"gitId":"TayJiunYuan"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":88,"author":{"gitId":"TayJiunYuan"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":89,"author":{"gitId":"TayJiunYuan"},"content":"}","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"TayJiunYuan":89}},{"path":"src/main/java/tasklist/Tasklist.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TayJiunYuan"},"content":"package tasklist;","lastModifiedDate":"2023-02-25"},{"lineNumber":2,"author":{"gitId":"TayJiunYuan"},"content":"import exceptions.InvalidAddTaskException;","lastModifiedDate":"2023-02-25"},{"lineNumber":3,"author":{"gitId":"TayJiunYuan"},"content":"import exceptions.InvalidCommandException;","lastModifiedDate":"2023-02-25"},{"lineNumber":4,"author":{"gitId":"TayJiunYuan"},"content":"import exceptions.InvalidFindTaskException;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"TayJiunYuan"},"content":"import exceptions.TaskListOutofBoundsException;","lastModifiedDate":"2023-02-25"},{"lineNumber":6,"author":{"gitId":"TayJiunYuan"},"content":"import tasks.Deadline;","lastModifiedDate":"2023-02-25"},{"lineNumber":7,"author":{"gitId":"TayJiunYuan"},"content":"import tasks.Event;","lastModifiedDate":"2023-02-25"},{"lineNumber":8,"author":{"gitId":"TayJiunYuan"},"content":"import tasks.Task;","lastModifiedDate":"2023-02-25"},{"lineNumber":9,"author":{"gitId":"TayJiunYuan"},"content":"import tasks.Todo;","lastModifiedDate":"2023-02-25"},{"lineNumber":10,"author":{"gitId":"TayJiunYuan"},"content":"import userInterface.Print;","lastModifiedDate":"2023-02-25"},{"lineNumber":11,"author":{"gitId":"TayJiunYuan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-25"},{"lineNumber":12,"author":{"gitId":"TayJiunYuan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"TayJiunYuan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"TayJiunYuan"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":15,"author":{"gitId":"TayJiunYuan"},"content":"/*","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"TayJiunYuan"},"content":" * Handles all the tasks methods","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"TayJiunYuan"},"content":" * Tasklist taskslist is the arraylist containing all the tasks","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"TayJiunYuan"},"content":" */","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"TayJiunYuan"},"content":"public class Tasklist {","lastModifiedDate":"2023-02-25"},{"lineNumber":20,"author":{"gitId":"TayJiunYuan"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":21,"author":{"gitId":"TayJiunYuan"},"content":"    public static ArrayList\u003cTask\u003e tasksList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-02-25"},{"lineNumber":22,"author":{"gitId":"TayJiunYuan"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":23,"author":{"gitId":"TayJiunYuan"},"content":"    /*","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"TayJiunYuan"},"content":"     * Used in the default case of the runCommand() method,","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"TayJiunYuan"},"content":"     * where the command input does not correspond to any possible commands","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"TayJiunYuan"},"content":"     * ","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"TayJiunYuan"},"content":"     * @throws InvalidCommandException","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"TayJiunYuan"},"content":"     */ ","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"TayJiunYuan"},"content":"    public static void throwInvalidCommand() throws InvalidCommandException{","lastModifiedDate":"2023-02-25"},{"lineNumber":30,"author":{"gitId":"TayJiunYuan"},"content":"        throw new InvalidCommandException();","lastModifiedDate":"2023-02-25"},{"lineNumber":31,"author":{"gitId":"TayJiunYuan"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":32,"author":{"gitId":"TayJiunYuan"},"content":"    ","lastModifiedDate":"2023-02-25"},{"lineNumber":33,"author":{"gitId":"TayJiunYuan"},"content":"    /*","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"TayJiunYuan"},"content":"     * Returns true if all parameters are present","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"TayJiunYuan"},"content":"     * Returns false if the dates or description or \"/to\" or \"/from\" is missing","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"TayJiunYuan"},"content":"     * ","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"TayJiunYuan"},"content":"     * @param String[] userInputArray array of user\u0027s event input","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"TayJiunYuan"},"content":"     * @return bool true/false if the parameters are valid/invalid","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"TayJiunYuan"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"TayJiunYuan"},"content":"    public static boolean isEventValid(String[] userInputArray){","lastModifiedDate":"2023-02-25"},{"lineNumber":41,"author":{"gitId":"TayJiunYuan"},"content":"        if (userInputArray.length \u003d\u003d 1){","lastModifiedDate":"2023-02-25"},{"lineNumber":42,"author":{"gitId":"TayJiunYuan"},"content":"            return false;           ","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"TayJiunYuan"},"content":"            }","lastModifiedDate":"2023-02-25"},{"lineNumber":44,"author":{"gitId":"TayJiunYuan"},"content":"        boolean containsFrom \u003d false;","lastModifiedDate":"2023-02-25"},{"lineNumber":45,"author":{"gitId":"TayJiunYuan"},"content":"        boolean containsTo \u003d false;","lastModifiedDate":"2023-02-25"},{"lineNumber":46,"author":{"gitId":"TayJiunYuan"},"content":"        boolean containsDescriptionAndDates \u003d false;","lastModifiedDate":"2023-02-25"},{"lineNumber":47,"author":{"gitId":"TayJiunYuan"},"content":"        String[] allDetails \u003d userInputArray[1].split(\" \");   ","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"TayJiunYuan"},"content":"        for (String i : allDetails){","lastModifiedDate":"2023-02-25"},{"lineNumber":49,"author":{"gitId":"TayJiunYuan"},"content":"            if (i.equals(\"/from\")){","lastModifiedDate":"2023-02-25"},{"lineNumber":50,"author":{"gitId":"TayJiunYuan"},"content":"                containsFrom \u003d true;","lastModifiedDate":"2023-02-25"},{"lineNumber":51,"author":{"gitId":"TayJiunYuan"},"content":"            }","lastModifiedDate":"2023-02-25"},{"lineNumber":52,"author":{"gitId":"TayJiunYuan"},"content":"            if (i.equals(\"/to\")){","lastModifiedDate":"2023-02-25"},{"lineNumber":53,"author":{"gitId":"TayJiunYuan"},"content":"                containsTo \u003d true;","lastModifiedDate":"2023-02-25"},{"lineNumber":54,"author":{"gitId":"TayJiunYuan"},"content":"            }","lastModifiedDate":"2023-02-25"},{"lineNumber":55,"author":{"gitId":"TayJiunYuan"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":56,"author":{"gitId":"TayJiunYuan"},"content":"        String[] eventDetails \u003d userInputArray[1].split(\"/from | /to \");","lastModifiedDate":"2023-02-25"},{"lineNumber":57,"author":{"gitId":"TayJiunYuan"},"content":"        if (eventDetails.length \u003d\u003d 3){","lastModifiedDate":"2023-02-25"},{"lineNumber":58,"author":{"gitId":"TayJiunYuan"},"content":"            containsDescriptionAndDates \u003d true;","lastModifiedDate":"2023-02-25"},{"lineNumber":59,"author":{"gitId":"TayJiunYuan"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":60,"author":{"gitId":"TayJiunYuan"},"content":"        return containsFrom \u0026\u0026 containsTo \u0026\u0026 containsDescriptionAndDates;","lastModifiedDate":"2023-02-25"},{"lineNumber":61,"author":{"gitId":"TayJiunYuan"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":62,"author":{"gitId":"TayJiunYuan"},"content":"    ","lastModifiedDate":"2023-02-25"},{"lineNumber":63,"author":{"gitId":"TayJiunYuan"},"content":"    /*","lastModifiedDate":"2023-02-26"},{"lineNumber":64,"author":{"gitId":"TayJiunYuan"},"content":"     * Returns true if all parameters are present","lastModifiedDate":"2023-02-26"},{"lineNumber":65,"author":{"gitId":"TayJiunYuan"},"content":"     * Returns false if the dates or description or \"/by\" is missing","lastModifiedDate":"2023-02-26"},{"lineNumber":66,"author":{"gitId":"TayJiunYuan"},"content":"     * ","lastModifiedDate":"2023-02-26"},{"lineNumber":67,"author":{"gitId":"TayJiunYuan"},"content":"     * @param String[] userInputArray array user\u0027s deadline input","lastModifiedDate":"2023-02-26"},{"lineNumber":68,"author":{"gitId":"TayJiunYuan"},"content":"     * @return bool true/false if the parameters are valid/invalid","lastModifiedDate":"2023-02-26"},{"lineNumber":69,"author":{"gitId":"TayJiunYuan"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":70,"author":{"gitId":"TayJiunYuan"},"content":"    public static boolean isDatelineValid(String[] userInputArray){","lastModifiedDate":"2023-02-25"},{"lineNumber":71,"author":{"gitId":"TayJiunYuan"},"content":"        if (userInputArray.length \u003d\u003d1){        ","lastModifiedDate":"2023-02-26"},{"lineNumber":72,"author":{"gitId":"TayJiunYuan"},"content":"            return false;","lastModifiedDate":"2023-02-25"},{"lineNumber":73,"author":{"gitId":"TayJiunYuan"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":74,"author":{"gitId":"TayJiunYuan"},"content":"        boolean byExists \u003d false;","lastModifiedDate":"2023-02-25"},{"lineNumber":75,"author":{"gitId":"TayJiunYuan"},"content":"        boolean descriptionAndDatesExists \u003d false;","lastModifiedDate":"2023-02-25"},{"lineNumber":76,"author":{"gitId":"TayJiunYuan"},"content":"        String[] allDetails \u003d userInputArray[1].split(\" \");","lastModifiedDate":"2023-02-25"},{"lineNumber":77,"author":{"gitId":"TayJiunYuan"},"content":"        for (String i : allDetails){           ","lastModifiedDate":"2023-02-26"},{"lineNumber":78,"author":{"gitId":"TayJiunYuan"},"content":"            if (i.equals(\"/by\")){","lastModifiedDate":"2023-02-25"},{"lineNumber":79,"author":{"gitId":"TayJiunYuan"},"content":"                byExists \u003d true;","lastModifiedDate":"2023-02-25"},{"lineNumber":80,"author":{"gitId":"TayJiunYuan"},"content":"            }","lastModifiedDate":"2023-02-25"},{"lineNumber":81,"author":{"gitId":"TayJiunYuan"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":82,"author":{"gitId":"TayJiunYuan"},"content":"        String[] datelineDetails \u003d userInputArray[1].split(\" /by\");","lastModifiedDate":"2023-02-25"},{"lineNumber":83,"author":{"gitId":"TayJiunYuan"},"content":"        if (datelineDetails.length \u003d\u003d 2){","lastModifiedDate":"2023-02-25"},{"lineNumber":84,"author":{"gitId":"TayJiunYuan"},"content":"            descriptionAndDatesExists \u003d true;           ","lastModifiedDate":"2023-02-26"},{"lineNumber":85,"author":{"gitId":"TayJiunYuan"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":86,"author":{"gitId":"TayJiunYuan"},"content":"        return byExists \u0026\u0026 descriptionAndDatesExists;","lastModifiedDate":"2023-02-25"},{"lineNumber":87,"author":{"gitId":"TayJiunYuan"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":88,"author":{"gitId":"TayJiunYuan"},"content":"    ","lastModifiedDate":"2023-02-25"},{"lineNumber":89,"author":{"gitId":"TayJiunYuan"},"content":"    /*","lastModifiedDate":"2023-02-26"},{"lineNumber":90,"author":{"gitId":"TayJiunYuan"},"content":"     * Splits the user\u0027s input into the separate Event parameters","lastModifiedDate":"2023-02-26"},{"lineNumber":91,"author":{"gitId":"TayJiunYuan"},"content":"     * Adds event into taskslist ","lastModifiedDate":"2023-02-26"},{"lineNumber":92,"author":{"gitId":"TayJiunYuan"},"content":"     * ","lastModifiedDate":"2023-02-26"},{"lineNumber":93,"author":{"gitId":"TayJiunYuan"},"content":"     * @param String[] userInputArray from user\u0027s event input","lastModifiedDate":"2023-02-26"},{"lineNumber":94,"author":{"gitId":"TayJiunYuan"},"content":"     * @throws InvalidAddTaskException is parameters are invalid","lastModifiedDate":"2023-02-26"},{"lineNumber":95,"author":{"gitId":"TayJiunYuan"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":96,"author":{"gitId":"TayJiunYuan"},"content":"    public static void addEvent(String[] userInputArray) throws InvalidAddTaskException{","lastModifiedDate":"2023-02-25"},{"lineNumber":97,"author":{"gitId":"TayJiunYuan"},"content":"        if (!isEventValid(userInputArray)){","lastModifiedDate":"2023-02-25"},{"lineNumber":98,"author":{"gitId":"TayJiunYuan"},"content":"            throw new InvalidAddTaskException();","lastModifiedDate":"2023-02-25"},{"lineNumber":99,"author":{"gitId":"TayJiunYuan"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":100,"author":{"gitId":"TayJiunYuan"},"content":"        String[] eventDetails \u003d userInputArray[1].split(\"/from | /to\");","lastModifiedDate":"2023-02-25"},{"lineNumber":101,"author":{"gitId":"TayJiunYuan"},"content":"        String eventDescription \u003d eventDetails[0];","lastModifiedDate":"2023-02-25"},{"lineNumber":102,"author":{"gitId":"TayJiunYuan"},"content":"        String startTime \u003d eventDetails[1];","lastModifiedDate":"2023-02-25"},{"lineNumber":103,"author":{"gitId":"TayJiunYuan"},"content":"        String endTime \u003d eventDetails[2];","lastModifiedDate":"2023-02-25"},{"lineNumber":104,"author":{"gitId":"TayJiunYuan"},"content":"        tasksList.add(new Event(eventDescription, startTime, endTime));","lastModifiedDate":"2023-02-25"},{"lineNumber":105,"author":{"gitId":"TayJiunYuan"},"content":"        Print.printTaskDescription(eventDescription);","lastModifiedDate":"2023-02-25"},{"lineNumber":106,"author":{"gitId":"TayJiunYuan"},"content":"    } ","lastModifiedDate":"2023-02-25"},{"lineNumber":107,"author":{"gitId":"TayJiunYuan"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":108,"author":{"gitId":"TayJiunYuan"},"content":"    public static LocalDate convertStringToDate(String deadlineDate){","lastModifiedDate":"2023-02-26"},{"lineNumber":109,"author":{"gitId":"TayJiunYuan"},"content":"        DateTimeFormatter dateFormatter\u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-02-26"},{"lineNumber":110,"author":{"gitId":"TayJiunYuan"},"content":"        LocalDate date \u003d LocalDate.parse(deadlineDate, dateFormatter);","lastModifiedDate":"2023-02-26"},{"lineNumber":111,"author":{"gitId":"TayJiunYuan"},"content":"        return date;","lastModifiedDate":"2023-02-26"},{"lineNumber":112,"author":{"gitId":"TayJiunYuan"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":113,"author":{"gitId":"TayJiunYuan"},"content":"    ","lastModifiedDate":"2023-02-26"},{"lineNumber":114,"author":{"gitId":"TayJiunYuan"},"content":"    /*","lastModifiedDate":"2023-02-26"},{"lineNumber":115,"author":{"gitId":"TayJiunYuan"},"content":"     * Splits the user\u0027s input into the separate Deadline parameters","lastModifiedDate":"2023-02-26"},{"lineNumber":116,"author":{"gitId":"TayJiunYuan"},"content":"     * Adds deadline into taskslist ","lastModifiedDate":"2023-02-26"},{"lineNumber":117,"author":{"gitId":"TayJiunYuan"},"content":"     * ","lastModifiedDate":"2023-02-26"},{"lineNumber":118,"author":{"gitId":"TayJiunYuan"},"content":"     * @param String[] userInputArray from user\u0027s deadline input","lastModifiedDate":"2023-02-26"},{"lineNumber":119,"author":{"gitId":"TayJiunYuan"},"content":"     * @throws InvalidAddTaskException is parameters are invalid","lastModifiedDate":"2023-02-26"},{"lineNumber":120,"author":{"gitId":"TayJiunYuan"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":121,"author":{"gitId":"TayJiunYuan"},"content":"    public static void addDeadline(String[] userInputArray) throws InvalidAddTaskException{","lastModifiedDate":"2023-02-25"},{"lineNumber":122,"author":{"gitId":"TayJiunYuan"},"content":"        if (!isDatelineValid(userInputArray)){","lastModifiedDate":"2023-02-25"},{"lineNumber":123,"author":{"gitId":"TayJiunYuan"},"content":"            throw new InvalidAddTaskException();","lastModifiedDate":"2023-02-25"},{"lineNumber":124,"author":{"gitId":"TayJiunYuan"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":125,"author":{"gitId":"TayJiunYuan"},"content":"        String[] deadlineDetails \u003d userInputArray[1].split(\" /by \",2);","lastModifiedDate":"2023-02-25"},{"lineNumber":126,"author":{"gitId":"TayJiunYuan"},"content":"        String deadlineDescription \u003d deadlineDetails[0];","lastModifiedDate":"2023-02-25"},{"lineNumber":127,"author":{"gitId":"TayJiunYuan"},"content":"        LocalDate deadlineDate \u003d convertStringToDate(deadlineDetails[1]);","lastModifiedDate":"2023-02-26"},{"lineNumber":128,"author":{"gitId":"TayJiunYuan"},"content":"        tasksList.add(new Deadline(deadlineDescription, deadlineDate));","lastModifiedDate":"2023-02-25"},{"lineNumber":129,"author":{"gitId":"TayJiunYuan"},"content":"        Print.printTaskDescription(deadlineDescription);","lastModifiedDate":"2023-02-25"},{"lineNumber":130,"author":{"gitId":"TayJiunYuan"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":131,"author":{"gitId":"TayJiunYuan"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":132,"author":{"gitId":"TayJiunYuan"},"content":"    /*","lastModifiedDate":"2023-02-26"},{"lineNumber":133,"author":{"gitId":"TayJiunYuan"},"content":"     * Adds todo into taskslist ","lastModifiedDate":"2023-02-26"},{"lineNumber":134,"author":{"gitId":"TayJiunYuan"},"content":"     * ","lastModifiedDate":"2023-02-26"},{"lineNumber":135,"author":{"gitId":"TayJiunYuan"},"content":"     * @param String[] userInputArray from user\u0027s todo input","lastModifiedDate":"2023-02-26"},{"lineNumber":136,"author":{"gitId":"TayJiunYuan"},"content":"     * @throws InvalidAddTaskException is parameters are invalid","lastModifiedDate":"2023-02-26"},{"lineNumber":137,"author":{"gitId":"TayJiunYuan"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":138,"author":{"gitId":"TayJiunYuan"},"content":"    public static void addTodo(String[] userInputArray) throws InvalidAddTaskException{","lastModifiedDate":"2023-02-25"},{"lineNumber":139,"author":{"gitId":"TayJiunYuan"},"content":"        if (userInputArray.length \u003d\u003d 1){","lastModifiedDate":"2023-02-25"},{"lineNumber":140,"author":{"gitId":"TayJiunYuan"},"content":"            throw new InvalidAddTaskException();","lastModifiedDate":"2023-02-25"},{"lineNumber":141,"author":{"gitId":"TayJiunYuan"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":142,"author":{"gitId":"TayJiunYuan"},"content":"        String todoDescription \u003d userInputArray[1];","lastModifiedDate":"2023-02-25"},{"lineNumber":143,"author":{"gitId":"TayJiunYuan"},"content":"        tasksList.add(new Todo(todoDescription));","lastModifiedDate":"2023-02-25"},{"lineNumber":144,"author":{"gitId":"TayJiunYuan"},"content":"        Print.printTaskDescription(todoDescription); ","lastModifiedDate":"2023-02-25"},{"lineNumber":145,"author":{"gitId":"TayJiunYuan"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":146,"author":{"gitId":"TayJiunYuan"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":147,"author":{"gitId":"TayJiunYuan"},"content":"    /*","lastModifiedDate":"2023-02-26"},{"lineNumber":148,"author":{"gitId":"TayJiunYuan"},"content":"     * Retrieves each Task from tasksList and prints their information ","lastModifiedDate":"2023-02-26"},{"lineNumber":149,"author":{"gitId":"TayJiunYuan"},"content":"     * In the form of taskNumber.[mark Status][task type] description dates/times","lastModifiedDate":"2023-02-26"},{"lineNumber":150,"author":{"gitId":"TayJiunYuan"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":151,"author":{"gitId":"TayJiunYuan"},"content":"    public static void displayTaskList(){","lastModifiedDate":"2023-02-25"},{"lineNumber":152,"author":{"gitId":"TayJiunYuan"},"content":"        Print.printLine();","lastModifiedDate":"2023-02-25"},{"lineNumber":153,"author":{"gitId":"TayJiunYuan"},"content":"        for (int i \u003d 0; i \u003c tasksList.size(); i++){","lastModifiedDate":"2023-02-25"},{"lineNumber":154,"author":{"gitId":"TayJiunYuan"},"content":"            String taskNumber \u003d Integer.toString(i+1);","lastModifiedDate":"2023-02-25"},{"lineNumber":155,"author":{"gitId":"TayJiunYuan"},"content":"            Task currentTask \u003d tasksList.get(i);      ","lastModifiedDate":"2023-02-25"},{"lineNumber":156,"author":{"gitId":"TayJiunYuan"},"content":"            System.out.println(\"\\t\" + taskNumber + \".\" + currentTask.getStatusIcon() + currentTask.printTask());","lastModifiedDate":"2023-02-25"},{"lineNumber":157,"author":{"gitId":"TayJiunYuan"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":158,"author":{"gitId":"TayJiunYuan"},"content":"        Print.printLine();","lastModifiedDate":"2023-02-25"},{"lineNumber":159,"author":{"gitId":"TayJiunYuan"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":160,"author":{"gitId":"TayJiunYuan"},"content":"    ","lastModifiedDate":"2023-02-25"},{"lineNumber":161,"author":{"gitId":"TayJiunYuan"},"content":"    /*","lastModifiedDate":"2023-02-26"},{"lineNumber":162,"author":{"gitId":"TayJiunYuan"},"content":"     * Deletes Task in taskslist","lastModifiedDate":"2023-02-26"},{"lineNumber":163,"author":{"gitId":"TayJiunYuan"},"content":"     * ","lastModifiedDate":"2023-02-26"},{"lineNumber":164,"author":{"gitId":"TayJiunYuan"},"content":"     * @param int Index of Task specified by user ","lastModifiedDate":"2023-02-26"},{"lineNumber":165,"author":{"gitId":"TayJiunYuan"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":166,"author":{"gitId":"TayJiunYuan"},"content":"    public static void deleteTask(int index){","lastModifiedDate":"2023-02-25"},{"lineNumber":167,"author":{"gitId":"TayJiunYuan"},"content":"        Task currentTask \u003d tasksList.get(index-1); ","lastModifiedDate":"2023-02-25"},{"lineNumber":168,"author":{"gitId":"TayJiunYuan"},"content":"        System.out.println(\"\\t\" + \"Noted. I have removed this task: \" + currentTask.getStatusIcon() + currentTask.printTask());","lastModifiedDate":"2023-02-25"},{"lineNumber":169,"author":{"gitId":"TayJiunYuan"},"content":"        tasksList.remove(currentTask);","lastModifiedDate":"2023-02-25"},{"lineNumber":170,"author":{"gitId":"TayJiunYuan"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":171,"author":{"gitId":"TayJiunYuan"},"content":"    ","lastModifiedDate":"2023-02-25"},{"lineNumber":172,"author":{"gitId":"TayJiunYuan"},"content":"    /*","lastModifiedDate":"2023-02-26"},{"lineNumber":173,"author":{"gitId":"TayJiunYuan"},"content":"     * Marks Task in taskslist","lastModifiedDate":"2023-02-26"},{"lineNumber":174,"author":{"gitId":"TayJiunYuan"},"content":"     * ","lastModifiedDate":"2023-02-26"},{"lineNumber":175,"author":{"gitId":"TayJiunYuan"},"content":"     * @param int Index of Task specified by user ","lastModifiedDate":"2023-02-26"},{"lineNumber":176,"author":{"gitId":"TayJiunYuan"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":177,"author":{"gitId":"TayJiunYuan"},"content":"    public static void markTask(int index){","lastModifiedDate":"2023-02-25"},{"lineNumber":178,"author":{"gitId":"TayJiunYuan"},"content":"        Task currentTask \u003d tasksList.get(index-1); ","lastModifiedDate":"2023-02-25"},{"lineNumber":179,"author":{"gitId":"TayJiunYuan"},"content":"        currentTask.markAsDone();","lastModifiedDate":"2023-02-25"},{"lineNumber":180,"author":{"gitId":"TayJiunYuan"},"content":"        Print.printLine();","lastModifiedDate":"2023-02-25"},{"lineNumber":181,"author":{"gitId":"TayJiunYuan"},"content":"        System.out.println(\"\\t\" + \u0027\"\u0027 + currentTask.description + \u0027\"\u0027 + \" is marked as done! Good Job :)\");","lastModifiedDate":"2023-02-25"},{"lineNumber":182,"author":{"gitId":"TayJiunYuan"},"content":"        Print.printLine();","lastModifiedDate":"2023-02-25"},{"lineNumber":183,"author":{"gitId":"TayJiunYuan"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":184,"author":{"gitId":"TayJiunYuan"},"content":"    ","lastModifiedDate":"2023-02-25"},{"lineNumber":185,"author":{"gitId":"TayJiunYuan"},"content":"    /*","lastModifiedDate":"2023-02-26"},{"lineNumber":186,"author":{"gitId":"TayJiunYuan"},"content":"     * Unmarks Task in taskslist","lastModifiedDate":"2023-02-26"},{"lineNumber":187,"author":{"gitId":"TayJiunYuan"},"content":"     * ","lastModifiedDate":"2023-02-26"},{"lineNumber":188,"author":{"gitId":"TayJiunYuan"},"content":"     * @param int Index of Task specified by user ","lastModifiedDate":"2023-02-26"},{"lineNumber":189,"author":{"gitId":"TayJiunYuan"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":190,"author":{"gitId":"TayJiunYuan"},"content":"    public static void unmarkTask(int index){","lastModifiedDate":"2023-02-25"},{"lineNumber":191,"author":{"gitId":"TayJiunYuan"},"content":"        Task currentTask \u003d tasksList.get(index-1); ","lastModifiedDate":"2023-02-25"},{"lineNumber":192,"author":{"gitId":"TayJiunYuan"},"content":"        currentTask.markAsUndone();","lastModifiedDate":"2023-02-25"},{"lineNumber":193,"author":{"gitId":"TayJiunYuan"},"content":"        Print.printLine();","lastModifiedDate":"2023-02-25"},{"lineNumber":194,"author":{"gitId":"TayJiunYuan"},"content":"        System.out.println(\"\\t\" + \u0027\"\u0027 + currentTask.description + \u0027\"\u0027 + \" is marked as undone. Jiayou!\");","lastModifiedDate":"2023-02-25"},{"lineNumber":195,"author":{"gitId":"TayJiunYuan"},"content":"        Print.printLine();","lastModifiedDate":"2023-02-25"},{"lineNumber":196,"author":{"gitId":"TayJiunYuan"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":197,"author":{"gitId":"TayJiunYuan"},"content":"    ","lastModifiedDate":"2023-02-25"},{"lineNumber":198,"author":{"gitId":"TayJiunYuan"},"content":"    /*","lastModifiedDate":"2023-02-26"},{"lineNumber":199,"author":{"gitId":"TayJiunYuan"},"content":"     * Returns the command of the user\u0027s input","lastModifiedDate":"2023-02-26"},{"lineNumber":200,"author":{"gitId":"TayJiunYuan"},"content":"     * ","lastModifiedDate":"2023-02-26"},{"lineNumber":201,"author":{"gitId":"TayJiunYuan"},"content":"     * @param String[] userInputArray from user\u0027s input","lastModifiedDate":"2023-02-26"},{"lineNumber":202,"author":{"gitId":"TayJiunYuan"},"content":"     * @return String command ","lastModifiedDate":"2023-02-26"},{"lineNumber":203,"author":{"gitId":"TayJiunYuan"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":204,"author":{"gitId":"TayJiunYuan"},"content":"    public static String retrieveCommand(String[] userInputArray){","lastModifiedDate":"2023-02-25"},{"lineNumber":205,"author":{"gitId":"TayJiunYuan"},"content":"        String command \u003d userInputArray[0];","lastModifiedDate":"2023-02-25"},{"lineNumber":206,"author":{"gitId":"TayJiunYuan"},"content":"        return command;","lastModifiedDate":"2023-02-25"},{"lineNumber":207,"author":{"gitId":"TayJiunYuan"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":208,"author":{"gitId":"TayJiunYuan"},"content":"    ","lastModifiedDate":"2023-02-25"},{"lineNumber":209,"author":{"gitId":"TayJiunYuan"},"content":"    /*","lastModifiedDate":"2023-02-26"},{"lineNumber":210,"author":{"gitId":"TayJiunYuan"},"content":"     * Returns the index of the task that the user wants to mark/unmark/delete","lastModifiedDate":"2023-02-26"},{"lineNumber":211,"author":{"gitId":"TayJiunYuan"},"content":"     * ","lastModifiedDate":"2023-02-26"},{"lineNumber":212,"author":{"gitId":"TayJiunYuan"},"content":"     * @param String[] userInputArray from user\u0027s input","lastModifiedDate":"2023-02-26"},{"lineNumber":213,"author":{"gitId":"TayJiunYuan"},"content":"     * @return int markIndex","lastModifiedDate":"2023-02-26"},{"lineNumber":214,"author":{"gitId":"TayJiunYuan"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":215,"author":{"gitId":"TayJiunYuan"},"content":"    public static int retrieveMarkIndex(String[] userInputArray) throws TaskListOutofBoundsException{","lastModifiedDate":"2023-02-25"},{"lineNumber":216,"author":{"gitId":"TayJiunYuan"},"content":"        int markIndex \u003d Integer.parseInt(userInputArray[1]);","lastModifiedDate":"2023-02-25"},{"lineNumber":217,"author":{"gitId":"TayJiunYuan"},"content":"        if (markIndex \u003d\u003d 0 || markIndex \u003e tasksList.size()){","lastModifiedDate":"2023-02-25"},{"lineNumber":218,"author":{"gitId":"TayJiunYuan"},"content":"            throw new TaskListOutofBoundsException();","lastModifiedDate":"2023-02-25"},{"lineNumber":219,"author":{"gitId":"TayJiunYuan"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":220,"author":{"gitId":"TayJiunYuan"},"content":"        return markIndex;","lastModifiedDate":"2023-02-25"},{"lineNumber":221,"author":{"gitId":"TayJiunYuan"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":222,"author":{"gitId":"TayJiunYuan"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":223,"author":{"gitId":"TayJiunYuan"},"content":"    public static void findTask(String[] userInputArray)throws InvalidFindTaskException{","lastModifiedDate":"2023-02-26"},{"lineNumber":224,"author":{"gitId":"TayJiunYuan"},"content":"        if (userInputArray.length \u003d\u003d 1){","lastModifiedDate":"2023-02-26"},{"lineNumber":225,"author":{"gitId":"TayJiunYuan"},"content":"            throw new InvalidFindTaskException();","lastModifiedDate":"2023-02-26"},{"lineNumber":226,"author":{"gitId":"TayJiunYuan"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":227,"author":{"gitId":"TayJiunYuan"},"content":"        String taskName \u003d userInputArray[1];","lastModifiedDate":"2023-02-26"},{"lineNumber":228,"author":{"gitId":"TayJiunYuan"},"content":"        Print.printMatchingTasks();","lastModifiedDate":"2023-02-26"},{"lineNumber":229,"author":{"gitId":"TayJiunYuan"},"content":"        for (int i \u003d 0; i \u003c tasksList.size(); i++){","lastModifiedDate":"2023-02-26"},{"lineNumber":230,"author":{"gitId":"TayJiunYuan"},"content":"            Task currentTask \u003d tasksList.get(i);","lastModifiedDate":"2023-02-26"},{"lineNumber":231,"author":{"gitId":"TayJiunYuan"},"content":"            if (currentTask.description.contains(taskName)){","lastModifiedDate":"2023-02-26"},{"lineNumber":232,"author":{"gitId":"TayJiunYuan"},"content":"                System.out.println(\"\\t\" + currentTask.getStatusIcon() + currentTask.printTask());","lastModifiedDate":"2023-02-26"},{"lineNumber":233,"author":{"gitId":"TayJiunYuan"},"content":"            }","lastModifiedDate":"2023-02-26"},{"lineNumber":234,"author":{"gitId":"TayJiunYuan"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":235,"author":{"gitId":"TayJiunYuan"},"content":"        Print.printLine();","lastModifiedDate":"2023-02-26"},{"lineNumber":236,"author":{"gitId":"TayJiunYuan"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":237,"author":{"gitId":"TayJiunYuan"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":238,"author":{"gitId":"TayJiunYuan"},"content":"}","lastModifiedDate":"2023-02-25"}],"authorContributionMap":{"TayJiunYuan":238}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TayJiunYuan"},"content":"package tasks;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"TayJiunYuan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"TayJiunYuan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"TayJiunYuan"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"TayJiunYuan"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"TayJiunYuan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"TayJiunYuan"},"content":"    protected LocalDate by;","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"TayJiunYuan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"TayJiunYuan"},"content":"    public Deadline(String description, LocalDate deadlineDate){","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"TayJiunYuan"},"content":"        super(description);","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"TayJiunYuan"},"content":"        this.by \u003d deadlineDate;","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"TayJiunYuan"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"TayJiunYuan"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"TayJiunYuan"},"content":"    public String convertPrintDateFormat(LocalDate by){","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"TayJiunYuan"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"TayJiunYuan"},"content":"        return by.format(formatter);","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"TayJiunYuan"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"TayJiunYuan"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"TayJiunYuan"},"content":"    public String convertEncodeDateFormat(LocalDate by){","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"TayJiunYuan"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"TayJiunYuan"},"content":"        return by.format(formatter);","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"TayJiunYuan"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"TayJiunYuan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"TayJiunYuan"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"TayJiunYuan"},"content":"    public String printTask(){","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"TayJiunYuan"},"content":"        return \"[D] \" + super.printTask() + \" (by: \"+ convertPrintDateFormat(by) + \")\";","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"TayJiunYuan"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"TayJiunYuan"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"TayJiunYuan"},"content":"    public String encode(){","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"TayJiunYuan"},"content":"        String encodedString \u003d \"deadline\" + \"/\" + super.encode() + \"/\" + convertEncodeDateFormat(by);  ","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"TayJiunYuan"},"content":"        return encodedString;","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"TayJiunYuan"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"TayJiunYuan"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"TayJiunYuan"},"content":"}","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"TayJiunYuan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"TayJiunYuan"},"content":"","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"TayJiunYuan":36}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TayJiunYuan"},"content":"package tasks;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"TayJiunYuan"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"TayJiunYuan"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"TayJiunYuan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"TayJiunYuan"},"content":"    protected String startTime;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"TayJiunYuan"},"content":"    protected String endTime;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"TayJiunYuan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"TayJiunYuan"},"content":"    public Event(String description, String startTime, String endTime){","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"TayJiunYuan"},"content":"        super(description);","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"TayJiunYuan"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"TayJiunYuan"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"TayJiunYuan"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"TayJiunYuan"},"content":"    ","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"TayJiunYuan"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"TayJiunYuan"},"content":"    public String printTask(){","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"TayJiunYuan"},"content":"        return \"[E] \" + super.printTask() + \" (from: \" + startTime + \" to: \" + endTime + \")\";","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"TayJiunYuan"},"content":"   }","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"TayJiunYuan"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"TayJiunYuan"},"content":"   @Override","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"TayJiunYuan"},"content":"    public String encode(){","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"TayJiunYuan"},"content":"        String encodedString \u003d \"event\" + \"/\" + super.encode() + \"/\" + startTime + \"/\" + endTime;  ","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"TayJiunYuan"},"content":"        return encodedString;","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"TayJiunYuan"},"content":"   }","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"TayJiunYuan"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"TayJiunYuan":24}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TayJiunYuan"},"content":"package tasks;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"TayJiunYuan"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"TayJiunYuan"},"content":"public class Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"TayJiunYuan"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"TayJiunYuan"},"content":"    public String description;","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"TayJiunYuan"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"TayJiunYuan"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"TayJiunYuan"},"content":"    public Task(String description){","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"TayJiunYuan"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"TayJiunYuan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"TayJiunYuan"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"TayJiunYuan"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"TayJiunYuan"},"content":"    public String getStatusIcon(){","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"TayJiunYuan"},"content":"        return (isDone ? \"[X]\" : \"[ ]\"); // mark done task with X","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"TayJiunYuan"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"TayJiunYuan"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"TayJiunYuan"},"content":"    public void markAsDone(){","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"TayJiunYuan"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"TayJiunYuan"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"TayJiunYuan"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"TayJiunYuan"},"content":"    public void markAsUndone(){","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"TayJiunYuan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"TayJiunYuan"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"TayJiunYuan"},"content":"    ","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"TayJiunYuan"},"content":"    public String printTask(){","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"TayJiunYuan"},"content":"        return description;","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"TayJiunYuan"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"TayJiunYuan"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"TayJiunYuan"},"content":"    public String encode(){","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"TayJiunYuan"},"content":"        String markStatus \u003d \"0\";","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"TayJiunYuan"},"content":"        if (this.isDone){","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"TayJiunYuan"},"content":"            markStatus \u003d \"1\";","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"TayJiunYuan"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"TayJiunYuan"},"content":"        String encodedString \u003d markStatus + \"/\" + description;","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"TayJiunYuan"},"content":"        return encodedString;","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"TayJiunYuan"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"TayJiunYuan"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"TayJiunYuan":37}},{"path":"src/main/java/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TayJiunYuan"},"content":"package tasks;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"TayJiunYuan"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"TayJiunYuan"},"content":"public class Todo extends Task{","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"TayJiunYuan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"TayJiunYuan"},"content":"    public Todo(String description){","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"TayJiunYuan"},"content":"        super(description);","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"TayJiunYuan"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"TayJiunYuan"},"content":"    ","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"TayJiunYuan"},"content":"   @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"TayJiunYuan"},"content":"   public String printTask(){","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"TayJiunYuan"},"content":"       return \"[T] \" + super.printTask();","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"TayJiunYuan"},"content":"   }","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"TayJiunYuan"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"TayJiunYuan"},"content":"   public String encode(){","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"TayJiunYuan"},"content":"       String encodedString \u003d \"todo\" + \"/\" + super.encode();","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"TayJiunYuan"},"content":"       return encodedString;","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"TayJiunYuan"},"content":"   }","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"TayJiunYuan"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"TayJiunYuan":18}},{"path":"src/main/java/userInterface/Print.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TayJiunYuan"},"content":"package userInterface;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"TayJiunYuan"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"TayJiunYuan"},"content":"/*","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"TayJiunYuan"},"content":" * Stores the methods to print default messages in the CLI","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"TayJiunYuan"},"content":" */","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"TayJiunYuan"},"content":"public class Print {","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"TayJiunYuan"},"content":"    public static void printLine(){","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"TayJiunYuan"},"content":"        String horizontalLine \u003d \"\\t――――――――――――――――――――――――――――――――――――――――――\";","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"TayJiunYuan"},"content":"        System.out.println(horizontalLine);","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"TayJiunYuan"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"TayJiunYuan"},"content":"    ","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"TayJiunYuan"},"content":"    public static void printWelcome(){","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"TayJiunYuan"},"content":"        printLine();","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"TayJiunYuan"},"content":"        System.out.println(\"\\tWell hello there!\\n\" +","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"TayJiunYuan"},"content":"                           \"\\tWhat can I do for you today?\");","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"TayJiunYuan"},"content":"        printLine();","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"TayJiunYuan"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"TayJiunYuan"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"TayJiunYuan"},"content":"    public static void printGoodbye(){","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"TayJiunYuan"},"content":"        printLine();","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"TayJiunYuan"},"content":"        System.out.println(\"\\tThank you! See you again soon :)\");","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"TayJiunYuan"},"content":"        printLine();","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"TayJiunYuan"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"TayJiunYuan"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"TayJiunYuan"},"content":"    public static void printTaskDescription(String description){","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"TayJiunYuan"},"content":"        printLine();","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"TayJiunYuan"},"content":"        System.out.println(\"\\tadded: \" + description);","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"TayJiunYuan"},"content":"        printLine(); ","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"TayJiunYuan"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"TayJiunYuan"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"TayJiunYuan"},"content":"    public static void printMatchingTasks(){","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"TayJiunYuan"},"content":"        System.out.println(\"\\tHere are the matching tasks in your list!\");","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"TayJiunYuan"},"content":"        printLine();","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"TayJiunYuan"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"TayJiunYuan"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"TayJiunYuan":35}},{"path":"src/main/java/userInterface/UserInput.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TayJiunYuan"},"content":"package userInterface;","lastModifiedDate":"2023-02-25"},{"lineNumber":2,"author":{"gitId":"TayJiunYuan"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-25"},{"lineNumber":3,"author":{"gitId":"TayJiunYuan"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":4,"author":{"gitId":"TayJiunYuan"},"content":"public class UserInput { ","lastModifiedDate":"2023-02-25"},{"lineNumber":5,"author":{"gitId":"TayJiunYuan"},"content":"    private static Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-25"},{"lineNumber":6,"author":{"gitId":"TayJiunYuan"},"content":"    ","lastModifiedDate":"2023-02-25"},{"lineNumber":7,"author":{"gitId":"TayJiunYuan"},"content":"    /*","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"TayJiunYuan"},"content":"     * Scans the user\u0027s input in the CLI and return as a string","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"TayJiunYuan"},"content":"     * ","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"TayJiunYuan"},"content":"     * @return String userInput ","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"TayJiunYuan"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"TayJiunYuan"},"content":"    public static String getInput(){","lastModifiedDate":"2023-02-25"},{"lineNumber":13,"author":{"gitId":"TayJiunYuan"},"content":"        String userInput \u003d in.nextLine();","lastModifiedDate":"2023-02-25"},{"lineNumber":14,"author":{"gitId":"TayJiunYuan"},"content":"        return userInput;","lastModifiedDate":"2023-02-25"},{"lineNumber":15,"author":{"gitId":"TayJiunYuan"},"content":"    }   ","lastModifiedDate":"2023-02-25"},{"lineNumber":16,"author":{"gitId":"TayJiunYuan"},"content":"}","lastModifiedDate":"2023-02-25"}],"authorContributionMap":{"TayJiunYuan":16}}]
