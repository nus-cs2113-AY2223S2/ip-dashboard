[{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lil1n"},"content":"package duke;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"lil1n"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"lil1n"},"content":"import duke.data.FileActions;","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"lil1n"},"content":"import duke.data.DataActions;","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"lil1n"},"content":"import duke.command.CommandWords;","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"lil1n"},"content":"import duke.command.Command;","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"lil1n"},"content":"import duke.output.Printer;","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"lil1n"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"lil1n"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"lil1n"},"content":"import java.io.File;","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"lil1n"},"content":"        Printer.greeting();","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"lil1n"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"lil1n"},"content":"        // make dir if it does not exist","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"lil1n"},"content":"        FileActions.makeDirectory();","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"lil1n"},"content":"        // make file if it does not exist","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"lil1n"},"content":"        File dataFile \u003d FileActions.openDataFile();","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"lil1n"},"content":"        // import the data from file to program","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"lil1n"},"content":"        DataActions.importData(dataFile, tasks);","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"lil1n"},"content":"        // user to input update","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"lil1n"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"lil1n"},"content":"        String input \u003d in.nextLine();","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"lil1n"},"content":"        while (!input.equals(CommandWords.BYE.COMMAND)) {","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"lil1n"},"content":"            Command.evaluate(input, tasks);","lastModifiedDate":"2023-02-10"},{"lineNumber":31,"author":{"gitId":"lil1n"},"content":"            input \u003d in.nextLine();","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"lil1n"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"lil1n"},"content":"        // save data to file","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"lil1n"},"content":"        DataActions.updateSavedData(tasks);","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":37,"author":{"gitId":"lil1n"},"content":"        Printer.bye();","lastModifiedDate":"2023-02-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":4,"lil1n":35}},{"path":"src/main/java/duke/command/CheckDelete.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lil1n"},"content":"package duke.command;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"lil1n"},"content":"import duke.error.DukeException;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"lil1n"},"content":"import duke.error.ErrorTypes;","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"lil1n"},"content":"import duke.error.ThrowError;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"lil1n"},"content":"public class CheckDelete {","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"lil1n"},"content":"    private static final int VALID_DELETE_LENGTH \u003d 2;","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"lil1n"},"content":"    public static boolean isDelete(String[] input) throws DukeException {","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"lil1n"},"content":"        boolean isTwoWordInput \u003d (input.length \u003d\u003d VALID_DELETE_LENGTH);","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"lil1n"},"content":"        boolean isFirstWordDelete \u003d input[0].equals(CommandWords.DELETE.COMMAND);","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"lil1n"},"content":"        if (!isFirstWordDelete) {","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"lil1n"},"content":"            return false;","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"lil1n"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"lil1n"},"content":"        if (!isTwoWordInput) {","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"lil1n"},"content":"            // user only provided \"delete\"","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"lil1n"},"content":"            ThrowError.throwError(ErrorTypes.INVALID_DELETE_COMMAND.ERROR_TYPE);","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"lil1n"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"lil1n"},"content":"        boolean isSecondWordNumber \u003d VerifyInput.isStringOfInteger(input[1]);","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"lil1n"},"content":"        if (!isSecondWordNumber) {","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"lil1n"},"content":"            // user provided \"delete \u003cnon digit chara\u003e\"","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"lil1n"},"content":"            ThrowError.throwError(ErrorTypes.INVALID_DELETE_COMMAND.ERROR_TYPE);","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"lil1n"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"lil1n"},"content":"        VerifyInput.checkWithinCount(Integer.parseInt(input[1]));","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"lil1n"},"content":"        return true;","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"lil1n"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"lil1n"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"lil1n":27}},{"path":"src/main/java/duke/command/CheckMarkUnmark.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lil1n"},"content":"package duke.command;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"lil1n"},"content":"import duke.error.DukeException;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"lil1n"},"content":"import duke.error.ErrorTypes;","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"lil1n"},"content":"import duke.error.ThrowError;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"lil1n"},"content":"public class CheckMarkUnmark {","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"lil1n"},"content":"    private static final int VALID_MARK_LENGTH \u003d 2;","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"lil1n"},"content":"    private static final int VALID_UNMARK_LENGTH \u003d 2;","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"lil1n"},"content":"    public static boolean isMark(String[] input) throws DukeException {","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"lil1n"},"content":"        boolean isTwoWordInput \u003d (input.length \u003d\u003d VALID_MARK_LENGTH);","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"lil1n"},"content":"        boolean isFirstWordMark \u003d input[0].equals(CommandWords.MARK.COMMAND);","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"lil1n"},"content":"        if (!isFirstWordMark) {","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"lil1n"},"content":"            return false;","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"lil1n"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"lil1n"},"content":"        if (!isTwoWordInput) {","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"lil1n"},"content":"            // user only provided \"mark\"","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"lil1n"},"content":"            ThrowError.throwError(ErrorTypes.INVALID_MARK_COMMAND.ERROR_TYPE);","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"lil1n"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"lil1n"},"content":"        boolean isSecondWordNumber \u003d VerifyInput.isStringOfInteger(input[1]);","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"lil1n"},"content":"        if (!isSecondWordNumber) {","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"lil1n"},"content":"            // user provided \"mark \u003cnon digit chara\u003e\"","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"lil1n"},"content":"            ThrowError.throwError(ErrorTypes.INVALID_MARK_COMMAND.ERROR_TYPE);","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"lil1n"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"lil1n"},"content":"        VerifyInput.checkWithinCount(Integer.parseInt(input[1]));","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"lil1n"},"content":"        return true;","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"lil1n"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"lil1n"},"content":"    public static boolean isUnmark(String[] input) throws DukeException {","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"lil1n"},"content":"        // if input length (separated by \" \") \u003d\u003d 2 \u0026\u0026 first word \u003d\u003d \"unmark\" \u0026\u0026 second word only contains numbers","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"lil1n"},"content":"        boolean isTwoWordInput \u003d (input.length \u003d\u003d VALID_UNMARK_LENGTH);","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"lil1n"},"content":"        boolean isFirstWordUnmark \u003d input[0].equals(CommandWords.UNMARK.COMMAND);","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"lil1n"},"content":"        if (!isFirstWordUnmark) {","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"lil1n"},"content":"            return false;","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"lil1n"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"lil1n"},"content":"        if (!isTwoWordInput) {","lastModifiedDate":"2023-02-11"},{"lineNumber":37,"author":{"gitId":"lil1n"},"content":"            // user only provided \"unmark\"","lastModifiedDate":"2023-02-11"},{"lineNumber":38,"author":{"gitId":"lil1n"},"content":"            ThrowError.throwError(ErrorTypes.INVALID_UNMARK_COMMAND.ERROR_TYPE);","lastModifiedDate":"2023-02-11"},{"lineNumber":39,"author":{"gitId":"lil1n"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":40,"author":{"gitId":"lil1n"},"content":"        boolean isSecondWordNumber \u003d VerifyInput.isStringOfInteger(input[1]);","lastModifiedDate":"2023-02-11"},{"lineNumber":41,"author":{"gitId":"lil1n"},"content":"        if (!isSecondWordNumber) {","lastModifiedDate":"2023-02-11"},{"lineNumber":42,"author":{"gitId":"lil1n"},"content":"            // user provided \"unmark \u003cnon digit chara\u003e\"","lastModifiedDate":"2023-02-11"},{"lineNumber":43,"author":{"gitId":"lil1n"},"content":"            ThrowError.throwError(ErrorTypes.INVALID_UNMARK_COMMAND.ERROR_TYPE);","lastModifiedDate":"2023-02-11"},{"lineNumber":44,"author":{"gitId":"lil1n"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":45,"author":{"gitId":"lil1n"},"content":"        VerifyInput.checkWithinCount(Integer.parseInt(input[1]));","lastModifiedDate":"2023-02-11"},{"lineNumber":46,"author":{"gitId":"lil1n"},"content":"        return true;","lastModifiedDate":"2023-02-11"},{"lineNumber":47,"author":{"gitId":"lil1n"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":48,"author":{"gitId":"lil1n"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"lil1n":48}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lil1n"},"content":"package duke.command;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"lil1n"},"content":"import duke.error.DukeException;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"lil1n"},"content":"import duke.error.ErrorTypes;","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"lil1n"},"content":"import duke.error.ThrowError;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"lil1n"},"content":"import duke.output.Printer;","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"lil1n"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"lil1n"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"lil1n"},"content":"public class Command {","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"lil1n"},"content":"    public static void evaluate(String input, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"lil1n"},"content":"        try {","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"lil1n"},"content":"            String[] arrayOfInput \u003d input.split(\" \");","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"lil1n"},"content":"            if (input.equals(CommandWords.LIST.COMMAND)) {","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"lil1n"},"content":"                Printer.listTasks(tasks);","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"lil1n"},"content":"            } else if (CheckMarkUnmark.isMark(arrayOfInput)) {","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"lil1n"},"content":"                // if command is \"mark \u003cint\u003e\"","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"lil1n"},"content":"                CommandActions.markTask(tasks, arrayOfInput);","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"lil1n"},"content":"            } else if (CheckMarkUnmark.isUnmark(arrayOfInput)) {","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"lil1n"},"content":"                // if command is \"unmark \u003cint\u003e\"","lastModifiedDate":"2023-02-10"},{"lineNumber":22,"author":{"gitId":"lil1n"},"content":"                CommandActions.unmarkTask(tasks, arrayOfInput);","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"lil1n"},"content":"            } else if (CheckDelete.isDelete(arrayOfInput)) {","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"lil1n"},"content":"                // if command is \"delete \u003cint\u003e\"","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"lil1n"},"content":"                CommandActions.deleteTask(tasks, arrayOfInput);","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"lil1n"},"content":"            } else {","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"lil1n"},"content":"                // command is to add task","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"lil1n"},"content":"                decideTaskType(input, tasks, arrayOfInput);","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"lil1n"},"content":"            }","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"lil1n"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-10"},{"lineNumber":31,"author":{"gitId":"lil1n"},"content":"            Printer.endLine();","lastModifiedDate":"2023-02-10"},{"lineNumber":32,"author":{"gitId":"lil1n"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":33,"author":{"gitId":"lil1n"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":34,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":35,"author":{"gitId":"lil1n"},"content":"    public static void decideTaskType(String input, ArrayList\u003cTask\u003e tasks, String[] arrayOfInput) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"lil1n"},"content":"        boolean isInputTodo \u003d arrayOfInput[0].equals(CommandWords.TODO.COMMAND);","lastModifiedDate":"2023-02-10"},{"lineNumber":37,"author":{"gitId":"lil1n"},"content":"        boolean isInputDeadline \u003d arrayOfInput[0].equals(CommandWords.DEADLINE.COMMAND);","lastModifiedDate":"2023-02-10"},{"lineNumber":38,"author":{"gitId":"lil1n"},"content":"        boolean isInputEvent \u003d arrayOfInput[0].equals(CommandWords.EVENT.COMMAND);","lastModifiedDate":"2023-02-10"},{"lineNumber":39,"author":{"gitId":"lil1n"},"content":"        if (isInputTodo) {","lastModifiedDate":"2023-02-10"},{"lineNumber":40,"author":{"gitId":"lil1n"},"content":"            String[] todoTaskNameArray \u003d input.split(\" \", 2);","lastModifiedDate":"2023-02-10"},{"lineNumber":41,"author":{"gitId":"lil1n"},"content":"            VerifyInput.checkValidTodo(todoTaskNameArray);","lastModifiedDate":"2023-02-11"},{"lineNumber":42,"author":{"gitId":"lil1n"},"content":"            CommandActions.addTodoTask(tasks, todoTaskNameArray);","lastModifiedDate":"2023-02-12"},{"lineNumber":43,"author":{"gitId":"lil1n"},"content":"        } else if (isInputDeadline) {","lastModifiedDate":"2023-02-10"},{"lineNumber":44,"author":{"gitId":"lil1n"},"content":"            VerifyInput.checkValidDeadline(input, arrayOfInput);","lastModifiedDate":"2023-02-11"},{"lineNumber":45,"author":{"gitId":"lil1n"},"content":"            CommandActions.addDeadlineTask(tasks, input);","lastModifiedDate":"2023-02-12"},{"lineNumber":46,"author":{"gitId":"lil1n"},"content":"        } else if (isInputEvent) {","lastModifiedDate":"2023-02-10"},{"lineNumber":47,"author":{"gitId":"lil1n"},"content":"            VerifyInput.checkValidEvent(input, arrayOfInput);","lastModifiedDate":"2023-02-11"},{"lineNumber":48,"author":{"gitId":"lil1n"},"content":"            CommandActions.addEventTask(tasks, input);","lastModifiedDate":"2023-02-12"},{"lineNumber":49,"author":{"gitId":"lil1n"},"content":"        } else {","lastModifiedDate":"2023-02-10"},{"lineNumber":50,"author":{"gitId":"lil1n"},"content":"            // if input doesn\u0027t contain any keywords","lastModifiedDate":"2023-02-10"},{"lineNumber":51,"author":{"gitId":"lil1n"},"content":"            ThrowError.throwError(ErrorTypes.INVALID_INPUT.ERROR_TYPE);","lastModifiedDate":"2023-02-11"},{"lineNumber":52,"author":{"gitId":"lil1n"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":53,"author":{"gitId":"lil1n"},"content":"        Printer.echoAddTasks(tasks);","lastModifiedDate":"2023-02-10"},{"lineNumber":54,"author":{"gitId":"lil1n"},"content":"        Task.incrementTotalTasks();","lastModifiedDate":"2023-02-10"},{"lineNumber":55,"author":{"gitId":"lil1n"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":56,"author":{"gitId":"lil1n"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"lil1n":56}},{"path":"src/main/java/duke/command/CommandActions.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lil1n"},"content":"package duke.command;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"lil1n"},"content":"import duke.output.Printer;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"lil1n"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"lil1n"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"lil1n"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"lil1n"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"lil1n"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"lil1n"},"content":"public class CommandActions {","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"lil1n"},"content":"    public static void markTask(ArrayList\u003cTask\u003e tasks, String[] arrayOfInput) {","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"lil1n"},"content":"        tasks.get(Integer.parseInt(arrayOfInput[1]) - 1).markAsDone();","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"lil1n"},"content":"        Printer.markOrUnmark(tasks, Integer.parseInt(arrayOfInput[1]) - 1);","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"lil1n"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"lil1n"},"content":"    public static void unmarkTask(ArrayList\u003cTask\u003e tasks, String[] arrayOfInput) {","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"lil1n"},"content":"        tasks.get(Integer.parseInt(arrayOfInput[1]) - 1).markAsNotDone();","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"lil1n"},"content":"        Printer.markOrUnmark(tasks, Integer.parseInt(arrayOfInput[1]) - 1);","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"lil1n"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"lil1n"},"content":"    public static void addTodoTask(ArrayList\u003cTask\u003e tasks, String[] input) {","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"lil1n"},"content":"        tasks.add(Task.totalTasks, new Todo(input[1]));","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"lil1n"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"lil1n"},"content":"    public static void addDeadlineTask(ArrayList\u003cTask\u003e tasks, String input) {","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"lil1n"},"content":"        String[] commandInformation \u003d input.split(\" \", 2);","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"lil1n"},"content":"        String[] taskNameAndDate \u003d commandInformation[1].split(\" /by \", 2);","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"lil1n"},"content":"        tasks.add(Task.totalTasks, new Deadline(taskNameAndDate[0].trim(), taskNameAndDate[1].trim()));","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"lil1n"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"lil1n"},"content":"    public static void addEventTask(ArrayList\u003cTask\u003e tasks, String input) {","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"lil1n"},"content":"        String taskNameInformation \u003d input.split(\" \", 2)[1];","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"lil1n"},"content":"        String[] taskNameAndDate \u003d taskNameInformation.split(\" /from \", 2); // name fromTo","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"lil1n"},"content":"        String[] fromAndTo \u003d taskNameAndDate[1].split(\" /to \", 2); // from to","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"lil1n"},"content":"        tasks.add(Task.totalTasks, new Event(taskNameAndDate[0].trim(), fromAndTo[0].trim(), fromAndTo[1].trim()));","lastModifiedDate":"2023-02-12"},{"lineNumber":37,"author":{"gitId":"lil1n"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":38,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":39,"author":{"gitId":"lil1n"},"content":"    public static void deleteTask(ArrayList\u003cTask\u003e tasks, String[] arrayOfInput) {","lastModifiedDate":"2023-02-12"},{"lineNumber":40,"author":{"gitId":"lil1n"},"content":"        Printer.deleteTask(tasks, Integer.parseInt(arrayOfInput[1]) - 1);","lastModifiedDate":"2023-02-12"},{"lineNumber":41,"author":{"gitId":"lil1n"},"content":"        tasks.remove(tasks.get(Integer.parseInt(arrayOfInput[1]) - 1));","lastModifiedDate":"2023-02-12"},{"lineNumber":42,"author":{"gitId":"lil1n"},"content":"        Task.totalTasks -\u003d 1;","lastModifiedDate":"2023-02-12"},{"lineNumber":43,"author":{"gitId":"lil1n"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":44,"author":{"gitId":"lil1n"},"content":"}","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"lil1n":44}},{"path":"src/main/java/duke/command/CommandWords.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lil1n"},"content":"package duke.command;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"lil1n"},"content":"public enum CommandWords {","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"lil1n"},"content":"    BYE(\"bye\"),","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"lil1n"},"content":"    LIST(\"list\"),","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"lil1n"},"content":"    MARK(\"mark\"),","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"lil1n"},"content":"    UNMARK(\"unmark\"),","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"lil1n"},"content":"    TODO(\"todo\"),","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"lil1n"},"content":"    DEADLINE(\"deadline\"),","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"lil1n"},"content":"    EVENT(\"event\"),","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"lil1n"},"content":"    DELETE(\"delete\");","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"lil1n"},"content":"    public final String COMMAND;","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"lil1n"},"content":"    CommandWords(String command) {","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"lil1n"},"content":"        COMMAND \u003d command;","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"lil1n"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"lil1n"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"lil1n":16}},{"path":"src/main/java/duke/command/VerifyInput.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lil1n"},"content":"package duke.command;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"lil1n"},"content":"import duke.error.DukeException;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"lil1n"},"content":"import duke.error.ErrorTypes;","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"lil1n"},"content":"import duke.error.ThrowError;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"lil1n"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"lil1n"},"content":"public class VerifyInput {","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"lil1n"},"content":"    private static final int MINIMUM_TODO_LENGTH \u003d 2;","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"lil1n"},"content":"    private static final int MINIMUM_DEADLINE_LENGTH \u003d 4;","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"lil1n"},"content":"    private static final int MINIMUM_EVENT_LENGTH \u003d 6;","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"lil1n"},"content":"    public static boolean isStringOfInteger(String input) {","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"lil1n"},"content":"        // takes in a string and checks whether the string only contains digits characters","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"lil1n"},"content":"        char[] inputInArray \u003d input.toCharArray();","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"lil1n"},"content":"        for (char c : inputInArray) {","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"lil1n"},"content":"            if (!Character.isDigit(c)) {","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"lil1n"},"content":"                return false;","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"lil1n"},"content":"            }","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"lil1n"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"lil1n"},"content":"        return true;","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"lil1n"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"lil1n"},"content":"    public static void checkWithinCount(int inputValue) throws DukeException {","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"lil1n"},"content":"        boolean isOverMaxTasks \u003d (inputValue \u003e Task.getTotalTasks());","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"lil1n"},"content":"        if (isOverMaxTasks) {","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"lil1n"},"content":"            // user provided taskNumber that is \u003e noOfTasks","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"lil1n"},"content":"            ThrowError.throwError(ErrorTypes.NOT_WITHIN_TASK_COUNT.ERROR_TYPE);","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"lil1n"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"lil1n"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"lil1n"},"content":"    public static void checkValidTodo(String[] input) throws DukeException {","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"lil1n"},"content":"        if (input.length \u003c MINIMUM_TODO_LENGTH) {","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"lil1n"},"content":"            ThrowError.throwError(ErrorTypes.INVALID_TODO.ERROR_TYPE);","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"lil1n"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"lil1n"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":37,"author":{"gitId":"lil1n"},"content":"    public static void checkValidDeadline(String input, String[] arrayOfInput) throws DukeException {","lastModifiedDate":"2023-02-11"},{"lineNumber":38,"author":{"gitId":"lil1n"},"content":"        if (!input.contains(\" /by \")) {","lastModifiedDate":"2023-02-11"},{"lineNumber":39,"author":{"gitId":"lil1n"},"content":"            ThrowError.throwError(ErrorTypes.INVALID_DEADLINE_COMMAND.ERROR_TYPE);","lastModifiedDate":"2023-02-11"},{"lineNumber":40,"author":{"gitId":"lil1n"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":41,"author":{"gitId":"lil1n"},"content":"        if (arrayOfInput.length \u003c MINIMUM_DEADLINE_LENGTH) {","lastModifiedDate":"2023-02-11"},{"lineNumber":42,"author":{"gitId":"lil1n"},"content":"            ThrowError.throwError(ErrorTypes.INSUFFICIENT_DEADLINE_ARGUMENT.ERROR_TYPE);","lastModifiedDate":"2023-02-11"},{"lineNumber":43,"author":{"gitId":"lil1n"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":44,"author":{"gitId":"lil1n"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":45,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":46,"author":{"gitId":"lil1n"},"content":"    public static void checkValidEvent(String input, String[] arrayOfInput) throws DukeException {","lastModifiedDate":"2023-02-11"},{"lineNumber":47,"author":{"gitId":"lil1n"},"content":"        if ((!input.contains(\" /from \") || !input.contains(\" /to \"))","lastModifiedDate":"2023-02-12"},{"lineNumber":48,"author":{"gitId":"lil1n"},"content":"                || (input.indexOf(\" /from \") \u003e input.indexOf(\" /to \"))) {","lastModifiedDate":"2023-02-12"},{"lineNumber":49,"author":{"gitId":"lil1n"},"content":"            ThrowError.throwError(ErrorTypes.INVALID_EVENT_COMMAND.ERROR_TYPE);","lastModifiedDate":"2023-02-11"},{"lineNumber":50,"author":{"gitId":"lil1n"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":51,"author":{"gitId":"lil1n"},"content":"        if (arrayOfInput.length \u003c MINIMUM_EVENT_LENGTH) {","lastModifiedDate":"2023-02-11"},{"lineNumber":52,"author":{"gitId":"lil1n"},"content":"            ThrowError.throwError(ErrorTypes.INSUFFICIENT_EVENT_ARGUMENT.ERROR_TYPE);","lastModifiedDate":"2023-02-11"},{"lineNumber":53,"author":{"gitId":"lil1n"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":54,"author":{"gitId":"lil1n"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":55,"author":{"gitId":"lil1n"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"lil1n":55}},{"path":"src/main/java/duke/data/DataActions.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lil1n"},"content":"package duke.data;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"lil1n"},"content":"import duke.output.StandardOutput;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"lil1n"},"content":"import duke.output.Symbols;","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"lil1n"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"lil1n"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"lil1n"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"lil1n"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"lil1n"},"content":"import java.io.File;","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"lil1n"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"lil1n"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"lil1n"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"lil1n"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"lil1n"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"lil1n"},"content":"public class DataActions {","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"lil1n"},"content":"    public static void importData(File dataFile, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"lil1n"},"content":"        try {","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"lil1n"},"content":"            Scanner reader \u003d new Scanner(dataFile);","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"lil1n"},"content":"            while (reader.hasNext()) {","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"lil1n"},"content":"                String task \u003d reader.nextLine();","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"lil1n"},"content":"                DataActions.determineTaskType(task, tasks);","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"lil1n"},"content":"            }","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"lil1n"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"lil1n"},"content":"            System.out.print(StandardOutput.FILE_NOT_FOUND_EXCEPTION_MESSAGE.STANDARD_OUTPUT);","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"lil1n"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"lil1n"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"lil1n"},"content":"    public static void determineTaskType(String task, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"lil1n"},"content":"        String[] taskInfo \u003d task.split(Symbols.DATA_DELIMITER.SYMBOL); // what if user task name includes \" / \"","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"lil1n"},"content":"        if (taskInfo[0].equals(Symbols.TODO.SYMBOL)) {","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"lil1n"},"content":"            tasks.add(Task.totalTasks, new Todo(taskInfo[2]));","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"lil1n"},"content":"        } else if (taskInfo[0].equals(Symbols.DEADLINE.SYMBOL)) {","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"lil1n"},"content":"            // deadline","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"lil1n"},"content":"            tasks.add(Task.totalTasks, new Deadline(taskInfo[2], taskInfo[3]));","lastModifiedDate":"2023-02-12"},{"lineNumber":37,"author":{"gitId":"lil1n"},"content":"        } else {","lastModifiedDate":"2023-02-12"},{"lineNumber":38,"author":{"gitId":"lil1n"},"content":"            // event","lastModifiedDate":"2023-02-12"},{"lineNumber":39,"author":{"gitId":"lil1n"},"content":"            String[] timeInterval \u003d taskInfo[3].split(Symbols.EVENT_DATE_DELIMITER.SYMBOL);","lastModifiedDate":"2023-02-12"},{"lineNumber":40,"author":{"gitId":"lil1n"},"content":"            tasks.add(Task.totalTasks, new Event(taskInfo[2], timeInterval[0], timeInterval[1]));","lastModifiedDate":"2023-02-12"},{"lineNumber":41,"author":{"gitId":"lil1n"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":42,"author":{"gitId":"lil1n"},"content":"        if (taskInfo[1].equals(Symbols.DATA_MARK.SYMBOL)) {","lastModifiedDate":"2023-02-12"},{"lineNumber":43,"author":{"gitId":"lil1n"},"content":"            tasks.get(Task.totalTasks).markAsDone();","lastModifiedDate":"2023-02-12"},{"lineNumber":44,"author":{"gitId":"lil1n"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":45,"author":{"gitId":"lil1n"},"content":"        Task.incrementTotalTasks();","lastModifiedDate":"2023-02-12"},{"lineNumber":46,"author":{"gitId":"lil1n"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":47,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":48,"author":{"gitId":"lil1n"},"content":"    public static void updateSavedData(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-12"},{"lineNumber":49,"author":{"gitId":"lil1n"},"content":"        try {","lastModifiedDate":"2023-02-12"},{"lineNumber":50,"author":{"gitId":"lil1n"},"content":"            FileWriter fileData \u003d new FileWriter(FileNames.FILE_PATH.NAME);","lastModifiedDate":"2023-02-12"},{"lineNumber":51,"author":{"gitId":"lil1n"},"content":"            for (int i \u003d 0; i \u003c Task.totalTasks; i +\u003d 1) {","lastModifiedDate":"2023-02-12"},{"lineNumber":52,"author":{"gitId":"lil1n"},"content":"                String taskData \u003d tasks.get(i).getSavedData();","lastModifiedDate":"2023-02-12"},{"lineNumber":53,"author":{"gitId":"lil1n"},"content":"                fileData.write(taskData + System.lineSeparator());","lastModifiedDate":"2023-02-12"},{"lineNumber":54,"author":{"gitId":"lil1n"},"content":"            }","lastModifiedDate":"2023-02-12"},{"lineNumber":55,"author":{"gitId":"lil1n"},"content":"            fileData.close();","lastModifiedDate":"2023-02-12"},{"lineNumber":56,"author":{"gitId":"lil1n"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":57,"author":{"gitId":"lil1n"},"content":"            System.out.println(StandardOutput.IO_EXCEPTION_MESSAGE.STANDARD_OUTPUT);","lastModifiedDate":"2023-02-12"},{"lineNumber":58,"author":{"gitId":"lil1n"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":59,"author":{"gitId":"lil1n"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":60,"author":{"gitId":"lil1n"},"content":"}","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"lil1n":60}},{"path":"src/main/java/duke/data/FileActions.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lil1n"},"content":"package duke.data;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"lil1n"},"content":"import duke.output.StandardOutput;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"lil1n"},"content":"import java.io.File;","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"lil1n"},"content":"public class FileActions {","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"lil1n"},"content":"    public static void makeDirectory() {","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"lil1n"},"content":"        File dataDirectory \u003d new File(FileNames.DIRECTORY.NAME);","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"lil1n"},"content":"        dataDirectory.mkdirs();","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"lil1n"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"lil1n"},"content":"    public static File openDataFile() {","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"lil1n"},"content":"        File dataFile \u003d new File(FileNames.FILE_PATH.NAME);","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"lil1n"},"content":"        try {","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"lil1n"},"content":"            dataFile.createNewFile();","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"lil1n"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"lil1n"},"content":"            System.out.println(StandardOutput.CREATE_NEW_FILE_EXCEPTION_MESSAGE.STANDARD_OUTPUT);","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"lil1n"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"lil1n"},"content":"        return dataFile;","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"lil1n"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"lil1n"},"content":"}","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"lil1n":22}},{"path":"src/main/java/duke/data/FileNames.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lil1n"},"content":"package duke.data;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"lil1n"},"content":"public enum FileNames {","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"lil1n"},"content":"    DIRECTORY(\"data\"),","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"lil1n"},"content":"    FILE_PATH(\"data\\\\duke.txt\");","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"lil1n"},"content":"    public final String NAME;","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"lil1n"},"content":"    FileNames(String name) {","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"lil1n"},"content":"        NAME \u003d name;","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"lil1n"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"lil1n"},"content":"}","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"lil1n":11}},{"path":"src/main/java/duke/error/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lil1n"},"content":"package duke.error;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"lil1n"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"lil1n"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"lil1n":4}},{"path":"src/main/java/duke/error/ErrorTypes.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lil1n"},"content":"package duke.error;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"lil1n"},"content":"public enum ErrorTypes {","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"lil1n"},"content":"    INVALID_MARK_COMMAND(1),","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"lil1n"},"content":"    NOT_WITHIN_TASK_COUNT(2),","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"lil1n"},"content":"    INVALID_UNMARK_COMMAND(3),","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"lil1n"},"content":"    INVALID_INPUT(4),","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"lil1n"},"content":"    INVALID_TODO(5),","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"lil1n"},"content":"    INVALID_DEADLINE_COMMAND(6),","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"lil1n"},"content":"    INSUFFICIENT_DEADLINE_ARGUMENT(7),","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"lil1n"},"content":"    INVALID_EVENT_COMMAND(8),","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"lil1n"},"content":"    INSUFFICIENT_EVENT_ARGUMENT(9),","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"lil1n"},"content":"    INVALID_DELETE_COMMAND(10);","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"lil1n"},"content":"    public final int ERROR_TYPE;","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"lil1n"},"content":"    ErrorTypes(int errorType) {","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"lil1n"},"content":"        ERROR_TYPE \u003d errorType;","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"lil1n"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"lil1n"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"lil1n":18}},{"path":"src/main/java/duke/error/ThrowError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lil1n"},"content":"package duke.error;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"lil1n"},"content":"import duke.output.Printer;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"lil1n"},"content":"public class ThrowError {","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"lil1n"},"content":"    public static void throwError(int errorNumber) throws DukeException {","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"lil1n"},"content":"        if (errorNumber \u003d\u003d ErrorTypes.INVALID_MARK_COMMAND.ERROR_TYPE) {","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"lil1n"},"content":"            Printer.invalidMarkCommand();","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"lil1n"},"content":"        } else if (errorNumber \u003d\u003d ErrorTypes.NOT_WITHIN_TASK_COUNT.ERROR_TYPE) {","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"lil1n"},"content":"            Printer.exceedTaskCount();","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"lil1n"},"content":"        } else if (errorNumber \u003d\u003d ErrorTypes.INVALID_UNMARK_COMMAND.ERROR_TYPE) {","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"lil1n"},"content":"            Printer.invalidUnmarkCommand();","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"lil1n"},"content":"        } else if (errorNumber \u003d\u003d ErrorTypes.INVALID_INPUT.ERROR_TYPE) {","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"lil1n"},"content":"            Printer.invalidInput();","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"lil1n"},"content":"        } else if (errorNumber \u003d\u003d ErrorTypes.INVALID_TODO.ERROR_TYPE) {","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"lil1n"},"content":"            Printer.invalidTodo();","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"lil1n"},"content":"        } else if (errorNumber \u003d\u003d ErrorTypes.INVALID_DEADLINE_COMMAND.ERROR_TYPE) {","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"lil1n"},"content":"            Printer.invalidDeadline();","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"lil1n"},"content":"        } else if (errorNumber \u003d\u003d ErrorTypes.INSUFFICIENT_DEADLINE_ARGUMENT.ERROR_TYPE) {","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"lil1n"},"content":"            Printer.insufficientDeadline();","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"lil1n"},"content":"        } else if (errorNumber \u003d\u003d ErrorTypes.INVALID_EVENT_COMMAND.ERROR_TYPE) {","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"lil1n"},"content":"            Printer.invalidEvent();","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"lil1n"},"content":"        } else if (errorNumber \u003d\u003d ErrorTypes.INSUFFICIENT_EVENT_ARGUMENT.ERROR_TYPE) {","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"lil1n"},"content":"            Printer.insufficientEvent();","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"lil1n"},"content":"        } else if (errorNumber \u003d\u003d ErrorTypes.INVALID_DELETE_COMMAND.ERROR_TYPE) {","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"lil1n"},"content":"            Printer.invalidDeleteCommand();","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"lil1n"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"lil1n"},"content":"        throw new DukeException();","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"lil1n"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"lil1n"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"lil1n":30}},{"path":"src/main/java/duke/output/Printer.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lil1n"},"content":"package duke.output;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"lil1n"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"lil1n"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"lil1n"},"content":"public class Printer {","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"lil1n"},"content":"    public static void endLine() {","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"lil1n"},"content":"        System.out.println(StandardOutput.SEGMENT_LINE.STANDARD_OUTPUT + System.lineSeparator());","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"lil1n"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"lil1n"},"content":"    public static void greeting() {","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"lil1n"},"content":"        System.out.println(StandardOutput.SEGMENT_LINE.STANDARD_OUTPUT);","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"lil1n"},"content":"        System.out.println(StandardOutput.START_MESSAGE.STANDARD_OUTPUT);","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"lil1n"},"content":"        endLine();","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"lil1n"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"lil1n"},"content":"    public static void bye() {","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"lil1n"},"content":"        System.out.println(StandardOutput.SEGMENT_LINE.STANDARD_OUTPUT);","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"lil1n"},"content":"        System.out.println(StandardOutput.BYE_MESSAGE.STANDARD_OUTPUT);","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"lil1n"},"content":"        endLine();","lastModifiedDate":"2023-02-10"},{"lineNumber":22,"author":{"gitId":"lil1n"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"lil1n"},"content":"    public static void listTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"lil1n"},"content":"        System.out.println(StandardOutput.SEGMENT_LINE.STANDARD_OUTPUT);","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"lil1n"},"content":"        boolean isTaskCountZero \u003d (Task.totalTasks \u003d\u003d 0);","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"lil1n"},"content":"        if (isTaskCountZero) {","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"lil1n"},"content":"            System.out.println(StandardOutput.EMPTY_LIST_MESSAGE.STANDARD_OUTPUT);","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"lil1n"},"content":"        } else {","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"lil1n"},"content":"            System.out.println(StandardOutput.LIST_MESSAGE.STANDARD_OUTPUT);","lastModifiedDate":"2023-02-10"},{"lineNumber":31,"author":{"gitId":"lil1n"},"content":"            for (int i \u003d 0; i \u003c Task.totalTasks; i +\u003d 1) {","lastModifiedDate":"2023-02-10"},{"lineNumber":32,"author":{"gitId":"lil1n"},"content":"                System.out.println(\" \" + (i + 1) + \".\" + tasks.get(i).getFullTaskDetail());","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"lil1n"},"content":"            }","lastModifiedDate":"2023-02-10"},{"lineNumber":34,"author":{"gitId":"lil1n"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":35,"author":{"gitId":"lil1n"},"content":"        endLine();","lastModifiedDate":"2023-02-10"},{"lineNumber":36,"author":{"gitId":"lil1n"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":37,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":38,"author":{"gitId":"lil1n"},"content":"    public static void invalidMarkCommand() {","lastModifiedDate":"2023-02-10"},{"lineNumber":39,"author":{"gitId":"lil1n"},"content":"        System.out.println(StandardOutput.SEGMENT_LINE.STANDARD_OUTPUT);","lastModifiedDate":"2023-02-10"},{"lineNumber":40,"author":{"gitId":"lil1n"},"content":"        System.out.println(StandardOutput.INVALID_MARK_MESSAGE.STANDARD_OUTPUT);","lastModifiedDate":"2023-02-10"},{"lineNumber":41,"author":{"gitId":"lil1n"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":42,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":43,"author":{"gitId":"lil1n"},"content":"    public static void exceedTaskCount() {","lastModifiedDate":"2023-02-10"},{"lineNumber":44,"author":{"gitId":"lil1n"},"content":"        System.out.println(StandardOutput.SEGMENT_LINE.STANDARD_OUTPUT);","lastModifiedDate":"2023-02-10"},{"lineNumber":45,"author":{"gitId":"lil1n"},"content":"        System.out.printf(StandardOutput.OVER_TASK_COUNT_MESSAGE.STANDARD_OUTPUT, Task.getTotalTasks()","lastModifiedDate":"2023-02-10"},{"lineNumber":46,"author":{"gitId":"lil1n"},"content":"                + System.lineSeparator());","lastModifiedDate":"2023-02-10"},{"lineNumber":47,"author":{"gitId":"lil1n"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":48,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":49,"author":{"gitId":"lil1n"},"content":"    public static void invalidUnmarkCommand() {","lastModifiedDate":"2023-02-10"},{"lineNumber":50,"author":{"gitId":"lil1n"},"content":"        System.out.println(StandardOutput.SEGMENT_LINE.STANDARD_OUTPUT);","lastModifiedDate":"2023-02-10"},{"lineNumber":51,"author":{"gitId":"lil1n"},"content":"        System.out.println(StandardOutput.INVALID_UNMARK_MESSAGE.STANDARD_OUTPUT);","lastModifiedDate":"2023-02-10"},{"lineNumber":52,"author":{"gitId":"lil1n"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":53,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":54,"author":{"gitId":"lil1n"},"content":"    public static void invalidInput() {","lastModifiedDate":"2023-02-10"},{"lineNumber":55,"author":{"gitId":"lil1n"},"content":"        System.out.println(StandardOutput.SEGMENT_LINE.STANDARD_OUTPUT);","lastModifiedDate":"2023-02-10"},{"lineNumber":56,"author":{"gitId":"lil1n"},"content":"        System.out.println(StandardOutput.INVALID_INPUT_MESSAGE.STANDARD_OUTPUT);","lastModifiedDate":"2023-02-10"},{"lineNumber":57,"author":{"gitId":"lil1n"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":58,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":59,"author":{"gitId":"lil1n"},"content":"    public static void invalidTodo() {","lastModifiedDate":"2023-02-10"},{"lineNumber":60,"author":{"gitId":"lil1n"},"content":"        System.out.println(StandardOutput.SEGMENT_LINE.STANDARD_OUTPUT);","lastModifiedDate":"2023-02-10"},{"lineNumber":61,"author":{"gitId":"lil1n"},"content":"        System.out.println(StandardOutput.INVALID_TODO_MESSAGE.STANDARD_OUTPUT);","lastModifiedDate":"2023-02-10"},{"lineNumber":62,"author":{"gitId":"lil1n"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":63,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":64,"author":{"gitId":"lil1n"},"content":"    public static void invalidDeadline() {","lastModifiedDate":"2023-02-10"},{"lineNumber":65,"author":{"gitId":"lil1n"},"content":"        System.out.println(StandardOutput.SEGMENT_LINE.STANDARD_OUTPUT);","lastModifiedDate":"2023-02-10"},{"lineNumber":66,"author":{"gitId":"lil1n"},"content":"        System.out.println(StandardOutput.MISSING_DEADLINE_KEYWORD_MESSAGE.STANDARD_OUTPUT);","lastModifiedDate":"2023-02-10"},{"lineNumber":67,"author":{"gitId":"lil1n"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":68,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":69,"author":{"gitId":"lil1n"},"content":"    public static void insufficientDeadline() {","lastModifiedDate":"2023-02-10"},{"lineNumber":70,"author":{"gitId":"lil1n"},"content":"        System.out.println(StandardOutput.SEGMENT_LINE.STANDARD_OUTPUT);","lastModifiedDate":"2023-02-10"},{"lineNumber":71,"author":{"gitId":"lil1n"},"content":"        System.out.println(StandardOutput.INSUFFICIENT_DEADLINE_FIELD_MESSAGE.STANDARD_OUTPUT);","lastModifiedDate":"2023-02-10"},{"lineNumber":72,"author":{"gitId":"lil1n"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":73,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":74,"author":{"gitId":"lil1n"},"content":"    public static void invalidEvent() {","lastModifiedDate":"2023-02-10"},{"lineNumber":75,"author":{"gitId":"lil1n"},"content":"        System.out.println(StandardOutput.SEGMENT_LINE.STANDARD_OUTPUT);","lastModifiedDate":"2023-02-10"},{"lineNumber":76,"author":{"gitId":"lil1n"},"content":"        System.out.println(StandardOutput.INVALID_EVENT_FORMAT_MESSAGE.STANDARD_OUTPUT);","lastModifiedDate":"2023-02-10"},{"lineNumber":77,"author":{"gitId":"lil1n"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":78,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":79,"author":{"gitId":"lil1n"},"content":"    public static void insufficientEvent() {","lastModifiedDate":"2023-02-10"},{"lineNumber":80,"author":{"gitId":"lil1n"},"content":"        System.out.println(StandardOutput.SEGMENT_LINE.STANDARD_OUTPUT);","lastModifiedDate":"2023-02-10"},{"lineNumber":81,"author":{"gitId":"lil1n"},"content":"        System.out.println(StandardOutput.INSUFFICIENT_EVENT_FIELD_MESSAGE.STANDARD_OUTPUT);","lastModifiedDate":"2023-02-10"},{"lineNumber":82,"author":{"gitId":"lil1n"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":83,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":84,"author":{"gitId":"lil1n"},"content":"    public static void invalidDeleteCommand() {","lastModifiedDate":"2023-02-11"},{"lineNumber":85,"author":{"gitId":"lil1n"},"content":"        System.out.println(StandardOutput.SEGMENT_LINE.STANDARD_OUTPUT);","lastModifiedDate":"2023-02-11"},{"lineNumber":86,"author":{"gitId":"lil1n"},"content":"        System.out.println(StandardOutput.INVALID_DELETE_COMMAND_MESSAGE.STANDARD_OUTPUT);","lastModifiedDate":"2023-02-11"},{"lineNumber":87,"author":{"gitId":"lil1n"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":88,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":89,"author":{"gitId":"lil1n"},"content":"    public static void markOrUnmark(ArrayList\u003cTask\u003e tasks, int taskIndex) {","lastModifiedDate":"2023-02-11"},{"lineNumber":90,"author":{"gitId":"lil1n"},"content":"        System.out.println(StandardOutput.SEGMENT_LINE.STANDARD_OUTPUT);","lastModifiedDate":"2023-02-10"},{"lineNumber":91,"author":{"gitId":"lil1n"},"content":"        if (tasks.get(taskIndex).isDone) {","lastModifiedDate":"2023-02-11"},{"lineNumber":92,"author":{"gitId":"lil1n"},"content":"            System.out.println(StandardOutput.MARK_MESSAGE.STANDARD_OUTPUT);","lastModifiedDate":"2023-02-10"},{"lineNumber":93,"author":{"gitId":"lil1n"},"content":"        } else {","lastModifiedDate":"2023-02-10"},{"lineNumber":94,"author":{"gitId":"lil1n"},"content":"            System.out.println(StandardOutput.UNMARK_MESSAGE.STANDARD_OUTPUT);","lastModifiedDate":"2023-02-10"},{"lineNumber":95,"author":{"gitId":"lil1n"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":96,"author":{"gitId":"lil1n"},"content":"        System.out.println(\"   \" + tasks.get(taskIndex).getFullTaskDetail());","lastModifiedDate":"2023-02-11"},{"lineNumber":97,"author":{"gitId":"lil1n"},"content":"        endLine();","lastModifiedDate":"2023-02-10"},{"lineNumber":98,"author":{"gitId":"lil1n"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":99,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":100,"author":{"gitId":"lil1n"},"content":"    public static void echoAddTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-11"},{"lineNumber":101,"author":{"gitId":"lil1n"},"content":"        int numberOfTasks \u003d Task.totalTasks + 1;","lastModifiedDate":"2023-02-10"},{"lineNumber":102,"author":{"gitId":"lil1n"},"content":"        System.out.println(StandardOutput.SEGMENT_LINE.STANDARD_OUTPUT);","lastModifiedDate":"2023-02-11"},{"lineNumber":103,"author":{"gitId":"lil1n"},"content":"        System.out.printf(StandardOutput.ADD_MESSAGE.STANDARD_OUTPUT,","lastModifiedDate":"2023-02-10"},{"lineNumber":104,"author":{"gitId":"lil1n"},"content":"                tasks.get(Task.totalTasks).getFullTaskDetail(), numberOfTasks);","lastModifiedDate":"2023-02-11"},{"lineNumber":105,"author":{"gitId":"lil1n"},"content":"        endLine();","lastModifiedDate":"2023-02-10"},{"lineNumber":106,"author":{"gitId":"lil1n"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":107,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":108,"author":{"gitId":"lil1n"},"content":"    public static void deleteTask(ArrayList\u003cTask\u003e tasks, int taskIndex) {","lastModifiedDate":"2023-02-11"},{"lineNumber":109,"author":{"gitId":"lil1n"},"content":"        int numberOfTasks \u003d Task.totalTasks - 1;","lastModifiedDate":"2023-02-11"},{"lineNumber":110,"author":{"gitId":"lil1n"},"content":"        System.out.println(StandardOutput.SEGMENT_LINE.STANDARD_OUTPUT);","lastModifiedDate":"2023-02-11"},{"lineNumber":111,"author":{"gitId":"lil1n"},"content":"        System.out.println(StandardOutput.DELETE_MESSAGE.STANDARD_OUTPUT);","lastModifiedDate":"2023-02-11"},{"lineNumber":112,"author":{"gitId":"lil1n"},"content":"        System.out.println(\"   \" + tasks.get(taskIndex).getFullTaskDetail());","lastModifiedDate":"2023-02-11"},{"lineNumber":113,"author":{"gitId":"lil1n"},"content":"        System.out.printf(StandardOutput.REMAINING_TASK_COUNT.STANDARD_OUTPUT, numberOfTasks);","lastModifiedDate":"2023-02-11"},{"lineNumber":114,"author":{"gitId":"lil1n"},"content":"        endLine();","lastModifiedDate":"2023-02-11"},{"lineNumber":115,"author":{"gitId":"lil1n"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":116,"author":{"gitId":"lil1n"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"lil1n":116}},{"path":"src/main/java/duke/output/StandardOutput.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lil1n"},"content":"package duke.output;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"lil1n"},"content":"public enum StandardOutput {","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"lil1n"},"content":"    SEGMENT_LINE(\"_\".repeat(80)),","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"lil1n"},"content":"    START_MESSAGE(\" Hello! I\u0027m Duke\" + System.lineSeparator() + \" What can I do for you?\"),","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"lil1n"},"content":"    BYE_MESSAGE(\" Bye! Hope to see you again soon!\"),","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"lil1n"},"content":"    EMPTY_LIST_MESSAGE(\" The list is empty!\"),","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"lil1n"},"content":"    LIST_MESSAGE(\" Here are the tasks in your lists:\"),","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"lil1n"},"content":"    MARK_MESSAGE(\" Awesome! I\u0027ve marked this task as done:\"),","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"lil1n"},"content":"    UNMARK_MESSAGE(\" OK, I\u0027ve marked this task as not done yet:\"),","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"lil1n"},"content":"    ADD_MESSAGE(\" The following task has been added:\" + System.lineSeparator()","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"lil1n"},"content":"            + \"   %s\" + System.lineSeparator() + \" There is now %d task[s] in total.\" + System.lineSeparator()),","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"lil1n"},"content":"    DELETE_MESSAGE(\" Noted. Task removed: \"),","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"lil1n"},"content":"    REMAINING_TASK_COUNT(\" Now you have %d task[s] in the list.\" + System.lineSeparator()),","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"lil1n"},"content":"    INVALID_MARK_MESSAGE(\" Invalid input! Valid input format: \\\"mark \u003cnumber\u003e\\\"!\"),","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"lil1n"},"content":"    OVER_TASK_COUNT_MESSAGE(\" Invalid task number provided, current task count: %s\"), ","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"lil1n"},"content":"    INVALID_UNMARK_MESSAGE(\" Invalid input! Valid input format: \\\"unmark \u003cnumber\u003e\\\"!\"),","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"lil1n"},"content":"    INVALID_INPUT_MESSAGE(\" Invalid input! Please provide a valid input!\"),","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"lil1n"},"content":"    INVALID_TODO_MESSAGE(\" Invalid input! Valid input format: \\\"todo \u003ctask name\u003e\\\"\"),","lastModifiedDate":"2023-02-10"},{"lineNumber":22,"author":{"gitId":"lil1n"},"content":"    MISSING_DEADLINE_KEYWORD_MESSAGE(\" Invalid input! Valid input format: \\\"deadline \u003ctask name\u003e /by \u003cdate\u003e\\\"\"),","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"lil1n"},"content":"    INSUFFICIENT_DEADLINE_FIELD_MESSAGE(\" Invalid input! Please provide enough arguments! \"","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"lil1n"},"content":"            + System.lineSeparator() + \" Valid input format: \\\"deadline \u003ctask name\u003e /by \u003cdate\u003e\\\"\"),","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"lil1n"},"content":"    INVALID_EVENT_FORMAT_MESSAGE(\" Invalid input! Valid input format: \\\"event \u003ctask name\u003e /from \u003cdate\u003e /to \u003cdate\u003e\\\"\"),","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"lil1n"},"content":"    INSUFFICIENT_EVENT_FIELD_MESSAGE(\" Invalid input! Please provide enough arguments! \" + System.lineSeparator()","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"lil1n"},"content":"            + \" Valid input format: \\\"event \u003ctask name\u003e /from \u003cdate\u003e /to \u003cdate\u003e\\\"\"),","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"lil1n"},"content":"    INVALID_DELETE_COMMAND_MESSAGE(\" Invalid input! Valid input format: \\\"delete \u003cnumber\u003e\\\"!\"),","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"lil1n"},"content":"    CREATE_NEW_FILE_EXCEPTION_MESSAGE(\" Exception received from creating file\"),","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"lil1n"},"content":"    FILE_NOT_FOUND_EXCEPTION_MESSAGE(\" File not found exception from trying to read data from file\"),","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"lil1n"},"content":"    IO_EXCEPTION_MESSAGE(\" IO exception received from trying to update data\");","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"lil1n"},"content":"    public final String STANDARD_OUTPUT;","lastModifiedDate":"2023-02-10"},{"lineNumber":34,"author":{"gitId":"lil1n"},"content":"    StandardOutput(String standardOutput) {","lastModifiedDate":"2023-02-10"},{"lineNumber":35,"author":{"gitId":"lil1n"},"content":"        STANDARD_OUTPUT \u003d standardOutput;","lastModifiedDate":"2023-02-10"},{"lineNumber":36,"author":{"gitId":"lil1n"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":37,"author":{"gitId":"lil1n"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"lil1n":37}},{"path":"src/main/java/duke/output/Symbols.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lil1n"},"content":"package duke.output;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"lil1n"},"content":"public enum Symbols {","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"lil1n"},"content":"    TODO(\"T\"),","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"lil1n"},"content":"    DEADLINE(\"D\"),","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"lil1n"},"content":"    EVENT(\"E\"),","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"lil1n"},"content":"    PROGRAM_MARK(\"X\"),","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"lil1n"},"content":"    PROGRAM_UNMARK(\" \"),","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"lil1n"},"content":"    DATA_MARK(\"1\"),","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"lil1n"},"content":"    DATA_UNMARK(\"0\"),","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"lil1n"},"content":"    DATA_DELIMITER(\" / \"),","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"lil1n"},"content":"    EVENT_DATE_DELIMITER(\" to \");","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"lil1n"},"content":"    public final String SYMBOL;","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"lil1n"},"content":"    Symbols(String symbol) {","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"lil1n"},"content":"        SYMBOL \u003d symbol;","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"lil1n"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"lil1n"},"content":"}","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"lil1n":18}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lil1n"},"content":"package duke.task;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"lil1n"},"content":"import duke.output.Symbols;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"lil1n"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"lil1n"},"content":"    // tasks that need to be done before a specific date/time","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"lil1n"},"content":"    public String deadline;","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"lil1n"},"content":"    public Deadline(String taskName, String deadline) {","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"lil1n"},"content":"        super(taskName);","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"lil1n"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"lil1n"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"lil1n"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"lil1n"},"content":"    public String getFullTaskDetail() {","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"lil1n"},"content":"        String taskDetail;","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"lil1n"},"content":"        taskDetail \u003d \"[D][\" + getStatusIcon() + \"] \" + taskName + \" (by: \" + deadline + \")\";","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"lil1n"},"content":"        return taskDetail;","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"lil1n"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"lil1n"},"content":"    public String getSavedData() {","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"lil1n"},"content":"        String taskStatus;","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"lil1n"},"content":"        if (getStatusIcon().equals(Symbols.PROGRAM_MARK.SYMBOL)) {","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"lil1n"},"content":"            taskStatus \u003d Symbols.DATA_MARK.SYMBOL;","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"lil1n"},"content":"        } else {","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"lil1n"},"content":"            taskStatus \u003d Symbols.DATA_UNMARK.SYMBOL;","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"lil1n"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"lil1n"},"content":"        String fullDetails \u003d String.join(Symbols.DATA_DELIMITER.SYMBOL,","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"lil1n"},"content":"                Symbols.DEADLINE.SYMBOL, taskStatus, taskName, deadline);","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"lil1n"},"content":"        return fullDetails;","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"lil1n"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"lil1n"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"lil1n":33}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lil1n"},"content":"package duke.task;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"lil1n"},"content":"import duke.output.Symbols;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"lil1n"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"lil1n"},"content":"    // tasks that start at a specific date/time and ends at specific date/time","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"lil1n"},"content":"    public String startDateTime;","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"lil1n"},"content":"    public String endDateTime;","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"lil1n"},"content":"    public Event(String taskName, String startDateTime, String endDateTime) {","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"lil1n"},"content":"        super(taskName);","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"lil1n"},"content":"        this.startDateTime \u003d startDateTime;","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"lil1n"},"content":"        this.endDateTime \u003d endDateTime;","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"lil1n"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"lil1n"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"lil1n"},"content":"    public String getFullTaskDetail() {","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"lil1n"},"content":"        String taskDetail;","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"lil1n"},"content":"        taskDetail \u003d \"[E][\" + getStatusIcon() + \"] \" + taskName + \" (from: \" + startDateTime + \" to: \"","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"lil1n"},"content":"                + endDateTime + \")\";","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"lil1n"},"content":"        return taskDetail;","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"lil1n"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"lil1n"},"content":"    public String getSavedData() {","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"lil1n"},"content":"        String taskStatus;","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"lil1n"},"content":"        if (getStatusIcon().equals(Symbols.PROGRAM_MARK.SYMBOL)) {","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"lil1n"},"content":"            taskStatus \u003d Symbols.DATA_MARK.SYMBOL;","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"lil1n"},"content":"        } else {","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"lil1n"},"content":"            taskStatus \u003d Symbols.DATA_UNMARK.SYMBOL;","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"lil1n"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"lil1n"},"content":"        String date \u003d String.join(Symbols.EVENT_DATE_DELIMITER.SYMBOL, startDateTime, endDateTime);","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"lil1n"},"content":"        String fullDetails \u003d String.join(Symbols.DATA_DELIMITER.SYMBOL,","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"lil1n"},"content":"                Symbols.EVENT.SYMBOL, taskStatus, taskName, date);","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"lil1n"},"content":"        return fullDetails;","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"lil1n"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"lil1n"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"lil1n":36}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lil1n"},"content":"package duke.task;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"lil1n"},"content":"import duke.output.Symbols;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"lil1n"},"content":"public abstract class Task {","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"lil1n"},"content":"    public String taskName;","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"lil1n"},"content":"    public boolean isDone;","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"lil1n"},"content":"    public static int totalTasks \u003d 0;","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"lil1n"},"content":"    public Task(String taskName) {","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"lil1n"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"lil1n"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"lil1n"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"lil1n"},"content":"    public static void incrementTotalTasks() {","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"lil1n"},"content":"        totalTasks +\u003d 1;","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"lil1n"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"lil1n"},"content":"    public static int getTotalTasks() {","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"lil1n"},"content":"        return totalTasks;","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"lil1n"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":22,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"lil1n"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"lil1n"},"content":"        if (isDone) {","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"lil1n"},"content":"            return Symbols.PROGRAM_MARK.SYMBOL;","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"lil1n"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"lil1n"},"content":"        return Symbols.PROGRAM_UNMARK.SYMBOL;","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"lil1n"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"lil1n"},"content":"    public String getFullTaskDetail() {","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"lil1n"},"content":"        String taskDetail;","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"lil1n"},"content":"        taskDetail \u003d \"[\" + getStatusIcon() + \"] \" + taskName;","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"lil1n"},"content":"        return taskDetail;","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"lil1n"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"lil1n"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"lil1n"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"lil1n"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"lil1n"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"lil1n"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"lil1n"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":44,"author":{"gitId":"lil1n"},"content":"    public abstract String getSavedData();","lastModifiedDate":"2023-02-12"},{"lineNumber":45,"author":{"gitId":"lil1n"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"lil1n":45}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lil1n"},"content":"package duke.task;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"lil1n"},"content":"import duke.output.Symbols;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"lil1n"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"lil1n"},"content":"    // tasks without any date/time attached to it","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"lil1n"},"content":"    public Todo(String taskName) {","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"lil1n"},"content":"        super(taskName);","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"lil1n"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"lil1n"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"lil1n"},"content":"    public String getFullTaskDetail() {","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"lil1n"},"content":"        String taskDetail;","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"lil1n"},"content":"        taskDetail \u003d \"[T][\" + getStatusIcon() + \"] \" + taskName;","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"lil1n"},"content":"        return taskDetail;","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"lil1n"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"lil1n"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"lil1n"},"content":"    public String getSavedData() {","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"lil1n"},"content":"        String taskStatus;","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"lil1n"},"content":"        if (getStatusIcon().equals(Symbols.PROGRAM_MARK.SYMBOL)) {","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"lil1n"},"content":"            taskStatus \u003d Symbols.DATA_MARK.SYMBOL;","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"lil1n"},"content":"        } else {","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"lil1n"},"content":"            taskStatus \u003d Symbols.DATA_UNMARK.SYMBOL;","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"lil1n"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"lil1n"},"content":"        String fullDetails \u003d String.join(Symbols.DATA_DELIMITER.SYMBOL,","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"lil1n"},"content":"                Symbols.TODO.SYMBOL, taskStatus, taskName);","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"lil1n"},"content":"        return fullDetails;","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"lil1n"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"lil1n"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"lil1n":30}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lil1n"},"content":"todo buy bread","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"lil1n"},"content":"list","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"lil1n"},"content":"todo read book","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"lil1n"},"content":"deadline return book /by June 6th","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"lil1n"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"lil1n"},"content":"todo join sports club","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"lil1n"},"content":"todo borrow book","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"lil1n"},"content":"mark 1","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"lil1n"},"content":"list","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"lil1n"},"content":"mark 5","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"lil1n"},"content":"mark 4","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"lil1n"},"content":"list","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"lil1n"},"content":"mark 3","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"lil1n"},"content":"unmark 4","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"lil1n"},"content":"list","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"lil1n"},"content":"unmark 3","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"lil1n"},"content":"unmark 1","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"lil1n"},"content":"list","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"lil1n"},"content":"bye","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"lil1n":19}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"lil1n"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\task\\*.java ..\\src\\main\\java\\duke\\command\\*.java","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"lil1n"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":19,"lil1n":2}}]
