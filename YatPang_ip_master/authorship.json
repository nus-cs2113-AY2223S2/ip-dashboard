[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"YatPang"},"content":"# Duke project","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"3. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"YatPang"},"content":"   Save file loaded!","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"YatPang"},"content":"   Hello! I\u0027m Duke!","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"YatPang"},"content":"   What can I do for you?","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"YatPang"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"YatPang"},"content":"## Command List","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"YatPang"},"content":"1. todo (insert task description)","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"YatPang"},"content":"2. deadline (insert task description) /by (insert deadline)","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"YatPang"},"content":"3. event (insert task description) /from (insert start) /to (insert end)","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"YatPang"},"content":"4. find (insert search term)","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"YatPang"},"content":"5. mark (insert task number)","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"YatPang"},"content":"6. unmark (insert task number)","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"YatPang"},"content":"7. delete (insert task number)","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"YatPang"},"content":"8. list","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"YatPang"},"content":"9. help","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"YatPang"},"content":"10. bye","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"YatPang"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"YatPang"},"content":"## Adding todo task: todo","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"YatPang"},"content":"Adds todo task to the task list.\\","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"YatPang"},"content":"Format: todo task_description","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"YatPang"},"content":"Examples:","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"YatPang"},"content":"1. todo homework","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"YatPang"},"content":"2. todo CS2113 individual project","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"YatPang"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"YatPang"},"content":"## Adding deadline task: deadline","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"YatPang"},"content":"Adds deadline task to the task list.\\","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"YatPang"},"content":"Format: deadline task_description /by deadline","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"YatPang"},"content":"Examples:","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"YatPang"},"content":"1. deadline CS2113 individual project /by Friday 23 59","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"YatPang"},"content":"2. deadline That project due last week /by Last Friday night","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"YatPang"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"YatPang"},"content":"## Adding event task: event","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"YatPang"},"content":"Adds events task to the task list.\\","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"YatPang"},"content":"Format: event task_description /from start /to end","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"YatPang"},"content":"Examples:","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"YatPang"},"content":"1. event CS2113 Lecture /from Friday 16 00 /to 18 00","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"YatPang"},"content":"2. event EE2026 Midterms /from Sat 14 00 /to 15 30","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"YatPang"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"YatPang"},"content":"## Searching task list: find","lastModifiedDate":"2023-03-05"},{"lineNumber":62,"author":{"gitId":"YatPang"},"content":"Searches task list for matching items.\\","lastModifiedDate":"2023-03-05"},{"lineNumber":63,"author":{"gitId":"YatPang"},"content":"Format: find search_term","lastModifiedDate":"2023-03-05"},{"lineNumber":64,"author":{"gitId":"YatPang"},"content":"Examples:","lastModifiedDate":"2023-03-05"},{"lineNumber":65,"author":{"gitId":"YatPang"},"content":"1. find me a break time","lastModifiedDate":"2023-03-05"},{"lineNumber":66,"author":{"gitId":"YatPang"},"content":"2. find nap time","lastModifiedDate":"2023-03-05"},{"lineNumber":67,"author":{"gitId":"YatPang"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":68,"author":{"gitId":"YatPang"},"content":"## Marking task as done: mark","lastModifiedDate":"2023-03-05"},{"lineNumber":69,"author":{"gitId":"YatPang"},"content":"Marks task on task list as done.\\","lastModifiedDate":"2023-03-05"},{"lineNumber":70,"author":{"gitId":"YatPang"},"content":"Format: mark index_number","lastModifiedDate":"2023-03-05"},{"lineNumber":71,"author":{"gitId":"YatPang"},"content":"Examples:","lastModifiedDate":"2023-03-05"},{"lineNumber":72,"author":{"gitId":"YatPang"},"content":"1. mark 6","lastModifiedDate":"2023-03-05"},{"lineNumber":73,"author":{"gitId":"YatPang"},"content":"2. mark 9","lastModifiedDate":"2023-03-05"},{"lineNumber":74,"author":{"gitId":"YatPang"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":75,"author":{"gitId":"YatPang"},"content":"## Marking task as not done: unmark","lastModifiedDate":"2023-03-05"},{"lineNumber":76,"author":{"gitId":"YatPang"},"content":"Marks task on task list as not done.\\","lastModifiedDate":"2023-03-05"},{"lineNumber":77,"author":{"gitId":"YatPang"},"content":"Format: unmark index_number","lastModifiedDate":"2023-03-05"},{"lineNumber":78,"author":{"gitId":"YatPang"},"content":"Examples:","lastModifiedDate":"2023-03-05"},{"lineNumber":79,"author":{"gitId":"YatPang"},"content":"1. unmark 0","lastModifiedDate":"2023-03-05"},{"lineNumber":80,"author":{"gitId":"YatPang"},"content":"2. unmark 0","lastModifiedDate":"2023-03-05"},{"lineNumber":81,"author":{"gitId":"YatPang"},"content":"3. unmark 7","lastModifiedDate":"2023-03-05"},{"lineNumber":82,"author":{"gitId":"YatPang"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":83,"author":{"gitId":"YatPang"},"content":"## Deleting task from task list: delete","lastModifiedDate":"2023-03-05"},{"lineNumber":84,"author":{"gitId":"YatPang"},"content":"Deletes task from task list.\\","lastModifiedDate":"2023-03-05"},{"lineNumber":85,"author":{"gitId":"YatPang"},"content":"Format: delete index_number","lastModifiedDate":"2023-03-05"},{"lineNumber":86,"author":{"gitId":"YatPang"},"content":"Examples:","lastModifiedDate":"2023-03-05"},{"lineNumber":87,"author":{"gitId":"YatPang"},"content":"1. delete 2","lastModifiedDate":"2023-03-05"},{"lineNumber":88,"author":{"gitId":"YatPang"},"content":"2. delete 1","lastModifiedDate":"2023-03-05"},{"lineNumber":89,"author":{"gitId":"YatPang"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":90,"author":{"gitId":"YatPang"},"content":"## Listing tasks from task list: list","lastModifiedDate":"2023-03-05"},{"lineNumber":91,"author":{"gitId":"YatPang"},"content":"Lists out task from task list.\\","lastModifiedDate":"2023-03-05"},{"lineNumber":92,"author":{"gitId":"YatPang"},"content":"Format: list","lastModifiedDate":"2023-03-05"},{"lineNumber":93,"author":{"gitId":"YatPang"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":94,"author":{"gitId":"YatPang"},"content":"## Listing commands from command list: help","lastModifiedDate":"2023-03-05"},{"lineNumber":95,"author":{"gitId":"YatPang"},"content":"Lists out commands.\\","lastModifiedDate":"2023-03-05"},{"lineNumber":96,"author":{"gitId":"YatPang"},"content":"Format: help","lastModifiedDate":"2023-03-05"},{"lineNumber":97,"author":{"gitId":"YatPang"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":98,"author":{"gitId":"YatPang"},"content":"## Closing Duke: bye","lastModifiedDate":"2023-03-05"},{"lineNumber":99,"author":{"gitId":"YatPang"},"content":"Ends the program.\\","lastModifiedDate":"2023-03-05"},{"lineNumber":100,"author":{"gitId":"YatPang"},"content":"Format: bye","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"YatPang":78,"-":22}},{"path":"src/main/java/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YatPang"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"YatPang"},"content":" * A Deadlines task represents a task with a deadline.","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"YatPang"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"YatPang"},"content":"public class Deadlines extends Task {","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"YatPang"},"content":"    protected String deadline;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"YatPang"},"content":"    public Deadlines(String description, String newDeadline) {","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"YatPang"},"content":"        super(description);","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"YatPang"},"content":"        deadline \u003d newDeadline;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"YatPang"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"YatPang"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"YatPang"},"content":"     * This method is used to get the Deadlines icon.","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"YatPang"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"YatPang"},"content":"     * @return String This returns Deadlines icon.","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"YatPang"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"YatPang"},"content":"    public String getIcon() {","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"YatPang"},"content":"        return StrIntLib.deadlineIcon;","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"YatPang"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"YatPang"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"YatPang"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"YatPang"},"content":"     * This method is used to get the deadline of a Deadlines task.","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"YatPang"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"YatPang"},"content":"     * @return String This returns deadline of task.","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"YatPang"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"YatPang"},"content":"    public String getDeadline() {","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"YatPang"},"content":"        return deadline;","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"YatPang"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"YatPang"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"YatPang"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"YatPang":28}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YatPang"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"YatPang"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"YatPang"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"YatPang"},"content":" * Duke is the main class in the duke application.","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"YatPang"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"YatPang"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"YatPang"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"YatPang"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"YatPang"},"content":"     * This method sets up the application state.","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"YatPang"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"YatPang"},"content":"     * @param filePath","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"YatPang"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"YatPang"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"YatPang"},"content":"        Storage.createSave(filePath);","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"YatPang"},"content":"        taskList \u003d new TaskList(Storage.readSave());","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"YatPang"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"YatPang"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"YatPang"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"YatPang"},"content":"     * This is the main method.","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"YatPang"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"YatPang"},"content":"     * @param args Unused.","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"YatPang"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"YatPang"},"content":"        Duke duke \u003d new Duke(\"data/duke.txt\");","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"YatPang"},"content":"        Ui.welcomeMessage();","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"YatPang"},"content":"        String input;","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"YatPang"},"content":"        while (true) {","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"YatPang"},"content":"            input \u003d Ui.takeInput();","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"YatPang"},"content":"            boolean terminate \u003d input.toLowerCase().equals(StrIntLib.cmdBye);","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"YatPang"},"content":"            if (terminate) {","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"YatPang"},"content":"                Ui.byeMessage();","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"YatPang"},"content":"                return;","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"YatPang"},"content":"            }","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"YatPang"},"content":"            Parser.parseCommand(input);","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"YatPang"},"content":"            System.out.println(\"\");","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"YatPang"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"YatPang":35,"-":4}},{"path":"src/main/java/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YatPang"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"YatPang"},"content":" * A Events task represents a task with a start time and end time.","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"YatPang"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"YatPang"},"content":"public class Events extends Task {","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"YatPang"},"content":"    protected String start;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"YatPang"},"content":"    protected String end;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"YatPang"},"content":"    public Events(String description, String startTime, String endTime) {","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"YatPang"},"content":"        super(description);","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"YatPang"},"content":"        start \u003d startTime;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"YatPang"},"content":"        end \u003d endTime;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"YatPang"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"YatPang"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"YatPang"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"YatPang"},"content":"     * This method is used to get the Events icon.","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"YatPang"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"YatPang"},"content":"     * @return String This returns Events icon.","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"YatPang"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"YatPang"},"content":"    public String getIcon(){","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"YatPang"},"content":"        return StrIntLib.eventIcon;","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"YatPang"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"YatPang"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"YatPang"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"YatPang"},"content":"     * This method is used to get the start of an Events task.","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"YatPang"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"YatPang"},"content":"     * @return String This returns start of task.","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"YatPang"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"YatPang"},"content":"    public String getStart() {","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"YatPang"},"content":"        return start;","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"YatPang"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"YatPang"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"YatPang"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"YatPang"},"content":"     * This method is used to get the end of an Events task.","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"YatPang"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"YatPang"},"content":"     * @return String This returns end of task.","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"YatPang"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"YatPang"},"content":"    public String getEnd() {","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"YatPang"},"content":"        return end;","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"YatPang"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"YatPang"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"YatPang":39}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YatPang"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"YatPang"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"YatPang"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"YatPang"},"content":" * The Parser class handles the parsing of user input.","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"YatPang"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"YatPang"},"content":"public class Parser {","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"YatPang"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"YatPang"},"content":"     * This method interprets input and executes commands based on given input.","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"YatPang"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"YatPang"},"content":"     * @param input User input","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"YatPang"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"YatPang"},"content":"    public static void parseCommand(String input){","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"YatPang"},"content":"        String[] parsedInputs \u003d input.split(\" \", 2);","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"YatPang"},"content":"        String command \u003d parsedInputs[0];","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"YatPang"},"content":"        String[] partsList \u003d (parsedInputs.length \u003e 1) ? parsedInputs[1].split(\"/\") : null;","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"YatPang"},"content":"        switch (command.toLowerCase()) {","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"YatPang"},"content":"        case StrIntLib.cmdList:","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"YatPang"},"content":"            TaskList.list();","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"YatPang"},"content":"            break;","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"YatPang"},"content":"        case StrIntLib.cmdMark:","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"YatPang"},"content":"            TaskList.checkDoneStatus(parsedInputs);","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"YatPang"},"content":"            try {","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"YatPang"},"content":"                Storage.writeSave();","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"YatPang"},"content":"                System.out.println(StrIntLib.saveDone);","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"YatPang"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"YatPang"},"content":"                System.out.println(StrIntLib.saveError);","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"YatPang"},"content":"            }","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"YatPang"},"content":"            break;","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"YatPang"},"content":"        case StrIntLib.cmdUnmark:","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"YatPang"},"content":"            TaskList.uncheckDoneStatus(parsedInputs);","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"YatPang"},"content":"            try {","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"YatPang"},"content":"                Storage.writeSave();","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"YatPang"},"content":"                System.out.println(StrIntLib.saveDone);","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"YatPang"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"YatPang"},"content":"                System.out.println(StrIntLib.saveError);","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"YatPang"},"content":"            }","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"YatPang"},"content":"            break;","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"YatPang"},"content":"        case StrIntLib.cmdAdd:","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"YatPang"},"content":"            TaskList.addTask(partsList);","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"YatPang"},"content":"            try {","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"YatPang"},"content":"                Storage.writeSave();","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"YatPang"},"content":"                System.out.println(StrIntLib.saveDone);","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"YatPang"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"YatPang"},"content":"                System.out.println(StrIntLib.saveError);","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"YatPang"},"content":"            }","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"YatPang"},"content":"            break;","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"YatPang"},"content":"        case StrIntLib.cmdToDo:","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"YatPang"},"content":"            TaskList.addToDo(parsedInputs);","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"YatPang"},"content":"            try {","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"YatPang"},"content":"                Storage.writeSave();","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"YatPang"},"content":"                System.out.println(StrIntLib.saveDone);","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"YatPang"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"YatPang"},"content":"                System.out.println(StrIntLib.saveError);","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"YatPang"},"content":"            }","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"YatPang"},"content":"            break;","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"YatPang"},"content":"        case StrIntLib.cmdEvent:","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"YatPang"},"content":"            TaskList.addEvent(partsList);","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"YatPang"},"content":"            try {","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"YatPang"},"content":"                Storage.writeSave();","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"YatPang"},"content":"                System.out.println(StrIntLib.saveDone);","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"YatPang"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-03-05"},{"lineNumber":62,"author":{"gitId":"YatPang"},"content":"                System.out.println(StrIntLib.saveError);","lastModifiedDate":"2023-03-05"},{"lineNumber":63,"author":{"gitId":"YatPang"},"content":"            }","lastModifiedDate":"2023-03-05"},{"lineNumber":64,"author":{"gitId":"YatPang"},"content":"            break;","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"YatPang"},"content":"        case StrIntLib.cmdDeadline:","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"YatPang"},"content":"            TaskList.addDeadline(partsList);","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"YatPang"},"content":"            try {","lastModifiedDate":"2023-03-05"},{"lineNumber":68,"author":{"gitId":"YatPang"},"content":"                Storage.writeSave();","lastModifiedDate":"2023-03-05"},{"lineNumber":69,"author":{"gitId":"YatPang"},"content":"                System.out.println(StrIntLib.saveDone);","lastModifiedDate":"2023-03-05"},{"lineNumber":70,"author":{"gitId":"YatPang"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-03-05"},{"lineNumber":71,"author":{"gitId":"YatPang"},"content":"                System.out.println(StrIntLib.saveError);","lastModifiedDate":"2023-03-05"},{"lineNumber":72,"author":{"gitId":"YatPang"},"content":"            }","lastModifiedDate":"2023-03-05"},{"lineNumber":73,"author":{"gitId":"YatPang"},"content":"            break;","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"YatPang"},"content":"        case StrIntLib.cmdDelete:","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"YatPang"},"content":"            TaskList.deleteTask(parsedInputs);","lastModifiedDate":"2023-03-03"},{"lineNumber":76,"author":{"gitId":"YatPang"},"content":"            try {","lastModifiedDate":"2023-03-05"},{"lineNumber":77,"author":{"gitId":"YatPang"},"content":"                Storage.writeSave();","lastModifiedDate":"2023-03-05"},{"lineNumber":78,"author":{"gitId":"YatPang"},"content":"                System.out.println(StrIntLib.saveDone);","lastModifiedDate":"2023-03-05"},{"lineNumber":79,"author":{"gitId":"YatPang"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-03-05"},{"lineNumber":80,"author":{"gitId":"YatPang"},"content":"                System.out.println(StrIntLib.saveError);","lastModifiedDate":"2023-03-05"},{"lineNumber":81,"author":{"gitId":"YatPang"},"content":"            }","lastModifiedDate":"2023-03-05"},{"lineNumber":82,"author":{"gitId":"YatPang"},"content":"            break;","lastModifiedDate":"2023-03-03"},{"lineNumber":83,"author":{"gitId":"YatPang"},"content":"        case StrIntLib.cmdFind:","lastModifiedDate":"2023-03-04"},{"lineNumber":84,"author":{"gitId":"YatPang"},"content":"            TaskList.findTasks(partsList[0]);","lastModifiedDate":"2023-03-04"},{"lineNumber":85,"author":{"gitId":"YatPang"},"content":"            break;","lastModifiedDate":"2023-03-04"},{"lineNumber":86,"author":{"gitId":"YatPang"},"content":"        case StrIntLib.cmdHelp:","lastModifiedDate":"2023-03-05"},{"lineNumber":87,"author":{"gitId":"YatPang"},"content":"            for (String line : StrIntLib.cmds) {","lastModifiedDate":"2023-03-05"},{"lineNumber":88,"author":{"gitId":"YatPang"},"content":"                System.out.println(line);","lastModifiedDate":"2023-03-05"},{"lineNumber":89,"author":{"gitId":"YatPang"},"content":"            }","lastModifiedDate":"2023-03-05"},{"lineNumber":90,"author":{"gitId":"YatPang"},"content":"            break;","lastModifiedDate":"2023-03-05"},{"lineNumber":91,"author":{"gitId":"YatPang"},"content":"        default:","lastModifiedDate":"2023-03-03"},{"lineNumber":92,"author":{"gitId":"YatPang"},"content":"            Ui.invalidCommand();","lastModifiedDate":"2023-03-03"},{"lineNumber":93,"author":{"gitId":"YatPang"},"content":"            break;","lastModifiedDate":"2023-03-03"},{"lineNumber":94,"author":{"gitId":"YatPang"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":95,"author":{"gitId":"YatPang"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":96,"author":{"gitId":"YatPang"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"YatPang":96}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YatPang"},"content":"import java.io.File;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"YatPang"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"YatPang"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"YatPang"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"YatPang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"YatPang"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"YatPang"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"YatPang"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"YatPang"},"content":" * The Storage class is responsible for saving and loading data from the save","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"YatPang"},"content":" * file. The default path for the save file is ./data/duke.txt","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"YatPang"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"YatPang"},"content":"public class Storage {","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"YatPang"},"content":"    protected static String fileName;","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"YatPang"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"YatPang"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"YatPang"},"content":"     * This method interprets a line in a save, creates a task based on the line.","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"YatPang"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"YatPang"},"content":"     * @param saveLine","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"YatPang"},"content":"     * @return Task This returns a task.","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"YatPang"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"YatPang"},"content":"    public static Task dataReader(String saveLine) {","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"YatPang"},"content":"        String [] segments \u003d saveLine.split(\" : \");","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"YatPang"},"content":"        boolean taskStatus \u003d segments[1].equals(\"1\");","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"YatPang"},"content":"        String taskDescription \u003d segments[2];","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"YatPang"},"content":"        switch(segments[0]) {","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"YatPang"},"content":"        case StrIntLib.deadlineIcon:","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"YatPang"},"content":"            String byDate \u003d segments[3];","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"YatPang"},"content":"            Deadlines newDeadline \u003d new Deadlines(taskDescription, byDate);","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"YatPang"},"content":"            if (taskStatus) {","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"YatPang"},"content":"                newDeadline.markAsDone();","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"YatPang"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"YatPang"},"content":"            return newDeadline;","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"YatPang"},"content":"        case StrIntLib.eventIcon:","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"YatPang"},"content":"            String[] startEnd \u003d segments[3].split(\"-\");","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"YatPang"},"content":"            String start \u003d startEnd[0];","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"YatPang"},"content":"            String end \u003d startEnd[1];","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"YatPang"},"content":"            Events newEvent \u003d new Events(taskDescription, start, end);","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"YatPang"},"content":"            if (taskStatus) {","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"YatPang"},"content":"                newEvent.markAsDone();","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"YatPang"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"YatPang"},"content":"            return newEvent;","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"YatPang"},"content":"        case StrIntLib.toDoIcon:","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"YatPang"},"content":"            ToDos newToDo \u003d new ToDos(taskDescription);","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"YatPang"},"content":"            if (taskStatus) {","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"YatPang"},"content":"                newToDo.markAsDone();","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"YatPang"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"YatPang"},"content":"            return newToDo;","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"YatPang"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"YatPang"},"content":"        System.out.println(StrIntLib.invalidTask);","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"YatPang"},"content":"        return null;","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"YatPang"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"YatPang"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"YatPang"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"YatPang"},"content":"     * This method generates a String for save file for a task.","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"YatPang"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"YatPang"},"content":"     * @param selectedTask","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"YatPang"},"content":"     * @return String This returns a string with the data of a task.","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"YatPang"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"YatPang"},"content":"    public static String saveFormat(Task selectedTask) {","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"YatPang"},"content":"        String taskStatus \u003d (selectedTask.getStatusIcon().equals(\"X\")) ? \"1\" : \"0\";","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"YatPang"},"content":"        String formattedTask \u003d selectedTask.getIcon() + \" : \" +","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"YatPang"},"content":"                taskStatus + \" : \" +","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"YatPang"},"content":"                selectedTask.description;","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"YatPang"},"content":"        if (selectedTask instanceof Events) {","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"YatPang"},"content":"            formattedTask +\u003d \" : \" + selectedTask.getStart() + \"-\" + selectedTask.getEnd();","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"YatPang"},"content":"        } else if (selectedTask instanceof Deadlines) {","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"YatPang"},"content":"            formattedTask +\u003d \" : \" + selectedTask.getDeadline();","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"YatPang"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"YatPang"},"content":"        return formattedTask;","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"YatPang"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"YatPang"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":72,"author":{"gitId":"YatPang"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":73,"author":{"gitId":"YatPang"},"content":"     * This method creates a directory and a save file.","lastModifiedDate":"2023-03-05"},{"lineNumber":74,"author":{"gitId":"YatPang"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":75,"author":{"gitId":"YatPang"},"content":"     * @param filePath","lastModifiedDate":"2023-03-05"},{"lineNumber":76,"author":{"gitId":"YatPang"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":77,"author":{"gitId":"YatPang"},"content":"    public static void createSave(String filePath) {","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"YatPang"},"content":"        fileName \u003d filePath;","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"YatPang"},"content":"        File saveFile \u003d new File(fileName);","lastModifiedDate":"2023-03-03"},{"lineNumber":80,"author":{"gitId":"YatPang"},"content":"        File directory \u003d new File(\"data\");","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"YatPang"},"content":"        boolean isCreated \u003d directory.mkdir();","lastModifiedDate":"2023-03-04"},{"lineNumber":82,"author":{"gitId":"YatPang"},"content":"        if (isCreated) {","lastModifiedDate":"2023-03-04"},{"lineNumber":83,"author":{"gitId":"YatPang"},"content":"            System.out.println(StrIntLib.saveCreated);","lastModifiedDate":"2023-03-03"},{"lineNumber":84,"author":{"gitId":"YatPang"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":85,"author":{"gitId":"YatPang"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":86,"author":{"gitId":"YatPang"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":87,"author":{"gitId":"YatPang"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":88,"author":{"gitId":"YatPang"},"content":"     * This method writes into the save file.","lastModifiedDate":"2023-03-05"},{"lineNumber":89,"author":{"gitId":"YatPang"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":90,"author":{"gitId":"YatPang"},"content":"     * @throws IOException","lastModifiedDate":"2023-03-05"},{"lineNumber":91,"author":{"gitId":"YatPang"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":92,"author":{"gitId":"YatPang"},"content":"    public static void writeSave() throws IOException {","lastModifiedDate":"2023-03-03"},{"lineNumber":93,"author":{"gitId":"YatPang"},"content":"        FileWriter saveWriter \u003d new FileWriter(fileName);","lastModifiedDate":"2023-03-03"},{"lineNumber":94,"author":{"gitId":"YatPang"},"content":"        for (Task item : TaskList.getTaskList()) {","lastModifiedDate":"2023-03-03"},{"lineNumber":95,"author":{"gitId":"YatPang"},"content":"            saveWriter.write(saveFormat(item)+\"\\n\");","lastModifiedDate":"2023-03-03"},{"lineNumber":96,"author":{"gitId":"YatPang"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":97,"author":{"gitId":"YatPang"},"content":"        saveWriter.close();","lastModifiedDate":"2023-03-03"},{"lineNumber":98,"author":{"gitId":"YatPang"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":99,"author":{"gitId":"YatPang"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":100,"author":{"gitId":"YatPang"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":101,"author":{"gitId":"YatPang"},"content":"     * This method reads the save file to create a task list.","lastModifiedDate":"2023-03-05"},{"lineNumber":102,"author":{"gitId":"YatPang"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":103,"author":{"gitId":"YatPang"},"content":"     * @return This returns task list.","lastModifiedDate":"2023-03-05"},{"lineNumber":104,"author":{"gitId":"YatPang"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":105,"author":{"gitId":"YatPang"},"content":"    public static ArrayList\u003cTask\u003e readSave(){","lastModifiedDate":"2023-03-03"},{"lineNumber":106,"author":{"gitId":"YatPang"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-03"},{"lineNumber":107,"author":{"gitId":"YatPang"},"content":"        try {","lastModifiedDate":"2023-03-03"},{"lineNumber":108,"author":{"gitId":"YatPang"},"content":"            File saveFile \u003d new File(fileName);","lastModifiedDate":"2023-03-03"},{"lineNumber":109,"author":{"gitId":"YatPang"},"content":"            Scanner reader \u003d new Scanner(saveFile);","lastModifiedDate":"2023-03-03"},{"lineNumber":110,"author":{"gitId":"YatPang"},"content":"            while (reader.hasNextLine()) {","lastModifiedDate":"2023-03-03"},{"lineNumber":111,"author":{"gitId":"YatPang"},"content":"                String data \u003d reader.nextLine();","lastModifiedDate":"2023-03-03"},{"lineNumber":112,"author":{"gitId":"YatPang"},"content":"                Task newTask \u003d dataReader(data);","lastModifiedDate":"2023-03-03"},{"lineNumber":113,"author":{"gitId":"YatPang"},"content":"                taskList.add(newTask);","lastModifiedDate":"2023-03-03"},{"lineNumber":114,"author":{"gitId":"YatPang"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":115,"author":{"gitId":"YatPang"},"content":"            System.out.println(StrIntLib.saveLoaded);","lastModifiedDate":"2023-03-04"},{"lineNumber":116,"author":{"gitId":"YatPang"},"content":"            return taskList;","lastModifiedDate":"2023-03-03"},{"lineNumber":117,"author":{"gitId":"YatPang"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-03-03"},{"lineNumber":118,"author":{"gitId":"YatPang"},"content":"            System.out.println(StrIntLib.noSaveFound);","lastModifiedDate":"2023-03-03"},{"lineNumber":119,"author":{"gitId":"YatPang"},"content":"            return taskList;","lastModifiedDate":"2023-03-03"},{"lineNumber":120,"author":{"gitId":"YatPang"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":121,"author":{"gitId":"YatPang"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":122,"author":{"gitId":"YatPang"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":123,"author":{"gitId":"YatPang"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"YatPang":123}},{"path":"src/main/java/StrIntLib.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YatPang"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"YatPang"},"content":" * The StrIntLib class contains all Strings used in Duke.","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"YatPang"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"YatPang"},"content":"public class StrIntLib {","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"YatPang"},"content":"    public static final String byeText \u003d \"See ya!\";","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"YatPang"},"content":"    public static final String welcomeText \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"YatPang"},"content":"                                            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"YatPang"},"content":"                                            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"YatPang"},"content":"                                            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"YatPang"},"content":"                                            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\"","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"YatPang"},"content":"                                            + \"Hello! I\u0027m Duke!\\nWhat can I do for you?\";","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"YatPang"},"content":"    public static final String listText\u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"YatPang"},"content":"    public static final String noItemText \u003d \"Item not found!\";","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"YatPang"},"content":"    public static final String unmarkText \u003d \"OK, I\u0027ve marked this task as not done yet:\";","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"YatPang"},"content":"    public static final String markText \u003d \"Nice! I\u0027ve marked this task as done:\";","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"YatPang"},"content":"    public static final String addTaskText \u003d \"Got it. I\u0027ve added this task!\";","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"YatPang"},"content":"    public static final String taskCount1 \u003d \"Now you have \";","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"YatPang"},"content":"    public static final String taskCount2 \u003d \" task(s) in the list.\";","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"YatPang"},"content":"    public static final String invalidCmdText \u003d \"I beg your pardon?\";","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"YatPang"},"content":"    public static final String taskAddedDebug \u003d \"Task added!\";","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"YatPang"},"content":"    public static final String cmdBye \u003d \"bye\";","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"YatPang"},"content":"    public static final String cmdList \u003d \"list\";","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"YatPang"},"content":"    public static final String cmdMark \u003d \"mark\";","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"YatPang"},"content":"    public static final String cmdUnmark \u003d \"unmark\";","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"YatPang"},"content":"    public static final String cmdAdd \u003d \"add\";","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"YatPang"},"content":"    public static final String cmdToDo \u003d \"todo\";","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"YatPang"},"content":"    public static final String cmdEvent \u003d \"event\";","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"YatPang"},"content":"    public static final String cmdDeadline \u003d \"deadline\";","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"YatPang"},"content":"    public static final String cmdDelete \u003d \"delete\";","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"YatPang"},"content":"    public static final String cmdFind \u003d \"find\";","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"YatPang"},"content":"    public static final String cmdHelp \u003d \"help\";","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"YatPang"},"content":"    public static final String to \u003d \"to \";","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"YatPang"},"content":"    public static final String toReplacement \u003d \" \";","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"YatPang"},"content":"    public static final String from \u003d \"from \";","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"YatPang"},"content":"    public static final String fromReplacement \u003d \" \";","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"YatPang"},"content":"    public static final String by \u003d \"by \";","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"YatPang"},"content":"    public static final String byReplacement \u003d \" \";","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"YatPang"},"content":"    public static final String missingInputsError \u003d \"Huh! Something is missing!\\n\" +","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"YatPang"},"content":"                                                        \"Please check your inputs and correct them accordingly!\";","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"YatPang"},"content":"    public static final String done \u003d \"X\";","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"YatPang"},"content":"    public static final String notDone \u003d \" \";","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"YatPang"},"content":"    public static final String wrongFormatError \u003d \"Huh! Something is in the wrong format!\\n\" +","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"YatPang"},"content":"                                                    \"Please check your inputs and correct them accordingly!\";","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"YatPang"},"content":"    public static final String generalError \u003d \"Huh! Something is missing or in the wrong format!\\n\" +","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"YatPang"},"content":"                                                \"Could you verify that?\";","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"YatPang"},"content":"    public static final String emptyList \u003d \"You have no tasks on your list!\";","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"YatPang"},"content":"    public static final String deleteText \u003d \"Noted. I\u0027ve removed this task:\";","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"YatPang"},"content":"    public static final String saveDone \u003d \"Task list saved!\";","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"YatPang"},"content":"    public static final String deadlineIcon \u003d \"D\";","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"YatPang"},"content":"    public static final String toDoIcon \u003d \"T\";","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"YatPang"},"content":"    public static final String eventIcon \u003d \"E\";","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"YatPang"},"content":"    public static final String invalidTask \u003d \"Task is invalid!\";","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"YatPang"},"content":"    public static final String noSaveFound \u003d \"No save file found!\\n\" +","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"YatPang"},"content":"                                                \"Creating a new task list...\";","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"YatPang"},"content":"    public static final String saveError \u003d \"Error occurred while saving...\";","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"YatPang"},"content":"    public static final String saveCreated \u003d \"Save file created!\";","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"YatPang"},"content":"    public static final String saveLoaded \u003d \"Save file loaded!\";","lastModifiedDate":"2023-03-04"},{"lineNumber":58,"author":{"gitId":"YatPang"},"content":"    public static final String noMatches \u003d \"There are no matching tasks!\";","lastModifiedDate":"2023-03-04"},{"lineNumber":59,"author":{"gitId":"YatPang"},"content":"    public static final String matchesListText \u003d \"Here are the matching tasks in your list:\";","lastModifiedDate":"2023-03-04"},{"lineNumber":60,"author":{"gitId":"YatPang"},"content":"    public static final String[] cmds \u003d {\"1. todo \u003cinsert task description\u003e\",","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"YatPang"},"content":"            \"2. deadline \u003cinsert task description\u003e /by \u003cinsert deadline\u003e\",","lastModifiedDate":"2023-03-05"},{"lineNumber":62,"author":{"gitId":"YatPang"},"content":"            \"3. event \u003cinsert task description\u003e /from \u003cinsert start time\u003e /to \u003cinsert end time\u003e\",","lastModifiedDate":"2023-03-05"},{"lineNumber":63,"author":{"gitId":"YatPang"},"content":"            \"4. find \u003cinsert search term\u003e\",","lastModifiedDate":"2023-03-05"},{"lineNumber":64,"author":{"gitId":"YatPang"},"content":"            \"5. mark \u003cinsert task number\u003e\",","lastModifiedDate":"2023-03-05"},{"lineNumber":65,"author":{"gitId":"YatPang"},"content":"            \"6. unmark \u003cinsert task number\u003e\",","lastModifiedDate":"2023-03-05"},{"lineNumber":66,"author":{"gitId":"YatPang"},"content":"            \"7. delete \u003cinsert task number\u003e\",","lastModifiedDate":"2023-03-05"},{"lineNumber":67,"author":{"gitId":"YatPang"},"content":"            \"8. list\",","lastModifiedDate":"2023-03-05"},{"lineNumber":68,"author":{"gitId":"YatPang"},"content":"            \"9. help\",","lastModifiedDate":"2023-03-05"},{"lineNumber":69,"author":{"gitId":"YatPang"},"content":"            \"10. bye\"","lastModifiedDate":"2023-03-05"},{"lineNumber":70,"author":{"gitId":"YatPang"},"content":"    };","lastModifiedDate":"2023-03-05"},{"lineNumber":71,"author":{"gitId":"YatPang"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"YatPang":71}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YatPang"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"YatPang"},"content":" * The Task class is the parent class for Events, Deadlines and ToDos.","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"YatPang"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"YatPang"},"content":"public class Task {","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"YatPang"},"content":"    protected String description;","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"YatPang"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"YatPang"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"YatPang"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"YatPang"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"YatPang"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"YatPang"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"YatPang"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"YatPang"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"YatPang"},"content":"     * This method is used to get the status icon.","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"YatPang"},"content":"     * If status is no done, \" \" is returned.","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"YatPang"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"YatPang"},"content":"     * @return String This returns status based on isDone.","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"YatPang"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"YatPang"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"YatPang"},"content":"        return (isDone ? StrIntLib.done : StrIntLib.notDone);","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"YatPang"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"YatPang"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"YatPang"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"YatPang"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-01-21"},{"lineNumber":25,"author":{"gitId":"YatPang"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"YatPang"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"YatPang"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"YatPang"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"YatPang"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"YatPang"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"YatPang"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"YatPang"},"content":"     * This method is to be overridden in child classes.","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"YatPang"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"YatPang"},"content":"     * @return String This returns a space.","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"YatPang"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"YatPang"},"content":"    public String getIcon() {","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"YatPang"},"content":"        return \" \";","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"YatPang"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"YatPang"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"YatPang"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"YatPang"},"content":"     * This method is to be overridden in Events class.","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"YatPang"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"YatPang"},"content":"     * @return String This returns an empty string.","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"YatPang"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"YatPang"},"content":"    public String getStart() {","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"YatPang"},"content":"        return \"\";","lastModifiedDate":"2023-02-24"},{"lineNumber":47,"author":{"gitId":"YatPang"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"YatPang"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"YatPang"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"YatPang"},"content":"     * This method is to be overridden in Events class.","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"YatPang"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"YatPang"},"content":"     * @return String This returns an empty string.","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"YatPang"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"YatPang"},"content":"    public String getEnd() {","lastModifiedDate":"2023-02-24"},{"lineNumber":55,"author":{"gitId":"YatPang"},"content":"        return \"\";","lastModifiedDate":"2023-02-24"},{"lineNumber":56,"author":{"gitId":"YatPang"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":57,"author":{"gitId":"YatPang"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"YatPang"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"YatPang"},"content":"     * This method is to be overridden in Deadlines class.","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"YatPang"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"YatPang"},"content":"     * @return String This returns an empty string.","lastModifiedDate":"2023-03-05"},{"lineNumber":62,"author":{"gitId":"YatPang"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":63,"author":{"gitId":"YatPang"},"content":"    public String getDeadline() {","lastModifiedDate":"2023-02-24"},{"lineNumber":64,"author":{"gitId":"YatPang"},"content":"        return \"\";","lastModifiedDate":"2023-02-24"},{"lineNumber":65,"author":{"gitId":"YatPang"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":66,"author":{"gitId":"YatPang"},"content":"}","lastModifiedDate":"2023-01-21"},{"lineNumber":67,"author":{"gitId":"YatPang"},"content":"","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"YatPang":67}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YatPang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"YatPang"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"YatPang"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"YatPang"},"content":" * The TaskList class handles operations on the task list.","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"YatPang"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"YatPang"},"content":"public class TaskList {","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"YatPang"},"content":"    protected static ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"YatPang"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"YatPang"},"content":"    public TaskList(ArrayList\u003cTask\u003e newTaskList) {","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"YatPang"},"content":"        taskList \u003d newTaskList;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"YatPang"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"YatPang"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"YatPang"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"YatPang"},"content":"     * This method is used to add a new task to the task list.","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"YatPang"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"YatPang"},"content":"     * @param newTask New Task.","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"YatPang"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"YatPang"},"content":"    public static void addToTaskList(Task newTask) {","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"YatPang"},"content":"        taskList.add(newTask);","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"YatPang"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"YatPang"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"YatPang"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"YatPang"},"content":"     * This method is used to list out tasks in the task list.","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"YatPang"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"YatPang"},"content":"    public static void list() {","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"YatPang"},"content":"        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"YatPang"},"content":"            System.out.println(StrIntLib.emptyList);","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"YatPang"},"content":"            return;","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"YatPang"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"YatPang"},"content":"        System.out.println(StrIntLib.listText);","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"YatPang"},"content":"        int index \u003d 1;","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"YatPang"},"content":"        for (Task item : taskList) {","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"YatPang"},"content":"            System.out.println(index + \".\" + printIconStatus(item));","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"YatPang"},"content":"            index \u003d increment(index);","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"YatPang"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"YatPang"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"YatPang"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"YatPang"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"YatPang"},"content":"     * This method is used to generate a String based on the type and status of a task.","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"YatPang"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"YatPang"},"content":"     * @param selectedTask Task selected.","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"YatPang"},"content":"     * @return String This returns type, status and description of task selected.","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"YatPang"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"YatPang"},"content":"    public static String printIconStatus(Task selectedTask) {","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"YatPang"},"content":"        String out \u003d \"[\" + selectedTask.getIcon() + \"][\" +","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"YatPang"},"content":"                selectedTask.getStatusIcon() + \"] \" +","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"YatPang"},"content":"                selectedTask.description;","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"YatPang"},"content":"        if (selectedTask instanceof Events){","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"YatPang"},"content":"            out +\u003d \" (from: \" + selectedTask.getStart() + \" to: \" + selectedTask.getEnd() + \")\";","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"YatPang"},"content":"        } else if (selectedTask instanceof Deadlines) {","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"YatPang"},"content":"            out +\u003d \" (by: \" + selectedTask.getDeadline() + \")\";","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"YatPang"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"YatPang"},"content":"        return out;","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"YatPang"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"YatPang"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"YatPang"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"YatPang"},"content":"     * This method is used to create new Deadlines task to be added to the task list.","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"YatPang"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"YatPang"},"content":"     * @param parts Processed input","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"YatPang"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"YatPang"},"content":"    public static void addDeadline(String[] parts) {","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"YatPang"},"content":"        try{","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"YatPang"},"content":"            String content \u003d parts[0].trim();","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"YatPang"},"content":"            String dueDate \u003d parts[1].replace(StrIntLib.by, StrIntLib.byReplacement).trim();","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"YatPang"},"content":"            Deadlines newDeadline \u003d new Deadlines(content, dueDate);","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"YatPang"},"content":"            addToTaskList(newDeadline);","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"YatPang"},"content":"            System.out.println(StrIntLib.addTaskText);","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"YatPang"},"content":"            System.out.println(printIconStatus(newDeadline));","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"YatPang"},"content":"            System.out.println(StrIntLib.taskCount1 + taskList.size() + StrIntLib.taskCount2);","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"YatPang"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"YatPang"},"content":"            System.out.println(StrIntLib.missingInputsError);","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"YatPang"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"YatPang"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"YatPang"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":75,"author":{"gitId":"YatPang"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":76,"author":{"gitId":"YatPang"},"content":"     * This method is used to create new Events task to be added to the task list.","lastModifiedDate":"2023-03-05"},{"lineNumber":77,"author":{"gitId":"YatPang"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":78,"author":{"gitId":"YatPang"},"content":"     * @param parts Processed input","lastModifiedDate":"2023-03-05"},{"lineNumber":79,"author":{"gitId":"YatPang"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":80,"author":{"gitId":"YatPang"},"content":"    public static void addEvent(String[] parts) {","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"YatPang"},"content":"        try {","lastModifiedDate":"2023-03-03"},{"lineNumber":82,"author":{"gitId":"YatPang"},"content":"            String content \u003d parts[0].trim();","lastModifiedDate":"2023-03-03"},{"lineNumber":83,"author":{"gitId":"YatPang"},"content":"            String start \u003d parts[1].replace(StrIntLib.from, StrIntLib.fromReplacement).trim();","lastModifiedDate":"2023-03-03"},{"lineNumber":84,"author":{"gitId":"YatPang"},"content":"            String end \u003d parts[2].replace(StrIntLib.to, StrIntLib.toReplacement).trim();","lastModifiedDate":"2023-03-03"},{"lineNumber":85,"author":{"gitId":"YatPang"},"content":"            Events newEvent \u003d new Events(content, start, end);","lastModifiedDate":"2023-03-03"},{"lineNumber":86,"author":{"gitId":"YatPang"},"content":"            addToTaskList(newEvent);","lastModifiedDate":"2023-03-03"},{"lineNumber":87,"author":{"gitId":"YatPang"},"content":"            System.out.println(StrIntLib.addTaskText);","lastModifiedDate":"2023-03-03"},{"lineNumber":88,"author":{"gitId":"YatPang"},"content":"            System.out.println(printIconStatus(newEvent));","lastModifiedDate":"2023-03-03"},{"lineNumber":89,"author":{"gitId":"YatPang"},"content":"            System.out.println(StrIntLib.taskCount1 + taskList.size() + StrIntLib.taskCount2);","lastModifiedDate":"2023-03-03"},{"lineNumber":90,"author":{"gitId":"YatPang"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-03-03"},{"lineNumber":91,"author":{"gitId":"YatPang"},"content":"            System.out.println(StrIntLib.missingInputsError);","lastModifiedDate":"2023-03-03"},{"lineNumber":92,"author":{"gitId":"YatPang"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":93,"author":{"gitId":"YatPang"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":94,"author":{"gitId":"YatPang"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":95,"author":{"gitId":"YatPang"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":96,"author":{"gitId":"YatPang"},"content":"     * This method is used to create new ToDos task to be added to the task list.","lastModifiedDate":"2023-03-05"},{"lineNumber":97,"author":{"gitId":"YatPang"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":98,"author":{"gitId":"YatPang"},"content":"     * @param inputs Processed input","lastModifiedDate":"2023-03-05"},{"lineNumber":99,"author":{"gitId":"YatPang"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":100,"author":{"gitId":"YatPang"},"content":"    public static void addToDo(String[] inputs) {","lastModifiedDate":"2023-03-03"},{"lineNumber":101,"author":{"gitId":"YatPang"},"content":"        try {","lastModifiedDate":"2023-03-03"},{"lineNumber":102,"author":{"gitId":"YatPang"},"content":"            ToDos newToDo \u003d new ToDos(inputs[1].trim());","lastModifiedDate":"2023-03-03"},{"lineNumber":103,"author":{"gitId":"YatPang"},"content":"            addToTaskList(newToDo);","lastModifiedDate":"2023-03-03"},{"lineNumber":104,"author":{"gitId":"YatPang"},"content":"            System.out.println(StrIntLib.addTaskText);","lastModifiedDate":"2023-03-03"},{"lineNumber":105,"author":{"gitId":"YatPang"},"content":"            System.out.println(printIconStatus(newToDo));","lastModifiedDate":"2023-03-03"},{"lineNumber":106,"author":{"gitId":"YatPang"},"content":"            System.out.println(StrIntLib.taskCount1 + taskList.size() + StrIntLib.taskCount2);","lastModifiedDate":"2023-03-03"},{"lineNumber":107,"author":{"gitId":"YatPang"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-03-03"},{"lineNumber":108,"author":{"gitId":"YatPang"},"content":"            System.out.println(StrIntLib.missingInputsError);","lastModifiedDate":"2023-03-03"},{"lineNumber":109,"author":{"gitId":"YatPang"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":110,"author":{"gitId":"YatPang"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":111,"author":{"gitId":"YatPang"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":112,"author":{"gitId":"YatPang"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":113,"author":{"gitId":"YatPang"},"content":"     * This method is used to update the status of a task to not done.","lastModifiedDate":"2023-03-05"},{"lineNumber":114,"author":{"gitId":"YatPang"},"content":"     * This method uses markAsNotDone method from Task class.","lastModifiedDate":"2023-03-05"},{"lineNumber":115,"author":{"gitId":"YatPang"},"content":"     * This method extracts an integer from params representing the index of task to be unmarked.","lastModifiedDate":"2023-03-05"},{"lineNumber":116,"author":{"gitId":"YatPang"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":117,"author":{"gitId":"YatPang"},"content":"     * @param stringsList Processed input","lastModifiedDate":"2023-03-05"},{"lineNumber":118,"author":{"gitId":"YatPang"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":119,"author":{"gitId":"YatPang"},"content":"    public static void uncheckDoneStatus(String[] stringsList) {","lastModifiedDate":"2023-03-03"},{"lineNumber":120,"author":{"gitId":"YatPang"},"content":"        try{","lastModifiedDate":"2023-03-03"},{"lineNumber":121,"author":{"gitId":"YatPang"},"content":"            int test \u003d Integer.parseInt(stringsList[1]);","lastModifiedDate":"2023-03-03"},{"lineNumber":122,"author":{"gitId":"YatPang"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-03-03"},{"lineNumber":123,"author":{"gitId":"YatPang"},"content":"            System.out.println(StrIntLib.missingInputsError);","lastModifiedDate":"2023-03-03"},{"lineNumber":124,"author":{"gitId":"YatPang"},"content":"            return;","lastModifiedDate":"2023-03-03"},{"lineNumber":125,"author":{"gitId":"YatPang"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-03"},{"lineNumber":126,"author":{"gitId":"YatPang"},"content":"            System.out.println(StrIntLib.wrongFormatError);","lastModifiedDate":"2023-03-03"},{"lineNumber":127,"author":{"gitId":"YatPang"},"content":"            return;","lastModifiedDate":"2023-03-03"},{"lineNumber":128,"author":{"gitId":"YatPang"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":129,"author":{"gitId":"YatPang"},"content":"        if (Integer.parseInt(stringsList[1]) \u003e taskList.size()){","lastModifiedDate":"2023-03-03"},{"lineNumber":130,"author":{"gitId":"YatPang"},"content":"            System.out.println(StrIntLib.noItemText);","lastModifiedDate":"2023-03-03"},{"lineNumber":131,"author":{"gitId":"YatPang"},"content":"        } else {","lastModifiedDate":"2023-03-03"},{"lineNumber":132,"author":{"gitId":"YatPang"},"content":"            taskList.get(Integer.parseInt(stringsList[1]) - 1).markAsNotDone();","lastModifiedDate":"2023-03-03"},{"lineNumber":133,"author":{"gitId":"YatPang"},"content":"            System.out.println(StrIntLib.unmarkText);","lastModifiedDate":"2023-03-03"},{"lineNumber":134,"author":{"gitId":"YatPang"},"content":"            Task item \u003d taskList.get(Integer.parseInt(stringsList[1]) - 1","lastModifiedDate":"2023-03-03"},{"lineNumber":135,"author":{"gitId":"YatPang"},"content":"            );","lastModifiedDate":"2023-03-03"},{"lineNumber":136,"author":{"gitId":"YatPang"},"content":"            System.out.println(printIconStatus(item));","lastModifiedDate":"2023-03-03"},{"lineNumber":137,"author":{"gitId":"YatPang"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":138,"author":{"gitId":"YatPang"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":139,"author":{"gitId":"YatPang"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":140,"author":{"gitId":"YatPang"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":141,"author":{"gitId":"YatPang"},"content":"     * This method is used to update the status of a task to done.","lastModifiedDate":"2023-03-05"},{"lineNumber":142,"author":{"gitId":"YatPang"},"content":"     * This method uses markAsDone method from Task class.","lastModifiedDate":"2023-03-05"},{"lineNumber":143,"author":{"gitId":"YatPang"},"content":"     * This method extracts an integer from params representing the index of task to be marked.","lastModifiedDate":"2023-03-05"},{"lineNumber":144,"author":{"gitId":"YatPang"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":145,"author":{"gitId":"YatPang"},"content":"     * @param stringsList Processed input","lastModifiedDate":"2023-03-05"},{"lineNumber":146,"author":{"gitId":"YatPang"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":147,"author":{"gitId":"YatPang"},"content":"    public static void checkDoneStatus(String[] stringsList) {","lastModifiedDate":"2023-03-03"},{"lineNumber":148,"author":{"gitId":"YatPang"},"content":"        try{","lastModifiedDate":"2023-03-03"},{"lineNumber":149,"author":{"gitId":"YatPang"},"content":"            int test \u003d Integer.parseInt(stringsList[1]);","lastModifiedDate":"2023-03-03"},{"lineNumber":150,"author":{"gitId":"YatPang"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-03-03"},{"lineNumber":151,"author":{"gitId":"YatPang"},"content":"            System.out.println(StrIntLib.missingInputsError);","lastModifiedDate":"2023-03-03"},{"lineNumber":152,"author":{"gitId":"YatPang"},"content":"            return;","lastModifiedDate":"2023-03-03"},{"lineNumber":153,"author":{"gitId":"YatPang"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-03"},{"lineNumber":154,"author":{"gitId":"YatPang"},"content":"            System.out.println(StrIntLib.wrongFormatError);","lastModifiedDate":"2023-03-03"},{"lineNumber":155,"author":{"gitId":"YatPang"},"content":"            return;","lastModifiedDate":"2023-03-03"},{"lineNumber":156,"author":{"gitId":"YatPang"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":157,"author":{"gitId":"YatPang"},"content":"        if (Integer.parseInt(stringsList[1]) \u003e taskList.size()){","lastModifiedDate":"2023-03-03"},{"lineNumber":158,"author":{"gitId":"YatPang"},"content":"            System.out.println(StrIntLib.noItemText);","lastModifiedDate":"2023-03-03"},{"lineNumber":159,"author":{"gitId":"YatPang"},"content":"        } else {","lastModifiedDate":"2023-03-03"},{"lineNumber":160,"author":{"gitId":"YatPang"},"content":"            taskList.get(Integer.parseInt(stringsList[1]) - 1).markAsDone();","lastModifiedDate":"2023-03-03"},{"lineNumber":161,"author":{"gitId":"YatPang"},"content":"            System.out.println(StrIntLib.markText);","lastModifiedDate":"2023-03-03"},{"lineNumber":162,"author":{"gitId":"YatPang"},"content":"            Task item \u003d taskList.get(Integer.parseInt(stringsList[1]) - 1);","lastModifiedDate":"2023-03-03"},{"lineNumber":163,"author":{"gitId":"YatPang"},"content":"            System.out.println(printIconStatus(item));","lastModifiedDate":"2023-03-03"},{"lineNumber":164,"author":{"gitId":"YatPang"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":165,"author":{"gitId":"YatPang"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":166,"author":{"gitId":"YatPang"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":167,"author":{"gitId":"YatPang"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":168,"author":{"gitId":"YatPang"},"content":"     * This method is used to create new Task class task to be added to the task list.","lastModifiedDate":"2023-03-05"},{"lineNumber":169,"author":{"gitId":"YatPang"},"content":"     * This method is used for debugging.","lastModifiedDate":"2023-03-05"},{"lineNumber":170,"author":{"gitId":"YatPang"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":171,"author":{"gitId":"YatPang"},"content":"     * @param parts Processed input","lastModifiedDate":"2023-03-05"},{"lineNumber":172,"author":{"gitId":"YatPang"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":173,"author":{"gitId":"YatPang"},"content":"    public static void addTask(String[] parts) {","lastModifiedDate":"2023-03-03"},{"lineNumber":174,"author":{"gitId":"YatPang"},"content":"        try {","lastModifiedDate":"2023-03-03"},{"lineNumber":175,"author":{"gitId":"YatPang"},"content":"            Task newTask \u003d new Task(parts[0]);","lastModifiedDate":"2023-03-03"},{"lineNumber":176,"author":{"gitId":"YatPang"},"content":"            addToTaskList(newTask);","lastModifiedDate":"2023-03-03"},{"lineNumber":177,"author":{"gitId":"YatPang"},"content":"            System.out.println(StrIntLib.taskAddedDebug);","lastModifiedDate":"2023-03-03"},{"lineNumber":178,"author":{"gitId":"YatPang"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-03-03"},{"lineNumber":179,"author":{"gitId":"YatPang"},"content":"            System.out.println(StrIntLib.missingInputsError);","lastModifiedDate":"2023-03-03"},{"lineNumber":180,"author":{"gitId":"YatPang"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":181,"author":{"gitId":"YatPang"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":182,"author":{"gitId":"YatPang"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":183,"author":{"gitId":"YatPang"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":184,"author":{"gitId":"YatPang"},"content":"     * This method is used to remove a task from the task list.","lastModifiedDate":"2023-03-05"},{"lineNumber":185,"author":{"gitId":"YatPang"},"content":"     * This method extracts an integer representing the index of the task to be deleted.","lastModifiedDate":"2023-03-05"},{"lineNumber":186,"author":{"gitId":"YatPang"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":187,"author":{"gitId":"YatPang"},"content":"     * @param parts Processed input","lastModifiedDate":"2023-03-05"},{"lineNumber":188,"author":{"gitId":"YatPang"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":189,"author":{"gitId":"YatPang"},"content":"    public static void deleteTask(String[] parts) {","lastModifiedDate":"2023-03-03"},{"lineNumber":190,"author":{"gitId":"YatPang"},"content":"        try{","lastModifiedDate":"2023-03-03"},{"lineNumber":191,"author":{"gitId":"YatPang"},"content":"            int test \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2023-03-03"},{"lineNumber":192,"author":{"gitId":"YatPang"},"content":"        } catch (ArrayIndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2023-03-03"},{"lineNumber":193,"author":{"gitId":"YatPang"},"content":"            System.out.println(StrIntLib.generalError);","lastModifiedDate":"2023-03-03"},{"lineNumber":194,"author":{"gitId":"YatPang"},"content":"            return;","lastModifiedDate":"2023-03-03"},{"lineNumber":195,"author":{"gitId":"YatPang"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":196,"author":{"gitId":"YatPang"},"content":"        if (Integer.parseInt(parts[1]) \u003e taskList.size()){","lastModifiedDate":"2023-03-03"},{"lineNumber":197,"author":{"gitId":"YatPang"},"content":"            System.out.println(StrIntLib.noItemText);","lastModifiedDate":"2023-03-03"},{"lineNumber":198,"author":{"gitId":"YatPang"},"content":"        } else {","lastModifiedDate":"2023-03-03"},{"lineNumber":199,"author":{"gitId":"YatPang"},"content":"            System.out.println(StrIntLib.deleteText);","lastModifiedDate":"2023-03-03"},{"lineNumber":200,"author":{"gitId":"YatPang"},"content":"            Task deletedTask \u003d taskList.remove(Integer.parseInt(parts[1]) - 1);","lastModifiedDate":"2023-03-03"},{"lineNumber":201,"author":{"gitId":"YatPang"},"content":"            System.out.println(printIconStatus(deletedTask));","lastModifiedDate":"2023-03-03"},{"lineNumber":202,"author":{"gitId":"YatPang"},"content":"            System.out.println(StrIntLib.taskCount1 + taskList.size() + StrIntLib.taskCount2);","lastModifiedDate":"2023-03-03"},{"lineNumber":203,"author":{"gitId":"YatPang"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":204,"author":{"gitId":"YatPang"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":205,"author":{"gitId":"YatPang"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":206,"author":{"gitId":"YatPang"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":207,"author":{"gitId":"YatPang"},"content":"     * This method is used to find tasks with descriptions that contain the searched term.","lastModifiedDate":"2023-03-05"},{"lineNumber":208,"author":{"gitId":"YatPang"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":209,"author":{"gitId":"YatPang"},"content":"     * @param term Search term","lastModifiedDate":"2023-03-05"},{"lineNumber":210,"author":{"gitId":"YatPang"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":211,"author":{"gitId":"YatPang"},"content":"    public static void findTasks(String term) {","lastModifiedDate":"2023-03-04"},{"lineNumber":212,"author":{"gitId":"YatPang"},"content":"        ArrayList\u003cTask\u003e matches \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-04"},{"lineNumber":213,"author":{"gitId":"YatPang"},"content":"        for (Task item : taskList) {","lastModifiedDate":"2023-03-04"},{"lineNumber":214,"author":{"gitId":"YatPang"},"content":"            if (item.description.toLowerCase().contains(term.toLowerCase())) {","lastModifiedDate":"2023-03-04"},{"lineNumber":215,"author":{"gitId":"YatPang"},"content":"                matches.add(item);","lastModifiedDate":"2023-03-04"},{"lineNumber":216,"author":{"gitId":"YatPang"},"content":"            }","lastModifiedDate":"2023-03-04"},{"lineNumber":217,"author":{"gitId":"YatPang"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":218,"author":{"gitId":"YatPang"},"content":"        if (matches.size() \u003d\u003d 0) {","lastModifiedDate":"2023-03-04"},{"lineNumber":219,"author":{"gitId":"YatPang"},"content":"            System.out.println(StrIntLib.noMatches);","lastModifiedDate":"2023-03-04"},{"lineNumber":220,"author":{"gitId":"YatPang"},"content":"        } else {","lastModifiedDate":"2023-03-04"},{"lineNumber":221,"author":{"gitId":"YatPang"},"content":"            System.out.println(StrIntLib.matchesListText);","lastModifiedDate":"2023-03-04"},{"lineNumber":222,"author":{"gitId":"YatPang"},"content":"            int index \u003d 1;","lastModifiedDate":"2023-03-04"},{"lineNumber":223,"author":{"gitId":"YatPang"},"content":"            for (Task item : matches) {","lastModifiedDate":"2023-03-04"},{"lineNumber":224,"author":{"gitId":"YatPang"},"content":"                System.out.println(index + \".\" + printIconStatus(item));","lastModifiedDate":"2023-03-04"},{"lineNumber":225,"author":{"gitId":"YatPang"},"content":"                index \u003d increment(index);","lastModifiedDate":"2023-03-04"},{"lineNumber":226,"author":{"gitId":"YatPang"},"content":"            }","lastModifiedDate":"2023-03-04"},{"lineNumber":227,"author":{"gitId":"YatPang"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":228,"author":{"gitId":"YatPang"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":229,"author":{"gitId":"YatPang"},"content":"    public static ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2023-03-03"},{"lineNumber":230,"author":{"gitId":"YatPang"},"content":"        return taskList;","lastModifiedDate":"2023-03-03"},{"lineNumber":231,"author":{"gitId":"YatPang"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":232,"author":{"gitId":"YatPang"},"content":"    public static int increment(int num) {","lastModifiedDate":"2023-03-04"},{"lineNumber":233,"author":{"gitId":"YatPang"},"content":"        return num + 1;","lastModifiedDate":"2023-03-04"},{"lineNumber":234,"author":{"gitId":"YatPang"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":235,"author":{"gitId":"YatPang"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"YatPang":235}},{"path":"src/main/java/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YatPang"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"YatPang"},"content":" * A ToDos task represents a task to be done.","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"YatPang"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"YatPang"},"content":"public class ToDos extends Task {","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"YatPang"},"content":"    public ToDos(String description) {","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"YatPang"},"content":"        super(description);","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"YatPang"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"YatPang"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"YatPang"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"YatPang"},"content":"     * This method is used to get the ToDos icon.","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"YatPang"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"YatPang"},"content":"     * @return String This returns ToDos icon.","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"YatPang"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"YatPang"},"content":"    public String getIcon() {","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"YatPang"},"content":"        return StrIntLib.toDoIcon;","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"YatPang"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"YatPang"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"YatPang":17}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YatPang"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"YatPang"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"YatPang"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"YatPang"},"content":" * The Ui class handles reading input and displaying output.","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"YatPang"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"YatPang"},"content":"public class Ui {","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"YatPang"},"content":"    public static void welcomeMessage() {","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"YatPang"},"content":"        System.out.println(StrIntLib.welcomeText);","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"YatPang"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"YatPang"},"content":"    public static void byeMessage() {","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"YatPang"},"content":"        System.out.println(StrIntLib.byeText);","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"YatPang"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"YatPang"},"content":"    public static void invalidCommand() {","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"YatPang"},"content":"        System.out.println(StrIntLib.invalidCmdText);","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"YatPang"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"YatPang"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"YatPang"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"YatPang"},"content":"     * This method takes in user input.","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"YatPang"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"YatPang"},"content":"     * @return String This returns user input.","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"YatPang"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"YatPang"},"content":"    public static String takeInput() {","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"YatPang"},"content":"        String input;","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"YatPang"},"content":"        Scanner scan \u003d new Scanner(System.in); //place in UI","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"YatPang"},"content":"        input \u003d scan.nextLine();","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"YatPang"},"content":"        return input;","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"YatPang"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"YatPang"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"YatPang":28}}]
