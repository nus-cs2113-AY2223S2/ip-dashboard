[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"brennanzuz"},"content":"# DukeNUS project template","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"brennanzuz"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"brennanzuz"},"content":"    Hello from","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"brennanzuz"},"content":"     ____        _          __    _ _   _ ______","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"brennanzuz"},"content":"    |  _ \\ _   _| | _____  |   \\ | | | | | _____|","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"brennanzuz"},"content":"    | | | | | | | |/ / _ \\ | |\\ \\| | | | |_____ |","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"brennanzuz"},"content":"    | |_| | |_| |   \u003c  __/ | | \\ \\ | |_| |____| | ","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"brennanzuz"},"content":"    |____/ \\__,_|_|\\_\\___| |_|  \\__|_____|______|","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"brennanzuz"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"brennanzuz"},"content":"This is a individual Java project for CS2113 Software Engineering and Object-Oriented Programming. It\u0027s named after the NUS medical school for no good reason.","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"brennanzuz"},"content":"This simple command line interface application will allow you to keep track of your tasks, set due dates, mark them as done, remove them, find them, and even store them between sessions.","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"brennanzuz"},"content":"## How to use the program","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"brennanzuz"},"content":"### Running the program","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"brennanzuz"},"content":"Execute the .jar file. This will open the command line interface where you will be greeted by a welcome message.","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"brennanzuz"},"content":"### Creating tasks","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"brennanzuz"},"content":"DukeNUS allows you to create 3 types of tasks by typing them into the interface:","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"brennanzuz"},"content":"1. `todo [description]`: a simple task with only a description.","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"brennanzuz"},"content":"2. `deadline [description] /by [duedate in yyyy-MM-dd format]`: a task with a description and a `/by` date.","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"brennanzuz"},"content":"3. `event [description] /from [start date in yyyy-MM-dd format] /to [end date in yyyy-MM-dd format]` a task with a description, a `/from` date, and a `/to` date.","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"brennanzuz"},"content":"The description for the tasks will be delimited by a space after the type of task is specified `todo`, `deadline`, `event`, and afterwards, the additional arguments will be passed after specifying the parameter with a slash in front. For example:","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"brennanzuz"},"content":"`todo`:","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"brennanzuz"},"content":"todo Watch The Amazing World of Gumball","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"brennanzuz"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"brennanzuz"},"content":"`deadline`:","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"brennanzuz"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"brennanzuz"},"content":"deadline Contribute to open-source software /by 2023-04-15","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"brennanzuz"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"brennanzuz"},"content":"`event`:","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"brennanzuz"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"brennanzuz"},"content":"event Super Smash Con 2022 /from 2022-06-01 /to 2022-06-08","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"brennanzuz"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"brennanzuz"},"content":"All tasks created are initially marked as unfinished and the resultant task is shown:","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"brennanzuz"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"brennanzuz"},"content":"    Got it. I\u0027ve added this task:","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"brennanzuz"},"content":"    [T][ ] Watch The Amazing World of Gumball","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"brennanzuz"},"content":"    You now have 1 tasks in the list.","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"brennanzuz"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"brennanzuz"},"content":"### Listing tasks","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"brennanzuz"},"content":"All tasks you have created can be listed with the `list` command, and all tasks will be shown with their completed status:","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"brennanzuz"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"brennanzuz"},"content":"    Here are the tasks in your list:","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"brennanzuz"},"content":"    1.[T][ ] Watch The Amazing World of Gumball","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"brennanzuz"},"content":"    2.[D][ ] Contribute to open-source software (by: 2023-04-15)","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"brennanzuz"},"content":"    3.[E][ ] Super Smash Con 2022 (from: 2022-06-01 \u003e to: 2022-06-08)","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"brennanzuz"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"brennanzuz"},"content":"### Marking tasks","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"brennanzuz"},"content":"Based on the number of the task in the list, you can mark the specific task you deem completed:","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"brennanzuz"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"brennanzuz"},"content":"mark 2","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"brennanzuz"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"brennanzuz"},"content":"Result:","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"brennanzuz"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":56,"author":{"gitId":"brennanzuz"},"content":"    Congratulations! You have finished this task:","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"brennanzuz"},"content":"    [D][X] Contribute to open-source software (by: 2023-04-15)","lastModifiedDate":"2023-03-01"},{"lineNumber":58,"author":{"gitId":"brennanzuz"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":59,"author":{"gitId":"brennanzuz"},"content":"Similarly, you can unmark a task if it was actually not completed:","lastModifiedDate":"2023-03-01"},{"lineNumber":60,"author":{"gitId":"brennanzuz"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":61,"author":{"gitId":"brennanzuz"},"content":"unmark 2","lastModifiedDate":"2023-03-01"},{"lineNumber":62,"author":{"gitId":"brennanzuz"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":63,"author":{"gitId":"brennanzuz"},"content":"Result:","lastModifiedDate":"2023-03-01"},{"lineNumber":64,"author":{"gitId":"brennanzuz"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":65,"author":{"gitId":"brennanzuz"},"content":"    The following task is now marked as undone:","lastModifiedDate":"2023-03-01"},{"lineNumber":66,"author":{"gitId":"brennanzuz"},"content":"    [D][ ] Contribute to open-source software (by: 2023-04-15)","lastModifiedDate":"2023-03-01"},{"lineNumber":67,"author":{"gitId":"brennanzuz"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":68,"author":{"gitId":"brennanzuz"},"content":"### Deleting tasks","lastModifiedDate":"2023-03-01"},{"lineNumber":69,"author":{"gitId":"brennanzuz"},"content":"Similarly, tasks can also be removed from the list by specifying the task number:","lastModifiedDate":"2023-03-01"},{"lineNumber":70,"author":{"gitId":"brennanzuz"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":71,"author":{"gitId":"brennanzuz"},"content":"delete 3","lastModifiedDate":"2023-03-01"},{"lineNumber":72,"author":{"gitId":"brennanzuz"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":73,"author":{"gitId":"brennanzuz"},"content":"Result:","lastModifiedDate":"2023-03-01"},{"lineNumber":74,"author":{"gitId":"brennanzuz"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":75,"author":{"gitId":"brennanzuz"},"content":"    Noted. I\u0027ve removed this task:","lastModifiedDate":"2023-03-01"},{"lineNumber":76,"author":{"gitId":"brennanzuz"},"content":"    [E][ ] Super Smash Con 2022 (from: 2022-06-01 \u003e to: 2022-06-08)","lastModifiedDate":"2023-03-01"},{"lineNumber":77,"author":{"gitId":"brennanzuz"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":78,"author":{"gitId":"brennanzuz"},"content":"### Finding tasks","lastModifiedDate":"2023-03-01"},{"lineNumber":79,"author":{"gitId":"brennanzuz"},"content":"Suppose you have many tasks in your list and you\u0027d like to find a specific task given part of its description. You can use `find` to locate the task:","lastModifiedDate":"2023-03-01"},{"lineNumber":80,"author":{"gitId":"brennanzuz"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":81,"author":{"gitId":"brennanzuz"},"content":"find Gumball","lastModifiedDate":"2023-03-01"},{"lineNumber":82,"author":{"gitId":"brennanzuz"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":83,"author":{"gitId":"brennanzuz"},"content":"Result:","lastModifiedDate":"2023-03-01"},{"lineNumber":84,"author":{"gitId":"brennanzuz"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":85,"author":{"gitId":"brennanzuz"},"content":"    Here are the matching tasks in your list:","lastModifiedDate":"2023-03-01"},{"lineNumber":86,"author":{"gitId":"brennanzuz"},"content":"    1.[T][ ] Watch The Amazing World of Gumball","lastModifiedDate":"2023-03-01"},{"lineNumber":87,"author":{"gitId":"brennanzuz"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":88,"author":{"gitId":"brennanzuz"},"content":"Note however that the search is case-sensitive.","lastModifiedDate":"2023-03-01"},{"lineNumber":89,"author":{"gitId":"brennanzuz"},"content":"### Terminating the program and saving your tasks","lastModifiedDate":"2023-03-01"},{"lineNumber":90,"author":{"gitId":"brennanzuz"},"content":"You may formally end your session with DukeNUS Medical School by saying `bye` to it:","lastModifiedDate":"2023-03-01"},{"lineNumber":91,"author":{"gitId":"brennanzuz"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":92,"author":{"gitId":"brennanzuz"},"content":"bye","lastModifiedDate":"2023-03-01"},{"lineNumber":93,"author":{"gitId":"brennanzuz"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":94,"author":{"gitId":"brennanzuz"},"content":"Result:","lastModifiedDate":"2023-03-01"},{"lineNumber":95,"author":{"gitId":"brennanzuz"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":96,"author":{"gitId":"brennanzuz"},"content":"    Bye. Hope to see you again soon!s","lastModifiedDate":"2023-03-01"},{"lineNumber":97,"author":{"gitId":"brennanzuz"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":98,"author":{"gitId":"brennanzuz"},"content":"Terminating the program will save the list of tasks you had into a .txt file in a `data` folder from where you ran the executable .jar file. Running the program again, you will notice that the tasks have been loaded when you check with `list`:","lastModifiedDate":"2023-03-01"},{"lineNumber":99,"author":{"gitId":"brennanzuz"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":100,"author":{"gitId":"brennanzuz"},"content":"    Here are the tasks in your list:","lastModifiedDate":"2023-03-01"},{"lineNumber":101,"author":{"gitId":"brennanzuz"},"content":"    1.[T][ ] Watch The Amazing World of Gumball","lastModifiedDate":"2023-03-01"},{"lineNumber":102,"author":{"gitId":"brennanzuz"},"content":"    2.[D][ ] Contribute to open-source software (by: 2023-04-15)","lastModifiedDate":"2023-03-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"brennanzuz":99,"-":4}},{"path":"data/dukeNUS.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"brennanzuz"},"content":"todo Watch The Amazing World of Gumball/markedfalse","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"brennanzuz"},"content":"deadline Contribute to open-source software /by2023-04-15/markedfalse","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"brennanzuz":2}},{"path":"src/main/java/DukeNUS.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brennanzuz"},"content":"import commands.Command;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"brennanzuz"},"content":"import io.DukeNUSPrinter;","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"brennanzuz"},"content":"import io.TasksDataRead;","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"brennanzuz"},"content":"import io.TasksDataWrite;","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"brennanzuz"},"content":"import tasks.Deadline;","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"brennanzuz"},"content":"import tasks.Event;","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"brennanzuz"},"content":"import tasks.Task;","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"brennanzuz"},"content":"import tasks.Todo;","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"brennanzuz"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"brennanzuz"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"brennanzuz"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"brennanzuz"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"brennanzuz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"brennanzuz"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"brennanzuz"},"content":"import java.util.Objects;","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"brennanzuz"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"brennanzuz"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"brennanzuz"},"content":"import static java.lang.Integer.parseInt;","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"brennanzuz"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"brennanzuz"},"content":"public class DukeNUS {","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"brennanzuz"},"content":"    private static final String FILEPATH \u003d \"data/dukeNUS.txt\";","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"brennanzuz"},"content":"    private static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"brennanzuz"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"brennanzuz"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"brennanzuz"},"content":"     * Directs the input to execute the correct command.","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"brennanzuz"},"content":"     *","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"brennanzuz"},"content":"     * @param userInputWords The complete sentence the user inputted, often consisting of the command as the first word","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"brennanzuz"},"content":"     *                       and its arguments as its subsequent words.","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"brennanzuz"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"brennanzuz"},"content":"    private static void interpretCommand(String[] userInputWords) {","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"brennanzuz"},"content":"        switch (userInputWords[0]) {","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"brennanzuz"},"content":"        case \"list\":","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"brennanzuz"},"content":"            if (tasks.isEmpty()) {","lastModifiedDate":"2023-02-15"},{"lineNumber":34,"author":{"gitId":"brennanzuz"},"content":"                DukeNUSPrinter.printMessage(\"You have no tasks. ¯\\\\_(ツ)_/¯\");","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"brennanzuz"},"content":"            } else {","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"brennanzuz"},"content":"                DukeNUSPrinter.listTasks(tasks);","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"brennanzuz"},"content":"            }","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"brennanzuz"},"content":"            break;","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"brennanzuz"},"content":"        case \"find\":","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"brennanzuz"},"content":"            ArrayList\u003cTask\u003e filteredTasks \u003d Command.getFoundTasks(tasks, userInputWords[1]);","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"brennanzuz"},"content":"            if (filteredTasks.isEmpty()) {","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"brennanzuz"},"content":"                DukeNUSPrinter.printMessage(\"Tasks containing the term \\\"\" + userInputWords[1] + \"\\\" were not found.\");","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"brennanzuz"},"content":"            } else {","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"brennanzuz"},"content":"                DukeNUSPrinter.showSearchResults(filteredTasks);","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"brennanzuz"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"brennanzuz"},"content":"            break;","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"brennanzuz"},"content":"        case \"delete\":","lastModifiedDate":"2023-02-14"},{"lineNumber":48,"author":{"gitId":"brennanzuz"},"content":"            try {","lastModifiedDate":"2023-02-14"},{"lineNumber":49,"author":{"gitId":"brennanzuz"},"content":"                Command.deleteTask(tasks, parseInt(userInputWords[1]));","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"brennanzuz"},"content":"            } catch (IndexOutOfBoundsException exception) {","lastModifiedDate":"2023-02-14"},{"lineNumber":51,"author":{"gitId":"brennanzuz"},"content":"                DukeNUSPrinter.printMessage(\"☹ Error: The index of the task is missing or out of bounds.\");","lastModifiedDate":"2023-02-14"},{"lineNumber":52,"author":{"gitId":"brennanzuz"},"content":"            } catch (NumberFormatException exception) {","lastModifiedDate":"2023-02-14"},{"lineNumber":53,"author":{"gitId":"brennanzuz"},"content":"                DukeNUSPrinter.printMessage(\"☹ Error: The task index you have entered is not a number.\");","lastModifiedDate":"2023-02-14"},{"lineNumber":54,"author":{"gitId":"brennanzuz"},"content":"            } catch (NullPointerException exception) {","lastModifiedDate":"2023-02-14"},{"lineNumber":55,"author":{"gitId":"brennanzuz"},"content":"                DukeNUSPrinter.printMessage(\"☹ Error: The task index you have provided returns a null task.\");","lastModifiedDate":"2023-02-14"},{"lineNumber":56,"author":{"gitId":"brennanzuz"},"content":"            }","lastModifiedDate":"2023-02-14"},{"lineNumber":57,"author":{"gitId":"brennanzuz"},"content":"            break;","lastModifiedDate":"2023-02-14"},{"lineNumber":58,"author":{"gitId":"brennanzuz"},"content":"        case \"mark\":","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"brennanzuz"},"content":"            try {","lastModifiedDate":"2023-02-07"},{"lineNumber":60,"author":{"gitId":"brennanzuz"},"content":"                Command.markTask(tasks, parseInt(userInputWords[1]));","lastModifiedDate":"2023-03-01"},{"lineNumber":61,"author":{"gitId":"brennanzuz"},"content":"            } catch (IndexOutOfBoundsException exception) {","lastModifiedDate":"2023-02-14"},{"lineNumber":62,"author":{"gitId":"brennanzuz"},"content":"                DukeNUSPrinter.printMessage(\"☹ Error: The index of the task is missing or out of bounds.\");","lastModifiedDate":"2023-02-07"},{"lineNumber":63,"author":{"gitId":"brennanzuz"},"content":"            } catch (NumberFormatException exception) {","lastModifiedDate":"2023-02-07"},{"lineNumber":64,"author":{"gitId":"brennanzuz"},"content":"                DukeNUSPrinter.printMessage(\"☹ Error: The task index you have entered is not a number.\");","lastModifiedDate":"2023-02-07"},{"lineNumber":65,"author":{"gitId":"brennanzuz"},"content":"            } catch (NullPointerException exception) {","lastModifiedDate":"2023-02-07"},{"lineNumber":66,"author":{"gitId":"brennanzuz"},"content":"                DukeNUSPrinter.printMessage(\"☹ Error: The task index you have provided returns a null task.\");","lastModifiedDate":"2023-02-07"},{"lineNumber":67,"author":{"gitId":"brennanzuz"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"brennanzuz"},"content":"            break;","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"brennanzuz"},"content":"        case \"unmark\":","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"brennanzuz"},"content":"            try {","lastModifiedDate":"2023-02-07"},{"lineNumber":71,"author":{"gitId":"brennanzuz"},"content":"                Command.unmarkTask(tasks, parseInt(userInputWords[1]));","lastModifiedDate":"2023-03-01"},{"lineNumber":72,"author":{"gitId":"brennanzuz"},"content":"            } catch (ArrayIndexOutOfBoundsException exception) {","lastModifiedDate":"2023-02-07"},{"lineNumber":73,"author":{"gitId":"brennanzuz"},"content":"                DukeNUSPrinter.printMessage(\"☹ Error: The index of the task is missing or out of bounds.\");","lastModifiedDate":"2023-02-07"},{"lineNumber":74,"author":{"gitId":"brennanzuz"},"content":"            } catch (NumberFormatException exception) {","lastModifiedDate":"2023-02-07"},{"lineNumber":75,"author":{"gitId":"brennanzuz"},"content":"                DukeNUSPrinter.printMessage(\"☹ Error: The task index you have entered is not a number.\");","lastModifiedDate":"2023-02-07"},{"lineNumber":76,"author":{"gitId":"brennanzuz"},"content":"            } catch (NullPointerException exception) {","lastModifiedDate":"2023-02-07"},{"lineNumber":77,"author":{"gitId":"brennanzuz"},"content":"                DukeNUSPrinter.printMessage(\"☹ Error: The task index you have provided returns a null task.\");","lastModifiedDate":"2023-02-07"},{"lineNumber":78,"author":{"gitId":"brennanzuz"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":79,"author":{"gitId":"brennanzuz"},"content":"            break;","lastModifiedDate":"2023-02-01"},{"lineNumber":80,"author":{"gitId":"brennanzuz"},"content":"        case \"todo\":","lastModifiedDate":"2023-02-01"},{"lineNumber":81,"author":{"gitId":"brennanzuz"},"content":"            try {","lastModifiedDate":"2023-02-07"},{"lineNumber":82,"author":{"gitId":"brennanzuz"},"content":"                Command.addTodo(tasks, new Todo(userInputWords[1], false));","lastModifiedDate":"2023-03-01"},{"lineNumber":83,"author":{"gitId":"brennanzuz"},"content":"            } catch (ArrayIndexOutOfBoundsException exception) {","lastModifiedDate":"2023-02-07"},{"lineNumber":84,"author":{"gitId":"brennanzuz"},"content":"                DukeNUSPrinter.printMessage(\"☹ Error: please specify the description of the todo.\");","lastModifiedDate":"2023-02-07"},{"lineNumber":85,"author":{"gitId":"brennanzuz"},"content":"            }","lastModifiedDate":"2023-02-07"},{"lineNumber":86,"author":{"gitId":"brennanzuz"},"content":"            break;","lastModifiedDate":"2023-02-01"},{"lineNumber":87,"author":{"gitId":"brennanzuz"},"content":"        case \"deadline\":","lastModifiedDate":"2023-02-01"},{"lineNumber":88,"author":{"gitId":"brennanzuz"},"content":"            try {","lastModifiedDate":"2023-02-07"},{"lineNumber":89,"author":{"gitId":"brennanzuz"},"content":"                String[] deadlineInput \u003d userInputWords[1].split(\"/by\", 2);","lastModifiedDate":"2023-02-28"},{"lineNumber":90,"author":{"gitId":"brennanzuz"},"content":"                Command.addDeadline(tasks, new Deadline(deadlineInput[0], deadlineInput[1], false));","lastModifiedDate":"2023-03-01"},{"lineNumber":91,"author":{"gitId":"brennanzuz"},"content":"            } catch (ArrayIndexOutOfBoundsException exception) {","lastModifiedDate":"2023-02-07"},{"lineNumber":92,"author":{"gitId":"brennanzuz"},"content":"                DukeNUSPrinter.printMessage(\"☹ Error: incorrect syntax. Correct usage: \" +","lastModifiedDate":"2023-02-07"},{"lineNumber":93,"author":{"gitId":"brennanzuz"},"content":"                        \"`deadline [description] /by [deadline]`.\");","lastModifiedDate":"2023-02-07"},{"lineNumber":94,"author":{"gitId":"brennanzuz"},"content":"            } catch (DateTimeParseException exception) {","lastModifiedDate":"2023-02-28"},{"lineNumber":95,"author":{"gitId":"brennanzuz"},"content":"                DukeNUSPrinter.printMessage(\"☹ Error: invalid date format. Try the yyyy-MM-dd format (eg. 2000-12-31)\");","lastModifiedDate":"2023-02-28"},{"lineNumber":96,"author":{"gitId":"brennanzuz"},"content":"            }","lastModifiedDate":"2023-02-07"},{"lineNumber":97,"author":{"gitId":"brennanzuz"},"content":"            break;","lastModifiedDate":"2023-02-01"},{"lineNumber":98,"author":{"gitId":"brennanzuz"},"content":"        case \"event\":","lastModifiedDate":"2023-02-01"},{"lineNumber":99,"author":{"gitId":"brennanzuz"},"content":"            try {","lastModifiedDate":"2023-02-07"},{"lineNumber":100,"author":{"gitId":"brennanzuz"},"content":"                String[] eventInput \u003d userInputWords[1].split(\"/from|/to\", 3);","lastModifiedDate":"2023-02-28"},{"lineNumber":101,"author":{"gitId":"brennanzuz"},"content":"                Command.addEvent(tasks, new Event(eventInput[0], eventInput[1], eventInput[2], false));","lastModifiedDate":"2023-03-01"},{"lineNumber":102,"author":{"gitId":"brennanzuz"},"content":"            } catch (ArrayIndexOutOfBoundsException exception) {","lastModifiedDate":"2023-02-07"},{"lineNumber":103,"author":{"gitId":"brennanzuz"},"content":"                DukeNUSPrinter.printMessage(\"☹ Error: incorrect syntax. Correct usage: \" +","lastModifiedDate":"2023-02-07"},{"lineNumber":104,"author":{"gitId":"brennanzuz"},"content":"                        \"`event [description] /from [start_date] /to [end_date]`.\");","lastModifiedDate":"2023-02-07"},{"lineNumber":105,"author":{"gitId":"brennanzuz"},"content":"            } catch (DateTimeParseException exception) {","lastModifiedDate":"2023-02-28"},{"lineNumber":106,"author":{"gitId":"brennanzuz"},"content":"                DukeNUSPrinter.printMessage(\"☹ Error: invalid date format. Try the yyyy-MM-dd format (eg. 2000-12-31)\");","lastModifiedDate":"2023-02-28"},{"lineNumber":107,"author":{"gitId":"brennanzuz"},"content":"            }","lastModifiedDate":"2023-02-07"},{"lineNumber":108,"author":{"gitId":"brennanzuz"},"content":"            break;","lastModifiedDate":"2023-02-01"},{"lineNumber":109,"author":{"gitId":"brennanzuz"},"content":"        default:","lastModifiedDate":"2023-02-01"},{"lineNumber":110,"author":{"gitId":"brennanzuz"},"content":"            DukeNUSPrinter.printMessage(\"☹ Error: Unknown command. Please try again.\");","lastModifiedDate":"2023-02-07"},{"lineNumber":111,"author":{"gitId":"brennanzuz"},"content":"            break;","lastModifiedDate":"2023-02-01"},{"lineNumber":112,"author":{"gitId":"brennanzuz"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":113,"author":{"gitId":"brennanzuz"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":114,"author":{"gitId":"brennanzuz"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":115,"author":{"gitId":"brennanzuz"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-07"},{"lineNumber":116,"author":{"gitId":"brennanzuz"},"content":"        DukeNUSPrinter.printWelcomeMessage();","lastModifiedDate":"2023-03-01"},{"lineNumber":117,"author":{"gitId":"brennanzuz"},"content":"        try {","lastModifiedDate":"2023-02-15"},{"lineNumber":118,"author":{"gitId":"brennanzuz"},"content":"            tasks \u003d TasksDataRead.readSavedTasks(FILEPATH);","lastModifiedDate":"2023-02-15"},{"lineNumber":119,"author":{"gitId":"brennanzuz"},"content":"        } catch (FileNotFoundException | NoSuchElementException exception) {","lastModifiedDate":"2023-02-15"},{"lineNumber":120,"author":{"gitId":"brennanzuz"},"content":"            //There is no data to read. Continue.","lastModifiedDate":"2023-02-15"},{"lineNumber":121,"author":{"gitId":"brennanzuz"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2023-03-01"},{"lineNumber":122,"author":{"gitId":"brennanzuz"},"content":"            DukeNUSPrinter.printMessage(\"☹ Error: The data at \\\"\" + FILEPATH + \"\\\" is corrupted\");","lastModifiedDate":"2023-03-01"},{"lineNumber":123,"author":{"gitId":"brennanzuz"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":124,"author":{"gitId":"brennanzuz"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-07"},{"lineNumber":125,"author":{"gitId":"brennanzuz"},"content":"        String userInput \u003d scanner.nextLine();","lastModifiedDate":"2023-02-07"},{"lineNumber":126,"author":{"gitId":"brennanzuz"},"content":"        String[] userInputWords \u003d userInput.split(\" \", 2); //Contains 2 strings from the user delimited by spaces. The first word is the command and the subsequent words are arguments.","lastModifiedDate":"2023-02-07"},{"lineNumber":127,"author":{"gitId":"brennanzuz"},"content":"        //Continue reading the first word until \"bye\" is said.","lastModifiedDate":"2023-02-07"},{"lineNumber":128,"author":{"gitId":"brennanzuz"},"content":"        while (!Objects.equals(userInput, \"bye\")) {","lastModifiedDate":"2023-02-07"},{"lineNumber":129,"author":{"gitId":"brennanzuz"},"content":"            interpretCommand(userInputWords);","lastModifiedDate":"2023-02-15"},{"lineNumber":130,"author":{"gitId":"brennanzuz"},"content":"            userInput \u003d scanner.nextLine();","lastModifiedDate":"2023-02-01"},{"lineNumber":131,"author":{"gitId":"brennanzuz"},"content":"            userInputWords \u003d userInput.split(\" \", 2);","lastModifiedDate":"2023-02-01"},{"lineNumber":132,"author":{"gitId":"brennanzuz"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":133,"author":{"gitId":"brennanzuz"},"content":"        DukeNUSPrinter.printFarewellMessage();","lastModifiedDate":"2023-02-01"},{"lineNumber":134,"author":{"gitId":"brennanzuz"},"content":"        try {","lastModifiedDate":"2023-02-15"},{"lineNumber":135,"author":{"gitId":"brennanzuz"},"content":"            TasksDataWrite.writeSavedTasks(FILEPATH, tasks);","lastModifiedDate":"2023-02-15"},{"lineNumber":136,"author":{"gitId":"brennanzuz"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":137,"author":{"gitId":"brennanzuz"},"content":"            DukeNUSPrinter.printMessage(\"☹ Error: Something went wrong when saving your tasks to \\\"\" + FILEPATH + \"\\\"\");","lastModifiedDate":"2023-03-01"},{"lineNumber":138,"author":{"gitId":"brennanzuz"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":139,"author":{"gitId":"brennanzuz"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":140,"author":{"gitId":"brennanzuz"},"content":"}","lastModifiedDate":"2023-02-01"},{"lineNumber":141,"author":{"gitId":"brennanzuz"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":142,"author":{"gitId":"brennanzuz"},"content":"","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"brennanzuz":142}},{"path":"src/main/java/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brennanzuz"},"content":"package commands;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"brennanzuz"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"brennanzuz"},"content":"import io.DukeNUSPrinter;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"brennanzuz"},"content":"import tasks.Deadline;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"brennanzuz"},"content":"import tasks.Event;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"brennanzuz"},"content":"import tasks.Task;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"brennanzuz"},"content":"import tasks.Todo;","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"brennanzuz"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"brennanzuz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"brennanzuz"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"brennanzuz"},"content":"import static java.util.stream.Collectors.toCollection;","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"brennanzuz"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"brennanzuz"},"content":"public class Command {","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"brennanzuz"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"brennanzuz"},"content":"     * @param tasks The master ArrayList of all tasks.","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"brennanzuz"},"content":"     * @param searchPrompt The string to be searched within the description of each task. This is case-sensitive.","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"brennanzuz"},"content":"     * @return A filtered ArrayList of tasks with the searchPrompt as a substring in its description.","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"brennanzuz"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"brennanzuz"},"content":"    public static ArrayList\u003cTask\u003e getFoundTasks(ArrayList\u003cTask\u003e tasks, String searchPrompt) {","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"brennanzuz"},"content":"        return tasks.stream()","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"brennanzuz"},"content":"                .filter(task -\u003e task.getDescription().contains(searchPrompt))","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"brennanzuz"},"content":"                .collect(toCollection(ArrayList::new));","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"brennanzuz"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"brennanzuz"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"brennanzuz"},"content":"     * @param todo A newly constructed todo object as a child of Task that has a user-defined description.","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"brennanzuz"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"brennanzuz"},"content":"    public static void addTodo(ArrayList\u003cTask\u003e tasks, Todo todo) {","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"brennanzuz"},"content":"        tasks.add(todo);","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"brennanzuz"},"content":"        DukeNUSPrinter.printAddedTask(todo.getTaskString(), tasks.size());","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"brennanzuz"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"brennanzuz"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"brennanzuz"},"content":"     * @param deadline A newly constructed deadline object as a child of Task that has a user-defined description","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"brennanzuz"},"content":"     *                 and due date.","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"brennanzuz"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"brennanzuz"},"content":"    public static void addDeadline(ArrayList\u003cTask\u003e tasks, Deadline deadline) {","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"brennanzuz"},"content":"        tasks.add(deadline);","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"brennanzuz"},"content":"        DukeNUSPrinter.printAddedTask(deadline.getTaskString(), tasks.size());","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"brennanzuz"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"brennanzuz"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"brennanzuz"},"content":"     * @param event A newly constructed event object as a child of Task that has a user-defined description,","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"brennanzuz"},"content":"     *              from date, and to date.","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"brennanzuz"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"brennanzuz"},"content":"    public static void addEvent(ArrayList\u003cTask\u003e tasks, Event event) {","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"brennanzuz"},"content":"        tasks.add(event);","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"brennanzuz"},"content":"        DukeNUSPrinter.printAddedTask(event.getTaskString(), tasks.size());","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"brennanzuz"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"brennanzuz"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"brennanzuz"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"brennanzuz"},"content":"     * @param taskIndex The 1-based index of the task the user is referring to. Will remove the task from the array.","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"brennanzuz"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"brennanzuz"},"content":"    public static void deleteTask(ArrayList\u003cTask\u003e tasks, int taskIndex) {","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"brennanzuz"},"content":"        DukeNUSPrinter.printDeletedTask(tasks.get(taskIndex - 1).getTaskString());","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"brennanzuz"},"content":"        tasks.remove(taskIndex - 1);","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"brennanzuz"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"brennanzuz"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":56,"author":{"gitId":"brennanzuz"},"content":"     * @param taskIndex The 1-based index of the task the user is referring to. Will cause the isDone property of the","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"brennanzuz"},"content":"     *                  task to be true.","lastModifiedDate":"2023-03-01"},{"lineNumber":58,"author":{"gitId":"brennanzuz"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":59,"author":{"gitId":"brennanzuz"},"content":"    public static void markTask(ArrayList\u003cTask\u003e tasks, int taskIndex) {","lastModifiedDate":"2023-03-01"},{"lineNumber":60,"author":{"gitId":"brennanzuz"},"content":"        tasks.get(taskIndex - 1).setDone(true);","lastModifiedDate":"2023-03-01"},{"lineNumber":61,"author":{"gitId":"brennanzuz"},"content":"        DukeNUSPrinter.printMarkedTask(tasks.get(taskIndex - 1).getTaskString());","lastModifiedDate":"2023-03-01"},{"lineNumber":62,"author":{"gitId":"brennanzuz"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":63,"author":{"gitId":"brennanzuz"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":64,"author":{"gitId":"brennanzuz"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":65,"author":{"gitId":"brennanzuz"},"content":"     * @param taskIndex The 1-based index of the task the user is referring to. Will cause the isDone property of the","lastModifiedDate":"2023-03-01"},{"lineNumber":66,"author":{"gitId":"brennanzuz"},"content":"     *                  task to be false.","lastModifiedDate":"2023-03-01"},{"lineNumber":67,"author":{"gitId":"brennanzuz"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":68,"author":{"gitId":"brennanzuz"},"content":"    public static void unmarkTask(ArrayList\u003cTask\u003e tasks, int taskIndex) {","lastModifiedDate":"2023-03-01"},{"lineNumber":69,"author":{"gitId":"brennanzuz"},"content":"        tasks.get(taskIndex - 1).setDone(false);","lastModifiedDate":"2023-03-01"},{"lineNumber":70,"author":{"gitId":"brennanzuz"},"content":"        DukeNUSPrinter.printUnmarkedTask(tasks.get(taskIndex - 1).getTaskString());","lastModifiedDate":"2023-03-01"},{"lineNumber":71,"author":{"gitId":"brennanzuz"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":72,"author":{"gitId":"brennanzuz"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"brennanzuz":72}},{"path":"src/main/java/io/DukeNUSPrinter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brennanzuz"},"content":"package io;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"brennanzuz"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"brennanzuz"},"content":"import tasks.Task;","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"brennanzuz"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"brennanzuz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"brennanzuz"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"brennanzuz"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"brennanzuz"},"content":" * A tool to print messages to the terminal. Used by Duke chatbot.","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"brennanzuz"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"brennanzuz"},"content":"public class DukeNUSPrinter {","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"brennanzuz"},"content":"    public static final String LOGO \u003d \"\"","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"brennanzuz"},"content":"            + \"     ____        _          __    _ _   _ ______\\n\"","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"brennanzuz"},"content":"            + \"    |  _ \\\\ _   _| | _____  |   \\\\ | | | | | _____|\\n\"","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"brennanzuz"},"content":"            + \"    | | | | | | | |/ / _ \\\\ | |\\\\ \\\\| | | | |_____ |\\n\"","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"brennanzuz"},"content":"            + \"    | |_| | |_| |   \u003c  __/ | | \\\\ \\\\ | |_| |____| | \\n\"","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"brennanzuz"},"content":"            + \"    |____/ \\\\__,_|_|\\\\_\\\\___| |_|  \\\\__|_____|______|\\n\";","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"brennanzuz"},"content":"    public static final String INDENT \u003d \"    \";","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"brennanzuz"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"brennanzuz"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"brennanzuz"},"content":"     * Prints a horizontal line made of underscores to the terminal.","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"brennanzuz"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"brennanzuz"},"content":"    public static void printHorizontalLine() {","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"brennanzuz"},"content":"        System.out.println(INDENT + \"____________________________________________________________\");","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"brennanzuz"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"brennanzuz"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"brennanzuz"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"brennanzuz"},"content":"     * Prints a DukeNUS message bound by horizontal lines above and below to the console. Only single lines should be used.","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"brennanzuz"},"content":"     *","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"brennanzuz"},"content":"     * @param message The single line message to be bound by horizontal lines","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"brennanzuz"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"brennanzuz"},"content":"    public static void printMessage(String message) {","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"brennanzuz"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"brennanzuz"},"content":"        System.out.println(INDENT + message);","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"brennanzuz"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"brennanzuz"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"brennanzuz"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"brennanzuz"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":38,"author":{"gitId":"brennanzuz"},"content":"     * Prints a message to the console whenever a task is added to the tasks array.","lastModifiedDate":"2023-02-07"},{"lineNumber":39,"author":{"gitId":"brennanzuz"},"content":"     *","lastModifiedDate":"2023-02-07"},{"lineNumber":40,"author":{"gitId":"brennanzuz"},"content":"     * @param taskDisplayDescription The formatted description of the task with indications of its isDone and Task object type.","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"brennanzuz"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"brennanzuz"},"content":"    public static void printAddedTask(String taskDisplayDescription, int totalTaskCount) {","lastModifiedDate":"2023-02-15"},{"lineNumber":43,"author":{"gitId":"brennanzuz"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"brennanzuz"},"content":"        System.out.println(INDENT + \"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"brennanzuz"},"content":"        System.out.println(INDENT + taskDisplayDescription);","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"brennanzuz"},"content":"        System.out.println(INDENT + \"You now have \" + totalTaskCount + \" tasks in the list.\");","lastModifiedDate":"2023-02-15"},{"lineNumber":47,"author":{"gitId":"brennanzuz"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"brennanzuz"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"brennanzuz"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"brennanzuz"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":51,"author":{"gitId":"brennanzuz"},"content":"     * @param taskDisplayDescription The description of the task, its type and status.","lastModifiedDate":"2023-02-14"},{"lineNumber":52,"author":{"gitId":"brennanzuz"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":53,"author":{"gitId":"brennanzuz"},"content":"    public static void printDeletedTask(String taskDisplayDescription) {","lastModifiedDate":"2023-02-14"},{"lineNumber":54,"author":{"gitId":"brennanzuz"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-02-14"},{"lineNumber":55,"author":{"gitId":"brennanzuz"},"content":"        System.out.println(INDENT + \"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-02-14"},{"lineNumber":56,"author":{"gitId":"brennanzuz"},"content":"        System.out.println(INDENT + taskDisplayDescription);","lastModifiedDate":"2023-02-14"},{"lineNumber":57,"author":{"gitId":"brennanzuz"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-02-14"},{"lineNumber":58,"author":{"gitId":"brennanzuz"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":59,"author":{"gitId":"brennanzuz"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":60,"author":{"gitId":"brennanzuz"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":61,"author":{"gitId":"brennanzuz"},"content":"     * Prints a message to the console whenever a task is marked.","lastModifiedDate":"2023-02-07"},{"lineNumber":62,"author":{"gitId":"brennanzuz"},"content":"     *","lastModifiedDate":"2023-02-07"},{"lineNumber":63,"author":{"gitId":"brennanzuz"},"content":"     * @param taskDisplayDescription The formatted description of the task with indications of its isDone and Task object type.","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"brennanzuz"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"brennanzuz"},"content":"    public static void printMarkedTask(String taskDisplayDescription) {","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"brennanzuz"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"brennanzuz"},"content":"        System.out.println(INDENT + \"Congratulations! You have finished this task:\");","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"brennanzuz"},"content":"        System.out.println(INDENT + taskDisplayDescription);","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"brennanzuz"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"brennanzuz"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":71,"author":{"gitId":"brennanzuz"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":72,"author":{"gitId":"brennanzuz"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":73,"author":{"gitId":"brennanzuz"},"content":"     * Prints a message to the console whenever a task is unmarked.","lastModifiedDate":"2023-02-07"},{"lineNumber":74,"author":{"gitId":"brennanzuz"},"content":"     *","lastModifiedDate":"2023-02-07"},{"lineNumber":75,"author":{"gitId":"brennanzuz"},"content":"     * @param taskDisplayDescription The formatted description of the task with indications of its isDone and Task object type","lastModifiedDate":"2023-02-01"},{"lineNumber":76,"author":{"gitId":"brennanzuz"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":77,"author":{"gitId":"brennanzuz"},"content":"    public static void printUnmarkedTask(String taskDisplayDescription) {","lastModifiedDate":"2023-02-01"},{"lineNumber":78,"author":{"gitId":"brennanzuz"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-02-01"},{"lineNumber":79,"author":{"gitId":"brennanzuz"},"content":"        System.out.println(INDENT + \"The following task is now marked as undone:\");","lastModifiedDate":"2023-02-01"},{"lineNumber":80,"author":{"gitId":"brennanzuz"},"content":"        System.out.println(INDENT + taskDisplayDescription);","lastModifiedDate":"2023-02-01"},{"lineNumber":81,"author":{"gitId":"brennanzuz"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-02-01"},{"lineNumber":82,"author":{"gitId":"brennanzuz"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":83,"author":{"gitId":"brennanzuz"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":84,"author":{"gitId":"brennanzuz"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":85,"author":{"gitId":"brennanzuz"},"content":"     * Prints all tasks in the tasks array that is not null. To be used by the list command.","lastModifiedDate":"2023-02-28"},{"lineNumber":86,"author":{"gitId":"brennanzuz"},"content":"     *","lastModifiedDate":"2023-02-07"},{"lineNumber":87,"author":{"gitId":"brennanzuz"},"content":"     * @param tasks     The array of tasks. The array used in practice is of fixed size 100.","lastModifiedDate":"2023-02-01"},{"lineNumber":88,"author":{"gitId":"brennanzuz"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":89,"author":{"gitId":"brennanzuz"},"content":"    public static void listTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-28"},{"lineNumber":90,"author":{"gitId":"brennanzuz"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-02-01"},{"lineNumber":91,"author":{"gitId":"brennanzuz"},"content":"        System.out.println(INDENT + \"Here are the tasks in your list:\");","lastModifiedDate":"2023-02-01"},{"lineNumber":92,"author":{"gitId":"brennanzuz"},"content":"        printTasks(tasks);","lastModifiedDate":"2023-02-28"},{"lineNumber":93,"author":{"gitId":"brennanzuz"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-02-28"},{"lineNumber":94,"author":{"gitId":"brennanzuz"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":95,"author":{"gitId":"brennanzuz"},"content":"    public static void showSearchResults(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-28"},{"lineNumber":96,"author":{"gitId":"brennanzuz"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-02-28"},{"lineNumber":97,"author":{"gitId":"brennanzuz"},"content":"        System.out.println(INDENT + \"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-02-28"},{"lineNumber":98,"author":{"gitId":"brennanzuz"},"content":"        printTasks(tasks);","lastModifiedDate":"2023-02-28"},{"lineNumber":99,"author":{"gitId":"brennanzuz"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-02-28"},{"lineNumber":100,"author":{"gitId":"brennanzuz"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":101,"author":{"gitId":"brennanzuz"},"content":"    private static void printTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-28"},{"lineNumber":102,"author":{"gitId":"brennanzuz"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i +\u003d 1) {","lastModifiedDate":"2023-02-15"},{"lineNumber":103,"author":{"gitId":"brennanzuz"},"content":"            System.out.println(INDENT + (i + 1) + \u0027.\u0027 + tasks.get(i).getTaskString());","lastModifiedDate":"2023-02-14"},{"lineNumber":104,"author":{"gitId":"brennanzuz"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":105,"author":{"gitId":"brennanzuz"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":106,"author":{"gitId":"brennanzuz"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":107,"author":{"gitId":"brennanzuz"},"content":"    public static void printWelcomeMessage() {","lastModifiedDate":"2023-02-01"},{"lineNumber":108,"author":{"gitId":"brennanzuz"},"content":"        printMessage(\"Hello from\\n\" + LOGO + INDENT + \"Hello! I\u0027m Duke-NUS Medical School. \\n\" + INDENT + \"What can I do for you?\");","lastModifiedDate":"2023-02-01"},{"lineNumber":109,"author":{"gitId":"brennanzuz"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":110,"author":{"gitId":"brennanzuz"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":111,"author":{"gitId":"brennanzuz"},"content":"    public static void printFarewellMessage() {","lastModifiedDate":"2023-02-01"},{"lineNumber":112,"author":{"gitId":"brennanzuz"},"content":"        printMessage(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-02-01"},{"lineNumber":113,"author":{"gitId":"brennanzuz"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":114,"author":{"gitId":"brennanzuz"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":115,"author":{"gitId":"brennanzuz"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":116,"author":{"gitId":"brennanzuz"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"brennanzuz":116}},{"path":"src/main/java/io/TasksDataRead.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brennanzuz"},"content":"package io;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"brennanzuz"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"brennanzuz"},"content":"import tasks.Deadline;","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"brennanzuz"},"content":"import tasks.Event;","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"brennanzuz"},"content":"import tasks.Task;","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"brennanzuz"},"content":"import tasks.Todo;","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"brennanzuz"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"brennanzuz"},"content":"import java.io.File;","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"brennanzuz"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"brennanzuz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"brennanzuz"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"brennanzuz"},"content":"import static java.lang.Boolean.parseBoolean;","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"brennanzuz"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"brennanzuz"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"brennanzuz"},"content":" * This class handles the reading of the list of tasks stored in a persistent txt file written from previous sessions.","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"brennanzuz"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"brennanzuz"},"content":"public class TasksDataRead {","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"brennanzuz"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"brennanzuz"},"content":"     * Reads the txt file storing the tasks between sessions by splitting using delimiters and reading the first word","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"brennanzuz"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"brennanzuz"},"content":"     * @param savedEntryWords","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"brennanzuz"},"content":"     * @param savedTasks","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"brennanzuz"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"brennanzuz"},"content":"    private static void interpretSaveEntry(String[] savedEntryWords, ArrayList\u003cTask\u003e savedTasks) {","lastModifiedDate":"2023-02-15"},{"lineNumber":25,"author":{"gitId":"brennanzuz"},"content":"        switch (savedEntryWords[0]) {","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"brennanzuz"},"content":"        case \"todo\":","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"brennanzuz"},"content":"            String[] todoInput \u003d savedEntryWords[1].split(\"/marked\", 2);","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"brennanzuz"},"content":"            addTodo(new Todo(todoInput[0], parseBoolean(todoInput[1])), savedTasks);","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"brennanzuz"},"content":"            break;","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"brennanzuz"},"content":"        case \"deadline\":","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"brennanzuz"},"content":"            String[] deadlineInput \u003d savedEntryWords[1].split(\"/by|/marked\", 3);","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"brennanzuz"},"content":"            addDeadline(new Deadline(deadlineInput[0], deadlineInput[1], parseBoolean(deadlineInput[2])), savedTasks);","lastModifiedDate":"2023-02-15"},{"lineNumber":33,"author":{"gitId":"brennanzuz"},"content":"            break;","lastModifiedDate":"2023-02-15"},{"lineNumber":34,"author":{"gitId":"brennanzuz"},"content":"        case \"event\":","lastModifiedDate":"2023-02-15"},{"lineNumber":35,"author":{"gitId":"brennanzuz"},"content":"            String[] eventInput \u003d savedEntryWords[1].split(\"/from|/to|/marked\", 4);","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"brennanzuz"},"content":"            addEvent(new Event(eventInput[0], eventInput[1], eventInput[2], parseBoolean(eventInput[3])), savedTasks);","lastModifiedDate":"2023-02-15"},{"lineNumber":37,"author":{"gitId":"brennanzuz"},"content":"            break;","lastModifiedDate":"2023-02-15"},{"lineNumber":38,"author":{"gitId":"brennanzuz"},"content":"        default:","lastModifiedDate":"2023-02-15"},{"lineNumber":39,"author":{"gitId":"brennanzuz"},"content":"            DukeNUSPrinter.printMessage(\"☹ Error: The saved file is corrupted\");","lastModifiedDate":"2023-02-15"},{"lineNumber":40,"author":{"gitId":"brennanzuz"},"content":"            break;","lastModifiedDate":"2023-02-15"},{"lineNumber":41,"author":{"gitId":"brennanzuz"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":42,"author":{"gitId":"brennanzuz"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":43,"author":{"gitId":"brennanzuz"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"brennanzuz"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"brennanzuz"},"content":"     * @param todo The saved Todo task.","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"brennanzuz"},"content":"     * @param savedTasks A new ArrayList created at the start of the session.","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"brennanzuz"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"brennanzuz"},"content":"    private static void addTodo(Todo todo, ArrayList\u003cTask\u003e savedTasks) {","lastModifiedDate":"2023-02-15"},{"lineNumber":49,"author":{"gitId":"brennanzuz"},"content":"        savedTasks.add(todo);","lastModifiedDate":"2023-02-15"},{"lineNumber":50,"author":{"gitId":"brennanzuz"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":51,"author":{"gitId":"brennanzuz"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"brennanzuz"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"brennanzuz"},"content":"     * @param deadline The saved Deadline task.","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"brennanzuz"},"content":"     * @param savedTasks A new ArrayList created at the start of the session.","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"brennanzuz"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":56,"author":{"gitId":"brennanzuz"},"content":"    private static void addDeadline(Deadline deadline, ArrayList\u003cTask\u003e savedTasks) {","lastModifiedDate":"2023-02-15"},{"lineNumber":57,"author":{"gitId":"brennanzuz"},"content":"        savedTasks.add(deadline);","lastModifiedDate":"2023-02-15"},{"lineNumber":58,"author":{"gitId":"brennanzuz"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":59,"author":{"gitId":"brennanzuz"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":60,"author":{"gitId":"brennanzuz"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":61,"author":{"gitId":"brennanzuz"},"content":"     * @param event The saved Event task.","lastModifiedDate":"2023-03-01"},{"lineNumber":62,"author":{"gitId":"brennanzuz"},"content":"     * @param savedTasks A new ArrayList created at the start of the session.","lastModifiedDate":"2023-03-01"},{"lineNumber":63,"author":{"gitId":"brennanzuz"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":64,"author":{"gitId":"brennanzuz"},"content":"    private static void addEvent(Event event, ArrayList\u003cTask\u003e savedTasks) {","lastModifiedDate":"2023-02-15"},{"lineNumber":65,"author":{"gitId":"brennanzuz"},"content":"        savedTasks.add(event);","lastModifiedDate":"2023-02-15"},{"lineNumber":66,"author":{"gitId":"brennanzuz"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":67,"author":{"gitId":"brennanzuz"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":68,"author":{"gitId":"brennanzuz"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":69,"author":{"gitId":"brennanzuz"},"content":"     * @param filePath A string representing the relative path towards the data txt file stored between sessions.","lastModifiedDate":"2023-03-01"},{"lineNumber":70,"author":{"gitId":"brennanzuz"},"content":"     * @return A new ArrayList containing all of the tasks stored in the data txt file from previous sessions.","lastModifiedDate":"2023-03-01"},{"lineNumber":71,"author":{"gitId":"brennanzuz"},"content":"     * @throws FileNotFoundException The txt file at the filePath does not exist.","lastModifiedDate":"2023-03-01"},{"lineNumber":72,"author":{"gitId":"brennanzuz"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":73,"author":{"gitId":"brennanzuz"},"content":"    public static ArrayList\u003cTask\u003e readSavedTasks(String filePath) throws FileNotFoundException {","lastModifiedDate":"2023-02-15"},{"lineNumber":74,"author":{"gitId":"brennanzuz"},"content":"        //TODO: Account for \u0027/\u0027 in entries.","lastModifiedDate":"2023-02-15"},{"lineNumber":75,"author":{"gitId":"brennanzuz"},"content":"        ArrayList\u003cTask\u003e savedTasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-02-15"},{"lineNumber":76,"author":{"gitId":"brennanzuz"},"content":"        File tasksDataFile \u003d new File(filePath);","lastModifiedDate":"2023-02-15"},{"lineNumber":77,"author":{"gitId":"brennanzuz"},"content":"        Scanner tasksDataReader \u003d new Scanner(tasksDataFile);","lastModifiedDate":"2023-02-15"},{"lineNumber":78,"author":{"gitId":"brennanzuz"},"content":"        String savedEntry;","lastModifiedDate":"2023-02-15"},{"lineNumber":79,"author":{"gitId":"brennanzuz"},"content":"        String[] savedEntryWords;","lastModifiedDate":"2023-02-15"},{"lineNumber":80,"author":{"gitId":"brennanzuz"},"content":"        while (tasksDataReader.hasNext()) {","lastModifiedDate":"2023-02-15"},{"lineNumber":81,"author":{"gitId":"brennanzuz"},"content":"            savedEntry \u003d tasksDataReader.nextLine();","lastModifiedDate":"2023-02-15"},{"lineNumber":82,"author":{"gitId":"brennanzuz"},"content":"            savedEntryWords \u003d savedEntry.split(\" \", 2);","lastModifiedDate":"2023-02-15"},{"lineNumber":83,"author":{"gitId":"brennanzuz"},"content":"            try {","lastModifiedDate":"2023-02-15"},{"lineNumber":84,"author":{"gitId":"brennanzuz"},"content":"                interpretSaveEntry(savedEntryWords, savedTasks);","lastModifiedDate":"2023-02-15"},{"lineNumber":85,"author":{"gitId":"brennanzuz"},"content":"            } catch (ArrayIndexOutOfBoundsException exception) {","lastModifiedDate":"2023-02-15"},{"lineNumber":86,"author":{"gitId":"brennanzuz"},"content":"                DukeNUSPrinter.printMessage(\"☹ Error: The saved file is corrupted\");","lastModifiedDate":"2023-02-15"},{"lineNumber":87,"author":{"gitId":"brennanzuz"},"content":"            }","lastModifiedDate":"2023-02-15"},{"lineNumber":88,"author":{"gitId":"brennanzuz"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":89,"author":{"gitId":"brennanzuz"},"content":"        return savedTasks;","lastModifiedDate":"2023-02-15"},{"lineNumber":90,"author":{"gitId":"brennanzuz"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":91,"author":{"gitId":"brennanzuz"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"brennanzuz":91}},{"path":"src/main/java/io/TasksDataWrite.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brennanzuz"},"content":"package io;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"brennanzuz"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"brennanzuz"},"content":"import tasks.Deadline;","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"brennanzuz"},"content":"import tasks.Event;","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"brennanzuz"},"content":"import tasks.Task;","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"brennanzuz"},"content":"import tasks.Todo;","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"brennanzuz"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"brennanzuz"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"brennanzuz"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"brennanzuz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"brennanzuz"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"brennanzuz"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"brennanzuz"},"content":" * This class handles the writing of the list of tasks of the current session to a persistent txt file to be read in","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"brennanzuz"},"content":" * future sessions.","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"brennanzuz"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"brennanzuz"},"content":"public class TasksDataWrite {","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"brennanzuz"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"brennanzuz"},"content":"     * @param task The task to be formatted.","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"brennanzuz"},"content":"     * @return A string formatted with delimiting keywords to be accepted by the reader.","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"brennanzuz"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"brennanzuz"},"content":"    private static String getFileEntry(Task task) {","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"brennanzuz"},"content":"        if (task.getClass().equals(Todo.class)) {","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"brennanzuz"},"content":"            return \"todo \" + task.getDescription() + \"/marked\" + task.isDone();","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"brennanzuz"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":25,"author":{"gitId":"brennanzuz"},"content":"        if (task.getClass().equals(Deadline.class)) {","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"brennanzuz"},"content":"            return \"deadline \" + task.getDescription() + \"/by\" + ((Deadline) task).getBy() + \"/marked\" + task.isDone();","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"brennanzuz"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"brennanzuz"},"content":"        if (task.getClass().equals(Event.class)) {","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"brennanzuz"},"content":"            return \"event \" + task.getDescription() + \"/from\" + ((Event) task).getFrom() + \"/to\" + ((Event) task).getTo() + \"/marked\" + task.isDone();","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"brennanzuz"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"brennanzuz"},"content":"        return \"\";","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"brennanzuz"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":33,"author":{"gitId":"brennanzuz"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":34,"author":{"gitId":"brennanzuz"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"brennanzuz"},"content":"     * @param filePath A string representing the relative path towards the data txt file stored between sessions.","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"brennanzuz"},"content":"     * @param taskDataToWrite The ArrayList of tasks that was filled by the user in the current session.","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"brennanzuz"},"content":"     * @throws IOException Thrown when the string cannot be written to the file.","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"brennanzuz"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"brennanzuz"},"content":"    public static void writeSavedTasks(String filePath, ArrayList\u003cTask\u003e taskDataToWrite) throws IOException {","lastModifiedDate":"2023-02-15"},{"lineNumber":40,"author":{"gitId":"brennanzuz"},"content":"        //TODO: Account for \u0027/\u0027 in entries.","lastModifiedDate":"2023-02-15"},{"lineNumber":41,"author":{"gitId":"brennanzuz"},"content":"        FileWriter tasksDataWriter \u003d new FileWriter(filePath);","lastModifiedDate":"2023-02-15"},{"lineNumber":42,"author":{"gitId":"brennanzuz"},"content":"        for (Task task : taskDataToWrite) {","lastModifiedDate":"2023-02-15"},{"lineNumber":43,"author":{"gitId":"brennanzuz"},"content":"            tasksDataWriter.write(getFileEntry(task) + \u0027\\n\u0027);","lastModifiedDate":"2023-02-15"},{"lineNumber":44,"author":{"gitId":"brennanzuz"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":45,"author":{"gitId":"brennanzuz"},"content":"        tasksDataWriter.close();","lastModifiedDate":"2023-02-15"},{"lineNumber":46,"author":{"gitId":"brennanzuz"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":47,"author":{"gitId":"brennanzuz"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"brennanzuz":47}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brennanzuz"},"content":"package tasks;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"brennanzuz"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"brennanzuz"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"brennanzuz"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"brennanzuz"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"brennanzuz"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"brennanzuz"},"content":" * A Deadline object is a Task object that has a due date.","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"brennanzuz"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"brennanzuz"},"content":"public class Deadline extends Task{","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"brennanzuz"},"content":"    private LocalDate by;","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"brennanzuz"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"brennanzuz"},"content":"    public String getBy() {","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"brennanzuz"},"content":"        return by.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"brennanzuz"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"brennanzuz"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"brennanzuz"},"content":"    public void setBy(String by) {","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"brennanzuz"},"content":"        this.by \u003d LocalDate.parse(by.trim());","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"brennanzuz"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"brennanzuz"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"brennanzuz"},"content":"    /** Upon creating the Deadline, the by date will be concatenated into the displayed description.","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"brennanzuz"},"content":"     * @param description The description of this task.","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"brennanzuz"},"content":"     * @param by The date this task has to be done.","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"brennanzuz"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"brennanzuz"},"content":"    public Deadline(String description, String by, boolean isDone) {","lastModifiedDate":"2023-02-15"},{"lineNumber":25,"author":{"gitId":"brennanzuz"},"content":"        super(description, isDone);","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"brennanzuz"},"content":"        setBy(by);","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"brennanzuz"},"content":"        setFormattedDescription(description + \"(by: \" + getBy() + \u0027)\u0027);","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"brennanzuz"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"brennanzuz"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"brennanzuz":29}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brennanzuz"},"content":"package tasks;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"brennanzuz"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"brennanzuz"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"brennanzuz"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"brennanzuz"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"brennanzuz"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"brennanzuz"},"content":" * An Event object is a Task object that has a \"from\" date and a \"to\" date.","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"brennanzuz"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"brennanzuz"},"content":"public class Event extends Task {","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"brennanzuz"},"content":"    private LocalDate from;","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"brennanzuz"},"content":"    private LocalDate to;","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"brennanzuz"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"brennanzuz"},"content":"    public String getFrom() {","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"brennanzuz"},"content":"        return from.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"brennanzuz"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"brennanzuz"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"brennanzuz"},"content":"    public void setFrom(String from) {","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"brennanzuz"},"content":"        this.from \u003d LocalDate.parse(from.trim());","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"brennanzuz"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"brennanzuz"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"brennanzuz"},"content":"    public String getTo() {","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"brennanzuz"},"content":"        return to.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"brennanzuz"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"brennanzuz"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"brennanzuz"},"content":"    public void setTo(String to) {","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"brennanzuz"},"content":"        this.to \u003d LocalDate.parse(to.trim());","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"brennanzuz"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"brennanzuz"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"brennanzuz"},"content":"    /** Upon creating the event, the from and to dates will be concatenated to the displayed description.","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"brennanzuz"},"content":"     * @param description The description of the event.","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"brennanzuz"},"content":"     * @param from The date this event begins.","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"brennanzuz"},"content":"     * @param to The date this event ends.","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"brennanzuz"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"brennanzuz"},"content":"    public Event(String description, String from, String to, boolean isDone) {","lastModifiedDate":"2023-02-15"},{"lineNumber":35,"author":{"gitId":"brennanzuz"},"content":"        super(description, isDone);","lastModifiedDate":"2023-02-15"},{"lineNumber":36,"author":{"gitId":"brennanzuz"},"content":"        setFrom(from);","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"brennanzuz"},"content":"        setTo(to);","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"brennanzuz"},"content":"        setFormattedDescription(description + \"(from: \" + getFrom() + \" \u003e to: \" + getTo() + \u0027)\u0027);","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"brennanzuz"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"brennanzuz"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"brennanzuz":40}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brennanzuz"},"content":"package tasks;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"brennanzuz"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"brennanzuz"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"brennanzuz"},"content":" * A Task object contains a description of the task, and isDone boolean to indicate whether this task has been completed.","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"brennanzuz"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"brennanzuz"},"content":"public class Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"brennanzuz"},"content":"    private String description;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"brennanzuz"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"brennanzuz"},"content":"    public String getFormattedDescription() {","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"brennanzuz"},"content":"        return formattedDescription;","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"brennanzuz"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"brennanzuz"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"brennanzuz"},"content":"    public void setFormattedDescription(String formattedDescription) {","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"brennanzuz"},"content":"        this.formattedDescription \u003d formattedDescription;","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"brennanzuz"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"brennanzuz"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"brennanzuz"},"content":"    private String formattedDescription;","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"brennanzuz"},"content":"    private boolean isDone;","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"brennanzuz"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"brennanzuz"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"brennanzuz"},"content":"        return description;","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"brennanzuz"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"brennanzuz"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"brennanzuz"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"brennanzuz"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"brennanzuz"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"brennanzuz"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"brennanzuz"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"brennanzuz"},"content":"        return isDone;","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"brennanzuz"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"brennanzuz"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"brennanzuz"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"brennanzuz"},"content":"        isDone \u003d done;","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"brennanzuz"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"brennanzuz"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"brennanzuz"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"brennanzuz"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"brennanzuz"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"brennanzuz"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2023-02-15"},{"lineNumber":40,"author":{"gitId":"brennanzuz"},"content":"        setDescription(description);","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"brennanzuz"},"content":"        setDone(isDone);","lastModifiedDate":"2023-02-15"},{"lineNumber":42,"author":{"gitId":"brennanzuz"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"brennanzuz"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"brennanzuz"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"brennanzuz"},"content":"        if (isDone) {","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"brennanzuz"},"content":"            return \"X\";","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"brennanzuz"},"content":"        } else {","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"brennanzuz"},"content":"            return \" \";","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"brennanzuz"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"brennanzuz"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"brennanzuz"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"brennanzuz"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"brennanzuz"},"content":"     * @return A formatted string that indicates the type of the task using a single letter \u0027T\u0027, \u0027D\u0027, or \u0027E\u0027 in brackets","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"brennanzuz"},"content":"     * \"[]\" corresponding to a \"Todo\", \"Deadline\", or \"Event\" respectively. Followed by a space \u0027 \u0027 or a \u0027X\u0027 indicating an","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"brennanzuz"},"content":"     * undone or done task respectively. Followed by the description of the task.","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"brennanzuz"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"brennanzuz"},"content":"    public String getTaskString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"brennanzuz"},"content":"        return \u0027[\u0027 + this.getClass().getSimpleName().substring(0, 1) + \"][\" + getStatusIcon() + \"] \" + getFormattedDescription();","lastModifiedDate":"2023-02-15"},{"lineNumber":59,"author":{"gitId":"brennanzuz"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"brennanzuz"},"content":"}","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"brennanzuz"},"content":"","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"brennanzuz":61}},{"path":"src/main/java/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brennanzuz"},"content":"package tasks;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"brennanzuz"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"brennanzuz"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"brennanzuz"},"content":" * A Todo object is simply a Task object with only a description.","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"brennanzuz"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"brennanzuz"},"content":"public class Todo extends Task{","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"brennanzuz"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"brennanzuz"},"content":"     * @param description The description of the task to be done.","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"brennanzuz"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"brennanzuz"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"brennanzuz"},"content":"        super(description, isDone);","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"brennanzuz"},"content":"        setFormattedDescription(description);","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"brennanzuz"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"brennanzuz"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"brennanzuz":14}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"brennanzuz"},"content":"java -classpath ..\\bin DukeNUS \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"brennanzuz":1,"-":20}}]
