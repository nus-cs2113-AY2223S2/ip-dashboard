[{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenangwx"},"content":"package duke;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"darrenangwx"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"darrenangwx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"darrenangwx"},"content":"import exceptions.DeadlineCommandException;","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"darrenangwx"},"content":"import exceptions.EventCommandException;","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"darrenangwx"},"content":"import exceptions.MarkUnmarkCommandException;","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"darrenangwx"},"content":"import exceptions.TodoCommandException;","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"darrenangwx"},"content":"import task.Task;","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"darrenangwx"},"content":"import task.Todo;","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"darrenangwx"},"content":"import task.Deadline;","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"darrenangwx"},"content":"import task.Event;","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"darrenangwx"},"content":"        printBanner();","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"darrenangwx"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"darrenangwx"},"content":"        String userInput;","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"darrenangwx"},"content":"        ArrayList\u003cTask\u003e listOfTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"darrenangwx"},"content":"        boolean isRunning \u003d true;","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"darrenangwx"},"content":"        while (isRunning) {","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"darrenangwx"},"content":"            userInput \u003d in.nextLine();","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"darrenangwx"},"content":"            String[] userInputSplit \u003d userInput.split(\" \");","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"darrenangwx"},"content":"            try {","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"darrenangwx"},"content":"                isRunning \u003d runCommand(userInput, listOfTasks, userInputSplit);","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"darrenangwx"},"content":"            } catch (TodoCommandException e) {","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"darrenangwx"},"content":"                System.out.println(\"OOPS!!! The description of todo cannot be empty\");","lastModifiedDate":"2023-02-05"},{"lineNumber":30,"author":{"gitId":"darrenangwx"},"content":"                System.out.println(\"Usage: todo \u003cdescription\u003e\");","lastModifiedDate":"2023-02-05"},{"lineNumber":31,"author":{"gitId":"darrenangwx"},"content":"            } catch (MarkUnmarkCommandException e) {","lastModifiedDate":"2023-02-05"},{"lineNumber":32,"author":{"gitId":"darrenangwx"},"content":"                System.out.println(\"OOPS!!! please give me a valid number from the list.\");","lastModifiedDate":"2023-02-05"},{"lineNumber":33,"author":{"gitId":"darrenangwx"},"content":"                System.out.println(\"Usage: mark/unmark \u003ctask number\u003e\");","lastModifiedDate":"2023-02-05"},{"lineNumber":34,"author":{"gitId":"darrenangwx"},"content":"            } catch (DeadlineCommandException e) {","lastModifiedDate":"2023-02-05"},{"lineNumber":35,"author":{"gitId":"darrenangwx"},"content":"                System.out.println(\"OOPS!!! please give me a deadline.\");","lastModifiedDate":"2023-02-05"},{"lineNumber":36,"author":{"gitId":"darrenangwx"},"content":"                System.out.println(\"Usage: deadline /by \u003cspecify by when\u003e\");","lastModifiedDate":"2023-02-05"},{"lineNumber":37,"author":{"gitId":"darrenangwx"},"content":"            } catch (EventCommandException e) {","lastModifiedDate":"2023-02-05"},{"lineNumber":38,"author":{"gitId":"darrenangwx"},"content":"                System.out.println(\"OOPS!!! please give me a event.\");","lastModifiedDate":"2023-02-05"},{"lineNumber":39,"author":{"gitId":"darrenangwx"},"content":"                System.out.println(\"Usage: event /from \u003cspecify from when\u003e /to \u003cspecify to when\u003e\");","lastModifiedDate":"2023-02-05"},{"lineNumber":40,"author":{"gitId":"darrenangwx"},"content":"            }","lastModifiedDate":"2023-02-05"},{"lineNumber":41,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":42,"author":{"gitId":"darrenangwx"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"darrenangwx"},"content":"     * Run the command the user typed.","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"darrenangwx"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"darrenangwx"},"content":"     * @param userInput      What the user inputted into the command line.","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"darrenangwx"},"content":"     * @param listOfTasks    An arraylist storing the list of tasks the user created.","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"darrenangwx"},"content":"     * @param userInputSplit An array storing the user input but split by \" \".","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"darrenangwx"},"content":"     * @return false only if \"bye\" is typed. true otherwise.","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"darrenangwx"},"content":"    private static boolean runCommand(String userInput, ArrayList\u003cTask\u003e listOfTasks, String[] userInputSplit)","lastModifiedDate":"2023-02-05"},{"lineNumber":55,"author":{"gitId":"darrenangwx"},"content":"            throws TodoCommandException, MarkUnmarkCommandException, DeadlineCommandException, EventCommandException {","lastModifiedDate":"2023-02-05"},{"lineNumber":56,"author":{"gitId":"darrenangwx"},"content":"        Task task;","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"darrenangwx"},"content":"        String userInputNoCommand \u003d userInput.replace(userInputSplit[0], \"\");","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"darrenangwx"},"content":"        switch (userInputSplit[0]) {","lastModifiedDate":"2023-01-22"},{"lineNumber":59,"author":{"gitId":"darrenangwx"},"content":"        case \"bye\":","lastModifiedDate":"2023-01-22"},{"lineNumber":60,"author":{"gitId":"darrenangwx"},"content":"            System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-22"},{"lineNumber":61,"author":{"gitId":"darrenangwx"},"content":"            return false;","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"darrenangwx"},"content":"        case \"list\":","lastModifiedDate":"2023-01-22"},{"lineNumber":63,"author":{"gitId":"darrenangwx"},"content":"            if (listOfTasks.isEmpty()) {","lastModifiedDate":"2023-02-05"},{"lineNumber":64,"author":{"gitId":"darrenangwx"},"content":"                System.out.println(\"Wow! you currently have no task!\");","lastModifiedDate":"2023-02-05"},{"lineNumber":65,"author":{"gitId":"darrenangwx"},"content":"            } else {","lastModifiedDate":"2023-02-05"},{"lineNumber":66,"author":{"gitId":"darrenangwx"},"content":"                System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-01-22"},{"lineNumber":67,"author":{"gitId":"darrenangwx"},"content":"                for (int i \u003d 0; i \u003c listOfTasks.size(); i++) {","lastModifiedDate":"2023-01-22"},{"lineNumber":68,"author":{"gitId":"darrenangwx"},"content":"                    task \u003d listOfTasks.get(i);","lastModifiedDate":"2023-01-22"},{"lineNumber":69,"author":{"gitId":"darrenangwx"},"content":"                    System.out.println(i + 1 + \".\" + task);","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"darrenangwx"},"content":"                }","lastModifiedDate":"2023-01-22"},{"lineNumber":71,"author":{"gitId":"darrenangwx"},"content":"            }","lastModifiedDate":"2023-02-05"},{"lineNumber":72,"author":{"gitId":"darrenangwx"},"content":"            break;","lastModifiedDate":"2023-01-22"},{"lineNumber":73,"author":{"gitId":"darrenangwx"},"content":"        case \"mark\":","lastModifiedDate":"2023-01-22"},{"lineNumber":74,"author":{"gitId":"darrenangwx"},"content":"            markUnmarkTask(listOfTasks, userInputSplit, \"mark\");","lastModifiedDate":"2023-02-05"},{"lineNumber":75,"author":{"gitId":"darrenangwx"},"content":"            break;","lastModifiedDate":"2023-01-22"},{"lineNumber":76,"author":{"gitId":"darrenangwx"},"content":"        case \"unmark\":","lastModifiedDate":"2023-01-22"},{"lineNumber":77,"author":{"gitId":"darrenangwx"},"content":"            markUnmarkTask(listOfTasks, userInputSplit, \"unmark\");","lastModifiedDate":"2023-02-05"},{"lineNumber":78,"author":{"gitId":"darrenangwx"},"content":"            break;","lastModifiedDate":"2023-01-29"},{"lineNumber":79,"author":{"gitId":"darrenangwx"},"content":"        case \"todo\":","lastModifiedDate":"2023-01-29"},{"lineNumber":80,"author":{"gitId":"darrenangwx"},"content":"            task \u003d new Todo(userInputNoCommand);","lastModifiedDate":"2023-01-29"},{"lineNumber":81,"author":{"gitId":"darrenangwx"},"content":"            if (userInputNoCommand.equals(\"\")) {","lastModifiedDate":"2023-02-05"},{"lineNumber":82,"author":{"gitId":"darrenangwx"},"content":"                throw new TodoCommandException();","lastModifiedDate":"2023-02-05"},{"lineNumber":83,"author":{"gitId":"darrenangwx"},"content":"            }","lastModifiedDate":"2023-02-05"},{"lineNumber":84,"author":{"gitId":"darrenangwx"},"content":"            addAndPrintTask(listOfTasks, task);","lastModifiedDate":"2023-01-29"},{"lineNumber":85,"author":{"gitId":"darrenangwx"},"content":"            break;","lastModifiedDate":"2023-01-22"},{"lineNumber":86,"author":{"gitId":"darrenangwx"},"content":"        case \"deadline\":","lastModifiedDate":"2023-01-29"},{"lineNumber":87,"author":{"gitId":"darrenangwx"},"content":"            String[] splitDeadline \u003d userInputNoCommand.split(\"/by\");","lastModifiedDate":"2023-01-29"},{"lineNumber":88,"author":{"gitId":"darrenangwx"},"content":"            if (userInputNoCommand.equals(\"\") || splitDeadline.length !\u003d 2) {","lastModifiedDate":"2023-02-05"},{"lineNumber":89,"author":{"gitId":"darrenangwx"},"content":"                throw new DeadlineCommandException();","lastModifiedDate":"2023-02-05"},{"lineNumber":90,"author":{"gitId":"darrenangwx"},"content":"            }","lastModifiedDate":"2023-02-05"},{"lineNumber":91,"author":{"gitId":"darrenangwx"},"content":"            task \u003d new Deadline(splitDeadline[0], splitDeadline[1]);","lastModifiedDate":"2023-01-29"},{"lineNumber":92,"author":{"gitId":"darrenangwx"},"content":"            addAndPrintTask(listOfTasks, task);","lastModifiedDate":"2023-01-29"},{"lineNumber":93,"author":{"gitId":"darrenangwx"},"content":"            break;","lastModifiedDate":"2023-01-29"},{"lineNumber":94,"author":{"gitId":"darrenangwx"},"content":"        case \"event\":","lastModifiedDate":"2023-01-29"},{"lineNumber":95,"author":{"gitId":"darrenangwx"},"content":"            String replaceSlash \u003d userInputNoCommand.replace(\"/from\", \"--from:\");","lastModifiedDate":"2023-01-29"},{"lineNumber":96,"author":{"gitId":"darrenangwx"},"content":"            replaceSlash \u003d replaceSlash.replace(\"/to\", \"to:\");","lastModifiedDate":"2023-01-29"},{"lineNumber":97,"author":{"gitId":"darrenangwx"},"content":"            String[] splitEvent \u003d replaceSlash.split(\"--\");","lastModifiedDate":"2023-01-29"},{"lineNumber":98,"author":{"gitId":"darrenangwx"},"content":"            if (userInputNoCommand.equals(\"\") || splitEvent.length !\u003d 2) {","lastModifiedDate":"2023-02-05"},{"lineNumber":99,"author":{"gitId":"darrenangwx"},"content":"                throw new EventCommandException();","lastModifiedDate":"2023-02-05"},{"lineNumber":100,"author":{"gitId":"darrenangwx"},"content":"            }","lastModifiedDate":"2023-02-05"},{"lineNumber":101,"author":{"gitId":"darrenangwx"},"content":"            task \u003d new Event(splitEvent[0], splitEvent[1]);","lastModifiedDate":"2023-01-29"},{"lineNumber":102,"author":{"gitId":"darrenangwx"},"content":"            addAndPrintTask(listOfTasks, task);","lastModifiedDate":"2023-01-29"},{"lineNumber":103,"author":{"gitId":"darrenangwx"},"content":"            break;","lastModifiedDate":"2023-01-29"},{"lineNumber":104,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":105,"author":{"gitId":"darrenangwx"},"content":"        default:","lastModifiedDate":"2023-01-22"},{"lineNumber":106,"author":{"gitId":"darrenangwx"},"content":"            System.out.println(\"OOPS!! I\u0027m sorry, but I don\u0027t know what that means. Please give me a valid command.\");","lastModifiedDate":"2023-02-05"},{"lineNumber":107,"author":{"gitId":"darrenangwx"},"content":"            System.out.println(\"List of valid commands:\");","lastModifiedDate":"2023-02-05"},{"lineNumber":108,"author":{"gitId":"darrenangwx"},"content":"            System.out.println(\"Usage: todo \u003cdescription\u003e\");","lastModifiedDate":"2023-02-05"},{"lineNumber":109,"author":{"gitId":"darrenangwx"},"content":"            System.out.println(\"Usage: mark/unmark \u003ctask number\u003e\");","lastModifiedDate":"2023-02-05"},{"lineNumber":110,"author":{"gitId":"darrenangwx"},"content":"            System.out.println(\"Usage: deadline /by \u003cspecify by when\u003e\");","lastModifiedDate":"2023-02-05"},{"lineNumber":111,"author":{"gitId":"darrenangwx"},"content":"            System.out.println(\"Usage: event /from \u003cspecify from when\u003e /to \u003cspecify to when\u003e\");","lastModifiedDate":"2023-02-05"},{"lineNumber":112,"author":{"gitId":"darrenangwx"},"content":"            break;","lastModifiedDate":"2023-01-22"},{"lineNumber":113,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":114,"author":{"gitId":"darrenangwx"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":115,"author":{"gitId":"darrenangwx"},"content":"        return true;","lastModifiedDate":"2023-01-29"},{"lineNumber":116,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":117,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":118,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":119,"author":{"gitId":"darrenangwx"},"content":"     * @param listOfTasks    An arraylist storing the list of tasks the user created.","lastModifiedDate":"2023-02-05"},{"lineNumber":120,"author":{"gitId":"darrenangwx"},"content":"     * @param userInputSplit An array storing the user input but split by \" \".","lastModifiedDate":"2023-02-05"},{"lineNumber":121,"author":{"gitId":"darrenangwx"},"content":"     * @param markOrUnmark   A String variable telling the method whether the task is to be marked or unmarked.","lastModifiedDate":"2023-02-05"},{"lineNumber":122,"author":{"gitId":"darrenangwx"},"content":"     * @throws MarkUnmarkCommandException     if the user gave an invalid task number not in the list, this exception will be thrown.","lastModifiedDate":"2023-02-05"},{"lineNumber":123,"author":{"gitId":"darrenangwx"},"content":"     * @throws ArrayIndexOutOfBoundsException if the user gave an empty number, this exception will be thrown.","lastModifiedDate":"2023-02-05"},{"lineNumber":124,"author":{"gitId":"darrenangwx"},"content":"     * @throws NumberFormatException          if the user gave something that is not an integer, this exception will be thrown.","lastModifiedDate":"2023-02-05"},{"lineNumber":125,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":126,"author":{"gitId":"darrenangwx"},"content":"    private static void markUnmarkTask(ArrayList\u003cTask\u003e listOfTasks, String[] userInputSplit, String markOrUnmark)","lastModifiedDate":"2023-02-05"},{"lineNumber":127,"author":{"gitId":"darrenangwx"},"content":"            throws MarkUnmarkCommandException {","lastModifiedDate":"2023-02-05"},{"lineNumber":128,"author":{"gitId":"darrenangwx"},"content":"        Task task;","lastModifiedDate":"2023-02-05"},{"lineNumber":129,"author":{"gitId":"darrenangwx"},"content":"        int selectedTask;","lastModifiedDate":"2023-02-05"},{"lineNumber":130,"author":{"gitId":"darrenangwx"},"content":"        try {","lastModifiedDate":"2023-02-05"},{"lineNumber":131,"author":{"gitId":"darrenangwx"},"content":"            selectedTask \u003d Integer.parseInt(userInputSplit[1]) - 1;","lastModifiedDate":"2023-02-05"},{"lineNumber":132,"author":{"gitId":"darrenangwx"},"content":"        } catch (ArrayIndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2023-02-05"},{"lineNumber":133,"author":{"gitId":"darrenangwx"},"content":"            System.out.println(\"Please give a valid number from the list!\");","lastModifiedDate":"2023-02-05"},{"lineNumber":134,"author":{"gitId":"darrenangwx"},"content":"            System.out.println(\"Usage: mark/unmark \u003ctask number\u003e\");","lastModifiedDate":"2023-02-05"},{"lineNumber":135,"author":{"gitId":"darrenangwx"},"content":"            return;","lastModifiedDate":"2023-02-05"},{"lineNumber":136,"author":{"gitId":"darrenangwx"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":137,"author":{"gitId":"darrenangwx"},"content":"        if (selectedTask \u003c 0 || selectedTask \u003e\u003d listOfTasks.size()) {","lastModifiedDate":"2023-02-05"},{"lineNumber":138,"author":{"gitId":"darrenangwx"},"content":"            throw new MarkUnmarkCommandException();","lastModifiedDate":"2023-02-05"},{"lineNumber":139,"author":{"gitId":"darrenangwx"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":140,"author":{"gitId":"darrenangwx"},"content":"        task \u003d listOfTasks.get(selectedTask);","lastModifiedDate":"2023-02-05"},{"lineNumber":141,"author":{"gitId":"darrenangwx"},"content":"        if (markOrUnmark.equals(\"mark\")) {","lastModifiedDate":"2023-02-05"},{"lineNumber":142,"author":{"gitId":"darrenangwx"},"content":"            task.markAsDone();","lastModifiedDate":"2023-02-05"},{"lineNumber":143,"author":{"gitId":"darrenangwx"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-02-05"},{"lineNumber":144,"author":{"gitId":"darrenangwx"},"content":"            System.out.println(task);","lastModifiedDate":"2023-02-05"},{"lineNumber":145,"author":{"gitId":"darrenangwx"},"content":"        } else {","lastModifiedDate":"2023-02-05"},{"lineNumber":146,"author":{"gitId":"darrenangwx"},"content":"            task.markAsUndone();","lastModifiedDate":"2023-02-05"},{"lineNumber":147,"author":{"gitId":"darrenangwx"},"content":"            System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-02-05"},{"lineNumber":148,"author":{"gitId":"darrenangwx"},"content":"            System.out.println(task);","lastModifiedDate":"2023-02-05"},{"lineNumber":149,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":150,"author":{"gitId":"darrenangwx"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":151,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":152,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":153,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":154,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":155,"author":{"gitId":"darrenangwx"},"content":"     * Add user task to an ArrayList and print out the task added.","lastModifiedDate":"2023-02-05"},{"lineNumber":156,"author":{"gitId":"darrenangwx"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":157,"author":{"gitId":"darrenangwx"},"content":"     * @param listOfTasks An arraylist storing the list of tasks the user created.","lastModifiedDate":"2023-01-29"},{"lineNumber":158,"author":{"gitId":"darrenangwx"},"content":"     * @param task        Store the type of task the user ask to create.","lastModifiedDate":"2023-01-29"},{"lineNumber":159,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":160,"author":{"gitId":"darrenangwx"},"content":"    private static void addAndPrintTask(ArrayList\u003cTask\u003e listOfTasks, Task task) {","lastModifiedDate":"2023-01-29"},{"lineNumber":161,"author":{"gitId":"darrenangwx"},"content":"        listOfTasks.add(task);","lastModifiedDate":"2023-01-29"},{"lineNumber":162,"author":{"gitId":"darrenangwx"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-29"},{"lineNumber":163,"author":{"gitId":"darrenangwx"},"content":"        System.out.println(task);","lastModifiedDate":"2023-01-29"},{"lineNumber":164,"author":{"gitId":"darrenangwx"},"content":"        System.out.println(\"Now you have \" + listOfTasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":166,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":167,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":168,"author":{"gitId":"darrenangwx"},"content":"     * Print out the logo of the cmd application.","lastModifiedDate":"2023-01-29"},{"lineNumber":169,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":170,"author":{"gitId":"darrenangwx"},"content":"    private static void printBanner() {","lastModifiedDate":"2023-01-29"},{"lineNumber":171,"author":{"gitId":"darrenangwx"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-01-29"},{"lineNumber":172,"author":{"gitId":"darrenangwx"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-01-29"},{"lineNumber":173,"author":{"gitId":"darrenangwx"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-01-29"},{"lineNumber":174,"author":{"gitId":"darrenangwx"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-01-29"},{"lineNumber":175,"author":{"gitId":"darrenangwx"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-01-29"},{"lineNumber":176,"author":{"gitId":"darrenangwx"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2023-01-29"},{"lineNumber":177,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":178,"author":{"gitId":"darrenangwx"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");","lastModifiedDate":"2023-01-29"},{"lineNumber":179,"author":{"gitId":"darrenangwx"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-01-29"},{"lineNumber":180,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":181,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":182,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"darrenangwx":179,"-":4}},{"path":"src/main/java/exceptions/DeadlineCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenangwx"},"content":"package exceptions;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"darrenangwx"},"content":"public class DeadlineCommandException extends Exception {","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"darrenangwx"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"darrenangwx":4}},{"path":"src/main/java/exceptions/EventCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenangwx"},"content":"package exceptions;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"darrenangwx"},"content":"public class EventCommandException extends Exception {","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"darrenangwx"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"darrenangwx":4}},{"path":"src/main/java/exceptions/MarkUnmarkCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenangwx"},"content":"package exceptions;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"darrenangwx"},"content":"public class MarkUnmarkCommandException extends Exception {","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"darrenangwx"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"darrenangwx":4}},{"path":"src/main/java/exceptions/TodoCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenangwx"},"content":"package exceptions;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"darrenangwx"},"content":"public class TodoCommandException extends Exception {","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"darrenangwx"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"darrenangwx":4}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenangwx"},"content":"package task;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"darrenangwx"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"darrenangwx"},"content":"    private String by;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"darrenangwx"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"darrenangwx"},"content":"        super(description);","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"darrenangwx"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"darrenangwx"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"darrenangwx"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"darrenangwx"},"content":"        return \"[D]\" + super.toString() + \"(by:\" + by + \")\";","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"darrenangwx"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"darrenangwx":15}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenangwx"},"content":"package task;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"darrenangwx"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"darrenangwx"},"content":"    private String time;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"darrenangwx"},"content":"    public Event(String description, String time) {","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"darrenangwx"},"content":"        super(description);","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"darrenangwx"},"content":"        this.time \u003d time;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"darrenangwx"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"darrenangwx"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"darrenangwx"},"content":"        return \"[E]\" + super.toString() + \"(\" + time + \")\";","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"darrenangwx"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"darrenangwx":15}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenangwx"},"content":"package task;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"darrenangwx"},"content":"public class Task {","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"darrenangwx"},"content":"    protected String description;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"darrenangwx"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"darrenangwx"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"darrenangwx"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"darrenangwx"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"darrenangwx"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"darrenangwx"},"content":"        return description;","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"darrenangwx"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"darrenangwx"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"darrenangwx"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"darrenangwx"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"darrenangwx"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"darrenangwx"},"content":"        isDone \u003d done;","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"darrenangwx"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"darrenangwx"},"content":"        setDone(true);","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"darrenangwx"},"content":"        setDescription(description.replace(\"[ ]\", \"[X]\"));","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"darrenangwx"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"darrenangwx"},"content":"        setDone(false);","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"darrenangwx"},"content":"        setDescription(description.replace(\"[X]\", \"[ ]\"));","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"darrenangwx"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"darrenangwx"},"content":"        return \"[\" + getStatusIcon() + \"]\" + description;","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"darrenangwx"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"darrenangwx":41}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenangwx"},"content":"package task;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"darrenangwx"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"darrenangwx"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"darrenangwx"},"content":"        super(description);","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"darrenangwx"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"darrenangwx"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"darrenangwx"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"darrenangwx"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"darrenangwx":14}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"darrenangwx"},"content":"todo borrow book","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"darrenangwx"},"content":"deadline return book /by June 6th","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"darrenangwx"},"content":"event project meeting /from Aug 6th /to 4pm","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"darrenangwx"},"content":"todo join sports club","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"darrenangwx"},"content":"todo read book","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"darrenangwx"},"content":"list","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"darrenangwx"},"content":"mark 2","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"darrenangwx"},"content":"mark 1","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"darrenangwx"},"content":"mark 4","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"darrenangwx"},"content":"list","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"darrenangwx"},"content":"unmark 2","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"darrenangwx"},"content":"list","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"darrenangwx"},"content":"mark 20","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"darrenangwx"},"content":"mark -1","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"darrenangwx"},"content":"mark w","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"darrenangwx"},"content":"unmark 20","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"darrenangwx"},"content":"unmark -1","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"darrenangwx"},"content":"unmark w","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"darrenangwx"},"content":"deadline","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"darrenangwx"},"content":"todo","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"darrenangwx"},"content":"deadline return book by June 6th","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"darrenangwx"},"content":"event project meeting from Aug 6th /to 4pm","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"darrenangwx"},"content":"list","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"darrenangwx"},"content":"bye","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"darrenangwx":24}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"darrenangwx"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\exceptions\\*.java ..\\src\\main\\java\\task\\*.java","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"darrenangwx"},"content":"java -classpath ..\\bin\\ duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"darrenangwx":2,"-":19}}]
