[{"path":"data/tasklist.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"darrenangwx"},"content":"T|0| play game ","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"darrenangwx"},"content":"E|0| attend Open House |from: 3rd March 10am to: 4th March 4pm","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"darrenangwx":2}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"darrenangwx"},"content":"Duke is a Command Line Interface (CLI) application that allows you to keep track of your tasks!","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"darrenangwx"},"content":"If you can type fast, this is the perfect application for you.","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"darrenangwx"},"content":"### Adding a todo","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"darrenangwx"},"content":"Add a todo task to the list.","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"darrenangwx"},"content":"### Adding a deadline","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"darrenangwx"},"content":"Adds a deadline to the list.","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"darrenangwx"},"content":"### Adding a event","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"darrenangwx"},"content":"Adds a event task to the list.","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"darrenangwx"},"content":"### Mark a task","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"darrenangwx"},"content":"Mark a task on the list as done.","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":18,"author":{"gitId":"darrenangwx"},"content":"### Unmark a task","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"darrenangwx"},"content":"Mark a done task as not done.","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":21,"author":{"gitId":"darrenangwx"},"content":"### List all the task","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"darrenangwx"},"content":"List all the task in the list.","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":24,"author":{"gitId":"darrenangwx"},"content":"### Find task","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"darrenangwx"},"content":"Find a task in the list.","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"darrenangwx"},"content":"### Delete a task","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"darrenangwx"},"content":"Delete a task in the list.","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"darrenangwx"},"content":"### Exits application","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"darrenangwx"},"content":"Exits the CLI application.","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"darrenangwx"},"content":"### Saving data to a file","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"darrenangwx"},"content":"List of Tasks created is saved to a file.","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":38,"author":{"gitId":"darrenangwx"},"content":"### `todo` - Add a todo task","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"darrenangwx"},"content":"Adds a todo task to the list.","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"darrenangwx"},"content":"Format: ","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"darrenangwx"},"content":"`todo \u003cdescription\u003e`","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"darrenangwx"},"content":"`todo play a game`","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"darrenangwx"},"content":"Expected outcome:","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":52,"author":{"gitId":"darrenangwx"},"content":"Duke will tell you that the task has been added and marked it with `T`.","lastModifiedDate":"2023-02-28"},{"lineNumber":53,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":54,"author":{"gitId":"darrenangwx"},"content":"```","lastModifiedDate":"2023-02-28"},{"lineNumber":55,"author":{"gitId":"darrenangwx"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-02-28"},{"lineNumber":56,"author":{"gitId":"darrenangwx"},"content":"[T][ ] play a game","lastModifiedDate":"2023-02-28"},{"lineNumber":57,"author":{"gitId":"darrenangwx"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2023-02-28"},{"lineNumber":58,"author":{"gitId":"darrenangwx"},"content":"```","lastModifiedDate":"2023-02-28"},{"lineNumber":59,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":60,"author":{"gitId":"darrenangwx"},"content":"### `deadline` - Add a deadline task","lastModifiedDate":"2023-02-28"},{"lineNumber":61,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":62,"author":{"gitId":"darrenangwx"},"content":"Adds a deadline task to the list.","lastModifiedDate":"2023-02-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":64,"author":{"gitId":"darrenangwx"},"content":"Format:","lastModifiedDate":"2023-02-28"},{"lineNumber":65,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":66,"author":{"gitId":"darrenangwx"},"content":"`deadline \u003cdescription\u003e /by \u003cspecify by when\u003e`","lastModifiedDate":"2023-02-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":70,"author":{"gitId":"darrenangwx"},"content":"`deadline finish math homework /by 1st March`","lastModifiedDate":"2023-02-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":74,"author":{"gitId":"darrenangwx"},"content":"Duke will tell you that the task has been added and marked it with `D`.","lastModifiedDate":"2023-02-28"},{"lineNumber":75,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":76,"author":{"gitId":"darrenangwx"},"content":"```","lastModifiedDate":"2023-02-28"},{"lineNumber":77,"author":{"gitId":"darrenangwx"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-02-28"},{"lineNumber":78,"author":{"gitId":"darrenangwx"},"content":"[D][ ] finish math homework (by: 1st March)","lastModifiedDate":"2023-02-28"},{"lineNumber":79,"author":{"gitId":"darrenangwx"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2023-02-28"},{"lineNumber":80,"author":{"gitId":"darrenangwx"},"content":"```","lastModifiedDate":"2023-02-28"},{"lineNumber":81,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":82,"author":{"gitId":"darrenangwx"},"content":"### `event` - Add a event task","lastModifiedDate":"2023-02-28"},{"lineNumber":83,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":84,"author":{"gitId":"darrenangwx"},"content":"Adds a event task to the list.","lastModifiedDate":"2023-02-28"},{"lineNumber":85,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":86,"author":{"gitId":"darrenangwx"},"content":"Format:","lastModifiedDate":"2023-02-28"},{"lineNumber":87,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":88,"author":{"gitId":"darrenangwx"},"content":"`event \u003cdescription\u003e /from \u003cspecify from when\u003e /to \u003cspecify to when\u003e`","lastModifiedDate":"2023-02-28"},{"lineNumber":89,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":90,"author":{"gitId":"darrenangwx"},"content":"Example of usage:","lastModifiedDate":"2023-02-28"},{"lineNumber":91,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":92,"author":{"gitId":"darrenangwx"},"content":"`event attend Open House /from 3rd March 10am /to 4th March 4pm`","lastModifiedDate":"2023-02-28"},{"lineNumber":93,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":94,"author":{"gitId":"darrenangwx"},"content":"Expected outcome:","lastModifiedDate":"2023-02-28"},{"lineNumber":95,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":96,"author":{"gitId":"darrenangwx"},"content":"Duke will tell you that the task has been added and marked it with `E`.","lastModifiedDate":"2023-02-28"},{"lineNumber":97,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":98,"author":{"gitId":"darrenangwx"},"content":"```","lastModifiedDate":"2023-02-28"},{"lineNumber":99,"author":{"gitId":"darrenangwx"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-02-28"},{"lineNumber":100,"author":{"gitId":"darrenangwx"},"content":"[E][ ] attend Open House (from: 3rd March 10am to: 4th March 4pm)","lastModifiedDate":"2023-02-28"},{"lineNumber":101,"author":{"gitId":"darrenangwx"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2023-02-28"},{"lineNumber":102,"author":{"gitId":"darrenangwx"},"content":"```","lastModifiedDate":"2023-02-28"},{"lineNumber":103,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":104,"author":{"gitId":"darrenangwx"},"content":"### `mark` - mark a task","lastModifiedDate":"2023-02-28"},{"lineNumber":105,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":106,"author":{"gitId":"darrenangwx"},"content":"Mark a task as done.","lastModifiedDate":"2023-02-28"},{"lineNumber":107,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":108,"author":{"gitId":"darrenangwx"},"content":"Format:","lastModifiedDate":"2023-02-28"},{"lineNumber":109,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":110,"author":{"gitId":"darrenangwx"},"content":"`mark \u003ctask number\u003e`","lastModifiedDate":"2023-02-28"},{"lineNumber":111,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":112,"author":{"gitId":"darrenangwx"},"content":"Example of usage:","lastModifiedDate":"2023-02-28"},{"lineNumber":113,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":114,"author":{"gitId":"darrenangwx"},"content":"`mark 1`","lastModifiedDate":"2023-02-28"},{"lineNumber":115,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":116,"author":{"gitId":"darrenangwx"},"content":"Expected outcome:","lastModifiedDate":"2023-02-28"},{"lineNumber":117,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":118,"author":{"gitId":"darrenangwx"},"content":"Duke will mark the task as done and mark the 2nd `[ ]` with `X`.","lastModifiedDate":"2023-02-28"},{"lineNumber":119,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":120,"author":{"gitId":"darrenangwx"},"content":"```","lastModifiedDate":"2023-02-28"},{"lineNumber":121,"author":{"gitId":"darrenangwx"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2023-02-28"},{"lineNumber":122,"author":{"gitId":"darrenangwx"},"content":"[T][X] play a game","lastModifiedDate":"2023-02-28"},{"lineNumber":123,"author":{"gitId":"darrenangwx"},"content":"```","lastModifiedDate":"2023-02-28"},{"lineNumber":124,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":125,"author":{"gitId":"darrenangwx"},"content":"### `unmark` - unmark a task","lastModifiedDate":"2023-02-28"},{"lineNumber":126,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":127,"author":{"gitId":"darrenangwx"},"content":"unmark a marked task.","lastModifiedDate":"2023-02-28"},{"lineNumber":128,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":129,"author":{"gitId":"darrenangwx"},"content":"Format:","lastModifiedDate":"2023-02-28"},{"lineNumber":130,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":131,"author":{"gitId":"darrenangwx"},"content":"`unmark \u003ctask number\u003e`","lastModifiedDate":"2023-02-28"},{"lineNumber":132,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":133,"author":{"gitId":"darrenangwx"},"content":"Example of usage:","lastModifiedDate":"2023-02-28"},{"lineNumber":134,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":135,"author":{"gitId":"darrenangwx"},"content":"`unmark 1`","lastModifiedDate":"2023-02-28"},{"lineNumber":136,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":137,"author":{"gitId":"darrenangwx"},"content":"Expected outcome:","lastModifiedDate":"2023-02-28"},{"lineNumber":138,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":139,"author":{"gitId":"darrenangwx"},"content":"Duke will unmark the task as done and remove the `X` from the 2nd `[ ]`.","lastModifiedDate":"2023-02-28"},{"lineNumber":140,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":141,"author":{"gitId":"darrenangwx"},"content":"```","lastModifiedDate":"2023-02-28"},{"lineNumber":142,"author":{"gitId":"darrenangwx"},"content":"OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2023-02-28"},{"lineNumber":143,"author":{"gitId":"darrenangwx"},"content":"[T][ ] play a game","lastModifiedDate":"2023-02-28"},{"lineNumber":144,"author":{"gitId":"darrenangwx"},"content":"```","lastModifiedDate":"2023-02-28"},{"lineNumber":145,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":146,"author":{"gitId":"darrenangwx"},"content":"### `list` - list all the task","lastModifiedDate":"2023-02-28"},{"lineNumber":147,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":148,"author":{"gitId":"darrenangwx"},"content":"List all the task currently in the list.","lastModifiedDate":"2023-02-28"},{"lineNumber":149,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":150,"author":{"gitId":"darrenangwx"},"content":"Format:","lastModifiedDate":"2023-02-28"},{"lineNumber":151,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":152,"author":{"gitId":"darrenangwx"},"content":"`list`","lastModifiedDate":"2023-02-28"},{"lineNumber":153,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":154,"author":{"gitId":"darrenangwx"},"content":"Example of usage:","lastModifiedDate":"2023-02-28"},{"lineNumber":155,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":156,"author":{"gitId":"darrenangwx"},"content":"`list`","lastModifiedDate":"2023-02-28"},{"lineNumber":157,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":158,"author":{"gitId":"darrenangwx"},"content":"Expected outcome:","lastModifiedDate":"2023-02-28"},{"lineNumber":159,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":160,"author":{"gitId":"darrenangwx"},"content":"Duke will list all the task in the list.","lastModifiedDate":"2023-02-28"},{"lineNumber":161,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":162,"author":{"gitId":"darrenangwx"},"content":"```","lastModifiedDate":"2023-02-28"},{"lineNumber":163,"author":{"gitId":"darrenangwx"},"content":"Here are the tasks in your list:","lastModifiedDate":"2023-02-28"},{"lineNumber":164,"author":{"gitId":"darrenangwx"},"content":"1.[T][ ] play a game","lastModifiedDate":"2023-02-28"},{"lineNumber":165,"author":{"gitId":"darrenangwx"},"content":"2.[D][ ] finish math homework (by: 1st March)","lastModifiedDate":"2023-02-28"},{"lineNumber":166,"author":{"gitId":"darrenangwx"},"content":"3.[E][ ] attend Open House (from: 3rd March 10am to: 4th March 4pm)","lastModifiedDate":"2023-02-28"},{"lineNumber":167,"author":{"gitId":"darrenangwx"},"content":"```","lastModifiedDate":"2023-02-28"},{"lineNumber":168,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":169,"author":{"gitId":"darrenangwx"},"content":"### `find` - find the tasks","lastModifiedDate":"2023-02-28"},{"lineNumber":170,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":171,"author":{"gitId":"darrenangwx"},"content":"Find the task in the list.","lastModifiedDate":"2023-02-28"},{"lineNumber":172,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":173,"author":{"gitId":"darrenangwx"},"content":"Format:","lastModifiedDate":"2023-02-28"},{"lineNumber":174,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":175,"author":{"gitId":"darrenangwx"},"content":"`find \u003ckeyword\u003e`","lastModifiedDate":"2023-02-28"},{"lineNumber":176,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":177,"author":{"gitId":"darrenangwx"},"content":"Example of usage:","lastModifiedDate":"2023-02-28"},{"lineNumber":178,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":179,"author":{"gitId":"darrenangwx"},"content":"`find Open House`","lastModifiedDate":"2023-02-28"},{"lineNumber":180,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":181,"author":{"gitId":"darrenangwx"},"content":"Expected outcome:","lastModifiedDate":"2023-02-28"},{"lineNumber":182,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":183,"author":{"gitId":"darrenangwx"},"content":"Duke will iterate through the list to find all the task matching the keyword.","lastModifiedDate":"2023-02-28"},{"lineNumber":184,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":185,"author":{"gitId":"darrenangwx"},"content":"```","lastModifiedDate":"2023-02-28"},{"lineNumber":186,"author":{"gitId":"darrenangwx"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2023-02-28"},{"lineNumber":187,"author":{"gitId":"darrenangwx"},"content":"3.[E][ ] attend Open House (from: 3rd March 10am to: 4th March 4pm)","lastModifiedDate":"2023-02-28"},{"lineNumber":188,"author":{"gitId":"darrenangwx"},"content":"```","lastModifiedDate":"2023-02-28"},{"lineNumber":189,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":190,"author":{"gitId":"darrenangwx"},"content":"### `delete` - delete a task","lastModifiedDate":"2023-02-28"},{"lineNumber":191,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":192,"author":{"gitId":"darrenangwx"},"content":"Delete a task from the list.","lastModifiedDate":"2023-02-28"},{"lineNumber":193,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":194,"author":{"gitId":"darrenangwx"},"content":"Format:","lastModifiedDate":"2023-02-28"},{"lineNumber":195,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":196,"author":{"gitId":"darrenangwx"},"content":"`delete \u003cinteger\u003e`","lastModifiedDate":"2023-02-28"},{"lineNumber":197,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":198,"author":{"gitId":"darrenangwx"},"content":"Example of usage:","lastModifiedDate":"2023-02-28"},{"lineNumber":199,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":200,"author":{"gitId":"darrenangwx"},"content":"`delete 2`","lastModifiedDate":"2023-02-28"},{"lineNumber":201,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":202,"author":{"gitId":"darrenangwx"},"content":"Expected outcome:","lastModifiedDate":"2023-02-28"},{"lineNumber":203,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":204,"author":{"gitId":"darrenangwx"},"content":"Duke will delete the task based on the index specified and remove it from the list. It will also inform you what task was deleted.","lastModifiedDate":"2023-02-28"},{"lineNumber":205,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":206,"author":{"gitId":"darrenangwx"},"content":"```","lastModifiedDate":"2023-02-28"},{"lineNumber":207,"author":{"gitId":"darrenangwx"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2023-02-28"},{"lineNumber":208,"author":{"gitId":"darrenangwx"},"content":"[D][ ] finish math homework (by: 1st March)","lastModifiedDate":"2023-02-28"},{"lineNumber":209,"author":{"gitId":"darrenangwx"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2023-02-28"},{"lineNumber":210,"author":{"gitId":"darrenangwx"},"content":"```","lastModifiedDate":"2023-02-28"},{"lineNumber":211,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":212,"author":{"gitId":"darrenangwx"},"content":"### `bye` - Exit the program","lastModifiedDate":"2023-02-28"},{"lineNumber":213,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":214,"author":{"gitId":"darrenangwx"},"content":"Exit out of the program.","lastModifiedDate":"2023-02-28"},{"lineNumber":215,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":216,"author":{"gitId":"darrenangwx"},"content":"Format:","lastModifiedDate":"2023-02-28"},{"lineNumber":217,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":218,"author":{"gitId":"darrenangwx"},"content":"`bye`","lastModifiedDate":"2023-02-28"},{"lineNumber":219,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":220,"author":{"gitId":"darrenangwx"},"content":"Example of usage:","lastModifiedDate":"2023-02-28"},{"lineNumber":221,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":222,"author":{"gitId":"darrenangwx"},"content":"`bye`","lastModifiedDate":"2023-02-28"},{"lineNumber":223,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":224,"author":{"gitId":"darrenangwx"},"content":"Expected outcome:","lastModifiedDate":"2023-02-28"},{"lineNumber":225,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":226,"author":{"gitId":"darrenangwx"},"content":"Duke terminate itself.","lastModifiedDate":"2023-02-28"},{"lineNumber":227,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":228,"author":{"gitId":"darrenangwx"},"content":"```","lastModifiedDate":"2023-02-28"},{"lineNumber":229,"author":{"gitId":"darrenangwx"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2023-02-28"},{"lineNumber":230,"author":{"gitId":"darrenangwx"},"content":"```","lastModifiedDate":"2023-02-28"},{"lineNumber":231,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":232,"author":{"gitId":"darrenangwx"},"content":"## Saving data to a file","lastModifiedDate":"2023-02-28"},{"lineNumber":233,"author":{"gitId":"darrenangwx"},"content":"Duke will save all the tasks in the list into a file everytime a command ","lastModifiedDate":"2023-02-28"},{"lineNumber":234,"author":{"gitId":"darrenangwx"},"content":"modifying the list is executed. The data will be reloaded into the program when","lastModifiedDate":"2023-02-28"},{"lineNumber":235,"author":{"gitId":"darrenangwx"},"content":"Duke is started up again.","lastModifiedDate":"2023-02-28"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":237,"author":{"gitId":"darrenangwx"},"content":"The data is stored under `data/tasklist.txt`  ","lastModifiedDate":"2023-02-28"},{"lineNumber":238,"author":{"gitId":"darrenangwx"},"content":"The data is stored in the following format:","lastModifiedDate":"2023-02-28"},{"lineNumber":239,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":240,"author":{"gitId":"darrenangwx"},"content":"T|0| play game ","lastModifiedDate":"2023-02-28"},{"lineNumber":241,"author":{"gitId":"darrenangwx"},"content":"E|0| attend Open House |from: 3rd March 10am to: 4th March 4pm","lastModifiedDate":"2023-02-28"},{"lineNumber":242,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"darrenangwx":216,"-":26}},{"path":"src/main/java/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenangwx"},"content":"package commands;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"darrenangwx"},"content":"import storage.Storage;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"darrenangwx"},"content":"import task.TaskParser;","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"darrenangwx"},"content":"import ui.TextUi;","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"darrenangwx"},"content":"/**","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"darrenangwx"},"content":" * A abstract Command class to handle user commands","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"darrenangwx"},"content":" */","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"darrenangwx"},"content":"public abstract class Command {","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"darrenangwx"},"content":"     * Executes the command the user provided.","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"darrenangwx"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"darrenangwx"},"content":"     * @param taskParser The task parser that Duke use to determine what task to execute.","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"darrenangwx"},"content":"     * @param ui         The Ui instance. Use to display messages to users.","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"darrenangwx"},"content":"     * @param storage    The storage instance. Use to write data into the text file.","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"darrenangwx"},"content":"    public abstract void execute(TaskParser taskParser, TextUi ui, Storage storage);","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"darrenangwx"},"content":"     * Check if the program is exiting.","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"darrenangwx"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"darrenangwx"},"content":"     * @return the exit value.","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"darrenangwx"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"darrenangwx"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"darrenangwx":26}},{"path":"src/main/java/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenangwx"},"content":"package commands;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"darrenangwx"},"content":"import storage.Storage;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"darrenangwx"},"content":"import task.Deadline;","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"darrenangwx"},"content":"import task.TaskParser;","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"darrenangwx"},"content":"import ui.TextUi;","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"darrenangwx"},"content":"/**","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"darrenangwx"},"content":" * Handles the deadline command.","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"darrenangwx"},"content":" */","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"darrenangwx"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"darrenangwx"},"content":"    public static final String COMMAND_WORD \u003d \"deadline\";","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"darrenangwx"},"content":"    private String description;","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"darrenangwx"},"content":"    private String by;","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"darrenangwx"},"content":"     * A constructor that accepts the description and /by deadline specified by the user.","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"darrenangwx"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"darrenangwx"},"content":"     * @param description The description of the deadline.","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"darrenangwx"},"content":"     * @param by          The date of the deadline.","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"darrenangwx"},"content":"    public DeadlineCommand(String description, String by) {","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"darrenangwx"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"darrenangwx"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"darrenangwx"},"content":"     * Executes the command the user provided.","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"darrenangwx"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"darrenangwx"},"content":"     * @param taskParser The task parser that Duke use to determine what task to execute.","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"darrenangwx"},"content":"     * @param ui         The Ui instance. Use to display messages to users.","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"darrenangwx"},"content":"     * @param storage    The storage instance. Use to write data into the text file.","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"darrenangwx"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"darrenangwx"},"content":"    public void execute(TaskParser taskParser, TextUi ui, Storage storage) {","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"darrenangwx"},"content":"        Deadline deadline \u003d taskParser.createDeadlineTask(description, by);","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"darrenangwx"},"content":"        taskParser.addAndPrintTask(deadline, ui, storage);","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"darrenangwx"},"content":"     * Check if the program is exiting.","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"darrenangwx"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"darrenangwx"},"content":"     * @return the exit value.","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"darrenangwx"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"darrenangwx"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"darrenangwx"},"content":"        return false;","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"darrenangwx"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"darrenangwx":50}},{"path":"src/main/java/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenangwx"},"content":"package commands;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"darrenangwx"},"content":"import storage.Storage;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"darrenangwx"},"content":"import task.TaskParser;","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"darrenangwx"},"content":"import ui.TextUi;","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"darrenangwx"},"content":"/**","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"darrenangwx"},"content":" * Handles the delete command.","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"darrenangwx"},"content":" */","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"darrenangwx"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"darrenangwx"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"darrenangwx"},"content":"    private int taskNumberInList;","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"darrenangwx"},"content":"     * A constructor that accepts the task number specified by the user.","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"darrenangwx"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"darrenangwx"},"content":"     * @param taskNumberInList The task number specified.","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"darrenangwx"},"content":"    public DeleteCommand(int taskNumberInList) {","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"darrenangwx"},"content":"        this.taskNumberInList \u003d taskNumberInList;","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"darrenangwx"},"content":"     * Executes the command the user provided.","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"darrenangwx"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"darrenangwx"},"content":"     * @param taskParser The task parser that Duke use to determine what task to execute.","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"darrenangwx"},"content":"     * @param ui         The Ui instance. Use to display messages to users.","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"darrenangwx"},"content":"     * @param storage    The storage instance. Use to write data into the text file.","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"darrenangwx"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"darrenangwx"},"content":"    public void execute(TaskParser taskParser, TextUi ui, Storage storage) {","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"darrenangwx"},"content":"        taskParser.deleteAndPrintTask(ui, storage, taskNumberInList);","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"darrenangwx"},"content":"     * Check if the program is exiting.","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"darrenangwx"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"darrenangwx"},"content":"     * @return the exit value.","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"darrenangwx"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"darrenangwx"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"darrenangwx"},"content":"        return false;","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"darrenangwx"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"darrenangwx":44}},{"path":"src/main/java/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenangwx"},"content":"package commands;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"darrenangwx"},"content":"import storage.Storage;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"darrenangwx"},"content":"import task.Event;","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"darrenangwx"},"content":"import task.TaskParser;","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"darrenangwx"},"content":"import ui.TextUi;","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"darrenangwx"},"content":"/**","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"darrenangwx"},"content":" * Handles the event command.","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"darrenangwx"},"content":" */","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"darrenangwx"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"darrenangwx"},"content":"    public static final String COMMAND_WORD \u003d \"event\";","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"darrenangwx"},"content":"    private String description;","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"darrenangwx"},"content":"    private String time;","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"darrenangwx"},"content":"     * A constructor that accepts the description and the /to and /from time specified by the user.","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"darrenangwx"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"darrenangwx"},"content":"     * @param description The description of the deadline.","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"darrenangwx"},"content":"     * @param time        the /to and /from of the event.","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"darrenangwx"},"content":"    public EventCommand(String description, String time) {","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"darrenangwx"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"darrenangwx"},"content":"        this.time \u003d time;","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"darrenangwx"},"content":"     * Executes the command the user provided.","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"darrenangwx"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"darrenangwx"},"content":"     * @param taskParser The task parser that Duke use to determine what task to execute.","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"darrenangwx"},"content":"     * @param ui         The Ui instance. Use to display messages to users.","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"darrenangwx"},"content":"     * @param storage    The storage instance. Use to write data into the text file.","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"darrenangwx"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"darrenangwx"},"content":"    public void execute(TaskParser taskParser, TextUi ui, Storage storage) {","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"darrenangwx"},"content":"        Event event \u003d taskParser.createEventTask(description, time);","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"darrenangwx"},"content":"        taskParser.addAndPrintTask(event, ui, storage);","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"darrenangwx"},"content":"     * Check if the program is exiting.","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"darrenangwx"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"darrenangwx"},"content":"     * @return the exit value.","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"darrenangwx"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"darrenangwx"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"darrenangwx"},"content":"        return false;","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"darrenangwx"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"darrenangwx":49}},{"path":"src/main/java/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenangwx"},"content":"package commands;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"darrenangwx"},"content":"import storage.Storage;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"darrenangwx"},"content":"import task.TaskParser;","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"darrenangwx"},"content":"import ui.TextUi;","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"darrenangwx"},"content":"/**","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"darrenangwx"},"content":" * Handles the exit command.","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"darrenangwx"},"content":" */","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"darrenangwx"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"darrenangwx"},"content":"    public static final String COMMAND_WORD \u003d \"bye\";","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"darrenangwx"},"content":"    private boolean isExit;","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"darrenangwx"},"content":"     * A constructor that sets the isExit value to false.","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"darrenangwx"},"content":"    public ExitCommand() {","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"darrenangwx"},"content":"        this.isExit \u003d false;","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"darrenangwx"},"content":"     * Setter to set the isExit value.","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"darrenangwx"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"darrenangwx"},"content":"     * @param exit the exit value to set.","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"darrenangwx"},"content":"    public void setExit(boolean exit) {","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"darrenangwx"},"content":"        isExit \u003d exit;","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"darrenangwx"},"content":"     * Method to return the isExit value.","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"darrenangwx"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"darrenangwx"},"content":"     * @return the isExit value.","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"darrenangwx"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"darrenangwx"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"darrenangwx"},"content":"        return isExit;","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"darrenangwx"},"content":"     * Executes the command the user provided.","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"darrenangwx"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"darrenangwx"},"content":"     * @param taskParser The task parser that Duke use to determine what task to execute.","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"darrenangwx"},"content":"     * @param ui         The Ui instance. Use to display messages to users.","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"darrenangwx"},"content":"     * @param storage    The storage instance. Use to write data into the text file.","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"darrenangwx"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"darrenangwx"},"content":"    public void execute(TaskParser taskParser, TextUi ui, Storage storage) {","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"darrenangwx"},"content":"        setExit(true);","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"darrenangwx"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"darrenangwx":51}},{"path":"src/main/java/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenangwx"},"content":"package commands;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"darrenangwx"},"content":"import storage.Storage;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"darrenangwx"},"content":"import task.TaskParser;","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"darrenangwx"},"content":"import ui.TextUi;","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"darrenangwx"},"content":"/**","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"darrenangwx"},"content":" * Handles the find command.","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"darrenangwx"},"content":" */","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"darrenangwx"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"darrenangwx"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"darrenangwx"},"content":"    private String findKeyword;","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"darrenangwx"},"content":"     * A constructor that accepts the keyword the user specified.","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"darrenangwx"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"darrenangwx"},"content":"     * @param findKeyword The keyword the user specified.","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"darrenangwx"},"content":"    public FindCommand(String findKeyword) {","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"darrenangwx"},"content":"        this.findKeyword \u003d findKeyword;","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"darrenangwx"},"content":"     * Executes the command the user provided.","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"darrenangwx"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"darrenangwx"},"content":"     * @param taskParser The task parser that Duke use to determine what task to execute.","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"darrenangwx"},"content":"     * @param ui         The Ui instance. Use to display messages to users.","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"darrenangwx"},"content":"     * @param storage    The storage instance. Use to write data into the text file.","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"darrenangwx"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"darrenangwx"},"content":"    public void execute(TaskParser taskParser, TextUi ui, Storage storage) {","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"darrenangwx"},"content":"        taskParser.findTask(ui, findKeyword);","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"darrenangwx"},"content":"     * Check if the program is exiting.","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"darrenangwx"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"darrenangwx"},"content":"     * @return the exit value.","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"darrenangwx"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"darrenangwx"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"darrenangwx"},"content":"        return false;","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"darrenangwx"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"darrenangwx":44}},{"path":"src/main/java/commands/IncorrectCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenangwx"},"content":"package commands;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"darrenangwx"},"content":"import common.Messages;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"darrenangwx"},"content":"import storage.Storage;","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"darrenangwx"},"content":"import task.TaskParser;","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"darrenangwx"},"content":"import ui.TextUi;","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"darrenangwx"},"content":"/**","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"darrenangwx"},"content":" * Handles incorrect commands.","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"darrenangwx"},"content":" */","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"darrenangwx"},"content":"public class IncorrectCommand extends Command {","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"darrenangwx"},"content":"     * Executes the command the user provided.","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"darrenangwx"},"content":"     * Since it is not a valid command, an error message is printed instead.","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"darrenangwx"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"darrenangwx"},"content":"     * @param taskParser The task parser that Duke use to determine what task to execute.","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"darrenangwx"},"content":"     * @param ui         The Ui instance. Use to display messages to users.","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"darrenangwx"},"content":"     * @param storage    The storage instance. Use to write data into the text file.","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"darrenangwx"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"darrenangwx"},"content":"    public void execute(TaskParser taskParser, TextUi ui, Storage storage) {","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"darrenangwx"},"content":"        ui.printMessage(Messages.MESSAGE_VALID_COMMAND_LIST);","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"darrenangwx"},"content":"     * Check if the program is exiting.","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"darrenangwx"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"darrenangwx"},"content":"     * @return the exit value.","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"darrenangwx"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"darrenangwx"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"darrenangwx"},"content":"        return false;","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"darrenangwx"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"darrenangwx":34}},{"path":"src/main/java/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenangwx"},"content":"package commands;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"darrenangwx"},"content":"import storage.Storage;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"darrenangwx"},"content":"import task.TaskParser;","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"darrenangwx"},"content":"import ui.TextUi;","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"darrenangwx"},"content":"/**","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"darrenangwx"},"content":" * Handles the list command.","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"darrenangwx"},"content":" */","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"darrenangwx"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"darrenangwx"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"darrenangwx"},"content":"     * Executes the command the user provided.","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"darrenangwx"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"darrenangwx"},"content":"     * @param taskParser The task parser that Duke use to determine what task to execute.","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"darrenangwx"},"content":"     * @param ui         The Ui instance. Use to display messages to users.","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"darrenangwx"},"content":"     * @param storage    The storage instance. Use to write data into the text file.","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"darrenangwx"},"content":"    public void execute(TaskParser taskParser, TextUi ui, Storage storage) {","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"darrenangwx"},"content":"        taskParser.listTasks(ui);","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"darrenangwx"},"content":"     * Check if the program is exiting.","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"darrenangwx"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"darrenangwx"},"content":"     * @return the exit value.","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"darrenangwx"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"darrenangwx"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"darrenangwx"},"content":"        return false;","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"darrenangwx"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"darrenangwx":34}},{"path":"src/main/java/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenangwx"},"content":"package commands;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"darrenangwx"},"content":"import storage.Storage;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"darrenangwx"},"content":"import task.TaskParser;","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"darrenangwx"},"content":"import ui.TextUi;","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"darrenangwx"},"content":"/**","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"darrenangwx"},"content":" * Executes the mark command.","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"darrenangwx"},"content":" */","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"darrenangwx"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"darrenangwx"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"darrenangwx"},"content":"    private int taskNumberInList;","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"darrenangwx"},"content":"     * A constructor that accepts the task number specified by the user.","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"darrenangwx"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"darrenangwx"},"content":"     * @param taskNumberInList The task number specified.","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"darrenangwx"},"content":"    public MarkCommand(int taskNumberInList) {","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"darrenangwx"},"content":"        this.taskNumberInList \u003d taskNumberInList;","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"darrenangwx"},"content":"     * Executes the command the user provided.","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"darrenangwx"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"darrenangwx"},"content":"     * @param taskParser The task parser that Duke use to determine what task to execute.","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"darrenangwx"},"content":"     * @param ui         The Ui instance. Use to display messages to users.","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"darrenangwx"},"content":"     * @param storage    The storage instance. Use to write data into the text file.","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"darrenangwx"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"darrenangwx"},"content":"    public void execute(TaskParser taskParser, TextUi ui, Storage storage) {","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"darrenangwx"},"content":"        taskParser.markTask(ui, storage, taskNumberInList);","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"darrenangwx"},"content":"     * Check if the program is exiting.","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"darrenangwx"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"darrenangwx"},"content":"     * @return the exit value.","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"darrenangwx"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"darrenangwx"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"darrenangwx"},"content":"        return false;","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"darrenangwx"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"darrenangwx":44}},{"path":"src/main/java/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenangwx"},"content":"package commands;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"darrenangwx"},"content":"import storage.Storage;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"darrenangwx"},"content":"import task.TaskParser;","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"darrenangwx"},"content":"import task.Todo;","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"darrenangwx"},"content":"import ui.TextUi;","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"darrenangwx"},"content":"/**","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"darrenangwx"},"content":" * Handles the todo command.","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"darrenangwx"},"content":" */","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"darrenangwx"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"darrenangwx"},"content":"    public static final String COMMAND_WORD \u003d \"todo\";","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"darrenangwx"},"content":"    private String description;","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"darrenangwx"},"content":"     * A constructor that accepts the description specified by the user.","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"darrenangwx"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"darrenangwx"},"content":"     * @param description The description of the deadline.","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"darrenangwx"},"content":"    public TodoCommand(String description) {","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"darrenangwx"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"darrenangwx"},"content":"     * Executes the command the user provided.","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"darrenangwx"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"darrenangwx"},"content":"     * @param taskParser The task parser that Duke use to determine what task to execute.","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"darrenangwx"},"content":"     * @param ui         The Ui instance. Use to display messages to users.","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"darrenangwx"},"content":"     * @param storage    The storage instance. Use to write data into the text file.","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"darrenangwx"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"darrenangwx"},"content":"    public void execute(TaskParser taskParser, TextUi ui, Storage storage) {","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"darrenangwx"},"content":"        Todo todo \u003d taskParser.createTodoTask(description);","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"darrenangwx"},"content":"        taskParser.addAndPrintTask(todo, ui, storage);","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"darrenangwx"},"content":"     * Check if the program is exiting.","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"darrenangwx"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"darrenangwx"},"content":"     * @return the exit value.","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"darrenangwx"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"darrenangwx"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"darrenangwx"},"content":"        return false;","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"darrenangwx"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"darrenangwx":47}},{"path":"src/main/java/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenangwx"},"content":"package commands;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"darrenangwx"},"content":"import storage.Storage;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"darrenangwx"},"content":"import task.TaskParser;","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"darrenangwx"},"content":"import ui.TextUi;","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"darrenangwx"},"content":"/**","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"darrenangwx"},"content":" * Executes the unmark command.","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"darrenangwx"},"content":" */","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"darrenangwx"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"darrenangwx"},"content":"    public static final String COMMAND_WORD \u003d \"unmark\";","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"darrenangwx"},"content":"    private int taskNumberInList;","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"darrenangwx"},"content":"     * A constructor that accepts the task number specified by the user.","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"darrenangwx"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"darrenangwx"},"content":"     * @param taskNumberInList The task number specified.","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"darrenangwx"},"content":"    public UnmarkCommand(int taskNumberInList) {","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"darrenangwx"},"content":"        this.taskNumberInList \u003d taskNumberInList;","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"darrenangwx"},"content":"     * Executes the command the user provided.","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"darrenangwx"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"darrenangwx"},"content":"     * @param taskParser The task parser that Duke use to determine what task to execute.","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"darrenangwx"},"content":"     * @param ui         The Ui instance. Use to display messages to users.","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"darrenangwx"},"content":"     * @param storage    The storage instance. Use to write data into the text file.","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"darrenangwx"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"darrenangwx"},"content":"    public void execute(TaskParser taskParser, TextUi ui, Storage storage) {","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"darrenangwx"},"content":"        taskParser.unmarkTask(ui, storage, taskNumberInList);","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"darrenangwx"},"content":"     * Check if the program is exiting.","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"darrenangwx"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"darrenangwx"},"content":"     * @return the exit value.","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"darrenangwx"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"darrenangwx"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"darrenangwx"},"content":"        return false;","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"darrenangwx"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"darrenangwx":44}},{"path":"src/main/java/common/Messages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenangwx"},"content":"package common;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"darrenangwx"},"content":"/**","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"darrenangwx"},"content":" * A class containing the list of messages that will be shown to the user.","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"darrenangwx"},"content":" */","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"darrenangwx"},"content":"public class Messages {","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"darrenangwx"},"content":"    public static final String MESSAGE_VALID_COMMAND_LIST \u003d \"List of valid commands:\" +","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"darrenangwx"},"content":"            \"\\nUsage: todo \u003cdescription\u003e\" +","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"darrenangwx"},"content":"            \"\\nUsage: deadline /by \u003cspecify by when\u003e\" +","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"darrenangwx"},"content":"            \"\\nUsage: event /from \u003cspecify from when\u003e /to \u003cspecify to when\u003e\" +","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"darrenangwx"},"content":"            \"\\nUsage: mark \u003ctask number\u003e\" +","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"darrenangwx"},"content":"            \"\\nUsage: unmark \u003ctask number\u003e\" +","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"darrenangwx"},"content":"            \"\\nUsage: list\" +","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"darrenangwx"},"content":"            \"\\nUsage: find \u003ckeyword\u003e\" +","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"darrenangwx"},"content":"            \"\\nUsage: delete \u003cinteger\u003e\" +","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"darrenangwx"},"content":"            \"\\nUsage: bye\";","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"darrenangwx"},"content":"    public static final String MESSAGE_COMMAND_LIST_SIZE \u003d \"Now you have %d tasks in the list.\";","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"darrenangwx"},"content":"    public static final String MESSAGE_COMMAND_ADD_TASK \u003d \"Got it. I\u0027ve added this task:\";","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"darrenangwx"},"content":"    public static final String MESSAGE_COMMAND_BYE \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"darrenangwx"},"content":"    public static final String MESSAGE_COMMAND_FIND_MATCH \u003d \"Here are the matching tasks in your list:\";","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"darrenangwx"},"content":"    public static final String MESSAGE_COMMAND_FIND_EMPTY_LIST \u003d \"Wow! you currently have no task! \" +","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"darrenangwx"},"content":"            \"Add a task to use the find feature.\";","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"darrenangwx"},"content":"    public static final String MESSAGE_COMMAND_LIST_EMPTY \u003d \"Wow! you currently have no task!\";","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"darrenangwx"},"content":"    public static final String MESSAGE_COMMAND_LIST_TASKS \u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"darrenangwx"},"content":"    public static final String MESSAGE_COMMAND_DELETE \u003d \"Noted. I\u0027ve removed this task:\";","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"darrenangwx"},"content":"    public static final String MESSAGE_COMMAND_MARK \u003d \"Nice! I\u0027ve marked this task as done:\";","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"darrenangwx"},"content":"    public static final String MESSAGE_COMMAND_UNMARK \u003d \"OK, I\u0027ve marked this task as not done yet:\";","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"darrenangwx"},"content":"    public static final String ERROR_TODO_COMMAND \u003d \"OOPS!!! please give me a Todo.\" +","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"darrenangwx"},"content":"            \"\\nUsage: todo \u003cdescription\u003e\";","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"darrenangwx"},"content":"    public static final String ERROR_COMMAND_MARK \u003d \"Please give me a valid integer that is within the list!\" +","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"darrenangwx"},"content":"            \"\\nUsage: mark \u003cinteger\u003e\";","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"darrenangwx"},"content":"    public static final String ERROR_COMMAND_UNMARK \u003d \"Please give me a valid integer that is within the list!\" +","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"darrenangwx"},"content":"            \"\\nUsage: unmark \u003cinteger\u003e\";","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"darrenangwx"},"content":"    public static final String ERROR_COMMAND_DELETE \u003d \"Please give me a valid integer that is within the list!\" +","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"darrenangwx"},"content":"            \"\\nUsage: delete \u003cinteger\u003e\";","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"darrenangwx"},"content":"    public static final String ERROR_EVENT_COMMAND \u003d \"OOPS!!! please give me a event.\" +","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"darrenangwx"},"content":"            \"\\nUsage: event /from \u003cspecify from when\u003e /to \u003cspecify to when\u003e\";","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"darrenangwx"},"content":"    public static final String ERROR_DEADLINE_COMMAND \u003d \"OOPS!!! please give me a deadline.\" +","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"darrenangwx"},"content":"            \"\\nUsage: deadline /by \u003cspecify by when\u003e\";","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"darrenangwx"},"content":"    public static final String ERROR_CREATE_DIRECTORY \u003d \"Unable to create directory at\\n%s\";","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"darrenangwx"},"content":"    public static final String ERROR_STORAGE_FILE_NOT_FOUND \u003d \"File was not found. \" +","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"darrenangwx"},"content":"            \"A new file will be created when a new task is added.\";","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"darrenangwx"},"content":"    public static final String GENERIC_ERROR \u003d \"Something went wrong please refer to below:\\n%s\";","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"darrenangwx"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"darrenangwx":44}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenangwx"},"content":"package duke;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"darrenangwx"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"darrenangwx"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"darrenangwx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"darrenangwx"},"content":"import commands.Command;","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"darrenangwx"},"content":"import common.Messages;","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"darrenangwx"},"content":"import exceptions.CreateDirectoryException;","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"darrenangwx"},"content":"import parser.Parser;","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"darrenangwx"},"content":"import task.Task;","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"darrenangwx"},"content":"import task.TaskParser;","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"darrenangwx"},"content":"import storage.Storage;","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"darrenangwx"},"content":"import ui.TextUi;","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"darrenangwx"},"content":"    private Storage storage;","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"darrenangwx"},"content":"    private TaskParser taskParser;","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"darrenangwx"},"content":"    private TextUi ui;","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"darrenangwx"},"content":"    private static final Path DATA_DIRECTORY \u003d Path.of(System.getProperty(\"user.dir\"), \"data\");","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"darrenangwx"},"content":"     * Main method to invoke the run method in the program.","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"darrenangwx"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"darrenangwx"},"content":"     * @param args","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"darrenangwx"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"darrenangwx"},"content":"        new Duke().run();","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"darrenangwx"},"content":"     * Run the program with the 3 methods listed.","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"darrenangwx"},"content":"    public void run() {","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"darrenangwx"},"content":"        start();","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"darrenangwx"},"content":"        runCommandLoopUntilByeCommand();","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"darrenangwx"},"content":"        exit();","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"darrenangwx"},"content":"     * Start of the program.","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"darrenangwx"},"content":"     * It will create a Ui instance.","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"darrenangwx"},"content":"     * It will check if the directory can be created. It creates the directory if it does not exist.","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"darrenangwx"},"content":"     * It will read and load from a file if it exists. Else it will create the file when a new task is added.","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"darrenangwx"},"content":"     * It will print the Ui Banner.","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"darrenangwx"},"content":"    private void start() {","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"darrenangwx"},"content":"        this.ui \u003d new TextUi();","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"darrenangwx"},"content":"        this.storage \u003d new Storage(DATA_DIRECTORY);","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"darrenangwx"},"content":"        try {","lastModifiedDate":"2023-02-05"},{"lineNumber":51,"author":{"gitId":"darrenangwx"},"content":"            storage.createDirectory();","lastModifiedDate":"2023-02-28"},{"lineNumber":52,"author":{"gitId":"darrenangwx"},"content":"            taskParser \u003d storage.readAndLoadFromFile();","lastModifiedDate":"2023-02-28"},{"lineNumber":53,"author":{"gitId":"darrenangwx"},"content":"        } catch (CreateDirectoryException e) {","lastModifiedDate":"2023-02-28"},{"lineNumber":54,"author":{"gitId":"darrenangwx"},"content":"            System.out.println(String.format(Messages.ERROR_CREATE_DIRECTORY, e));","lastModifiedDate":"2023-02-28"},{"lineNumber":55,"author":{"gitId":"darrenangwx"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-02-28"},{"lineNumber":56,"author":{"gitId":"darrenangwx"},"content":"            taskParser \u003d new TaskParser(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2023-02-28"},{"lineNumber":57,"author":{"gitId":"darrenangwx"},"content":"            System.out.println(Messages.ERROR_STORAGE_FILE_NOT_FOUND);","lastModifiedDate":"2023-02-28"},{"lineNumber":58,"author":{"gitId":"darrenangwx"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":59,"author":{"gitId":"darrenangwx"},"content":"        ui.printBanner();","lastModifiedDate":"2023-02-28"},{"lineNumber":60,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":61,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":62,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":63,"author":{"gitId":"darrenangwx"},"content":"     * The program will keep running until the user types the \"bye\" command.","lastModifiedDate":"2023-02-28"},{"lineNumber":64,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":65,"author":{"gitId":"darrenangwx"},"content":"    private void runCommandLoopUntilByeCommand() {","lastModifiedDate":"2023-02-28"},{"lineNumber":66,"author":{"gitId":"darrenangwx"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-02-28"},{"lineNumber":67,"author":{"gitId":"darrenangwx"},"content":"        while (!isExit) {","lastModifiedDate":"2023-02-28"},{"lineNumber":68,"author":{"gitId":"darrenangwx"},"content":"            String userInput \u003d ui.getUserInput();","lastModifiedDate":"2023-02-28"},{"lineNumber":69,"author":{"gitId":"darrenangwx"},"content":"            Command command \u003d new Parser().parseCommand(userInput);","lastModifiedDate":"2023-02-28"},{"lineNumber":70,"author":{"gitId":"darrenangwx"},"content":"            command.execute(taskParser, ui, storage);","lastModifiedDate":"2023-02-28"},{"lineNumber":71,"author":{"gitId":"darrenangwx"},"content":"            isExit \u003d command.isExit();","lastModifiedDate":"2023-02-28"},{"lineNumber":72,"author":{"gitId":"darrenangwx"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":73,"author":{"gitId":"darrenangwx"},"content":"        ui.printMessage(Messages.MESSAGE_COMMAND_BYE);","lastModifiedDate":"2023-02-28"},{"lineNumber":74,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":75,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":76,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":77,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":78,"author":{"gitId":"darrenangwx"},"content":"     * Exits the program.","lastModifiedDate":"2023-02-28"},{"lineNumber":79,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":80,"author":{"gitId":"darrenangwx"},"content":"    private void exit() {","lastModifiedDate":"2023-02-28"},{"lineNumber":81,"author":{"gitId":"darrenangwx"},"content":"        System.exit(0);","lastModifiedDate":"2023-02-28"},{"lineNumber":82,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"darrenangwx":81,"-":2}},{"path":"src/main/java/exceptions/CreateDirectoryException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenangwx"},"content":"package exceptions;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"darrenangwx"},"content":"/**","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"darrenangwx"},"content":" * Exceptions related to create directory.","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"darrenangwx"},"content":" */","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"darrenangwx"},"content":"public class CreateDirectoryException extends Exception {","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"darrenangwx"},"content":"     * It will print out a message when an exception regarding directory creation is hit.","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"darrenangwx"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"darrenangwx"},"content":"     * @param message The message to print.","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"darrenangwx"},"content":"    public CreateDirectoryException(String message) {","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"darrenangwx"},"content":"        super(message);","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"darrenangwx"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"darrenangwx":15}},{"path":"src/main/java/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenangwx"},"content":"package exceptions;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"darrenangwx"},"content":"/**","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"darrenangwx"},"content":" * Exceptions related to the Duke program.","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"darrenangwx"},"content":" */","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"darrenangwx"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"darrenangwx"},"content":"     * It will print out a message when an exception regarding duke is hit.","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"darrenangwx"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"darrenangwx"},"content":"     * @param message The message to print.","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"darrenangwx"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"darrenangwx"},"content":"        super(message);","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"darrenangwx"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"darrenangwx":15}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenangwx"},"content":"package parser;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"darrenangwx"},"content":"import commands.Command;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"darrenangwx"},"content":"import commands.DeadlineCommand;","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"darrenangwx"},"content":"import commands.DeleteCommand;","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"darrenangwx"},"content":"import commands.EventCommand;","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"darrenangwx"},"content":"import commands.ExitCommand;","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"darrenangwx"},"content":"import commands.FindCommand;","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"darrenangwx"},"content":"import commands.IncorrectCommand;","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"darrenangwx"},"content":"import commands.ListCommand;","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"darrenangwx"},"content":"import commands.MarkCommand;","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"darrenangwx"},"content":"import commands.TodoCommand;","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"darrenangwx"},"content":"import commands.UnmarkCommand;","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"darrenangwx"},"content":"import common.Messages;","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"darrenangwx"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"darrenangwx"},"content":"import task.TaskParser;","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"darrenangwx"},"content":"/**","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"darrenangwx"},"content":" * The Parser class will parse the user commands into segments understood by the program.","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"darrenangwx"},"content":" */","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"darrenangwx"},"content":"public class Parser {","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"darrenangwx"},"content":"     * It will parse the user inputted command and prepare to execute the appropriate commands.","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"darrenangwx"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"darrenangwx"},"content":"     * @param userInput The raw input of what the user typed.","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"darrenangwx"},"content":"     * @return Command object in order for the program to know what command to execute.","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"darrenangwx"},"content":"    public Command parseCommand(String userInput) {","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"darrenangwx"},"content":"        String[] userInputSplit \u003d userInput.split(\" \");","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"darrenangwx"},"content":"        String userInputNoCommand \u003d userInput.replace(userInputSplit[0], \"\");","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"darrenangwx"},"content":"        String commandWord \u003d userInputSplit[0];","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"darrenangwx"},"content":"        switch (commandWord) {","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"darrenangwx"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"darrenangwx"},"content":"            return prepareExitCommand();","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"darrenangwx"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"darrenangwx"},"content":"            return prepareListCommand();","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"darrenangwx"},"content":"        case TodoCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"darrenangwx"},"content":"            return prepareTodoCommand(userInputNoCommand);","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"darrenangwx"},"content":"        case DeadlineCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"darrenangwx"},"content":"            return prepareDeadlineCommand(userInputNoCommand);","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"darrenangwx"},"content":"        case EventCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"darrenangwx"},"content":"            return prepareEventCommand(userInputNoCommand);","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"darrenangwx"},"content":"        case MarkCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"darrenangwx"},"content":"            return prepareMarkCommand(userInputNoCommand);","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"darrenangwx"},"content":"        case UnmarkCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"darrenangwx"},"content":"            return prepareUnmarkCommand(userInputNoCommand);","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"darrenangwx"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"darrenangwx"},"content":"            return prepareDeleteCommand(userInputNoCommand);","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"darrenangwx"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-28"},{"lineNumber":52,"author":{"gitId":"darrenangwx"},"content":"            return prepareFindCommand(userInputNoCommand);","lastModifiedDate":"2023-02-28"},{"lineNumber":53,"author":{"gitId":"darrenangwx"},"content":"        default:","lastModifiedDate":"2023-02-28"},{"lineNumber":54,"author":{"gitId":"darrenangwx"},"content":"            return new IncorrectCommand();","lastModifiedDate":"2023-02-28"},{"lineNumber":55,"author":{"gitId":"darrenangwx"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":56,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":57,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":58,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":59,"author":{"gitId":"darrenangwx"},"content":"     * It will prepare the find command appropriately so that the command is ready to be executed.","lastModifiedDate":"2023-02-28"},{"lineNumber":60,"author":{"gitId":"darrenangwx"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":61,"author":{"gitId":"darrenangwx"},"content":"     * @param userInputNoCommand The raw input of what the user typed. Without the command portion.","lastModifiedDate":"2023-02-28"},{"lineNumber":62,"author":{"gitId":"darrenangwx"},"content":"     * @return Command object in order for the program to know what command to execute.","lastModifiedDate":"2023-02-28"},{"lineNumber":63,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":64,"author":{"gitId":"darrenangwx"},"content":"    private Command prepareFindCommand(String userInputNoCommand) {","lastModifiedDate":"2023-02-28"},{"lineNumber":65,"author":{"gitId":"darrenangwx"},"content":"        String keyword \u003d userInputNoCommand.trim();","lastModifiedDate":"2023-02-28"},{"lineNumber":66,"author":{"gitId":"darrenangwx"},"content":"        return new FindCommand(keyword);","lastModifiedDate":"2023-02-28"},{"lineNumber":67,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":68,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":69,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":70,"author":{"gitId":"darrenangwx"},"content":"     * It will prepare the delete command appropriately so that the command is ready to be executed.","lastModifiedDate":"2023-02-28"},{"lineNumber":71,"author":{"gitId":"darrenangwx"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":72,"author":{"gitId":"darrenangwx"},"content":"     * @param userInputNoCommand The raw input of what the user typed. Without the command portion.","lastModifiedDate":"2023-02-28"},{"lineNumber":73,"author":{"gitId":"darrenangwx"},"content":"     * @return Command object in order for the program to know what command to execute.","lastModifiedDate":"2023-02-28"},{"lineNumber":74,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":75,"author":{"gitId":"darrenangwx"},"content":"    private Command prepareDeleteCommand(String userInputNoCommand) {","lastModifiedDate":"2023-02-28"},{"lineNumber":76,"author":{"gitId":"darrenangwx"},"content":"        int taskNumberInList;","lastModifiedDate":"2023-02-28"},{"lineNumber":77,"author":{"gitId":"darrenangwx"},"content":"        try {","lastModifiedDate":"2023-02-28"},{"lineNumber":78,"author":{"gitId":"darrenangwx"},"content":"            taskNumberInList \u003d Integer.parseInt(userInputNoCommand.trim()) - 1;","lastModifiedDate":"2023-02-28"},{"lineNumber":79,"author":{"gitId":"darrenangwx"},"content":"            if (!TaskParser.isValidTaskNumber(taskNumberInList)) {","lastModifiedDate":"2023-02-28"},{"lineNumber":80,"author":{"gitId":"darrenangwx"},"content":"                throw new DukeException(Messages.ERROR_COMMAND_DELETE);","lastModifiedDate":"2023-02-28"},{"lineNumber":81,"author":{"gitId":"darrenangwx"},"content":"            }","lastModifiedDate":"2023-02-28"},{"lineNumber":82,"author":{"gitId":"darrenangwx"},"content":"            return new DeleteCommand(taskNumberInList);","lastModifiedDate":"2023-02-28"},{"lineNumber":83,"author":{"gitId":"darrenangwx"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-28"},{"lineNumber":84,"author":{"gitId":"darrenangwx"},"content":"            System.out.println(e);","lastModifiedDate":"2023-02-28"},{"lineNumber":85,"author":{"gitId":"darrenangwx"},"content":"            return new IncorrectCommand();","lastModifiedDate":"2023-02-28"},{"lineNumber":86,"author":{"gitId":"darrenangwx"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-28"},{"lineNumber":87,"author":{"gitId":"darrenangwx"},"content":"            Exception exception \u003d new DukeException(Messages.ERROR_COMMAND_DELETE);","lastModifiedDate":"2023-02-28"},{"lineNumber":88,"author":{"gitId":"darrenangwx"},"content":"            System.out.println(exception);","lastModifiedDate":"2023-02-28"},{"lineNumber":89,"author":{"gitId":"darrenangwx"},"content":"            return new IncorrectCommand();","lastModifiedDate":"2023-02-28"},{"lineNumber":90,"author":{"gitId":"darrenangwx"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":91,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":92,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":93,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":94,"author":{"gitId":"darrenangwx"},"content":"     * It will prepare the unmark command appropriately so that the command is ready to be executed.","lastModifiedDate":"2023-02-28"},{"lineNumber":95,"author":{"gitId":"darrenangwx"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":96,"author":{"gitId":"darrenangwx"},"content":"     * @param userInputNoCommand The raw input of what the user typed. Without the command portion.","lastModifiedDate":"2023-02-28"},{"lineNumber":97,"author":{"gitId":"darrenangwx"},"content":"     * @return Command object in order for the program to know what command to execute.","lastModifiedDate":"2023-02-28"},{"lineNumber":98,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":99,"author":{"gitId":"darrenangwx"},"content":"    private Command prepareUnmarkCommand(String userInputNoCommand) {","lastModifiedDate":"2023-02-28"},{"lineNumber":100,"author":{"gitId":"darrenangwx"},"content":"        int taskNumberInList;","lastModifiedDate":"2023-02-28"},{"lineNumber":101,"author":{"gitId":"darrenangwx"},"content":"        try {","lastModifiedDate":"2023-02-28"},{"lineNumber":102,"author":{"gitId":"darrenangwx"},"content":"            taskNumberInList \u003d Integer.parseInt(userInputNoCommand.trim()) - 1;","lastModifiedDate":"2023-02-28"},{"lineNumber":103,"author":{"gitId":"darrenangwx"},"content":"            if (!TaskParser.isValidTaskNumber(taskNumberInList)) {","lastModifiedDate":"2023-02-28"},{"lineNumber":104,"author":{"gitId":"darrenangwx"},"content":"                throw new DukeException(Messages.ERROR_COMMAND_UNMARK);","lastModifiedDate":"2023-02-28"},{"lineNumber":105,"author":{"gitId":"darrenangwx"},"content":"            }","lastModifiedDate":"2023-02-28"},{"lineNumber":106,"author":{"gitId":"darrenangwx"},"content":"            return new UnmarkCommand(taskNumberInList);","lastModifiedDate":"2023-02-28"},{"lineNumber":107,"author":{"gitId":"darrenangwx"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-28"},{"lineNumber":108,"author":{"gitId":"darrenangwx"},"content":"            System.out.println(e);","lastModifiedDate":"2023-02-28"},{"lineNumber":109,"author":{"gitId":"darrenangwx"},"content":"            return new IncorrectCommand();","lastModifiedDate":"2023-02-28"},{"lineNumber":110,"author":{"gitId":"darrenangwx"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-28"},{"lineNumber":111,"author":{"gitId":"darrenangwx"},"content":"            Exception exception \u003d new DukeException(Messages.ERROR_COMMAND_UNMARK);","lastModifiedDate":"2023-02-28"},{"lineNumber":112,"author":{"gitId":"darrenangwx"},"content":"            System.out.println(exception);","lastModifiedDate":"2023-02-28"},{"lineNumber":113,"author":{"gitId":"darrenangwx"},"content":"            return new IncorrectCommand();","lastModifiedDate":"2023-02-28"},{"lineNumber":114,"author":{"gitId":"darrenangwx"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":115,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":116,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":117,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":118,"author":{"gitId":"darrenangwx"},"content":"     * It will prepare the mark command appropriately so that the command is ready to be executed.","lastModifiedDate":"2023-02-28"},{"lineNumber":119,"author":{"gitId":"darrenangwx"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":120,"author":{"gitId":"darrenangwx"},"content":"     * @param userInputNoCommand The raw input of what the user typed. Without the command portion.","lastModifiedDate":"2023-02-28"},{"lineNumber":121,"author":{"gitId":"darrenangwx"},"content":"     * @return Command object in order for the program to know what command to execute.","lastModifiedDate":"2023-02-28"},{"lineNumber":122,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":123,"author":{"gitId":"darrenangwx"},"content":"    private Command prepareMarkCommand(String userInputNoCommand) {","lastModifiedDate":"2023-02-28"},{"lineNumber":124,"author":{"gitId":"darrenangwx"},"content":"        int taskNumberInList;","lastModifiedDate":"2023-02-28"},{"lineNumber":125,"author":{"gitId":"darrenangwx"},"content":"        try {","lastModifiedDate":"2023-02-28"},{"lineNumber":126,"author":{"gitId":"darrenangwx"},"content":"            taskNumberInList \u003d Integer.parseInt(userInputNoCommand.trim()) - 1;","lastModifiedDate":"2023-02-28"},{"lineNumber":127,"author":{"gitId":"darrenangwx"},"content":"            if (!TaskParser.isValidTaskNumber(taskNumberInList)) {","lastModifiedDate":"2023-02-28"},{"lineNumber":128,"author":{"gitId":"darrenangwx"},"content":"                throw new DukeException(Messages.ERROR_COMMAND_MARK);","lastModifiedDate":"2023-02-28"},{"lineNumber":129,"author":{"gitId":"darrenangwx"},"content":"            }","lastModifiedDate":"2023-02-28"},{"lineNumber":130,"author":{"gitId":"darrenangwx"},"content":"            return new MarkCommand(taskNumberInList);","lastModifiedDate":"2023-02-28"},{"lineNumber":131,"author":{"gitId":"darrenangwx"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-28"},{"lineNumber":132,"author":{"gitId":"darrenangwx"},"content":"            System.out.println(e);","lastModifiedDate":"2023-02-28"},{"lineNumber":133,"author":{"gitId":"darrenangwx"},"content":"            return new IncorrectCommand();","lastModifiedDate":"2023-02-28"},{"lineNumber":134,"author":{"gitId":"darrenangwx"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-28"},{"lineNumber":135,"author":{"gitId":"darrenangwx"},"content":"            Exception exception \u003d new DukeException(Messages.ERROR_COMMAND_MARK);","lastModifiedDate":"2023-02-28"},{"lineNumber":136,"author":{"gitId":"darrenangwx"},"content":"            System.out.println(exception);","lastModifiedDate":"2023-02-28"},{"lineNumber":137,"author":{"gitId":"darrenangwx"},"content":"            return new IncorrectCommand();","lastModifiedDate":"2023-02-28"},{"lineNumber":138,"author":{"gitId":"darrenangwx"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":139,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":140,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":141,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":142,"author":{"gitId":"darrenangwx"},"content":"     * It will prepare the event command appropriately so that the command is ready to be executed.","lastModifiedDate":"2023-02-28"},{"lineNumber":143,"author":{"gitId":"darrenangwx"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":144,"author":{"gitId":"darrenangwx"},"content":"     * @param userInputNoCommand The raw input of what the user typed. Without the command portion.","lastModifiedDate":"2023-02-28"},{"lineNumber":145,"author":{"gitId":"darrenangwx"},"content":"     * @return Command object in order for the program to know what command to execute.","lastModifiedDate":"2023-02-28"},{"lineNumber":146,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":147,"author":{"gitId":"darrenangwx"},"content":"    private Command prepareEventCommand(String userInputNoCommand) {","lastModifiedDate":"2023-02-28"},{"lineNumber":148,"author":{"gitId":"darrenangwx"},"content":"        String replaceSlash \u003d userInputNoCommand.replace(\"/from\", \"--from:\");","lastModifiedDate":"2023-02-28"},{"lineNumber":149,"author":{"gitId":"darrenangwx"},"content":"        replaceSlash \u003d replaceSlash.replace(\"/to\", \"to:\");","lastModifiedDate":"2023-02-28"},{"lineNumber":150,"author":{"gitId":"darrenangwx"},"content":"        String[] splitEvent \u003d replaceSlash.split(\"--\");","lastModifiedDate":"2023-02-28"},{"lineNumber":151,"author":{"gitId":"darrenangwx"},"content":"        try {","lastModifiedDate":"2023-02-28"},{"lineNumber":152,"author":{"gitId":"darrenangwx"},"content":"            if (userInputNoCommand.equals(\"\") || splitEvent.length !\u003d 2) {","lastModifiedDate":"2023-02-28"},{"lineNumber":153,"author":{"gitId":"darrenangwx"},"content":"                throw new DukeException(Messages.ERROR_EVENT_COMMAND);","lastModifiedDate":"2023-02-28"},{"lineNumber":154,"author":{"gitId":"darrenangwx"},"content":"            }","lastModifiedDate":"2023-02-28"},{"lineNumber":155,"author":{"gitId":"darrenangwx"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-28"},{"lineNumber":156,"author":{"gitId":"darrenangwx"},"content":"            System.out.println(e);","lastModifiedDate":"2023-02-28"},{"lineNumber":157,"author":{"gitId":"darrenangwx"},"content":"            return new IncorrectCommand();","lastModifiedDate":"2023-02-28"},{"lineNumber":158,"author":{"gitId":"darrenangwx"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":159,"author":{"gitId":"darrenangwx"},"content":"        return new EventCommand(splitEvent[0], splitEvent[1]);","lastModifiedDate":"2023-02-28"},{"lineNumber":160,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":161,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":162,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":163,"author":{"gitId":"darrenangwx"},"content":"     * It will prepare the deadline command appropriately so that the command is ready to be executed.","lastModifiedDate":"2023-02-28"},{"lineNumber":164,"author":{"gitId":"darrenangwx"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":165,"author":{"gitId":"darrenangwx"},"content":"     * @param userInputNoCommand The raw input of what the user typed. Without the command portion.","lastModifiedDate":"2023-02-28"},{"lineNumber":166,"author":{"gitId":"darrenangwx"},"content":"     * @return Command object in order for the program to know what command to execute.","lastModifiedDate":"2023-02-28"},{"lineNumber":167,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":168,"author":{"gitId":"darrenangwx"},"content":"    private Command prepareDeadlineCommand(String userInputNoCommand) {","lastModifiedDate":"2023-02-28"},{"lineNumber":169,"author":{"gitId":"darrenangwx"},"content":"        String[] splitDeadline \u003d userInputNoCommand.split(\"/by\");","lastModifiedDate":"2023-02-28"},{"lineNumber":170,"author":{"gitId":"darrenangwx"},"content":"        try {","lastModifiedDate":"2023-02-28"},{"lineNumber":171,"author":{"gitId":"darrenangwx"},"content":"            if (userInputNoCommand.equals(\"\") || splitDeadline.length !\u003d 2) {","lastModifiedDate":"2023-02-28"},{"lineNumber":172,"author":{"gitId":"darrenangwx"},"content":"                throw new DukeException(Messages.ERROR_DEADLINE_COMMAND);","lastModifiedDate":"2023-02-28"},{"lineNumber":173,"author":{"gitId":"darrenangwx"},"content":"            }","lastModifiedDate":"2023-02-28"},{"lineNumber":174,"author":{"gitId":"darrenangwx"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-28"},{"lineNumber":175,"author":{"gitId":"darrenangwx"},"content":"            System.out.println(e);","lastModifiedDate":"2023-02-28"},{"lineNumber":176,"author":{"gitId":"darrenangwx"},"content":"            return new IncorrectCommand();","lastModifiedDate":"2023-02-28"},{"lineNumber":177,"author":{"gitId":"darrenangwx"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":178,"author":{"gitId":"darrenangwx"},"content":"        return new DeadlineCommand(splitDeadline[0], splitDeadline[1]);","lastModifiedDate":"2023-02-28"},{"lineNumber":179,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":180,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":181,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":182,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":183,"author":{"gitId":"darrenangwx"},"content":"     * It will prepare the todo command appropriately so that the command is ready to be executed.","lastModifiedDate":"2023-02-28"},{"lineNumber":184,"author":{"gitId":"darrenangwx"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":185,"author":{"gitId":"darrenangwx"},"content":"     * @param userInputNoCommand The raw input of what the user typed. Without the command portion.","lastModifiedDate":"2023-02-28"},{"lineNumber":186,"author":{"gitId":"darrenangwx"},"content":"     * @return Command object in order for the program to know what command to execute.","lastModifiedDate":"2023-02-28"},{"lineNumber":187,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":188,"author":{"gitId":"darrenangwx"},"content":"    private Command prepareTodoCommand(String userInputNoCommand) {","lastModifiedDate":"2023-02-28"},{"lineNumber":189,"author":{"gitId":"darrenangwx"},"content":"        try {","lastModifiedDate":"2023-02-28"},{"lineNumber":190,"author":{"gitId":"darrenangwx"},"content":"            if (userInputNoCommand.trim().isEmpty()) {","lastModifiedDate":"2023-02-28"},{"lineNumber":191,"author":{"gitId":"darrenangwx"},"content":"                throw new DukeException(Messages.ERROR_TODO_COMMAND);","lastModifiedDate":"2023-02-28"},{"lineNumber":192,"author":{"gitId":"darrenangwx"},"content":"            }","lastModifiedDate":"2023-02-28"},{"lineNumber":193,"author":{"gitId":"darrenangwx"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-28"},{"lineNumber":194,"author":{"gitId":"darrenangwx"},"content":"            System.out.println(e);","lastModifiedDate":"2023-02-28"},{"lineNumber":195,"author":{"gitId":"darrenangwx"},"content":"            return new IncorrectCommand();","lastModifiedDate":"2023-02-28"},{"lineNumber":196,"author":{"gitId":"darrenangwx"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":197,"author":{"gitId":"darrenangwx"},"content":"        return new TodoCommand(userInputNoCommand);","lastModifiedDate":"2023-02-28"},{"lineNumber":198,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":199,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":200,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":201,"author":{"gitId":"darrenangwx"},"content":"     * It will prepare the list command appropriately so that the command is ready to be executed.","lastModifiedDate":"2023-02-28"},{"lineNumber":202,"author":{"gitId":"darrenangwx"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":203,"author":{"gitId":"darrenangwx"},"content":"     * @return Command object in order for the program to know what command to execute.","lastModifiedDate":"2023-02-28"},{"lineNumber":204,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":205,"author":{"gitId":"darrenangwx"},"content":"    private Command prepareListCommand() {","lastModifiedDate":"2023-02-28"},{"lineNumber":206,"author":{"gitId":"darrenangwx"},"content":"        return new ListCommand();","lastModifiedDate":"2023-02-28"},{"lineNumber":207,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":208,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":209,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":210,"author":{"gitId":"darrenangwx"},"content":"     * It will prepare the exit command appropriately so that the command is ready to be executed.","lastModifiedDate":"2023-02-28"},{"lineNumber":211,"author":{"gitId":"darrenangwx"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":212,"author":{"gitId":"darrenangwx"},"content":"     * @return Command object in order for the program to know what command to execute.","lastModifiedDate":"2023-02-28"},{"lineNumber":213,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":214,"author":{"gitId":"darrenangwx"},"content":"    private Command prepareExitCommand() {","lastModifiedDate":"2023-02-28"},{"lineNumber":215,"author":{"gitId":"darrenangwx"},"content":"        return new ExitCommand();","lastModifiedDate":"2023-02-28"},{"lineNumber":216,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":217,"author":{"gitId":"darrenangwx"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"darrenangwx":217}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenangwx"},"content":"package storage;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"darrenangwx"},"content":"import common.Messages;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"darrenangwx"},"content":"import exceptions.CreateDirectoryException;","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"darrenangwx"},"content":"import task.Deadline;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"darrenangwx"},"content":"import task.Event;","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"darrenangwx"},"content":"import task.Task;","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"darrenangwx"},"content":"import task.TaskParser;","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"darrenangwx"},"content":"import task.Todo;","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"darrenangwx"},"content":"import java.io.File;","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"darrenangwx"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"darrenangwx"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"darrenangwx"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"darrenangwx"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"darrenangwx"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"darrenangwx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"darrenangwx"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"darrenangwx"},"content":"/**","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"darrenangwx"},"content":" * The storage class.","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"darrenangwx"},"content":" * To manage file and directory related operations.","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"darrenangwx"},"content":" */","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"darrenangwx"},"content":"public class Storage {","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"darrenangwx"},"content":"    private static final String FILE_DIRECTORY \u003d \"data\";","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"darrenangwx"},"content":"    private static final String FILENAME \u003d \"tasklist.txt\";","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"darrenangwx"},"content":"    private static final String FILEPATH \u003d FILE_DIRECTORY + \"/\" + FILENAME;","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"darrenangwx"},"content":"    private Path dataDirectory;","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"darrenangwx"},"content":"     * Initialize the storage with the path to data directory.","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"darrenangwx"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"darrenangwx"},"content":"     * @param dataDirectory path to the data directory.","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"darrenangwx"},"content":"    public Storage(Path dataDirectory) {","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"darrenangwx"},"content":"        this.dataDirectory \u003d dataDirectory;","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"darrenangwx"},"content":"     * Create a directory in the root project structure named \"data\" if directory is not found.","lastModifiedDate":"2023-02-13"},{"lineNumber":42,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"darrenangwx"},"content":"    public void createDirectory() throws CreateDirectoryException {","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"darrenangwx"},"content":"        try {","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"darrenangwx"},"content":"            if (Files.notExists(dataDirectory)) {","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"darrenangwx"},"content":"                Files.createDirectories(dataDirectory);","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"darrenangwx"},"content":"            }","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"darrenangwx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"darrenangwx"},"content":"            throw new CreateDirectoryException(String.format(Messages.ERROR_CREATE_DIRECTORY, dataDirectory));","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"darrenangwx"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":51,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":52,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":53,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":54,"author":{"gitId":"darrenangwx"},"content":"     * Write the user tasks into a file.","lastModifiedDate":"2023-02-28"},{"lineNumber":55,"author":{"gitId":"darrenangwx"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":56,"author":{"gitId":"darrenangwx"},"content":"     * @param listOfTasks An arraylist storing the list of tasks the user created.","lastModifiedDate":"2023-02-13"},{"lineNumber":57,"author":{"gitId":"darrenangwx"},"content":"     * @throws IOException Some IO Exception has occured.","lastModifiedDate":"2023-02-13"},{"lineNumber":58,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":59,"author":{"gitId":"darrenangwx"},"content":"    public void writeToFile(ArrayList\u003cTask\u003e listOfTasks) throws IOException {","lastModifiedDate":"2023-02-13"},{"lineNumber":60,"author":{"gitId":"darrenangwx"},"content":"        FileWriter filewriter \u003d new FileWriter(FILEPATH);","lastModifiedDate":"2023-02-13"},{"lineNumber":61,"author":{"gitId":"darrenangwx"},"content":"        for (Task task : listOfTasks) {","lastModifiedDate":"2023-02-13"},{"lineNumber":62,"author":{"gitId":"darrenangwx"},"content":"            filewriter.write(task.savableString() + System.lineSeparator());","lastModifiedDate":"2023-02-28"},{"lineNumber":63,"author":{"gitId":"darrenangwx"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":64,"author":{"gitId":"darrenangwx"},"content":"        filewriter.close();","lastModifiedDate":"2023-02-13"},{"lineNumber":65,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":66,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":67,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":68,"author":{"gitId":"darrenangwx"},"content":"     * Read and Load data from a file if it exists.","lastModifiedDate":"2023-02-28"},{"lineNumber":69,"author":{"gitId":"darrenangwx"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":70,"author":{"gitId":"darrenangwx"},"content":"     * @throws FileNotFoundException If file is not found, throw an exception. But file will be created if not found.","lastModifiedDate":"2023-02-13"},{"lineNumber":71,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":72,"author":{"gitId":"darrenangwx"},"content":"    public TaskParser readAndLoadFromFile() throws FileNotFoundException {","lastModifiedDate":"2023-02-28"},{"lineNumber":73,"author":{"gitId":"darrenangwx"},"content":"        File file \u003d new File(FILEPATH);","lastModifiedDate":"2023-02-13"},{"lineNumber":74,"author":{"gitId":"darrenangwx"},"content":"        Scanner in \u003d new Scanner(file);","lastModifiedDate":"2023-02-13"},{"lineNumber":75,"author":{"gitId":"darrenangwx"},"content":"        ArrayList\u003cTask\u003e listOfTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-28"},{"lineNumber":76,"author":{"gitId":"darrenangwx"},"content":"        Task task;","lastModifiedDate":"2023-02-13"},{"lineNumber":77,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":78,"author":{"gitId":"darrenangwx"},"content":"        while (in.hasNext()) {","lastModifiedDate":"2023-02-13"},{"lineNumber":79,"author":{"gitId":"darrenangwx"},"content":"            String text \u003d in.nextLine();","lastModifiedDate":"2023-02-13"},{"lineNumber":80,"author":{"gitId":"darrenangwx"},"content":"            String[] taskSplit \u003d text.split(\"\\\\|\");","lastModifiedDate":"2023-02-13"},{"lineNumber":81,"author":{"gitId":"darrenangwx"},"content":"            boolean isDone \u003d taskSplit[1].equals(\"1\");","lastModifiedDate":"2023-02-13"},{"lineNumber":82,"author":{"gitId":"darrenangwx"},"content":"            switch (taskSplit[0]) {","lastModifiedDate":"2023-02-13"},{"lineNumber":83,"author":{"gitId":"darrenangwx"},"content":"            case \"T\":","lastModifiedDate":"2023-02-13"},{"lineNumber":84,"author":{"gitId":"darrenangwx"},"content":"                task \u003d new Todo(taskSplit[2]);","lastModifiedDate":"2023-02-13"},{"lineNumber":85,"author":{"gitId":"darrenangwx"},"content":"                if (isDone) {","lastModifiedDate":"2023-02-13"},{"lineNumber":86,"author":{"gitId":"darrenangwx"},"content":"                    task.markAsDone();","lastModifiedDate":"2023-02-13"},{"lineNumber":87,"author":{"gitId":"darrenangwx"},"content":"                }","lastModifiedDate":"2023-02-13"},{"lineNumber":88,"author":{"gitId":"darrenangwx"},"content":"                listOfTasks.add(task);","lastModifiedDate":"2023-02-13"},{"lineNumber":89,"author":{"gitId":"darrenangwx"},"content":"                break;","lastModifiedDate":"2023-02-13"},{"lineNumber":90,"author":{"gitId":"darrenangwx"},"content":"            case \"D\":","lastModifiedDate":"2023-02-13"},{"lineNumber":91,"author":{"gitId":"darrenangwx"},"content":"                task \u003d new Deadline(taskSplit[2], taskSplit[3]);","lastModifiedDate":"2023-02-13"},{"lineNumber":92,"author":{"gitId":"darrenangwx"},"content":"                if (isDone) {","lastModifiedDate":"2023-02-13"},{"lineNumber":93,"author":{"gitId":"darrenangwx"},"content":"                    task.markAsDone();","lastModifiedDate":"2023-02-13"},{"lineNumber":94,"author":{"gitId":"darrenangwx"},"content":"                }","lastModifiedDate":"2023-02-13"},{"lineNumber":95,"author":{"gitId":"darrenangwx"},"content":"                listOfTasks.add(task);","lastModifiedDate":"2023-02-13"},{"lineNumber":96,"author":{"gitId":"darrenangwx"},"content":"                break;","lastModifiedDate":"2023-02-13"},{"lineNumber":97,"author":{"gitId":"darrenangwx"},"content":"            case \"E\":","lastModifiedDate":"2023-02-13"},{"lineNumber":98,"author":{"gitId":"darrenangwx"},"content":"                task \u003d new Event(taskSplit[2], taskSplit[3]);","lastModifiedDate":"2023-02-13"},{"lineNumber":99,"author":{"gitId":"darrenangwx"},"content":"                if (isDone) {","lastModifiedDate":"2023-02-13"},{"lineNumber":100,"author":{"gitId":"darrenangwx"},"content":"                    task.markAsDone();","lastModifiedDate":"2023-02-13"},{"lineNumber":101,"author":{"gitId":"darrenangwx"},"content":"                }","lastModifiedDate":"2023-02-13"},{"lineNumber":102,"author":{"gitId":"darrenangwx"},"content":"                listOfTasks.add(task);","lastModifiedDate":"2023-02-13"},{"lineNumber":103,"author":{"gitId":"darrenangwx"},"content":"                break;","lastModifiedDate":"2023-02-13"},{"lineNumber":104,"author":{"gitId":"darrenangwx"},"content":"            }","lastModifiedDate":"2023-02-13"},{"lineNumber":105,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":106,"author":{"gitId":"darrenangwx"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":107,"author":{"gitId":"darrenangwx"},"content":"        return new TaskParser(listOfTasks);","lastModifiedDate":"2023-02-28"},{"lineNumber":108,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":109,"author":{"gitId":"darrenangwx"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"darrenangwx":109}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenangwx"},"content":"package task;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"darrenangwx"},"content":"/**","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"darrenangwx"},"content":" * Handles the deadline task.","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"darrenangwx"},"content":" */","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"darrenangwx"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"darrenangwx"},"content":"    private String by;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"darrenangwx"},"content":"     * A constructor that accepts the description and /by deadline specified by the user.","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"darrenangwx"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"darrenangwx"},"content":"     * @param description The description of the deadline.","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"darrenangwx"},"content":"     * @param by          The date of the deadline.","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"darrenangwx"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"darrenangwx"},"content":"        super(description);","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"darrenangwx"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"darrenangwx"},"content":"     * Set the toString parameter to print out a readable string.","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"darrenangwx"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"darrenangwx"},"content":"     * @return The readable string.","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"darrenangwx"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"darrenangwx"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"darrenangwx"},"content":"        return \"[D]\" + super.toString() + \"(by:\" + by + \")\";","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"darrenangwx"},"content":"     * Formats the string into a savable string.","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"darrenangwx"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"darrenangwx"},"content":"     * @return A string that can be saved into a file.","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"darrenangwx"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"darrenangwx"},"content":"    public String savableString() {","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"darrenangwx"},"content":"        return \"D|\" + super.savableString() + \"|\" + by;","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":40,"author":{"gitId":"darrenangwx"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"darrenangwx":40}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenangwx"},"content":"package task;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"darrenangwx"},"content":"/**","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"darrenangwx"},"content":" * Handles event task.","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"darrenangwx"},"content":" */","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"darrenangwx"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"darrenangwx"},"content":"    private String time;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"darrenangwx"},"content":"     * A constructor that accepts the description and the /to and /from time specified by the user.","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"darrenangwx"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"darrenangwx"},"content":"     * @param description The description of the deadline.","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"darrenangwx"},"content":"     * @param time        the /to and /from of the event.","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"darrenangwx"},"content":"    public Event(String description, String time) {","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"darrenangwx"},"content":"        super(description);","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"darrenangwx"},"content":"        this.time \u003d time;","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"darrenangwx"},"content":"     * Set the toString parameter to print out a readable string.","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"darrenangwx"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"darrenangwx"},"content":"     * @return The readable string.","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"darrenangwx"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"darrenangwx"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"darrenangwx"},"content":"        return \"[E]\" + super.toString() + \"(\" + time + \")\";","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"darrenangwx"},"content":"     * Formats the string into a savable string.","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"darrenangwx"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"darrenangwx"},"content":"     * @return A string that can be saved into a file.","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"darrenangwx"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"darrenangwx"},"content":"    public String savableString() {","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"darrenangwx"},"content":"        return \"E|\" + super.savableString() + \"|\" + time;","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"darrenangwx"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"darrenangwx":39}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenangwx"},"content":"package task;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"darrenangwx"},"content":"/**","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"darrenangwx"},"content":" * Handles the Tasks.","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"darrenangwx"},"content":" */","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"darrenangwx"},"content":"public class Task {","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"darrenangwx"},"content":"    protected String description;","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"darrenangwx"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"darrenangwx"},"content":"     * A constructor that accepts a description.","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"darrenangwx"},"content":"     * isDone is set to false by default when a task is created.","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"darrenangwx"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"darrenangwx"},"content":"     * @param description The description to accept.","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"darrenangwx"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"darrenangwx"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"darrenangwx"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"darrenangwx"},"content":"     * Getter for the description.","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"darrenangwx"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"darrenangwx"},"content":"     * @return The description.","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"darrenangwx"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"darrenangwx"},"content":"        return description;","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"darrenangwx"},"content":"     * Getter for the status icon.","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"darrenangwx"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"darrenangwx"},"content":"     * @return The status icon.","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"darrenangwx"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"darrenangwx"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"darrenangwx"},"content":"     * Setter for the description.","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"darrenangwx"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"darrenangwx"},"content":"     * @param description set the description to the specified description.","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"darrenangwx"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"darrenangwx"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"darrenangwx"},"content":"     * Set the task to done or not done.","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"darrenangwx"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"darrenangwx"},"content":"     * @param done the boolean to set the task as done or not done.","lastModifiedDate":"2023-02-28"},{"lineNumber":52,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":53,"author":{"gitId":"darrenangwx"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2023-01-22"},{"lineNumber":54,"author":{"gitId":"darrenangwx"},"content":"        isDone \u003d done;","lastModifiedDate":"2023-01-22"},{"lineNumber":55,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":56,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":57,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":58,"author":{"gitId":"darrenangwx"},"content":"     * Mark the task as done.","lastModifiedDate":"2023-02-28"},{"lineNumber":59,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":60,"author":{"gitId":"darrenangwx"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-22"},{"lineNumber":61,"author":{"gitId":"darrenangwx"},"content":"        setDone(true);","lastModifiedDate":"2023-01-22"},{"lineNumber":62,"author":{"gitId":"darrenangwx"},"content":"        setDescription(description.replace(\"[ ]\", \"[X]\"));","lastModifiedDate":"2023-01-22"},{"lineNumber":63,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":64,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":65,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":66,"author":{"gitId":"darrenangwx"},"content":"     * Mark the task as not done.","lastModifiedDate":"2023-02-28"},{"lineNumber":67,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":68,"author":{"gitId":"darrenangwx"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-01-22"},{"lineNumber":69,"author":{"gitId":"darrenangwx"},"content":"        setDone(false);","lastModifiedDate":"2023-01-22"},{"lineNumber":70,"author":{"gitId":"darrenangwx"},"content":"        setDescription(description.replace(\"[X]\", \"[ ]\"));","lastModifiedDate":"2023-01-22"},{"lineNumber":71,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":72,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":73,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":74,"author":{"gitId":"darrenangwx"},"content":"     * Set the toString parameter to print out a readable string.","lastModifiedDate":"2023-02-28"},{"lineNumber":75,"author":{"gitId":"darrenangwx"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":76,"author":{"gitId":"darrenangwx"},"content":"     * @return The readable string.","lastModifiedDate":"2023-02-28"},{"lineNumber":77,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":78,"author":{"gitId":"darrenangwx"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":79,"author":{"gitId":"darrenangwx"},"content":"        return \"[\" + getStatusIcon() + \"]\" + description;","lastModifiedDate":"2023-01-29"},{"lineNumber":80,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":81,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":82,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":83,"author":{"gitId":"darrenangwx"},"content":"     * Formats the string into a savable string.","lastModifiedDate":"2023-02-28"},{"lineNumber":84,"author":{"gitId":"darrenangwx"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":85,"author":{"gitId":"darrenangwx"},"content":"     * @return A string that can be saved into a file.","lastModifiedDate":"2023-02-28"},{"lineNumber":86,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":87,"author":{"gitId":"darrenangwx"},"content":"    public String savableString() {","lastModifiedDate":"2023-02-28"},{"lineNumber":88,"author":{"gitId":"darrenangwx"},"content":"        String status;","lastModifiedDate":"2023-02-13"},{"lineNumber":89,"author":{"gitId":"darrenangwx"},"content":"        if (getStatusIcon().equals(\" \")) {","lastModifiedDate":"2023-02-13"},{"lineNumber":90,"author":{"gitId":"darrenangwx"},"content":"            status \u003d \"0\";","lastModifiedDate":"2023-02-13"},{"lineNumber":91,"author":{"gitId":"darrenangwx"},"content":"        } else {","lastModifiedDate":"2023-02-13"},{"lineNumber":92,"author":{"gitId":"darrenangwx"},"content":"            status \u003d \"1\";","lastModifiedDate":"2023-02-13"},{"lineNumber":93,"author":{"gitId":"darrenangwx"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":94,"author":{"gitId":"darrenangwx"},"content":"        return status + \"|\" + description;","lastModifiedDate":"2023-02-13"},{"lineNumber":95,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":96,"author":{"gitId":"darrenangwx"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"darrenangwx":96}},{"path":"src/main/java/task/TaskParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenangwx"},"content":"package task;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"darrenangwx"},"content":"import common.Messages;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"darrenangwx"},"content":"import storage.Storage;","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"darrenangwx"},"content":"import ui.TextUi;","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"darrenangwx"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"darrenangwx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"darrenangwx"},"content":"/**","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"darrenangwx"},"content":" * A Class to parse and execute the different types of tasks the Duke program will handle.","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"darrenangwx"},"content":" * Has operations that will create, delete, mark, unmark, list, and find tasks.","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"darrenangwx"},"content":" */","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"darrenangwx"},"content":"public class TaskParser {","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"darrenangwx"},"content":"    private static ArrayList\u003cTask\u003e listOfTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"darrenangwx"},"content":"     * A constructor to take in an ArrayList of tasks.","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"darrenangwx"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"darrenangwx"},"content":"     * @param listOfTasks An ArrayList of user defined tasks.","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"darrenangwx"},"content":"    public TaskParser(ArrayList\u003cTask\u003e listOfTasks) {","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"darrenangwx"},"content":"        TaskParser.listOfTasks \u003d listOfTasks;","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"darrenangwx"},"content":"     * Creates a Todo Task.","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"darrenangwx"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"darrenangwx"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"darrenangwx"},"content":"     * @return A Todo object for task.","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"darrenangwx"},"content":"    public Todo createTodoTask(String description) {","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"darrenangwx"},"content":"        return new Todo(description);","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"darrenangwx"},"content":"     * Creates a Deadline Task.","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"darrenangwx"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"darrenangwx"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"darrenangwx"},"content":"     * @param by          The deadline of the task.","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"darrenangwx"},"content":"     * @return A Deadline object for the task.","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"darrenangwx"},"content":"    public Deadline createDeadlineTask(String description, String by) {","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"darrenangwx"},"content":"        return new Deadline(description, by);","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"darrenangwx"},"content":"     * Creates a Event Task.","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"darrenangwx"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"darrenangwx"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"darrenangwx"},"content":"     * @param time        The from and to time of the task.","lastModifiedDate":"2023-02-28"},{"lineNumber":52,"author":{"gitId":"darrenangwx"},"content":"     * @return A Event object for the task.","lastModifiedDate":"2023-02-28"},{"lineNumber":53,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":54,"author":{"gitId":"darrenangwx"},"content":"    public Event createEventTask(String description, String time) {","lastModifiedDate":"2023-02-28"},{"lineNumber":55,"author":{"gitId":"darrenangwx"},"content":"        return new Event(description, time);","lastModifiedDate":"2023-02-28"},{"lineNumber":56,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":57,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":58,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":59,"author":{"gitId":"darrenangwx"},"content":"     * Find a task based on the keyword specified.","lastModifiedDate":"2023-02-28"},{"lineNumber":60,"author":{"gitId":"darrenangwx"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":61,"author":{"gitId":"darrenangwx"},"content":"     * @param ui      The Ui instance. Use to display messages to users.","lastModifiedDate":"2023-02-28"},{"lineNumber":62,"author":{"gitId":"darrenangwx"},"content":"     * @param keyword The keyword specified by the user.","lastModifiedDate":"2023-02-28"},{"lineNumber":63,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":64,"author":{"gitId":"darrenangwx"},"content":"    public void findTask(TextUi ui, String keyword) {","lastModifiedDate":"2023-02-28"},{"lineNumber":65,"author":{"gitId":"darrenangwx"},"content":"        if (listOfTasks.isEmpty()) {","lastModifiedDate":"2023-02-28"},{"lineNumber":66,"author":{"gitId":"darrenangwx"},"content":"            ui.printMessage(Messages.MESSAGE_COMMAND_FIND_EMPTY_LIST);","lastModifiedDate":"2023-02-28"},{"lineNumber":67,"author":{"gitId":"darrenangwx"},"content":"        } else {","lastModifiedDate":"2023-02-28"},{"lineNumber":68,"author":{"gitId":"darrenangwx"},"content":"            ui.printMessage(Messages.MESSAGE_COMMAND_FIND_MATCH);","lastModifiedDate":"2023-02-28"},{"lineNumber":69,"author":{"gitId":"darrenangwx"},"content":"            Task task;","lastModifiedDate":"2023-02-28"},{"lineNumber":70,"author":{"gitId":"darrenangwx"},"content":"            for (int i \u003d 0; i \u003c listOfTasks.size(); i++) {","lastModifiedDate":"2023-02-28"},{"lineNumber":71,"author":{"gitId":"darrenangwx"},"content":"                task \u003d listOfTasks.get(i);","lastModifiedDate":"2023-02-28"},{"lineNumber":72,"author":{"gitId":"darrenangwx"},"content":"                if (task.toString().contains(keyword)) {","lastModifiedDate":"2023-02-28"},{"lineNumber":73,"author":{"gitId":"darrenangwx"},"content":"                    System.out.println(i + 1 + \".\" + task);","lastModifiedDate":"2023-02-28"},{"lineNumber":74,"author":{"gitId":"darrenangwx"},"content":"                }","lastModifiedDate":"2023-02-28"},{"lineNumber":75,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":76,"author":{"gitId":"darrenangwx"},"content":"            }","lastModifiedDate":"2023-02-28"},{"lineNumber":77,"author":{"gitId":"darrenangwx"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":78,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":79,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":80,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":81,"author":{"gitId":"darrenangwx"},"content":"     * Mark the specified task as done.","lastModifiedDate":"2023-02-28"},{"lineNumber":82,"author":{"gitId":"darrenangwx"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":83,"author":{"gitId":"darrenangwx"},"content":"     * @param ui               The Ui instance. Use to display messages to users.","lastModifiedDate":"2023-02-28"},{"lineNumber":84,"author":{"gitId":"darrenangwx"},"content":"     * @param storage          The storage instance. Use to write data into the text file.","lastModifiedDate":"2023-02-28"},{"lineNumber":85,"author":{"gitId":"darrenangwx"},"content":"     * @param taskNumberInList The task number to be marked as done.","lastModifiedDate":"2023-02-28"},{"lineNumber":86,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":87,"author":{"gitId":"darrenangwx"},"content":"    public void markTask(TextUi ui, Storage storage, int taskNumberInList) {","lastModifiedDate":"2023-02-28"},{"lineNumber":88,"author":{"gitId":"darrenangwx"},"content":"        Task task \u003d listOfTasks.get(taskNumberInList);","lastModifiedDate":"2023-02-28"},{"lineNumber":89,"author":{"gitId":"darrenangwx"},"content":"        task.markAsDone();","lastModifiedDate":"2023-02-28"},{"lineNumber":90,"author":{"gitId":"darrenangwx"},"content":"        try {","lastModifiedDate":"2023-02-28"},{"lineNumber":91,"author":{"gitId":"darrenangwx"},"content":"            storage.writeToFile(listOfTasks);","lastModifiedDate":"2023-02-28"},{"lineNumber":92,"author":{"gitId":"darrenangwx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-28"},{"lineNumber":93,"author":{"gitId":"darrenangwx"},"content":"            ui.printMessage(String.format(Messages.GENERIC_ERROR, e));","lastModifiedDate":"2023-02-28"},{"lineNumber":94,"author":{"gitId":"darrenangwx"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":95,"author":{"gitId":"darrenangwx"},"content":"        ui.printMessage(Messages.MESSAGE_COMMAND_MARK);","lastModifiedDate":"2023-02-28"},{"lineNumber":96,"author":{"gitId":"darrenangwx"},"content":"        System.out.println(task);","lastModifiedDate":"2023-02-28"},{"lineNumber":97,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":98,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":99,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":100,"author":{"gitId":"darrenangwx"},"content":"     * Unmark the specified task as undone.","lastModifiedDate":"2023-02-28"},{"lineNumber":101,"author":{"gitId":"darrenangwx"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":102,"author":{"gitId":"darrenangwx"},"content":"     * @param ui               The Ui instance. Use to display messages to users.","lastModifiedDate":"2023-02-28"},{"lineNumber":103,"author":{"gitId":"darrenangwx"},"content":"     * @param storage          The storage instance. Use to write data into the text file.","lastModifiedDate":"2023-02-28"},{"lineNumber":104,"author":{"gitId":"darrenangwx"},"content":"     * @param taskNumberInList The task number to be unmarked.","lastModifiedDate":"2023-02-28"},{"lineNumber":105,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":106,"author":{"gitId":"darrenangwx"},"content":"    public void unmarkTask(TextUi ui, Storage storage, int taskNumberInList) {","lastModifiedDate":"2023-02-28"},{"lineNumber":107,"author":{"gitId":"darrenangwx"},"content":"        Task task \u003d listOfTasks.get(taskNumberInList);","lastModifiedDate":"2023-02-28"},{"lineNumber":108,"author":{"gitId":"darrenangwx"},"content":"        task.markAsUndone();","lastModifiedDate":"2023-02-28"},{"lineNumber":109,"author":{"gitId":"darrenangwx"},"content":"        try {","lastModifiedDate":"2023-02-28"},{"lineNumber":110,"author":{"gitId":"darrenangwx"},"content":"            storage.writeToFile(listOfTasks);","lastModifiedDate":"2023-02-28"},{"lineNumber":111,"author":{"gitId":"darrenangwx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-28"},{"lineNumber":112,"author":{"gitId":"darrenangwx"},"content":"            ui.printMessage(String.format(Messages.GENERIC_ERROR, e));","lastModifiedDate":"2023-02-28"},{"lineNumber":113,"author":{"gitId":"darrenangwx"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":114,"author":{"gitId":"darrenangwx"},"content":"        ui.printMessage(Messages.MESSAGE_COMMAND_UNMARK);","lastModifiedDate":"2023-02-28"},{"lineNumber":115,"author":{"gitId":"darrenangwx"},"content":"        System.out.println(task);","lastModifiedDate":"2023-02-28"},{"lineNumber":116,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":117,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":118,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":119,"author":{"gitId":"darrenangwx"},"content":"     * Delete the specified task and print the list of user tasks.","lastModifiedDate":"2023-02-28"},{"lineNumber":120,"author":{"gitId":"darrenangwx"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":121,"author":{"gitId":"darrenangwx"},"content":"     * @param ui               The Ui instance. Use to display messages to users.","lastModifiedDate":"2023-02-28"},{"lineNumber":122,"author":{"gitId":"darrenangwx"},"content":"     * @param storage          The storage instance. Use to write data into the text file.","lastModifiedDate":"2023-02-28"},{"lineNumber":123,"author":{"gitId":"darrenangwx"},"content":"     * @param taskNumberInList The task number to be removed from the list.","lastModifiedDate":"2023-02-28"},{"lineNumber":124,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":125,"author":{"gitId":"darrenangwx"},"content":"    public void deleteAndPrintTask(TextUi ui, Storage storage, int taskNumberInList) {","lastModifiedDate":"2023-02-28"},{"lineNumber":126,"author":{"gitId":"darrenangwx"},"content":"        Task task \u003d listOfTasks.get(taskNumberInList);","lastModifiedDate":"2023-02-28"},{"lineNumber":127,"author":{"gitId":"darrenangwx"},"content":"        listOfTasks.remove(taskNumberInList);","lastModifiedDate":"2023-02-28"},{"lineNumber":128,"author":{"gitId":"darrenangwx"},"content":"        try {","lastModifiedDate":"2023-02-28"},{"lineNumber":129,"author":{"gitId":"darrenangwx"},"content":"            storage.writeToFile(listOfTasks);","lastModifiedDate":"2023-02-28"},{"lineNumber":130,"author":{"gitId":"darrenangwx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-28"},{"lineNumber":131,"author":{"gitId":"darrenangwx"},"content":"            ui.printMessage(String.format(Messages.GENERIC_ERROR, e));","lastModifiedDate":"2023-02-28"},{"lineNumber":132,"author":{"gitId":"darrenangwx"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":133,"author":{"gitId":"darrenangwx"},"content":"        ui.printMessage(Messages.MESSAGE_COMMAND_DELETE);","lastModifiedDate":"2023-02-28"},{"lineNumber":134,"author":{"gitId":"darrenangwx"},"content":"        System.out.println(task);","lastModifiedDate":"2023-02-28"},{"lineNumber":135,"author":{"gitId":"darrenangwx"},"content":"        ui.printMessage(String.format(Messages.MESSAGE_COMMAND_LIST_SIZE, listOfTasks.size()));","lastModifiedDate":"2023-02-28"},{"lineNumber":136,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":137,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":138,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":139,"author":{"gitId":"darrenangwx"},"content":"     * Add the user specified task and print out the list of user tasks.","lastModifiedDate":"2023-02-28"},{"lineNumber":140,"author":{"gitId":"darrenangwx"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":141,"author":{"gitId":"darrenangwx"},"content":"     * @param task    The task object to be added. (Todo, Deadline, Event)","lastModifiedDate":"2023-02-28"},{"lineNumber":142,"author":{"gitId":"darrenangwx"},"content":"     * @param ui      The Ui instance. Use to display messages to users.","lastModifiedDate":"2023-02-28"},{"lineNumber":143,"author":{"gitId":"darrenangwx"},"content":"     * @param storage The storage instance. Use to write data into the text file.","lastModifiedDate":"2023-02-28"},{"lineNumber":144,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":145,"author":{"gitId":"darrenangwx"},"content":"    public void addAndPrintTask(Task task, TextUi ui, Storage storage) {","lastModifiedDate":"2023-02-28"},{"lineNumber":146,"author":{"gitId":"darrenangwx"},"content":"        listOfTasks.add(task);","lastModifiedDate":"2023-02-28"},{"lineNumber":147,"author":{"gitId":"darrenangwx"},"content":"        ui.printMessage(Messages.MESSAGE_COMMAND_ADD_TASK);","lastModifiedDate":"2023-02-28"},{"lineNumber":148,"author":{"gitId":"darrenangwx"},"content":"        System.out.println(task);","lastModifiedDate":"2023-02-28"},{"lineNumber":149,"author":{"gitId":"darrenangwx"},"content":"        ui.printMessage(String.format(Messages.MESSAGE_COMMAND_LIST_SIZE, listOfTasks.size()));","lastModifiedDate":"2023-02-28"},{"lineNumber":150,"author":{"gitId":"darrenangwx"},"content":"        try {","lastModifiedDate":"2023-02-28"},{"lineNumber":151,"author":{"gitId":"darrenangwx"},"content":"            storage.writeToFile(listOfTasks);","lastModifiedDate":"2023-02-28"},{"lineNumber":152,"author":{"gitId":"darrenangwx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-28"},{"lineNumber":153,"author":{"gitId":"darrenangwx"},"content":"            ui.printMessage(String.format(Messages.GENERIC_ERROR, e));","lastModifiedDate":"2023-02-28"},{"lineNumber":154,"author":{"gitId":"darrenangwx"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":155,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":156,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":157,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":158,"author":{"gitId":"darrenangwx"},"content":"     * Print out the tasks in the list.","lastModifiedDate":"2023-02-28"},{"lineNumber":159,"author":{"gitId":"darrenangwx"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":160,"author":{"gitId":"darrenangwx"},"content":"     * @param ui The Ui instance. Use to display messages to users.","lastModifiedDate":"2023-02-28"},{"lineNumber":161,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":162,"author":{"gitId":"darrenangwx"},"content":"    public void listTasks(TextUi ui) {","lastModifiedDate":"2023-02-28"},{"lineNumber":163,"author":{"gitId":"darrenangwx"},"content":"        if (listOfTasks.isEmpty()) {","lastModifiedDate":"2023-02-28"},{"lineNumber":164,"author":{"gitId":"darrenangwx"},"content":"            ui.printMessage(Messages.MESSAGE_COMMAND_LIST_EMPTY);","lastModifiedDate":"2023-02-28"},{"lineNumber":165,"author":{"gitId":"darrenangwx"},"content":"        } else {","lastModifiedDate":"2023-02-28"},{"lineNumber":166,"author":{"gitId":"darrenangwx"},"content":"            ui.printMessage(Messages.MESSAGE_COMMAND_LIST_TASKS);","lastModifiedDate":"2023-02-28"},{"lineNumber":167,"author":{"gitId":"darrenangwx"},"content":"            Task task;","lastModifiedDate":"2023-02-28"},{"lineNumber":168,"author":{"gitId":"darrenangwx"},"content":"            for (int i \u003d 0; i \u003c listOfTasks.size(); i++) {","lastModifiedDate":"2023-02-28"},{"lineNumber":169,"author":{"gitId":"darrenangwx"},"content":"                task \u003d listOfTasks.get(i);","lastModifiedDate":"2023-02-28"},{"lineNumber":170,"author":{"gitId":"darrenangwx"},"content":"                System.out.println(i + 1 + \".\" + task);","lastModifiedDate":"2023-02-28"},{"lineNumber":171,"author":{"gitId":"darrenangwx"},"content":"            }","lastModifiedDate":"2023-02-28"},{"lineNumber":172,"author":{"gitId":"darrenangwx"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":173,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":174,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":175,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":176,"author":{"gitId":"darrenangwx"},"content":"     * Check if the task number is a valid number in the list.","lastModifiedDate":"2023-02-28"},{"lineNumber":177,"author":{"gitId":"darrenangwx"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":178,"author":{"gitId":"darrenangwx"},"content":"     * @param taskNumberInList The task number given.","lastModifiedDate":"2023-02-28"},{"lineNumber":179,"author":{"gitId":"darrenangwx"},"content":"     * @return true if it is a number that exist in the list. false otherwise.","lastModifiedDate":"2023-02-28"},{"lineNumber":180,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":181,"author":{"gitId":"darrenangwx"},"content":"    public static boolean isValidTaskNumber(int taskNumberInList) {","lastModifiedDate":"2023-02-28"},{"lineNumber":182,"author":{"gitId":"darrenangwx"},"content":"        if (taskNumberInList \u003e\u003d 0 \u0026\u0026 taskNumberInList \u003c listOfTasks.size()) {","lastModifiedDate":"2023-02-28"},{"lineNumber":183,"author":{"gitId":"darrenangwx"},"content":"            return true;","lastModifiedDate":"2023-02-28"},{"lineNumber":184,"author":{"gitId":"darrenangwx"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":185,"author":{"gitId":"darrenangwx"},"content":"        return false;","lastModifiedDate":"2023-02-28"},{"lineNumber":186,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":187,"author":{"gitId":"darrenangwx"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"darrenangwx":187}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenangwx"},"content":"package task;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"darrenangwx"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"darrenangwx"},"content":"     * A constructor that accepts the description specified by the user.","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"darrenangwx"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"darrenangwx"},"content":"     * @param description The description of the deadline.","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"darrenangwx"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"darrenangwx"},"content":"        super(description);","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"darrenangwx"},"content":"     * Set the toString parameter to print out a readable string.","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"darrenangwx"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"darrenangwx"},"content":"     * @return The readable string.","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"darrenangwx"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"darrenangwx"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"darrenangwx"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"darrenangwx"},"content":"     * Formats the string into a savable string.","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"darrenangwx"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"darrenangwx"},"content":"     * @return A string that can be saved into a file.","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"darrenangwx"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"darrenangwx"},"content":"    public String savableString() {","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"darrenangwx"},"content":"        return \"T|\" + super.savableString();","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"darrenangwx"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"darrenangwx":35}},{"path":"src/main/java/ui/TextUi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenangwx"},"content":"package ui;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"darrenangwx"},"content":"import java.io.InputStream;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"darrenangwx"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"darrenangwx"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"darrenangwx"},"content":"/**","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"darrenangwx"},"content":" * A Class to handle user related interactions.","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"darrenangwx"},"content":" */","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"darrenangwx"},"content":"public class TextUi {","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"darrenangwx"},"content":"    private final Scanner in;","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"darrenangwx"},"content":"    private final PrintStream out;","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"darrenangwx"},"content":"     * Constructor to call the other constructor.","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"darrenangwx"},"content":"    public TextUi() {","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"darrenangwx"},"content":"        this(System.in, System.out);","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"darrenangwx"},"content":"     * Set the scanner and printstream of TextUi","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"darrenangwx"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"darrenangwx"},"content":"     * @param in  the Scanner of TextUi.","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"darrenangwx"},"content":"     * @param out the PrintStream of TextUi.","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"darrenangwx"},"content":"    public TextUi(InputStream in, PrintStream out) {","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"darrenangwx"},"content":"        this.in \u003d new Scanner(in);","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"darrenangwx"},"content":"        this.out \u003d out;","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"darrenangwx"},"content":"     * Checks what the user typed and ignore user inputs if they are empty, only spaces, or only line breaks.","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"darrenangwx"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"darrenangwx"},"content":"     * @param fullUserInput What the user typed in as inputs.","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"darrenangwx"},"content":"     * @return true if inputs are empty, only spaces, or only line breaks.","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"darrenangwx"},"content":"    private boolean shouldIgnoreEmpty(String fullUserInput) {","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"darrenangwx"},"content":"        return fullUserInput.trim().isEmpty();","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"darrenangwx"},"content":"     * Ask the user for an input.","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"darrenangwx"},"content":"     * It ignores whitespaces and line breaks.","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"darrenangwx"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"darrenangwx"},"content":"     * @return the command with the input the user typed.","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"darrenangwx"},"content":"    public String getUserInput() {","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"darrenangwx"},"content":"        String fullUserInput \u003d \"\";","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"darrenangwx"},"content":"        while (shouldIgnoreEmpty(fullUserInput)) {","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"darrenangwx"},"content":"            System.out.print(\"\u003e\");","lastModifiedDate":"2023-02-28"},{"lineNumber":52,"author":{"gitId":"darrenangwx"},"content":"            fullUserInput \u003d in.nextLine();","lastModifiedDate":"2023-02-28"},{"lineNumber":53,"author":{"gitId":"darrenangwx"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":54,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":55,"author":{"gitId":"darrenangwx"},"content":"        return fullUserInput;","lastModifiedDate":"2023-02-28"},{"lineNumber":56,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":57,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":58,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":59,"author":{"gitId":"darrenangwx"},"content":"     * Print the specified message to the user.","lastModifiedDate":"2023-02-28"},{"lineNumber":60,"author":{"gitId":"darrenangwx"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":61,"author":{"gitId":"darrenangwx"},"content":"     * @param message The specified message to be shown to the user.","lastModifiedDate":"2023-02-28"},{"lineNumber":62,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":63,"author":{"gitId":"darrenangwx"},"content":"    public void printMessage(String message) {","lastModifiedDate":"2023-02-28"},{"lineNumber":64,"author":{"gitId":"darrenangwx"},"content":"        System.out.println(message);","lastModifiedDate":"2023-02-28"},{"lineNumber":65,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":66,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":67,"author":{"gitId":"darrenangwx"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":68,"author":{"gitId":"darrenangwx"},"content":"     * Print out the logo of the cmd application.","lastModifiedDate":"2023-02-28"},{"lineNumber":69,"author":{"gitId":"darrenangwx"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":70,"author":{"gitId":"darrenangwx"},"content":"    public void printBanner() {","lastModifiedDate":"2023-02-28"},{"lineNumber":71,"author":{"gitId":"darrenangwx"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-02-28"},{"lineNumber":72,"author":{"gitId":"darrenangwx"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-02-28"},{"lineNumber":73,"author":{"gitId":"darrenangwx"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-02-28"},{"lineNumber":74,"author":{"gitId":"darrenangwx"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-02-28"},{"lineNumber":75,"author":{"gitId":"darrenangwx"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-02-28"},{"lineNumber":76,"author":{"gitId":"darrenangwx"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2023-02-28"},{"lineNumber":77,"author":{"gitId":"darrenangwx"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");","lastModifiedDate":"2023-02-28"},{"lineNumber":78,"author":{"gitId":"darrenangwx"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-02-28"},{"lineNumber":79,"author":{"gitId":"darrenangwx"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":80,"author":{"gitId":"darrenangwx"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":81,"author":{"gitId":"darrenangwx"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"darrenangwx":81}},{"path":"text-ui-test/data/tasklist.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"darrenangwx"},"content":"T|0| join sports club","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"darrenangwx"},"content":"T|0| do something","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"darrenangwx"},"content":"D|0| return book | June 6th","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"darrenangwx"},"content":"E|0| project meeting |from: Aug 6th to: 4pm","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"darrenangwx"},"content":"T|0| join sports club","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"darrenangwx"},"content":"T|0| read book","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"darrenangwx"},"content":"T|0| ","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"darrenangwx"},"content":"T|0| borrow book","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"darrenangwx"},"content":"D|0| return book | June 6th","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"darrenangwx"},"content":"E|0| project meeting |from: Aug 6th to: 4pm","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"darrenangwx"},"content":"T|0| join sports club","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"darrenangwx"},"content":"T|0| read book","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"darrenangwx"},"content":"T|0| borrow book","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"darrenangwx"},"content":"D|0| return book | June 6th","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"darrenangwx"},"content":"E|0| project meeting |from: Aug 6th to: 4pm","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"darrenangwx"},"content":"T|0| join sports club","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"darrenangwx"},"content":"T|0| read book","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"darrenangwx"},"content":"T|0| borrow book","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"darrenangwx"},"content":"D|0| return book | June 6th","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"darrenangwx"},"content":"E|0| project meeting |from: Aug 6th to: 4pm","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"darrenangwx"},"content":"T|0| join sports club","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"darrenangwx"},"content":"T|0| read book","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"darrenangwx":22}},{"path":"text-ui-test/data/test.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"darrenangwx"},"content":"[T][ ] borrow book","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"darrenangwx"},"content":"[D][ ] return book (by: June 6th)","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"darrenangwx"},"content":"[E][ ] project meeting (from: Aug 6th to: 4pm)","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"darrenangwx"},"content":"[T][ ] join sports club","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"darrenangwx"},"content":"[T][ ] read book","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"darrenangwx":5}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"darrenangwx"},"content":"todo borrow book","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"darrenangwx"},"content":"deadline return book /by June 6th","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"darrenangwx"},"content":"event project meeting /from Aug 6th /to 4pm","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"darrenangwx"},"content":"todo join sports club","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"darrenangwx"},"content":"todo read book","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"darrenangwx"},"content":"list","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"darrenangwx"},"content":"mark 2","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"darrenangwx"},"content":"mark 1","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"darrenangwx"},"content":"mark 4","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"darrenangwx"},"content":"list","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"darrenangwx"},"content":"unmark 2","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"darrenangwx"},"content":"list","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"darrenangwx"},"content":"mark 20","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"darrenangwx"},"content":"mark -1","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"darrenangwx"},"content":"mark w","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"darrenangwx"},"content":"unmark 20","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"darrenangwx"},"content":"unmark -1","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"darrenangwx"},"content":"unmark w","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"darrenangwx"},"content":"deadline","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"darrenangwx"},"content":"todo","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"darrenangwx"},"content":"deadline return book by June 6th","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"darrenangwx"},"content":"event project meeting from Aug 6th /to 4pm","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"darrenangwx"},"content":"list","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"darrenangwx"},"content":"delete 4","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"darrenangwx"},"content":"delete -1","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"darrenangwx"},"content":"delete 999","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"darrenangwx"},"content":"delete 1","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"darrenangwx"},"content":"list","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"darrenangwx"},"content":"bye","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"darrenangwx":29}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"darrenangwx"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\exceptions\\*.java ..\\src\\main\\java\\task\\*.java ..\\src\\main\\java\\storage\\*.java","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"darrenangwx"},"content":"java -classpath ..\\bin\\ duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"darrenangwx":2,"-":19}}]
