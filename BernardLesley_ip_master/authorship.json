[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"BernardLesley"},"content":"Duke is personal chatbot help the user to keep track task, such as todo, deadline, event","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"BernardLesley"},"content":"### Add new Tasks: ```todo``` ```deadline``` ```event```","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"BernardLesley"},"content":"There are three task options:","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"BernardLesley"},"content":"1. ```todo```: is a task without any start date or end date.","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":13,"author":{"gitId":"BernardLesley"},"content":"##### Command","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":15,"author":{"gitId":"BernardLesley"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"BernardLesley"},"content":"todo \u003cdescription\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"BernardLesley"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"BernardLesley"},"content":"##### Usage ","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"BernardLesley"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"BernardLesley"},"content":"todo clean room","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"BernardLesley"},"content":"\t____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"BernardLesley"},"content":"\tGot it. I\u0027ve added this task:","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"BernardLesley"},"content":"\t[T][ ] clean room","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"BernardLesley"},"content":"\tNow you have 1 tasks in the list.","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"BernardLesley"},"content":"\t____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"BernardLesley"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"BernardLesley"},"content":"2. ```deadline```: is a task with a deadline (end date)","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"BernardLesley"},"content":"##### Command","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"BernardLesley"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"BernardLesley"},"content":"deadline \u003cdescription\u003e /by \u003cend datetime\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"BernardLesley"},"content":"Notes: the format of datetime should be dd-MM-yyyy HH:mm","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"BernardLesley"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":39,"author":{"gitId":"BernardLesley"},"content":"##### Usage ","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":41,"author":{"gitId":"BernardLesley"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"BernardLesley"},"content":"deadline submit assignment /by 03-03-2023 23:59","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"BernardLesley"},"content":"\t____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"BernardLesley"},"content":"\tGot it. I\u0027ve added this task:","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"BernardLesley"},"content":"\t[D][ ] submit assignment (by: Mar 03 2023 11:59 PM)","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"BernardLesley"},"content":"\tNow you have 2 tasks in the list.","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"BernardLesley"},"content":"\t____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"BernardLesley"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"BernardLesley"},"content":"3. ```event```: is a task with a start date and a end date","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"BernardLesley"},"content":"##### Command","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"BernardLesley"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"BernardLesley"},"content":"event \u003cdescription\u003e /from \u003cstart datetime\u003e /to \u003cend datetime\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"BernardLesley"},"content":"Notes: the format of datetime should be dd-MM-yyyy HH:mm","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"BernardLesley"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"BernardLesley"},"content":"##### Usage ","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"BernardLesley"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"BernardLesley"},"content":"event team project meeting /from 06-03-2023 19:00 /to 06-03-2023 21:00","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"BernardLesley"},"content":"\t____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"BernardLesley"},"content":"\tGot it. I\u0027ve added this task:","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"BernardLesley"},"content":"\t[E][ ] team project meeting (from: Mar 06 2023 07:00 PM to: Mar 06 2023 09:00 PM)","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"BernardLesley"},"content":"\tNow you have 3 tasks in the list.","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"BernardLesley"},"content":"\t____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"BernardLesley"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"BernardLesley"},"content":"### List all tasks: ```list```","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"BernardLesley"},"content":"##### Command","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"BernardLesley"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"BernardLesley"},"content":"list","lastModifiedDate":"2023-03-03"},{"lineNumber":76,"author":{"gitId":"BernardLesley"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"BernardLesley"},"content":"##### Usage ","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":80,"author":{"gitId":"BernardLesley"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"BernardLesley"},"content":"list","lastModifiedDate":"2023-03-03"},{"lineNumber":82,"author":{"gitId":"BernardLesley"},"content":"\t____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":83,"author":{"gitId":"BernardLesley"},"content":"\tHere are the tasks in your list","lastModifiedDate":"2023-03-03"},{"lineNumber":84,"author":{"gitId":"BernardLesley"},"content":"\t1. [T][ ] buy errands","lastModifiedDate":"2023-03-03"},{"lineNumber":85,"author":{"gitId":"BernardLesley"},"content":"\t2. [D][ ] submit assignment (by: Mar 03 2023 11:59 PM)","lastModifiedDate":"2023-03-03"},{"lineNumber":86,"author":{"gitId":"BernardLesley"},"content":"\t3. [E][ ] team project meeting (from: Mar 06 2023 07:00 PM to: Mar 06 2023 09:00 PM)","lastModifiedDate":"2023-03-03"},{"lineNumber":87,"author":{"gitId":"BernardLesley"},"content":"\t____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":88,"author":{"gitId":"BernardLesley"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":89,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":90,"author":{"gitId":"BernardLesley"},"content":"### Find tasks: ```find```","lastModifiedDate":"2023-03-03"},{"lineNumber":91,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":92,"author":{"gitId":"BernardLesley"},"content":"This feature will show all task that contain \u003ckeyword\u003e in the description of the task","lastModifiedDate":"2023-03-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":94,"author":{"gitId":"BernardLesley"},"content":"##### Command","lastModifiedDate":"2023-03-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":96,"author":{"gitId":"BernardLesley"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":97,"author":{"gitId":"BernardLesley"},"content":"find \u003ckeyword\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":98,"author":{"gitId":"BernardLesley"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":99,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":100,"author":{"gitId":"BernardLesley"},"content":"##### Usage ","lastModifiedDate":"2023-03-03"},{"lineNumber":101,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":102,"author":{"gitId":"BernardLesley"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":103,"author":{"gitId":"BernardLesley"},"content":"find team","lastModifiedDate":"2023-03-03"},{"lineNumber":104,"author":{"gitId":"BernardLesley"},"content":"\t____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":105,"author":{"gitId":"BernardLesley"},"content":"\tHere are the tasks in your list","lastModifiedDate":"2023-03-03"},{"lineNumber":106,"author":{"gitId":"BernardLesley"},"content":"\t3. [E][ ] team project meeting (from: Mar 06 2023 07:00 PM to: Mar 06 2023 09:00 PM)","lastModifiedDate":"2023-03-03"},{"lineNumber":107,"author":{"gitId":"BernardLesley"},"content":"\t4. [T][ ] create new team repo","lastModifiedDate":"2023-03-03"},{"lineNumber":108,"author":{"gitId":"BernardLesley"},"content":"\t____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":109,"author":{"gitId":"BernardLesley"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":111,"author":{"gitId":"BernardLesley"},"content":"### Find date: ```find-date```","lastModifiedDate":"2023-03-03"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":113,"author":{"gitId":"BernardLesley"},"content":"This feature will show all task that contain \u003cdate\u003e in the start date / end date of the task","lastModifiedDate":"2023-03-03"},{"lineNumber":114,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":115,"author":{"gitId":"BernardLesley"},"content":"##### Command","lastModifiedDate":"2023-03-03"},{"lineNumber":116,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":117,"author":{"gitId":"BernardLesley"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":118,"author":{"gitId":"BernardLesley"},"content":"find-date \u003cdate\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":119,"author":{"gitId":"BernardLesley"},"content":"Notes: the format of date should be dd-MM-yyyy","lastModifiedDate":"2023-03-03"},{"lineNumber":120,"author":{"gitId":"BernardLesley"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":121,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":122,"author":{"gitId":"BernardLesley"},"content":"##### Usage ","lastModifiedDate":"2023-03-03"},{"lineNumber":123,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":124,"author":{"gitId":"BernardLesley"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":125,"author":{"gitId":"BernardLesley"},"content":"find-date 03-03-2023","lastModifiedDate":"2023-03-03"},{"lineNumber":126,"author":{"gitId":"BernardLesley"},"content":"\t____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":127,"author":{"gitId":"BernardLesley"},"content":"\tHere are the tasks in your list","lastModifiedDate":"2023-03-03"},{"lineNumber":128,"author":{"gitId":"BernardLesley"},"content":"\t1. [D][ ] submit assignment (by: Mar 03 2023 11:59 PM)","lastModifiedDate":"2023-03-03"},{"lineNumber":129,"author":{"gitId":"BernardLesley"},"content":"\t____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":130,"author":{"gitId":"BernardLesley"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":131,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":132,"author":{"gitId":"BernardLesley"},"content":"### Delete task: ```delete```","lastModifiedDate":"2023-03-03"},{"lineNumber":133,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":134,"author":{"gitId":"BernardLesley"},"content":"##### Command","lastModifiedDate":"2023-03-03"},{"lineNumber":135,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":136,"author":{"gitId":"BernardLesley"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":137,"author":{"gitId":"BernardLesley"},"content":"delete \u003cindex_task\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":138,"author":{"gitId":"BernardLesley"},"content":"Notes: index_task must be within the range of task list","lastModifiedDate":"2023-03-03"},{"lineNumber":139,"author":{"gitId":"BernardLesley"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":140,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":141,"author":{"gitId":"BernardLesley"},"content":"##### Usage","lastModifiedDate":"2023-03-03"},{"lineNumber":142,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":143,"author":{"gitId":"BernardLesley"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":144,"author":{"gitId":"BernardLesley"},"content":"list","lastModifiedDate":"2023-03-03"},{"lineNumber":145,"author":{"gitId":"BernardLesley"},"content":"\t____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":146,"author":{"gitId":"BernardLesley"},"content":"\tHere are the tasks in your list","lastModifiedDate":"2023-03-03"},{"lineNumber":147,"author":{"gitId":"BernardLesley"},"content":"\t1. [T][ ] buy errands","lastModifiedDate":"2023-03-03"},{"lineNumber":148,"author":{"gitId":"BernardLesley"},"content":"\t2. [D][ ] submit assignment (by: Mar 03 2023 11:59 PM)","lastModifiedDate":"2023-03-03"},{"lineNumber":149,"author":{"gitId":"BernardLesley"},"content":"\t3. [E][ ] team project meeting (from: Mar 06 2023 07:00 PM to: Mar 06 2023 09:00 PM)","lastModifiedDate":"2023-03-03"},{"lineNumber":150,"author":{"gitId":"BernardLesley"},"content":"\t4. [T][ ] create new team repo","lastModifiedDate":"2023-03-03"},{"lineNumber":151,"author":{"gitId":"BernardLesley"},"content":"\t____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":152,"author":{"gitId":"BernardLesley"},"content":"delete 1","lastModifiedDate":"2023-03-03"},{"lineNumber":153,"author":{"gitId":"BernardLesley"},"content":"\t____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":154,"author":{"gitId":"BernardLesley"},"content":"\tNoted. I\u0027ve removed this task:","lastModifiedDate":"2023-03-03"},{"lineNumber":155,"author":{"gitId":"BernardLesley"},"content":"\t[T][ ] buy errands","lastModifiedDate":"2023-03-03"},{"lineNumber":156,"author":{"gitId":"BernardLesley"},"content":"\tNow you have 3 tasks in the list.","lastModifiedDate":"2023-03-03"},{"lineNumber":157,"author":{"gitId":"BernardLesley"},"content":"\t____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":158,"author":{"gitId":"BernardLesley"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":159,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":160,"author":{"gitId":"BernardLesley"},"content":"### Mark task: ```mark```","lastModifiedDate":"2023-03-03"},{"lineNumber":161,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":162,"author":{"gitId":"BernardLesley"},"content":"##### Command","lastModifiedDate":"2023-03-03"},{"lineNumber":163,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":164,"author":{"gitId":"BernardLesley"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":165,"author":{"gitId":"BernardLesley"},"content":"mark \u003cindex_task\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":166,"author":{"gitId":"BernardLesley"},"content":"Notes: index_task must be within the range of task list","lastModifiedDate":"2023-03-03"},{"lineNumber":167,"author":{"gitId":"BernardLesley"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":169,"author":{"gitId":"BernardLesley"},"content":"##### Usage","lastModifiedDate":"2023-03-03"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":171,"author":{"gitId":"BernardLesley"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":172,"author":{"gitId":"BernardLesley"},"content":"list","lastModifiedDate":"2023-03-03"},{"lineNumber":173,"author":{"gitId":"BernardLesley"},"content":"\t____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":174,"author":{"gitId":"BernardLesley"},"content":"\tHere are the tasks in your list","lastModifiedDate":"2023-03-03"},{"lineNumber":175,"author":{"gitId":"BernardLesley"},"content":"\t1. [D][ ] submit assignment (by: Mar 03 2023 11:59 PM)","lastModifiedDate":"2023-03-03"},{"lineNumber":176,"author":{"gitId":"BernardLesley"},"content":"\t2. [E][ ] team project meeting (from: Mar 06 2023 07:00 PM to: Mar 06 2023 09:00 PM)","lastModifiedDate":"2023-03-03"},{"lineNumber":177,"author":{"gitId":"BernardLesley"},"content":"\t3. [T][ ] create new team repo","lastModifiedDate":"2023-03-03"},{"lineNumber":178,"author":{"gitId":"BernardLesley"},"content":"\t____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":179,"author":{"gitId":"BernardLesley"},"content":"mark 2","lastModifiedDate":"2023-03-03"},{"lineNumber":180,"author":{"gitId":"BernardLesley"},"content":"\t____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":181,"author":{"gitId":"BernardLesley"},"content":"\tNice! I\u0027ve marked this task as done:","lastModifiedDate":"2023-03-03"},{"lineNumber":182,"author":{"gitId":"BernardLesley"},"content":"\t[E][X] team project meeting (from: Mar 06 2023 07:00 PM to: Mar 06 2023 09:00 PM)","lastModifiedDate":"2023-03-03"},{"lineNumber":183,"author":{"gitId":"BernardLesley"},"content":"\t____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":184,"author":{"gitId":"BernardLesley"},"content":"list","lastModifiedDate":"2023-03-03"},{"lineNumber":185,"author":{"gitId":"BernardLesley"},"content":"\t____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":186,"author":{"gitId":"BernardLesley"},"content":"\tHere are the tasks in your list","lastModifiedDate":"2023-03-03"},{"lineNumber":187,"author":{"gitId":"BernardLesley"},"content":"\t1. [D][ ] submit assignment (by: Mar 03 2023 11:59 PM)","lastModifiedDate":"2023-03-03"},{"lineNumber":188,"author":{"gitId":"BernardLesley"},"content":"\t2. [E][X] team project meeting (from: Mar 06 2023 07:00 PM to: Mar 06 2023 09:00 PM)","lastModifiedDate":"2023-03-03"},{"lineNumber":189,"author":{"gitId":"BernardLesley"},"content":"\t3. [T][ ] create new team repo","lastModifiedDate":"2023-03-03"},{"lineNumber":190,"author":{"gitId":"BernardLesley"},"content":"\t____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":191,"author":{"gitId":"BernardLesley"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":192,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":193,"author":{"gitId":"BernardLesley"},"content":"### Unmark task: ```unmark```","lastModifiedDate":"2023-03-03"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":195,"author":{"gitId":"BernardLesley"},"content":"##### Command","lastModifiedDate":"2023-03-03"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":197,"author":{"gitId":"BernardLesley"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":198,"author":{"gitId":"BernardLesley"},"content":"unmark \u003cindex_task\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":199,"author":{"gitId":"BernardLesley"},"content":"Notes: index_task must be within the range of task list","lastModifiedDate":"2023-03-03"},{"lineNumber":200,"author":{"gitId":"BernardLesley"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":202,"author":{"gitId":"BernardLesley"},"content":"##### Usage","lastModifiedDate":"2023-03-03"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":204,"author":{"gitId":"BernardLesley"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":205,"author":{"gitId":"BernardLesley"},"content":"list","lastModifiedDate":"2023-03-03"},{"lineNumber":206,"author":{"gitId":"BernardLesley"},"content":"\t____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":207,"author":{"gitId":"BernardLesley"},"content":"\tHere are the tasks in your list","lastModifiedDate":"2023-03-03"},{"lineNumber":208,"author":{"gitId":"BernardLesley"},"content":"\t1. [D][X] submit assignment (by: Mar 03 2023 11:59 PM)","lastModifiedDate":"2023-03-03"},{"lineNumber":209,"author":{"gitId":"BernardLesley"},"content":"\t2. [E][X] team project meeting (from: Mar 06 2023 07:00 PM to: Mar 06 2023 09:00 PM)","lastModifiedDate":"2023-03-03"},{"lineNumber":210,"author":{"gitId":"BernardLesley"},"content":"\t3. [T][X] create new team repo","lastModifiedDate":"2023-03-03"},{"lineNumber":211,"author":{"gitId":"BernardLesley"},"content":"\t____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":212,"author":{"gitId":"BernardLesley"},"content":"unmark 3","lastModifiedDate":"2023-03-03"},{"lineNumber":213,"author":{"gitId":"BernardLesley"},"content":"\t____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":214,"author":{"gitId":"BernardLesley"},"content":"\tOK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2023-03-03"},{"lineNumber":215,"author":{"gitId":"BernardLesley"},"content":"\t[T][ ] create new team repo","lastModifiedDate":"2023-03-03"},{"lineNumber":216,"author":{"gitId":"BernardLesley"},"content":"\t____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":217,"author":{"gitId":"BernardLesley"},"content":"list","lastModifiedDate":"2023-03-03"},{"lineNumber":218,"author":{"gitId":"BernardLesley"},"content":"\t____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":219,"author":{"gitId":"BernardLesley"},"content":"\tHere are the tasks in your list","lastModifiedDate":"2023-03-03"},{"lineNumber":220,"author":{"gitId":"BernardLesley"},"content":"\t1. [D][X] submit assignment (by: Mar 03 2023 11:59 PM)","lastModifiedDate":"2023-03-03"},{"lineNumber":221,"author":{"gitId":"BernardLesley"},"content":"\t2. [E][X] team project meeting (from: Mar 06 2023 07:00 PM to: Mar 06 2023 09:00 PM)","lastModifiedDate":"2023-03-03"},{"lineNumber":222,"author":{"gitId":"BernardLesley"},"content":"\t3. [T][ ] create new team repo","lastModifiedDate":"2023-03-03"},{"lineNumber":223,"author":{"gitId":"BernardLesley"},"content":"\t____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":224,"author":{"gitId":"BernardLesley"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":226,"author":{"gitId":"BernardLesley"},"content":"### Exit: ```bye```","lastModifiedDate":"2023-03-03"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":228,"author":{"gitId":"BernardLesley"},"content":"##### Command","lastModifiedDate":"2023-03-03"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":230,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":231,"author":{"gitId":"BernardLesley"},"content":"bye","lastModifiedDate":"2023-03-03"},{"lineNumber":232,"author":{"gitId":"BernardLesley"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":234,"author":{"gitId":"BernardLesley"},"content":"##### Usage ","lastModifiedDate":"2023-03-03"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":236,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":237,"author":{"gitId":"BernardLesley"},"content":"bye","lastModifiedDate":"2023-03-03"},{"lineNumber":238,"author":{"gitId":"BernardLesley"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":239,"author":{"gitId":"BernardLesley"},"content":"    Bye. Hope to see you again soon!","lastModifiedDate":"2023-03-03"},{"lineNumber":240,"author":{"gitId":"BernardLesley"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":241,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"BernardLesley":212,"-":29}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BernardLesley"},"content":"package duke;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"BernardLesley"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"BernardLesley"},"content":"import duke.commands.Command;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"BernardLesley"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"BernardLesley"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"BernardLesley"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"BernardLesley"},"content":"import duke.ui.TextUi;","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"BernardLesley"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"BernardLesley"},"content":" * The Duke class represents the main class of the Duke application.","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"BernardLesley"},"content":" * It handles the creation of the TaskList, Storage and TextUi objects and runs the application by taking in user input","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"BernardLesley"},"content":" * and executing the corresponding command parsed by the Parser class.","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"BernardLesley"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"BernardLesley"},"content":"public class Duke {","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"BernardLesley"},"content":"    private Storage storage;","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"BernardLesley"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"BernardLesley"},"content":"    private TextUi ui;","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"BernardLesley"},"content":"     * Constructor for the Duke class.","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"BernardLesley"},"content":"     * Creates a new TextUi and Storage object and initializes the TaskList object with data read from the file specified","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"BernardLesley"},"content":"     * in the filePath parameter.","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"BernardLesley"},"content":"     * If the file does not exist, the TaskList object is initialized with an empty list of tasks and an error message is displayed.","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"BernardLesley"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"BernardLesley"},"content":"     * @param filePath The path of the file to read data from.","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"BernardLesley"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"BernardLesley"},"content":"        ui \u003d new TextUi();","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"BernardLesley"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"BernardLesley"},"content":"        try {","lastModifiedDate":"2023-02-09"},{"lineNumber":34,"author":{"gitId":"BernardLesley"},"content":"            tasks \u003d new TaskList(storage.readFileContents());","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"BernardLesley"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"BernardLesley"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"BernardLesley"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"BernardLesley"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":40,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":41,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"BernardLesley"},"content":"     * Runs the Duke application by displaying an introduction message and continuously taking in user input","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"BernardLesley"},"content":"     * until the user enters the exit command.","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"BernardLesley"},"content":"     * The user input is parsed by the Parser class and the corresponding Command object is executed.","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"BernardLesley"},"content":"     * The current state of the TaskList is saved to the file specified in the Duke constructor after each command execution.","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"BernardLesley"},"content":"    public void run() {","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"BernardLesley"},"content":"        ui.showIntroduction();","lastModifiedDate":"2023-02-26"},{"lineNumber":49,"author":{"gitId":"BernardLesley"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"BernardLesley"},"content":"        while (!isExit) {","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"BernardLesley"},"content":"            String fullCommand \u003d ui.scanLine();","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"BernardLesley"},"content":"            Command c \u003d Parser.parseCommand(fullCommand);","lastModifiedDate":"2023-02-26"},{"lineNumber":53,"author":{"gitId":"BernardLesley"},"content":"            c.execute(tasks, ui, storage);","lastModifiedDate":"2023-02-26"},{"lineNumber":54,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":55,"author":{"gitId":"BernardLesley"},"content":"            try {","lastModifiedDate":"2023-02-26"},{"lineNumber":56,"author":{"gitId":"BernardLesley"},"content":"                storage.writeToFile(tasks);","lastModifiedDate":"2023-02-26"},{"lineNumber":57,"author":{"gitId":"BernardLesley"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-02-26"},{"lineNumber":58,"author":{"gitId":"BernardLesley"},"content":"                // TODO Auto-generated catch block","lastModifiedDate":"2023-02-26"},{"lineNumber":59,"author":{"gitId":"BernardLesley"},"content":"                e.printStackTrace();","lastModifiedDate":"2023-02-26"},{"lineNumber":60,"author":{"gitId":"BernardLesley"},"content":"            }","lastModifiedDate":"2023-02-15"},{"lineNumber":61,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":62,"author":{"gitId":"BernardLesley"},"content":"            isExit \u003d c.isExit();","lastModifiedDate":"2023-02-26"},{"lineNumber":63,"author":{"gitId":"BernardLesley"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":64,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":65,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":66,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"BernardLesley"},"content":"     * Main method for the Duke application.","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"BernardLesley"},"content":"     * Creates a new Duke object with the specified file path and runs the application.","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"BernardLesley"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"BernardLesley"},"content":"     * @param args The command line arguments.","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"BernardLesley"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-26"},{"lineNumber":73,"author":{"gitId":"BernardLesley"},"content":"        new Duke(\"data.txt\").run();","lastModifiedDate":"2023-02-26"},{"lineNumber":74,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":75,"author":{"gitId":"BernardLesley"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"BernardLesley":75}},{"path":"src/main/java/duke/commands/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BernardLesley"},"content":"package duke.commands;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"BernardLesley"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"BernardLesley"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"BernardLesley"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"BernardLesley"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"BernardLesley"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"BernardLesley"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"BernardLesley"},"content":"import duke.ui.TextUi;","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"BernardLesley"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"BernardLesley"},"content":" * The AddDeadlineCommand class represents a command to add an event to the task list.","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"BernardLesley"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"BernardLesley"},"content":"public class AddDeadlineCommand implements Command {","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"BernardLesley"},"content":"    private String arguments;","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"BernardLesley"},"content":"    private static int INDEX_DESCRIPTION_PARSED \u003d 0;","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"BernardLesley"},"content":"    private static int INDEX_ENDTIME_PARSED \u003d 1;","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"BernardLesley"},"content":"    public static final String COMMAND_WORD \u003d \"deadline\";","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"BernardLesley"},"content":"     * Constructor for the AddDeadlineCommand class.","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"BernardLesley"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"BernardLesley"},"content":"     * @param arguments The arguments to be parsed to create the new Deadline task.","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"BernardLesley"},"content":"    public AddDeadlineCommand(String arguments) {","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"BernardLesley"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"BernardLesley"},"content":"     * Executes the AddDeadlineCommand by parsing the arguments to create a new Deadline task and adding it to the TaskList.","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"BernardLesley"},"content":"     * If the arguments are invalid or incomplete, an error message is displayed.","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"BernardLesley"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"BernardLesley"},"content":"     * @param tasks   The TaskList object containing the list of tasks.","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"BernardLesley"},"content":"     * @param ui      The TextUi object to handle user input and output.","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"BernardLesley"},"content":"     * @param storage The Storage object to handle reading and writing of task data to a file.","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"BernardLesley"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"BernardLesley"},"content":"    public void execute(TaskList tasks, TextUi ui, Storage storage) {","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"BernardLesley"},"content":"        if (!arguments.isBlank()) {","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"BernardLesley"},"content":"            Parser parser \u003d new Parser();","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"BernardLesley"},"content":"            String description \u003d null;","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"BernardLesley"},"content":"            LocalDateTime endTime \u003d null;","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"BernardLesley"},"content":"            String[] parsedString \u003d parser.parseDeadline(arguments);","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"BernardLesley"},"content":"            if (parsedString !\u003d null) {","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"BernardLesley"},"content":"                description \u003d parsedString[INDEX_DESCRIPTION_PARSED];","lastModifiedDate":"2023-02-26"},{"lineNumber":49,"author":{"gitId":"BernardLesley"},"content":"                endTime \u003d parser.parseDateTime(parsedString[INDEX_ENDTIME_PARSED]);","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"BernardLesley"},"content":"            }","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"BernardLesley"},"content":"            if (description !\u003d null \u0026 endTime !\u003d null) {","lastModifiedDate":"2023-02-26"},{"lineNumber":53,"author":{"gitId":"BernardLesley"},"content":"                Task newTask \u003d new Deadline(description, endTime);","lastModifiedDate":"2023-02-26"},{"lineNumber":54,"author":{"gitId":"BernardLesley"},"content":"                tasks.addTask(newTask);","lastModifiedDate":"2023-02-26"},{"lineNumber":55,"author":{"gitId":"BernardLesley"},"content":"                ui.showNewTaskMessage(tasks, newTask);","lastModifiedDate":"2023-02-26"},{"lineNumber":56,"author":{"gitId":"BernardLesley"},"content":"            }","lastModifiedDate":"2023-02-26"},{"lineNumber":57,"author":{"gitId":"BernardLesley"},"content":"        } else {","lastModifiedDate":"2023-02-26"},{"lineNumber":58,"author":{"gitId":"BernardLesley"},"content":"            ui.showPromptEmptyErrorMessage(COMMAND_WORD);","lastModifiedDate":"2023-02-26"},{"lineNumber":59,"author":{"gitId":"BernardLesley"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":60,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":61,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":62,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"BernardLesley"},"content":"     * Returns a boolean value indicating if the command is an exit command.","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"BernardLesley"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"BernardLesley"},"content":"     * @return false since this command is not an exit command.","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"BernardLesley"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"BernardLesley"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-02-26"},{"lineNumber":69,"author":{"gitId":"BernardLesley"},"content":"        return false;","lastModifiedDate":"2023-02-26"},{"lineNumber":70,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":71,"author":{"gitId":"BernardLesley"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"BernardLesley":71}},{"path":"src/main/java/duke/commands/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BernardLesley"},"content":"package duke.commands;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"BernardLesley"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"BernardLesley"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"BernardLesley"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"BernardLesley"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"BernardLesley"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"BernardLesley"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"BernardLesley"},"content":"import duke.ui.TextUi;","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"BernardLesley"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"BernardLesley"},"content":" * The AddEventCommand class represents a command to add a deadline to the task list.","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"BernardLesley"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"BernardLesley"},"content":"public class AddEventCommand implements Command {","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"BernardLesley"},"content":"    private String arguments;","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"BernardLesley"},"content":"    public static final String COMMAND_WORD \u003d \"event\";","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"BernardLesley"},"content":"    private static final int INDEX_DESCRIPTION_PARSED \u003d 0;","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"BernardLesley"},"content":"    private static final int INDEX_STARTTIME_PARSED \u003d 1;","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"BernardLesley"},"content":"    private static final int INDEX_ENDTIME_PARSED \u003d 2;","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"BernardLesley"},"content":"     * Constructor for the AddEventCommand class.","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"BernardLesley"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"BernardLesley"},"content":"     * @param arguments The arguments to be parsed to create the new Deadline task.","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"BernardLesley"},"content":"    public AddEventCommand(String arguments) {","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"BernardLesley"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"BernardLesley"},"content":"     * Executes the AddDeadlineCommand by parsing the arguments to create a new Event task and adding it to the TaskList.","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"BernardLesley"},"content":"     * If the arguments are invalid or incomplete, an error message is displayed.","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"BernardLesley"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"BernardLesley"},"content":"     * @param tasks   The TaskList object containing the list of tasks.","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"BernardLesley"},"content":"     * @param ui      The TextUi object to handle user input and output.","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"BernardLesley"},"content":"     * @param storage The Storage object to handle reading and writing of task data to a file.","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"BernardLesley"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"BernardLesley"},"content":"    public void execute(TaskList tasks, TextUi ui, Storage storage) {","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"BernardLesley"},"content":"        if (!arguments.isBlank()) {","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"BernardLesley"},"content":"            Parser parser \u003d new Parser();","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"BernardLesley"},"content":"            String description \u003d null;","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"BernardLesley"},"content":"            LocalDateTime startTime \u003d null;","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"BernardLesley"},"content":"            LocalDateTime endTime \u003d null;","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"BernardLesley"},"content":"            String[] parsedString \u003d parser.parseEvent(arguments);","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"BernardLesley"},"content":"            if (parsedString !\u003d null) {","lastModifiedDate":"2023-02-26"},{"lineNumber":49,"author":{"gitId":"BernardLesley"},"content":"                description \u003d parsedString[INDEX_DESCRIPTION_PARSED];","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"BernardLesley"},"content":"                startTime \u003d parser.parseDateTime(parsedString[INDEX_STARTTIME_PARSED]);","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"BernardLesley"},"content":"                endTime \u003d parser.parseDateTime(parsedString[INDEX_ENDTIME_PARSED]);","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"BernardLesley"},"content":"            }","lastModifiedDate":"2023-02-26"},{"lineNumber":53,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":54,"author":{"gitId":"BernardLesley"},"content":"            if (description !\u003d null \u0026 startTime !\u003d null \u0026 endTime !\u003d null) {","lastModifiedDate":"2023-02-26"},{"lineNumber":55,"author":{"gitId":"BernardLesley"},"content":"                Task newTask \u003d new Event(description, startTime, endTime);","lastModifiedDate":"2023-02-26"},{"lineNumber":56,"author":{"gitId":"BernardLesley"},"content":"                tasks.addTask(newTask);","lastModifiedDate":"2023-02-26"},{"lineNumber":57,"author":{"gitId":"BernardLesley"},"content":"                ui.showNewTaskMessage(tasks, newTask);","lastModifiedDate":"2023-02-26"},{"lineNumber":58,"author":{"gitId":"BernardLesley"},"content":"            }","lastModifiedDate":"2023-02-26"},{"lineNumber":59,"author":{"gitId":"BernardLesley"},"content":"        } else {","lastModifiedDate":"2023-02-26"},{"lineNumber":60,"author":{"gitId":"BernardLesley"},"content":"            ui.showPromptEmptyErrorMessage(COMMAND_WORD);","lastModifiedDate":"2023-02-26"},{"lineNumber":61,"author":{"gitId":"BernardLesley"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":62,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":63,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":64,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"BernardLesley"},"content":"     * Returns a boolean value indicating if the command is an exit command.","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"BernardLesley"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"BernardLesley"},"content":"     * @return false since this command is not an exit command.","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"BernardLesley"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"BernardLesley"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-02-26"},{"lineNumber":71,"author":{"gitId":"BernardLesley"},"content":"        return false;","lastModifiedDate":"2023-02-26"},{"lineNumber":72,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":73,"author":{"gitId":"BernardLesley"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"BernardLesley":73}},{"path":"src/main/java/duke/commands/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BernardLesley"},"content":"package duke.commands;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"BernardLesley"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"BernardLesley"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"BernardLesley"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"BernardLesley"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"BernardLesley"},"content":"import duke.ui.TextUi;","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"BernardLesley"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"BernardLesley"},"content":" * The AddTodoCommand class represents a command to add a todo to the task list.","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"BernardLesley"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"BernardLesley"},"content":"public class AddTodoCommand implements Command {","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"BernardLesley"},"content":"    private String arguments;","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"BernardLesley"},"content":"    public static final String COMMAND_WORD \u003d \"todo\";","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"BernardLesley"},"content":"     * Constructor for the AddTodoCommand class.","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"BernardLesley"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"BernardLesley"},"content":"     * @param arguments The arguments to be parsed to create the new Todo task.","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"BernardLesley"},"content":"    public AddTodoCommand(String arguments) {","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"BernardLesley"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"BernardLesley"},"content":"     * Executes the AddTodoCommand by parsing the arguments to create a new Todo task and adding it to the TaskList.","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"BernardLesley"},"content":"     * If the arguments are invalid or incomplete, an error message is displayed.","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"BernardLesley"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"BernardLesley"},"content":"     * @param tasks   The TaskList object containing the list of tasks.","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"BernardLesley"},"content":"     * @param ui      The TextUi object to handle user input and output.","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"BernardLesley"},"content":"     * @param storage The Storage object to handle reading and writing of task data to a file.","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"BernardLesley"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"BernardLesley"},"content":"    public void execute(TaskList tasks, TextUi ui, Storage storage) {","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"BernardLesley"},"content":"        if (!arguments.isBlank()) {","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"BernardLesley"},"content":"            Task task \u003d new Todo(arguments);","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"BernardLesley"},"content":"            tasks.addTask(task);","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"BernardLesley"},"content":"            ui.showNewTaskMessage(tasks, task);","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"BernardLesley"},"content":"        } else {","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"BernardLesley"},"content":"            ui.showPromptEmptyErrorMessage(COMMAND_WORD);","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"BernardLesley"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"BernardLesley"},"content":"     * Returns a boolean value indicating if the command is an exit command.","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"BernardLesley"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"BernardLesley"},"content":"     * @return false since this command is not an exit command.","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"BernardLesley"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"BernardLesley"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"BernardLesley"},"content":"        return false;","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":53,"author":{"gitId":"BernardLesley"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"BernardLesley":53}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BernardLesley"},"content":"package duke.commands;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"BernardLesley"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"BernardLesley"},"content":" * The Command interface represents a command object that can be executed.","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"BernardLesley"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"BernardLesley"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"BernardLesley"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"BernardLesley"},"content":"import duke.ui.TextUi;","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"BernardLesley"},"content":"public interface Command {","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"BernardLesley"},"content":"     * Executes the command.","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"BernardLesley"},"content":"     * @param tasks The TaskList object containing the list of tasks.","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"BernardLesley"},"content":"     * @param ui The TextUi object to handle user input and output.","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"BernardLesley"},"content":"     * @param storage The Storage object to handle reading and writing of task data to a file.","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"BernardLesley"},"content":"    public void execute(TaskList tasks, TextUi ui, Storage storage);","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"BernardLesley"},"content":"     * Returns a boolean value indicating if the command is an exit command.","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"BernardLesley"},"content":"     * @return true if the command is an exit command, false otherwise.","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"BernardLesley"},"content":"    public boolean isExit();","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"BernardLesley"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"BernardLesley":24}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BernardLesley"},"content":"package duke.commands;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"BernardLesley"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"BernardLesley"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"BernardLesley"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"BernardLesley"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"BernardLesley"},"content":"import duke.ui.TextUi;","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"BernardLesley"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"BernardLesley"},"content":" * The AddTodoCommand class represents a command to delete a task from the task list.","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"BernardLesley"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"BernardLesley"},"content":"public class DeleteCommand implements Command {","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"BernardLesley"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"BernardLesley"},"content":"    private String arguments;","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"BernardLesley"},"content":"     * Constructor for the AddEventCommand class.","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"BernardLesley"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"BernardLesley"},"content":"     * @param arguments The arguments to be parsed as a task to be deleted.","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"BernardLesley"},"content":"    public DeleteCommand(String arguments) {","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"BernardLesley"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"BernardLesley"},"content":"     * Executes the DeleteCommand by parsing the index of task to be deleted from the TaskList.","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"BernardLesley"},"content":"     * If the arguments are invalid or incomplete, an error message is displayed.","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"BernardLesley"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"BernardLesley"},"content":"     * @param tasks   The TaskList object containing the list of tasks.","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"BernardLesley"},"content":"     * @param ui      The TextUi object to handle user input and output.","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"BernardLesley"},"content":"     * @param storage The Storage object to handle reading and writing of task data to a file.","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"BernardLesley"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"BernardLesley"},"content":"    public void execute(TaskList tasks, TextUi ui, Storage storage) {","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"BernardLesley"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"BernardLesley"},"content":"        int indexTask \u003d parser.parseIndex(arguments);","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"BernardLesley"},"content":"        try {","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"BernardLesley"},"content":"            if (indexTask !\u003d -1) {","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"BernardLesley"},"content":"                Task deletedTask \u003d tasks.deleteTask(indexTask);","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"BernardLesley"},"content":"                ;","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"BernardLesley"},"content":"                ui.showDeleteTaskMessage(tasks, deletedTask);","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"BernardLesley"},"content":"            }","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"BernardLesley"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"BernardLesley"},"content":"            ui.showTaskIndexOutOfBoundsError();","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"BernardLesley"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"BernardLesley"},"content":"     * Returns a boolean value indicating if the command is an exit command.","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"BernardLesley"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"BernardLesley"},"content":"     * @return false since this command is not an exit command.","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"BernardLesley"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"BernardLesley"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-02-26"},{"lineNumber":55,"author":{"gitId":"BernardLesley"},"content":"        return false;","lastModifiedDate":"2023-02-26"},{"lineNumber":56,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":57,"author":{"gitId":"BernardLesley"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"BernardLesley":57}},{"path":"src/main/java/duke/commands/FindByDateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BernardLesley"},"content":"package duke.commands;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"BernardLesley"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"BernardLesley"},"content":" * The FindByDateCommand class represents a command to display all task containing the date.","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"BernardLesley"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"BernardLesley"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"BernardLesley"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"BernardLesley"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"BernardLesley"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"BernardLesley"},"content":"import duke.ui.TextUi;","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"BernardLesley"},"content":"public class FindByDateCommand implements Command {","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"BernardLesley"},"content":"    public static final String COMMAND_WORD \u003d \"find-date\";","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"BernardLesley"},"content":"    Parser parser \u003d new Parser();","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"BernardLesley"},"content":"    private String arguments;","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"BernardLesley"},"content":"     * Constructor for the FindByDateCommand class.","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"BernardLesley"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"BernardLesley"},"content":"     * @param arguments to be parsed as a date to be searched.","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"BernardLesley"},"content":"    public FindByDateCommand(String arguments) {","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"BernardLesley"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"BernardLesley"},"content":"     * Executes the FindByDateCommand by parsing the arguments as a date to be searched. Display the list of tasks containing the date","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"BernardLesley"},"content":"     * If the arguments are invalid or incomplete, an error message is displayed.","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"BernardLesley"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"BernardLesley"},"content":"     * @param tasks The TaskList object containing the list of tasks.","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"BernardLesley"},"content":"     * @param ui The TextUi object to handle user input and output.","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"BernardLesley"},"content":"     * @param storage The Storage object to handle reading and writing of task data to a file.","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"BernardLesley"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"BernardLesley"},"content":"    public void execute(TaskList tasks, TextUi ui, Storage storage) {","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"BernardLesley"},"content":"        LocalDateTime date \u003d parser.parseDate(arguments);","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"BernardLesley"},"content":"        if (date !\u003d null) {","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"BernardLesley"},"content":"            ui.showTaskListByDate(tasks.getTasks(), date);","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"BernardLesley"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"BernardLesley"},"content":"     * Returns a boolean value indicating if the command is an exit command.","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"BernardLesley"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"BernardLesley"},"content":"     * @return false since this command is not an exit command.","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"BernardLesley"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"BernardLesley"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"BernardLesley"},"content":"        return false;","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"BernardLesley"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"BernardLesley":52}},{"path":"src/main/java/duke/commands/FindByKeywordCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BernardLesley"},"content":"package duke.commands;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"BernardLesley"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"BernardLesley"},"content":" * The FindByKeywordCommand class represents a command to display all task containing the keyword.","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"BernardLesley"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"BernardLesley"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"BernardLesley"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"BernardLesley"},"content":"import duke.ui.TextUi;","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"BernardLesley"},"content":"public class FindByKeywordCommand implements Command {","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"BernardLesley"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"BernardLesley"},"content":"    private String arguments;","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"BernardLesley"},"content":"     * Constructor for the FindByDateCommand class.","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"BernardLesley"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"BernardLesley"},"content":"     * @param arguments to be parsed as string to be searched.","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"BernardLesley"},"content":"    public FindByKeywordCommand(String arguments) {","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"BernardLesley"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"BernardLesley"},"content":"     * Executes the FindByKeywordCommand by parsing the arguments as string to be searched. Display the list of tasks containing the keyword","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"BernardLesley"},"content":"     * If the arguments are invalid or incomplete, an error message is displayed.","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"BernardLesley"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"BernardLesley"},"content":"     * @param tasks The TaskList object containing the list of tasks.","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"BernardLesley"},"content":"     * @param ui The TextUi object to handle user input and output.","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"BernardLesley"},"content":"     * @param storage The Storage object to handle reading and writing of task data to a file.","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"BernardLesley"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"BernardLesley"},"content":"    public void execute(TaskList tasks, TextUi ui, Storage storage) {","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"BernardLesley"},"content":"        ui.showTaskListByKeyword(tasks.getTasks(), arguments);","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"BernardLesley"},"content":"     * Returns a boolean value indicating if the command is an exit command.","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"BernardLesley"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"BernardLesley"},"content":"     * @return false since this command is not an exit command.","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"BernardLesley"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"BernardLesley"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"BernardLesley"},"content":"        return false;","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"BernardLesley"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"BernardLesley":45}},{"path":"src/main/java/duke/commands/GoodbyeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BernardLesley"},"content":"package duke.commands;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"BernardLesley"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"BernardLesley"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"BernardLesley"},"content":"import duke.ui.TextUi;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"BernardLesley"},"content":"public class GoodbyeCommand implements Command {","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"BernardLesley"},"content":"    public static final String COMMAND_WORD \u003d \"bye\";","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"BernardLesley"},"content":"    public void execute(TaskList tasks, TextUi ui, Storage storage) {","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"BernardLesley"},"content":"        ui.showGoodbye();","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"BernardLesley"},"content":"     * Returns a boolean value indicating if the command is an exit command.","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"BernardLesley"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"BernardLesley"},"content":"     * @return true since this command is an exit command.","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"BernardLesley"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"BernardLesley"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"BernardLesley"},"content":"        return true;","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"BernardLesley"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"BernardLesley":23}},{"path":"src/main/java/duke/commands/IncorrectCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BernardLesley"},"content":"package duke.commands;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"BernardLesley"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"BernardLesley"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"BernardLesley"},"content":"import duke.ui.TextUi;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"BernardLesley"},"content":"public class IncorrectCommand implements Command {","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"BernardLesley"},"content":"     * Executes the InocrretCommand if the argument is not found","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"BernardLesley"},"content":"     * *","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"BernardLesley"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"BernardLesley"},"content":"     * @param tasks   The TaskList object containing the list of tasks.","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"BernardLesley"},"content":"     * @param ui      The TextUi object to handle user input and output.","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"BernardLesley"},"content":"     * @param storage The Storage object to handle reading and writing of task data to a file.","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"BernardLesley"},"content":"    @Override","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"BernardLesley"},"content":"    public void execute(TaskList tasks, TextUi ui, Storage storage) {","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"BernardLesley"},"content":"        ui.showCommandNotFoundError();","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"BernardLesley"},"content":"     * Returns a boolean value indicating if the command is an exit command.","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"BernardLesley"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"BernardLesley"},"content":"     * @return false since this command is not an exit command.","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"BernardLesley"},"content":"    @Override","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"BernardLesley"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"BernardLesley"},"content":"        return false;","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"BernardLesley"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"BernardLesley":32}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BernardLesley"},"content":"package duke.commands;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"BernardLesley"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"BernardLesley"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"BernardLesley"},"content":"import duke.ui.TextUi;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"BernardLesley"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"BernardLesley"},"content":" * The ListCommand class represents a command to display all task.","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"BernardLesley"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"BernardLesley"},"content":"public class ListCommand implements Command {","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"BernardLesley"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"BernardLesley"},"content":"    public void execute(TaskList tasks, TextUi ui, Storage storage) {","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"BernardLesley"},"content":"        ui.showTaskList(tasks.getTasks());","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"BernardLesley"},"content":"     * Returns a boolean value indicating if the command is an exit command.","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"BernardLesley"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"BernardLesley"},"content":"     * @return false since this command is not an exit command.","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"BernardLesley"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"BernardLesley"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"BernardLesley"},"content":"        return false;","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"BernardLesley"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"BernardLesley":26}},{"path":"src/main/java/duke/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BernardLesley"},"content":"package duke.commands;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"BernardLesley"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"BernardLesley"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"BernardLesley"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"BernardLesley"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"BernardLesley"},"content":"import duke.ui.TextUi;","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"BernardLesley"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"BernardLesley"},"content":" * The MarkCommad class represents a command to mark a task as done.","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"BernardLesley"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"BernardLesley"},"content":"public class MarkCommand implements Command {","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"BernardLesley"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"BernardLesley"},"content":"    private String arguments;","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"BernardLesley"},"content":"     * Constructor for the MarkCommand class.","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"BernardLesley"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"BernardLesley"},"content":"     * @param arguments to be parsed as a task to be marked.","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"BernardLesley"},"content":"    public MarkCommand(String arguments) {","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"BernardLesley"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"BernardLesley"},"content":"     * Executes the MarkCommand by parsing the index of tasks to be marked","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"BernardLesley"},"content":"     * If the arguments are invalid or incomplete, an error message is displayed.","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"BernardLesley"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"BernardLesley"},"content":"     * @param tasks   The TaskList object containing the list of tasks.","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"BernardLesley"},"content":"     * @param ui      The TextUi object to handle user input and output.","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"BernardLesley"},"content":"     * @param storage The Storage object to handle reading and writing of task data to a file.","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"BernardLesley"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"BernardLesley"},"content":"    public void execute(TaskList tasks, TextUi ui, Storage storage) {","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"BernardLesley"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"BernardLesley"},"content":"        int indexTask \u003d parser.parseIndex(arguments);","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"BernardLesley"},"content":"        try {","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"BernardLesley"},"content":"            if (indexTask !\u003d -1) {","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"BernardLesley"},"content":"                Task selectedTask \u003d tasks.getTaskByIndex(indexTask);","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"BernardLesley"},"content":"                selectedTask.setStatus(true);","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"BernardLesley"},"content":"                ui.showTaskStatusMessage(selectedTask);","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"BernardLesley"},"content":"            }","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"BernardLesley"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"BernardLesley"},"content":"            ui.showTaskIndexOutOfBoundsError();","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"BernardLesley"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"BernardLesley"},"content":"     * Returns a boolean value indicating if the command is an exit command.","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"BernardLesley"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"BernardLesley"},"content":"     * @return false since this command is not an exit command.","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"BernardLesley"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"BernardLesley"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-02-26"},{"lineNumber":55,"author":{"gitId":"BernardLesley"},"content":"        return false;","lastModifiedDate":"2023-02-26"},{"lineNumber":56,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":57,"author":{"gitId":"BernardLesley"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"BernardLesley":57}},{"path":"src/main/java/duke/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BernardLesley"},"content":"package duke.commands;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"BernardLesley"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"BernardLesley"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"BernardLesley"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"BernardLesley"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"BernardLesley"},"content":"import duke.ui.TextUi;","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"BernardLesley"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"BernardLesley"},"content":" * The MarkCommad class represents a command to mark a task as undone.","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"BernardLesley"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"BernardLesley"},"content":"public class UnmarkCommand implements Command {","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"BernardLesley"},"content":"    public static final String COMMAND_WORD \u003d \"unmark\";","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"BernardLesley"},"content":"    private String arguments;","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"BernardLesley"},"content":"     * Constructor for the MarkCommand class.","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"BernardLesley"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"BernardLesley"},"content":"     * @param arguments to be parsed as a task to be marked.","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"BernardLesley"},"content":"    public UnmarkCommand(String arguments) {","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"BernardLesley"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"BernardLesley"},"content":"     * Executes the UnmarkCommand by parsing the index of tasks to be unmarked","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"BernardLesley"},"content":"     * If the arguments are invalid or incomplete, an error message is displayed.","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"BernardLesley"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"BernardLesley"},"content":"     * @param tasks   The TaskList object containing the list of tasks.","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"BernardLesley"},"content":"     * @param ui      The TextUi object to handle user input and output.","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"BernardLesley"},"content":"     * @param storage The Storage object to handle reading and writing of task data to a file.","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"BernardLesley"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"BernardLesley"},"content":"    public void execute(TaskList tasks, TextUi ui, Storage storage) {","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"BernardLesley"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"BernardLesley"},"content":"        int indexTask \u003d parser.parseIndex(arguments);","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"BernardLesley"},"content":"        try {","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"BernardLesley"},"content":"            if (indexTask !\u003d -1) {","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"BernardLesley"},"content":"                Task selectedTask \u003d tasks.getTaskByIndex(indexTask);","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"BernardLesley"},"content":"                selectedTask.setStatus(false);","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"BernardLesley"},"content":"                ui.showTaskStatusMessage(selectedTask);","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"BernardLesley"},"content":"            }","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"BernardLesley"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"BernardLesley"},"content":"            ui.showTaskIndexOutOfBoundsError();","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"BernardLesley"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"BernardLesley"},"content":"     * Returns a boolean value indicating if the command is an exit command.","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"BernardLesley"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"BernardLesley"},"content":"     * @return false since this command is not an exit command.","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"BernardLesley"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"BernardLesley"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-02-26"},{"lineNumber":55,"author":{"gitId":"BernardLesley"},"content":"        return false;","lastModifiedDate":"2023-02-26"},{"lineNumber":56,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":57,"author":{"gitId":"BernardLesley"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"BernardLesley":57}},{"path":"src/main/java/duke/commons/Messages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BernardLesley"},"content":"package duke.commons;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"BernardLesley"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"BernardLesley"},"content":" * The Messages class contains messages used by other class.","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"BernardLesley"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"BernardLesley"},"content":"public class Messages {","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"BernardLesley"},"content":"    public static final String MESSAGE_ERROR_FORMAT_DATE \u003d \"OOPS!!! Please enter the correct date format (dd-mm-yyyy)\";","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"BernardLesley"},"content":"    public static final String MESSAGE_ERROR_FORMAT_DATE_TIME \u003d \"OOPS!!! Please enter the correct date time format (dd-mm-yyyy HH:mm)\";","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"BernardLesley"},"content":"    public static final String MESSAGE_ERROR_FORMAT_DEADLINE \u003d \"OOPS!!! Please enter the correct deadline format (deadline xxx /by xxx).\";","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"BernardLesley"},"content":"    public static final String MESSAGE_ERROR_FORMAT_EVENT \u003d \"OOPS!!! Please enter the correct event format (event xxx /from xxx /to xxx).\";","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"BernardLesley"},"content":"    public static final String MESSAGE_ERROR_GENERAL \u003d \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"BernardLesley"},"content":"    public static final String MESSAGE_ERROR_LOADING \u003d \"OOPS!!! Failed to load Duke :-(\";","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"BernardLesley"},"content":"    public static final String MESSAGE_ERROR_TASK_INDEX_NOT_INTEGER \u003d \"OOPS!!! The task index must be an integer.\";","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"BernardLesley"},"content":"    public static final String MESSAGE_ERROR_TASK_INDEX_OUT_OF_BOUNDS \u003d \"OOPS!!! The task index is not found.\";","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"BernardLesley"},"content":"    public static final String MESSAGE_GOODBYE \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"BernardLesley"},"content":"    public static final String MESSAGE_TASK_LIST \u003d \"Here are the tasks in your list\";","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"BernardLesley"},"content":"    public static final String MESSAGE_TASK_LIST_EMPTY \u003d \"No tasks is currently available!\";","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"BernardLesley"},"content":"    public static final String MESSAGE_PROMPT_EMPTY_ERROR \u003d \"OOPS!!! The description of a {taskType} cannot be empty.\";","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"BernardLesley"},"content":"    public static final String MESSAGE_TASK_ADD \u003d \"Got it. I\u0027ve added this task:\";","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"BernardLesley"},"content":"    public static final String MESSAGE_TASK_MARK \u003d \"Nice! I\u0027ve marked this task as done:\";","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"BernardLesley"},"content":"    public static final String MESSAGE_TASK_REMOVE \u003d \"Noted. I\u0027ve removed this task:\";","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"BernardLesley"},"content":"    public static final String MESSAGE_TASK_UNMARK \u003d \"OK, I\u0027ve marked this task as not done yet:\";","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"BernardLesley"},"content":"    public static final String MESSAGE_TASK_COUNT \u003d \"Now you have {number} tasks in the list.\";","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"BernardLesley"},"content":"    public static final String MESSAGE_WELCOME_INTRODUCTION \u003d \"Hello! I\u0027m Duke\";","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"BernardLesley"},"content":"    public static final String MESSAGE_WELCOME_QUESTION \u003d \"What can I do for you?\";","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"BernardLesley"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"BernardLesley":26}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BernardLesley"},"content":"package duke.parser;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"BernardLesley"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"BernardLesley"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"BernardLesley"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"BernardLesley"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"BernardLesley"},"content":"import java.util.InputMismatchException;","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"BernardLesley"},"content":"import duke.commands.AddDeadlineCommand;","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"BernardLesley"},"content":"import duke.commands.AddEventCommand;","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"BernardLesley"},"content":"import duke.commands.AddTodoCommand;","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"BernardLesley"},"content":"import duke.commands.Command;","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"BernardLesley"},"content":"import duke.commands.DeleteCommand;","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"BernardLesley"},"content":"import duke.commands.FindByDateCommand;","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"BernardLesley"},"content":"import duke.commands.FindByKeywordCommand;","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"BernardLesley"},"content":"import duke.commands.GoodbyeCommand;","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"BernardLesley"},"content":"import duke.commands.IncorrectCommand;","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"BernardLesley"},"content":"import duke.commands.ListCommand;","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"BernardLesley"},"content":"import duke.commands.MarkCommand;","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"BernardLesley"},"content":"import duke.commands.UnmarkCommand;","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"BernardLesley"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"BernardLesley"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"BernardLesley"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"BernardLesley"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"BernardLesley"},"content":"import duke.ui.TextUi;","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"BernardLesley"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"BernardLesley"},"content":" * The Parser class is responsible for parsing user input and file content","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"BernardLesley"},"content":" * into commands or tasks. It contains methods to parse the following:","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"BernardLesley"},"content":" * - user commands","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"BernardLesley"},"content":" * - deadline and event tasks","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"BernardLesley"},"content":" * - task indices","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"BernardLesley"},"content":" * - date and date-time values","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"BernardLesley"},"content":" * - file content","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"BernardLesley"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"BernardLesley"},"content":"public class Parser {","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"BernardLesley"},"content":"    TextUi ui \u003d new TextUi();","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"BernardLesley"},"content":"     * Parses user input and returns the corresponding command object.","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"BernardLesley"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"BernardLesley"},"content":"     * @param userInput the user input to parse","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"BernardLesley"},"content":"     * @return the corresponding command object","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"BernardLesley"},"content":"    public static Command parseCommand(String userInput) {","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"BernardLesley"},"content":"        String[] words \u003d userInput.trim().split(\" \", 2);","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"BernardLesley"},"content":"        if (words.length \u003d\u003d 0) {","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"BernardLesley"},"content":"            return new IncorrectCommand();","lastModifiedDate":"2023-02-26"},{"lineNumber":49,"author":{"gitId":"BernardLesley"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"BernardLesley"},"content":"        final String commandWord \u003d words[0];","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"BernardLesley"},"content":"        final String arguments \u003d userInput.replaceFirst(commandWord, \"\").trim();","lastModifiedDate":"2023-02-26"},{"lineNumber":53,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":54,"author":{"gitId":"BernardLesley"},"content":"        switch (commandWord) {","lastModifiedDate":"2023-02-26"},{"lineNumber":55,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":56,"author":{"gitId":"BernardLesley"},"content":"        case AddDeadlineCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-26"},{"lineNumber":57,"author":{"gitId":"BernardLesley"},"content":"            return (Command) new AddDeadlineCommand(arguments);","lastModifiedDate":"2023-02-26"},{"lineNumber":58,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":59,"author":{"gitId":"BernardLesley"},"content":"        case AddEventCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-26"},{"lineNumber":60,"author":{"gitId":"BernardLesley"},"content":"            return (Command) new AddEventCommand(arguments);","lastModifiedDate":"2023-02-26"},{"lineNumber":61,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":62,"author":{"gitId":"BernardLesley"},"content":"        case AddTodoCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-26"},{"lineNumber":63,"author":{"gitId":"BernardLesley"},"content":"            return (Command) new AddTodoCommand(arguments);","lastModifiedDate":"2023-02-26"},{"lineNumber":64,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":65,"author":{"gitId":"BernardLesley"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-26"},{"lineNumber":66,"author":{"gitId":"BernardLesley"},"content":"            return (Command) new DeleteCommand(arguments);","lastModifiedDate":"2023-02-26"},{"lineNumber":67,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":68,"author":{"gitId":"BernardLesley"},"content":"        case FindByDateCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-26"},{"lineNumber":69,"author":{"gitId":"BernardLesley"},"content":"            return (Command) new FindByDateCommand(arguments);","lastModifiedDate":"2023-02-26"},{"lineNumber":70,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":71,"author":{"gitId":"BernardLesley"},"content":"        case FindByKeywordCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-26"},{"lineNumber":72,"author":{"gitId":"BernardLesley"},"content":"            return (Command) new FindByKeywordCommand(arguments);","lastModifiedDate":"2023-02-26"},{"lineNumber":73,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":74,"author":{"gitId":"BernardLesley"},"content":"        case GoodbyeCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-26"},{"lineNumber":75,"author":{"gitId":"BernardLesley"},"content":"            return (Command) new GoodbyeCommand();","lastModifiedDate":"2023-02-26"},{"lineNumber":76,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":77,"author":{"gitId":"BernardLesley"},"content":"        case MarkCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-26"},{"lineNumber":78,"author":{"gitId":"BernardLesley"},"content":"            return (Command) new MarkCommand(arguments);","lastModifiedDate":"2023-02-26"},{"lineNumber":79,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":80,"author":{"gitId":"BernardLesley"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-26"},{"lineNumber":81,"author":{"gitId":"BernardLesley"},"content":"            return (Command) new ListCommand();","lastModifiedDate":"2023-02-26"},{"lineNumber":82,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":83,"author":{"gitId":"BernardLesley"},"content":"        case UnmarkCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-26"},{"lineNumber":84,"author":{"gitId":"BernardLesley"},"content":"            return (Command) new UnmarkCommand(arguments);","lastModifiedDate":"2023-02-26"},{"lineNumber":85,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":86,"author":{"gitId":"BernardLesley"},"content":"        default:","lastModifiedDate":"2023-02-26"},{"lineNumber":87,"author":{"gitId":"BernardLesley"},"content":"            return (Command) new IncorrectCommand();","lastModifiedDate":"2023-02-26"},{"lineNumber":88,"author":{"gitId":"BernardLesley"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":89,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":90,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":91,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":92,"author":{"gitId":"BernardLesley"},"content":"     * Parses a deadline task description and end time from a string.","lastModifiedDate":"2023-03-03"},{"lineNumber":93,"author":{"gitId":"BernardLesley"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":94,"author":{"gitId":"BernardLesley"},"content":"     * @param arguments the string to parse","lastModifiedDate":"2023-03-03"},{"lineNumber":95,"author":{"gitId":"BernardLesley"},"content":"     * @return an array containing the description and end time, or null if the string is in the wrong format","lastModifiedDate":"2023-03-03"},{"lineNumber":96,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":97,"author":{"gitId":"BernardLesley"},"content":"    public String[] parseDeadline(String arguments) {","lastModifiedDate":"2023-02-26"},{"lineNumber":98,"author":{"gitId":"BernardLesley"},"content":"        try {","lastModifiedDate":"2023-02-26"},{"lineNumber":99,"author":{"gitId":"BernardLesley"},"content":"            int dividerPosition \u003d arguments.indexOf(\"/by\");","lastModifiedDate":"2023-02-26"},{"lineNumber":100,"author":{"gitId":"BernardLesley"},"content":"            String description \u003d arguments.substring(0, dividerPosition).trim();","lastModifiedDate":"2023-02-26"},{"lineNumber":101,"author":{"gitId":"BernardLesley"},"content":"            String endTime \u003d arguments.substring(dividerPosition + 3).trim();","lastModifiedDate":"2023-02-26"},{"lineNumber":102,"author":{"gitId":"BernardLesley"},"content":"            return new String[]{description, endTime};","lastModifiedDate":"2023-02-26"},{"lineNumber":103,"author":{"gitId":"BernardLesley"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-26"},{"lineNumber":104,"author":{"gitId":"BernardLesley"},"content":"            ui.showIncorrectFormatMessage(\"deadline\");","lastModifiedDate":"2023-02-26"},{"lineNumber":105,"author":{"gitId":"BernardLesley"},"content":"            return null;","lastModifiedDate":"2023-02-26"},{"lineNumber":106,"author":{"gitId":"BernardLesley"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":107,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":108,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":109,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":110,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":111,"author":{"gitId":"BernardLesley"},"content":"     * Parses an event task description, start time, and end time from a string.","lastModifiedDate":"2023-03-03"},{"lineNumber":112,"author":{"gitId":"BernardLesley"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":113,"author":{"gitId":"BernardLesley"},"content":"     * @param arguments the string to parse","lastModifiedDate":"2023-03-03"},{"lineNumber":114,"author":{"gitId":"BernardLesley"},"content":"     * @return an array containing the description, start time, and end time, or null if the string is in the wrong format","lastModifiedDate":"2023-03-03"},{"lineNumber":115,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":116,"author":{"gitId":"BernardLesley"},"content":"    public String[] parseEvent(String arguments) {","lastModifiedDate":"2023-02-26"},{"lineNumber":117,"author":{"gitId":"BernardLesley"},"content":"        try {","lastModifiedDate":"2023-02-26"},{"lineNumber":118,"author":{"gitId":"BernardLesley"},"content":"            int divider1Position \u003d arguments.indexOf(\"/from\");","lastModifiedDate":"2023-02-26"},{"lineNumber":119,"author":{"gitId":"BernardLesley"},"content":"            int divider2Position \u003d arguments.indexOf(\"/to\");","lastModifiedDate":"2023-02-26"},{"lineNumber":120,"author":{"gitId":"BernardLesley"},"content":"            String description \u003d arguments.substring(0, divider1Position).trim();","lastModifiedDate":"2023-02-26"},{"lineNumber":121,"author":{"gitId":"BernardLesley"},"content":"            String startTime \u003d arguments.substring(divider1Position + 5, divider2Position).trim();","lastModifiedDate":"2023-02-26"},{"lineNumber":122,"author":{"gitId":"BernardLesley"},"content":"            String endTime \u003d arguments.substring(divider2Position + 3).trim();","lastModifiedDate":"2023-02-26"},{"lineNumber":123,"author":{"gitId":"BernardLesley"},"content":"            return new String[]{description, startTime, endTime};","lastModifiedDate":"2023-02-26"},{"lineNumber":124,"author":{"gitId":"BernardLesley"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-26"},{"lineNumber":125,"author":{"gitId":"BernardLesley"},"content":"            ui.showIncorrectFormatMessage(\"event\");","lastModifiedDate":"2023-02-26"},{"lineNumber":126,"author":{"gitId":"BernardLesley"},"content":"            return null;","lastModifiedDate":"2023-02-26"},{"lineNumber":127,"author":{"gitId":"BernardLesley"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":128,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":129,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":130,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":131,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":132,"author":{"gitId":"BernardLesley"},"content":"     * Parses a task index from a string.","lastModifiedDate":"2023-03-03"},{"lineNumber":133,"author":{"gitId":"BernardLesley"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":134,"author":{"gitId":"BernardLesley"},"content":"     * @param arguments the string to parse","lastModifiedDate":"2023-03-03"},{"lineNumber":135,"author":{"gitId":"BernardLesley"},"content":"     * @return the task index, or -1 if the string is not an integer","lastModifiedDate":"2023-03-03"},{"lineNumber":136,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":137,"author":{"gitId":"BernardLesley"},"content":"    public int parseIndex(String arguments) {","lastModifiedDate":"2023-02-26"},{"lineNumber":138,"author":{"gitId":"BernardLesley"},"content":"        try {","lastModifiedDate":"2023-02-26"},{"lineNumber":139,"author":{"gitId":"BernardLesley"},"content":"            return Integer.parseInt(arguments) - 1;","lastModifiedDate":"2023-02-26"},{"lineNumber":140,"author":{"gitId":"BernardLesley"},"content":"        } catch (InputMismatchException | NumberFormatException e) {","lastModifiedDate":"2023-02-26"},{"lineNumber":141,"author":{"gitId":"BernardLesley"},"content":"            ui.showTaskIndexNotIntegerError();","lastModifiedDate":"2023-02-26"},{"lineNumber":142,"author":{"gitId":"BernardLesley"},"content":"            return -1;","lastModifiedDate":"2023-02-26"},{"lineNumber":143,"author":{"gitId":"BernardLesley"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":144,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":145,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":146,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":147,"author":{"gitId":"BernardLesley"},"content":"     * Parses a date from a string.","lastModifiedDate":"2023-03-03"},{"lineNumber":148,"author":{"gitId":"BernardLesley"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":149,"author":{"gitId":"BernardLesley"},"content":"     * @param arguments the string to parse","lastModifiedDate":"2023-03-03"},{"lineNumber":150,"author":{"gitId":"BernardLesley"},"content":"     * @return the date as a LocalDateTime object, or null if the string is in the wrong format","lastModifiedDate":"2023-03-03"},{"lineNumber":151,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":152,"author":{"gitId":"BernardLesley"},"content":"    public LocalDateTime parseDate(String arguments) {","lastModifiedDate":"2023-02-26"},{"lineNumber":153,"author":{"gitId":"BernardLesley"},"content":"        try {","lastModifiedDate":"2023-02-26"},{"lineNumber":154,"author":{"gitId":"BernardLesley"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2023-02-26"},{"lineNumber":155,"author":{"gitId":"BernardLesley"},"content":"            LocalDateTime date \u003d LocalDate.parse(arguments, formatter).atStartOfDay();","lastModifiedDate":"2023-02-26"},{"lineNumber":156,"author":{"gitId":"BernardLesley"},"content":"            return date;","lastModifiedDate":"2023-02-26"},{"lineNumber":157,"author":{"gitId":"BernardLesley"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2023-02-26"},{"lineNumber":158,"author":{"gitId":"BernardLesley"},"content":"            return null;","lastModifiedDate":"2023-02-26"},{"lineNumber":159,"author":{"gitId":"BernardLesley"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-02-26"},{"lineNumber":160,"author":{"gitId":"BernardLesley"},"content":"            ui.showWrongDateFormatError();","lastModifiedDate":"2023-02-26"},{"lineNumber":161,"author":{"gitId":"BernardLesley"},"content":"            return null;","lastModifiedDate":"2023-02-26"},{"lineNumber":162,"author":{"gitId":"BernardLesley"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":163,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":164,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":165,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":166,"author":{"gitId":"BernardLesley"},"content":"     * Parses a date-time value from a string.","lastModifiedDate":"2023-03-03"},{"lineNumber":167,"author":{"gitId":"BernardLesley"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":168,"author":{"gitId":"BernardLesley"},"content":"     * @param arguments the string to parse","lastModifiedDate":"2023-03-03"},{"lineNumber":169,"author":{"gitId":"BernardLesley"},"content":"     * @return the date-time value as a LocalDateTime object, or null if the string is in the wrong format","lastModifiedDate":"2023-03-03"},{"lineNumber":170,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":171,"author":{"gitId":"BernardLesley"},"content":"    public LocalDateTime parseDateTime(String arguments) {","lastModifiedDate":"2023-02-26"},{"lineNumber":172,"author":{"gitId":"BernardLesley"},"content":"        try {","lastModifiedDate":"2023-02-26"},{"lineNumber":173,"author":{"gitId":"BernardLesley"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2023-02-26"},{"lineNumber":174,"author":{"gitId":"BernardLesley"},"content":"            LocalDateTime date \u003d LocalDateTime.parse(arguments, formatter);","lastModifiedDate":"2023-02-26"},{"lineNumber":175,"author":{"gitId":"BernardLesley"},"content":"            return date;","lastModifiedDate":"2023-02-26"},{"lineNumber":176,"author":{"gitId":"BernardLesley"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2023-02-26"},{"lineNumber":177,"author":{"gitId":"BernardLesley"},"content":"            return null;","lastModifiedDate":"2023-02-26"},{"lineNumber":178,"author":{"gitId":"BernardLesley"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-02-26"},{"lineNumber":179,"author":{"gitId":"BernardLesley"},"content":"            ui.showWrongDateTimeFormatError();","lastModifiedDate":"2023-02-26"},{"lineNumber":180,"author":{"gitId":"BernardLesley"},"content":"            return null;","lastModifiedDate":"2023-02-26"},{"lineNumber":181,"author":{"gitId":"BernardLesley"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":182,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":183,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":184,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":185,"author":{"gitId":"BernardLesley"},"content":"     * Parses a task from a string representing its contents in the format used in the save file.","lastModifiedDate":"2023-03-03"},{"lineNumber":186,"author":{"gitId":"BernardLesley"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":187,"author":{"gitId":"BernardLesley"},"content":"     * @param text the string to parse","lastModifiedDate":"2023-03-03"},{"lineNumber":188,"author":{"gitId":"BernardLesley"},"content":"     * @return the parsed task object, or null if the string is in the wrong format","lastModifiedDate":"2023-03-03"},{"lineNumber":189,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":190,"author":{"gitId":"BernardLesley"},"content":"    public Task parseFileContent(String text) {","lastModifiedDate":"2023-02-26"},{"lineNumber":191,"author":{"gitId":"BernardLesley"},"content":"        Task readTask \u003d null;","lastModifiedDate":"2023-02-26"},{"lineNumber":192,"author":{"gitId":"BernardLesley"},"content":"        try {","lastModifiedDate":"2023-02-26"},{"lineNumber":193,"author":{"gitId":"BernardLesley"},"content":"            String[] arrOfStr \u003d text.split(\"[|]\");","lastModifiedDate":"2023-02-26"},{"lineNumber":194,"author":{"gitId":"BernardLesley"},"content":"            String taskType \u003d arrOfStr[0].trim();","lastModifiedDate":"2023-02-26"},{"lineNumber":195,"author":{"gitId":"BernardLesley"},"content":"            String doneString \u003d arrOfStr[1].trim();","lastModifiedDate":"2023-02-26"},{"lineNumber":196,"author":{"gitId":"BernardLesley"},"content":"            String description \u003d arrOfStr[2].trim();","lastModifiedDate":"2023-02-26"},{"lineNumber":197,"author":{"gitId":"BernardLesley"},"content":"            Boolean isDone;","lastModifiedDate":"2023-02-26"},{"lineNumber":198,"author":{"gitId":"BernardLesley"},"content":"            if (doneString.equals(\"0\")) {","lastModifiedDate":"2023-02-26"},{"lineNumber":199,"author":{"gitId":"BernardLesley"},"content":"                isDone \u003d false;","lastModifiedDate":"2023-02-26"},{"lineNumber":200,"author":{"gitId":"BernardLesley"},"content":"            } else if (doneString.equals(\"1\")) {","lastModifiedDate":"2023-02-26"},{"lineNumber":201,"author":{"gitId":"BernardLesley"},"content":"                isDone \u003d true;","lastModifiedDate":"2023-02-26"},{"lineNumber":202,"author":{"gitId":"BernardLesley"},"content":"            } else {","lastModifiedDate":"2023-02-26"},{"lineNumber":203,"author":{"gitId":"BernardLesley"},"content":"                isDone \u003d null;","lastModifiedDate":"2023-02-26"},{"lineNumber":204,"author":{"gitId":"BernardLesley"},"content":"            }","lastModifiedDate":"2023-02-26"},{"lineNumber":205,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":206,"author":{"gitId":"BernardLesley"},"content":"            if (isDone !\u003d null) {","lastModifiedDate":"2023-02-26"},{"lineNumber":207,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":208,"author":{"gitId":"BernardLesley"},"content":"                LocalDateTime startTime;","lastModifiedDate":"2023-02-26"},{"lineNumber":209,"author":{"gitId":"BernardLesley"},"content":"                LocalDateTime endTime;","lastModifiedDate":"2023-02-26"},{"lineNumber":210,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":211,"author":{"gitId":"BernardLesley"},"content":"                switch (taskType) {","lastModifiedDate":"2023-02-26"},{"lineNumber":212,"author":{"gitId":"BernardLesley"},"content":"                case \"T\":","lastModifiedDate":"2023-02-26"},{"lineNumber":213,"author":{"gitId":"BernardLesley"},"content":"                    readTask \u003d new Todo(description);","lastModifiedDate":"2023-02-26"},{"lineNumber":214,"author":{"gitId":"BernardLesley"},"content":"                    readTask.setStatus(isDone);","lastModifiedDate":"2023-02-26"},{"lineNumber":215,"author":{"gitId":"BernardLesley"},"content":"                    break;","lastModifiedDate":"2023-02-26"},{"lineNumber":216,"author":{"gitId":"BernardLesley"},"content":"                case \"D\":","lastModifiedDate":"2023-02-26"},{"lineNumber":217,"author":{"gitId":"BernardLesley"},"content":"                    endTime \u003d LocalDateTime.parse(arrOfStr[3].trim());","lastModifiedDate":"2023-02-26"},{"lineNumber":218,"author":{"gitId":"BernardLesley"},"content":"                    readTask \u003d new Deadline(description, endTime);","lastModifiedDate":"2023-02-26"},{"lineNumber":219,"author":{"gitId":"BernardLesley"},"content":"                    readTask.setStatus(isDone);","lastModifiedDate":"2023-02-26"},{"lineNumber":220,"author":{"gitId":"BernardLesley"},"content":"                    break;","lastModifiedDate":"2023-02-26"},{"lineNumber":221,"author":{"gitId":"BernardLesley"},"content":"                case \"E\":","lastModifiedDate":"2023-02-26"},{"lineNumber":222,"author":{"gitId":"BernardLesley"},"content":"                    startTime \u003d LocalDateTime.parse(arrOfStr[3].trim());","lastModifiedDate":"2023-02-26"},{"lineNumber":223,"author":{"gitId":"BernardLesley"},"content":"                    endTime \u003d LocalDateTime.parse(arrOfStr[4].trim());","lastModifiedDate":"2023-02-26"},{"lineNumber":224,"author":{"gitId":"BernardLesley"},"content":"                    readTask \u003d new Event(description, startTime, endTime);","lastModifiedDate":"2023-02-26"},{"lineNumber":225,"author":{"gitId":"BernardLesley"},"content":"                    readTask.setStatus(isDone);","lastModifiedDate":"2023-02-26"},{"lineNumber":226,"author":{"gitId":"BernardLesley"},"content":"                    break;","lastModifiedDate":"2023-02-26"},{"lineNumber":227,"author":{"gitId":"BernardLesley"},"content":"                default:","lastModifiedDate":"2023-02-26"},{"lineNumber":228,"author":{"gitId":"BernardLesley"},"content":"                    readTask \u003d null;","lastModifiedDate":"2023-02-26"},{"lineNumber":229,"author":{"gitId":"BernardLesley"},"content":"                }","lastModifiedDate":"2023-02-26"},{"lineNumber":230,"author":{"gitId":"BernardLesley"},"content":"            }","lastModifiedDate":"2023-02-26"},{"lineNumber":231,"author":{"gitId":"BernardLesley"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-02-26"},{"lineNumber":232,"author":{"gitId":"BernardLesley"},"content":"            return readTask \u003d null;","lastModifiedDate":"2023-02-26"},{"lineNumber":233,"author":{"gitId":"BernardLesley"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":234,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":235,"author":{"gitId":"BernardLesley"},"content":"        return readTask;","lastModifiedDate":"2023-02-26"},{"lineNumber":236,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":237,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":238,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":239,"author":{"gitId":"BernardLesley"},"content":"     * Converts a task object into a string representing its contents in the format used in the save file.","lastModifiedDate":"2023-03-03"},{"lineNumber":240,"author":{"gitId":"BernardLesley"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":241,"author":{"gitId":"BernardLesley"},"content":"     * @param task the task to convert","lastModifiedDate":"2023-03-03"},{"lineNumber":242,"author":{"gitId":"BernardLesley"},"content":"     * @return the string representing the task\u0027s contents","lastModifiedDate":"2023-03-03"},{"lineNumber":243,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":244,"author":{"gitId":"BernardLesley"},"content":"    public String parseTaskToWrite(Task task) {","lastModifiedDate":"2023-02-26"},{"lineNumber":245,"author":{"gitId":"BernardLesley"},"content":"        Boolean isDone \u003d task.getStatus();","lastModifiedDate":"2023-02-26"},{"lineNumber":246,"author":{"gitId":"BernardLesley"},"content":"        String taskType \u003d task.getTaskType();","lastModifiedDate":"2023-02-26"},{"lineNumber":247,"author":{"gitId":"BernardLesley"},"content":"        String encodedBooleanIsDone;","lastModifiedDate":"2023-02-26"},{"lineNumber":248,"author":{"gitId":"BernardLesley"},"content":"        String description \u003d task.getTaskDescription();","lastModifiedDate":"2023-02-26"},{"lineNumber":249,"author":{"gitId":"BernardLesley"},"content":"        LocalDateTime startTime;","lastModifiedDate":"2023-02-26"},{"lineNumber":250,"author":{"gitId":"BernardLesley"},"content":"        LocalDateTime endTime;","lastModifiedDate":"2023-02-26"},{"lineNumber":251,"author":{"gitId":"BernardLesley"},"content":"        String parseResult \u003d null;","lastModifiedDate":"2023-02-26"},{"lineNumber":252,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":253,"author":{"gitId":"BernardLesley"},"content":"        if (isDone) {","lastModifiedDate":"2023-02-26"},{"lineNumber":254,"author":{"gitId":"BernardLesley"},"content":"            encodedBooleanIsDone \u003d \"1\";","lastModifiedDate":"2023-02-26"},{"lineNumber":255,"author":{"gitId":"BernardLesley"},"content":"        } else {","lastModifiedDate":"2023-02-26"},{"lineNumber":256,"author":{"gitId":"BernardLesley"},"content":"            encodedBooleanIsDone \u003d \"0\";","lastModifiedDate":"2023-02-26"},{"lineNumber":257,"author":{"gitId":"BernardLesley"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":258,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":259,"author":{"gitId":"BernardLesley"},"content":"        switch (taskType) {","lastModifiedDate":"2023-02-26"},{"lineNumber":260,"author":{"gitId":"BernardLesley"},"content":"        case \"T\":","lastModifiedDate":"2023-02-26"},{"lineNumber":261,"author":{"gitId":"BernardLesley"},"content":"            parseResult \u003d taskType + \" | \" + encodedBooleanIsDone + \" | \" + description;","lastModifiedDate":"2023-02-26"},{"lineNumber":262,"author":{"gitId":"BernardLesley"},"content":"            break;","lastModifiedDate":"2023-02-26"},{"lineNumber":263,"author":{"gitId":"BernardLesley"},"content":"        case \"D\":","lastModifiedDate":"2023-02-26"},{"lineNumber":264,"author":{"gitId":"BernardLesley"},"content":"            endTime \u003d ((Deadline) task).getEndTime();","lastModifiedDate":"2023-02-26"},{"lineNumber":265,"author":{"gitId":"BernardLesley"},"content":"            parseResult \u003d taskType + \" | \" + encodedBooleanIsDone + \" | \" + description + \" | \" + endTime;","lastModifiedDate":"2023-02-26"},{"lineNumber":266,"author":{"gitId":"BernardLesley"},"content":"            break;","lastModifiedDate":"2023-02-26"},{"lineNumber":267,"author":{"gitId":"BernardLesley"},"content":"        case \"E\":","lastModifiedDate":"2023-02-26"},{"lineNumber":268,"author":{"gitId":"BernardLesley"},"content":"            startTime \u003d ((Event) task).getStartTime();","lastModifiedDate":"2023-02-26"},{"lineNumber":269,"author":{"gitId":"BernardLesley"},"content":"            endTime \u003d ((Event) task).getEndTime();","lastModifiedDate":"2023-02-26"},{"lineNumber":270,"author":{"gitId":"BernardLesley"},"content":"            parseResult \u003d taskType + \" | \" + encodedBooleanIsDone + \" | \" + description + \" | \" + startTime + \" | \" + endTime;","lastModifiedDate":"2023-02-26"},{"lineNumber":271,"author":{"gitId":"BernardLesley"},"content":"            break;","lastModifiedDate":"2023-02-26"},{"lineNumber":272,"author":{"gitId":"BernardLesley"},"content":"        default:","lastModifiedDate":"2023-02-26"},{"lineNumber":273,"author":{"gitId":"BernardLesley"},"content":"            parseResult \u003d \"Error\";","lastModifiedDate":"2023-02-26"},{"lineNumber":274,"author":{"gitId":"BernardLesley"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":275,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":276,"author":{"gitId":"BernardLesley"},"content":"        return parseResult;","lastModifiedDate":"2023-02-26"},{"lineNumber":277,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":278,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":279,"author":{"gitId":"BernardLesley"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"BernardLesley":279}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BernardLesley"},"content":"package duke.storage;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"BernardLesley"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"BernardLesley"},"content":"import java.io.File;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"BernardLesley"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"BernardLesley"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"BernardLesley"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"BernardLesley"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"BernardLesley"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"BernardLesley"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"BernardLesley"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"BernardLesley"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"BernardLesley"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"BernardLesley"},"content":" * The Storage class deals with reading from and writing to a file to save and retrieve Task objects.","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"BernardLesley"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"BernardLesley"},"content":"public class Storage {","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"BernardLesley"},"content":"    private String filePath;","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"BernardLesley"},"content":"    private Parser parser \u003d new Parser();","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"BernardLesley"},"content":"     * Constructs a Storage object that stores and retrieves Tasks from a given file path.","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"BernardLesley"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"BernardLesley"},"content":"     * @param filePath the file path where the Tasks are stored and retrieved from","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"BernardLesley"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"BernardLesley"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"BernardLesley"},"content":"     * Writes the Tasks in a TaskList to the file specified by the file path.","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"BernardLesley"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"BernardLesley"},"content":"     * @param taskList the TaskList containing the Tasks to be written to file","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"BernardLesley"},"content":"     * @throws IOException if there is an error writing to the file","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"BernardLesley"},"content":"    public void writeToFile(TaskList taskList) throws IOException {","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"BernardLesley"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskList.getTasks();","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"BernardLesley"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"BernardLesley"},"content":"        BufferedWriter info \u003d new BufferedWriter(fw);","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"BernardLesley"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"BernardLesley"},"content":"            String lineToAdd \u003d parser.parseTaskToWrite(tasks.get(i));","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"BernardLesley"},"content":"            info.write(lineToAdd);","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"BernardLesley"},"content":"            info.newLine();","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"BernardLesley"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"BernardLesley"},"content":"        info.close();","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":49,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"BernardLesley"},"content":"     * Reads the contents of the file specified by the file path and returns an ArrayList of Task objects.","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"BernardLesley"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"BernardLesley"},"content":"     * @return an ArrayList of Task objects stored in the file","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"BernardLesley"},"content":"     * @throws IOException if there is an error reading the file","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"BernardLesley"},"content":"    public ArrayList\u003cTask\u003e readFileContents() throws IOException {","lastModifiedDate":"2023-02-26"},{"lineNumber":56,"author":{"gitId":"BernardLesley"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-02-26"},{"lineNumber":57,"author":{"gitId":"BernardLesley"},"content":"        Task task;","lastModifiedDate":"2023-02-26"},{"lineNumber":58,"author":{"gitId":"BernardLesley"},"content":"        try {","lastModifiedDate":"2023-02-26"},{"lineNumber":59,"author":{"gitId":"BernardLesley"},"content":"            File f \u003d new File(filePath);","lastModifiedDate":"2023-02-26"},{"lineNumber":60,"author":{"gitId":"BernardLesley"},"content":"            Scanner sc \u003d new Scanner(f);","lastModifiedDate":"2023-02-26"},{"lineNumber":61,"author":{"gitId":"BernardLesley"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2023-02-26"},{"lineNumber":62,"author":{"gitId":"BernardLesley"},"content":"                task \u003d parser.parseFileContent(sc.nextLine());","lastModifiedDate":"2023-02-26"},{"lineNumber":63,"author":{"gitId":"BernardLesley"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2023-02-26"},{"lineNumber":64,"author":{"gitId":"BernardLesley"},"content":"                    tasks.add(task);","lastModifiedDate":"2023-02-26"},{"lineNumber":65,"author":{"gitId":"BernardLesley"},"content":"                }","lastModifiedDate":"2023-02-26"},{"lineNumber":66,"author":{"gitId":"BernardLesley"},"content":"            }","lastModifiedDate":"2023-02-26"},{"lineNumber":67,"author":{"gitId":"BernardLesley"},"content":"            sc.close();","lastModifiedDate":"2023-02-26"},{"lineNumber":68,"author":{"gitId":"BernardLesley"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-02-26"},{"lineNumber":69,"author":{"gitId":"BernardLesley"},"content":"            File newFile \u003d new File(filePath);","lastModifiedDate":"2023-02-26"},{"lineNumber":70,"author":{"gitId":"BernardLesley"},"content":"            newFile.createNewFile();","lastModifiedDate":"2023-02-26"},{"lineNumber":71,"author":{"gitId":"BernardLesley"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":72,"author":{"gitId":"BernardLesley"},"content":"        return tasks;","lastModifiedDate":"2023-02-26"},{"lineNumber":73,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":74,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":75,"author":{"gitId":"BernardLesley"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"BernardLesley":75}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BernardLesley"},"content":"package duke.task;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"BernardLesley"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"BernardLesley"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"BernardLesley"},"content":" * A class representing a Deadline task.","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"BernardLesley"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"BernardLesley"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"BernardLesley"},"content":"    private LocalDateTime endDate;","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"BernardLesley"},"content":"     * Constructs a Deadline object with the given description and deadline.","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"BernardLesley"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"BernardLesley"},"content":"     * @param description The description of the Deadline task.","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"BernardLesley"},"content":"     * @param endDate     The deadline of the Deadline task.","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"BernardLesley"},"content":"    public Deadline(String description, LocalDateTime endDate) {","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"BernardLesley"},"content":"        super(description);","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"BernardLesley"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"BernardLesley"},"content":"     * Returns a string representation of the deadline task.","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"BernardLesley"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"BernardLesley"},"content":"     * @return a string representation of the deadline task","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"BernardLesley"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"BernardLesley"},"content":"    public String toString() {","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"BernardLesley"},"content":"        return \"[\" + getTaskType() + \"]\" + super.toString()","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"BernardLesley"},"content":"                + \" (by: \" + ui.getShowDateFormat(endDate) + \")\";","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"BernardLesley"},"content":"     * Returns the task type, \"D\" for deadline.","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"BernardLesley"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"BernardLesley"},"content":"     * @return the task type","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"BernardLesley"},"content":"    @Override","lastModifiedDate":"2023-02-11"},{"lineNumber":40,"author":{"gitId":"BernardLesley"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-02-11"},{"lineNumber":41,"author":{"gitId":"BernardLesley"},"content":"        return \"D\";","lastModifiedDate":"2023-02-11"},{"lineNumber":42,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":43,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":44,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"BernardLesley"},"content":"     * Returns the end date of the task.","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"BernardLesley"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"BernardLesley"},"content":"     * @return the end date of the task","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"BernardLesley"},"content":"    public LocalDateTime getEndTime() {","lastModifiedDate":"2023-02-15"},{"lineNumber":50,"author":{"gitId":"BernardLesley"},"content":"        return endDate;","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"BernardLesley"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"BernardLesley":52}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BernardLesley"},"content":"package duke.task;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"BernardLesley"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"BernardLesley"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"BernardLesley"},"content":" * A class representing a Event task.","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"BernardLesley"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"BernardLesley"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"BernardLesley"},"content":"    private LocalDateTime startTime;","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"BernardLesley"},"content":"    private LocalDateTime endTime;","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"BernardLesley"},"content":"     * Constructs a Deadline object with the given description and deadline.","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"BernardLesley"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"BernardLesley"},"content":"     * @param description The description of the Event task.","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"BernardLesley"},"content":"     * @param startDate   The start date of the Event task.","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"BernardLesley"},"content":"     * @param endDate     The end date of the Event task.","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"BernardLesley"},"content":"    public Event(String desciption, LocalDateTime startTime, LocalDateTime endTime) {","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"BernardLesley"},"content":"        super(desciption);","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"BernardLesley"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"BernardLesley"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"BernardLesley"},"content":"     * Returns a string representation of the event task.","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"BernardLesley"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"BernardLesley"},"content":"     * @return a string representation of the event task","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"BernardLesley"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"BernardLesley"},"content":"    public String toString() {","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"BernardLesley"},"content":"        return \"[\" + getTaskType() + \"]\" + super.toString()","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"BernardLesley"},"content":"                + \" (from: \" + ui.getShowDateFormat(startTime)","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"BernardLesley"},"content":"                + \" to: \" + ui.getShowDateFormat(endTime) + \")\";","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":37,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"BernardLesley"},"content":"     * Returns the task type, \"E\" for event.","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"BernardLesley"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"BernardLesley"},"content":"     * @return the task type","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"BernardLesley"},"content":"    @Override","lastModifiedDate":"2023-02-11"},{"lineNumber":43,"author":{"gitId":"BernardLesley"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-02-11"},{"lineNumber":44,"author":{"gitId":"BernardLesley"},"content":"        return \"E\";","lastModifiedDate":"2023-02-11"},{"lineNumber":45,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":46,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":47,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"BernardLesley"},"content":"     * Returns the start date of the task.","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"BernardLesley"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"BernardLesley"},"content":"     * @return the start date of the task","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"BernardLesley"},"content":"    public LocalDateTime getStartTime() {","lastModifiedDate":"2023-02-15"},{"lineNumber":53,"author":{"gitId":"BernardLesley"},"content":"        return startTime;","lastModifiedDate":"2023-02-26"},{"lineNumber":54,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":55,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":56,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"BernardLesley"},"content":"     * Returns the end date of the task.","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"BernardLesley"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"BernardLesley"},"content":"     * @return the end date of the task","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"BernardLesley"},"content":"    public LocalDateTime getEndTime() {","lastModifiedDate":"2023-02-15"},{"lineNumber":62,"author":{"gitId":"BernardLesley"},"content":"        return endTime;","lastModifiedDate":"2023-02-26"},{"lineNumber":63,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"BernardLesley"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"BernardLesley":64}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BernardLesley"},"content":"package duke.task;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"BernardLesley"},"content":"import duke.ui.TextUi;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"BernardLesley"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"BernardLesley"},"content":" * Represents a task in the task list.","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"BernardLesley"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"BernardLesley"},"content":"public abstract class Task {","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"BernardLesley"},"content":"    private boolean isDone;","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"BernardLesley"},"content":"    private String desciption;","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"BernardLesley"},"content":"    protected TextUi ui \u003d new TextUi();","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"BernardLesley"},"content":"     * Constructs a task object with the given description and sets its completion status to false.","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"BernardLesley"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"BernardLesley"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"BernardLesley"},"content":"    public Task(String desciption) {","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"BernardLesley"},"content":"        this.desciption \u003d desciption;","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"BernardLesley"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"BernardLesley"},"content":"     * Returns the description of the task.","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"BernardLesley"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"BernardLesley"},"content":"     * @return The description of the task.","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"BernardLesley"},"content":"    public String getTaskDescription() {","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"BernardLesley"},"content":"        return desciption;","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":32,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":33,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"BernardLesley"},"content":"     * Returns the status of the task.","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"BernardLesley"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"BernardLesley"},"content":"     * @return The status of the task.","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"BernardLesley"},"content":"    public boolean getStatus() {","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"BernardLesley"},"content":"        return isDone;","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":42,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"BernardLesley"},"content":"     * Returns the status icon of the task, which is \"X\" for marked tasks and \" \" for unmarked ones.","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"BernardLesley"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"BernardLesley"},"content":"     * @return The status icon of the task.","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"BernardLesley"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"BernardLesley"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-02-09"},{"lineNumber":49,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":50,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":51,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"BernardLesley"},"content":"     * Sets the completion status of the task to the given status.","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"BernardLesley"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"BernardLesley"},"content":"     * @param status The completion status of the task.","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"BernardLesley"},"content":"    public void setStatus(boolean status) {","lastModifiedDate":"2023-02-09"},{"lineNumber":57,"author":{"gitId":"BernardLesley"},"content":"        this.isDone \u003d status;","lastModifiedDate":"2023-02-09"},{"lineNumber":58,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":59,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":60,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"BernardLesley"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"BernardLesley"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"BernardLesley"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"BernardLesley"},"content":"    public String toString() {","lastModifiedDate":"2023-02-09"},{"lineNumber":66,"author":{"gitId":"BernardLesley"},"content":"        return \"[\" + getStatusIcon() + \"] \" + getTaskDescription();","lastModifiedDate":"2023-02-11"},{"lineNumber":67,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":68,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":69,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"BernardLesley"},"content":"     * Returns the type of the task.","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"BernardLesley"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"BernardLesley"},"content":"     * @return The type of the task.","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"BernardLesley"},"content":"    public abstract String getTaskType();","lastModifiedDate":"2023-02-11"},{"lineNumber":75,"author":{"gitId":"BernardLesley"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"BernardLesley":75}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BernardLesley"},"content":"package duke.task;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"BernardLesley"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"BernardLesley"},"content":" * A class representing a Todo task.","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"BernardLesley"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"BernardLesley"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"BernardLesley"},"content":"    public Todo(String desciption) {","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"BernardLesley"},"content":"        super(desciption);","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"BernardLesley"},"content":"     * Returns a string representation of the todo task.","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"BernardLesley"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"BernardLesley"},"content":"     * @return a string representation of the todo task","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"BernardLesley"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"BernardLesley"},"content":"    public String toString() {","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"BernardLesley"},"content":"        return \"[\" + getTaskType() + \"]\" + super.toString();","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"BernardLesley"},"content":"     * Returns the task type, \"D\" for deadline.","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"BernardLesley"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"BernardLesley"},"content":"     * @return the task type","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"BernardLesley"},"content":"    @Override","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"BernardLesley"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"BernardLesley"},"content":"        return \"T\";","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"BernardLesley"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"BernardLesley":30}},{"path":"src/main/java/duke/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BernardLesley"},"content":"package duke.tasklist;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"BernardLesley"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"BernardLesley"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"BernardLesley"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"BernardLesley"},"content":" * TaskList class represents a list of tasks.","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"BernardLesley"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"BernardLesley"},"content":"public class TaskList {","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"BernardLesley"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"BernardLesley"},"content":"     * Constructs a TaskList object with an empty list of tasks.","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"BernardLesley"},"content":"    public TaskList() {","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"BernardLesley"},"content":"        tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"BernardLesley"},"content":"     * Constructs a TaskList object with an existing list of tasks.","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"BernardLesley"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"BernardLesley"},"content":"     * @param tasks the existing list of tasks.","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"BernardLesley"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"BernardLesley"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"BernardLesley"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"BernardLesley"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"BernardLesley"},"content":"     * @param task the task to be added.","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"BernardLesley"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"BernardLesley"},"content":"        tasks.add(task);","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"BernardLesley"},"content":"     * Deletes a task from the task list based on the specified index.","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"BernardLesley"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"BernardLesley"},"content":"     * @param indexTask the index of the task to be deleted.","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"BernardLesley"},"content":"     * @return the deleted task.","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"BernardLesley"},"content":"    public Task deleteTask(int indexTask) {","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"BernardLesley"},"content":"        Task deletedTask \u003d tasks.get(indexTask);","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"BernardLesley"},"content":"        tasks.remove(indexTask);","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"BernardLesley"},"content":"        return deletedTask;","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":49,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"BernardLesley"},"content":"     * Gets the number of tasks in the task list.","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"BernardLesley"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"BernardLesley"},"content":"     * @return the number of tasks in the task list.","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"BernardLesley"},"content":"    public int getNumTask() {","lastModifiedDate":"2023-02-26"},{"lineNumber":56,"author":{"gitId":"BernardLesley"},"content":"        return tasks.size();","lastModifiedDate":"2023-02-26"},{"lineNumber":57,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":58,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":59,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"BernardLesley"},"content":"     * Gets the list of tasks in the task list.","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"BernardLesley"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"BernardLesley"},"content":"     * @return the list of tasks in the task list.","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"BernardLesley"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-02-26"},{"lineNumber":65,"author":{"gitId":"BernardLesley"},"content":"        return tasks;","lastModifiedDate":"2023-02-26"},{"lineNumber":66,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":67,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":68,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"BernardLesley"},"content":"     * Gets the task in the task list based on the specified index.","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"BernardLesley"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"BernardLesley"},"content":"     * @param indexTask the index of the task to be retrieved.","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"BernardLesley"},"content":"     * @return the task at the specified index.","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"BernardLesley"},"content":"    public Task getTaskByIndex(int indexTask) {","lastModifiedDate":"2023-02-26"},{"lineNumber":75,"author":{"gitId":"BernardLesley"},"content":"        return tasks.get(indexTask);","lastModifiedDate":"2023-02-26"},{"lineNumber":76,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":77,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":78,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":79,"author":{"gitId":"BernardLesley"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"BernardLesley":79}},{"path":"src/main/java/duke/ui/TextUi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BernardLesley"},"content":"package duke.ui;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"BernardLesley"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"BernardLesley"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"BernardLesley"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"BernardLesley"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"BernardLesley"},"content":"import java.io.InputStream;","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"BernardLesley"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"BernardLesley"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"BernardLesley"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"BernardLesley"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"BernardLesley"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"BernardLesley"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"BernardLesley"},"content":"import static duke.commons.Messages.MESSAGE_ERROR_FORMAT_DATE;","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"BernardLesley"},"content":"import static duke.commons.Messages.MESSAGE_ERROR_FORMAT_DATE_TIME;","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"BernardLesley"},"content":"import static duke.commons.Messages.MESSAGE_ERROR_FORMAT_DEADLINE;","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"BernardLesley"},"content":"import static duke.commons.Messages.MESSAGE_ERROR_FORMAT_EVENT;","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"BernardLesley"},"content":"import static duke.commons.Messages.MESSAGE_ERROR_GENERAL;","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"BernardLesley"},"content":"import static duke.commons.Messages.MESSAGE_ERROR_LOADING;","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"BernardLesley"},"content":"import static duke.commons.Messages.MESSAGE_ERROR_TASK_INDEX_NOT_INTEGER;","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"BernardLesley"},"content":"import static duke.commons.Messages.MESSAGE_ERROR_TASK_INDEX_OUT_OF_BOUNDS;","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"BernardLesley"},"content":"import static duke.commons.Messages.MESSAGE_GOODBYE;","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"BernardLesley"},"content":"import static duke.commons.Messages.MESSAGE_TASK_LIST;","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"BernardLesley"},"content":"import static duke.commons.Messages.MESSAGE_TASK_LIST_EMPTY;","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"BernardLesley"},"content":"import static duke.commons.Messages.MESSAGE_PROMPT_EMPTY_ERROR;","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"BernardLesley"},"content":"import static duke.commons.Messages.MESSAGE_TASK_ADD;","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"BernardLesley"},"content":"import static duke.commons.Messages.MESSAGE_TASK_COUNT;","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"BernardLesley"},"content":"import static duke.commons.Messages.MESSAGE_TASK_MARK;","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"BernardLesley"},"content":"import static duke.commons.Messages.MESSAGE_TASK_REMOVE;","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"BernardLesley"},"content":"import static duke.commons.Messages.MESSAGE_TASK_UNMARK;","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"BernardLesley"},"content":"import static duke.commons.Messages.MESSAGE_WELCOME_INTRODUCTION;","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"BernardLesley"},"content":"import static duke.commons.Messages.MESSAGE_WELCOME_QUESTION;","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"BernardLesley"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"BernardLesley"},"content":" * This class is responsible for handling the Text User Interface (UI) of the application.","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"BernardLesley"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"BernardLesley"},"content":"public class TextUi {","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"BernardLesley"},"content":"    private final InputStream in;","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"BernardLesley"},"content":"    private final PrintStream out;","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"BernardLesley"},"content":"    private static final String DIVIDER \u003d","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"BernardLesley"},"content":"            \"____________________________________________________________\";","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"BernardLesley"},"content":"    private static final int DISPLAYED_INDEX_OFFSET \u003d 1;","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"BernardLesley"},"content":"     * Constructs a new TextUi object.","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"BernardLesley"},"content":"    public TextUi() {","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"BernardLesley"},"content":"        this(System.in, System.out);","lastModifiedDate":"2023-02-26"},{"lineNumber":53,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":54,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":55,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"BernardLesley"},"content":"     * Constructs a new TextUi object with the given input and output streams.","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"BernardLesley"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"BernardLesley"},"content":"     * @param in  The input stream.","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"BernardLesley"},"content":"     * @param out The output stream.","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"BernardLesley"},"content":"    public TextUi(InputStream in, PrintStream out) {","lastModifiedDate":"2023-02-26"},{"lineNumber":62,"author":{"gitId":"BernardLesley"},"content":"        this.in \u003d in;","lastModifiedDate":"2023-02-26"},{"lineNumber":63,"author":{"gitId":"BernardLesley"},"content":"        this.out \u003d out;","lastModifiedDate":"2023-02-26"},{"lineNumber":64,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":65,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":66,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"BernardLesley"},"content":"     * Returns a formatted string of the given date.","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"BernardLesley"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"BernardLesley"},"content":"     * @param date The date to format.","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"BernardLesley"},"content":"     * @return The formatted date string.","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"BernardLesley"},"content":"    public String getShowDateFormat(LocalDateTime date) {","lastModifiedDate":"2023-02-26"},{"lineNumber":73,"author":{"gitId":"BernardLesley"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy hh:mm a\");","lastModifiedDate":"2023-02-26"},{"lineNumber":74,"author":{"gitId":"BernardLesley"},"content":"        String formattedDate \u003d date.format(formatter);","lastModifiedDate":"2023-02-26"},{"lineNumber":75,"author":{"gitId":"BernardLesley"},"content":"        return formattedDate;","lastModifiedDate":"2023-02-26"},{"lineNumber":76,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":77,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":78,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"BernardLesley"},"content":"     * Prints the given task if it contains the specified date.","lastModifiedDate":"2023-03-03"},{"lineNumber":80,"author":{"gitId":"BernardLesley"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"BernardLesley"},"content":"     * @param indexTask The index of the task to print.","lastModifiedDate":"2023-03-03"},{"lineNumber":82,"author":{"gitId":"BernardLesley"},"content":"     * @param task      The task to print.","lastModifiedDate":"2023-03-03"},{"lineNumber":83,"author":{"gitId":"BernardLesley"},"content":"     * @param date      The date to check against the task.","lastModifiedDate":"2023-03-03"},{"lineNumber":84,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":85,"author":{"gitId":"BernardLesley"},"content":"    public void printTaskContainingDate(int indexTask, Task task, LocalDateTime date) {","lastModifiedDate":"2023-02-26"},{"lineNumber":86,"author":{"gitId":"BernardLesley"},"content":"        LocalDate startTime;","lastModifiedDate":"2023-02-26"},{"lineNumber":87,"author":{"gitId":"BernardLesley"},"content":"        LocalDate endTime;","lastModifiedDate":"2023-02-26"},{"lineNumber":88,"author":{"gitId":"BernardLesley"},"content":"        LocalDate currentDate \u003d date.toLocalDate();","lastModifiedDate":"2023-02-26"},{"lineNumber":89,"author":{"gitId":"BernardLesley"},"content":"        switch (task.getTaskType()) {","lastModifiedDate":"2023-02-26"},{"lineNumber":90,"author":{"gitId":"BernardLesley"},"content":"        case \"D\":","lastModifiedDate":"2023-02-26"},{"lineNumber":91,"author":{"gitId":"BernardLesley"},"content":"            Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2023-02-26"},{"lineNumber":92,"author":{"gitId":"BernardLesley"},"content":"            endTime \u003d deadline.getEndTime().toLocalDate();","lastModifiedDate":"2023-02-26"},{"lineNumber":93,"author":{"gitId":"BernardLesley"},"content":"            if (endTime.equals(currentDate)) {","lastModifiedDate":"2023-02-26"},{"lineNumber":94,"author":{"gitId":"BernardLesley"},"content":"                showMessage(indexTask + \". \" + task.toString());","lastModifiedDate":"2023-02-26"},{"lineNumber":95,"author":{"gitId":"BernardLesley"},"content":"            }","lastModifiedDate":"2023-02-26"},{"lineNumber":96,"author":{"gitId":"BernardLesley"},"content":"            break;","lastModifiedDate":"2023-02-26"},{"lineNumber":97,"author":{"gitId":"BernardLesley"},"content":"        case \"E\":","lastModifiedDate":"2023-02-26"},{"lineNumber":98,"author":{"gitId":"BernardLesley"},"content":"            Event event \u003d (Event) task;","lastModifiedDate":"2023-02-26"},{"lineNumber":99,"author":{"gitId":"BernardLesley"},"content":"            startTime \u003d event.getStartTime().toLocalDate();","lastModifiedDate":"2023-02-26"},{"lineNumber":100,"author":{"gitId":"BernardLesley"},"content":"            endTime \u003d event.getEndTime().toLocalDate();","lastModifiedDate":"2023-02-26"},{"lineNumber":101,"author":{"gitId":"BernardLesley"},"content":"            if (startTime.equals(currentDate) || endTime.equals(currentDate)) {","lastModifiedDate":"2023-02-26"},{"lineNumber":102,"author":{"gitId":"BernardLesley"},"content":"                showMessage(indexTask + \". \" + task.toString());","lastModifiedDate":"2023-02-26"},{"lineNumber":103,"author":{"gitId":"BernardLesley"},"content":"            }","lastModifiedDate":"2023-02-26"},{"lineNumber":104,"author":{"gitId":"BernardLesley"},"content":"            break;","lastModifiedDate":"2023-02-26"},{"lineNumber":105,"author":{"gitId":"BernardLesley"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":106,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":107,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":108,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":109,"author":{"gitId":"BernardLesley"},"content":"     * Prints the given task if it contains the specified keyword.","lastModifiedDate":"2023-03-03"},{"lineNumber":110,"author":{"gitId":"BernardLesley"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":111,"author":{"gitId":"BernardLesley"},"content":"     * @param indexTask The index of the task to print.","lastModifiedDate":"2023-03-03"},{"lineNumber":112,"author":{"gitId":"BernardLesley"},"content":"     * @param task      The task to print.","lastModifiedDate":"2023-03-03"},{"lineNumber":113,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":114,"author":{"gitId":"BernardLesley"},"content":"    public void printTaskContainingKeyword(int indexTask, Task task, String keyword) {","lastModifiedDate":"2023-02-26"},{"lineNumber":115,"author":{"gitId":"BernardLesley"},"content":"        if (task.getTaskDescription().contains(keyword)) {","lastModifiedDate":"2023-02-26"},{"lineNumber":116,"author":{"gitId":"BernardLesley"},"content":"            showMessage(indexTask + \". \" + task.toString());","lastModifiedDate":"2023-02-26"},{"lineNumber":117,"author":{"gitId":"BernardLesley"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":118,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":119,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":120,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":121,"author":{"gitId":"BernardLesley"},"content":"     * Displays an error message for an unrecognized command.","lastModifiedDate":"2023-03-03"},{"lineNumber":122,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":123,"author":{"gitId":"BernardLesley"},"content":"    public void showCommandNotFoundError() {","lastModifiedDate":"2023-02-26"},{"lineNumber":124,"author":{"gitId":"BernardLesley"},"content":"        showMessage(","lastModifiedDate":"2023-02-26"},{"lineNumber":125,"author":{"gitId":"BernardLesley"},"content":"                DIVIDER,","lastModifiedDate":"2023-02-26"},{"lineNumber":126,"author":{"gitId":"BernardLesley"},"content":"                MESSAGE_ERROR_GENERAL,","lastModifiedDate":"2023-02-26"},{"lineNumber":127,"author":{"gitId":"BernardLesley"},"content":"                DIVIDER);","lastModifiedDate":"2023-02-26"},{"lineNumber":128,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":129,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":130,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":131,"author":{"gitId":"BernardLesley"},"content":"     * Displays a message for a deleted task.","lastModifiedDate":"2023-03-03"},{"lineNumber":132,"author":{"gitId":"BernardLesley"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":133,"author":{"gitId":"BernardLesley"},"content":"     * @param tasks The task list that the task was deleted from.","lastModifiedDate":"2023-03-03"},{"lineNumber":134,"author":{"gitId":"BernardLesley"},"content":"     * @param task  The task that was deleted.","lastModifiedDate":"2023-03-03"},{"lineNumber":135,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":136,"author":{"gitId":"BernardLesley"},"content":"    public void showDeleteTaskMessage(TaskList tasks, Task task) {","lastModifiedDate":"2023-02-26"},{"lineNumber":137,"author":{"gitId":"BernardLesley"},"content":"        String numTask \u003d ((Integer) tasks.getNumTask()).toString();","lastModifiedDate":"2023-02-26"},{"lineNumber":138,"author":{"gitId":"BernardLesley"},"content":"        showMessage(","lastModifiedDate":"2023-02-26"},{"lineNumber":139,"author":{"gitId":"BernardLesley"},"content":"                DIVIDER,","lastModifiedDate":"2023-02-26"},{"lineNumber":140,"author":{"gitId":"BernardLesley"},"content":"                MESSAGE_TASK_REMOVE,","lastModifiedDate":"2023-02-26"},{"lineNumber":141,"author":{"gitId":"BernardLesley"},"content":"                task.toString(),","lastModifiedDate":"2023-02-26"},{"lineNumber":142,"author":{"gitId":"BernardLesley"},"content":"                MESSAGE_TASK_COUNT.replace(\"{number}\", numTask),","lastModifiedDate":"2023-02-26"},{"lineNumber":143,"author":{"gitId":"BernardLesley"},"content":"                DIVIDER);","lastModifiedDate":"2023-02-26"},{"lineNumber":144,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":145,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":146,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":147,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":148,"author":{"gitId":"BernardLesley"},"content":"     * Prints a goodbye message to the user.","lastModifiedDate":"2023-03-03"},{"lineNumber":149,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":150,"author":{"gitId":"BernardLesley"},"content":"    public void showGoodbye() {","lastModifiedDate":"2023-02-26"},{"lineNumber":151,"author":{"gitId":"BernardLesley"},"content":"        showMessage(","lastModifiedDate":"2023-02-26"},{"lineNumber":152,"author":{"gitId":"BernardLesley"},"content":"                DIVIDER,","lastModifiedDate":"2023-02-26"},{"lineNumber":153,"author":{"gitId":"BernardLesley"},"content":"                MESSAGE_GOODBYE,","lastModifiedDate":"2023-02-26"},{"lineNumber":154,"author":{"gitId":"BernardLesley"},"content":"                DIVIDER);","lastModifiedDate":"2023-02-26"},{"lineNumber":155,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":156,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":157,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":158,"author":{"gitId":"BernardLesley"},"content":"     * Shows an error message for an incorrect task format.","lastModifiedDate":"2023-03-03"},{"lineNumber":159,"author":{"gitId":"BernardLesley"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":160,"author":{"gitId":"BernardLesley"},"content":"     * @param taskType The type of task that was incorrectly formatted.","lastModifiedDate":"2023-03-03"},{"lineNumber":161,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":162,"author":{"gitId":"BernardLesley"},"content":"    public void showIncorrectFormatMessage(String taskType) {","lastModifiedDate":"2023-02-26"},{"lineNumber":163,"author":{"gitId":"BernardLesley"},"content":"        String messageError;","lastModifiedDate":"2023-02-26"},{"lineNumber":164,"author":{"gitId":"BernardLesley"},"content":"        switch (taskType) {","lastModifiedDate":"2023-02-26"},{"lineNumber":165,"author":{"gitId":"BernardLesley"},"content":"        case \"deadline\":","lastModifiedDate":"2023-02-26"},{"lineNumber":166,"author":{"gitId":"BernardLesley"},"content":"            messageError \u003d MESSAGE_ERROR_FORMAT_DEADLINE;","lastModifiedDate":"2023-02-26"},{"lineNumber":167,"author":{"gitId":"BernardLesley"},"content":"            break;","lastModifiedDate":"2023-02-26"},{"lineNumber":168,"author":{"gitId":"BernardLesley"},"content":"        case \"event\":","lastModifiedDate":"2023-02-26"},{"lineNumber":169,"author":{"gitId":"BernardLesley"},"content":"            messageError \u003d MESSAGE_ERROR_FORMAT_EVENT;","lastModifiedDate":"2023-02-26"},{"lineNumber":170,"author":{"gitId":"BernardLesley"},"content":"            break;","lastModifiedDate":"2023-02-26"},{"lineNumber":171,"author":{"gitId":"BernardLesley"},"content":"        default:","lastModifiedDate":"2023-02-26"},{"lineNumber":172,"author":{"gitId":"BernardLesley"},"content":"            messageError \u003d MESSAGE_ERROR_GENERAL;","lastModifiedDate":"2023-02-26"},{"lineNumber":173,"author":{"gitId":"BernardLesley"},"content":"            break;","lastModifiedDate":"2023-02-26"},{"lineNumber":174,"author":{"gitId":"BernardLesley"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":175,"author":{"gitId":"BernardLesley"},"content":"        showMessage(","lastModifiedDate":"2023-02-26"},{"lineNumber":176,"author":{"gitId":"BernardLesley"},"content":"                DIVIDER,","lastModifiedDate":"2023-02-26"},{"lineNumber":177,"author":{"gitId":"BernardLesley"},"content":"                messageError,","lastModifiedDate":"2023-02-26"},{"lineNumber":178,"author":{"gitId":"BernardLesley"},"content":"                DIVIDER);","lastModifiedDate":"2023-02-26"},{"lineNumber":179,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":180,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":181,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":182,"author":{"gitId":"BernardLesley"},"content":"     * Shows a welcome message to the user.","lastModifiedDate":"2023-03-03"},{"lineNumber":183,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":184,"author":{"gitId":"BernardLesley"},"content":"    public void showIntroduction() {","lastModifiedDate":"2023-02-26"},{"lineNumber":185,"author":{"gitId":"BernardLesley"},"content":"        showMessage(","lastModifiedDate":"2023-02-26"},{"lineNumber":186,"author":{"gitId":"BernardLesley"},"content":"                DIVIDER,","lastModifiedDate":"2023-02-26"},{"lineNumber":187,"author":{"gitId":"BernardLesley"},"content":"                MESSAGE_WELCOME_INTRODUCTION,","lastModifiedDate":"2023-02-26"},{"lineNumber":188,"author":{"gitId":"BernardLesley"},"content":"                MESSAGE_WELCOME_QUESTION,","lastModifiedDate":"2023-02-26"},{"lineNumber":189,"author":{"gitId":"BernardLesley"},"content":"                DIVIDER);","lastModifiedDate":"2023-02-26"},{"lineNumber":190,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":191,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":192,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":193,"author":{"gitId":"BernardLesley"},"content":"     * Shows an error message when there is a problem loading the task list.","lastModifiedDate":"2023-03-03"},{"lineNumber":194,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":195,"author":{"gitId":"BernardLesley"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-02-26"},{"lineNumber":196,"author":{"gitId":"BernardLesley"},"content":"        showMessage(","lastModifiedDate":"2023-02-26"},{"lineNumber":197,"author":{"gitId":"BernardLesley"},"content":"                DIVIDER,","lastModifiedDate":"2023-02-26"},{"lineNumber":198,"author":{"gitId":"BernardLesley"},"content":"                MESSAGE_ERROR_LOADING,","lastModifiedDate":"2023-02-26"},{"lineNumber":199,"author":{"gitId":"BernardLesley"},"content":"                DIVIDER);","lastModifiedDate":"2023-02-26"},{"lineNumber":200,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":201,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":202,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":203,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":204,"author":{"gitId":"BernardLesley"},"content":"     * Displays one or more messages on the console.","lastModifiedDate":"2023-03-03"},{"lineNumber":205,"author":{"gitId":"BernardLesley"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":206,"author":{"gitId":"BernardLesley"},"content":"     * @param message one or more messages to be displayed","lastModifiedDate":"2023-03-03"},{"lineNumber":207,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":208,"author":{"gitId":"BernardLesley"},"content":"    public void showMessage(String... message) {","lastModifiedDate":"2023-02-26"},{"lineNumber":209,"author":{"gitId":"BernardLesley"},"content":"        for (String m : message) {","lastModifiedDate":"2023-02-26"},{"lineNumber":210,"author":{"gitId":"BernardLesley"},"content":"            out.println(\"\\t\" + m);","lastModifiedDate":"2023-02-26"},{"lineNumber":211,"author":{"gitId":"BernardLesley"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":212,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":213,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":214,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":215,"author":{"gitId":"BernardLesley"},"content":"     * Displays a message indicating that a new task has been added to the task list.","lastModifiedDate":"2023-03-03"},{"lineNumber":216,"author":{"gitId":"BernardLesley"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":217,"author":{"gitId":"BernardLesley"},"content":"     * @param tasks the current task list","lastModifiedDate":"2023-03-03"},{"lineNumber":218,"author":{"gitId":"BernardLesley"},"content":"     * @param task  the task that was added","lastModifiedDate":"2023-03-03"},{"lineNumber":219,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":220,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":221,"author":{"gitId":"BernardLesley"},"content":"    public void showNewTaskMessage(TaskList tasks, Task task) {","lastModifiedDate":"2023-02-26"},{"lineNumber":222,"author":{"gitId":"BernardLesley"},"content":"        String numTask \u003d ((Integer) tasks.getNumTask()).toString();","lastModifiedDate":"2023-02-26"},{"lineNumber":223,"author":{"gitId":"BernardLesley"},"content":"        showMessage(","lastModifiedDate":"2023-02-26"},{"lineNumber":224,"author":{"gitId":"BernardLesley"},"content":"                DIVIDER,","lastModifiedDate":"2023-02-26"},{"lineNumber":225,"author":{"gitId":"BernardLesley"},"content":"                MESSAGE_TASK_ADD,","lastModifiedDate":"2023-02-26"},{"lineNumber":226,"author":{"gitId":"BernardLesley"},"content":"                task.toString(),","lastModifiedDate":"2023-02-26"},{"lineNumber":227,"author":{"gitId":"BernardLesley"},"content":"                MESSAGE_TASK_COUNT.replace(\"{number}\", numTask),","lastModifiedDate":"2023-02-26"},{"lineNumber":228,"author":{"gitId":"BernardLesley"},"content":"                DIVIDER);","lastModifiedDate":"2023-02-26"},{"lineNumber":229,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":230,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":231,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":232,"author":{"gitId":"BernardLesley"},"content":"     * Displays an error message indicating that the user did not enter a proper (prompt) for a given command.","lastModifiedDate":"2023-03-03"},{"lineNumber":233,"author":{"gitId":"BernardLesley"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":234,"author":{"gitId":"BernardLesley"},"content":"     * @param taskType the type of task for which the user failed to provide a value","lastModifiedDate":"2023-03-03"},{"lineNumber":235,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":236,"author":{"gitId":"BernardLesley"},"content":"    public void showPromptEmptyErrorMessage(String taskType) {","lastModifiedDate":"2023-02-26"},{"lineNumber":237,"author":{"gitId":"BernardLesley"},"content":"        String messageError \u003d MESSAGE_PROMPT_EMPTY_ERROR.replace(\"{taskType}\", taskType);","lastModifiedDate":"2023-02-26"},{"lineNumber":238,"author":{"gitId":"BernardLesley"},"content":"        showMessage(","lastModifiedDate":"2023-02-26"},{"lineNumber":239,"author":{"gitId":"BernardLesley"},"content":"                DIVIDER,","lastModifiedDate":"2023-02-26"},{"lineNumber":240,"author":{"gitId":"BernardLesley"},"content":"                messageError,","lastModifiedDate":"2023-02-26"},{"lineNumber":241,"author":{"gitId":"BernardLesley"},"content":"                DIVIDER);","lastModifiedDate":"2023-02-26"},{"lineNumber":242,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":243,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":244,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":245,"author":{"gitId":"BernardLesley"},"content":"     * Displays an error message indicating that the user entered a non-integer value for a task index.","lastModifiedDate":"2023-03-03"},{"lineNumber":246,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":247,"author":{"gitId":"BernardLesley"},"content":"    public void showTaskIndexNotIntegerError() {","lastModifiedDate":"2023-02-26"},{"lineNumber":248,"author":{"gitId":"BernardLesley"},"content":"        showMessage(","lastModifiedDate":"2023-02-26"},{"lineNumber":249,"author":{"gitId":"BernardLesley"},"content":"                DIVIDER,","lastModifiedDate":"2023-02-26"},{"lineNumber":250,"author":{"gitId":"BernardLesley"},"content":"                MESSAGE_ERROR_TASK_INDEX_NOT_INTEGER,","lastModifiedDate":"2023-02-26"},{"lineNumber":251,"author":{"gitId":"BernardLesley"},"content":"                DIVIDER);","lastModifiedDate":"2023-02-26"},{"lineNumber":252,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":253,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":254,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":255,"author":{"gitId":"BernardLesley"},"content":"     * Displays an error message indicating that the user entered an out-of-bounds value for a task index.","lastModifiedDate":"2023-03-03"},{"lineNumber":256,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":257,"author":{"gitId":"BernardLesley"},"content":"    public void showTaskIndexOutOfBoundsError() {","lastModifiedDate":"2023-02-26"},{"lineNumber":258,"author":{"gitId":"BernardLesley"},"content":"        showMessage(","lastModifiedDate":"2023-02-26"},{"lineNumber":259,"author":{"gitId":"BernardLesley"},"content":"                DIVIDER,","lastModifiedDate":"2023-02-26"},{"lineNumber":260,"author":{"gitId":"BernardLesley"},"content":"                MESSAGE_ERROR_TASK_INDEX_OUT_OF_BOUNDS,","lastModifiedDate":"2023-02-26"},{"lineNumber":261,"author":{"gitId":"BernardLesley"},"content":"                DIVIDER);","lastModifiedDate":"2023-02-26"},{"lineNumber":262,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":263,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":264,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":265,"author":{"gitId":"BernardLesley"},"content":"     * Displays the list of tasks in the task list.","lastModifiedDate":"2023-03-03"},{"lineNumber":266,"author":{"gitId":"BernardLesley"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":267,"author":{"gitId":"BernardLesley"},"content":"     * @param tasks the task list to be displayed","lastModifiedDate":"2023-03-03"},{"lineNumber":268,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":269,"author":{"gitId":"BernardLesley"},"content":"    public void showTaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-26"},{"lineNumber":270,"author":{"gitId":"BernardLesley"},"content":"        showMessage(DIVIDER, MESSAGE_TASK_LIST);","lastModifiedDate":"2023-02-26"},{"lineNumber":271,"author":{"gitId":"BernardLesley"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-02-26"},{"lineNumber":272,"author":{"gitId":"BernardLesley"},"content":"            showMessage(MESSAGE_TASK_LIST_EMPTY);","lastModifiedDate":"2023-02-26"},{"lineNumber":273,"author":{"gitId":"BernardLesley"},"content":"        } else {","lastModifiedDate":"2023-02-26"},{"lineNumber":274,"author":{"gitId":"BernardLesley"},"content":"            int indexTask \u003d DISPLAYED_INDEX_OFFSET;","lastModifiedDate":"2023-02-26"},{"lineNumber":275,"author":{"gitId":"BernardLesley"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-02-26"},{"lineNumber":276,"author":{"gitId":"BernardLesley"},"content":"                showMessage(indexTask + \". \" + task.toString());","lastModifiedDate":"2023-02-26"},{"lineNumber":277,"author":{"gitId":"BernardLesley"},"content":"                indexTask++;","lastModifiedDate":"2023-02-26"},{"lineNumber":278,"author":{"gitId":"BernardLesley"},"content":"            }","lastModifiedDate":"2023-02-26"},{"lineNumber":279,"author":{"gitId":"BernardLesley"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":280,"author":{"gitId":"BernardLesley"},"content":"        showMessage(DIVIDER);","lastModifiedDate":"2023-02-26"},{"lineNumber":281,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":282,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":283,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":284,"author":{"gitId":"BernardLesley"},"content":"     * Displays the list of tasks in the task list that contain the specified date.","lastModifiedDate":"2023-03-03"},{"lineNumber":285,"author":{"gitId":"BernardLesley"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":286,"author":{"gitId":"BernardLesley"},"content":"     * @param tasks the task list to be searched","lastModifiedDate":"2023-03-03"},{"lineNumber":287,"author":{"gitId":"BernardLesley"},"content":"     * @param date  the date to be searched for","lastModifiedDate":"2023-03-03"},{"lineNumber":288,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":289,"author":{"gitId":"BernardLesley"},"content":"    public void showTaskListByDate(ArrayList\u003cTask\u003e tasks, LocalDateTime date) {","lastModifiedDate":"2023-02-26"},{"lineNumber":290,"author":{"gitId":"BernardLesley"},"content":"        showMessage(DIVIDER, MESSAGE_TASK_LIST);","lastModifiedDate":"2023-02-26"},{"lineNumber":291,"author":{"gitId":"BernardLesley"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-02-26"},{"lineNumber":292,"author":{"gitId":"BernardLesley"},"content":"            showMessage(MESSAGE_TASK_LIST_EMPTY);","lastModifiedDate":"2023-02-26"},{"lineNumber":293,"author":{"gitId":"BernardLesley"},"content":"        } else {","lastModifiedDate":"2023-02-26"},{"lineNumber":294,"author":{"gitId":"BernardLesley"},"content":"            int indexTask \u003d DISPLAYED_INDEX_OFFSET;","lastModifiedDate":"2023-02-26"},{"lineNumber":295,"author":{"gitId":"BernardLesley"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-02-26"},{"lineNumber":296,"author":{"gitId":"BernardLesley"},"content":"                printTaskContainingDate(indexTask, task, date);","lastModifiedDate":"2023-02-26"},{"lineNumber":297,"author":{"gitId":"BernardLesley"},"content":"                indexTask++;","lastModifiedDate":"2023-02-26"},{"lineNumber":298,"author":{"gitId":"BernardLesley"},"content":"            }","lastModifiedDate":"2023-02-26"},{"lineNumber":299,"author":{"gitId":"BernardLesley"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":300,"author":{"gitId":"BernardLesley"},"content":"        showMessage(DIVIDER);","lastModifiedDate":"2023-02-26"},{"lineNumber":301,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":302,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":303,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":304,"author":{"gitId":"BernardLesley"},"content":"     * Displays the list of tasks in the task list that contain the specified keyword.","lastModifiedDate":"2023-03-03"},{"lineNumber":305,"author":{"gitId":"BernardLesley"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":306,"author":{"gitId":"BernardLesley"},"content":"     * @param tasks   the task list to be searched","lastModifiedDate":"2023-03-03"},{"lineNumber":307,"author":{"gitId":"BernardLesley"},"content":"     * @param keyword the keyword to be searched for","lastModifiedDate":"2023-03-03"},{"lineNumber":308,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":309,"author":{"gitId":"BernardLesley"},"content":"    public void showTaskListByKeyword(ArrayList\u003cTask\u003e tasks, String keyword) {","lastModifiedDate":"2023-02-26"},{"lineNumber":310,"author":{"gitId":"BernardLesley"},"content":"        showMessage(DIVIDER, MESSAGE_TASK_LIST);","lastModifiedDate":"2023-02-26"},{"lineNumber":311,"author":{"gitId":"BernardLesley"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-02-26"},{"lineNumber":312,"author":{"gitId":"BernardLesley"},"content":"            showMessage(MESSAGE_TASK_LIST_EMPTY);","lastModifiedDate":"2023-02-26"},{"lineNumber":313,"author":{"gitId":"BernardLesley"},"content":"        } else {","lastModifiedDate":"2023-02-26"},{"lineNumber":314,"author":{"gitId":"BernardLesley"},"content":"            int indexTask \u003d DISPLAYED_INDEX_OFFSET;","lastModifiedDate":"2023-02-26"},{"lineNumber":315,"author":{"gitId":"BernardLesley"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-02-26"},{"lineNumber":316,"author":{"gitId":"BernardLesley"},"content":"                printTaskContainingKeyword(indexTask, task, keyword);","lastModifiedDate":"2023-02-26"},{"lineNumber":317,"author":{"gitId":"BernardLesley"},"content":"                indexTask++;","lastModifiedDate":"2023-02-26"},{"lineNumber":318,"author":{"gitId":"BernardLesley"},"content":"            }","lastModifiedDate":"2023-02-26"},{"lineNumber":319,"author":{"gitId":"BernardLesley"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":320,"author":{"gitId":"BernardLesley"},"content":"        showMessage(DIVIDER);","lastModifiedDate":"2023-02-26"},{"lineNumber":321,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":322,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":323,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":324,"author":{"gitId":"BernardLesley"},"content":"     * Displays a message indicating the status of a given task.","lastModifiedDate":"2023-03-03"},{"lineNumber":325,"author":{"gitId":"BernardLesley"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":326,"author":{"gitId":"BernardLesley"},"content":"     * @param task The task to display the status message for.","lastModifiedDate":"2023-03-03"},{"lineNumber":327,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":328,"author":{"gitId":"BernardLesley"},"content":"    public void showTaskStatusMessage(Task task) {","lastModifiedDate":"2023-02-26"},{"lineNumber":329,"author":{"gitId":"BernardLesley"},"content":"        String message;","lastModifiedDate":"2023-02-26"},{"lineNumber":330,"author":{"gitId":"BernardLesley"},"content":"        if (task.getStatus()) {","lastModifiedDate":"2023-02-26"},{"lineNumber":331,"author":{"gitId":"BernardLesley"},"content":"            message \u003d MESSAGE_TASK_MARK;","lastModifiedDate":"2023-02-26"},{"lineNumber":332,"author":{"gitId":"BernardLesley"},"content":"        } else {","lastModifiedDate":"2023-02-26"},{"lineNumber":333,"author":{"gitId":"BernardLesley"},"content":"            message \u003d MESSAGE_TASK_UNMARK;","lastModifiedDate":"2023-02-26"},{"lineNumber":334,"author":{"gitId":"BernardLesley"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":335,"author":{"gitId":"BernardLesley"},"content":"        showMessage(","lastModifiedDate":"2023-02-26"},{"lineNumber":336,"author":{"gitId":"BernardLesley"},"content":"                DIVIDER,","lastModifiedDate":"2023-02-26"},{"lineNumber":337,"author":{"gitId":"BernardLesley"},"content":"                message,","lastModifiedDate":"2023-02-26"},{"lineNumber":338,"author":{"gitId":"BernardLesley"},"content":"                task.toString(),","lastModifiedDate":"2023-02-26"},{"lineNumber":339,"author":{"gitId":"BernardLesley"},"content":"                DIVIDER);","lastModifiedDate":"2023-02-26"},{"lineNumber":340,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":341,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":342,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":343,"author":{"gitId":"BernardLesley"},"content":"     * Displays an error message indicating that the date format used is incorrect.","lastModifiedDate":"2023-03-03"},{"lineNumber":344,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":345,"author":{"gitId":"BernardLesley"},"content":"    public void showWrongDateFormatError() {","lastModifiedDate":"2023-02-26"},{"lineNumber":346,"author":{"gitId":"BernardLesley"},"content":"        showMessage(","lastModifiedDate":"2023-02-26"},{"lineNumber":347,"author":{"gitId":"BernardLesley"},"content":"                DIVIDER,","lastModifiedDate":"2023-02-26"},{"lineNumber":348,"author":{"gitId":"BernardLesley"},"content":"                MESSAGE_ERROR_FORMAT_DATE,","lastModifiedDate":"2023-02-26"},{"lineNumber":349,"author":{"gitId":"BernardLesley"},"content":"                DIVIDER);","lastModifiedDate":"2023-02-26"},{"lineNumber":350,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":351,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":352,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":353,"author":{"gitId":"BernardLesley"},"content":"     * Displays an error message indicating that the date and time format used is incorrect.","lastModifiedDate":"2023-03-03"},{"lineNumber":354,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":355,"author":{"gitId":"BernardLesley"},"content":"    public void showWrongDateTimeFormatError() {","lastModifiedDate":"2023-02-26"},{"lineNumber":356,"author":{"gitId":"BernardLesley"},"content":"        showMessage(","lastModifiedDate":"2023-02-26"},{"lineNumber":357,"author":{"gitId":"BernardLesley"},"content":"                DIVIDER,","lastModifiedDate":"2023-02-26"},{"lineNumber":358,"author":{"gitId":"BernardLesley"},"content":"                MESSAGE_ERROR_FORMAT_DATE_TIME,","lastModifiedDate":"2023-02-26"},{"lineNumber":359,"author":{"gitId":"BernardLesley"},"content":"                DIVIDER);","lastModifiedDate":"2023-02-26"},{"lineNumber":360,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":361,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":362,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":363,"author":{"gitId":"BernardLesley"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":364,"author":{"gitId":"BernardLesley"},"content":"     * Scans the input from the user and returns the scanned line as a string.","lastModifiedDate":"2023-03-03"},{"lineNumber":365,"author":{"gitId":"BernardLesley"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":366,"author":{"gitId":"BernardLesley"},"content":"     * @return The scanned line as a string.","lastModifiedDate":"2023-03-03"},{"lineNumber":367,"author":{"gitId":"BernardLesley"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":368,"author":{"gitId":"BernardLesley"},"content":"    public String scanLine() {","lastModifiedDate":"2023-02-26"},{"lineNumber":369,"author":{"gitId":"BernardLesley"},"content":"        Scanner sc \u003d new Scanner(in);","lastModifiedDate":"2023-02-26"},{"lineNumber":370,"author":{"gitId":"BernardLesley"},"content":"        String line \u003d sc.nextLine();","lastModifiedDate":"2023-02-26"},{"lineNumber":371,"author":{"gitId":"BernardLesley"},"content":"        return line;","lastModifiedDate":"2023-02-26"},{"lineNumber":372,"author":{"gitId":"BernardLesley"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":373,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":374,"author":{"gitId":"BernardLesley"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":375,"author":{"gitId":"BernardLesley"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"BernardLesley":375}}]
