[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"HiIAmTzeKean"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.6.0\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"HiIAmTzeKean"},"content":"    testImplementation group: \u0027org.junit.platform\u0027, name: \u0027junit-platform-launcher\u0027, version: \u00271.5.2\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"HiIAmTzeKean"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.6.0\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"HiIAmTzeKean"},"content":"    implementation group: \u0027com.diogonunes\u0027, name: \u0027JColor\u0027, version: \u00275.2.0\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"HiIAmTzeKean"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"HiIAmTzeKean":5,"-":38}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HiIAmTzeKean"},"content":"package duke;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"HiIAmTzeKean"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":3,"author":{"gitId":"HiIAmTzeKean"},"content":"import java.io.File;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"HiIAmTzeKean"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"HiIAmTzeKean"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-13"},{"lineNumber":6,"author":{"gitId":"HiIAmTzeKean"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"HiIAmTzeKean"},"content":"import parser.IParser;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"HiIAmTzeKean"},"content":"import parser.Parser;","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"HiIAmTzeKean"},"content":"import serialiser.ISerialiser;","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"HiIAmTzeKean"},"content":"import serialiser.Serialiser;","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"HiIAmTzeKean"},"content":"import task.ITaskController;","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"HiIAmTzeKean"},"content":"import task.TaskController;","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"HiIAmTzeKean"},"content":"import ui.IUi;","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"HiIAmTzeKean"},"content":"import ui.Ui;","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"HiIAmTzeKean"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":16,"author":{"gitId":"HiIAmTzeKean"},"content":"/**","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"HiIAmTzeKean"},"content":" * Duke class acts as the overall controller for the other classes. It will use UI class","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"HiIAmTzeKean"},"content":" * for user interfacing, and parser to make sense of the user command given.","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"HiIAmTzeKean"},"content":" */","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2023-01-11"},{"lineNumber":21,"author":{"gitId":"HiIAmTzeKean"},"content":"    // Composition of other classes to support main method","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"HiIAmTzeKean"},"content":"    private static Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"HiIAmTzeKean"},"content":"    private static IParser parser \u003d new Parser(sc);","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"HiIAmTzeKean"},"content":"    private static ITaskController taskController \u003d new TaskController();","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"HiIAmTzeKean"},"content":"    private static IUi ui \u003d new Ui();","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"HiIAmTzeKean"},"content":"    private static ISerialiser serialiser \u003d null;","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-01-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Main program that runs the Duke program.","lastModifiedDate":"2023-01-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Greets users and exits.","lastModifiedDate":"2023-01-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @param args","lastModifiedDate":"2023-01-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-01-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-11"},{"lineNumber":33,"author":{"gitId":"HiIAmTzeKean"},"content":"        loadDataFile();","lastModifiedDate":"2023-02-10"},{"lineNumber":34,"author":{"gitId":"HiIAmTzeKean"},"content":"        ui.greet();","lastModifiedDate":"2023-02-10"},{"lineNumber":35,"author":{"gitId":"HiIAmTzeKean"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"HiIAmTzeKean"},"content":"        do {","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"HiIAmTzeKean"},"content":"            isExit \u003d executeProgram();","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"HiIAmTzeKean"},"content":"        } while(!isExit);","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"HiIAmTzeKean"},"content":"        saveDataFile();","lastModifiedDate":"2023-02-10"},{"lineNumber":40,"author":{"gitId":"HiIAmTzeKean"},"content":"        ui.bye();","lastModifiedDate":"2023-02-10"},{"lineNumber":41,"author":{"gitId":"HiIAmTzeKean"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"HiIAmTzeKean"},"content":"    private static void loadDataFile(){","lastModifiedDate":"2023-02-10"},{"lineNumber":43,"author":{"gitId":"HiIAmTzeKean"},"content":"        while (serialiser \u003d\u003d null) {","lastModifiedDate":"2023-02-10"},{"lineNumber":44,"author":{"gitId":"HiIAmTzeKean"},"content":"            try {","lastModifiedDate":"2023-02-10"},{"lineNumber":45,"author":{"gitId":"HiIAmTzeKean"},"content":"                serialiser \u003d new Serialiser();","lastModifiedDate":"2023-02-10"},{"lineNumber":46,"author":{"gitId":"HiIAmTzeKean"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-02-10"},{"lineNumber":47,"author":{"gitId":"HiIAmTzeKean"},"content":"                checkDataDirectory();","lastModifiedDate":"2023-02-10"},{"lineNumber":48,"author":{"gitId":"HiIAmTzeKean"},"content":"            }","lastModifiedDate":"2023-02-10"},{"lineNumber":49,"author":{"gitId":"HiIAmTzeKean"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":50,"author":{"gitId":"HiIAmTzeKean"},"content":"        serialiser.deserialiseFile(taskController);","lastModifiedDate":"2023-02-10"},{"lineNumber":51,"author":{"gitId":"HiIAmTzeKean"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":52,"author":{"gitId":"HiIAmTzeKean"},"content":"    private static void saveDataFile() {","lastModifiedDate":"2023-02-10"},{"lineNumber":53,"author":{"gitId":"HiIAmTzeKean"},"content":"        serialiser.serialiseFile(taskController);","lastModifiedDate":"2023-02-10"},{"lineNumber":54,"author":{"gitId":"HiIAmTzeKean"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":55,"author":{"gitId":"HiIAmTzeKean"},"content":"    private static void checkDataDirectory() {","lastModifiedDate":"2023-02-10"},{"lineNumber":56,"author":{"gitId":"HiIAmTzeKean"},"content":"        File directory \u003d new File(\"data\");","lastModifiedDate":"2023-02-10"},{"lineNumber":57,"author":{"gitId":"HiIAmTzeKean"},"content":"        if (!directory.isDirectory()) {","lastModifiedDate":"2023-02-10"},{"lineNumber":58,"author":{"gitId":"HiIAmTzeKean"},"content":"            // Then directory does not exist and need to create one","lastModifiedDate":"2023-02-10"},{"lineNumber":59,"author":{"gitId":"HiIAmTzeKean"},"content":"            ui.printSystemErrorMessage(\"The data directory does not exist yet!!\\nProceeding to create one now...\");","lastModifiedDate":"2023-02-10"},{"lineNumber":60,"author":{"gitId":"HiIAmTzeKean"},"content":"            directory.mkdir();","lastModifiedDate":"2023-02-10"},{"lineNumber":61,"author":{"gitId":"HiIAmTzeKean"},"content":"            checkDataFile();","lastModifiedDate":"2023-02-10"},{"lineNumber":62,"author":{"gitId":"HiIAmTzeKean"},"content":"            ui.printSystemMessage(\"Directory creation success\");","lastModifiedDate":"2023-02-10"},{"lineNumber":63,"author":{"gitId":"HiIAmTzeKean"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":64,"author":{"gitId":"HiIAmTzeKean"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":65,"author":{"gitId":"HiIAmTzeKean"},"content":"    private static void checkDataFile() {","lastModifiedDate":"2023-02-10"},{"lineNumber":66,"author":{"gitId":"HiIAmTzeKean"},"content":"        try {","lastModifiedDate":"2023-02-10"},{"lineNumber":67,"author":{"gitId":"HiIAmTzeKean"},"content":"            File file \u003d new File(\"data/duke.txt\");","lastModifiedDate":"2023-02-10"},{"lineNumber":68,"author":{"gitId":"HiIAmTzeKean"},"content":"            if (!file.isFile()) {","lastModifiedDate":"2023-02-10"},{"lineNumber":69,"author":{"gitId":"HiIAmTzeKean"},"content":"                // Then directory does not exist and need to create one","lastModifiedDate":"2023-02-10"},{"lineNumber":70,"author":{"gitId":"HiIAmTzeKean"},"content":"                ui.printSystemErrorMessage(\"The data file does not exist yet!!\\nProceeding to create one now...\");","lastModifiedDate":"2023-02-10"},{"lineNumber":71,"author":{"gitId":"HiIAmTzeKean"},"content":"                file.createNewFile();","lastModifiedDate":"2023-02-10"},{"lineNumber":72,"author":{"gitId":"HiIAmTzeKean"},"content":"                ui.printSystemMessage(\"file creation success\");","lastModifiedDate":"2023-02-10"},{"lineNumber":73,"author":{"gitId":"HiIAmTzeKean"},"content":"            }","lastModifiedDate":"2023-02-10"},{"lineNumber":74,"author":{"gitId":"HiIAmTzeKean"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-10"},{"lineNumber":75,"author":{"gitId":"HiIAmTzeKean"},"content":"            // TODO: handle exception","lastModifiedDate":"2023-02-10"},{"lineNumber":76,"author":{"gitId":"HiIAmTzeKean"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":77,"author":{"gitId":"HiIAmTzeKean"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":78,"author":{"gitId":"HiIAmTzeKean"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":79,"author":{"gitId":"HiIAmTzeKean"},"content":"     * Executes the logic of the program. Returns true when program should exit.","lastModifiedDate":"2023-01-30"},{"lineNumber":80,"author":{"gitId":"HiIAmTzeKean"},"content":"     * @return boolean isExit","lastModifiedDate":"2023-01-30"},{"lineNumber":81,"author":{"gitId":"HiIAmTzeKean"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":82,"author":{"gitId":"HiIAmTzeKean"},"content":"    private static boolean executeProgram(){","lastModifiedDate":"2023-01-30"},{"lineNumber":83,"author":{"gitId":"HiIAmTzeKean"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":84,"author":{"gitId":"HiIAmTzeKean"},"content":"            switch (parser.getCommand()) {","lastModifiedDate":"2023-01-23"},{"lineNumber":85,"author":{"gitId":"HiIAmTzeKean"},"content":"            case EXIT:","lastModifiedDate":"2023-01-23"},{"lineNumber":86,"author":{"gitId":"HiIAmTzeKean"},"content":"                return true;","lastModifiedDate":"2023-01-30"},{"lineNumber":87,"author":{"gitId":"HiIAmTzeKean"},"content":"            case LIST:","lastModifiedDate":"2023-01-23"},{"lineNumber":88,"author":{"gitId":"HiIAmTzeKean"},"content":"                ui.printSystemMessage(taskController.getTasks());","lastModifiedDate":"2023-02-10"},{"lineNumber":89,"author":{"gitId":"HiIAmTzeKean"},"content":"                return false;","lastModifiedDate":"2023-01-30"},{"lineNumber":90,"author":{"gitId":"HiIAmTzeKean"},"content":"            case TASK:","lastModifiedDate":"2023-01-23"},{"lineNumber":91,"author":{"gitId":"HiIAmTzeKean"},"content":"                ui.printSystemMessage(taskController.addTask(parser.getTask()));","lastModifiedDate":"2023-02-10"},{"lineNumber":92,"author":{"gitId":"HiIAmTzeKean"},"content":"                return false;","lastModifiedDate":"2023-01-30"},{"lineNumber":93,"author":{"gitId":"HiIAmTzeKean"},"content":"            case UNMARK:","lastModifiedDate":"2023-01-23"},{"lineNumber":94,"author":{"gitId":"HiIAmTzeKean"},"content":"                ui.printSystemMessage(taskController.unmarkTask(parser.getTaskIndex()));","lastModifiedDate":"2023-02-10"},{"lineNumber":95,"author":{"gitId":"HiIAmTzeKean"},"content":"                return false;","lastModifiedDate":"2023-01-30"},{"lineNumber":96,"author":{"gitId":"HiIAmTzeKean"},"content":"            case MARK:","lastModifiedDate":"2023-01-23"},{"lineNumber":97,"author":{"gitId":"HiIAmTzeKean"},"content":"                ui.printSystemMessage(taskController.markTask(parser.getTaskIndex()));","lastModifiedDate":"2023-02-10"},{"lineNumber":98,"author":{"gitId":"HiIAmTzeKean"},"content":"                return false;","lastModifiedDate":"2023-01-30"},{"lineNumber":99,"author":{"gitId":"HiIAmTzeKean"},"content":"            case DELETE:","lastModifiedDate":"2023-02-10"},{"lineNumber":100,"author":{"gitId":"HiIAmTzeKean"},"content":"                ui.printSystemMessage(taskController.deleteTask(parser.getTaskIndex()));","lastModifiedDate":"2023-02-10"},{"lineNumber":101,"author":{"gitId":"HiIAmTzeKean"},"content":"            default:","lastModifiedDate":"2023-01-23"},{"lineNumber":102,"author":{"gitId":"HiIAmTzeKean"},"content":"                return false;","lastModifiedDate":"2023-01-30"},{"lineNumber":103,"author":{"gitId":"HiIAmTzeKean"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":104,"author":{"gitId":"HiIAmTzeKean"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":105,"author":{"gitId":"HiIAmTzeKean"},"content":"            ui.printSystemErrorMessage(e.getMessage());","lastModifiedDate":"2023-02-10"},{"lineNumber":106,"author":{"gitId":"HiIAmTzeKean"},"content":"            return false;","lastModifiedDate":"2023-01-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        } ","lastModifiedDate":"2023-01-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-01-11"}],"authorContributionMap":{"HiIAmTzeKean":99,"-":10}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HiIAmTzeKean"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"HiIAmTzeKean"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"HiIAmTzeKean"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"HiIAmTzeKean"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"HiIAmTzeKean"},"content":"     * Super class for all other exceptions that will be thrown","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"HiIAmTzeKean"},"content":"     * in project","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"HiIAmTzeKean"},"content":"     * @param message To be printed","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"HiIAmTzeKean"},"content":"     * @param err Root of error that caused exception to be raised","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"HiIAmTzeKean"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"HiIAmTzeKean"},"content":"    public DukeException(String message, Throwable err) {","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"HiIAmTzeKean"},"content":"        super(message,err);","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"HiIAmTzeKean"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"HiIAmTzeKean"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"HiIAmTzeKean":13}},{"path":"src/main/java/parser/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HiIAmTzeKean"},"content":"package parser;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"HiIAmTzeKean"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"HiIAmTzeKean"},"content":"/**","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"HiIAmTzeKean"},"content":" * Enum for the different commnads available","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"HiIAmTzeKean"},"content":" */","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"HiIAmTzeKean"},"content":"public enum Command {","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"HiIAmTzeKean"},"content":"    LIST,","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"HiIAmTzeKean"},"content":"    TASK,","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"HiIAmTzeKean"},"content":"    MARK,","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"HiIAmTzeKean"},"content":"    UNMARK,","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"HiIAmTzeKean"},"content":"    DELETE,","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"HiIAmTzeKean"},"content":"    EXIT","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"HiIAmTzeKean"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"HiIAmTzeKean":13}},{"path":"src/main/java/parser/EmptyCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HiIAmTzeKean"},"content":"package parser;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"HiIAmTzeKean"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"HiIAmTzeKean"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"HiIAmTzeKean"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"HiIAmTzeKean"},"content":"public class EmptyCommandException extends DukeException {","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"HiIAmTzeKean"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"HiIAmTzeKean"},"content":"     * Custom exception for empty message or message with only blank spaces","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"HiIAmTzeKean"},"content":"     * being passed into console.","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"HiIAmTzeKean"},"content":"     * @param message Error message to raise","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"HiIAmTzeKean"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"HiIAmTzeKean"},"content":"    public EmptyCommandException(String message, Throwable err) {","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"HiIAmTzeKean"},"content":"        super(message, err);","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"HiIAmTzeKean"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"HiIAmTzeKean"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"HiIAmTzeKean":14}},{"path":"src/main/java/parser/IParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HiIAmTzeKean"},"content":"package parser;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"HiIAmTzeKean"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"HiIAmTzeKean"},"content":"import task.Task;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"HiIAmTzeKean"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"HiIAmTzeKean"},"content":"public interface IParser {","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"HiIAmTzeKean"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"HiIAmTzeKean"},"content":"     * Returns the last message obtained from user.","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"HiIAmTzeKean"},"content":"     * @return last message String by user","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"HiIAmTzeKean"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"HiIAmTzeKean"},"content":"    public String getMessage();","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"HiIAmTzeKean"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"HiIAmTzeKean"},"content":"     * Parses the user input from console and obtains the arguments.","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"HiIAmTzeKean"},"content":"     * @param command type of command to obtain arguments for","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"HiIAmTzeKean"},"content":"     * @return Argument class containing arguments from user","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"HiIAmTzeKean"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"HiIAmTzeKean"},"content":"    public Command getCommand() throws EmptyCommandException;","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"HiIAmTzeKean"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"HiIAmTzeKean"},"content":"     * Determines the current type of task and calls the task constructor","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"HiIAmTzeKean"},"content":"     * to generate a task object.","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"HiIAmTzeKean"},"content":"     * @return","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"HiIAmTzeKean"},"content":"     * @throws InvalidCommandException","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"HiIAmTzeKean"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"HiIAmTzeKean"},"content":"    public Task getTask() throws InvalidCommandException;","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"HiIAmTzeKean"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"HiIAmTzeKean"},"content":"     * Returns the index of the task specified by user input","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"HiIAmTzeKean"},"content":"     * @return int value specifying index of task","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"HiIAmTzeKean"},"content":"     * @throws InvalidCommandException","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"HiIAmTzeKean"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"HiIAmTzeKean"},"content":"    public int getTaskIndex() throws InvalidCommandException;","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"HiIAmTzeKean"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"HiIAmTzeKean":30}},{"path":"src/main/java/parser/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HiIAmTzeKean"},"content":"package parser;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"HiIAmTzeKean"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"HiIAmTzeKean"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"HiIAmTzeKean"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"HiIAmTzeKean"},"content":"public class InvalidCommandException extends DukeException {","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"HiIAmTzeKean"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"HiIAmTzeKean"},"content":"     * Exeception raised when there is an invalid command keyword","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"HiIAmTzeKean"},"content":"     * input by user.","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"HiIAmTzeKean"},"content":"     * @param message","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"HiIAmTzeKean"},"content":"     * @param err","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"HiIAmTzeKean"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"HiIAmTzeKean"},"content":"    public InvalidCommandException(String message, Throwable err) {","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"HiIAmTzeKean"},"content":"        super(message, err);","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"HiIAmTzeKean"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"HiIAmTzeKean"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"HiIAmTzeKean":15}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HiIAmTzeKean"},"content":"package parser;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"HiIAmTzeKean"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"HiIAmTzeKean"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"HiIAmTzeKean"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"HiIAmTzeKean"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"HiIAmTzeKean"},"content":"import java.util.Optional;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"HiIAmTzeKean"},"content":"import task.Deadline;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"HiIAmTzeKean"},"content":"import task.EmptyDescriptionException;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"HiIAmTzeKean"},"content":"import task.Event;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"HiIAmTzeKean"},"content":"import task.Task;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"HiIAmTzeKean"},"content":"import task.TaskTypeEnum;","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"HiIAmTzeKean"},"content":"import task.ToDo;","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"HiIAmTzeKean"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"HiIAmTzeKean"},"content":"public class Parser implements IParser {","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"HiIAmTzeKean"},"content":"    private Scanner sc;","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"HiIAmTzeKean"},"content":"    private String message;","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"HiIAmTzeKean"},"content":"    private Command currentCommand;","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"HiIAmTzeKean"},"content":"    public Parser(Scanner sc) {","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"HiIAmTzeKean"},"content":"        this.sc \u003d sc;","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"HiIAmTzeKean"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"HiIAmTzeKean"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"HiIAmTzeKean"},"content":"    public String getMessage() {","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"HiIAmTzeKean"},"content":"        return message;","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"HiIAmTzeKean"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"HiIAmTzeKean"},"content":"    private boolean isList() {","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"HiIAmTzeKean"},"content":"        return (message.split(\" \")[0].toLowerCase().equals(\"list\"));","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"HiIAmTzeKean"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"HiIAmTzeKean"},"content":"    private boolean isExit() {","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"HiIAmTzeKean"},"content":"        return (message.split(\" \")[0].toLowerCase().equals(\"bye\"));","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"HiIAmTzeKean"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"HiIAmTzeKean"},"content":"    private boolean isMark(){","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"HiIAmTzeKean"},"content":"        return (message.split(\" \")[0].toLowerCase().equals(\"mark\"));","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"HiIAmTzeKean"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"HiIAmTzeKean"},"content":"    private boolean isUnmark(){","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"HiIAmTzeKean"},"content":"        return (message.split(\" \")[0].toLowerCase().equals(\"unmark\"));","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"HiIAmTzeKean"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"HiIAmTzeKean"},"content":"    private boolean isDelete() {","lastModifiedDate":"2023-02-10"},{"lineNumber":38,"author":{"gitId":"HiIAmTzeKean"},"content":"        return (message.split(\" \")[0].toLowerCase().equals(\"delete\"));","lastModifiedDate":"2023-02-10"},{"lineNumber":39,"author":{"gitId":"HiIAmTzeKean"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":40,"author":{"gitId":"HiIAmTzeKean"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":41,"author":{"gitId":"HiIAmTzeKean"},"content":"     * Method checks the type of task given by the user","lastModifiedDate":"2023-02-06"},{"lineNumber":42,"author":{"gitId":"HiIAmTzeKean"},"content":"     * @return TaskTypeEnum","lastModifiedDate":"2023-02-06"},{"lineNumber":43,"author":{"gitId":"HiIAmTzeKean"},"content":"     * @exception InvalidCommandException","lastModifiedDate":"2023-02-06"},{"lineNumber":44,"author":{"gitId":"HiIAmTzeKean"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":45,"author":{"gitId":"HiIAmTzeKean"},"content":"    private TaskTypeEnum typeOfTask() throws InvalidCommandException {","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"HiIAmTzeKean"},"content":"        String task \u003d message.split(\" \")[0].toUpperCase();","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"HiIAmTzeKean"},"content":"        Optional\u003cTaskTypeEnum\u003e answer \u003d Arrays.stream(TaskTypeEnum.values())","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"HiIAmTzeKean"},"content":"                                        .filter(x -\u003e x.toString().equals(task))","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"HiIAmTzeKean"},"content":"                                        .findFirst();","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"HiIAmTzeKean"},"content":"        if (answer.isPresent()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"HiIAmTzeKean"},"content":"            return answer.get();","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"HiIAmTzeKean"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"HiIAmTzeKean"},"content":"        else {","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"HiIAmTzeKean"},"content":"            throw new InvalidCommandException(\"Invalid format!!!\\nKeyword must be in the form of \u003cKeyword\u003e \u003cArgs\u003e\", new IllegalArgumentException());","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"HiIAmTzeKean"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"HiIAmTzeKean"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"HiIAmTzeKean"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":58,"author":{"gitId":"HiIAmTzeKean"},"content":"     * Gets the a message from console that user inputs.","lastModifiedDate":"2023-01-23"},{"lineNumber":59,"author":{"gitId":"HiIAmTzeKean"},"content":"     * Checks if the input message is empty and raises Exception if empty.","lastModifiedDate":"2023-01-23"},{"lineNumber":60,"author":{"gitId":"HiIAmTzeKean"},"content":"     * @exception EmptyCommandException","lastModifiedDate":"2023-01-23"},{"lineNumber":61,"author":{"gitId":"HiIAmTzeKean"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":62,"author":{"gitId":"HiIAmTzeKean"},"content":"    private void getNextMessage() throws EmptyCommandException {","lastModifiedDate":"2023-01-23"},{"lineNumber":63,"author":{"gitId":"HiIAmTzeKean"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":64,"author":{"gitId":"HiIAmTzeKean"},"content":"            message \u003d sc.nextLine().trim();","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"HiIAmTzeKean"},"content":"            // If the message is blank it means that the user did not input anything","lastModifiedDate":"2023-02-06"},{"lineNumber":66,"author":{"gitId":"HiIAmTzeKean"},"content":"            // so throw an exception","lastModifiedDate":"2023-02-06"},{"lineNumber":67,"author":{"gitId":"HiIAmTzeKean"},"content":"            if (message.isBlank()){","lastModifiedDate":"2023-01-23"},{"lineNumber":68,"author":{"gitId":"HiIAmTzeKean"},"content":"                throw new NoSuchElementException();","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"HiIAmTzeKean"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":70,"author":{"gitId":"HiIAmTzeKean"},"content":"        } catch (NoSuchElementException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"HiIAmTzeKean"},"content":"            throw new EmptyCommandException(\"Empty command\", e);","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"HiIAmTzeKean"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":73,"author":{"gitId":"HiIAmTzeKean"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"HiIAmTzeKean"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":75,"author":{"gitId":"HiIAmTzeKean"},"content":"    public Command getCommand() throws EmptyCommandException {","lastModifiedDate":"2023-01-23"},{"lineNumber":76,"author":{"gitId":"HiIAmTzeKean"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":77,"author":{"gitId":"HiIAmTzeKean"},"content":"            // Get the message from the user before checking what is the command","lastModifiedDate":"2023-02-06"},{"lineNumber":78,"author":{"gitId":"HiIAmTzeKean"},"content":"            getNextMessage();","lastModifiedDate":"2023-01-23"},{"lineNumber":79,"author":{"gitId":"HiIAmTzeKean"},"content":"        } catch (EmptyCommandException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":80,"author":{"gitId":"HiIAmTzeKean"},"content":"            throw e;","lastModifiedDate":"2023-01-29"},{"lineNumber":81,"author":{"gitId":"HiIAmTzeKean"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":82,"author":{"gitId":"HiIAmTzeKean"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":83,"author":{"gitId":"HiIAmTzeKean"},"content":"        // Assert assumption that the message is not null","lastModifiedDate":"2023-01-29"},{"lineNumber":84,"author":{"gitId":"HiIAmTzeKean"},"content":"        // after calling getNextMessage","lastModifiedDate":"2023-01-29"},{"lineNumber":85,"author":{"gitId":"HiIAmTzeKean"},"content":"        assert message !\u003d null;","lastModifiedDate":"2023-01-29"},{"lineNumber":86,"author":{"gitId":"HiIAmTzeKean"},"content":"        if (isExit()) {","lastModifiedDate":"2023-01-23"},{"lineNumber":87,"author":{"gitId":"HiIAmTzeKean"},"content":"            currentCommand \u003d Command.EXIT;","lastModifiedDate":"2023-01-23"},{"lineNumber":88,"author":{"gitId":"HiIAmTzeKean"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":89,"author":{"gitId":"HiIAmTzeKean"},"content":"        else if (isList()) {","lastModifiedDate":"2023-01-23"},{"lineNumber":90,"author":{"gitId":"HiIAmTzeKean"},"content":"            currentCommand \u003d Command.LIST;","lastModifiedDate":"2023-01-23"},{"lineNumber":91,"author":{"gitId":"HiIAmTzeKean"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":92,"author":{"gitId":"HiIAmTzeKean"},"content":"        else if (isUnmark()) {","lastModifiedDate":"2023-01-23"},{"lineNumber":93,"author":{"gitId":"HiIAmTzeKean"},"content":"            currentCommand \u003d Command.UNMARK;","lastModifiedDate":"2023-01-23"},{"lineNumber":94,"author":{"gitId":"HiIAmTzeKean"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":95,"author":{"gitId":"HiIAmTzeKean"},"content":"        else if (isMark()) {","lastModifiedDate":"2023-01-23"},{"lineNumber":96,"author":{"gitId":"HiIAmTzeKean"},"content":"            currentCommand \u003d  Command.MARK;","lastModifiedDate":"2023-01-23"},{"lineNumber":97,"author":{"gitId":"HiIAmTzeKean"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":98,"author":{"gitId":"HiIAmTzeKean"},"content":"        else if (isDelete()) {","lastModifiedDate":"2023-02-10"},{"lineNumber":99,"author":{"gitId":"HiIAmTzeKean"},"content":"            currentCommand \u003d  Command.DELETE;","lastModifiedDate":"2023-02-10"},{"lineNumber":100,"author":{"gitId":"HiIAmTzeKean"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":101,"author":{"gitId":"HiIAmTzeKean"},"content":"        else {","lastModifiedDate":"2023-01-23"},{"lineNumber":102,"author":{"gitId":"HiIAmTzeKean"},"content":"            currentCommand \u003d  Command.TASK;","lastModifiedDate":"2023-01-23"},{"lineNumber":103,"author":{"gitId":"HiIAmTzeKean"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":104,"author":{"gitId":"HiIAmTzeKean"},"content":"        return currentCommand;","lastModifiedDate":"2023-01-23"},{"lineNumber":105,"author":{"gitId":"HiIAmTzeKean"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":106,"author":{"gitId":"HiIAmTzeKean"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":107,"author":{"gitId":"HiIAmTzeKean"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":108,"author":{"gitId":"HiIAmTzeKean"},"content":"    public Task getTask() throws InvalidCommandException {","lastModifiedDate":"2023-01-29"},{"lineNumber":109,"author":{"gitId":"HiIAmTzeKean"},"content":"        TaskTypeEnum tasking \u003d typeOfTask();","lastModifiedDate":"2023-01-29"},{"lineNumber":110,"author":{"gitId":"HiIAmTzeKean"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":111,"author":{"gitId":"HiIAmTzeKean"},"content":"        if (message.split(\" \", 2).length \u003d\u003d 1) {","lastModifiedDate":"2023-01-29"},{"lineNumber":112,"author":{"gitId":"HiIAmTzeKean"},"content":"            // Only command given but no arguments","lastModifiedDate":"2023-01-29"},{"lineNumber":113,"author":{"gitId":"HiIAmTzeKean"},"content":"            // Raise error","lastModifiedDate":"2023-01-29"},{"lineNumber":114,"author":{"gitId":"HiIAmTzeKean"},"content":"            throw new InvalidCommandException(\"No arguments passed!!!\\nKeyword must be in the form of \u003cKeyword\u003e \u003cArgs\u003e\", new IllegalArgumentException());","lastModifiedDate":"2023-01-29"},{"lineNumber":115,"author":{"gitId":"HiIAmTzeKean"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":116,"author":{"gitId":"HiIAmTzeKean"},"content":"        String arguments \u003d message.split(\" \", 2)[1];","lastModifiedDate":"2023-01-29"},{"lineNumber":117,"author":{"gitId":"HiIAmTzeKean"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":118,"author":{"gitId":"HiIAmTzeKean"},"content":"            Task task \u003d null;","lastModifiedDate":"2023-01-29"},{"lineNumber":119,"author":{"gitId":"HiIAmTzeKean"},"content":"            switch (tasking) {","lastModifiedDate":"2023-01-29"},{"lineNumber":120,"author":{"gitId":"HiIAmTzeKean"},"content":"            case DEADLINE:","lastModifiedDate":"2023-01-29"},{"lineNumber":121,"author":{"gitId":"HiIAmTzeKean"},"content":"                task \u003d new Deadline();","lastModifiedDate":"2023-01-29"},{"lineNumber":122,"author":{"gitId":"HiIAmTzeKean"},"content":"                break;","lastModifiedDate":"2023-01-29"},{"lineNumber":123,"author":{"gitId":"HiIAmTzeKean"},"content":"            case EVENT:","lastModifiedDate":"2023-01-29"},{"lineNumber":124,"author":{"gitId":"HiIAmTzeKean"},"content":"                task \u003d new Event();","lastModifiedDate":"2023-01-29"},{"lineNumber":125,"author":{"gitId":"HiIAmTzeKean"},"content":"                break;","lastModifiedDate":"2023-01-29"},{"lineNumber":126,"author":{"gitId":"HiIAmTzeKean"},"content":"            case TODO:","lastModifiedDate":"2023-01-29"},{"lineNumber":127,"author":{"gitId":"HiIAmTzeKean"},"content":"                task \u003d new ToDo();","lastModifiedDate":"2023-01-29"},{"lineNumber":128,"author":{"gitId":"HiIAmTzeKean"},"content":"                break;","lastModifiedDate":"2023-01-29"},{"lineNumber":129,"author":{"gitId":"HiIAmTzeKean"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":130,"author":{"gitId":"HiIAmTzeKean"},"content":"            task.parseArgument(arguments);","lastModifiedDate":"2023-01-29"},{"lineNumber":131,"author":{"gitId":"HiIAmTzeKean"},"content":"            return task;","lastModifiedDate":"2023-01-29"},{"lineNumber":132,"author":{"gitId":"HiIAmTzeKean"},"content":"        } catch (InvalidCommandException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":133,"author":{"gitId":"HiIAmTzeKean"},"content":"            throw e;","lastModifiedDate":"2023-01-29"},{"lineNumber":134,"author":{"gitId":"HiIAmTzeKean"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":135,"author":{"gitId":"HiIAmTzeKean"},"content":"            throw new InvalidCommandException(e.getMessage(),e);","lastModifiedDate":"2023-01-29"},{"lineNumber":136,"author":{"gitId":"HiIAmTzeKean"},"content":"        } catch (EmptyDescriptionException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":137,"author":{"gitId":"HiIAmTzeKean"},"content":"            throw new InvalidCommandException(e.getMessage(),e);","lastModifiedDate":"2023-01-29"},{"lineNumber":138,"author":{"gitId":"HiIAmTzeKean"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":139,"author":{"gitId":"HiIAmTzeKean"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":140,"author":{"gitId":"HiIAmTzeKean"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":141,"author":{"gitId":"HiIAmTzeKean"},"content":"\tpublic int getTaskIndex() throws InvalidCommandException{","lastModifiedDate":"2023-01-29"},{"lineNumber":142,"author":{"gitId":"HiIAmTzeKean"},"content":"        // Assert that mark or unmark is the command","lastModifiedDate":"2023-02-03"},{"lineNumber":143,"author":{"gitId":"HiIAmTzeKean"},"content":"        assert (currentCommand \u003d\u003d Command.MARK) ||","lastModifiedDate":"2023-02-10"},{"lineNumber":144,"author":{"gitId":"HiIAmTzeKean"},"content":"               (currentCommand \u003d\u003d Command.UNMARK) ||","lastModifiedDate":"2023-02-10"},{"lineNumber":145,"author":{"gitId":"HiIAmTzeKean"},"content":"               (currentCommand \u003d\u003d Command.DELETE);","lastModifiedDate":"2023-02-10"},{"lineNumber":146,"author":{"gitId":"HiIAmTzeKean"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":147,"author":{"gitId":"HiIAmTzeKean"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":148,"author":{"gitId":"HiIAmTzeKean"},"content":"            // Try to get the index from the command","lastModifiedDate":"2023-02-06"},{"lineNumber":149,"author":{"gitId":"HiIAmTzeKean"},"content":"            // if there is an error then throw error message","lastModifiedDate":"2023-02-06"},{"lineNumber":150,"author":{"gitId":"HiIAmTzeKean"},"content":"            return Integer.parseInt(message.split(\" \")[1]);","lastModifiedDate":"2023-01-29"},{"lineNumber":151,"author":{"gitId":"HiIAmTzeKean"},"content":"        } catch (NumberFormatException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":152,"author":{"gitId":"HiIAmTzeKean"},"content":"            throw new InvalidCommandException(\"Invalid task index\", e);","lastModifiedDate":"2023-01-29"},{"lineNumber":153,"author":{"gitId":"HiIAmTzeKean"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":154,"author":{"gitId":"HiIAmTzeKean"},"content":"\t}","lastModifiedDate":"2023-01-29"},{"lineNumber":155,"author":{"gitId":"HiIAmTzeKean"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"HiIAmTzeKean":155}},{"path":"src/main/java/serialiser/ISerialiser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HiIAmTzeKean"},"content":"package serialiser;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"HiIAmTzeKean"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"HiIAmTzeKean"},"content":"import task.ITaskController;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"HiIAmTzeKean"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"HiIAmTzeKean"},"content":"public interface ISerialiser {","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"HiIAmTzeKean"},"content":"    public void deserialiseFile(ITaskController taskController);","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"HiIAmTzeKean"},"content":"    public void serialiseFile(ITaskController taskController);","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"HiIAmTzeKean"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"HiIAmTzeKean":8}},{"path":"src/main/java/serialiser/SerialiseException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HiIAmTzeKean"},"content":"package serialiser;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"HiIAmTzeKean"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"HiIAmTzeKean"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"HiIAmTzeKean"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"HiIAmTzeKean"},"content":"public class SerialiseException extends DukeException{","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"HiIAmTzeKean"},"content":"    public SerialiseException(String message, Throwable err) {","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"HiIAmTzeKean"},"content":"        super(message,err);","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"HiIAmTzeKean"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"HiIAmTzeKean"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"HiIAmTzeKean":9}},{"path":"src/main/java/serialiser/Serialiser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HiIAmTzeKean"},"content":"package serialiser;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"HiIAmTzeKean"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"HiIAmTzeKean"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"HiIAmTzeKean"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"HiIAmTzeKean"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"HiIAmTzeKean"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"HiIAmTzeKean"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"HiIAmTzeKean"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"HiIAmTzeKean"},"content":"import task.ToDo;","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"HiIAmTzeKean"},"content":"import task.Deadline;","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"HiIAmTzeKean"},"content":"import task.Event;","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"HiIAmTzeKean"},"content":"import task.ITaskController;","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"HiIAmTzeKean"},"content":"import task.Task;","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"HiIAmTzeKean"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"HiIAmTzeKean"},"content":"public class Serialiser implements ISerialiser{","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"HiIAmTzeKean"},"content":"    private final String fileDirectory \u003d \"data/duke.txt\";","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"HiIAmTzeKean"},"content":"    private final Path path \u003d Paths.get(fileDirectory);","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"HiIAmTzeKean"},"content":"    private Scanner scanner;","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"HiIAmTzeKean"},"content":"    ","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"HiIAmTzeKean"},"content":"    public Serialiser () throws IOException {","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"HiIAmTzeKean"},"content":"        scanner \u003d new Scanner(path);","lastModifiedDate":"2023-02-10"},{"lineNumber":22,"author":{"gitId":"HiIAmTzeKean"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"HiIAmTzeKean"},"content":"    @Override","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"HiIAmTzeKean"},"content":"    public void deserialiseFile(ITaskController taskController) {","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"HiIAmTzeKean"},"content":"        String line \u003d null;","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"HiIAmTzeKean"},"content":"        //read line by line","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"HiIAmTzeKean"},"content":"        while(scanner.hasNextLine()){","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"HiIAmTzeKean"},"content":"            try {","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"HiIAmTzeKean"},"content":"                //process each line","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"HiIAmTzeKean"},"content":"                line \u003d scanner.nextLine();","lastModifiedDate":"2023-02-10"},{"lineNumber":31,"author":{"gitId":"HiIAmTzeKean"},"content":"                // Check if the line starts with T, D, E","lastModifiedDate":"2023-02-10"},{"lineNumber":32,"author":{"gitId":"HiIAmTzeKean"},"content":"                Task target \u003d getTaskObject(line);","lastModifiedDate":"2023-02-10"},{"lineNumber":33,"author":{"gitId":"HiIAmTzeKean"},"content":"                // call respective task to make sense of the argument","lastModifiedDate":"2023-02-10"},{"lineNumber":34,"author":{"gitId":"HiIAmTzeKean"},"content":"                target.fromString(line);","lastModifiedDate":"2023-02-10"},{"lineNumber":35,"author":{"gitId":"HiIAmTzeKean"},"content":"                // add task to the controller","lastModifiedDate":"2023-02-10"},{"lineNumber":36,"author":{"gitId":"HiIAmTzeKean"},"content":"                taskController.addTask(target);","lastModifiedDate":"2023-02-10"},{"lineNumber":37,"author":{"gitId":"HiIAmTzeKean"},"content":"            } catch (IOException | SerialiseException e) {","lastModifiedDate":"2023-02-10"},{"lineNumber":38,"author":{"gitId":"HiIAmTzeKean"},"content":"                System.out.println(\"ERROR NOT UNDERSTOOD: \" + e.getMessage());","lastModifiedDate":"2023-02-10"},{"lineNumber":39,"author":{"gitId":"HiIAmTzeKean"},"content":"            }","lastModifiedDate":"2023-02-10"},{"lineNumber":40,"author":{"gitId":"HiIAmTzeKean"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":41,"author":{"gitId":"HiIAmTzeKean"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":42,"author":{"gitId":"HiIAmTzeKean"},"content":"    private Task getTaskObject(String line) throws IOException {","lastModifiedDate":"2023-02-10"},{"lineNumber":43,"author":{"gitId":"HiIAmTzeKean"},"content":"        switch (line.charAt(0)) {","lastModifiedDate":"2023-02-10"},{"lineNumber":44,"author":{"gitId":"HiIAmTzeKean"},"content":"        case \u0027T\u0027:","lastModifiedDate":"2023-02-10"},{"lineNumber":45,"author":{"gitId":"HiIAmTzeKean"},"content":"            return new ToDo();","lastModifiedDate":"2023-02-10"},{"lineNumber":46,"author":{"gitId":"HiIAmTzeKean"},"content":"        case \u0027D\u0027:","lastModifiedDate":"2023-02-10"},{"lineNumber":47,"author":{"gitId":"HiIAmTzeKean"},"content":"            return new Deadline();","lastModifiedDate":"2023-02-10"},{"lineNumber":48,"author":{"gitId":"HiIAmTzeKean"},"content":"        case \u0027E\u0027:","lastModifiedDate":"2023-02-10"},{"lineNumber":49,"author":{"gitId":"HiIAmTzeKean"},"content":"            return new Event();","lastModifiedDate":"2023-02-10"},{"lineNumber":50,"author":{"gitId":"HiIAmTzeKean"},"content":"        default:","lastModifiedDate":"2023-02-10"},{"lineNumber":51,"author":{"gitId":"HiIAmTzeKean"},"content":"            throw new IOException();","lastModifiedDate":"2023-02-10"},{"lineNumber":52,"author":{"gitId":"HiIAmTzeKean"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":53,"author":{"gitId":"HiIAmTzeKean"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":54,"author":{"gitId":"HiIAmTzeKean"},"content":"    @Override","lastModifiedDate":"2023-02-10"},{"lineNumber":55,"author":{"gitId":"HiIAmTzeKean"},"content":"    public void serialiseFile(ITaskController taskController) {","lastModifiedDate":"2023-02-10"},{"lineNumber":56,"author":{"gitId":"HiIAmTzeKean"},"content":"        String storageString \u003d \"\";","lastModifiedDate":"2023-02-10"},{"lineNumber":57,"author":{"gitId":"HiIAmTzeKean"},"content":"        while (!taskController.isEmpty()) {","lastModifiedDate":"2023-02-10"},{"lineNumber":58,"author":{"gitId":"HiIAmTzeKean"},"content":"            storageString \u003d storageString + taskController.removeTaskForStorage().toStorageString() + \u0027\\n\u0027;","lastModifiedDate":"2023-02-10"},{"lineNumber":59,"author":{"gitId":"HiIAmTzeKean"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":60,"author":{"gitId":"HiIAmTzeKean"},"content":"        byte[] storageStringToBytes \u003d storageString.getBytes();","lastModifiedDate":"2023-02-10"},{"lineNumber":61,"author":{"gitId":"HiIAmTzeKean"},"content":"        try {","lastModifiedDate":"2023-02-10"},{"lineNumber":62,"author":{"gitId":"HiIAmTzeKean"},"content":"            Files.write(path, storageStringToBytes);","lastModifiedDate":"2023-02-10"},{"lineNumber":63,"author":{"gitId":"HiIAmTzeKean"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-10"},{"lineNumber":64,"author":{"gitId":"HiIAmTzeKean"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-10"},{"lineNumber":65,"author":{"gitId":"HiIAmTzeKean"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":66,"author":{"gitId":"HiIAmTzeKean"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":67,"author":{"gitId":"HiIAmTzeKean"},"content":"    ","lastModifiedDate":"2023-02-10"},{"lineNumber":68,"author":{"gitId":"HiIAmTzeKean"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"HiIAmTzeKean":68}},{"path":"src/main/java/serialiser/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HiIAmTzeKean"},"content":"package serialiser;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"HiIAmTzeKean"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"HiIAmTzeKean"},"content":"public class Todo {","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"HiIAmTzeKean"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"HiIAmTzeKean"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"HiIAmTzeKean":5}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HiIAmTzeKean"},"content":"package task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"HiIAmTzeKean"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"HiIAmTzeKean"},"content":"import parser.InvalidCommandException;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"HiIAmTzeKean"},"content":"import serialiser.SerialiseException;","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"HiIAmTzeKean"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"HiIAmTzeKean"},"content":"public class Deadline extends ToDo {","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"HiIAmTzeKean"},"content":"    protected String endDate;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"HiIAmTzeKean"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"HiIAmTzeKean"},"content":"\tpublic Deadline(String description, String endDate) throws EmptyDescriptionException {","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"HiIAmTzeKean"},"content":"        super(description);","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"HiIAmTzeKean"},"content":"        setEndDate(endDate);","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"HiIAmTzeKean"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"HiIAmTzeKean"},"content":"    public Deadline() {","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"HiIAmTzeKean"},"content":"        super();","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"HiIAmTzeKean"},"content":"        endDate \u003d null;","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"HiIAmTzeKean"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"HiIAmTzeKean"},"content":"    public void setEndDate(String newEndDate) {","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"HiIAmTzeKean"},"content":"        endDate \u003d newEndDate;","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"HiIAmTzeKean"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"HiIAmTzeKean"},"content":"    public String getEndDate() {","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"HiIAmTzeKean"},"content":"        return endDate;","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"HiIAmTzeKean"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"HiIAmTzeKean"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"HiIAmTzeKean"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"HiIAmTzeKean"},"content":"        return String.format(\"[D][%c] %s (by: %s)\", getStatusIcon(), description, endDate);","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"HiIAmTzeKean"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"HiIAmTzeKean"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"HiIAmTzeKean"},"content":"    public void parseArgument(String arguments) throws InvalidCommandException, EmptyDescriptionException {","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"HiIAmTzeKean"},"content":"        try {","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"HiIAmTzeKean"},"content":"            int by \u003d arguments.indexOf(\"/by\");","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"HiIAmTzeKean"},"content":"            // Check if expression exist and if it is surrounded by a space","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"HiIAmTzeKean"},"content":"            if (by \u003c\u003d 0 || arguments.charAt(by-1)!\u003d\u0027 \u0027 || arguments.charAt(by+3)!\u003d\u0027 \u0027) {","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"HiIAmTzeKean"},"content":"                throw new InvalidCommandException(\"Command could not be understood\", new IllegalArgumentException());","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"HiIAmTzeKean"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"HiIAmTzeKean"},"content":"            setDescription(arguments.substring(0,by - 1));","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"HiIAmTzeKean"},"content":"            setEndDate(arguments.substring(by + 4));","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"HiIAmTzeKean"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"HiIAmTzeKean"},"content":"            throw new InvalidCommandException(\"Command at /by is invalid\", new IllegalArgumentException());","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"HiIAmTzeKean"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"HiIAmTzeKean"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"HiIAmTzeKean"},"content":"    @Override","lastModifiedDate":"2023-02-10"},{"lineNumber":42,"author":{"gitId":"HiIAmTzeKean"},"content":"    public String[] fromString(String taskString) throws SerialiseException{","lastModifiedDate":"2023-02-10"},{"lineNumber":43,"author":{"gitId":"HiIAmTzeKean"},"content":"        try {","lastModifiedDate":"2023-02-10"},{"lineNumber":44,"author":{"gitId":"HiIAmTzeKean"},"content":"            String[] arugments \u003d super.fromString(taskString);","lastModifiedDate":"2023-02-10"},{"lineNumber":45,"author":{"gitId":"HiIAmTzeKean"},"content":"            setEndDate(arugments[3]);","lastModifiedDate":"2023-02-10"},{"lineNumber":46,"author":{"gitId":"HiIAmTzeKean"},"content":"            return arugments;","lastModifiedDate":"2023-02-10"},{"lineNumber":47,"author":{"gitId":"HiIAmTzeKean"},"content":"        } catch (SerialiseException e) {","lastModifiedDate":"2023-02-10"},{"lineNumber":48,"author":{"gitId":"HiIAmTzeKean"},"content":"            throw e;","lastModifiedDate":"2023-02-10"},{"lineNumber":49,"author":{"gitId":"HiIAmTzeKean"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":50,"author":{"gitId":"HiIAmTzeKean"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":51,"author":{"gitId":"HiIAmTzeKean"},"content":"    @Override","lastModifiedDate":"2023-02-10"},{"lineNumber":52,"author":{"gitId":"HiIAmTzeKean"},"content":"    public String toStorageString() {","lastModifiedDate":"2023-02-10"},{"lineNumber":53,"author":{"gitId":"HiIAmTzeKean"},"content":"        return String.format(\"D | %d | %s | %s\", isMark()?1:0 , description, endDate);","lastModifiedDate":"2023-02-10"},{"lineNumber":54,"author":{"gitId":"HiIAmTzeKean"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":55,"author":{"gitId":"HiIAmTzeKean"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"HiIAmTzeKean":55}},{"path":"src/main/java/task/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HiIAmTzeKean"},"content":"package task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"HiIAmTzeKean"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"HiIAmTzeKean"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"HiIAmTzeKean"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"HiIAmTzeKean"},"content":"public class EmptyDescriptionException extends DukeException {","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"HiIAmTzeKean"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"HiIAmTzeKean"},"content":"     * Exception when user inputs empty description for task","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"HiIAmTzeKean"},"content":"     * @param message","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"HiIAmTzeKean"},"content":"     * @param err","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"HiIAmTzeKean"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"HiIAmTzeKean"},"content":"    public EmptyDescriptionException(String message, Throwable err) {","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"HiIAmTzeKean"},"content":"        super(message, err);","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"HiIAmTzeKean"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"HiIAmTzeKean"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"HiIAmTzeKean":14}},{"path":"src/main/java/task/EmptyTaskListException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HiIAmTzeKean"},"content":"package task;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"HiIAmTzeKean"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"HiIAmTzeKean"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"HiIAmTzeKean"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"HiIAmTzeKean"},"content":"public class EmptyTaskListException extends DukeException {","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"HiIAmTzeKean"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"HiIAmTzeKean"},"content":"     * Exception for when task list is empty and user request to print","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"HiIAmTzeKean"},"content":"     * task list.","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"HiIAmTzeKean"},"content":"     * @param message Error message to raise","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"HiIAmTzeKean"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"HiIAmTzeKean"},"content":"    public EmptyTaskListException(String message, Throwable err) {","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"HiIAmTzeKean"},"content":"        super(message, err);","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"HiIAmTzeKean"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"HiIAmTzeKean"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"HiIAmTzeKean":14}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HiIAmTzeKean"},"content":"package task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"HiIAmTzeKean"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"HiIAmTzeKean"},"content":"import parser.InvalidCommandException;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"HiIAmTzeKean"},"content":"import serialiser.SerialiseException;","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"HiIAmTzeKean"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"HiIAmTzeKean"},"content":"public class Event extends Deadline {","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"HiIAmTzeKean"},"content":"    protected String startDate;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"HiIAmTzeKean"},"content":"    public Event(String description, String startDate, String endDate) throws EmptyDescriptionException {","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"HiIAmTzeKean"},"content":"        super(description,endDate);","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"HiIAmTzeKean"},"content":"        setStartDate(startDate);","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"HiIAmTzeKean"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"HiIAmTzeKean"},"content":"    public Event() {","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"HiIAmTzeKean"},"content":"        super();","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"HiIAmTzeKean"},"content":"        startDate \u003d null;","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"HiIAmTzeKean"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"HiIAmTzeKean"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"HiIAmTzeKean"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"HiIAmTzeKean"},"content":"        return String.format(\"[E][%c] %s (from: %s to: %s)\", getStatusIcon(), description, startDate, endDate);","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"HiIAmTzeKean"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"HiIAmTzeKean"},"content":"    public String getStartDate() {","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"HiIAmTzeKean"},"content":"        return startDate;","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"HiIAmTzeKean"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"HiIAmTzeKean"},"content":"    public void setStartDate(String newStartDate) {","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"HiIAmTzeKean"},"content":"        startDate \u003d newStartDate;","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"HiIAmTzeKean"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"HiIAmTzeKean"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"HiIAmTzeKean"},"content":"    public void parseArgument(String arguments) throws InvalidCommandException, EmptyDescriptionException {","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"HiIAmTzeKean"},"content":"        int from \u003d arguments.indexOf(\"/from\");","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"HiIAmTzeKean"},"content":"        int to \u003d arguments.indexOf(\"/to\");","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"HiIAmTzeKean"},"content":"        if (from \u003d\u003d -1 || arguments.charAt(from-1)!\u003d\u0027 \u0027 || arguments.charAt(from+5)!\u003d\u0027 \u0027) {","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"HiIAmTzeKean"},"content":"            throw new InvalidCommandException(\"Command at /from is invalid\", new IllegalArgumentException());","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"HiIAmTzeKean"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"HiIAmTzeKean"},"content":"        if (to \u003d\u003d -1 || arguments.charAt(to-1)!\u003d\u0027 \u0027 || arguments.charAt(to+3)!\u003d\u0027 \u0027) {","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"HiIAmTzeKean"},"content":"            throw new InvalidCommandException(\"Command at /to is invalid\", new IllegalArgumentException());","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"HiIAmTzeKean"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"HiIAmTzeKean"},"content":"        setDescription(arguments.substring(0,from - 1));","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"HiIAmTzeKean"},"content":"        setEndDate(arguments.substring(to + 4));","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"HiIAmTzeKean"},"content":"        setStartDate(arguments.substring(from + 6, to -1));","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"HiIAmTzeKean"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"HiIAmTzeKean"},"content":"    @Override","lastModifiedDate":"2023-02-10"},{"lineNumber":41,"author":{"gitId":"HiIAmTzeKean"},"content":"    public String[] fromString(String taskString) throws SerialiseException{","lastModifiedDate":"2023-02-10"},{"lineNumber":42,"author":{"gitId":"HiIAmTzeKean"},"content":"        try {","lastModifiedDate":"2023-02-10"},{"lineNumber":43,"author":{"gitId":"HiIAmTzeKean"},"content":"            String[] arugments \u003d super.fromString(taskString);","lastModifiedDate":"2023-02-10"},{"lineNumber":44,"author":{"gitId":"HiIAmTzeKean"},"content":"            setStartDate(arugments[4]);","lastModifiedDate":"2023-02-10"},{"lineNumber":45,"author":{"gitId":"HiIAmTzeKean"},"content":"            return arugments;","lastModifiedDate":"2023-02-10"},{"lineNumber":46,"author":{"gitId":"HiIAmTzeKean"},"content":"        } catch (SerialiseException e) {","lastModifiedDate":"2023-02-10"},{"lineNumber":47,"author":{"gitId":"HiIAmTzeKean"},"content":"            throw e;","lastModifiedDate":"2023-02-10"},{"lineNumber":48,"author":{"gitId":"HiIAmTzeKean"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":49,"author":{"gitId":"HiIAmTzeKean"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":50,"author":{"gitId":"HiIAmTzeKean"},"content":"    @Override","lastModifiedDate":"2023-02-10"},{"lineNumber":51,"author":{"gitId":"HiIAmTzeKean"},"content":"    public String toStorageString() {","lastModifiedDate":"2023-02-10"},{"lineNumber":52,"author":{"gitId":"HiIAmTzeKean"},"content":"        return String.format(\"E | %d | %s | %s | %s\", isMark()?1:0 , description, startDate, endDate);","lastModifiedDate":"2023-02-10"},{"lineNumber":53,"author":{"gitId":"HiIAmTzeKean"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":54,"author":{"gitId":"HiIAmTzeKean"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"HiIAmTzeKean":54}},{"path":"src/main/java/task/ITaskController.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HiIAmTzeKean"},"content":"package task;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"HiIAmTzeKean"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"HiIAmTzeKean"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"HiIAmTzeKean"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"HiIAmTzeKean"},"content":"public interface ITaskController {","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"HiIAmTzeKean"},"content":"\t/**","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"HiIAmTzeKean"},"content":"\t * Method call for obtaining ArrayList of Task user has.","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"HiIAmTzeKean"},"content":"\t * @return ArrayList\u003cTask\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"HiIAmTzeKean"},"content":"\t * @throws EmptyTaskListException","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"HiIAmTzeKean"},"content":"\t */","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"HiIAmTzeKean"},"content":"\tpublic ArrayList\u003cTask\u003e getTasks() throws EmptyTaskListException;","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"HiIAmTzeKean"},"content":"\t/**","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"HiIAmTzeKean"},"content":"\t * Adds new task to controller. Task will be stored in ArrayList.","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"HiIAmTzeKean"},"content":"\t * @param description task specified by user","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"HiIAmTzeKean"},"content":"\t * @return Task object","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"HiIAmTzeKean"},"content":"\t */","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"HiIAmTzeKean"},"content":"\tpublic String addTask(Task newTask);","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"HiIAmTzeKean"},"content":"\t/**","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"HiIAmTzeKean"},"content":"     * Marks task based on task index specified","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"HiIAmTzeKean"},"content":"     * @param taskIndex","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"HiIAmTzeKean"},"content":"     * @return String message displayed by Duke for user","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"HiIAmTzeKean"},"content":"     * @throws TaskIndexOutOfRangeException","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"HiIAmTzeKean"},"content":"     * @throws TaskMarkException","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"HiIAmTzeKean"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"HiIAmTzeKean"},"content":"\tpublic String markTask(int taskIndex) throws TaskIndexOutOfRangeException, TaskMarkException;","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"HiIAmTzeKean"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"HiIAmTzeKean"},"content":"     * Marks task based on task index specified","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"HiIAmTzeKean"},"content":"     * @param taskIndex","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"HiIAmTzeKean"},"content":"     * @return String message displayed by Duke for user","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"HiIAmTzeKean"},"content":"     * @throws TaskIndexOutOfRangeException","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"HiIAmTzeKean"},"content":"     * @throws TaskMarkException","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"HiIAmTzeKean"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"HiIAmTzeKean"},"content":"\tpublic String unmarkTask(int taskIndex) throws TaskIndexOutOfRangeException, TaskMarkException;","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"HiIAmTzeKean"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"HiIAmTzeKean"},"content":"     * Count of number of task user has created","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"HiIAmTzeKean"},"content":"     * @return int count of task","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"HiIAmTzeKean"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"HiIAmTzeKean"},"content":"\tpublic int getCount();","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"HiIAmTzeKean"},"content":"    public String deleteTask(int taskIndex) throws TaskIndexOutOfRangeException;","lastModifiedDate":"2023-02-10"},{"lineNumber":40,"author":{"gitId":"HiIAmTzeKean"},"content":"    public boolean isEmpty();","lastModifiedDate":"2023-02-10"},{"lineNumber":41,"author":{"gitId":"HiIAmTzeKean"},"content":"    public Task removeTaskForStorage();","lastModifiedDate":"2023-02-10"},{"lineNumber":42,"author":{"gitId":"HiIAmTzeKean"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"HiIAmTzeKean":42}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HiIAmTzeKean"},"content":"package task;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"HiIAmTzeKean"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"HiIAmTzeKean"},"content":"import java.lang.NullPointerException;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"HiIAmTzeKean"},"content":"import parser.InvalidCommandException;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"HiIAmTzeKean"},"content":"import serialiser.SerialiseException;","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"HiIAmTzeKean"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"HiIAmTzeKean"},"content":"/**","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"HiIAmTzeKean"},"content":" * Task class that all other tasks will inherit from","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"HiIAmTzeKean"},"content":" */","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"HiIAmTzeKean"},"content":"public abstract class Task{","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"HiIAmTzeKean"},"content":"    protected String description;","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"HiIAmTzeKean"},"content":"    protected boolean mark;","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"HiIAmTzeKean"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"HiIAmTzeKean"},"content":"    public Task(String description) throws EmptyDescriptionException {","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"HiIAmTzeKean"},"content":"        setDescription(description);","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"HiIAmTzeKean"},"content":"        mark \u003d false;","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"HiIAmTzeKean"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"HiIAmTzeKean"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"HiIAmTzeKean"},"content":"     * Used for creating an empty class to be filled in Parser","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"HiIAmTzeKean"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"HiIAmTzeKean"},"content":"    public Task() {","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"HiIAmTzeKean"},"content":"        description \u003d null;","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"HiIAmTzeKean"},"content":"        mark \u003d false;","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"HiIAmTzeKean"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"HiIAmTzeKean"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"HiIAmTzeKean"},"content":"        return description;","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"HiIAmTzeKean"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"HiIAmTzeKean"},"content":"    public void setDescription(String newDescription) throws EmptyDescriptionException {","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"HiIAmTzeKean"},"content":"        if (newDescription \u003d\u003d null || newDescription.isEmpty()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"HiIAmTzeKean"},"content":"            throw new EmptyDescriptionException(\"Description given is empty!\", new NullPointerException());","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"HiIAmTzeKean"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"HiIAmTzeKean"},"content":"        description \u003d newDescription;","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"HiIAmTzeKean"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"HiIAmTzeKean"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"HiIAmTzeKean"},"content":"    public String toString() {","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"HiIAmTzeKean"},"content":"        return String.format(\"[%c] %s\", getStatusIcon(), description);","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"HiIAmTzeKean"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"HiIAmTzeKean"},"content":"    public char getStatusIcon() {","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"HiIAmTzeKean"},"content":"        // mark done task with X","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"HiIAmTzeKean"},"content":"        return (mark ? \u0027X\u0027 : \u0027 \u0027);","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"HiIAmTzeKean"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"HiIAmTzeKean"},"content":"    public boolean isMark() {","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"HiIAmTzeKean"},"content":"        return mark;","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"HiIAmTzeKean"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"HiIAmTzeKean"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":46,"author":{"gitId":"HiIAmTzeKean"},"content":"     * Marks a task as done or not done","lastModifiedDate":"2023-02-06"},{"lineNumber":47,"author":{"gitId":"HiIAmTzeKean"},"content":"     * @param newMark status to update task with","lastModifiedDate":"2023-02-06"},{"lineNumber":48,"author":{"gitId":"HiIAmTzeKean"},"content":"     * @throws TaskMarkException","lastModifiedDate":"2023-02-06"},{"lineNumber":49,"author":{"gitId":"HiIAmTzeKean"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":50,"author":{"gitId":"HiIAmTzeKean"},"content":"    public void setMark(boolean newMark) throws TaskMarkException {","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"HiIAmTzeKean"},"content":"        if (newMark \u003d\u003d mark) {","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"HiIAmTzeKean"},"content":"            // We are trying to mark the task with the same boolean flag","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"HiIAmTzeKean"},"content":"            // This is a user error","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"HiIAmTzeKean"},"content":"            throw new TaskMarkException(String.format(\"The task is already marked as %s\", String.valueOf(newMark)), new IllegalArgumentException());","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"HiIAmTzeKean"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"HiIAmTzeKean"},"content":"        this.mark \u003d newMark;","lastModifiedDate":"2023-01-23"},{"lineNumber":57,"author":{"gitId":"HiIAmTzeKean"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":58,"author":{"gitId":"HiIAmTzeKean"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"HiIAmTzeKean"},"content":"     * Parses user input arugment and sets the private attributes accordingly","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"HiIAmTzeKean"},"content":"     * @param arguments","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"HiIAmTzeKean"},"content":"     * @throws InvalidCommandException","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"HiIAmTzeKean"},"content":"     * @throws EmptyDescriptionException","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"HiIAmTzeKean"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"HiIAmTzeKean"},"content":"    public abstract void parseArgument(String arguments) throws InvalidCommandException, EmptyDescriptionException;","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"HiIAmTzeKean"},"content":"    public abstract String[] fromString(String taskString) throws SerialiseException;","lastModifiedDate":"2023-02-10"},{"lineNumber":66,"author":{"gitId":"HiIAmTzeKean"},"content":"    public abstract String toStorageString();","lastModifiedDate":"2023-02-10"},{"lineNumber":67,"author":{"gitId":"HiIAmTzeKean"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"HiIAmTzeKean":67}},{"path":"src/main/java/task/TaskController.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HiIAmTzeKean"},"content":"package task;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"HiIAmTzeKean"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"HiIAmTzeKean"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"HiIAmTzeKean"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"HiIAmTzeKean"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"HiIAmTzeKean"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"HiIAmTzeKean"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"HiIAmTzeKean"},"content":"public class TaskController implements ITaskController  {","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"HiIAmTzeKean"},"content":"    ArrayList\u003cTask\u003e TaskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"HiIAmTzeKean"},"content":"    public String addTask(Task newTask) {","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"HiIAmTzeKean"},"content":"        TaskList.add(newTask);","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"HiIAmTzeKean"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"HiIAmTzeKean"},"content":"        return \"Got it. I\u0027ve added this task:\\n \" + ","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"HiIAmTzeKean"},"content":"                newTask.toString() +","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"HiIAmTzeKean"},"content":"                String.format(\"\\nNow you have %d tasks in the list.\", TaskList.size());","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"HiIAmTzeKean"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"HiIAmTzeKean"},"content":"    public ArrayList\u003cTask\u003e getTasks() throws EmptyTaskListException {","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"HiIAmTzeKean"},"content":"        if (TaskList.isEmpty()) {","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"HiIAmTzeKean"},"content":"            throw new EmptyTaskListException(\"*** Empty List\", new NoSuchElementException());","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"HiIAmTzeKean"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"HiIAmTzeKean"},"content":"        return TaskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"HiIAmTzeKean"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"HiIAmTzeKean"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"HiIAmTzeKean"},"content":"    public String toString() {","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"HiIAmTzeKean"},"content":"        String Text \u003d IntStream.range(0, TaskList.size())","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"HiIAmTzeKean"},"content":"                                .mapToObj(index -\u003e String.format(\"%d. %s\\n\", index+1, TaskList.get(index)))","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"HiIAmTzeKean"},"content":"                                .collect(Collectors.joining(\"\\n\"));","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"HiIAmTzeKean"},"content":"        return Text;","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"HiIAmTzeKean"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"HiIAmTzeKean"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"HiIAmTzeKean"},"content":"    public int getCount() {","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"HiIAmTzeKean"},"content":"        return TaskList.size();","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"HiIAmTzeKean"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"HiIAmTzeKean"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"HiIAmTzeKean"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"HiIAmTzeKean"},"content":"    public String markTask(int taskIndex) throws TaskIndexOutOfRangeException, TaskMarkException {","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"HiIAmTzeKean"},"content":"        final boolean MARK_STATUS \u003d true;","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"HiIAmTzeKean"},"content":"        return handleTaskMark(MARK_STATUS, taskIndex);","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"HiIAmTzeKean"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"HiIAmTzeKean"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"HiIAmTzeKean"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"HiIAmTzeKean"},"content":"    public String unmarkTask(int taskIndex) throws TaskIndexOutOfRangeException, TaskMarkException {","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"HiIAmTzeKean"},"content":"        final boolean MARK_STATUS \u003d false;","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"HiIAmTzeKean"},"content":"        return handleTaskMark(MARK_STATUS, taskIndex);","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"HiIAmTzeKean"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"HiIAmTzeKean"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"HiIAmTzeKean"},"content":"     * Marks/Unmarks the task based on isMark and task index. Throws and exception when task index","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"HiIAmTzeKean"},"content":"     * is not valid or when task mark status does not change.","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"HiIAmTzeKean"},"content":"     * Private method to abstract the implementation from the public methods that call it.","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"HiIAmTzeKean"},"content":"     * @param isMark","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"HiIAmTzeKean"},"content":"     * @param taskIndex","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"HiIAmTzeKean"},"content":"     * @return String message for Duke to display to user","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"HiIAmTzeKean"},"content":"     * @throws TaskIndexOutOfRangeException","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"HiIAmTzeKean"},"content":"     * @throws TaskMarkException","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"HiIAmTzeKean"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"HiIAmTzeKean"},"content":"    private String handleTaskMark(boolean isMark, int taskIndex) throws TaskIndexOutOfRangeException, TaskMarkException {","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"HiIAmTzeKean"},"content":"        if (taskIndex \u003c\u003d 0 || taskIndex \u003e TaskList.size()) {","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"HiIAmTzeKean"},"content":"            // Bad index input by user","lastModifiedDate":"2023-01-23"},{"lineNumber":59,"author":{"gitId":"HiIAmTzeKean"},"content":"            throw new TaskIndexOutOfRangeException(\"Invalid index given to mark!\", new IllegalArgumentException());","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"HiIAmTzeKean"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":61,"author":{"gitId":"HiIAmTzeKean"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"HiIAmTzeKean"},"content":"            final String USER_VIEW_MESSAGE;","lastModifiedDate":"2023-01-30"},{"lineNumber":63,"author":{"gitId":"HiIAmTzeKean"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"HiIAmTzeKean"},"content":"            if (isMark) {","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"HiIAmTzeKean"},"content":"                TaskList.get(taskIndex - 1).setMark(true);","lastModifiedDate":"2023-01-30"},{"lineNumber":66,"author":{"gitId":"HiIAmTzeKean"},"content":"                USER_VIEW_MESSAGE \u003d \"Nice! I\u0027ve marked this task as done:\";","lastModifiedDate":"2023-01-30"},{"lineNumber":67,"author":{"gitId":"HiIAmTzeKean"},"content":"            } else {","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"HiIAmTzeKean"},"content":"                TaskList.get(taskIndex - 1).setMark(false);","lastModifiedDate":"2023-01-30"},{"lineNumber":69,"author":{"gitId":"HiIAmTzeKean"},"content":"                USER_VIEW_MESSAGE \u003d \"OK, I\u0027ve marked this task as not done yet:\";","lastModifiedDate":"2023-01-30"},{"lineNumber":70,"author":{"gitId":"HiIAmTzeKean"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":71,"author":{"gitId":"HiIAmTzeKean"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"HiIAmTzeKean"},"content":"            return String.format(\"%s\\n %s\",","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"HiIAmTzeKean"},"content":"                    USER_VIEW_MESSAGE,","lastModifiedDate":"2023-01-30"},{"lineNumber":74,"author":{"gitId":"HiIAmTzeKean"},"content":"                    TaskList.get(taskIndex - 1).toString());","lastModifiedDate":"2023-01-30"},{"lineNumber":75,"author":{"gitId":"HiIAmTzeKean"},"content":"        } catch (TaskMarkException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":76,"author":{"gitId":"HiIAmTzeKean"},"content":"            throw e;","lastModifiedDate":"2023-01-29"},{"lineNumber":77,"author":{"gitId":"HiIAmTzeKean"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":78,"author":{"gitId":"HiIAmTzeKean"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":79,"author":{"gitId":"HiIAmTzeKean"},"content":"    @Override","lastModifiedDate":"2023-02-10"},{"lineNumber":80,"author":{"gitId":"HiIAmTzeKean"},"content":"    public String deleteTask(int taskIndex) throws TaskIndexOutOfRangeException{","lastModifiedDate":"2023-02-10"},{"lineNumber":81,"author":{"gitId":"HiIAmTzeKean"},"content":"        try {","lastModifiedDate":"2023-02-10"},{"lineNumber":82,"author":{"gitId":"HiIAmTzeKean"},"content":"            // Note that the indexing is always +1 greater than the computer indexing","lastModifiedDate":"2023-02-10"},{"lineNumber":83,"author":{"gitId":"HiIAmTzeKean"},"content":"            // Need to decremnet by 1 here","lastModifiedDate":"2023-02-10"},{"lineNumber":84,"author":{"gitId":"HiIAmTzeKean"},"content":"            Task deletedTarget \u003d TaskList.remove(taskIndex-1);","lastModifiedDate":"2023-02-10"},{"lineNumber":85,"author":{"gitId":"HiIAmTzeKean"},"content":"            final String USER_VIEW_MESSAGE \u003d","lastModifiedDate":"2023-02-10"},{"lineNumber":86,"author":{"gitId":"HiIAmTzeKean"},"content":"                String.format(\"Noted I\u0027ve removed this task:\\n%s\\nNow you have %d tasks in the list.\",","lastModifiedDate":"2023-02-10"},{"lineNumber":87,"author":{"gitId":"HiIAmTzeKean"},"content":"                              deletedTarget.toString(),","lastModifiedDate":"2023-02-10"},{"lineNumber":88,"author":{"gitId":"HiIAmTzeKean"},"content":"                              TaskList.size());","lastModifiedDate":"2023-02-10"},{"lineNumber":89,"author":{"gitId":"HiIAmTzeKean"},"content":"            return USER_VIEW_MESSAGE;","lastModifiedDate":"2023-02-10"},{"lineNumber":90,"author":{"gitId":"HiIAmTzeKean"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-10"},{"lineNumber":91,"author":{"gitId":"HiIAmTzeKean"},"content":"            throw new TaskIndexOutOfRangeException(\"Task to be deleted is out of range!\", e);","lastModifiedDate":"2023-02-10"},{"lineNumber":92,"author":{"gitId":"HiIAmTzeKean"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":93,"author":{"gitId":"HiIAmTzeKean"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":94,"author":{"gitId":"HiIAmTzeKean"},"content":"    @Override","lastModifiedDate":"2023-02-10"},{"lineNumber":95,"author":{"gitId":"HiIAmTzeKean"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2023-02-10"},{"lineNumber":96,"author":{"gitId":"HiIAmTzeKean"},"content":"        return TaskList.size() \u003d\u003d 0;","lastModifiedDate":"2023-02-10"},{"lineNumber":97,"author":{"gitId":"HiIAmTzeKean"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":98,"author":{"gitId":"HiIAmTzeKean"},"content":"    @Override","lastModifiedDate":"2023-02-10"},{"lineNumber":99,"author":{"gitId":"HiIAmTzeKean"},"content":"    public Task removeTaskForStorage() {","lastModifiedDate":"2023-02-10"},{"lineNumber":100,"author":{"gitId":"HiIAmTzeKean"},"content":"        return TaskList.remove(0);","lastModifiedDate":"2023-02-10"},{"lineNumber":101,"author":{"gitId":"HiIAmTzeKean"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":102,"author":{"gitId":"HiIAmTzeKean"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"HiIAmTzeKean":102}},{"path":"src/main/java/task/TaskIndexOutOfRangeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HiIAmTzeKean"},"content":"package task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"HiIAmTzeKean"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"HiIAmTzeKean"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"HiIAmTzeKean"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"HiIAmTzeKean"},"content":"public class TaskIndexOutOfRangeException extends DukeException {","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"HiIAmTzeKean"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"HiIAmTzeKean"},"content":"     * Exception when searching for given index and index is out of range.","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"HiIAmTzeKean"},"content":"     * @param message","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"HiIAmTzeKean"},"content":"     * @param err","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"HiIAmTzeKean"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"HiIAmTzeKean"},"content":"    public TaskIndexOutOfRangeException(String message, Throwable err) {","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"HiIAmTzeKean"},"content":"        super(message, err);","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"HiIAmTzeKean"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"HiIAmTzeKean"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"HiIAmTzeKean":14}},{"path":"src/main/java/task/TaskMarkException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HiIAmTzeKean"},"content":"package task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"HiIAmTzeKean"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"HiIAmTzeKean"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"HiIAmTzeKean"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"HiIAmTzeKean"},"content":"public class TaskMarkException extends DukeException{","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"HiIAmTzeKean"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"HiIAmTzeKean"},"content":"     * Exception thrown when task is either already marked or unmark","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"HiIAmTzeKean"},"content":"     * and user request to perform an action that does not change its status","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"HiIAmTzeKean"},"content":"     * @param message","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"HiIAmTzeKean"},"content":"     * @param err","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"HiIAmTzeKean"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"HiIAmTzeKean"},"content":"    public TaskMarkException(String message, Throwable err) {","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"HiIAmTzeKean"},"content":"        super(message, err);","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"HiIAmTzeKean"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"HiIAmTzeKean"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"HiIAmTzeKean":15}},{"path":"src/main/java/task/TaskTypeEnum.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HiIAmTzeKean"},"content":"package task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"HiIAmTzeKean"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"HiIAmTzeKean"},"content":"public enum TaskTypeEnum {","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"HiIAmTzeKean"},"content":"\tTODO(\"TODO\"),","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"HiIAmTzeKean"},"content":"\tDEADLINE(\"DEADLINE\"),","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"HiIAmTzeKean"},"content":"\tEVENT(\"EVENT\");","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"HiIAmTzeKean"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"HiIAmTzeKean"},"content":"\tprivate String value;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"HiIAmTzeKean"},"content":"\tTaskTypeEnum(String value) {","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"HiIAmTzeKean"},"content":"\t\tthis.value \u003d value;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"HiIAmTzeKean"},"content":"\t}","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"HiIAmTzeKean"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"HiIAmTzeKean":12}},{"path":"src/main/java/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HiIAmTzeKean"},"content":"package task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"HiIAmTzeKean"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"HiIAmTzeKean"},"content":"import parser.InvalidCommandException;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"HiIAmTzeKean"},"content":"import serialiser.SerialiseException;","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"HiIAmTzeKean"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"HiIAmTzeKean"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"HiIAmTzeKean"},"content":"    public ToDo(String description) throws EmptyDescriptionException {","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"HiIAmTzeKean"},"content":"        super(description);","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"HiIAmTzeKean"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"HiIAmTzeKean"},"content":"    public ToDo() {","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"HiIAmTzeKean"},"content":"        super();","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"HiIAmTzeKean"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"HiIAmTzeKean"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"HiIAmTzeKean"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"HiIAmTzeKean"},"content":"        return String.format(\"[T][%c] %s\", getStatusIcon(), description);","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"HiIAmTzeKean"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"HiIAmTzeKean"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"HiIAmTzeKean"},"content":"    public void parseArgument(String arguments) throws InvalidCommandException,EmptyDescriptionException {","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"HiIAmTzeKean"},"content":"        setDescription(arguments);","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"HiIAmTzeKean"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"HiIAmTzeKean"},"content":"    @Override","lastModifiedDate":"2023-02-10"},{"lineNumber":22,"author":{"gitId":"HiIAmTzeKean"},"content":"    public String[] fromString(String taskString) throws SerialiseException {","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"HiIAmTzeKean"},"content":"        try {","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"HiIAmTzeKean"},"content":"            String[] arguments \u003d taskString.split(\"[ ][|][ ]\");","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"HiIAmTzeKean"},"content":"            setDescription(arguments[2]);","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"HiIAmTzeKean"},"content":"            if (arguments[1].equals(\"1\")){","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"HiIAmTzeKean"},"content":"                setMark(true);","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"HiIAmTzeKean"},"content":"            }","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"HiIAmTzeKean"},"content":"            return arguments;","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"HiIAmTzeKean"},"content":"        } catch (EmptyDescriptionException | TaskMarkException e) {","lastModifiedDate":"2023-02-10"},{"lineNumber":31,"author":{"gitId":"HiIAmTzeKean"},"content":"            throw new SerialiseException(\"Unable to serialise a ToDo item\", e);","lastModifiedDate":"2023-02-10"},{"lineNumber":32,"author":{"gitId":"HiIAmTzeKean"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":33,"author":{"gitId":"HiIAmTzeKean"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":34,"author":{"gitId":"HiIAmTzeKean"},"content":"    @Override","lastModifiedDate":"2023-02-10"},{"lineNumber":35,"author":{"gitId":"HiIAmTzeKean"},"content":"    public String toStorageString() {","lastModifiedDate":"2023-02-10"},{"lineNumber":36,"author":{"gitId":"HiIAmTzeKean"},"content":"        return String.format(\"T | %d | %s\", isMark()?1:0 , description);","lastModifiedDate":"2023-02-10"},{"lineNumber":37,"author":{"gitId":"HiIAmTzeKean"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":38,"author":{"gitId":"HiIAmTzeKean"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"HiIAmTzeKean":38}},{"path":"src/main/java/ui/IUi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HiIAmTzeKean"},"content":"package ui;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"HiIAmTzeKean"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"HiIAmTzeKean"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"HiIAmTzeKean"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"HiIAmTzeKean"},"content":"public interface IUi {","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"HiIAmTzeKean"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"HiIAmTzeKean"},"content":"     * Prints system message from Duke to display for user.","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"HiIAmTzeKean"},"content":"     * @param message","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"HiIAmTzeKean"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"HiIAmTzeKean"},"content":"    public void printSystemMessage(String message);","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"HiIAmTzeKean"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"HiIAmTzeKean"},"content":"     * Prints system message from Duke to display for user. Parameter is a generic","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"HiIAmTzeKean"},"content":"     * array with supported toString method.","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"HiIAmTzeKean"},"content":"     * @param \u003cT\u003e generic","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"HiIAmTzeKean"},"content":"     * @param list","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"HiIAmTzeKean"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"HiIAmTzeKean"},"content":"    public \u003cT\u003e void printSystemMessage(ArrayList\u003cT\u003e list);","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"HiIAmTzeKean"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"HiIAmTzeKean"},"content":"     * Prints an error message to user","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"HiIAmTzeKean"},"content":"     * @param message","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"HiIAmTzeKean"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"HiIAmTzeKean"},"content":"    public void printSystemErrorMessage(String message);","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"HiIAmTzeKean"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"HiIAmTzeKean"},"content":"     * Default duke greeting","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"HiIAmTzeKean"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"HiIAmTzeKean"},"content":"    public void greet();","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"HiIAmTzeKean"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"HiIAmTzeKean"},"content":"     * Default duke bye bye","lastModifiedDate":"2023-02-06"},{"lineNumber":29,"author":{"gitId":"HiIAmTzeKean"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"HiIAmTzeKean"},"content":"    public void bye();","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"HiIAmTzeKean"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"HiIAmTzeKean":31}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HiIAmTzeKean"},"content":"package ui;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"HiIAmTzeKean"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"HiIAmTzeKean"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"HiIAmTzeKean"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"HiIAmTzeKean"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"HiIAmTzeKean"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"HiIAmTzeKean"},"content":"import static com.diogonunes.jcolor.Ansi.colorize;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"HiIAmTzeKean"},"content":"import static com.diogonunes.jcolor.Attribute.YELLOW_TEXT;","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"HiIAmTzeKean"},"content":"import static com.diogonunes.jcolor.Attribute.RED_TEXT;","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"HiIAmTzeKean"},"content":"import static com.diogonunes.jcolor.Attribute.GREEN_TEXT;","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"HiIAmTzeKean"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"HiIAmTzeKean"},"content":"public class Ui implements IUi {","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"HiIAmTzeKean"},"content":"    final static String LINEBREAK \u003d \"________________________________________\\n\";","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"HiIAmTzeKean"},"content":"    final static String COMMAND_TAB_STRING \u003d \"     \";","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"HiIAmTzeKean"},"content":"    final static String LINE_TAB_STRING \u003d \"    \";","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"HiIAmTzeKean"},"content":"    final static String SYSTEM_LINE_SEPARATOR \u003d LINE_TAB_STRING + LINEBREAK;","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"HiIAmTzeKean"},"content":"    final static String ERR_LINE_SEPARATOR \u003d colorize(LINE_TAB_STRING + LINEBREAK, RED_TEXT());","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"HiIAmTzeKean"},"content":"    final static String WELCOME_STRING \u003d colorize(\"Hello! I\u0027m Duke\\nWhat can I do for you?\", YELLOW_TEXT());","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"HiIAmTzeKean"},"content":"    final static String GOODBYE_STRING \u003d colorize(\"Bye. Hope to see you again soon!\", YELLOW_TEXT());","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"HiIAmTzeKean"},"content":"    final static String LOGO \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"HiIAmTzeKean"},"content":"                             + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"HiIAmTzeKean"},"content":"                             + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"HiIAmTzeKean"},"content":"                             + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"HiIAmTzeKean"},"content":"                             + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"HiIAmTzeKean"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"HiIAmTzeKean"},"content":"                             ","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"HiIAmTzeKean"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"HiIAmTzeKean"},"content":"     * Streams message and prints each line of message based","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"HiIAmTzeKean"},"content":"     * on new line feed.","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"HiIAmTzeKean"},"content":"     * @param message Output message to print","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"HiIAmTzeKean"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"HiIAmTzeKean"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"HiIAmTzeKean"},"content":"    public void printSystemMessage(String message) {","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"HiIAmTzeKean"},"content":"        System.out.print(SYSTEM_LINE_SEPARATOR);","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"HiIAmTzeKean"},"content":"        Arrays.stream(message.split(\"\\n\"))","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"HiIAmTzeKean"},"content":"                .map(item -\u003e colorize(COMMAND_TAB_STRING + item + \u0027\\n\u0027, GREEN_TEXT()))","lastModifiedDate":"2023-02-06"},{"lineNumber":37,"author":{"gitId":"HiIAmTzeKean"},"content":"                .forEach(System.out::print);","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"HiIAmTzeKean"},"content":"                ","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"HiIAmTzeKean"},"content":"        System.out.println(SYSTEM_LINE_SEPARATOR);","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"HiIAmTzeKean"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"HiIAmTzeKean"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"HiIAmTzeKean"},"content":"    public \u003cT\u003e void printSystemMessage(ArrayList\u003cT\u003e list) {","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"HiIAmTzeKean"},"content":"        System.out.print(SYSTEM_LINE_SEPARATOR);","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"HiIAmTzeKean"},"content":"        IntStream.range(0, list.size())","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"HiIAmTzeKean"},"content":"            .mapToObj(index -\u003e colorize(String.format(\"%s%d. %s\", COMMAND_TAB_STRING, index+1, list.get(index)),GREEN_TEXT()))","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"HiIAmTzeKean"},"content":"            .forEach(System.out::println);","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"HiIAmTzeKean"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"HiIAmTzeKean"},"content":"        System.out.println(SYSTEM_LINE_SEPARATOR);","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"HiIAmTzeKean"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"HiIAmTzeKean"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"HiIAmTzeKean"},"content":"     * Prints greet message to user","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"HiIAmTzeKean"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"HiIAmTzeKean"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":54,"author":{"gitId":"HiIAmTzeKean"},"content":"    public void greet() {","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"HiIAmTzeKean"},"content":"        System.out.println(colorize(LOGO, YELLOW_TEXT()));","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"HiIAmTzeKean"},"content":"        printSystemMessage(WELCOME_STRING);","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"HiIAmTzeKean"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"HiIAmTzeKean"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":59,"author":{"gitId":"HiIAmTzeKean"},"content":"     * Prints bye messgae to user","lastModifiedDate":"2023-01-30"},{"lineNumber":60,"author":{"gitId":"HiIAmTzeKean"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":61,"author":{"gitId":"HiIAmTzeKean"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":62,"author":{"gitId":"HiIAmTzeKean"},"content":"    public void bye() {","lastModifiedDate":"2023-01-30"},{"lineNumber":63,"author":{"gitId":"HiIAmTzeKean"},"content":"        printSystemMessage(GOODBYE_STRING);","lastModifiedDate":"2023-01-30"},{"lineNumber":64,"author":{"gitId":"HiIAmTzeKean"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":65,"author":{"gitId":"HiIAmTzeKean"},"content":"    @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":66,"author":{"gitId":"HiIAmTzeKean"},"content":"    public void printSystemErrorMessage(String message) {","lastModifiedDate":"2023-02-03"},{"lineNumber":67,"author":{"gitId":"HiIAmTzeKean"},"content":"        System.out.print(SYSTEM_LINE_SEPARATOR);","lastModifiedDate":"2023-02-06"},{"lineNumber":68,"author":{"gitId":"HiIAmTzeKean"},"content":"        message \u003d colorize(message, RED_TEXT());","lastModifiedDate":"2023-02-03"},{"lineNumber":69,"author":{"gitId":"HiIAmTzeKean"},"content":"        Arrays.stream(message.split(\"\\n\"))","lastModifiedDate":"2023-02-03"},{"lineNumber":70,"author":{"gitId":"HiIAmTzeKean"},"content":"                .map(item -\u003e COMMAND_TAB_STRING + item + \u0027\\n\u0027)","lastModifiedDate":"2023-02-03"},{"lineNumber":71,"author":{"gitId":"HiIAmTzeKean"},"content":"                .forEach(System.out::print);","lastModifiedDate":"2023-02-03"},{"lineNumber":72,"author":{"gitId":"HiIAmTzeKean"},"content":"                ","lastModifiedDate":"2023-02-03"},{"lineNumber":73,"author":{"gitId":"HiIAmTzeKean"},"content":"        System.out.println(SYSTEM_LINE_SEPARATOR);","lastModifiedDate":"2023-02-06"},{"lineNumber":74,"author":{"gitId":"HiIAmTzeKean"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":75,"author":{"gitId":"HiIAmTzeKean"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"HiIAmTzeKean":75}},{"path":"src/test/java/TestParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HiIAmTzeKean"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"HiIAmTzeKean"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"HiIAmTzeKean"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"HiIAmTzeKean"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"HiIAmTzeKean"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"HiIAmTzeKean"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"HiIAmTzeKean"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"HiIAmTzeKean"},"content":"import parser.Command;","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"HiIAmTzeKean"},"content":"import parser.EmptyCommandException;","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"HiIAmTzeKean"},"content":"import parser.InvalidCommandException;","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"HiIAmTzeKean"},"content":"import parser.Parser;","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"HiIAmTzeKean"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"HiIAmTzeKean"},"content":"public class TestParser {","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"HiIAmTzeKean"},"content":"    Parser parser;","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"HiIAmTzeKean"},"content":"    ByteArrayInputStream inContent;","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"HiIAmTzeKean"},"content":"    ","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"HiIAmTzeKean"},"content":"    @Test","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"HiIAmTzeKean"},"content":"    public void givenNull_whenGetCommand_thenEmptyCommandException() {","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"HiIAmTzeKean"},"content":"        String message \u003d \"\";","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"HiIAmTzeKean"},"content":"        ByteArrayInputStream inContent \u003d new ByteArrayInputStream(message.getBytes());","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"HiIAmTzeKean"},"content":"        System.setIn(inContent);","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"HiIAmTzeKean"},"content":"        parser \u003d new Parser(new Scanner(System.in));","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"HiIAmTzeKean"},"content":"        assertThrows(EmptyCommandException.class, () -\u003e {","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"HiIAmTzeKean"},"content":"            parser.getCommand();","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"HiIAmTzeKean"},"content":"       });","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"HiIAmTzeKean"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"HiIAmTzeKean"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"HiIAmTzeKean"},"content":"    @Test","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"HiIAmTzeKean"},"content":"    public void givenToDo_whenGetCommand_thenEmptyCommandException() throws EmptyCommandException {","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"HiIAmTzeKean"},"content":"        String message \u003d \"todo eat rice\";","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"HiIAmTzeKean"},"content":"        ByteArrayInputStream inContent \u003d new ByteArrayInputStream(message.getBytes());","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"HiIAmTzeKean"},"content":"        System.setIn(inContent);","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"HiIAmTzeKean"},"content":"        parser \u003d new Parser(new Scanner(System.in));","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"HiIAmTzeKean"},"content":"        assertEquals(Command.TASK, parser.getCommand());","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"HiIAmTzeKean"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"HiIAmTzeKean"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"HiIAmTzeKean"},"content":"    @Test","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"HiIAmTzeKean"},"content":"    public void givenCommand_whenGetTaskIndex_thenReturnIndex() throws InvalidCommandException, EmptyCommandException {","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"HiIAmTzeKean"},"content":"        String message \u003d \"Mark 1\";","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"HiIAmTzeKean"},"content":"        ByteArrayInputStream inContent \u003d new ByteArrayInputStream(message.getBytes());","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"HiIAmTzeKean"},"content":"        System.setIn(inContent);","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"HiIAmTzeKean"},"content":"        parser \u003d new Parser(new Scanner(System.in));","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"HiIAmTzeKean"},"content":"        parser.getCommand();","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"HiIAmTzeKean"},"content":"        assertEquals(1, parser.getTaskIndex());","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"HiIAmTzeKean"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"HiIAmTzeKean"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"HiIAmTzeKean"},"content":"    @Test","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"HiIAmTzeKean"},"content":"    public void givenInvalidIndex_whenGetTaskIndex_thenInvalidCommandException() throws InvalidCommandException, EmptyCommandException {","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"HiIAmTzeKean"},"content":"        String message \u003d \"Mark \";","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"HiIAmTzeKean"},"content":"        ByteArrayInputStream inContent \u003d new ByteArrayInputStream(message.getBytes());","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"HiIAmTzeKean"},"content":"        System.setIn(inContent);","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"HiIAmTzeKean"},"content":"        parser \u003d new Parser(new Scanner(System.in));","lastModifiedDate":"2023-02-03"},{"lineNumber":53,"author":{"gitId":"HiIAmTzeKean"},"content":"        parser.getCommand();","lastModifiedDate":"2023-02-03"},{"lineNumber":54,"author":{"gitId":"HiIAmTzeKean"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e {","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"HiIAmTzeKean"},"content":"            parser.getTaskIndex();","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"HiIAmTzeKean"},"content":"       });","lastModifiedDate":"2023-02-03"},{"lineNumber":57,"author":{"gitId":"HiIAmTzeKean"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":58,"author":{"gitId":"HiIAmTzeKean"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"HiIAmTzeKean":58}},{"path":"src/test/java/TestTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HiIAmTzeKean"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"HiIAmTzeKean"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"HiIAmTzeKean"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"HiIAmTzeKean"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"HiIAmTzeKean"},"content":"import task.Deadline;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"HiIAmTzeKean"},"content":"import task.EmptyDescriptionException;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"HiIAmTzeKean"},"content":"import task.Task;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"HiIAmTzeKean"},"content":"import task.TaskMarkException;","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"HiIAmTzeKean"},"content":"import task.ToDo;","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"HiIAmTzeKean"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"HiIAmTzeKean"},"content":"public class TestTask {","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"HiIAmTzeKean"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"HiIAmTzeKean"},"content":"    public void givenDescription_whenGetDescription_thenCorrectDescription() throws EmptyDescriptionException {","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"HiIAmTzeKean"},"content":"        Task task \u003d new ToDo();","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"HiIAmTzeKean"},"content":"        task.setDescription(\"Some random string\");","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"HiIAmTzeKean"},"content":"        assertEquals(\"Some random string\", task.getDescription());","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"HiIAmTzeKean"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"HiIAmTzeKean"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"HiIAmTzeKean"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"HiIAmTzeKean"},"content":"    public void givenTask_whenMark_thenPrintX() throws TaskMarkException {","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"HiIAmTzeKean"},"content":"        Task task \u003d new ToDo();","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"HiIAmTzeKean"},"content":"        task.setMark(true);","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"HiIAmTzeKean"},"content":"        assertEquals(\u0027X\u0027, task.getStatusIcon());","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"HiIAmTzeKean"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"HiIAmTzeKean"},"content":"    @Test","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"HiIAmTzeKean"},"content":"    public void givenDeadline_whenGetDescription_thenCorrectDescription() throws EmptyDescriptionException {","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"HiIAmTzeKean"},"content":"        Deadline task \u003d new Deadline();","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"HiIAmTzeKean"},"content":"        task.setDescription(\"Some random string\");","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"HiIAmTzeKean"},"content":"        assertEquals(\"Some random string\", task.getDescription());","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"HiIAmTzeKean"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"HiIAmTzeKean"},"content":"    @Test","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"HiIAmTzeKean"},"content":"    public void givenDeadlineDate_whenGetDate_thenCorrectDate() throws EmptyDescriptionException {","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"HiIAmTzeKean"},"content":"        Deadline task \u003d new Deadline();","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"HiIAmTzeKean"},"content":"        task.setEndDate(\"Some random date\");","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"HiIAmTzeKean"},"content":"        assertEquals(\"Some random date\", task.getEndDate());","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"HiIAmTzeKean"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"HiIAmTzeKean"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"HiIAmTzeKean":37}},{"path":"src/test/java/TestUi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HiIAmTzeKean"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"HiIAmTzeKean"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"HiIAmTzeKean"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"HiIAmTzeKean"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"HiIAmTzeKean"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"HiIAmTzeKean"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"HiIAmTzeKean"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"HiIAmTzeKean"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"HiIAmTzeKean"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"HiIAmTzeKean"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"HiIAmTzeKean"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"HiIAmTzeKean"},"content":"import ui.Ui;","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"HiIAmTzeKean"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"HiIAmTzeKean"},"content":"public class TestUi {","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"HiIAmTzeKean"},"content":"    @Test","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"HiIAmTzeKean"},"content":"    public void givenErrMessage_whenPrintErr_thenOutputErrorInRed() throws IOException {","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"HiIAmTzeKean"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"HiIAmTzeKean"},"content":"        // PrintStream out \u003d new PrintStream(new FileOutputStream(\"src/test/resources/uiExpected.txt\"));","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"HiIAmTzeKean"},"content":"        // System.setOut(out);","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"HiIAmTzeKean"},"content":"        BufferedReader reader \u003d new BufferedReader(new FileReader(\"src/test/resources/uiExpected.txt\"));","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"HiIAmTzeKean"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"HiIAmTzeKean"},"content":"        String line \u003d null;","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"HiIAmTzeKean"},"content":"        String ls \u003d System.getProperty(\"line.separator\");","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"HiIAmTzeKean"},"content":"        while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"HiIAmTzeKean"},"content":"            stringBuilder.append(line);","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"HiIAmTzeKean"},"content":"            stringBuilder.append(ls);","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"HiIAmTzeKean"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"HiIAmTzeKean"},"content":"        reader.close();","lastModifiedDate":"2023-02-06"},{"lineNumber":29,"author":{"gitId":"HiIAmTzeKean"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"HiIAmTzeKean"},"content":"        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"HiIAmTzeKean"},"content":"        ByteArrayInputStream inContent \u003d new ByteArrayInputStream(\"bye\\n\".getBytes());","lastModifiedDate":"2023-02-06"},{"lineNumber":32,"author":{"gitId":"HiIAmTzeKean"},"content":"        System.setIn(inContent);","lastModifiedDate":"2023-02-06"},{"lineNumber":33,"author":{"gitId":"HiIAmTzeKean"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2023-02-06"},{"lineNumber":34,"author":{"gitId":"HiIAmTzeKean"},"content":"        ui.printSystemErrorMessage(\"You made some error here!!\");","lastModifiedDate":"2023-02-06"},{"lineNumber":35,"author":{"gitId":"HiIAmTzeKean"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":36,"author":{"gitId":"HiIAmTzeKean"},"content":"        String lines \u003d outContent.toString();","lastModifiedDate":"2023-02-06"},{"lineNumber":37,"author":{"gitId":"HiIAmTzeKean"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":38,"author":{"gitId":"HiIAmTzeKean"},"content":"        assertEquals(stringBuilder.toString(),lines);","lastModifiedDate":"2023-02-06"},{"lineNumber":39,"author":{"gitId":"HiIAmTzeKean"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":40,"author":{"gitId":"HiIAmTzeKean"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"HiIAmTzeKean":40}},{"path":"src/test/resources/givenBye_whenDukeMain_thenExit.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"HiIAmTzeKean"},"content":" ____        _        ","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"HiIAmTzeKean"},"content":"|  _ \\ _   _| | _____ ","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"HiIAmTzeKean"},"content":"| | | | | | | |/ / _ \\","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"HiIAmTzeKean"},"content":"| |_| | |_| |   \u003c  __/","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"HiIAmTzeKean"},"content":"|____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"HiIAmTzeKean"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"HiIAmTzeKean"},"content":"    ________________________________________","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"HiIAmTzeKean"},"content":"     Hello! I\u0027m Duke","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"HiIAmTzeKean"},"content":"     What can I do for you?","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"HiIAmTzeKean"},"content":"    ________________________________________","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"HiIAmTzeKean"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"HiIAmTzeKean"},"content":"    ________________________________________","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"HiIAmTzeKean"},"content":"     Bye. Hope to see you again soon!","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"HiIAmTzeKean"},"content":"    ________________________________________","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"HiIAmTzeKean":14}},{"path":"src/test/resources/uiExpected.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"HiIAmTzeKean"},"content":"    ________________________________________","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"HiIAmTzeKean"},"content":"     \u001b[31mYou made some error here!!\u001b[0m","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"HiIAmTzeKean"},"content":"    ________________________________________","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"HiIAmTzeKean"},"content":"","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"HiIAmTzeKean":4}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"HiIAmTzeKean"},"content":"todo eat","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"HiIAmTzeKean"},"content":"list","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"HiIAmTzeKean"},"content":"todo eat some more","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"HiIAmTzeKean"},"content":"list","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"HiIAmTzeKean"},"content":"mark 1","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"HiIAmTzeKean"},"content":"list","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"HiIAmTzeKean"},"content":"delete 1","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"HiIAmTzeKean"},"content":"delete 1","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"HiIAmTzeKean"},"content":"bye","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"HiIAmTzeKean":9}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"HiIAmTzeKean"},"content":"javac -cp ../src/main/java;../build/install/ip/lib/* -Xlint:none -d ../bin ../src/main/java/duke/*.java ../src/main/java/parser/*.java ../src/main/java/task/*.java ../src/main/java/ui/*.java","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"HiIAmTzeKean"},"content":"java -cp ../bin/;../build/install/ip/lib/* duke/Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"HiIAmTzeKean":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"HiIAmTzeKean"},"content":"if ! javac -cp \"../src/main/java:../build/install/ip/lib/*\" -Xlint:none -d ../bin ../src/main/java/duke/*.java ../src/main/java/parser/*.java ../src/main/java/task/*.java ../src/main/java/ui/*.java","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"HiIAmTzeKean"},"content":"java -cp \u0027../build/install/ip/lib/*:../bin\u0027 duke/Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"HiIAmTzeKean"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"HiIAmTzeKean"},"content":"cp EXPECTED-LINUX.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"HiIAmTzeKean":4,"-":35}}]
