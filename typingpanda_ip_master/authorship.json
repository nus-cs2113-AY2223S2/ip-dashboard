[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"typingpanda"},"content":"# DukeRunner User Guide","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"typingpanda"},"content":"DukeRunner is a simple task manager that allows you to add, view, and manage your tasks. You can add todos, deadlines, and events to the list. This program also allows you to save tasks into your local hard drive and read from the file created on startup.. Given below are instructions on how to use it.","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"typingpanda"},"content":"## Getting Started","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"typingpanda"},"content":"1. Download the DukeRunner jar file.","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"typingpanda"},"content":"2. Launch your command line and go to the directory of the downloaded jar file.","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"typingpanda"},"content":"3. Run the jar file using `java -jar DukeRunner.jar`. If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"typingpanda"},"content":"   ________         __         __________","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"typingpanda"},"content":"   \\______ \\  __ __|  | __ ____\\______   \\__ __  ____   ____   ___________","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"typingpanda"},"content":"   |    |  \\|  |  \\  |/ // __ \\|       _/  |  \\/    \\ /    \\_/ __ \\_  __ \\","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"typingpanda"},"content":"   |    `   \\  |  /    \u003c\\  ___/|    |   \\  |  /   |  \\   |  \\  ___/|  | \\/","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"typingpanda"},"content":"   /_______  /____/|__|_ \\\\___  \u003e____|_  /____/|___|  /___|  /\\___  \u003e__|","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"typingpanda"},"content":"         \\/           \\/    \\/       \\/           \\/     \\/     \\/","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"typingpanda"},"content":"   Hello! I\u0027m DukeRunner","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"typingpanda"},"content":"   What can I do for you?","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"typingpanda"},"content":"   \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"typingpanda"},"content":"## Adding Tasks","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"typingpanda"},"content":"To add a task, type the type of task followed by the description. For example, to add a todo, type `todo` followed by the description of the task:","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"typingpanda"},"content":"```","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"typingpanda"},"content":"todo math homework","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"typingpanda"},"content":"```","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"typingpanda"},"content":"To add a deadline, type `deadline` followed by the description and `/by` followed by the due date:","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"typingpanda"},"content":"```","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"typingpanda"},"content":"deadline do science homework /by Monday","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"typingpanda"},"content":"```","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"typingpanda"},"content":"To add an event, type `event` followed by the description, `/from` followed by the start time, and `/to` followed by the end time:","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"typingpanda"},"content":"```","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"typingpanda"},"content":"event school carnival /from Monday 9am /to 12pm","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"typingpanda"},"content":"```","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"typingpanda"},"content":"## Viewing Tasks","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"typingpanda"},"content":"To view all the tasks in the list, type `list`. DukeRunner will display all the tasks in the order they were added. After adding some tasks, you should see something like this:","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":49,"author":{"gitId":"typingpanda"},"content":"```","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"typingpanda"},"content":"1. [T][ ] math homework","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"typingpanda"},"content":"2. [D][ ] science homework (by: Monday)","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"typingpanda"},"content":"3. [E][ ] school carnival (from: Monday 9am to: 12pm)","lastModifiedDate":"2023-02-26"},{"lineNumber":53,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":54,"author":{"gitId":"typingpanda"},"content":"You have 3 tasks in the list.","lastModifiedDate":"2023-02-26"},{"lineNumber":55,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":56,"author":{"gitId":"typingpanda"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-02-26"},{"lineNumber":57,"author":{"gitId":"typingpanda"},"content":"```","lastModifiedDate":"2023-02-26"},{"lineNumber":58,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":59,"author":{"gitId":"typingpanda"},"content":"## Marking Tasks","lastModifiedDate":"2023-02-26"},{"lineNumber":60,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":61,"author":{"gitId":"typingpanda"},"content":"You can mark tasks as completed and unmark them as uncompleted. To mark a task as completed, type `mark` followed by the task number","lastModifiedDate":"2023-02-26"},{"lineNumber":62,"author":{"gitId":"typingpanda"},"content":"To unmark a task as uncompleted, type `unmark` followed by the task number:","lastModifiedDate":"2023-02-26"},{"lineNumber":63,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":64,"author":{"gitId":"typingpanda"},"content":"```","lastModifiedDate":"2023-02-26"},{"lineNumber":65,"author":{"gitId":"typingpanda"},"content":"mark 1","lastModifiedDate":"2023-02-26"},{"lineNumber":66,"author":{"gitId":"typingpanda"},"content":"```","lastModifiedDate":"2023-02-26"},{"lineNumber":67,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":68,"author":{"gitId":"typingpanda"},"content":"or","lastModifiedDate":"2023-02-26"},{"lineNumber":69,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":70,"author":{"gitId":"typingpanda"},"content":"```","lastModifiedDate":"2023-02-26"},{"lineNumber":71,"author":{"gitId":"typingpanda"},"content":"unmark 1","lastModifiedDate":"2023-02-26"},{"lineNumber":72,"author":{"gitId":"typingpanda"},"content":"```","lastModifiedDate":"2023-02-26"},{"lineNumber":73,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":74,"author":{"gitId":"typingpanda"},"content":"## Deleting Tasks","lastModifiedDate":"2023-02-26"},{"lineNumber":75,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":76,"author":{"gitId":"typingpanda"},"content":"To delete a task from the list, type `delete` followed by the task number:","lastModifiedDate":"2023-02-26"},{"lineNumber":77,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":78,"author":{"gitId":"typingpanda"},"content":"```","lastModifiedDate":"2023-02-26"},{"lineNumber":79,"author":{"gitId":"typingpanda"},"content":"delete 1","lastModifiedDate":"2023-02-26"},{"lineNumber":80,"author":{"gitId":"typingpanda"},"content":"```","lastModifiedDate":"2023-02-26"},{"lineNumber":81,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":82,"author":{"gitId":"typingpanda"},"content":"## Finding Tasks","lastModifiedDate":"2023-02-26"},{"lineNumber":83,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":84,"author":{"gitId":"typingpanda"},"content":"You can find tasks by typing `find` followed by the keyword you want to search for:","lastModifiedDate":"2023-02-26"},{"lineNumber":85,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":86,"author":{"gitId":"typingpanda"},"content":"```","lastModifiedDate":"2023-02-26"},{"lineNumber":87,"author":{"gitId":"typingpanda"},"content":"find homework","lastModifiedDate":"2023-02-26"},{"lineNumber":88,"author":{"gitId":"typingpanda"},"content":"```","lastModifiedDate":"2023-02-26"},{"lineNumber":89,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":90,"author":{"gitId":"typingpanda"},"content":"## Saving and Loading Tasks","lastModifiedDate":"2023-02-26"},{"lineNumber":91,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":92,"author":{"gitId":"typingpanda"},"content":"DukeRunner automatically saves your tasks to a file on your local hard drive when the program ends. On startup, DukeRunner will read from the file and display the previously recorded tasks.","lastModifiedDate":"2023-02-26"},{"lineNumber":93,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":94,"author":{"gitId":"typingpanda"},"content":"## Conclusion","lastModifiedDate":"2023-02-26"},{"lineNumber":95,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":96,"author":{"gitId":"typingpanda"},"content":"That\u0027s it! With DukeRunner, you can easily manage your tasks and never miss a deadline again.","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"-":8,"typingpanda":88}},{"path":"src/main/java/Duke/DukeRunner.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"typingpanda"},"content":"import Handlers.StorageManager;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"typingpanda"},"content":"import Handlers.Ui;","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"typingpanda"},"content":"public class DukeRunner {","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"typingpanda"},"content":"        StorageManager.loadFileContents();","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"typingpanda"},"content":"        Ui.takeUserInputs();","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"typingpanda"},"content":"        StorageManager.saveFileContents();","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":2,"typingpanda":8}},{"path":"src/main/java/Exceptions/InvalidTypeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"typingpanda"},"content":"package Exceptions;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"typingpanda"},"content":"public class InvalidTypeException extends Exception{","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"typingpanda"},"content":"    ","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"typingpanda"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"typingpanda":5}},{"path":"src/main/java/Exceptions/TaskManagerException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"typingpanda"},"content":"package Exceptions;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"typingpanda"},"content":"public class TaskManagerException extends Exception {","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"typingpanda"},"content":"    ","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"typingpanda"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"typingpanda":4}},{"path":"src/main/java/Handlers/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"typingpanda"},"content":"package Handlers;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"typingpanda"},"content":"import Exceptions.InvalidTypeException;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"typingpanda"},"content":"import Exceptions.TaskManagerException;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"typingpanda"},"content":"import Tasks.Todo;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"typingpanda"},"content":"import Tasks.Deadline;","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"typingpanda"},"content":"import Tasks.Event;","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"typingpanda"},"content":"public class Parser {","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"typingpanda"},"content":"    ","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"typingpanda"},"content":"    /** ","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"typingpanda"},"content":"     * Extracts the first word of the user input","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"typingpanda"},"content":"     * ","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"typingpanda"},"content":"     * @param line the user input","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"typingpanda"},"content":"     * @return the first word of the user input","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"typingpanda"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"typingpanda"},"content":"    public static String getFirstWord(String line) {","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"typingpanda"},"content":"        String[] words \u003d line.split(\" \");","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"typingpanda"},"content":"        return words[0];","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"typingpanda"},"content":"    ","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"typingpanda"},"content":"    /** ","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"typingpanda"},"content":"     * Extracts the second word of the user input","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"typingpanda"},"content":"     * ","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"typingpanda"},"content":"     * @param line the user input","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"typingpanda"},"content":"     * @return String the second word of the user input","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"typingpanda"},"content":"     * @throws TaskManagerException if the user input does not contain a second word","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"typingpanda"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"typingpanda"},"content":"    public static String getSecondWord(String line) throws TaskManagerException {","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"typingpanda"},"content":"        String[] words \u003d line.split(\"\\\\s+\");","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"typingpanda"},"content":"        if (words.length \u003c 2) {","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"typingpanda"},"content":"            throw new TaskManagerException();","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"typingpanda"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"typingpanda"},"content":"        int index \u003d line.indexOf(\" \");","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"typingpanda"},"content":"        String sub \u003d line.substring(index + 1);","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"typingpanda"},"content":"        return sub;","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":40,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"typingpanda"},"content":"    ","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"typingpanda"},"content":"    /** ","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"typingpanda"},"content":"     * Gets the task number from the user input.","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"typingpanda"},"content":"     * ","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"typingpanda"},"content":"     * @param line the user input","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"typingpanda"},"content":"     * @return int the task number","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"typingpanda"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"typingpanda"},"content":"    public static int getTaskNumber(String line) {","lastModifiedDate":"2023-02-13"},{"lineNumber":49,"author":{"gitId":"typingpanda"},"content":"        int index \u003d 0;","lastModifiedDate":"2023-02-13"},{"lineNumber":50,"author":{"gitId":"typingpanda"},"content":"        try {","lastModifiedDate":"2023-02-13"},{"lineNumber":51,"author":{"gitId":"typingpanda"},"content":"            index \u003d Integer.parseInt(getSecondWord(line));","lastModifiedDate":"2023-02-13"},{"lineNumber":52,"author":{"gitId":"typingpanda"},"content":"            isTaskNumberValid(index);","lastModifiedDate":"2023-02-13"},{"lineNumber":53,"author":{"gitId":"typingpanda"},"content":"        } catch (TaskManagerException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":54,"author":{"gitId":"typingpanda"},"content":"            System.out.println(\"task number must be stated.\");","lastModifiedDate":"2023-02-13"},{"lineNumber":55,"author":{"gitId":"typingpanda"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":56,"author":{"gitId":"typingpanda"},"content":"            System.out.println(\"task number must be a number.\");","lastModifiedDate":"2023-02-13"},{"lineNumber":57,"author":{"gitId":"typingpanda"},"content":"        } catch (InvalidTypeException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":58,"author":{"gitId":"typingpanda"},"content":"            System.out.println(\"task number does not exist.\");","lastModifiedDate":"2023-02-13"},{"lineNumber":59,"author":{"gitId":"typingpanda"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":60,"author":{"gitId":"typingpanda"},"content":"        return index;","lastModifiedDate":"2023-02-13"},{"lineNumber":61,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":62,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":63,"author":{"gitId":"typingpanda"},"content":"    ","lastModifiedDate":"2023-02-26"},{"lineNumber":64,"author":{"gitId":"typingpanda"},"content":"    /** ","lastModifiedDate":"2023-02-26"},{"lineNumber":65,"author":{"gitId":"typingpanda"},"content":"     * Gets the task description or task title from the user input.","lastModifiedDate":"2023-02-26"},{"lineNumber":66,"author":{"gitId":"typingpanda"},"content":"     * ","lastModifiedDate":"2023-02-26"},{"lineNumber":67,"author":{"gitId":"typingpanda"},"content":"     * @param line the user input","lastModifiedDate":"2023-02-26"},{"lineNumber":68,"author":{"gitId":"typingpanda"},"content":"     * @return String the task description or task title","lastModifiedDate":"2023-02-26"},{"lineNumber":69,"author":{"gitId":"typingpanda"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":70,"author":{"gitId":"typingpanda"},"content":"    public static String getTaskDescription(String line) {","lastModifiedDate":"2023-02-26"},{"lineNumber":71,"author":{"gitId":"typingpanda"},"content":"        String description \u003d \"\";","lastModifiedDate":"2023-02-26"},{"lineNumber":72,"author":{"gitId":"typingpanda"},"content":"        try {","lastModifiedDate":"2023-02-26"},{"lineNumber":73,"author":{"gitId":"typingpanda"},"content":"            description \u003d getSecondWord(line);","lastModifiedDate":"2023-02-26"},{"lineNumber":74,"author":{"gitId":"typingpanda"},"content":"        } catch (TaskManagerException e) {","lastModifiedDate":"2023-02-26"},{"lineNumber":75,"author":{"gitId":"typingpanda"},"content":"            System.out.println(\"task description for find function cannot be empty.\");","lastModifiedDate":"2023-02-26"},{"lineNumber":76,"author":{"gitId":"typingpanda"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":77,"author":{"gitId":"typingpanda"},"content":"        return description;","lastModifiedDate":"2023-02-26"},{"lineNumber":78,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":79,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":80,"author":{"gitId":"typingpanda"},"content":"    ","lastModifiedDate":"2023-02-26"},{"lineNumber":81,"author":{"gitId":"typingpanda"},"content":"    /** ","lastModifiedDate":"2023-02-26"},{"lineNumber":82,"author":{"gitId":"typingpanda"},"content":"     * Checks if the task number is between 1 and the number of tasks in the task list.","lastModifiedDate":"2023-02-26"},{"lineNumber":83,"author":{"gitId":"typingpanda"},"content":"     * ","lastModifiedDate":"2023-02-26"},{"lineNumber":84,"author":{"gitId":"typingpanda"},"content":"     * @param taskNumber the task number taken from user input","lastModifiedDate":"2023-02-26"},{"lineNumber":85,"author":{"gitId":"typingpanda"},"content":"     * @throws InvalidTypeException if the task number does not meet above conditions","lastModifiedDate":"2023-02-26"},{"lineNumber":86,"author":{"gitId":"typingpanda"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":87,"author":{"gitId":"typingpanda"},"content":"    public static void isTaskNumberValid(int taskNumber) throws InvalidTypeException {","lastModifiedDate":"2023-02-13"},{"lineNumber":88,"author":{"gitId":"typingpanda"},"content":"        if (taskNumber \u003c 1 || taskNumber \u003e TaskManager.getTaskCount()) {","lastModifiedDate":"2023-02-13"},{"lineNumber":89,"author":{"gitId":"typingpanda"},"content":"            throw new InvalidTypeException();","lastModifiedDate":"2023-02-13"},{"lineNumber":90,"author":{"gitId":"typingpanda"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":91,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":92,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":93,"author":{"gitId":"typingpanda"},"content":"    ","lastModifiedDate":"2023-02-26"},{"lineNumber":94,"author":{"gitId":"typingpanda"},"content":"    /** ","lastModifiedDate":"2023-02-26"},{"lineNumber":95,"author":{"gitId":"typingpanda"},"content":"     * Gets the todo description from the user input then adds the event to the task list.","lastModifiedDate":"2023-02-26"},{"lineNumber":96,"author":{"gitId":"typingpanda"},"content":"     * ","lastModifiedDate":"2023-02-26"},{"lineNumber":97,"author":{"gitId":"typingpanda"},"content":"     * @param line the user input","lastModifiedDate":"2023-02-26"},{"lineNumber":98,"author":{"gitId":"typingpanda"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":99,"author":{"gitId":"typingpanda"},"content":"    public static void getTodoDetails(String line) {","lastModifiedDate":"2023-02-13"},{"lineNumber":100,"author":{"gitId":"typingpanda"},"content":"        String todoLine \u003d \"\";","lastModifiedDate":"2023-02-13"},{"lineNumber":101,"author":{"gitId":"typingpanda"},"content":"        try {","lastModifiedDate":"2023-02-13"},{"lineNumber":102,"author":{"gitId":"typingpanda"},"content":"            todoLine \u003d getSecondWord(line);","lastModifiedDate":"2023-02-13"},{"lineNumber":103,"author":{"gitId":"typingpanda"},"content":"            Todo todoTask \u003d new Todo(todoLine);","lastModifiedDate":"2023-02-13"},{"lineNumber":104,"author":{"gitId":"typingpanda"},"content":"            TaskManager.addTask(todoTask);","lastModifiedDate":"2023-02-13"},{"lineNumber":105,"author":{"gitId":"typingpanda"},"content":"            System.out.println(\"Got it. I\u0027ve added this task:\\n\" + todoTask.describeTask());","lastModifiedDate":"2023-02-13"},{"lineNumber":106,"author":{"gitId":"typingpanda"},"content":"            System.out.println(\"\\nNow you have \" + TaskManager.getTaskCount() + \" tasks in the list.\\n\");","lastModifiedDate":"2023-02-13"},{"lineNumber":107,"author":{"gitId":"typingpanda"},"content":"        } catch (TaskManagerException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":108,"author":{"gitId":"typingpanda"},"content":"            System.out.println(\"description for todo cannot be empty.\");","lastModifiedDate":"2023-02-13"},{"lineNumber":109,"author":{"gitId":"typingpanda"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":110,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":111,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":112,"author":{"gitId":"typingpanda"},"content":"    ","lastModifiedDate":"2023-02-26"},{"lineNumber":113,"author":{"gitId":"typingpanda"},"content":"    /** ","lastModifiedDate":"2023-02-26"},{"lineNumber":114,"author":{"gitId":"typingpanda"},"content":"     * Gets the deadline description and deadline date from the user input then adds the event to the task list.","lastModifiedDate":"2023-02-26"},{"lineNumber":115,"author":{"gitId":"typingpanda"},"content":"     * ","lastModifiedDate":"2023-02-26"},{"lineNumber":116,"author":{"gitId":"typingpanda"},"content":"     * @param line the user input","lastModifiedDate":"2023-02-26"},{"lineNumber":117,"author":{"gitId":"typingpanda"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":118,"author":{"gitId":"typingpanda"},"content":"    public static void getDeadlineDetails(String line) {","lastModifiedDate":"2023-02-13"},{"lineNumber":119,"author":{"gitId":"typingpanda"},"content":"        String deadlineLine \u003d \"\";","lastModifiedDate":"2023-02-13"},{"lineNumber":120,"author":{"gitId":"typingpanda"},"content":"        try {","lastModifiedDate":"2023-02-13"},{"lineNumber":121,"author":{"gitId":"typingpanda"},"content":"            deadlineLine \u003d getSecondWord(line);","lastModifiedDate":"2023-02-13"},{"lineNumber":122,"author":{"gitId":"typingpanda"},"content":"            String[] deadlineDetails \u003d deadlineLine.split(\"/by\");","lastModifiedDate":"2023-02-26"},{"lineNumber":123,"author":{"gitId":"typingpanda"},"content":"            String deadlineDescription \u003d deadlineDetails[0].trim();","lastModifiedDate":"2023-02-26"},{"lineNumber":124,"author":{"gitId":"typingpanda"},"content":"            String deadlineDate \u003d deadlineDetails[1].trim();","lastModifiedDate":"2023-02-26"},{"lineNumber":125,"author":{"gitId":"typingpanda"},"content":"            Deadline deadlineTask \u003d new Deadline(deadlineDescription, deadlineDate);","lastModifiedDate":"2023-02-13"},{"lineNumber":126,"author":{"gitId":"typingpanda"},"content":"            TaskManager.addTask(deadlineTask);","lastModifiedDate":"2023-02-13"},{"lineNumber":127,"author":{"gitId":"typingpanda"},"content":"            System.out.println(\"Got it. I\u0027ve added this task:\\n\" + deadlineTask.describeTask());","lastModifiedDate":"2023-02-13"},{"lineNumber":128,"author":{"gitId":"typingpanda"},"content":"            System.out.println(\"\\nNow you have \" + TaskManager.getTaskCount() + \" tasks in the list.\\n\");","lastModifiedDate":"2023-02-13"},{"lineNumber":129,"author":{"gitId":"typingpanda"},"content":"        } catch (TaskManagerException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":130,"author":{"gitId":"typingpanda"},"content":"            System.out.println(\"description for deadline cannot be empty.\");","lastModifiedDate":"2023-02-13"},{"lineNumber":131,"author":{"gitId":"typingpanda"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":132,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":133,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":134,"author":{"gitId":"typingpanda"},"content":"    ","lastModifiedDate":"2023-02-26"},{"lineNumber":135,"author":{"gitId":"typingpanda"},"content":"    /** ","lastModifiedDate":"2023-02-26"},{"lineNumber":136,"author":{"gitId":"typingpanda"},"content":"     * Gets the event description, event start date and event end date from the user input then adds the event to the task list.","lastModifiedDate":"2023-02-26"},{"lineNumber":137,"author":{"gitId":"typingpanda"},"content":"     * ","lastModifiedDate":"2023-02-26"},{"lineNumber":138,"author":{"gitId":"typingpanda"},"content":"     * @param line the user input","lastModifiedDate":"2023-02-26"},{"lineNumber":139,"author":{"gitId":"typingpanda"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":140,"author":{"gitId":"typingpanda"},"content":"    public static void getEventDetails(String line) {","lastModifiedDate":"2023-02-13"},{"lineNumber":141,"author":{"gitId":"typingpanda"},"content":"        String eventLine \u003d \"\";","lastModifiedDate":"2023-02-13"},{"lineNumber":142,"author":{"gitId":"typingpanda"},"content":"        try {","lastModifiedDate":"2023-02-13"},{"lineNumber":143,"author":{"gitId":"typingpanda"},"content":"            eventLine \u003d getSecondWord(line);","lastModifiedDate":"2023-02-13"},{"lineNumber":144,"author":{"gitId":"typingpanda"},"content":"            String[] eventDetails \u003d eventLine.split(\"/from\");","lastModifiedDate":"2023-02-26"},{"lineNumber":145,"author":{"gitId":"typingpanda"},"content":"            String[] eventTiming \u003d eventDetails[1].split(\"/to\");","lastModifiedDate":"2023-02-26"},{"lineNumber":146,"author":{"gitId":"typingpanda"},"content":"            String eventDescription \u003d eventDetails[0].trim();","lastModifiedDate":"2023-02-26"},{"lineNumber":147,"author":{"gitId":"typingpanda"},"content":"            String eventFrom \u003d eventTiming[0].trim();","lastModifiedDate":"2023-02-26"},{"lineNumber":148,"author":{"gitId":"typingpanda"},"content":"            String eventTo \u003d eventTiming[1].trim();","lastModifiedDate":"2023-02-26"},{"lineNumber":149,"author":{"gitId":"typingpanda"},"content":"            Event eventTask \u003d new Event(eventDescription, eventFrom, eventTo);","lastModifiedDate":"2023-02-13"},{"lineNumber":150,"author":{"gitId":"typingpanda"},"content":"            TaskManager.addTask(eventTask);","lastModifiedDate":"2023-02-13"},{"lineNumber":151,"author":{"gitId":"typingpanda"},"content":"            System.out.println(\"Got it. I\u0027ve added this task:\\n\" + eventTask.describeTask());","lastModifiedDate":"2023-02-13"},{"lineNumber":152,"author":{"gitId":"typingpanda"},"content":"            System.out.println(\"\\nNow you have \" + TaskManager.getTaskCount() + \" tasks in the list.\\n\");","lastModifiedDate":"2023-02-13"},{"lineNumber":153,"author":{"gitId":"typingpanda"},"content":"        } catch (TaskManagerException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":154,"author":{"gitId":"typingpanda"},"content":"            System.out.println(\"description for event cannot be empty.\");","lastModifiedDate":"2023-02-13"},{"lineNumber":155,"author":{"gitId":"typingpanda"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":156,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":157,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":158,"author":{"gitId":"typingpanda"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"typingpanda":158}},{"path":"src/main/java/Handlers/StorageManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"typingpanda"},"content":"package Handlers;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"typingpanda"},"content":"import java.io.File;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"typingpanda"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"typingpanda"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"typingpanda"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"typingpanda"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"typingpanda"},"content":"public class StorageManager {","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"typingpanda"},"content":"    private static final String FILE_PATH \u003d \"./data/duke.txt\";","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"typingpanda"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"typingpanda"},"content":"     * Creates a new file if it does not exist and loads the tasks in the file into","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"typingpanda"},"content":"     * the taskList in TaskManager","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"typingpanda"},"content":"     * ","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"typingpanda"},"content":"     * @throws FileNotFoundException if the file is not found","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"typingpanda"},"content":"     * @throws IOException           if there is an error reading the file","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"typingpanda"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"typingpanda"},"content":"    public static void loadFileContents() {","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"typingpanda"},"content":"        new File(\"./data\").mkdir();","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"typingpanda"},"content":"        File f \u003d new File(FILE_PATH);","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"typingpanda"},"content":"        if (!f.exists()) {","lastModifiedDate":"2023-02-14"},{"lineNumber":27,"author":{"gitId":"typingpanda"},"content":"            try {","lastModifiedDate":"2023-02-14"},{"lineNumber":28,"author":{"gitId":"typingpanda"},"content":"                f.createNewFile();","lastModifiedDate":"2023-02-14"},{"lineNumber":29,"author":{"gitId":"typingpanda"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-02-14"},{"lineNumber":30,"author":{"gitId":"typingpanda"},"content":"                System.out.println(\"Error creating file\");","lastModifiedDate":"2023-02-14"},{"lineNumber":31,"author":{"gitId":"typingpanda"},"content":"            }","lastModifiedDate":"2023-02-14"},{"lineNumber":32,"author":{"gitId":"typingpanda"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":33,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":34,"author":{"gitId":"typingpanda"},"content":"        try {","lastModifiedDate":"2023-02-14"},{"lineNumber":35,"author":{"gitId":"typingpanda"},"content":"            writeToTaskManager(f);","lastModifiedDate":"2023-02-14"},{"lineNumber":36,"author":{"gitId":"typingpanda"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-02-14"},{"lineNumber":37,"author":{"gitId":"typingpanda"},"content":"            System.out.println(\"File not found\");","lastModifiedDate":"2023-02-14"},{"lineNumber":38,"author":{"gitId":"typingpanda"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":39,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":40,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":41,"author":{"gitId":"typingpanda"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"typingpanda"},"content":"     * Saves the tasks in the taskList in TaskManager into the file","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"typingpanda"},"content":"     * ","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"typingpanda"},"content":"     * @throws IOException if there is an error writing to the file","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"typingpanda"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"typingpanda"},"content":"    public static void saveFileContents() {","lastModifiedDate":"2023-02-14"},{"lineNumber":47,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":48,"author":{"gitId":"typingpanda"},"content":"        try {","lastModifiedDate":"2023-02-14"},{"lineNumber":49,"author":{"gitId":"typingpanda"},"content":"            writeToFile();","lastModifiedDate":"2023-02-14"},{"lineNumber":50,"author":{"gitId":"typingpanda"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-02-14"},{"lineNumber":51,"author":{"gitId":"typingpanda"},"content":"            System.out.println(\"Error writing to file\");","lastModifiedDate":"2023-02-14"},{"lineNumber":52,"author":{"gitId":"typingpanda"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":53,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":54,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":55,"author":{"gitId":"typingpanda"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":56,"author":{"gitId":"typingpanda"},"content":"     * Reads the file data and load the tasks into the taskList in TaskManager","lastModifiedDate":"2023-02-26"},{"lineNumber":57,"author":{"gitId":"typingpanda"},"content":"     * ","lastModifiedDate":"2023-02-26"},{"lineNumber":58,"author":{"gitId":"typingpanda"},"content":"     * @param f the file to be read","lastModifiedDate":"2023-02-26"},{"lineNumber":59,"author":{"gitId":"typingpanda"},"content":"     * @throws FileNotFoundException if the file is not found","lastModifiedDate":"2023-02-26"},{"lineNumber":60,"author":{"gitId":"typingpanda"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":61,"author":{"gitId":"typingpanda"},"content":"    private static void writeToTaskManager(File f) throws FileNotFoundException {","lastModifiedDate":"2023-02-14"},{"lineNumber":62,"author":{"gitId":"typingpanda"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2023-02-14"},{"lineNumber":63,"author":{"gitId":"typingpanda"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2023-02-14"},{"lineNumber":64,"author":{"gitId":"typingpanda"},"content":"            String nextLine \u003d s.nextLine();","lastModifiedDate":"2023-02-14"},{"lineNumber":65,"author":{"gitId":"typingpanda"},"content":"            TaskManager.readTaskFromFile(nextLine);","lastModifiedDate":"2023-02-14"},{"lineNumber":66,"author":{"gitId":"typingpanda"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":67,"author":{"gitId":"typingpanda"},"content":"        s.close();","lastModifiedDate":"2023-02-14"},{"lineNumber":68,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":69,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":70,"author":{"gitId":"typingpanda"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":71,"author":{"gitId":"typingpanda"},"content":"     * Writes the tasks in the taskList in TaskManager into the file","lastModifiedDate":"2023-02-26"},{"lineNumber":72,"author":{"gitId":"typingpanda"},"content":"     * ","lastModifiedDate":"2023-02-26"},{"lineNumber":73,"author":{"gitId":"typingpanda"},"content":"     * @throws IOException if there is an error writing to the file","lastModifiedDate":"2023-02-26"},{"lineNumber":74,"author":{"gitId":"typingpanda"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":75,"author":{"gitId":"typingpanda"},"content":"    public static void writeToFile() throws IOException {","lastModifiedDate":"2023-02-14"},{"lineNumber":76,"author":{"gitId":"typingpanda"},"content":"        FileWriter fw \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2023-02-14"},{"lineNumber":77,"author":{"gitId":"typingpanda"},"content":"        for (int i \u003d 0; i \u003c TaskManager.getTaskCount(); i++) {","lastModifiedDate":"2023-02-14"},{"lineNumber":78,"author":{"gitId":"typingpanda"},"content":"            fw.write(TaskManager.getTaskList().get(i).describeTaskForFile() + \"\\n\");","lastModifiedDate":"2023-02-14"},{"lineNumber":79,"author":{"gitId":"typingpanda"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":80,"author":{"gitId":"typingpanda"},"content":"        fw.close();","lastModifiedDate":"2023-02-14"},{"lineNumber":81,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":82,"author":{"gitId":"typingpanda"},"content":"}","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"typingpanda":82}},{"path":"src/main/java/Handlers/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"typingpanda"},"content":"package Handlers;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"typingpanda"},"content":"import Tasks.Task;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"typingpanda"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"typingpanda"},"content":"public class TaskManager {","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"typingpanda"},"content":"    private static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"typingpanda"},"content":"    public static ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"typingpanda"},"content":"        return taskList;","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"typingpanda"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"typingpanda"},"content":"     * Adds a task to the taskList Array","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"typingpanda"},"content":"     * ","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"typingpanda"},"content":"     * @param t the task to be added","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"typingpanda"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"typingpanda"},"content":"    public static void addTask(Task t) {","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"typingpanda"},"content":"        taskList.add(t);","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"typingpanda"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"typingpanda"},"content":"     * Deletes a task from the taskList Array","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"typingpanda"},"content":"     * ","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"typingpanda"},"content":"     * @param index","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"typingpanda"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"typingpanda"},"content":"    public static void deleteTask(int index) {","lastModifiedDate":"2023-02-14"},{"lineNumber":29,"author":{"gitId":"typingpanda"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\\n\" + taskList.get(index - 1).describeTask() + \"\\n\");","lastModifiedDate":"2023-02-14"},{"lineNumber":30,"author":{"gitId":"typingpanda"},"content":"        taskList.remove(index - 1);","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"typingpanda"},"content":"    public static int getTaskCount() {","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"typingpanda"},"content":"        return taskList.size();","lastModifiedDate":"2023-02-14"},{"lineNumber":35,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"typingpanda"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"typingpanda"},"content":"     * Prints out all tasks in the taskList Array for the user to read.","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"typingpanda"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"typingpanda"},"content":"    public static void listTask() {","lastModifiedDate":"2023-02-06"},{"lineNumber":41,"author":{"gitId":"typingpanda"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2023-02-14"},{"lineNumber":42,"author":{"gitId":"typingpanda"},"content":"            System.out.println(\"You have no tasks in your list yet!\");","lastModifiedDate":"2023-02-06"},{"lineNumber":43,"author":{"gitId":"typingpanda"},"content":"            return;","lastModifiedDate":"2023-02-06"},{"lineNumber":44,"author":{"gitId":"typingpanda"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":45,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":46,"author":{"gitId":"typingpanda"},"content":"        int existingTaskCount \u003d 1;","lastModifiedDate":"2023-02-06"},{"lineNumber":47,"author":{"gitId":"typingpanda"},"content":"        for (Task item : taskList) {","lastModifiedDate":"2023-02-06"},{"lineNumber":48,"author":{"gitId":"typingpanda"},"content":"            System.out.println(existingTaskCount + \". \" + item.describeTask());","lastModifiedDate":"2023-02-06"},{"lineNumber":49,"author":{"gitId":"typingpanda"},"content":"            existingTaskCount++;","lastModifiedDate":"2023-02-06"},{"lineNumber":50,"author":{"gitId":"typingpanda"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":51,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":52,"author":{"gitId":"typingpanda"},"content":"        System.out.println(\"\\nYou have \" + getTaskCount() + \" tasks in the list.\\n\");","lastModifiedDate":"2023-02-14"},{"lineNumber":53,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":54,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":55,"author":{"gitId":"typingpanda"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":56,"author":{"gitId":"typingpanda"},"content":"     * Takes in the user input index, converts to the index of the task in the taskList Array and","lastModifiedDate":"2023-02-26"},{"lineNumber":57,"author":{"gitId":"typingpanda"},"content":"     * marks it as done.","lastModifiedDate":"2023-02-26"},{"lineNumber":58,"author":{"gitId":"typingpanda"},"content":"     * ","lastModifiedDate":"2023-02-26"},{"lineNumber":59,"author":{"gitId":"typingpanda"},"content":"     * @param index the index of the task in the taskList Array","lastModifiedDate":"2023-02-26"},{"lineNumber":60,"author":{"gitId":"typingpanda"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":61,"author":{"gitId":"typingpanda"},"content":"    public static void markTask(int index) {","lastModifiedDate":"2023-02-14"},{"lineNumber":62,"author":{"gitId":"typingpanda"},"content":"        if (index \u003e 0 \u0026\u0026 index \u003c\u003d getTaskCount()) {","lastModifiedDate":"2023-02-14"},{"lineNumber":63,"author":{"gitId":"typingpanda"},"content":"            ArrayList\u003cTask\u003e list \u003d getTaskList();","lastModifiedDate":"2023-02-14"},{"lineNumber":64,"author":{"gitId":"typingpanda"},"content":"            Task task \u003d list.get(index - 1);","lastModifiedDate":"2023-02-14"},{"lineNumber":65,"author":{"gitId":"typingpanda"},"content":"            task.markAsDone();","lastModifiedDate":"2023-02-14"},{"lineNumber":66,"author":{"gitId":"typingpanda"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\" + task.describeTask() + \"\\n\");","lastModifiedDate":"2023-02-14"},{"lineNumber":67,"author":{"gitId":"typingpanda"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":68,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":69,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":70,"author":{"gitId":"typingpanda"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":71,"author":{"gitId":"typingpanda"},"content":"     * Takes in the user input index, converts to the index of the task in the taskList Array and","lastModifiedDate":"2023-02-26"},{"lineNumber":72,"author":{"gitId":"typingpanda"},"content":"     * marks it as not done.","lastModifiedDate":"2023-02-26"},{"lineNumber":73,"author":{"gitId":"typingpanda"},"content":"     * ","lastModifiedDate":"2023-02-26"},{"lineNumber":74,"author":{"gitId":"typingpanda"},"content":"     * @param index the index of the task in the taskList Array","lastModifiedDate":"2023-02-26"},{"lineNumber":75,"author":{"gitId":"typingpanda"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":76,"author":{"gitId":"typingpanda"},"content":"    public static void unmarkTask(int index) {","lastModifiedDate":"2023-02-14"},{"lineNumber":77,"author":{"gitId":"typingpanda"},"content":"        if (index \u003e 0 \u0026\u0026 index \u003c\u003d getTaskCount()) {","lastModifiedDate":"2023-02-14"},{"lineNumber":78,"author":{"gitId":"typingpanda"},"content":"            ArrayList\u003cTask\u003e list \u003d getTaskList();","lastModifiedDate":"2023-02-14"},{"lineNumber":79,"author":{"gitId":"typingpanda"},"content":"            Task task \u003d list.get(index - 1);","lastModifiedDate":"2023-02-14"},{"lineNumber":80,"author":{"gitId":"typingpanda"},"content":"            task.unmarkAsDone();","lastModifiedDate":"2023-02-14"},{"lineNumber":81,"author":{"gitId":"typingpanda"},"content":"            System.out.println(\"OK, Ive marked this task as not done yet:\\n\" + task.describeTask() + \"\\n\");","lastModifiedDate":"2023-02-14"},{"lineNumber":82,"author":{"gitId":"typingpanda"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":83,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":84,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":85,"author":{"gitId":"typingpanda"},"content":"    ","lastModifiedDate":"2023-02-26"},{"lineNumber":86,"author":{"gitId":"typingpanda"},"content":"    /** ","lastModifiedDate":"2023-02-26"},{"lineNumber":87,"author":{"gitId":"typingpanda"},"content":"     * Prints out all tasks that contain the given description.","lastModifiedDate":"2023-02-26"},{"lineNumber":88,"author":{"gitId":"typingpanda"},"content":"     * ","lastModifiedDate":"2023-02-26"},{"lineNumber":89,"author":{"gitId":"typingpanda"},"content":"     * @param description the description to be searched for","lastModifiedDate":"2023-02-26"},{"lineNumber":90,"author":{"gitId":"typingpanda"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":91,"author":{"gitId":"typingpanda"},"content":"    public static void findTask(String description) {","lastModifiedDate":"2023-02-26"},{"lineNumber":92,"author":{"gitId":"typingpanda"},"content":"        ArrayList\u003cTask\u003e list \u003d getTaskList();","lastModifiedDate":"2023-02-26"},{"lineNumber":93,"author":{"gitId":"typingpanda"},"content":"        int existingTaskCount \u003d 1;","lastModifiedDate":"2023-02-26"},{"lineNumber":94,"author":{"gitId":"typingpanda"},"content":"        for (Task item : list) {","lastModifiedDate":"2023-02-26"},{"lineNumber":95,"author":{"gitId":"typingpanda"},"content":"            if (item.describeTask().contains(description)) {","lastModifiedDate":"2023-02-26"},{"lineNumber":96,"author":{"gitId":"typingpanda"},"content":"                System.out.println(existingTaskCount + \". \" + item.describeTask());","lastModifiedDate":"2023-02-26"},{"lineNumber":97,"author":{"gitId":"typingpanda"},"content":"                existingTaskCount++;","lastModifiedDate":"2023-02-26"},{"lineNumber":98,"author":{"gitId":"typingpanda"},"content":"            }","lastModifiedDate":"2023-02-26"},{"lineNumber":99,"author":{"gitId":"typingpanda"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":100,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":101,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":102,"author":{"gitId":"typingpanda"},"content":"    ","lastModifiedDate":"2023-02-26"},{"lineNumber":103,"author":{"gitId":"typingpanda"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":104,"author":{"gitId":"typingpanda"},"content":"     * Reads a single task from the file and adds it to the task list ","lastModifiedDate":"2023-02-26"},{"lineNumber":105,"author":{"gitId":"typingpanda"},"content":"     * and input the relevant details depending on the task type.","lastModifiedDate":"2023-02-26"},{"lineNumber":106,"author":{"gitId":"typingpanda"},"content":"     * ","lastModifiedDate":"2023-02-26"},{"lineNumber":107,"author":{"gitId":"typingpanda"},"content":"     * @param line the line of text from the file","lastModifiedDate":"2023-02-26"},{"lineNumber":108,"author":{"gitId":"typingpanda"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":109,"author":{"gitId":"typingpanda"},"content":"    public static void readTaskFromFile(String line) {","lastModifiedDate":"2023-02-14"},{"lineNumber":110,"author":{"gitId":"typingpanda"},"content":"        String[] taskDetails \u003d line.split(\"\\\\|\");","lastModifiedDate":"2023-02-14"},{"lineNumber":111,"author":{"gitId":"typingpanda"},"content":"        String taskType \u003d taskDetails[0].trim();","lastModifiedDate":"2023-02-14"},{"lineNumber":112,"author":{"gitId":"typingpanda"},"content":"        String taskStatus \u003d taskDetails[1].trim();","lastModifiedDate":"2023-02-14"},{"lineNumber":113,"author":{"gitId":"typingpanda"},"content":"        String taskDescription \u003d taskDetails[2].trim();","lastModifiedDate":"2023-02-14"},{"lineNumber":114,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":115,"author":{"gitId":"typingpanda"},"content":"        switch (taskType) {","lastModifiedDate":"2023-02-14"},{"lineNumber":116,"author":{"gitId":"typingpanda"},"content":"        case \"T\":","lastModifiedDate":"2023-02-14"},{"lineNumber":117,"author":{"gitId":"typingpanda"},"content":"            Task todo \u003d new Tasks.Todo(taskDescription);","lastModifiedDate":"2023-02-14"},{"lineNumber":118,"author":{"gitId":"typingpanda"},"content":"            if (taskStatus.equals(\"1\")) {","lastModifiedDate":"2023-02-14"},{"lineNumber":119,"author":{"gitId":"typingpanda"},"content":"                todo.markAsDone();","lastModifiedDate":"2023-02-14"},{"lineNumber":120,"author":{"gitId":"typingpanda"},"content":"            }","lastModifiedDate":"2023-02-14"},{"lineNumber":121,"author":{"gitId":"typingpanda"},"content":"            addTask(todo);","lastModifiedDate":"2023-02-14"},{"lineNumber":122,"author":{"gitId":"typingpanda"},"content":"            break;","lastModifiedDate":"2023-02-14"},{"lineNumber":123,"author":{"gitId":"typingpanda"},"content":"        case \"D\":","lastModifiedDate":"2023-02-14"},{"lineNumber":124,"author":{"gitId":"typingpanda"},"content":"            String taskDeadline \u003d taskDetails[3].trim();","lastModifiedDate":"2023-02-14"},{"lineNumber":125,"author":{"gitId":"typingpanda"},"content":"            Task deadline \u003d new Tasks.Deadline(taskDescription, taskDeadline);","lastModifiedDate":"2023-02-14"},{"lineNumber":126,"author":{"gitId":"typingpanda"},"content":"            if (taskStatus.equals(\"1\")) {","lastModifiedDate":"2023-02-14"},{"lineNumber":127,"author":{"gitId":"typingpanda"},"content":"                deadline.markAsDone();","lastModifiedDate":"2023-02-14"},{"lineNumber":128,"author":{"gitId":"typingpanda"},"content":"            }","lastModifiedDate":"2023-02-14"},{"lineNumber":129,"author":{"gitId":"typingpanda"},"content":"            addTask(deadline);","lastModifiedDate":"2023-02-14"},{"lineNumber":130,"author":{"gitId":"typingpanda"},"content":"            break;","lastModifiedDate":"2023-02-14"},{"lineNumber":131,"author":{"gitId":"typingpanda"},"content":"        case \"E\":","lastModifiedDate":"2023-02-14"},{"lineNumber":132,"author":{"gitId":"typingpanda"},"content":"            String[] taskDate \u003d taskDetails[3].split(\"-\");","lastModifiedDate":"2023-02-14"},{"lineNumber":133,"author":{"gitId":"typingpanda"},"content":"            String taskDateFrom \u003d taskDate[0].trim();","lastModifiedDate":"2023-02-14"},{"lineNumber":134,"author":{"gitId":"typingpanda"},"content":"            String taskDateTo \u003d taskDate[1].trim();","lastModifiedDate":"2023-02-14"},{"lineNumber":135,"author":{"gitId":"typingpanda"},"content":"            Task event \u003d new Tasks.Event(taskDescription, taskDateFrom, taskDateTo);","lastModifiedDate":"2023-02-14"},{"lineNumber":136,"author":{"gitId":"typingpanda"},"content":"            if (taskStatus.equals(\"1\")) {","lastModifiedDate":"2023-02-14"},{"lineNumber":137,"author":{"gitId":"typingpanda"},"content":"                event.markAsDone();","lastModifiedDate":"2023-02-14"},{"lineNumber":138,"author":{"gitId":"typingpanda"},"content":"            }","lastModifiedDate":"2023-02-14"},{"lineNumber":139,"author":{"gitId":"typingpanda"},"content":"            addTask(event);","lastModifiedDate":"2023-02-14"},{"lineNumber":140,"author":{"gitId":"typingpanda"},"content":"            break;","lastModifiedDate":"2023-02-14"},{"lineNumber":141,"author":{"gitId":"typingpanda"},"content":"        default:","lastModifiedDate":"2023-02-14"},{"lineNumber":142,"author":{"gitId":"typingpanda"},"content":"            System.out.println(\"Error reading file\");","lastModifiedDate":"2023-02-14"},{"lineNumber":143,"author":{"gitId":"typingpanda"},"content":"            break;","lastModifiedDate":"2023-02-14"},{"lineNumber":144,"author":{"gitId":"typingpanda"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":145,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":146,"author":{"gitId":"typingpanda"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"typingpanda":146}},{"path":"src/main/java/Handlers/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"typingpanda"},"content":"package Handlers;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"typingpanda"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"typingpanda"},"content":"public class Ui {","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"typingpanda"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"typingpanda"},"content":"     * Takes in user inputs, extracts the command and calls the relevant methods in","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"typingpanda"},"content":"     * TaskManager","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"typingpanda"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"typingpanda"},"content":"    public static void takeUserInputs() {","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"typingpanda"},"content":"    ","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"typingpanda"},"content":"        boolean isComplete \u003d false;","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"typingpanda"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"typingpanda"},"content":"    ","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"typingpanda"},"content":"        printHello();","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"typingpanda"},"content":"        printLineBreak();","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"typingpanda"},"content":"    ","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"typingpanda"},"content":"        while (!isComplete) {","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"typingpanda"},"content":"    ","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"typingpanda"},"content":"            String line \u003d in.nextLine();","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"typingpanda"},"content":"            String firstWord \u003d Parser.getFirstWord(line);","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"typingpanda"},"content":"    ","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"typingpanda"},"content":"            switch (firstWord) {","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"typingpanda"},"content":"            case \"mark\":","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"typingpanda"},"content":"                TaskManager.markTask(Parser.getTaskNumber(line));","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"typingpanda"},"content":"                break;","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"typingpanda"},"content":"            case \"unmark\":","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"typingpanda"},"content":"                TaskManager.unmarkTask(Parser.getTaskNumber(line));","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"typingpanda"},"content":"                break;","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"typingpanda"},"content":"            case \"delete\":","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"typingpanda"},"content":"                int taskNumberDelete \u003d Parser.getTaskNumber(line);","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"typingpanda"},"content":"                TaskManager.deleteTask(taskNumberDelete);","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"typingpanda"},"content":"                break;","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"typingpanda"},"content":"            case \"list\":","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"typingpanda"},"content":"                TaskManager.listTask();","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"typingpanda"},"content":"                break;","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"typingpanda"},"content":"            case \"todo\":","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"typingpanda"},"content":"                Parser.getTodoDetails(line);","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"typingpanda"},"content":"                break;","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"typingpanda"},"content":"            case \"deadline\":","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"typingpanda"},"content":"                Parser.getDeadlineDetails(line);","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"typingpanda"},"content":"                break;","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"typingpanda"},"content":"            case \"event\":","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"typingpanda"},"content":"                Parser.getEventDetails(line);","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"typingpanda"},"content":"                break;","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"typingpanda"},"content":"            case \"find\":","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"typingpanda"},"content":"                TaskManager.findTask(Parser.getTaskDescription(line));","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"typingpanda"},"content":"                break;","lastModifiedDate":"2023-02-26"},{"lineNumber":49,"author":{"gitId":"typingpanda"},"content":"            case \"bye\":","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"typingpanda"},"content":"                isComplete \u003d true;","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"typingpanda"},"content":"                break;","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"typingpanda"},"content":"            default:","lastModifiedDate":"2023-02-26"},{"lineNumber":53,"author":{"gitId":"typingpanda"},"content":"                System.out.println(\"Unrecognized command. Please try again.\");","lastModifiedDate":"2023-02-26"},{"lineNumber":54,"author":{"gitId":"typingpanda"},"content":"                break;","lastModifiedDate":"2023-02-26"},{"lineNumber":55,"author":{"gitId":"typingpanda"},"content":"            }","lastModifiedDate":"2023-02-26"},{"lineNumber":56,"author":{"gitId":"typingpanda"},"content":"    ","lastModifiedDate":"2023-02-26"},{"lineNumber":57,"author":{"gitId":"typingpanda"},"content":"            Ui.printLineBreak();","lastModifiedDate":"2023-02-26"},{"lineNumber":58,"author":{"gitId":"typingpanda"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":59,"author":{"gitId":"typingpanda"},"content":"    ","lastModifiedDate":"2023-02-26"},{"lineNumber":60,"author":{"gitId":"typingpanda"},"content":"        printBye();","lastModifiedDate":"2023-02-26"},{"lineNumber":61,"author":{"gitId":"typingpanda"},"content":"        in.close();","lastModifiedDate":"2023-02-26"},{"lineNumber":62,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":63,"author":{"gitId":"typingpanda"},"content":"    ","lastModifiedDate":"2023-02-26"},{"lineNumber":64,"author":{"gitId":"typingpanda"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":65,"author":{"gitId":"typingpanda"},"content":"     * Prints the welcome message","lastModifiedDate":"2023-02-26"},{"lineNumber":66,"author":{"gitId":"typingpanda"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":67,"author":{"gitId":"typingpanda"},"content":"    private static void printHello() {","lastModifiedDate":"2023-02-26"},{"lineNumber":68,"author":{"gitId":"typingpanda"},"content":"        System.out.println(\"________         __         __________\");","lastModifiedDate":"2023-02-26"},{"lineNumber":69,"author":{"gitId":"typingpanda"},"content":"        System.out.println(\"\\\\______ \\\\  __ __|  | __ ____\\\\______   \\\\__ __  ____   ____   ___________ \");","lastModifiedDate":"2023-02-26"},{"lineNumber":70,"author":{"gitId":"typingpanda"},"content":"        System.out.println(\" |    |  \\\\|  |  \\\\  |/ // __ \\\\|       _/  |  \\\\/    \\\\ /    \\\\_/ __ \\\\_  __ \\\\ \");","lastModifiedDate":"2023-02-26"},{"lineNumber":71,"author":{"gitId":"typingpanda"},"content":"        System.out.println(\" |    `   \\\\  |  /    \u003c\\\\  ___/|    |   \\\\  |  /   |  \\\\   |  \\\\  ___/|  | \\\\/ \");","lastModifiedDate":"2023-02-26"},{"lineNumber":72,"author":{"gitId":"typingpanda"},"content":"        System.out.println(\"/_______  /____/|__|_ \\\\\\\\___  \u003e____|_  /____/|___|  /___|  /\\\\___  \u003e__| \");","lastModifiedDate":"2023-02-26"},{"lineNumber":73,"author":{"gitId":"typingpanda"},"content":"        System.out.println(\"        \\\\/           \\\\/    \\\\/       \\\\/           \\\\/     \\\\/     \\\\/ \");","lastModifiedDate":"2023-02-26"},{"lineNumber":74,"author":{"gitId":"typingpanda"},"content":"        System.out.println(\"Hello! I\u0027m DukeRunner\\nWhat can I do for you?\\n\");","lastModifiedDate":"2023-02-26"},{"lineNumber":75,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":76,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":77,"author":{"gitId":"typingpanda"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":78,"author":{"gitId":"typingpanda"},"content":"     * Prints the goodbye message","lastModifiedDate":"2023-02-26"},{"lineNumber":79,"author":{"gitId":"typingpanda"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":80,"author":{"gitId":"typingpanda"},"content":"    private static void printBye() {","lastModifiedDate":"2023-02-26"},{"lineNumber":81,"author":{"gitId":"typingpanda"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-02-26"},{"lineNumber":82,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":83,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":84,"author":{"gitId":"typingpanda"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":85,"author":{"gitId":"typingpanda"},"content":"     * Prints a line break","lastModifiedDate":"2023-02-26"},{"lineNumber":86,"author":{"gitId":"typingpanda"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":87,"author":{"gitId":"typingpanda"},"content":"    private static void printLineBreak() {","lastModifiedDate":"2023-02-26"},{"lineNumber":88,"author":{"gitId":"typingpanda"},"content":"        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\");","lastModifiedDate":"2023-02-26"},{"lineNumber":89,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":90,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":91,"author":{"gitId":"typingpanda"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"typingpanda":91}},{"path":"src/main/java/Tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"typingpanda"},"content":"package Tasks;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"typingpanda"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"typingpanda"},"content":"    ","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"typingpanda"},"content":"    protected String dueDate;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"typingpanda"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"typingpanda"},"content":"     * Constructor for Deadline","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"typingpanda"},"content":"     * ","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"typingpanda"},"content":"     * @param description Description of the task","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"typingpanda"},"content":"     * @param by          Due date of the task","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"typingpanda"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"typingpanda"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"typingpanda"},"content":"        super(description);","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"typingpanda"},"content":"        this.dueDate \u003d by;","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"typingpanda"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"typingpanda"},"content":"     * Returns the description of the task for user to read","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"typingpanda"},"content":"     * ","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"typingpanda"},"content":"     * @return String the description of the task","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"typingpanda"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"typingpanda"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"typingpanda"},"content":"    public String describeTask() {","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"typingpanda"},"content":"        return \"[D]\" + super.describeTask() + \" (by: \" + dueDate + \")\";","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":28,"author":{"gitId":"typingpanda"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"typingpanda"},"content":"     * Returns the description of the task in a format that is","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"typingpanda"},"content":"     * suitable for writing to file.","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"typingpanda"},"content":"     * ","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"typingpanda"},"content":"     * @return String the description of the task ","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"typingpanda"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"typingpanda"},"content":"    @Override","lastModifiedDate":"2023-02-14"},{"lineNumber":35,"author":{"gitId":"typingpanda"},"content":"    public String describeTaskForFile() {","lastModifiedDate":"2023-02-14"},{"lineNumber":36,"author":{"gitId":"typingpanda"},"content":"        return \"D | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + dueDate;","lastModifiedDate":"2023-02-14"},{"lineNumber":37,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":38,"author":{"gitId":"typingpanda"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"typingpanda":38}},{"path":"src/main/java/Tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"typingpanda"},"content":"package Tasks;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"typingpanda"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"typingpanda"},"content":"    ","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"typingpanda"},"content":"    protected String eventFrom;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"typingpanda"},"content":"    protected String eventTo;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"typingpanda"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"typingpanda"},"content":"     * Constructor for Event","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"typingpanda"},"content":"     * ","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"typingpanda"},"content":"     * @param description Description of the task","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"typingpanda"},"content":"     * @param from        Start time of the event","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"typingpanda"},"content":"     * @param to          End time of the event","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"typingpanda"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"typingpanda"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"typingpanda"},"content":"        super(description);","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"typingpanda"},"content":"        this.eventFrom \u003d from;","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"typingpanda"},"content":"        this.eventTo \u003d to;","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"typingpanda"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"typingpanda"},"content":"     * Returns the description of the task for user to read","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"typingpanda"},"content":"     * ","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"typingpanda"},"content":"     * @return String the description of the task","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"typingpanda"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"typingpanda"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"typingpanda"},"content":"    public String describeTask() {","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"typingpanda"},"content":"        return \"[E]\" + super.describeTask() + \" (from: \" + eventFrom + \" to: \" + eventTo + \")\";","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":30,"author":{"gitId":"typingpanda"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"typingpanda"},"content":"     * Returns the description of the task in a format that is","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"typingpanda"},"content":"     * suitable for writing to file.","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"typingpanda"},"content":"     * ","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"typingpanda"},"content":"     * @return String the description of the task ","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"typingpanda"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"typingpanda"},"content":"    @Override","lastModifiedDate":"2023-02-14"},{"lineNumber":37,"author":{"gitId":"typingpanda"},"content":"    public String describeTaskForFile() {","lastModifiedDate":"2023-02-14"},{"lineNumber":38,"author":{"gitId":"typingpanda"},"content":"        return \"E | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + eventFrom + \"-\" + eventTo; ","lastModifiedDate":"2023-02-14"},{"lineNumber":39,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":40,"author":{"gitId":"typingpanda"},"content":"}","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"typingpanda"},"content":"    ","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"typingpanda":41}},{"path":"src/main/java/Tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"typingpanda"},"content":"package Tasks;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"typingpanda"},"content":"public abstract class Task {","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"typingpanda"},"content":"    protected String description;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"typingpanda"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"typingpanda"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"typingpanda"},"content":"     * Constructor for Task","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"typingpanda"},"content":"     * ","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"typingpanda"},"content":"     * @param description Description of the task","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"typingpanda"},"content":"     * @param isDone      Status of the task","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"typingpanda"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"typingpanda"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"typingpanda"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"typingpanda"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"typingpanda"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"typingpanda"},"content":"     * Gets the status icon of the task from reading from file to","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"typingpanda"},"content":"     * determine if the task is done or not.","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"typingpanda"},"content":"     * ","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"typingpanda"},"content":"     * @return String the status icon of the task","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"typingpanda"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"typingpanda"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"typingpanda"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"typingpanda"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"typingpanda"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"typingpanda"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"typingpanda"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"typingpanda"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"typingpanda"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"typingpanda"},"content":"     * Marks the task as not done.","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"typingpanda"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"typingpanda"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"typingpanda"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"typingpanda"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"typingpanda"},"content":"     * Getter for the description of the task for user to read.","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"typingpanda"},"content":"     * ","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"typingpanda"},"content":"     * @return String the description of the task","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"typingpanda"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"typingpanda"},"content":"    public String describeTask() {","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"typingpanda"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":51,"author":{"gitId":"typingpanda"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"typingpanda"},"content":"     * Returns the description of the task in a format that is","lastModifiedDate":"2023-02-26"},{"lineNumber":53,"author":{"gitId":"typingpanda"},"content":"     * suitable for writing to file.","lastModifiedDate":"2023-02-26"},{"lineNumber":54,"author":{"gitId":"typingpanda"},"content":"     * ","lastModifiedDate":"2023-02-26"},{"lineNumber":55,"author":{"gitId":"typingpanda"},"content":"     * @return String the description of the task in a format that is","lastModifiedDate":"2023-02-26"},{"lineNumber":56,"author":{"gitId":"typingpanda"},"content":"     *         suitable for writing to file","lastModifiedDate":"2023-02-26"},{"lineNumber":57,"author":{"gitId":"typingpanda"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":58,"author":{"gitId":"typingpanda"},"content":"    public String describeTaskForFile() {","lastModifiedDate":"2023-02-14"},{"lineNumber":59,"author":{"gitId":"typingpanda"},"content":"        return  \"\";","lastModifiedDate":"2023-02-14"},{"lineNumber":60,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":61,"author":{"gitId":"typingpanda"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"typingpanda":61}},{"path":"src/main/java/Tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"typingpanda"},"content":"package Tasks;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"typingpanda"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"typingpanda"},"content":"    ","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"typingpanda"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"typingpanda"},"content":"     * Constructor for Todo","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"typingpanda"},"content":"     * ","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"typingpanda"},"content":"     * @param description Description of the task","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"typingpanda"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"typingpanda"},"content":"    public Todo (String description) {","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"typingpanda"},"content":"        super(description);","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"typingpanda"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"typingpanda"},"content":"     * Returns the description of the task for user to read","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"typingpanda"},"content":"     * ","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"typingpanda"},"content":"     * @return String the description of the task","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"typingpanda"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"typingpanda"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"typingpanda"},"content":"    public String describeTask() {","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"typingpanda"},"content":"        return \"[T]\" + super.describeTask();","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"typingpanda"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"typingpanda"},"content":"     * Returns the description of the task in a format that is","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"typingpanda"},"content":"     * suitable for writing to file.","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"typingpanda"},"content":"     * ","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"typingpanda"},"content":"     * @return String the description of the task ","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"typingpanda"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"typingpanda"},"content":"    @Override","lastModifiedDate":"2023-02-14"},{"lineNumber":30,"author":{"gitId":"typingpanda"},"content":"    public String describeTaskForFile() {","lastModifiedDate":"2023-02-14"},{"lineNumber":31,"author":{"gitId":"typingpanda"},"content":"        return \"T | \" + (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2023-02-14"},{"lineNumber":32,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":33,"author":{"gitId":"typingpanda"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"typingpanda":33}}]
