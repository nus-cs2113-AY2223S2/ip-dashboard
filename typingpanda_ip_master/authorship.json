[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"3. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"typingpanda"},"content":"   ```","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"-":23,"typingpanda":1}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"typingpanda"},"content":"DukeRunner is a simple task manager that allows you to add, view, and manage your tasks. You can add todos, deadlines, and events to the list. This program also allows you to save tasks into your local hard drive and read from the file created on startup.. Given below are instructions on how to use it.","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"typingpanda"},"content":"## Setting up in Intellij","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"typingpanda"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"typingpanda"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"typingpanda"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"typingpanda"},"content":"   1. Click `Open`.","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"typingpanda"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"typingpanda"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"typingpanda"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"typingpanda"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"typingpanda"},"content":"1. After that, locate the `src/main/java/Duke/DukeRunner.java` file, right-click it, and choose `Run DukeRunner.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"typingpanda"},"content":"   ```","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"typingpanda"},"content":"   ________         __         __________","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"typingpanda"},"content":"   \\______ \\  __ __|  | __ ____\\______   \\__ __  ____   ____   ___________","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"typingpanda"},"content":"   |    |  \\|  |  \\  |/ // __ \\|       _/  |  \\/    \\ /    \\_/ __ \\_  __ \\","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"typingpanda"},"content":"   |    `   \\  |  /    \u003c\\  ___/|    |   \\  |  /   |  \\   |  \\  ___/|  | \\/","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"typingpanda"},"content":"   /_______  /____/|__|_ \\\\___  \u003e____|_  /____/|___|  /___|  /\\___  \u003e__|","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"typingpanda"},"content":"         \\/           \\/    \\/       \\/           \\/     \\/     \\/","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"typingpanda"},"content":"   Hello! I\u0027m DukeRunner","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"typingpanda"},"content":"   What can I do for you?","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"typingpanda"},"content":"   \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"typingpanda"},"content":"   ```","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":34,"author":{"gitId":"typingpanda"},"content":"### Feature - Edit tasks","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"typingpanda"},"content":"DukeRunner allows you to add and delete tasks of different types to keep track of them.","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"typingpanda"},"content":"### Feature - Mark tasks","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"typingpanda"},"content":"DukeRunner allows you to mark tasks as completed or uncompleted.","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":42,"author":{"gitId":"typingpanda"},"content":"### Feature - Find tasks","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":44,"author":{"gitId":"typingpanda"},"content":"DukeRunner allows you to find tasks using keywords.","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":46,"author":{"gitId":"typingpanda"},"content":"### Feature - Save and Load","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"typingpanda"},"content":"DukeRunner stores the tasks added upon exiting the program and loads them upon startup.","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":52,"author":{"gitId":"typingpanda"},"content":"### `todo` - Adds a new Todo task","lastModifiedDate":"2023-02-28"},{"lineNumber":53,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":54,"author":{"gitId":"typingpanda"},"content":"Adds a Todo task to your list of tasks and displays the number of existing tasks.  ","lastModifiedDate":"2023-02-28"},{"lineNumber":55,"author":{"gitId":"typingpanda"},"content":"Example of usage: `todo math homework`","lastModifiedDate":"2023-02-28"},{"lineNumber":56,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":57,"author":{"gitId":"typingpanda"},"content":"Expected outcome:","lastModifiedDate":"2023-02-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":59,"author":{"gitId":"typingpanda"},"content":"```","lastModifiedDate":"2023-02-28"},{"lineNumber":60,"author":{"gitId":"typingpanda"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-02-28"},{"lineNumber":61,"author":{"gitId":"typingpanda"},"content":"[T][ ] math homework","lastModifiedDate":"2023-02-28"},{"lineNumber":62,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":63,"author":{"gitId":"typingpanda"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2023-02-28"},{"lineNumber":64,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":65,"author":{"gitId":"typingpanda"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-02-28"},{"lineNumber":66,"author":{"gitId":"typingpanda"},"content":"```","lastModifiedDate":"2023-02-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":68,"author":{"gitId":"typingpanda"},"content":"### `deadline` - Adds a new Deadline task","lastModifiedDate":"2023-02-28"},{"lineNumber":69,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":70,"author":{"gitId":"typingpanda"},"content":"Adds a Deadline task to your list of tasks and displays the number of existing tasks.  ","lastModifiedDate":"2023-02-28"},{"lineNumber":71,"author":{"gitId":"typingpanda"},"content":"Example of usage: `deadline do science homework /by Monday`","lastModifiedDate":"2023-02-28"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":73,"author":{"gitId":"typingpanda"},"content":"Expected outcome:","lastModifiedDate":"2023-02-28"},{"lineNumber":74,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":75,"author":{"gitId":"typingpanda"},"content":"```","lastModifiedDate":"2023-02-28"},{"lineNumber":76,"author":{"gitId":"typingpanda"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-02-28"},{"lineNumber":77,"author":{"gitId":"typingpanda"},"content":"[D][ ] do science homework (by: Monday)","lastModifiedDate":"2023-02-28"},{"lineNumber":78,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":79,"author":{"gitId":"typingpanda"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2023-02-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":81,"author":{"gitId":"typingpanda"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-02-28"},{"lineNumber":82,"author":{"gitId":"typingpanda"},"content":"```","lastModifiedDate":"2023-02-28"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":84,"author":{"gitId":"typingpanda"},"content":"### `event` - Adds a new Event task","lastModifiedDate":"2023-02-28"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":86,"author":{"gitId":"typingpanda"},"content":"Adds an Event task to your list of tasks and displays the number of existing tasks.  ","lastModifiedDate":"2023-02-28"},{"lineNumber":87,"author":{"gitId":"typingpanda"},"content":"Example of usage: `event school carnival /from Monday 9am /to 12pm`","lastModifiedDate":"2023-02-28"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":89,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2023-02-28"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":91,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":92,"author":{"gitId":"typingpanda"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-02-28"},{"lineNumber":93,"author":{"gitId":"typingpanda"},"content":"[E][ ] school carnival (from: Monday 9am to: 12pm)","lastModifiedDate":"2023-02-28"},{"lineNumber":94,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":95,"author":{"gitId":"typingpanda"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2023-02-28"},{"lineNumber":96,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":97,"author":{"gitId":"typingpanda"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-02-28"},{"lineNumber":98,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":99,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":100,"author":{"gitId":"typingpanda"},"content":"### `list` - Lists all current tasks","lastModifiedDate":"2023-02-28"},{"lineNumber":101,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":102,"author":{"gitId":"typingpanda"},"content":"Displays all the tasks in the order they were added.  ","lastModifiedDate":"2023-02-28"},{"lineNumber":103,"author":{"gitId":"typingpanda"},"content":"Example of usage: `list`","lastModifiedDate":"2023-02-28"},{"lineNumber":104,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":105,"author":{"gitId":"typingpanda"},"content":"Expected outcome:","lastModifiedDate":"2023-02-28"},{"lineNumber":106,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":107,"author":{"gitId":"typingpanda"},"content":"```","lastModifiedDate":"2023-02-28"},{"lineNumber":108,"author":{"gitId":"typingpanda"},"content":"1. [T][ ] math homework","lastModifiedDate":"2023-02-28"},{"lineNumber":109,"author":{"gitId":"typingpanda"},"content":"2. [D][ ] science homework (by: Monday)","lastModifiedDate":"2023-02-28"},{"lineNumber":110,"author":{"gitId":"typingpanda"},"content":"3. [E][ ] school carnival (from: Monday 9am to: 12pm)","lastModifiedDate":"2023-02-28"},{"lineNumber":111,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":112,"author":{"gitId":"typingpanda"},"content":"You have 3 tasks in the list.","lastModifiedDate":"2023-02-28"},{"lineNumber":113,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":114,"author":{"gitId":"typingpanda"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-02-28"},{"lineNumber":115,"author":{"gitId":"typingpanda"},"content":"```","lastModifiedDate":"2023-02-28"},{"lineNumber":116,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":117,"author":{"gitId":"typingpanda"},"content":"### `mark` - Marks a task as completed","lastModifiedDate":"2023-02-28"},{"lineNumber":118,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":119,"author":{"gitId":"typingpanda"},"content":"Marks a task of certain task number as completed.  ","lastModifiedDate":"2023-02-28"},{"lineNumber":120,"author":{"gitId":"typingpanda"},"content":"Example of usage: `mark 1`","lastModifiedDate":"2023-02-28"},{"lineNumber":121,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":122,"author":{"gitId":"typingpanda"},"content":"Expected outcome:","lastModifiedDate":"2023-02-28"},{"lineNumber":123,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":124,"author":{"gitId":"typingpanda"},"content":"```","lastModifiedDate":"2023-02-28"},{"lineNumber":125,"author":{"gitId":"typingpanda"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2023-02-28"},{"lineNumber":126,"author":{"gitId":"typingpanda"},"content":"[T][X] math homework","lastModifiedDate":"2023-02-28"},{"lineNumber":127,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":128,"author":{"gitId":"typingpanda"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-02-28"},{"lineNumber":129,"author":{"gitId":"typingpanda"},"content":"```","lastModifiedDate":"2023-02-28"},{"lineNumber":130,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":131,"author":{"gitId":"typingpanda"},"content":"### `unmark` - Unmarks a task from being completed","lastModifiedDate":"2023-02-28"},{"lineNumber":132,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":133,"author":{"gitId":"typingpanda"},"content":"Unmarks a task of certain task number from being completed.  ","lastModifiedDate":"2023-02-28"},{"lineNumber":134,"author":{"gitId":"typingpanda"},"content":"Example of usage: `unmark 1`","lastModifiedDate":"2023-02-28"},{"lineNumber":135,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":136,"author":{"gitId":"typingpanda"},"content":"Expected outcome:","lastModifiedDate":"2023-02-28"},{"lineNumber":137,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":138,"author":{"gitId":"typingpanda"},"content":"```","lastModifiedDate":"2023-02-28"},{"lineNumber":139,"author":{"gitId":"typingpanda"},"content":"OK, Ive marked this task as not done yet:","lastModifiedDate":"2023-02-28"},{"lineNumber":140,"author":{"gitId":"typingpanda"},"content":"[T][ ] math homework","lastModifiedDate":"2023-02-28"},{"lineNumber":141,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":142,"author":{"gitId":"typingpanda"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-02-28"},{"lineNumber":143,"author":{"gitId":"typingpanda"},"content":"```","lastModifiedDate":"2023-02-28"},{"lineNumber":144,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":145,"author":{"gitId":"typingpanda"},"content":"### `delete` - Deletes a task from the list of tasks","lastModifiedDate":"2023-02-28"},{"lineNumber":146,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":147,"author":{"gitId":"typingpanda"},"content":"Deletes a task of certain task number from list of tasks.  ","lastModifiedDate":"2023-02-28"},{"lineNumber":148,"author":{"gitId":"typingpanda"},"content":"Example of usage: `delete 3`","lastModifiedDate":"2023-02-28"},{"lineNumber":149,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":150,"author":{"gitId":"typingpanda"},"content":"Expected outcome:","lastModifiedDate":"2023-02-28"},{"lineNumber":151,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":152,"author":{"gitId":"typingpanda"},"content":"```","lastModifiedDate":"2023-02-28"},{"lineNumber":153,"author":{"gitId":"typingpanda"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2023-02-28"},{"lineNumber":154,"author":{"gitId":"typingpanda"},"content":"[E][ ] school carnival (from: Monday 9am to: 12pm)","lastModifiedDate":"2023-02-28"},{"lineNumber":155,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":156,"author":{"gitId":"typingpanda"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-02-28"},{"lineNumber":157,"author":{"gitId":"typingpanda"},"content":"```","lastModifiedDate":"2023-02-28"},{"lineNumber":158,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":159,"author":{"gitId":"typingpanda"},"content":"### `find` - Finds tasks","lastModifiedDate":"2023-02-28"},{"lineNumber":160,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":161,"author":{"gitId":"typingpanda"},"content":"Find tasks using keywords found in the description of task.  ","lastModifiedDate":"2023-02-28"},{"lineNumber":162,"author":{"gitId":"typingpanda"},"content":"Example of usage: `find homework`","lastModifiedDate":"2023-02-28"},{"lineNumber":163,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":164,"author":{"gitId":"typingpanda"},"content":"Expected outcome:","lastModifiedDate":"2023-02-28"},{"lineNumber":165,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":166,"author":{"gitId":"typingpanda"},"content":"```","lastModifiedDate":"2023-02-28"},{"lineNumber":167,"author":{"gitId":"typingpanda"},"content":"1. [T][ ] math homework","lastModifiedDate":"2023-02-28"},{"lineNumber":168,"author":{"gitId":"typingpanda"},"content":"2. [D][ ] do science homework (by: Monday)","lastModifiedDate":"2023-02-28"},{"lineNumber":169,"author":{"gitId":"typingpanda"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-02-28"},{"lineNumber":170,"author":{"gitId":"typingpanda"},"content":"```","lastModifiedDate":"2023-02-28"},{"lineNumber":171,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":172,"author":{"gitId":"typingpanda"},"content":"### `bye` - Exits DukeRunner","lastModifiedDate":"2023-02-28"},{"lineNumber":173,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":174,"author":{"gitId":"typingpanda"},"content":"Exits the program and saves existing tasks into a text file.  ","lastModifiedDate":"2023-02-28"},{"lineNumber":175,"author":{"gitId":"typingpanda"},"content":"Example of usage: `bye`","lastModifiedDate":"2023-02-28"},{"lineNumber":176,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":177,"author":{"gitId":"typingpanda"},"content":"Expected outcome:","lastModifiedDate":"2023-02-28"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":179,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-02-28"},{"lineNumber":180,"author":{"gitId":"typingpanda"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2023-02-28"},{"lineNumber":181,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"-":28,"typingpanda":153}},{"path":"src/main/java/Duke/DukeRunner.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"typingpanda"},"content":"import Handlers.StorageManager;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"typingpanda"},"content":"import Handlers.Ui;","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"typingpanda"},"content":"public class DukeRunner {","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"typingpanda"},"content":"        StorageManager.loadFileContents();","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"typingpanda"},"content":"        Ui.takeUserInputs();","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"typingpanda"},"content":"        StorageManager.saveFileContents();","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":2,"typingpanda":8}},{"path":"src/main/java/Exceptions/EmptyListException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"typingpanda"},"content":"package Exceptions;","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"typingpanda"},"content":"public class EmptyListException extends Exception {","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"typingpanda"},"content":"        ","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"typingpanda"},"content":"}","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"typingpanda":5}},{"path":"src/main/java/Exceptions/InvalidTypeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"typingpanda"},"content":"package Exceptions;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"typingpanda"},"content":"public class InvalidTypeException extends Exception{","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"typingpanda"},"content":"    ","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"typingpanda"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"typingpanda":5}},{"path":"src/main/java/Exceptions/TaskManagerException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"typingpanda"},"content":"package Exceptions;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"typingpanda"},"content":"public class TaskManagerException extends Exception {","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"typingpanda"},"content":"    ","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"typingpanda"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"typingpanda":4}},{"path":"src/main/java/Handlers/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"typingpanda"},"content":"package Handlers;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"typingpanda"},"content":"import Exceptions.InvalidTypeException;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"typingpanda"},"content":"import Exceptions.TaskManagerException;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"typingpanda"},"content":"import Tasks.Todo;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"typingpanda"},"content":"import Tasks.Deadline;","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"typingpanda"},"content":"import Tasks.Event;","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"typingpanda"},"content":"public abstract class Parser {","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"typingpanda"},"content":"    public static final String MARK_COMMAND \u003d \"mark\";","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"typingpanda"},"content":"    public static final String UNMARK_COMMAND \u003d \"unmark\";","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"typingpanda"},"content":"    public static final String DELETE_COMMAND \u003d \"delete\";","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"typingpanda"},"content":"    public static final String LIST_COMMAND \u003d \"list\";","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"typingpanda"},"content":"    public static final String TODO_COMMAND \u003d \"todo\";","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"typingpanda"},"content":"    public static final String DEADLINE_COMMAND \u003d \"deadline\";","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"typingpanda"},"content":"    public static final String EVENT_COMMAND \u003d \"event\";","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"typingpanda"},"content":"    public static final String FIND_COMMAND \u003d \"find\";","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"typingpanda"},"content":"    public static final String BYE_COMMAND \u003d \"bye\";","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"typingpanda"},"content":"    public static final String TODO_TASK_TYPE \u003d \"T\";","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"typingpanda"},"content":"    public static final String DEADLINE_TASK_TYPE \u003d \"D\";","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"typingpanda"},"content":"    public static final String EVENT_TASK_TYPE \u003d \"E\";","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"typingpanda"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"typingpanda"},"content":"     * Extracts the first word of the user input","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"typingpanda"},"content":"     * ","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"typingpanda"},"content":"     * @param line the user input","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"typingpanda"},"content":"     * @return the first word of the user input","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"typingpanda"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"typingpanda"},"content":"    public static String getFirstWord(String line) {","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"typingpanda"},"content":"        String[] words \u003d line.split(\" \");","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"typingpanda"},"content":"        return words[0];","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"typingpanda"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"typingpanda"},"content":"     * Extracts everything after the first word of the user input","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"typingpanda"},"content":"     * ","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"typingpanda"},"content":"     * @param line the user input","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"typingpanda"},"content":"     * @return String the second word of the user input","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"typingpanda"},"content":"     * @throws TaskManagerException if the user input does not contain a second word","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"typingpanda"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"typingpanda"},"content":"    public static String getSecondWord(String line) throws TaskManagerException {","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"typingpanda"},"content":"        String[] words \u003d line.split(\"\\\\s+\");","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"typingpanda"},"content":"        if (isLessThanTwo(words)) {","lastModifiedDate":"2023-02-27"},{"lineNumber":46,"author":{"gitId":"typingpanda"},"content":"            throw new TaskManagerException();","lastModifiedDate":"2023-02-13"},{"lineNumber":47,"author":{"gitId":"typingpanda"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":48,"author":{"gitId":"typingpanda"},"content":"        int index \u003d line.indexOf(\" \");","lastModifiedDate":"2023-02-26"},{"lineNumber":49,"author":{"gitId":"typingpanda"},"content":"        String sub \u003d line.substring(index + 1);","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"typingpanda"},"content":"        return sub;","lastModifiedDate":"2023-02-13"},{"lineNumber":51,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":52,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":53,"author":{"gitId":"typingpanda"},"content":"    private static boolean isLessThanTwo(String[] words) {","lastModifiedDate":"2023-02-27"},{"lineNumber":54,"author":{"gitId":"typingpanda"},"content":"        return words.length \u003c 2;","lastModifiedDate":"2023-02-27"},{"lineNumber":55,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":56,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":57,"author":{"gitId":"typingpanda"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":58,"author":{"gitId":"typingpanda"},"content":"     * Gets the task number from the user input.","lastModifiedDate":"2023-02-26"},{"lineNumber":59,"author":{"gitId":"typingpanda"},"content":"     * ","lastModifiedDate":"2023-02-26"},{"lineNumber":60,"author":{"gitId":"typingpanda"},"content":"     * @param line the user input","lastModifiedDate":"2023-02-28"},{"lineNumber":61,"author":{"gitId":"typingpanda"},"content":"     * @return int the task number","lastModifiedDate":"2023-02-26"},{"lineNumber":62,"author":{"gitId":"typingpanda"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":63,"author":{"gitId":"typingpanda"},"content":"    public static int getTaskNumber(String line) {","lastModifiedDate":"2023-02-13"},{"lineNumber":64,"author":{"gitId":"typingpanda"},"content":"        int index \u003d 0;","lastModifiedDate":"2023-02-13"},{"lineNumber":65,"author":{"gitId":"typingpanda"},"content":"        try {","lastModifiedDate":"2023-02-13"},{"lineNumber":66,"author":{"gitId":"typingpanda"},"content":"            index \u003d Integer.parseInt(getSecondWord(line));","lastModifiedDate":"2023-02-13"},{"lineNumber":67,"author":{"gitId":"typingpanda"},"content":"            isTaskNumberValid(index);","lastModifiedDate":"2023-02-13"},{"lineNumber":68,"author":{"gitId":"typingpanda"},"content":"        } catch (TaskManagerException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":69,"author":{"gitId":"typingpanda"},"content":"            Ui.taskNumberMissingMessage();","lastModifiedDate":"2023-02-27"},{"lineNumber":70,"author":{"gitId":"typingpanda"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":71,"author":{"gitId":"typingpanda"},"content":"            Ui.taskNumberInvalidTypeMessage();","lastModifiedDate":"2023-02-27"},{"lineNumber":72,"author":{"gitId":"typingpanda"},"content":"        } catch (InvalidTypeException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":73,"author":{"gitId":"typingpanda"},"content":"            Ui.taskNumberOutofBoundsMessage();","lastModifiedDate":"2023-02-27"},{"lineNumber":74,"author":{"gitId":"typingpanda"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":75,"author":{"gitId":"typingpanda"},"content":"        return index;","lastModifiedDate":"2023-02-13"},{"lineNumber":76,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":77,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":78,"author":{"gitId":"typingpanda"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":79,"author":{"gitId":"typingpanda"},"content":"     * Gets the task description or task title from the user input.","lastModifiedDate":"2023-02-26"},{"lineNumber":80,"author":{"gitId":"typingpanda"},"content":"     * ","lastModifiedDate":"2023-02-26"},{"lineNumber":81,"author":{"gitId":"typingpanda"},"content":"     * @param line the user input","lastModifiedDate":"2023-02-28"},{"lineNumber":82,"author":{"gitId":"typingpanda"},"content":"     * @return String the task description or task title","lastModifiedDate":"2023-02-26"},{"lineNumber":83,"author":{"gitId":"typingpanda"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":84,"author":{"gitId":"typingpanda"},"content":"    public static String getTaskDescription(String line) {","lastModifiedDate":"2023-02-26"},{"lineNumber":85,"author":{"gitId":"typingpanda"},"content":"        String description \u003d \"\";","lastModifiedDate":"2023-02-26"},{"lineNumber":86,"author":{"gitId":"typingpanda"},"content":"        try {","lastModifiedDate":"2023-02-26"},{"lineNumber":87,"author":{"gitId":"typingpanda"},"content":"            description \u003d getSecondWord(line);","lastModifiedDate":"2023-02-26"},{"lineNumber":88,"author":{"gitId":"typingpanda"},"content":"        } catch (TaskManagerException e) {","lastModifiedDate":"2023-02-26"},{"lineNumber":89,"author":{"gitId":"typingpanda"},"content":"            Ui.taskDescriptionEmptyMessage();","lastModifiedDate":"2023-02-27"},{"lineNumber":90,"author":{"gitId":"typingpanda"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":91,"author":{"gitId":"typingpanda"},"content":"        return description;","lastModifiedDate":"2023-02-26"},{"lineNumber":92,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":93,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":94,"author":{"gitId":"typingpanda"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":95,"author":{"gitId":"typingpanda"},"content":"     * Checks if the task number is between 1 and the number of tasks in the task","lastModifiedDate":"2023-02-27"},{"lineNumber":96,"author":{"gitId":"typingpanda"},"content":"     * list.","lastModifiedDate":"2023-02-27"},{"lineNumber":97,"author":{"gitId":"typingpanda"},"content":"     * ","lastModifiedDate":"2023-02-26"},{"lineNumber":98,"author":{"gitId":"typingpanda"},"content":"     * @param taskNumber the task number taken from user input","lastModifiedDate":"2023-02-28"},{"lineNumber":99,"author":{"gitId":"typingpanda"},"content":"     * @throws InvalidTypeException if the task number does not meet above conditions","lastModifiedDate":"2023-02-28"},{"lineNumber":100,"author":{"gitId":"typingpanda"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":101,"author":{"gitId":"typingpanda"},"content":"    public static void isTaskNumberValid(int taskNumber) throws InvalidTypeException {","lastModifiedDate":"2023-02-13"},{"lineNumber":102,"author":{"gitId":"typingpanda"},"content":"        if (isTaskNumberOutOfBounds(taskNumber)) {","lastModifiedDate":"2023-02-27"},{"lineNumber":103,"author":{"gitId":"typingpanda"},"content":"            throw new InvalidTypeException();","lastModifiedDate":"2023-02-13"},{"lineNumber":104,"author":{"gitId":"typingpanda"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":105,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":106,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":107,"author":{"gitId":"typingpanda"},"content":"    private static boolean isTaskNumberOutOfBounds(int taskNumber) {","lastModifiedDate":"2023-02-27"},{"lineNumber":108,"author":{"gitId":"typingpanda"},"content":"        return taskNumber \u003c 1 || taskNumber \u003e TaskManager.getTaskCount();","lastModifiedDate":"2023-02-27"},{"lineNumber":109,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":110,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":111,"author":{"gitId":"typingpanda"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":112,"author":{"gitId":"typingpanda"},"content":"     * Gets the todo description from the user input, creates a todo object","lastModifiedDate":"2023-02-27"},{"lineNumber":113,"author":{"gitId":"typingpanda"},"content":"     * then adds the event to the task list.","lastModifiedDate":"2023-02-27"},{"lineNumber":114,"author":{"gitId":"typingpanda"},"content":"     * ","lastModifiedDate":"2023-02-26"},{"lineNumber":115,"author":{"gitId":"typingpanda"},"content":"     * @param line the user input","lastModifiedDate":"2023-02-28"},{"lineNumber":116,"author":{"gitId":"typingpanda"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":117,"author":{"gitId":"typingpanda"},"content":"    public static void addTodoTask(String line) {","lastModifiedDate":"2023-02-27"},{"lineNumber":118,"author":{"gitId":"typingpanda"},"content":"        String todoLine \u003d \"\";","lastModifiedDate":"2023-02-13"},{"lineNumber":119,"author":{"gitId":"typingpanda"},"content":"        try {","lastModifiedDate":"2023-02-13"},{"lineNumber":120,"author":{"gitId":"typingpanda"},"content":"            todoLine \u003d getSecondWord(line);","lastModifiedDate":"2023-02-13"},{"lineNumber":121,"author":{"gitId":"typingpanda"},"content":"            Todo todoTask \u003d new Todo(todoLine);","lastModifiedDate":"2023-02-13"},{"lineNumber":122,"author":{"gitId":"typingpanda"},"content":"            TaskManager.addTask(todoTask);","lastModifiedDate":"2023-02-13"},{"lineNumber":123,"author":{"gitId":"typingpanda"},"content":"            Ui.addedTodoMessage(todoTask);","lastModifiedDate":"2023-02-27"},{"lineNumber":124,"author":{"gitId":"typingpanda"},"content":"        } catch (TaskManagerException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":125,"author":{"gitId":"typingpanda"},"content":"            Ui.todoDescriptionMissingMessage();","lastModifiedDate":"2023-02-27"},{"lineNumber":126,"author":{"gitId":"typingpanda"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":127,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":128,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":129,"author":{"gitId":"typingpanda"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":130,"author":{"gitId":"typingpanda"},"content":"     * Gets the deadline description and deadline date from the user input, creates","lastModifiedDate":"2023-02-28"},{"lineNumber":131,"author":{"gitId":"typingpanda"},"content":"     * a","lastModifiedDate":"2023-02-28"},{"lineNumber":132,"author":{"gitId":"typingpanda"},"content":"     * deadline object then adds the event to the task list.","lastModifiedDate":"2023-02-27"},{"lineNumber":133,"author":{"gitId":"typingpanda"},"content":"     * ","lastModifiedDate":"2023-02-26"},{"lineNumber":134,"author":{"gitId":"typingpanda"},"content":"     * @param line the user input","lastModifiedDate":"2023-02-28"},{"lineNumber":135,"author":{"gitId":"typingpanda"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":136,"author":{"gitId":"typingpanda"},"content":"    public static void addDeadlineTask(String line) {","lastModifiedDate":"2023-02-27"},{"lineNumber":137,"author":{"gitId":"typingpanda"},"content":"        String deadlineLine \u003d \"\";","lastModifiedDate":"2023-02-13"},{"lineNumber":138,"author":{"gitId":"typingpanda"},"content":"        try {","lastModifiedDate":"2023-02-13"},{"lineNumber":139,"author":{"gitId":"typingpanda"},"content":"            deadlineLine \u003d getSecondWord(line);","lastModifiedDate":"2023-02-13"},{"lineNumber":140,"author":{"gitId":"typingpanda"},"content":"            Deadline deadlineTask \u003d getDeadlineObject(deadlineLine);","lastModifiedDate":"2023-02-27"},{"lineNumber":141,"author":{"gitId":"typingpanda"},"content":"            TaskManager.addTask(deadlineTask);","lastModifiedDate":"2023-02-13"},{"lineNumber":142,"author":{"gitId":"typingpanda"},"content":"            Ui.addedDeadlineMessage(deadlineTask);","lastModifiedDate":"2023-02-27"},{"lineNumber":143,"author":{"gitId":"typingpanda"},"content":"        } catch (TaskManagerException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":144,"author":{"gitId":"typingpanda"},"content":"            Ui.deadlineDescriptionMissingMessage();","lastModifiedDate":"2023-02-27"},{"lineNumber":145,"author":{"gitId":"typingpanda"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":146,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":147,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":148,"author":{"gitId":"typingpanda"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":149,"author":{"gitId":"typingpanda"},"content":"     * Takes in a string containing the deadline description and deadline date and","lastModifiedDate":"2023-02-27"},{"lineNumber":150,"author":{"gitId":"typingpanda"},"content":"     * returns a Deadline object.","lastModifiedDate":"2023-02-27"},{"lineNumber":151,"author":{"gitId":"typingpanda"},"content":"     * ","lastModifiedDate":"2023-02-27"},{"lineNumber":152,"author":{"gitId":"typingpanda"},"content":"     * @param deadlineLine the deadline description and deadline date","lastModifiedDate":"2023-02-28"},{"lineNumber":153,"author":{"gitId":"typingpanda"},"content":"     * @return Deadline the Deadline object","lastModifiedDate":"2023-02-27"},{"lineNumber":154,"author":{"gitId":"typingpanda"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":155,"author":{"gitId":"typingpanda"},"content":"    private static Deadline getDeadlineObject(String deadlineLine) {","lastModifiedDate":"2023-02-27"},{"lineNumber":156,"author":{"gitId":"typingpanda"},"content":"        String[] deadlineDetails \u003d deadlineLine.split(\"/by\");","lastModifiedDate":"2023-02-27"},{"lineNumber":157,"author":{"gitId":"typingpanda"},"content":"        String deadlineDescription \u003d deadlineDetails[0].trim();","lastModifiedDate":"2023-02-27"},{"lineNumber":158,"author":{"gitId":"typingpanda"},"content":"        String deadlineDate \u003d deadlineDetails[1].trim();","lastModifiedDate":"2023-02-27"},{"lineNumber":159,"author":{"gitId":"typingpanda"},"content":"        Deadline deadlineTask \u003d new Deadline(deadlineDescription, deadlineDate);","lastModifiedDate":"2023-02-27"},{"lineNumber":160,"author":{"gitId":"typingpanda"},"content":"        return deadlineTask;","lastModifiedDate":"2023-02-27"},{"lineNumber":161,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":162,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":163,"author":{"gitId":"typingpanda"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":164,"author":{"gitId":"typingpanda"},"content":"     * Gets the event description, event start date and event end date from the user","lastModifiedDate":"2023-02-27"},{"lineNumber":165,"author":{"gitId":"typingpanda"},"content":"     * input, creates an event object then adds the event to the task list.","lastModifiedDate":"2023-02-27"},{"lineNumber":166,"author":{"gitId":"typingpanda"},"content":"     * ","lastModifiedDate":"2023-02-26"},{"lineNumber":167,"author":{"gitId":"typingpanda"},"content":"     * @param line the user input","lastModifiedDate":"2023-02-28"},{"lineNumber":168,"author":{"gitId":"typingpanda"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":169,"author":{"gitId":"typingpanda"},"content":"    public static void addEventTask(String line) {","lastModifiedDate":"2023-02-27"},{"lineNumber":170,"author":{"gitId":"typingpanda"},"content":"        String eventLine \u003d \"\";","lastModifiedDate":"2023-02-13"},{"lineNumber":171,"author":{"gitId":"typingpanda"},"content":"        try {","lastModifiedDate":"2023-02-13"},{"lineNumber":172,"author":{"gitId":"typingpanda"},"content":"            eventLine \u003d getSecondWord(line);","lastModifiedDate":"2023-02-13"},{"lineNumber":173,"author":{"gitId":"typingpanda"},"content":"            Event eventTask \u003d getEventObject(eventLine);","lastModifiedDate":"2023-02-27"},{"lineNumber":174,"author":{"gitId":"typingpanda"},"content":"            TaskManager.addTask(eventTask);","lastModifiedDate":"2023-02-27"},{"lineNumber":175,"author":{"gitId":"typingpanda"},"content":"            Ui.addedEventMessage(eventTask);","lastModifiedDate":"2023-02-27"},{"lineNumber":176,"author":{"gitId":"typingpanda"},"content":"        } catch (TaskManagerException e) {","lastModifiedDate":"2023-02-27"},{"lineNumber":177,"author":{"gitId":"typingpanda"},"content":"            Ui.eventDescriptionMissingMessage();","lastModifiedDate":"2023-02-27"},{"lineNumber":178,"author":{"gitId":"typingpanda"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":179,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":180,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":181,"author":{"gitId":"typingpanda"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":182,"author":{"gitId":"typingpanda"},"content":"     * Takes in a string containing the event description, event start date and","lastModifiedDate":"2023-02-28"},{"lineNumber":183,"author":{"gitId":"typingpanda"},"content":"     * end date and returns an Event object.","lastModifiedDate":"2023-02-27"},{"lineNumber":184,"author":{"gitId":"typingpanda"},"content":"     * ","lastModifiedDate":"2023-02-27"},{"lineNumber":185,"author":{"gitId":"typingpanda"},"content":"     * @param eventLine the event description, event start date and event end date","lastModifiedDate":"2023-02-28"},{"lineNumber":186,"author":{"gitId":"typingpanda"},"content":"     * @return Event the Event object","lastModifiedDate":"2023-02-27"},{"lineNumber":187,"author":{"gitId":"typingpanda"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":188,"author":{"gitId":"typingpanda"},"content":"    private static Event getEventObject(String eventLine) {","lastModifiedDate":"2023-02-27"},{"lineNumber":189,"author":{"gitId":"typingpanda"},"content":"        String[] eventDetails \u003d eventLine.split(\"/from\");","lastModifiedDate":"2023-02-26"},{"lineNumber":190,"author":{"gitId":"typingpanda"},"content":"        String[] eventTiming \u003d eventDetails[1].split(\"/to\");","lastModifiedDate":"2023-02-26"},{"lineNumber":191,"author":{"gitId":"typingpanda"},"content":"        String eventDescription \u003d eventDetails[0].trim();","lastModifiedDate":"2023-02-26"},{"lineNumber":192,"author":{"gitId":"typingpanda"},"content":"        String eventFrom \u003d eventTiming[0].trim();","lastModifiedDate":"2023-02-26"},{"lineNumber":193,"author":{"gitId":"typingpanda"},"content":"        String eventTo \u003d eventTiming[1].trim();","lastModifiedDate":"2023-02-26"},{"lineNumber":194,"author":{"gitId":"typingpanda"},"content":"        Event eventTask \u003d new Event(eventDescription, eventFrom, eventTo);","lastModifiedDate":"2023-02-13"},{"lineNumber":195,"author":{"gitId":"typingpanda"},"content":"        return eventTask;","lastModifiedDate":"2023-02-27"},{"lineNumber":196,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":197,"author":{"gitId":"typingpanda"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"typingpanda":197}},{"path":"src/main/java/Handlers/StorageManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"typingpanda"},"content":"package Handlers;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"typingpanda"},"content":"import java.io.File;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"typingpanda"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"typingpanda"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"typingpanda"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"typingpanda"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"typingpanda"},"content":"public abstract class StorageManager {","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"typingpanda"},"content":"    private static final String FILE_PATH \u003d \"./data/duke.txt\";","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"typingpanda"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"typingpanda"},"content":"     * Creates a new file if it does not exist and loads the tasks in the file into","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"typingpanda"},"content":"     * the taskList in TaskManager","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"typingpanda"},"content":"     * ","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"typingpanda"},"content":"     * @throws FileNotFoundException if the file is not found","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"typingpanda"},"content":"     * @throws IOException if there is an error reading the file","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"typingpanda"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"typingpanda"},"content":"    public static void loadFileContents() {","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"typingpanda"},"content":"        new File(\"./data\").mkdir();","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"typingpanda"},"content":"        File f \u003d new File(FILE_PATH);","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"typingpanda"},"content":"        if (!f.exists()) {","lastModifiedDate":"2023-02-14"},{"lineNumber":27,"author":{"gitId":"typingpanda"},"content":"            try {","lastModifiedDate":"2023-02-14"},{"lineNumber":28,"author":{"gitId":"typingpanda"},"content":"                f.createNewFile();","lastModifiedDate":"2023-02-14"},{"lineNumber":29,"author":{"gitId":"typingpanda"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-02-14"},{"lineNumber":30,"author":{"gitId":"typingpanda"},"content":"                Ui.createFileErrorMessage();","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"typingpanda"},"content":"            }","lastModifiedDate":"2023-02-14"},{"lineNumber":32,"author":{"gitId":"typingpanda"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":33,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":34,"author":{"gitId":"typingpanda"},"content":"        try {","lastModifiedDate":"2023-02-14"},{"lineNumber":35,"author":{"gitId":"typingpanda"},"content":"            writeToTaskManager(f);","lastModifiedDate":"2023-02-14"},{"lineNumber":36,"author":{"gitId":"typingpanda"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-02-14"},{"lineNumber":37,"author":{"gitId":"typingpanda"},"content":"            Ui.fileNotFoundMessage();","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"typingpanda"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":39,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":40,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":41,"author":{"gitId":"typingpanda"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"typingpanda"},"content":"     * Saves the tasks in the taskList in TaskManager into the file","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"typingpanda"},"content":"     * ","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"typingpanda"},"content":"     * @throws IOException if there is an error writing to the file","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"typingpanda"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"typingpanda"},"content":"    public static void saveFileContents() {","lastModifiedDate":"2023-02-14"},{"lineNumber":47,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":48,"author":{"gitId":"typingpanda"},"content":"        try {","lastModifiedDate":"2023-02-14"},{"lineNumber":49,"author":{"gitId":"typingpanda"},"content":"            writeToFile();","lastModifiedDate":"2023-02-14"},{"lineNumber":50,"author":{"gitId":"typingpanda"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-02-14"},{"lineNumber":51,"author":{"gitId":"typingpanda"},"content":"            Ui.writeToFileErrorMessage();","lastModifiedDate":"2023-02-28"},{"lineNumber":52,"author":{"gitId":"typingpanda"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":53,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":54,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":55,"author":{"gitId":"typingpanda"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":56,"author":{"gitId":"typingpanda"},"content":"     * Reads every line of the file and load each task into the taskList in","lastModifiedDate":"2023-02-28"},{"lineNumber":57,"author":{"gitId":"typingpanda"},"content":"     * TaskManager","lastModifiedDate":"2023-02-28"},{"lineNumber":58,"author":{"gitId":"typingpanda"},"content":"     * ","lastModifiedDate":"2023-02-26"},{"lineNumber":59,"author":{"gitId":"typingpanda"},"content":"     * @param f the file to be read","lastModifiedDate":"2023-02-28"},{"lineNumber":60,"author":{"gitId":"typingpanda"},"content":"     * @throws FileNotFoundException if the file is not found","lastModifiedDate":"2023-02-28"},{"lineNumber":61,"author":{"gitId":"typingpanda"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":62,"author":{"gitId":"typingpanda"},"content":"    private static void writeToTaskManager(File f) throws FileNotFoundException {","lastModifiedDate":"2023-02-14"},{"lineNumber":63,"author":{"gitId":"typingpanda"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2023-02-14"},{"lineNumber":64,"author":{"gitId":"typingpanda"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2023-02-14"},{"lineNumber":65,"author":{"gitId":"typingpanda"},"content":"            String nextLine \u003d s.nextLine();","lastModifiedDate":"2023-02-14"},{"lineNumber":66,"author":{"gitId":"typingpanda"},"content":"            TaskManager.readTaskFromFile(nextLine);","lastModifiedDate":"2023-02-14"},{"lineNumber":67,"author":{"gitId":"typingpanda"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":68,"author":{"gitId":"typingpanda"},"content":"        s.close();","lastModifiedDate":"2023-02-14"},{"lineNumber":69,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":70,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":71,"author":{"gitId":"typingpanda"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":72,"author":{"gitId":"typingpanda"},"content":"     * Writes every task in the taskList in TaskManager into the file","lastModifiedDate":"2023-02-27"},{"lineNumber":73,"author":{"gitId":"typingpanda"},"content":"     * ","lastModifiedDate":"2023-02-26"},{"lineNumber":74,"author":{"gitId":"typingpanda"},"content":"     * @throws IOException if there is an error writing to the file","lastModifiedDate":"2023-02-28"},{"lineNumber":75,"author":{"gitId":"typingpanda"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":76,"author":{"gitId":"typingpanda"},"content":"    public static void writeToFile() throws IOException {","lastModifiedDate":"2023-02-14"},{"lineNumber":77,"author":{"gitId":"typingpanda"},"content":"        FileWriter fw \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2023-02-14"},{"lineNumber":78,"author":{"gitId":"typingpanda"},"content":"        for (int i \u003d 0; i \u003c TaskManager.getTaskCount(); i++) {","lastModifiedDate":"2023-02-14"},{"lineNumber":79,"author":{"gitId":"typingpanda"},"content":"            fw.write(TaskManager.getTaskList().get(i).describeTaskForFile() + \"\\n\");","lastModifiedDate":"2023-02-14"},{"lineNumber":80,"author":{"gitId":"typingpanda"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":81,"author":{"gitId":"typingpanda"},"content":"        fw.close();","lastModifiedDate":"2023-02-14"},{"lineNumber":82,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":83,"author":{"gitId":"typingpanda"},"content":"}","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"typingpanda":83}},{"path":"src/main/java/Handlers/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"typingpanda"},"content":"package Handlers;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"typingpanda"},"content":"import Tasks.Task;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"typingpanda"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"typingpanda"},"content":"import Exceptions.EmptyListException;","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"typingpanda"},"content":"public abstract class TaskManager {","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"typingpanda"},"content":"    private static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"typingpanda"},"content":"    public static ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"typingpanda"},"content":"        return taskList;","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"typingpanda"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"typingpanda"},"content":"     * Adds a task to the taskList Array","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"typingpanda"},"content":"     * ","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"typingpanda"},"content":"     * @param t the task to be added","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"typingpanda"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"typingpanda"},"content":"    public static void addTask(Task t) {","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"typingpanda"},"content":"        taskList.add(t);","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"typingpanda"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"typingpanda"},"content":"     * Deletes a task from the taskList Array","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"typingpanda"},"content":"     * ","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"typingpanda"},"content":"     * @param index the given user input stating the task number to be deleted","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"typingpanda"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"typingpanda"},"content":"    public static void deleteTask(int index) {","lastModifiedDate":"2023-02-14"},{"lineNumber":31,"author":{"gitId":"typingpanda"},"content":"        Ui.deletedTaskMessage(index);","lastModifiedDate":"2023-02-27"},{"lineNumber":32,"author":{"gitId":"typingpanda"},"content":"        taskList.remove(index - 1);","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"typingpanda"},"content":"    public static int getTaskCount() {","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"typingpanda"},"content":"        return taskList.size();","lastModifiedDate":"2023-02-14"},{"lineNumber":37,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"typingpanda"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"typingpanda"},"content":"     * Prints out all tasks in the taskList Array for the user to read.","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"typingpanda"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"typingpanda"},"content":"    public static void listTask() {","lastModifiedDate":"2023-02-06"},{"lineNumber":43,"author":{"gitId":"typingpanda"},"content":"        try {","lastModifiedDate":"2023-02-27"},{"lineNumber":44,"author":{"gitId":"typingpanda"},"content":"            printTasksFromArray();","lastModifiedDate":"2023-02-27"},{"lineNumber":45,"author":{"gitId":"typingpanda"},"content":"        } catch (EmptyListException e) {","lastModifiedDate":"2023-02-27"},{"lineNumber":46,"author":{"gitId":"typingpanda"},"content":"            Ui.emptyTaskListMessage();","lastModifiedDate":"2023-02-27"},{"lineNumber":47,"author":{"gitId":"typingpanda"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":48,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":49,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":50,"author":{"gitId":"typingpanda"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":51,"author":{"gitId":"typingpanda"},"content":"     * Checks if the taskList Array is empty and prints out the tasks in the","lastModifiedDate":"2023-02-27"},{"lineNumber":52,"author":{"gitId":"typingpanda"},"content":"     * taskList Array.","lastModifiedDate":"2023-02-27"},{"lineNumber":53,"author":{"gitId":"typingpanda"},"content":"     * ","lastModifiedDate":"2023-02-27"},{"lineNumber":54,"author":{"gitId":"typingpanda"},"content":"     * @throws EmptyListException if the taskList Array is empty","lastModifiedDate":"2023-02-28"},{"lineNumber":55,"author":{"gitId":"typingpanda"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":56,"author":{"gitId":"typingpanda"},"content":"    private static void printTasksFromArray() throws EmptyListException {","lastModifiedDate":"2023-02-27"},{"lineNumber":57,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":58,"author":{"gitId":"typingpanda"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2023-02-27"},{"lineNumber":59,"author":{"gitId":"typingpanda"},"content":"            throw new EmptyListException();","lastModifiedDate":"2023-02-27"},{"lineNumber":60,"author":{"gitId":"typingpanda"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":61,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":62,"author":{"gitId":"typingpanda"},"content":"        int existingTaskCount \u003d 1;","lastModifiedDate":"2023-02-06"},{"lineNumber":63,"author":{"gitId":"typingpanda"},"content":"        for (Task item : taskList) {","lastModifiedDate":"2023-02-06"},{"lineNumber":64,"author":{"gitId":"typingpanda"},"content":"            Ui.describeTaskMessage(existingTaskCount, item);","lastModifiedDate":"2023-02-27"},{"lineNumber":65,"author":{"gitId":"typingpanda"},"content":"            existingTaskCount++;","lastModifiedDate":"2023-02-06"},{"lineNumber":66,"author":{"gitId":"typingpanda"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":67,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":68,"author":{"gitId":"typingpanda"},"content":"        Ui.taskCountMessage();","lastModifiedDate":"2023-02-27"},{"lineNumber":69,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":70,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":71,"author":{"gitId":"typingpanda"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":72,"author":{"gitId":"typingpanda"},"content":"     * Takes in the user input index, converts to the index of the task in the","lastModifiedDate":"2023-02-27"},{"lineNumber":73,"author":{"gitId":"typingpanda"},"content":"     * taskList Array and","lastModifiedDate":"2023-02-27"},{"lineNumber":74,"author":{"gitId":"typingpanda"},"content":"     * marks it as done.","lastModifiedDate":"2023-02-26"},{"lineNumber":75,"author":{"gitId":"typingpanda"},"content":"     * ","lastModifiedDate":"2023-02-26"},{"lineNumber":76,"author":{"gitId":"typingpanda"},"content":"     * @param index the given user input stating the task number to be marked as","lastModifiedDate":"2023-02-28"},{"lineNumber":77,"author":{"gitId":"typingpanda"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":78,"author":{"gitId":"typingpanda"},"content":"    public static void markTask(int index) {","lastModifiedDate":"2023-02-14"},{"lineNumber":79,"author":{"gitId":"typingpanda"},"content":"        if (index \u003e 0 \u0026\u0026 index \u003c\u003d getTaskCount()) {","lastModifiedDate":"2023-02-14"},{"lineNumber":80,"author":{"gitId":"typingpanda"},"content":"            ArrayList\u003cTask\u003e list \u003d getTaskList();","lastModifiedDate":"2023-02-14"},{"lineNumber":81,"author":{"gitId":"typingpanda"},"content":"            Task task \u003d list.get(index - 1);","lastModifiedDate":"2023-02-14"},{"lineNumber":82,"author":{"gitId":"typingpanda"},"content":"            task.markAsDone();","lastModifiedDate":"2023-02-14"},{"lineNumber":83,"author":{"gitId":"typingpanda"},"content":"            Ui.markTaskMessage(task);","lastModifiedDate":"2023-02-27"},{"lineNumber":84,"author":{"gitId":"typingpanda"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":85,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":86,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":87,"author":{"gitId":"typingpanda"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":88,"author":{"gitId":"typingpanda"},"content":"     * Takes in the user input index, converts to the index of the task in the","lastModifiedDate":"2023-02-27"},{"lineNumber":89,"author":{"gitId":"typingpanda"},"content":"     * taskList Array and","lastModifiedDate":"2023-02-27"},{"lineNumber":90,"author":{"gitId":"typingpanda"},"content":"     * marks it as not done.","lastModifiedDate":"2023-02-26"},{"lineNumber":91,"author":{"gitId":"typingpanda"},"content":"     * ","lastModifiedDate":"2023-02-26"},{"lineNumber":92,"author":{"gitId":"typingpanda"},"content":"     * @param index the given user input stating the task number to be unmarked as","lastModifiedDate":"2023-02-28"},{"lineNumber":93,"author":{"gitId":"typingpanda"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":94,"author":{"gitId":"typingpanda"},"content":"    public static void unmarkTask(int index) {","lastModifiedDate":"2023-02-14"},{"lineNumber":95,"author":{"gitId":"typingpanda"},"content":"        if (index \u003e 0 \u0026\u0026 index \u003c\u003d getTaskCount()) {","lastModifiedDate":"2023-02-14"},{"lineNumber":96,"author":{"gitId":"typingpanda"},"content":"            ArrayList\u003cTask\u003e list \u003d getTaskList();","lastModifiedDate":"2023-02-14"},{"lineNumber":97,"author":{"gitId":"typingpanda"},"content":"            Task task \u003d list.get(index - 1);","lastModifiedDate":"2023-02-14"},{"lineNumber":98,"author":{"gitId":"typingpanda"},"content":"            task.unmarkAsDone();","lastModifiedDate":"2023-02-14"},{"lineNumber":99,"author":{"gitId":"typingpanda"},"content":"            Ui.unmarkTaskMessage(task);","lastModifiedDate":"2023-02-27"},{"lineNumber":100,"author":{"gitId":"typingpanda"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":101,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":102,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":103,"author":{"gitId":"typingpanda"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":104,"author":{"gitId":"typingpanda"},"content":"     * Prints out all tasks that contain the given description.","lastModifiedDate":"2023-02-26"},{"lineNumber":105,"author":{"gitId":"typingpanda"},"content":"     * ","lastModifiedDate":"2023-02-26"},{"lineNumber":106,"author":{"gitId":"typingpanda"},"content":"     * @param description the description to be searched for","lastModifiedDate":"2023-02-28"},{"lineNumber":107,"author":{"gitId":"typingpanda"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":108,"author":{"gitId":"typingpanda"},"content":"    public static void findTask(String description) {","lastModifiedDate":"2023-02-26"},{"lineNumber":109,"author":{"gitId":"typingpanda"},"content":"        ArrayList\u003cTask\u003e list \u003d getTaskList();","lastModifiedDate":"2023-02-26"},{"lineNumber":110,"author":{"gitId":"typingpanda"},"content":"        int existingTaskCount \u003d 1;","lastModifiedDate":"2023-02-26"},{"lineNumber":111,"author":{"gitId":"typingpanda"},"content":"        for (Task item : list) {","lastModifiedDate":"2023-02-26"},{"lineNumber":112,"author":{"gitId":"typingpanda"},"content":"            if (item.describeTask().contains(description)) {","lastModifiedDate":"2023-02-26"},{"lineNumber":113,"author":{"gitId":"typingpanda"},"content":"                Ui.describeTaskMessage(existingTaskCount, item);","lastModifiedDate":"2023-02-27"},{"lineNumber":114,"author":{"gitId":"typingpanda"},"content":"                existingTaskCount++;","lastModifiedDate":"2023-02-26"},{"lineNumber":115,"author":{"gitId":"typingpanda"},"content":"            }","lastModifiedDate":"2023-02-26"},{"lineNumber":116,"author":{"gitId":"typingpanda"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":117,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":118,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":119,"author":{"gitId":"typingpanda"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":120,"author":{"gitId":"typingpanda"},"content":"     * Reads a single task from the file and adds it to the task list","lastModifiedDate":"2023-02-26"},{"lineNumber":121,"author":{"gitId":"typingpanda"},"content":"     * and input the relevant details depending on the task type.","lastModifiedDate":"2023-02-26"},{"lineNumber":122,"author":{"gitId":"typingpanda"},"content":"     * ","lastModifiedDate":"2023-02-26"},{"lineNumber":123,"author":{"gitId":"typingpanda"},"content":"     * @param line the line of text from the file","lastModifiedDate":"2023-02-28"},{"lineNumber":124,"author":{"gitId":"typingpanda"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":125,"author":{"gitId":"typingpanda"},"content":"    public static void readTaskFromFile(String line) {","lastModifiedDate":"2023-02-14"},{"lineNumber":126,"author":{"gitId":"typingpanda"},"content":"        String[] taskAllDetails \u003d line.split(\"\\\\|\");","lastModifiedDate":"2023-02-28"},{"lineNumber":127,"author":{"gitId":"typingpanda"},"content":"        String taskType \u003d taskAllDetails[0].trim();","lastModifiedDate":"2023-02-28"},{"lineNumber":128,"author":{"gitId":"typingpanda"},"content":"        String taskStatus \u003d taskAllDetails[1].trim();","lastModifiedDate":"2023-02-28"},{"lineNumber":129,"author":{"gitId":"typingpanda"},"content":"        String taskDescription \u003d taskAllDetails[2].trim();","lastModifiedDate":"2023-02-28"},{"lineNumber":130,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":131,"author":{"gitId":"typingpanda"},"content":"        switch (taskType) {","lastModifiedDate":"2023-02-14"},{"lineNumber":132,"author":{"gitId":"typingpanda"},"content":"        case Parser.TODO_TASK_TYPE:","lastModifiedDate":"2023-02-28"},{"lineNumber":133,"author":{"gitId":"typingpanda"},"content":"            addTodoTask(taskStatus, taskDescription);","lastModifiedDate":"2023-02-28"},{"lineNumber":134,"author":{"gitId":"typingpanda"},"content":"            break;","lastModifiedDate":"2023-02-28"},{"lineNumber":135,"author":{"gitId":"typingpanda"},"content":"        case Parser.DEADLINE_TASK_TYPE:","lastModifiedDate":"2023-02-28"},{"lineNumber":136,"author":{"gitId":"typingpanda"},"content":"            addDeadlineTask(taskAllDetails, taskStatus, taskDescription);","lastModifiedDate":"2023-02-28"},{"lineNumber":137,"author":{"gitId":"typingpanda"},"content":"            break;","lastModifiedDate":"2023-02-28"},{"lineNumber":138,"author":{"gitId":"typingpanda"},"content":"        case Parser.EVENT_TASK_TYPE:","lastModifiedDate":"2023-02-28"},{"lineNumber":139,"author":{"gitId":"typingpanda"},"content":"            addEventTask(taskAllDetails, taskStatus, taskDescription);","lastModifiedDate":"2023-02-28"},{"lineNumber":140,"author":{"gitId":"typingpanda"},"content":"            break;","lastModifiedDate":"2023-02-28"},{"lineNumber":141,"author":{"gitId":"typingpanda"},"content":"        default:","lastModifiedDate":"2023-02-28"},{"lineNumber":142,"author":{"gitId":"typingpanda"},"content":"            Ui.fileErrorMessage();","lastModifiedDate":"2023-02-28"},{"lineNumber":143,"author":{"gitId":"typingpanda"},"content":"            break;","lastModifiedDate":"2023-02-28"},{"lineNumber":144,"author":{"gitId":"typingpanda"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":145,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":146,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":147,"author":{"gitId":"typingpanda"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":148,"author":{"gitId":"typingpanda"},"content":"     * Checks if todo task is done and adds it to the task list.","lastModifiedDate":"2023-02-28"},{"lineNumber":149,"author":{"gitId":"typingpanda"},"content":"     * ","lastModifiedDate":"2023-02-28"},{"lineNumber":150,"author":{"gitId":"typingpanda"},"content":"     * @param taskStatus the status of the task","lastModifiedDate":"2023-02-28"},{"lineNumber":151,"author":{"gitId":"typingpanda"},"content":"     * @param taskDescription the description of the task","lastModifiedDate":"2023-02-28"},{"lineNumber":152,"author":{"gitId":"typingpanda"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":153,"author":{"gitId":"typingpanda"},"content":"    private static void addTodoTask(String taskStatus, String taskDescription) {","lastModifiedDate":"2023-02-28"},{"lineNumber":154,"author":{"gitId":"typingpanda"},"content":"        Task todo \u003d new Tasks.Todo(taskDescription);","lastModifiedDate":"2023-02-14"},{"lineNumber":155,"author":{"gitId":"typingpanda"},"content":"        if (isTaskDone(taskStatus)) {","lastModifiedDate":"2023-02-27"},{"lineNumber":156,"author":{"gitId":"typingpanda"},"content":"            todo.markAsDone();","lastModifiedDate":"2023-02-14"},{"lineNumber":157,"author":{"gitId":"typingpanda"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":158,"author":{"gitId":"typingpanda"},"content":"        TaskManager.addTask(todo);","lastModifiedDate":"2023-02-27"},{"lineNumber":159,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":160,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":161,"author":{"gitId":"typingpanda"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":162,"author":{"gitId":"typingpanda"},"content":"     * Checks if the deadline task is done and adds it to the task list.","lastModifiedDate":"2023-02-28"},{"lineNumber":163,"author":{"gitId":"typingpanda"},"content":"     * ","lastModifiedDate":"2023-02-28"},{"lineNumber":164,"author":{"gitId":"typingpanda"},"content":"     * @param taskDetails the full details of the task","lastModifiedDate":"2023-02-28"},{"lineNumber":165,"author":{"gitId":"typingpanda"},"content":"     * @param taskStatus the status of the task","lastModifiedDate":"2023-02-28"},{"lineNumber":166,"author":{"gitId":"typingpanda"},"content":"     * @param taskDescription the description of the task","lastModifiedDate":"2023-02-28"},{"lineNumber":167,"author":{"gitId":"typingpanda"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":168,"author":{"gitId":"typingpanda"},"content":"    private static void addDeadlineTask(String[] taskDetails, String taskStatus, String taskDescription) {","lastModifiedDate":"2023-02-28"},{"lineNumber":169,"author":{"gitId":"typingpanda"},"content":"        String taskDeadline \u003d taskDetails[3].trim();","lastModifiedDate":"2023-02-14"},{"lineNumber":170,"author":{"gitId":"typingpanda"},"content":"        Task deadline \u003d new Tasks.Deadline(taskDescription, taskDeadline);","lastModifiedDate":"2023-02-14"},{"lineNumber":171,"author":{"gitId":"typingpanda"},"content":"        if (isTaskDone(taskStatus)) {","lastModifiedDate":"2023-02-27"},{"lineNumber":172,"author":{"gitId":"typingpanda"},"content":"            deadline.markAsDone();","lastModifiedDate":"2023-02-14"},{"lineNumber":173,"author":{"gitId":"typingpanda"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":174,"author":{"gitId":"typingpanda"},"content":"        TaskManager.addTask(deadline);","lastModifiedDate":"2023-02-27"},{"lineNumber":175,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":176,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":177,"author":{"gitId":"typingpanda"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":178,"author":{"gitId":"typingpanda"},"content":"     * Checks if the event task is done and adds it to the task list.","lastModifiedDate":"2023-02-28"},{"lineNumber":179,"author":{"gitId":"typingpanda"},"content":"     * ","lastModifiedDate":"2023-02-28"},{"lineNumber":180,"author":{"gitId":"typingpanda"},"content":"     * @param taskDetails the full details of the task","lastModifiedDate":"2023-02-28"},{"lineNumber":181,"author":{"gitId":"typingpanda"},"content":"     * @param taskStatus the status of the task","lastModifiedDate":"2023-02-28"},{"lineNumber":182,"author":{"gitId":"typingpanda"},"content":"     * @param taskDescription the description of the task","lastModifiedDate":"2023-02-28"},{"lineNumber":183,"author":{"gitId":"typingpanda"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":184,"author":{"gitId":"typingpanda"},"content":"    private static void addEventTask(String[] taskDetails, String taskStatus, String taskDescription) {","lastModifiedDate":"2023-02-28"},{"lineNumber":185,"author":{"gitId":"typingpanda"},"content":"        String[] taskDate \u003d taskDetails[3].split(\"-\");","lastModifiedDate":"2023-02-14"},{"lineNumber":186,"author":{"gitId":"typingpanda"},"content":"        String taskDateFrom \u003d taskDate[0].trim();","lastModifiedDate":"2023-02-14"},{"lineNumber":187,"author":{"gitId":"typingpanda"},"content":"        String taskDateTo \u003d taskDate[1].trim();","lastModifiedDate":"2023-02-14"},{"lineNumber":188,"author":{"gitId":"typingpanda"},"content":"        Task event \u003d new Tasks.Event(taskDescription, taskDateFrom, taskDateTo);","lastModifiedDate":"2023-02-14"},{"lineNumber":189,"author":{"gitId":"typingpanda"},"content":"        if (isTaskDone(taskStatus)) {","lastModifiedDate":"2023-02-27"},{"lineNumber":190,"author":{"gitId":"typingpanda"},"content":"            event.markAsDone();","lastModifiedDate":"2023-02-14"},{"lineNumber":191,"author":{"gitId":"typingpanda"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":192,"author":{"gitId":"typingpanda"},"content":"        TaskManager.addTask(event);","lastModifiedDate":"2023-02-27"},{"lineNumber":193,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":194,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":195,"author":{"gitId":"typingpanda"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":196,"author":{"gitId":"typingpanda"},"content":"     * Checks if the task is done.","lastModifiedDate":"2023-02-27"},{"lineNumber":197,"author":{"gitId":"typingpanda"},"content":"     * ","lastModifiedDate":"2023-02-27"},{"lineNumber":198,"author":{"gitId":"typingpanda"},"content":"     * @param taskStatus the status of the task","lastModifiedDate":"2023-02-28"},{"lineNumber":199,"author":{"gitId":"typingpanda"},"content":"     * @return true if the task is done, false otherwise","lastModifiedDate":"2023-02-27"},{"lineNumber":200,"author":{"gitId":"typingpanda"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":201,"author":{"gitId":"typingpanda"},"content":"    private static boolean isTaskDone(String taskStatus) {","lastModifiedDate":"2023-02-27"},{"lineNumber":202,"author":{"gitId":"typingpanda"},"content":"        return taskStatus.equals(\"1\");","lastModifiedDate":"2023-02-27"},{"lineNumber":203,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":204,"author":{"gitId":"typingpanda"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"typingpanda":204}},{"path":"src/main/java/Handlers/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"typingpanda"},"content":"package Handlers;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"typingpanda"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"typingpanda"},"content":"import Tasks.Task;","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"typingpanda"},"content":"import Tasks.Todo;","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"typingpanda"},"content":"import Tasks.Deadline;","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"typingpanda"},"content":"import Tasks.Event;","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"typingpanda"},"content":"public interface Ui {","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"typingpanda"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"typingpanda"},"content":"     * Takes in user inputs, extracts the command and calls the relevant methods in","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"typingpanda"},"content":"     * TaskManager","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"typingpanda"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"typingpanda"},"content":"    public static void takeUserInputs() {","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"typingpanda"},"content":"        boolean isComplete \u003d false;","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"typingpanda"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"typingpanda"},"content":"        Ui.printHello();","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"typingpanda"},"content":"        Ui.printLineBreak();","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"typingpanda"},"content":"        while (!isComplete) {","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"typingpanda"},"content":"            String line \u003d in.nextLine();","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"typingpanda"},"content":"            String firstWord \u003d Parser.getFirstWord(line);","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"typingpanda"},"content":"            switch (firstWord) {","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"typingpanda"},"content":"            case Parser.MARK_COMMAND:","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"typingpanda"},"content":"                TaskManager.markTask(Parser.getTaskNumber(line));","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"typingpanda"},"content":"                break;","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"typingpanda"},"content":"            case Parser.UNMARK_COMMAND:","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"typingpanda"},"content":"                TaskManager.unmarkTask(Parser.getTaskNumber(line));","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"typingpanda"},"content":"                break;","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"typingpanda"},"content":"            case Parser.DELETE_COMMAND:","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"typingpanda"},"content":"                int taskNumberDelete \u003d Parser.getTaskNumber(line);","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"typingpanda"},"content":"                TaskManager.deleteTask(taskNumberDelete);","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"typingpanda"},"content":"                break;","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"typingpanda"},"content":"            case Parser.LIST_COMMAND:","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"typingpanda"},"content":"                TaskManager.listTask();","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"typingpanda"},"content":"                break;","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"typingpanda"},"content":"            case Parser.TODO_COMMAND:","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"typingpanda"},"content":"                Parser.addTodoTask(line);","lastModifiedDate":"2023-02-27"},{"lineNumber":44,"author":{"gitId":"typingpanda"},"content":"                break;","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"typingpanda"},"content":"            case Parser.DEADLINE_COMMAND:","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"typingpanda"},"content":"                Parser.addDeadlineTask(line);","lastModifiedDate":"2023-02-27"},{"lineNumber":47,"author":{"gitId":"typingpanda"},"content":"                break;","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"typingpanda"},"content":"            case Parser.EVENT_COMMAND:","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"typingpanda"},"content":"                Parser.addEventTask(line);","lastModifiedDate":"2023-02-27"},{"lineNumber":50,"author":{"gitId":"typingpanda"},"content":"                break;","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"typingpanda"},"content":"            case Parser.FIND_COMMAND:","lastModifiedDate":"2023-02-28"},{"lineNumber":52,"author":{"gitId":"typingpanda"},"content":"                TaskManager.findTask(Parser.getTaskDescription(line));","lastModifiedDate":"2023-02-26"},{"lineNumber":53,"author":{"gitId":"typingpanda"},"content":"                break;","lastModifiedDate":"2023-02-26"},{"lineNumber":54,"author":{"gitId":"typingpanda"},"content":"            case Parser.BYE_COMMAND:","lastModifiedDate":"2023-02-28"},{"lineNumber":55,"author":{"gitId":"typingpanda"},"content":"                isComplete \u003d true;","lastModifiedDate":"2023-02-26"},{"lineNumber":56,"author":{"gitId":"typingpanda"},"content":"                break;","lastModifiedDate":"2023-02-26"},{"lineNumber":57,"author":{"gitId":"typingpanda"},"content":"            default:","lastModifiedDate":"2023-02-26"},{"lineNumber":58,"author":{"gitId":"typingpanda"},"content":"                System.out.println(\"Unrecognized command. Please try again.\");","lastModifiedDate":"2023-02-26"},{"lineNumber":59,"author":{"gitId":"typingpanda"},"content":"                break;","lastModifiedDate":"2023-02-26"},{"lineNumber":60,"author":{"gitId":"typingpanda"},"content":"            }","lastModifiedDate":"2023-02-26"},{"lineNumber":61,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":62,"author":{"gitId":"typingpanda"},"content":"            Ui.printLineBreak();","lastModifiedDate":"2023-02-26"},{"lineNumber":63,"author":{"gitId":"typingpanda"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":64,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":65,"author":{"gitId":"typingpanda"},"content":"        Ui.printBye();","lastModifiedDate":"2023-02-28"},{"lineNumber":66,"author":{"gitId":"typingpanda"},"content":"        in.close();","lastModifiedDate":"2023-02-26"},{"lineNumber":67,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":68,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":69,"author":{"gitId":"typingpanda"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":70,"author":{"gitId":"typingpanda"},"content":"     * Prints the welcome message","lastModifiedDate":"2023-02-26"},{"lineNumber":71,"author":{"gitId":"typingpanda"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":72,"author":{"gitId":"typingpanda"},"content":"    private static void printHello() {","lastModifiedDate":"2023-02-26"},{"lineNumber":73,"author":{"gitId":"typingpanda"},"content":"        System.out.println(\"________         __         __________\");","lastModifiedDate":"2023-02-26"},{"lineNumber":74,"author":{"gitId":"typingpanda"},"content":"        System.out.println(\"\\\\______ \\\\  __ __|  | __ ____\\\\______   \\\\__ __  ____   ____   ___________ \");","lastModifiedDate":"2023-02-26"},{"lineNumber":75,"author":{"gitId":"typingpanda"},"content":"        System.out.println(\" |    |  \\\\|  |  \\\\  |/ // __ \\\\|       _/  |  \\\\/    \\\\ /    \\\\_/ __ \\\\_  __ \\\\ \");","lastModifiedDate":"2023-02-26"},{"lineNumber":76,"author":{"gitId":"typingpanda"},"content":"        System.out.println(\" |    `   \\\\  |  /    \u003c\\\\  ___/|    |   \\\\  |  /   |  \\\\   |  \\\\  ___/|  | \\\\/ \");","lastModifiedDate":"2023-02-26"},{"lineNumber":77,"author":{"gitId":"typingpanda"},"content":"        System.out.println(\"/_______  /____/|__|_ \\\\\\\\___  \u003e____|_  /____/|___|  /___|  /\\\\___  \u003e__| \");","lastModifiedDate":"2023-02-26"},{"lineNumber":78,"author":{"gitId":"typingpanda"},"content":"        System.out.println(\"        \\\\/           \\\\/    \\\\/       \\\\/           \\\\/     \\\\/     \\\\/ \");","lastModifiedDate":"2023-02-26"},{"lineNumber":79,"author":{"gitId":"typingpanda"},"content":"        System.out.println(\"Hello! I\u0027m DukeRunner\\nWhat can I do for you?\\n\");","lastModifiedDate":"2023-02-26"},{"lineNumber":80,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":81,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":82,"author":{"gitId":"typingpanda"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":83,"author":{"gitId":"typingpanda"},"content":"     * Prints the goodbye message","lastModifiedDate":"2023-02-26"},{"lineNumber":84,"author":{"gitId":"typingpanda"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":85,"author":{"gitId":"typingpanda"},"content":"    private static void printBye() {","lastModifiedDate":"2023-02-26"},{"lineNumber":86,"author":{"gitId":"typingpanda"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-02-26"},{"lineNumber":87,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":88,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":89,"author":{"gitId":"typingpanda"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":90,"author":{"gitId":"typingpanda"},"content":"     * Prints a line break","lastModifiedDate":"2023-02-26"},{"lineNumber":91,"author":{"gitId":"typingpanda"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":92,"author":{"gitId":"typingpanda"},"content":"    private static void printLineBreak() {","lastModifiedDate":"2023-02-26"},{"lineNumber":93,"author":{"gitId":"typingpanda"},"content":"        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\");","lastModifiedDate":"2023-02-26"},{"lineNumber":94,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":95,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":96,"author":{"gitId":"typingpanda"},"content":"    public static void addedTodoMessage(Todo todoTask) {","lastModifiedDate":"2023-02-27"},{"lineNumber":97,"author":{"gitId":"typingpanda"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\\n\" + todoTask.describeTask());","lastModifiedDate":"2023-02-27"},{"lineNumber":98,"author":{"gitId":"typingpanda"},"content":"        System.out.println(\"\\nNow you have \" + TaskManager.getTaskCount() + \" tasks in the list.\\n\");","lastModifiedDate":"2023-02-27"},{"lineNumber":99,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":100,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":101,"author":{"gitId":"typingpanda"},"content":"    public static void addedDeadlineMessage(Deadline deadlineTask) {","lastModifiedDate":"2023-02-27"},{"lineNumber":102,"author":{"gitId":"typingpanda"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\\n\" + deadlineTask.describeTask());","lastModifiedDate":"2023-02-27"},{"lineNumber":103,"author":{"gitId":"typingpanda"},"content":"        System.out.println(\"\\nNow you have \" + TaskManager.getTaskCount() + \" tasks in the list.\\n\");","lastModifiedDate":"2023-02-27"},{"lineNumber":104,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":105,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":106,"author":{"gitId":"typingpanda"},"content":"    public static void addedEventMessage(Event eventTask) {","lastModifiedDate":"2023-02-27"},{"lineNumber":107,"author":{"gitId":"typingpanda"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\\n\" + eventTask.describeTask());","lastModifiedDate":"2023-02-27"},{"lineNumber":108,"author":{"gitId":"typingpanda"},"content":"        System.out.println(\"\\nNow you have \" + TaskManager.getTaskCount() + \" tasks in the list.\\n\");","lastModifiedDate":"2023-02-27"},{"lineNumber":109,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":110,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":111,"author":{"gitId":"typingpanda"},"content":"    public static void deletedTaskMessage(int index) {","lastModifiedDate":"2023-02-27"},{"lineNumber":112,"author":{"gitId":"typingpanda"},"content":"        System.out.println(","lastModifiedDate":"2023-02-27"},{"lineNumber":113,"author":{"gitId":"typingpanda"},"content":"                \"Noted. I\u0027ve removed this task:\\n\" + TaskManager.getTaskList().get(index - 1).describeTask() + \"\\n\");","lastModifiedDate":"2023-02-27"},{"lineNumber":114,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":115,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":116,"author":{"gitId":"typingpanda"},"content":"    public static void taskCountMessage() {","lastModifiedDate":"2023-02-27"},{"lineNumber":117,"author":{"gitId":"typingpanda"},"content":"        System.out.println(\"\\nYou have \" + TaskManager.getTaskCount() + \" tasks in the list.\\n\");","lastModifiedDate":"2023-02-27"},{"lineNumber":118,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":119,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":120,"author":{"gitId":"typingpanda"},"content":"    public static void markTaskMessage(Task task) {","lastModifiedDate":"2023-02-27"},{"lineNumber":121,"author":{"gitId":"typingpanda"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\" + task.describeTask() + \"\\n\");","lastModifiedDate":"2023-02-27"},{"lineNumber":122,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":123,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":124,"author":{"gitId":"typingpanda"},"content":"    public static void unmarkTaskMessage(Task task) {","lastModifiedDate":"2023-02-27"},{"lineNumber":125,"author":{"gitId":"typingpanda"},"content":"        System.out.println(\"OK, Ive marked this task as not done yet:\\n\" + task.describeTask() + \"\\n\");","lastModifiedDate":"2023-02-27"},{"lineNumber":126,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":127,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":128,"author":{"gitId":"typingpanda"},"content":"    public static void describeTaskMessage(int existingTaskCount, Task item) {","lastModifiedDate":"2023-02-27"},{"lineNumber":129,"author":{"gitId":"typingpanda"},"content":"        System.out.println(existingTaskCount + \". \" + item.describeTask());","lastModifiedDate":"2023-02-27"},{"lineNumber":130,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":131,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":132,"author":{"gitId":"typingpanda"},"content":"    public static void fileErrorMessage() {","lastModifiedDate":"2023-02-27"},{"lineNumber":133,"author":{"gitId":"typingpanda"},"content":"        System.out.println(\"Error reading file\");","lastModifiedDate":"2023-02-27"},{"lineNumber":134,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":135,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":136,"author":{"gitId":"typingpanda"},"content":"    public static void taskNumberOutofBoundsMessage() {","lastModifiedDate":"2023-02-27"},{"lineNumber":137,"author":{"gitId":"typingpanda"},"content":"        System.out.println(\"task number does not exist.\");","lastModifiedDate":"2023-02-27"},{"lineNumber":138,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":139,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":140,"author":{"gitId":"typingpanda"},"content":"    public static void taskNumberInvalidTypeMessage() {","lastModifiedDate":"2023-02-27"},{"lineNumber":141,"author":{"gitId":"typingpanda"},"content":"        System.out.println(\"task number must be a number.\");","lastModifiedDate":"2023-02-27"},{"lineNumber":142,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":143,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":144,"author":{"gitId":"typingpanda"},"content":"    public static void taskNumberMissingMessage() {","lastModifiedDate":"2023-02-27"},{"lineNumber":145,"author":{"gitId":"typingpanda"},"content":"        System.out.println(\"task number must be stated.\");","lastModifiedDate":"2023-02-27"},{"lineNumber":146,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":147,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":148,"author":{"gitId":"typingpanda"},"content":"    public static void taskDescriptionEmptyMessage() {","lastModifiedDate":"2023-02-27"},{"lineNumber":149,"author":{"gitId":"typingpanda"},"content":"        System.out.println(\"task description for find function cannot be empty.\");","lastModifiedDate":"2023-02-27"},{"lineNumber":150,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":151,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":152,"author":{"gitId":"typingpanda"},"content":"    public static void todoDescriptionMissingMessage() {","lastModifiedDate":"2023-02-27"},{"lineNumber":153,"author":{"gitId":"typingpanda"},"content":"        System.out.println(\"description for todo cannot be empty.\");","lastModifiedDate":"2023-02-27"},{"lineNumber":154,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":155,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":156,"author":{"gitId":"typingpanda"},"content":"    public static void deadlineDescriptionMissingMessage() {","lastModifiedDate":"2023-02-27"},{"lineNumber":157,"author":{"gitId":"typingpanda"},"content":"        System.out.println(\"description for deadline cannot be empty.\");","lastModifiedDate":"2023-02-27"},{"lineNumber":158,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":159,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":160,"author":{"gitId":"typingpanda"},"content":"    public static void eventDescriptionMissingMessage() {","lastModifiedDate":"2023-02-27"},{"lineNumber":161,"author":{"gitId":"typingpanda"},"content":"        System.out.println(\"description for event cannot be empty.\");","lastModifiedDate":"2023-02-27"},{"lineNumber":162,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":163,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":164,"author":{"gitId":"typingpanda"},"content":"    public static void emptyTaskListMessage() {","lastModifiedDate":"2023-02-27"},{"lineNumber":165,"author":{"gitId":"typingpanda"},"content":"        System.out.println(\"You have no tasks in your list yet!\");","lastModifiedDate":"2023-02-27"},{"lineNumber":166,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":167,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":168,"author":{"gitId":"typingpanda"},"content":"    public static void createFileErrorMessage() {","lastModifiedDate":"2023-02-28"},{"lineNumber":169,"author":{"gitId":"typingpanda"},"content":"        System.out.println(\"Error creating file\");","lastModifiedDate":"2023-02-28"},{"lineNumber":170,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":171,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":172,"author":{"gitId":"typingpanda"},"content":"    public static void fileNotFoundMessage() {","lastModifiedDate":"2023-02-28"},{"lineNumber":173,"author":{"gitId":"typingpanda"},"content":"        System.out.println(\"File not found\");","lastModifiedDate":"2023-02-28"},{"lineNumber":174,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":175,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":176,"author":{"gitId":"typingpanda"},"content":"    public static void writeToFileErrorMessage() {","lastModifiedDate":"2023-02-28"},{"lineNumber":177,"author":{"gitId":"typingpanda"},"content":"        System.out.println(\"Error writing to file\");","lastModifiedDate":"2023-02-28"},{"lineNumber":178,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":179,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":180,"author":{"gitId":"typingpanda"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"typingpanda":180}},{"path":"src/main/java/Tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"typingpanda"},"content":"package Tasks;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"typingpanda"},"content":"import Handlers.Parser;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"typingpanda"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"typingpanda"},"content":"    protected String dueDate;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"typingpanda"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"typingpanda"},"content":"     * Constucts deadline object","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"typingpanda"},"content":"     * ","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"typingpanda"},"content":"     * @param description Description of the task","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"typingpanda"},"content":"     * @param by Due date of the task","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"typingpanda"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"typingpanda"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"typingpanda"},"content":"        super(description);","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"typingpanda"},"content":"        this.dueDate \u003d by;","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"typingpanda"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"typingpanda"},"content":"     * Returns the description of the task for user to read","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"typingpanda"},"content":"     * ","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"typingpanda"},"content":"     * @return String the description of the task","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"typingpanda"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"typingpanda"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"typingpanda"},"content":"    public String describeTask() {","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"typingpanda"},"content":"        return \"[\" + Parser.DEADLINE_TASK_TYPE + \"]\" + super.describeTask() + \" (by: \" + dueDate + \")\";","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":30,"author":{"gitId":"typingpanda"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"typingpanda"},"content":"     * Returns the description of the task in a format that is","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"typingpanda"},"content":"     * suitable for writing to file.","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"typingpanda"},"content":"     * ","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"typingpanda"},"content":"     * @return String the description of the task ","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"typingpanda"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"typingpanda"},"content":"    @Override","lastModifiedDate":"2023-02-14"},{"lineNumber":37,"author":{"gitId":"typingpanda"},"content":"    public String describeTaskForFile() {","lastModifiedDate":"2023-02-14"},{"lineNumber":38,"author":{"gitId":"typingpanda"},"content":"        return Parser.DEADLINE_TASK_TYPE + \" | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + dueDate;","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":40,"author":{"gitId":"typingpanda"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"typingpanda":40}},{"path":"src/main/java/Tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"typingpanda"},"content":"package Tasks;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"typingpanda"},"content":"import Handlers.Parser;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"typingpanda"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"typingpanda"},"content":"    protected String eventFrom;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"typingpanda"},"content":"    protected String eventTo;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"typingpanda"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"typingpanda"},"content":"     * Constructs event object.","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"typingpanda"},"content":"     * ","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"typingpanda"},"content":"     * @param description Description of the task","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"typingpanda"},"content":"     * @param from Start time of the event","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"typingpanda"},"content":"     * @param to End time of the event","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"typingpanda"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"typingpanda"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"typingpanda"},"content":"        super(description);","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"typingpanda"},"content":"        this.eventFrom \u003d from;","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"typingpanda"},"content":"        this.eventTo \u003d to;","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"typingpanda"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"typingpanda"},"content":"     * Returns the description of the task for user to read","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"typingpanda"},"content":"     * ","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"typingpanda"},"content":"     * @return String the description of the task","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"typingpanda"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"typingpanda"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"typingpanda"},"content":"    public String describeTask() {","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"typingpanda"},"content":"        return \"[\" + Parser.EVENT_TASK_TYPE + \"]\" + super.describeTask() + \" (from: \" + eventFrom + \" to: \" + eventTo + \")\";","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":33,"author":{"gitId":"typingpanda"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"typingpanda"},"content":"     * Returns the description of the task in a format that is","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"typingpanda"},"content":"     * suitable for writing to file.","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"typingpanda"},"content":"     * ","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"typingpanda"},"content":"     * @return String the description of the task ","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"typingpanda"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"typingpanda"},"content":"    @Override","lastModifiedDate":"2023-02-14"},{"lineNumber":40,"author":{"gitId":"typingpanda"},"content":"    public String describeTaskForFile() {","lastModifiedDate":"2023-02-14"},{"lineNumber":41,"author":{"gitId":"typingpanda"},"content":"        return Parser.EVENT_TASK_TYPE + \" | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + eventFrom + \"-\" + eventTo;","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":43,"author":{"gitId":"typingpanda"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"typingpanda":43}},{"path":"src/main/java/Tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"typingpanda"},"content":"package Tasks;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"typingpanda"},"content":"public abstract class Task {","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"typingpanda"},"content":"    protected String description;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"typingpanda"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"typingpanda"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"typingpanda"},"content":"     * Constructs Task object.","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"typingpanda"},"content":"     * ","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"typingpanda"},"content":"     * @param description Description of the task","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"typingpanda"},"content":"     * @param isDone      Status of the task","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"typingpanda"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"typingpanda"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"typingpanda"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"typingpanda"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"typingpanda"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"typingpanda"},"content":"     * Gets the status icon of the task from reading from file to","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"typingpanda"},"content":"     * determine if the task is done or not.","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"typingpanda"},"content":"     * ","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"typingpanda"},"content":"     * @return String the status icon of the task","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"typingpanda"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"typingpanda"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"typingpanda"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"typingpanda"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"typingpanda"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"typingpanda"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"typingpanda"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"typingpanda"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"typingpanda"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"typingpanda"},"content":"     * Marks the task as not done.","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"typingpanda"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"typingpanda"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"typingpanda"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"typingpanda"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"typingpanda"},"content":"     * Gets the description of the task for user to read.","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"typingpanda"},"content":"     * ","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"typingpanda"},"content":"     * @return String the description of the task","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"typingpanda"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"typingpanda"},"content":"    public String describeTask() {","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"typingpanda"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":52,"author":{"gitId":"typingpanda"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":53,"author":{"gitId":"typingpanda"},"content":"     * Returns the description of the task in a format that is","lastModifiedDate":"2023-02-26"},{"lineNumber":54,"author":{"gitId":"typingpanda"},"content":"     * suitable for writing to file.","lastModifiedDate":"2023-02-26"},{"lineNumber":55,"author":{"gitId":"typingpanda"},"content":"     * ","lastModifiedDate":"2023-02-26"},{"lineNumber":56,"author":{"gitId":"typingpanda"},"content":"     * @return String the description of the task in a format that is","lastModifiedDate":"2023-02-26"},{"lineNumber":57,"author":{"gitId":"typingpanda"},"content":"     *         suitable for writing to file","lastModifiedDate":"2023-02-26"},{"lineNumber":58,"author":{"gitId":"typingpanda"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":59,"author":{"gitId":"typingpanda"},"content":"    public String describeTaskForFile() {","lastModifiedDate":"2023-02-14"},{"lineNumber":60,"author":{"gitId":"typingpanda"},"content":"        return \"\";","lastModifiedDate":"2023-02-14"},{"lineNumber":61,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":62,"author":{"gitId":"typingpanda"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"typingpanda":62}},{"path":"src/main/java/Tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"typingpanda"},"content":"package Tasks;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"typingpanda"},"content":"import Handlers.Parser;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"typingpanda"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"typingpanda"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"typingpanda"},"content":"     * Constructs todo object.","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"typingpanda"},"content":"     * ","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"typingpanda"},"content":"     * @param description Description of the task","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"typingpanda"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"typingpanda"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"typingpanda"},"content":"        super(description);","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"typingpanda"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"typingpanda"},"content":"     * Returns the description of the task for user to read","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"typingpanda"},"content":"     * ","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"typingpanda"},"content":"     * @return String the description of the task","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"typingpanda"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"typingpanda"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"typingpanda"},"content":"    public String describeTask() {","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"typingpanda"},"content":"        return \"[\"+ Parser.TODO_TASK_TYPE +\"]\" + super.describeTask();","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"typingpanda"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"typingpanda"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"typingpanda"},"content":"     * Returns the description of the task in a format that is","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"typingpanda"},"content":"     * suitable for writing to file.","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"typingpanda"},"content":"     * ","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"typingpanda"},"content":"     * @return String the description of the task ","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"typingpanda"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"typingpanda"},"content":"    @Override","lastModifiedDate":"2023-02-14"},{"lineNumber":33,"author":{"gitId":"typingpanda"},"content":"    public String describeTaskForFile() {","lastModifiedDate":"2023-02-14"},{"lineNumber":34,"author":{"gitId":"typingpanda"},"content":"        return Parser.TODO_TASK_TYPE + \" | \" + (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"typingpanda"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":36,"author":{"gitId":"typingpanda"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"typingpanda":36}}]
