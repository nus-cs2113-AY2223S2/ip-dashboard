[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ArtemiszenN"},"content":"# Araxys Task Manager - User Guide","lastModifiedDate":"2023-02-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"ArtemiszenN"},"content":"Araxys is a task manager that allows you to get your life together at just a fraction of your lifespan. The steal of a lifetime, wouldn\u0027t you say?","lastModifiedDate":"2023-02-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"ArtemiszenN"},"content":"Table of contents:","lastModifiedDate":"2023-02-22"},{"lineNumber":6,"author":{"gitId":"ArtemiszenN"},"content":"1. [Quick Start](#quick_start)","lastModifiedDate":"2023-02-22"},{"lineNumber":7,"author":{"gitId":"ArtemiszenN"},"content":"2. [Features](#features) ","lastModifiedDate":"2023-02-22"},{"lineNumber":8,"author":{"gitId":"ArtemiszenN"},"content":"    1. [Command Format](#command_format)","lastModifiedDate":"2023-02-22"},{"lineNumber":9,"author":{"gitId":"ArtemiszenN"},"content":"    2. [Project Commands](#project_commands)","lastModifiedDate":"2023-02-22"},{"lineNumber":10,"author":{"gitId":"ArtemiszenN"},"content":"        1. [Todo](#todo)","lastModifiedDate":"2023-02-22"},{"lineNumber":11,"author":{"gitId":"ArtemiszenN"},"content":"        2. [Deadline](#deadline)","lastModifiedDate":"2023-02-22"},{"lineNumber":12,"author":{"gitId":"ArtemiszenN"},"content":"        3. [Event](#event)","lastModifiedDate":"2023-02-22"},{"lineNumber":13,"author":{"gitId":"ArtemiszenN"},"content":"        4. [Help](#help)","lastModifiedDate":"2023-02-22"},{"lineNumber":14,"author":{"gitId":"ArtemiszenN"},"content":"        5. [List](#list)","lastModifiedDate":"2023-02-22"},{"lineNumber":15,"author":{"gitId":"ArtemiszenN"},"content":"        6. [Mark](#mark)","lastModifiedDate":"2023-02-22"},{"lineNumber":16,"author":{"gitId":"ArtemiszenN"},"content":"        7. [Unmark](#unmark)","lastModifiedDate":"2023-02-22"},{"lineNumber":17,"author":{"gitId":"ArtemiszenN"},"content":"        8. [Find](#find)","lastModifiedDate":"2023-02-22"},{"lineNumber":18,"author":{"gitId":"ArtemiszenN"},"content":"        9. [Exit](#bye)","lastModifiedDate":"2023-02-22"},{"lineNumber":19,"author":{"gitId":"ArtemiszenN"},"content":"3. [FAQ](#faq)","lastModifiedDate":"2023-02-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":21,"author":{"gitId":"ArtemiszenN"},"content":"## 1. Quick Start \u003ca name \u003d \"quick_start\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":22,"author":{"gitId":"ArtemiszenN"},"content":"```","lastModifiedDate":"2023-02-22"},{"lineNumber":23,"author":{"gitId":"ArtemiszenN"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-22"},{"lineNumber":24,"author":{"gitId":"ArtemiszenN"},"content":"    // | |     //   ) )  // | |  \\\\ / / \\\\    / / //   ) )","lastModifiedDate":"2023-02-22"},{"lineNumber":25,"author":{"gitId":"ArtemiszenN"},"content":"   //__| |    //___/ /  //__| |   \\  /   \\\\  / / ((","lastModifiedDate":"2023-02-22"},{"lineNumber":26,"author":{"gitId":"ArtemiszenN"},"content":"  / ___  |   / ___ (   / ___  |   / /     \\\\/ /    \\\\","lastModifiedDate":"2023-02-22"},{"lineNumber":27,"author":{"gitId":"ArtemiszenN"},"content":" //    | |  //   | |  //    | |  / /\\\\     / /       ) )","lastModifiedDate":"2023-02-22"},{"lineNumber":28,"author":{"gitId":"ArtemiszenN"},"content":"//     | | //    | | //     | | / /  \\\\   / / ((___ / /","lastModifiedDate":"2023-02-22"},{"lineNumber":29,"author":{"gitId":"ArtemiszenN"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-22"},{"lineNumber":30,"author":{"gitId":"ArtemiszenN"},"content":"Welcome to Araxys Systems, the only system powered by LifeForceâ„¢","lastModifiedDate":"2023-02-22"},{"lineNumber":31,"author":{"gitId":"ArtemiszenN"},"content":"How may I help you today?","lastModifiedDate":"2023-02-22"},{"lineNumber":32,"author":{"gitId":"ArtemiszenN"},"content":"Type \"help\" to get help.","lastModifiedDate":"2023-02-22"},{"lineNumber":33,"author":{"gitId":"ArtemiszenN"},"content":"```","lastModifiedDate":"2023-02-22"},{"lineNumber":34,"author":{"gitId":"ArtemiszenN"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":35,"author":{"gitId":"ArtemiszenN"},"content":"1. Make sure Java 11 is set up on your machine. Type java -version into your favourite terminal to see what version of Java is currently installed there (such as Command Prompt, Git Bash, or MacOS terminal) ","lastModifiedDate":"2023-02-22"},{"lineNumber":36,"author":{"gitId":"ArtemiszenN"},"content":"2. Download the latest .jar file from here: [```Releases```](https://github.com/ArtemiszenN/ip/releases)","lastModifiedDate":"2023-02-22"},{"lineNumber":37,"author":{"gitId":"ArtemiszenN"},"content":"3. Copy the .jar file to the desired location.","lastModifiedDate":"2023-02-22"},{"lineNumber":38,"author":{"gitId":"ArtemiszenN"},"content":"4. Run the java file using the command ```java -jar Araxys.jar```. You should see the welcome message shown above.","lastModifiedDate":"2023-02-22"},{"lineNumber":39,"author":{"gitId":"ArtemiszenN"},"content":"5. Enter your commands in the terminal and press Enter to execute them.","lastModifiedDate":"2023-02-22"},{"lineNumber":40,"author":{"gitId":"ArtemiszenN"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":41,"author":{"gitId":"ArtemiszenN"},"content":"## 2. Features \u003ca name \u003d \"features\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":42,"author":{"gitId":"ArtemiszenN"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":43,"author":{"gitId":"ArtemiszenN"},"content":"### 2.1 Command Format \u003ca name \u003d \"command_format\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":44,"author":{"gitId":"ArtemiszenN"},"content":"   * Parameters are defined in curly brackets and need to be defined by the user.","lastModifiedDate":"2023-02-22"},{"lineNumber":45,"author":{"gitId":"ArtemiszenN"},"content":"      * E.g. ```todo {description}``` where {description} is a parameter which can be defined, such as ```todo Read Remembrance of Earth\u0027s Past```","lastModifiedDate":"2023-02-22"},{"lineNumber":46,"author":{"gitId":"ArtemiszenN"},"content":"   * Date/time parameters are defined in square brackets and are automatically reformatted if in a valid format.","lastModifiedDate":"2023-02-22"},{"lineNumber":47,"author":{"gitId":"ArtemiszenN"},"content":"      * E.g. ```deadline {description} /by [end date/time]``` can be used as ```deadline Do Assignment 3 /by 2023-02-25 23:59``` and will appear as ```Do Assignment 3 (by: 11:59 PM, SATURDAY, FEBRUARY 25, 2023)```","lastModifiedDate":"2023-02-22"},{"lineNumber":48,"author":{"gitId":"ArtemiszenN"},"content":"     ","lastModifiedDate":"2023-02-22"},{"lineNumber":49,"author":{"gitId":"ArtemiszenN"},"content":"### 2.2 Project Commands \u003ca name \u003d \"project_commands\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":50,"author":{"gitId":"ArtemiszenN"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":51,"author":{"gitId":"ArtemiszenN"},"content":"#### 2.2.1 Add a todo task: ```todo``` \u003ca name \u003d \"todo\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":52,"author":{"gitId":"ArtemiszenN"},"content":"This command will create a new todo task with a given description, and then automatically save the task","lastModifiedDate":"2023-02-22"},{"lineNumber":53,"author":{"gitId":"ArtemiszenN"},"content":"* Format: ```todo {description}```","lastModifiedDate":"2023-02-22"},{"lineNumber":54,"author":{"gitId":"ArtemiszenN"},"content":"* Example:","lastModifiedDate":"2023-02-22"},{"lineNumber":55,"author":{"gitId":"ArtemiszenN"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":56,"author":{"gitId":"ArtemiszenN"},"content":"Input:","lastModifiedDate":"2023-02-22"},{"lineNumber":57,"author":{"gitId":"ArtemiszenN"},"content":"```","lastModifiedDate":"2023-02-22"},{"lineNumber":58,"author":{"gitId":"ArtemiszenN"},"content":"todo Watch Black Adam","lastModifiedDate":"2023-02-22"},{"lineNumber":59,"author":{"gitId":"ArtemiszenN"},"content":"```","lastModifiedDate":"2023-02-22"},{"lineNumber":60,"author":{"gitId":"ArtemiszenN"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":61,"author":{"gitId":"ArtemiszenN"},"content":"Output:","lastModifiedDate":"2023-02-22"},{"lineNumber":62,"author":{"gitId":"ArtemiszenN"},"content":"```","lastModifiedDate":"2023-02-22"},{"lineNumber":63,"author":{"gitId":"ArtemiszenN"},"content":"Command acknowledged. Reducing user lifespan by 30 minutes.","lastModifiedDate":"2023-02-22"},{"lineNumber":64,"author":{"gitId":"ArtemiszenN"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-22"},{"lineNumber":65,"author":{"gitId":"ArtemiszenN"},"content":"New task has been added: [T][ ]//////Watch Black Adam","lastModifiedDate":"2023-02-22"},{"lineNumber":66,"author":{"gitId":"ArtemiszenN"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-22"},{"lineNumber":67,"author":{"gitId":"ArtemiszenN"},"content":"```","lastModifiedDate":"2023-02-22"},{"lineNumber":68,"author":{"gitId":"ArtemiszenN"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":69,"author":{"gitId":"ArtemiszenN"},"content":"#### 2.2.2 Add a deadline task: ```deadline``` \u003ca name \u003d \"deadline\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":70,"author":{"gitId":"ArtemiszenN"},"content":"This command will create a new deadline task with a given description and end date/time, and then automatically save the task","lastModifiedDate":"2023-02-22"},{"lineNumber":71,"author":{"gitId":"ArtemiszenN"},"content":"* Format: ```todo {description} /by [end date/time]```","lastModifiedDate":"2023-02-22"},{"lineNumber":72,"author":{"gitId":"ArtemiszenN"},"content":"* Examples:","lastModifiedDate":"2023-02-22"},{"lineNumber":73,"author":{"gitId":"ArtemiszenN"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":74,"author":{"gitId":"ArtemiszenN"},"content":"Input:","lastModifiedDate":"2023-02-22"},{"lineNumber":75,"author":{"gitId":"ArtemiszenN"},"content":"```","lastModifiedDate":"2023-02-22"},{"lineNumber":76,"author":{"gitId":"ArtemiszenN"},"content":"deadline Do Assignment 3 /by 2023-02-25 23:59","lastModifiedDate":"2023-02-22"},{"lineNumber":77,"author":{"gitId":"ArtemiszenN"},"content":"```","lastModifiedDate":"2023-02-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":79,"author":{"gitId":"ArtemiszenN"},"content":"Output:","lastModifiedDate":"2023-02-22"},{"lineNumber":80,"author":{"gitId":"ArtemiszenN"},"content":"```","lastModifiedDate":"2023-02-22"},{"lineNumber":81,"author":{"gitId":"ArtemiszenN"},"content":"Command acknowledged. Reducing user lifespan by 30 minutes.","lastModifiedDate":"2023-02-22"},{"lineNumber":82,"author":{"gitId":"ArtemiszenN"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-22"},{"lineNumber":83,"author":{"gitId":"ArtemiszenN"},"content":"New task has been added: [D][ ]//////Do Assignment 3 (by: 11:59 PM, SATURDAY, FEBRUARY 25, 2023)","lastModifiedDate":"2023-02-22"},{"lineNumber":84,"author":{"gitId":"ArtemiszenN"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-22"},{"lineNumber":85,"author":{"gitId":"ArtemiszenN"},"content":"```","lastModifiedDate":"2023-02-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":87,"author":{"gitId":"ArtemiszenN"},"content":"Input:","lastModifiedDate":"2023-02-22"},{"lineNumber":88,"author":{"gitId":"ArtemiszenN"},"content":"```","lastModifiedDate":"2023-02-22"},{"lineNumber":89,"author":{"gitId":"ArtemiszenN"},"content":"deadline Sleep /by 10pm","lastModifiedDate":"2023-02-22"},{"lineNumber":90,"author":{"gitId":"ArtemiszenN"},"content":"```","lastModifiedDate":"2023-02-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":92,"author":{"gitId":"ArtemiszenN"},"content":"Output:","lastModifiedDate":"2023-02-22"},{"lineNumber":93,"author":{"gitId":"ArtemiszenN"},"content":"```","lastModifiedDate":"2023-02-22"},{"lineNumber":94,"author":{"gitId":"ArtemiszenN"},"content":"Command acknowledged. Reducing user lifespan by 30 minutes.","lastModifiedDate":"2023-02-22"},{"lineNumber":95,"author":{"gitId":"ArtemiszenN"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-22"},{"lineNumber":96,"author":{"gitId":"ArtemiszenN"},"content":"New task has been added: [D][ ]//////Sleep (by: 10pm)","lastModifiedDate":"2023-02-22"},{"lineNumber":97,"author":{"gitId":"ArtemiszenN"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-22"},{"lineNumber":98,"author":{"gitId":"ArtemiszenN"},"content":"```","lastModifiedDate":"2023-02-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":100,"author":{"gitId":"ArtemiszenN"},"content":"#### 2.2.3 Add an event task: ```event``` \u003ca name \u003d \"event\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":101,"author":{"gitId":"ArtemiszenN"},"content":"This command will create a new deadline task with a given description, start date/time and end date/time, and then automatically save the task","lastModifiedDate":"2023-02-22"},{"lineNumber":102,"author":{"gitId":"ArtemiszenN"},"content":"* Format: ```event {description} /from [start date/time] /to [end date/time]```","lastModifiedDate":"2023-02-22"},{"lineNumber":103,"author":{"gitId":"ArtemiszenN"},"content":"* Example:","lastModifiedDate":"2023-02-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":105,"author":{"gitId":"ArtemiszenN"},"content":"Input:","lastModifiedDate":"2023-02-22"},{"lineNumber":106,"author":{"gitId":"ArtemiszenN"},"content":"```","lastModifiedDate":"2023-02-22"},{"lineNumber":107,"author":{"gitId":"ArtemiszenN"},"content":"event Cosfest 2023 /from 2023-04-08 12:00 /to 18:00","lastModifiedDate":"2023-02-22"},{"lineNumber":108,"author":{"gitId":"ArtemiszenN"},"content":"```","lastModifiedDate":"2023-02-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":110,"author":{"gitId":"ArtemiszenN"},"content":"Output:","lastModifiedDate":"2023-02-22"},{"lineNumber":111,"author":{"gitId":"ArtemiszenN"},"content":"```","lastModifiedDate":"2023-02-22"},{"lineNumber":112,"author":{"gitId":"ArtemiszenN"},"content":"Command acknowledged. Reducing user lifespan by 30 minutes.","lastModifiedDate":"2023-02-22"},{"lineNumber":113,"author":{"gitId":"ArtemiszenN"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-22"},{"lineNumber":114,"author":{"gitId":"ArtemiszenN"},"content":"New task has been added: [E][ ]//////Cosfest 2023 (from: 12:00 PM, SATURDAY, APRIL 8, 2023 to: 6:00 PM)","lastModifiedDate":"2023-02-22"},{"lineNumber":115,"author":{"gitId":"ArtemiszenN"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-22"},{"lineNumber":116,"author":{"gitId":"ArtemiszenN"},"content":"```","lastModifiedDate":"2023-02-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":118,"author":{"gitId":"ArtemiszenN"},"content":"#### 2.2.4 View the help menu: ```help``` \u003ca name \u003d \"help\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":119,"author":{"gitId":"ArtemiszenN"},"content":"This command will show the list of commands and their syntaxes","lastModifiedDate":"2023-02-22"},{"lineNumber":120,"author":{"gitId":"ArtemiszenN"},"content":"* Format: ```help```","lastModifiedDate":"2023-02-22"},{"lineNumber":121,"author":{"gitId":"ArtemiszenN"},"content":"* Example:","lastModifiedDate":"2023-02-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":123,"author":{"gitId":"ArtemiszenN"},"content":"Input:","lastModifiedDate":"2023-02-22"},{"lineNumber":124,"author":{"gitId":"ArtemiszenN"},"content":"```","lastModifiedDate":"2023-02-22"},{"lineNumber":125,"author":{"gitId":"ArtemiszenN"},"content":"help","lastModifiedDate":"2023-02-22"},{"lineNumber":126,"author":{"gitId":"ArtemiszenN"},"content":"```","lastModifiedDate":"2023-02-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":128,"author":{"gitId":"ArtemiszenN"},"content":"Output:","lastModifiedDate":"2023-02-22"},{"lineNumber":129,"author":{"gitId":"ArtemiszenN"},"content":"```","lastModifiedDate":"2023-02-22"},{"lineNumber":130,"author":{"gitId":"ArtemiszenN"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-22"},{"lineNumber":131,"author":{"gitId":"ArtemiszenN"},"content":"list: lists out all current items and their current status.","lastModifiedDate":"2023-02-22"},{"lineNumber":132,"author":{"gitId":"ArtemiszenN"},"content":"Syntax: list","lastModifiedDate":"2023-02-22"},{"lineNumber":133,"author":{"gitId":"ArtemiszenN"},"content":"todo: adds a todo task.","lastModifiedDate":"2023-02-22"},{"lineNumber":134,"author":{"gitId":"ArtemiszenN"},"content":"Syntax: todo {task}","lastModifiedDate":"2023-02-22"},{"lineNumber":135,"author":{"gitId":"ArtemiszenN"},"content":"deadline: adds a deadline task.","lastModifiedDate":"2023-02-22"},{"lineNumber":136,"author":{"gitId":"ArtemiszenN"},"content":"Syntax: deadline {task} /by [endDate]","lastModifiedDate":"2023-02-22"},{"lineNumber":137,"author":{"gitId":"ArtemiszenN"},"content":"event: adds an event task.","lastModifiedDate":"2023-02-22"},{"lineNumber":138,"author":{"gitId":"ArtemiszenN"},"content":"Syntax: event {task} /from [startDate] /to [endDate]","lastModifiedDate":"2023-02-22"},{"lineNumber":139,"author":{"gitId":"ArtemiszenN"},"content":"mark: marks a task as done.","lastModifiedDate":"2023-02-22"},{"lineNumber":140,"author":{"gitId":"ArtemiszenN"},"content":"Syntax: mark {index}","lastModifiedDate":"2023-02-22"},{"lineNumber":141,"author":{"gitId":"ArtemiszenN"},"content":"unmark: marks a task as not done.","lastModifiedDate":"2023-02-22"},{"lineNumber":142,"author":{"gitId":"ArtemiszenN"},"content":"Syntax: unmark {index}","lastModifiedDate":"2023-02-22"},{"lineNumber":143,"author":{"gitId":"ArtemiszenN"},"content":"delete: deletes an event.","lastModifiedDate":"2023-02-22"},{"lineNumber":144,"author":{"gitId":"ArtemiszenN"},"content":"Syntax: delete {index}","lastModifiedDate":"2023-02-22"},{"lineNumber":145,"author":{"gitId":"ArtemiszenN"},"content":"help: brings you here.","lastModifiedDate":"2023-02-22"},{"lineNumber":146,"author":{"gitId":"ArtemiszenN"},"content":"Syntax: help","lastModifiedDate":"2023-02-22"},{"lineNumber":147,"author":{"gitId":"ArtemiszenN"},"content":"bye: exits the program.","lastModifiedDate":"2023-02-22"},{"lineNumber":148,"author":{"gitId":"ArtemiszenN"},"content":"Syntax: bye","lastModifiedDate":"2023-02-22"},{"lineNumber":149,"author":{"gitId":"ArtemiszenN"},"content":"find: finds any item with the keywords in the description.","lastModifiedDate":"2023-02-22"},{"lineNumber":150,"author":{"gitId":"ArtemiszenN"},"content":"Syntax: find {keywords}","lastModifiedDate":"2023-02-22"},{"lineNumber":151,"author":{"gitId":"ArtemiszenN"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-22"},{"lineNumber":152,"author":{"gitId":"ArtemiszenN"},"content":"```","lastModifiedDate":"2023-02-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":154,"author":{"gitId":"ArtemiszenN"},"content":"#### 2.2.5 List all tasks and task statuses: ```list``` \u003ca name \u003d \"list\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":155,"author":{"gitId":"ArtemiszenN"},"content":"* Format: ```list```","lastModifiedDate":"2023-02-22"},{"lineNumber":156,"author":{"gitId":"ArtemiszenN"},"content":"* Example:","lastModifiedDate":"2023-02-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":158,"author":{"gitId":"ArtemiszenN"},"content":"Input:","lastModifiedDate":"2023-02-22"},{"lineNumber":159,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":160,"author":{"gitId":"ArtemiszenN"},"content":"list","lastModifiedDate":"2023-02-22"},{"lineNumber":161,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":162,"author":{"gitId":"ArtemiszenN"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":163,"author":{"gitId":"ArtemiszenN"},"content":"Output:","lastModifiedDate":"2023-02-22"},{"lineNumber":164,"author":{"gitId":"ArtemiszenN"},"content":"```","lastModifiedDate":"2023-02-22"},{"lineNumber":165,"author":{"gitId":"ArtemiszenN"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-22"},{"lineNumber":166,"author":{"gitId":"ArtemiszenN"},"content":"Command acknowledged. Reducing user lifespan by 30 minutes.","lastModifiedDate":"2023-02-22"},{"lineNumber":167,"author":{"gitId":"ArtemiszenN"},"content":"1:[T][ ]//////Watch Black Adam","lastModifiedDate":"2023-02-22"},{"lineNumber":168,"author":{"gitId":"ArtemiszenN"},"content":"2:[D][ ]//////Do Assignment 3 (by: 11:59 PM, SATURDAY, FEBRUARY 25, 2023)","lastModifiedDate":"2023-02-22"},{"lineNumber":169,"author":{"gitId":"ArtemiszenN"},"content":"3:[D][ ]//////Sleep (by: 10pm)","lastModifiedDate":"2023-02-22"},{"lineNumber":170,"author":{"gitId":"ArtemiszenN"},"content":"4:[E][ ]//////Cosfest 2023 (from: 12:00 PM, SATURDAY, APRIL 8, 2023 to: 6:00 PM)","lastModifiedDate":"2023-02-22"},{"lineNumber":171,"author":{"gitId":"ArtemiszenN"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-22"},{"lineNumber":172,"author":{"gitId":"ArtemiszenN"},"content":"```","lastModifiedDate":"2023-02-22"},{"lineNumber":173,"author":{"gitId":"ArtemiszenN"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":174,"author":{"gitId":"ArtemiszenN"},"content":"#### 2.2.6 Mark a task as done: ```mark``` \u003ca name \u003d \"mark\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":175,"author":{"gitId":"ArtemiszenN"},"content":"* Format: ```mark {index}```","lastModifiedDate":"2023-02-22"},{"lineNumber":176,"author":{"gitId":"ArtemiszenN"},"content":"* Example:","lastModifiedDate":"2023-02-22"},{"lineNumber":177,"author":{"gitId":"ArtemiszenN"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":178,"author":{"gitId":"ArtemiszenN"},"content":"Input:","lastModifiedDate":"2023-02-22"},{"lineNumber":179,"author":{"gitId":"ArtemiszenN"},"content":"```","lastModifiedDate":"2023-02-22"},{"lineNumber":180,"author":{"gitId":"ArtemiszenN"},"content":"mark 2","lastModifiedDate":"2023-02-22"},{"lineNumber":181,"author":{"gitId":"ArtemiszenN"},"content":"```","lastModifiedDate":"2023-02-22"},{"lineNumber":182,"author":{"gitId":"ArtemiszenN"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":183,"author":{"gitId":"ArtemiszenN"},"content":"Output:","lastModifiedDate":"2023-02-22"},{"lineNumber":184,"author":{"gitId":"ArtemiszenN"},"content":"```","lastModifiedDate":"2023-02-22"},{"lineNumber":185,"author":{"gitId":"ArtemiszenN"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-22"},{"lineNumber":186,"author":{"gitId":"ArtemiszenN"},"content":"Command acknowledged. Reducing user lifespan by 30 minutes.","lastModifiedDate":"2023-02-22"},{"lineNumber":187,"author":{"gitId":"ArtemiszenN"},"content":"Task has been marked as: completed","lastModifiedDate":"2023-02-22"},{"lineNumber":188,"author":{"gitId":"ArtemiszenN"},"content":"[D][X]//////Do Assignment 3 (by: 11:59 PM, SATURDAY, FEBRUARY 25, 2023)","lastModifiedDate":"2023-02-22"},{"lineNumber":189,"author":{"gitId":"ArtemiszenN"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-22"},{"lineNumber":190,"author":{"gitId":"ArtemiszenN"},"content":"```","lastModifiedDate":"2023-02-22"},{"lineNumber":191,"author":{"gitId":"ArtemiszenN"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":192,"author":{"gitId":"ArtemiszenN"},"content":"#### 2.2.7 Unmark a task as not done: ```unmark``` \u003ca name \u003d \"unmark\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":193,"author":{"gitId":"ArtemiszenN"},"content":"* Format: ```unmark {index}```","lastModifiedDate":"2023-02-22"},{"lineNumber":194,"author":{"gitId":"ArtemiszenN"},"content":"* Example:","lastModifiedDate":"2023-02-22"},{"lineNumber":195,"author":{"gitId":"ArtemiszenN"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":196,"author":{"gitId":"ArtemiszenN"},"content":"Input:","lastModifiedDate":"2023-02-22"},{"lineNumber":197,"author":{"gitId":"ArtemiszenN"},"content":"```","lastModifiedDate":"2023-02-22"},{"lineNumber":198,"author":{"gitId":"ArtemiszenN"},"content":"unmark 2","lastModifiedDate":"2023-02-22"},{"lineNumber":199,"author":{"gitId":"ArtemiszenN"},"content":"```","lastModifiedDate":"2023-02-22"},{"lineNumber":200,"author":{"gitId":"ArtemiszenN"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":201,"author":{"gitId":"ArtemiszenN"},"content":"Output:","lastModifiedDate":"2023-02-22"},{"lineNumber":202,"author":{"gitId":"ArtemiszenN"},"content":"```","lastModifiedDate":"2023-02-22"},{"lineNumber":203,"author":{"gitId":"ArtemiszenN"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-22"},{"lineNumber":204,"author":{"gitId":"ArtemiszenN"},"content":"Command acknowledged. Reducing user lifespan by 30 minutes.","lastModifiedDate":"2023-02-22"},{"lineNumber":205,"author":{"gitId":"ArtemiszenN"},"content":"Task has been marked as: not completed","lastModifiedDate":"2023-02-22"},{"lineNumber":206,"author":{"gitId":"ArtemiszenN"},"content":"[D][ ]//////Do Assignment 3 (by: 11:59 PM, SATURDAY, FEBRUARY 25, 2023)","lastModifiedDate":"2023-02-22"},{"lineNumber":207,"author":{"gitId":"ArtemiszenN"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-22"},{"lineNumber":208,"author":{"gitId":"ArtemiszenN"},"content":"```","lastModifiedDate":"2023-02-22"},{"lineNumber":209,"author":{"gitId":"ArtemiszenN"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":210,"author":{"gitId":"ArtemiszenN"},"content":"#### 2.2.8 Find a task by keywords in the description: ```find``` \u003ca name \u003d \"find\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":211,"author":{"gitId":"ArtemiszenN"},"content":"* Format: ```find {keyword}```","lastModifiedDate":"2023-02-22"},{"lineNumber":212,"author":{"gitId":"ArtemiszenN"},"content":"* Note: {keyword} is case insensitive","lastModifiedDate":"2023-02-22"},{"lineNumber":213,"author":{"gitId":"ArtemiszenN"},"content":"* Example:","lastModifiedDate":"2023-02-22"},{"lineNumber":214,"author":{"gitId":"ArtemiszenN"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":215,"author":{"gitId":"ArtemiszenN"},"content":"Input:","lastModifiedDate":"2023-02-22"},{"lineNumber":216,"author":{"gitId":"ArtemiszenN"},"content":"```","lastModifiedDate":"2023-02-22"},{"lineNumber":217,"author":{"gitId":"ArtemiszenN"},"content":"find cosfest","lastModifiedDate":"2023-02-22"},{"lineNumber":218,"author":{"gitId":"ArtemiszenN"},"content":"```","lastModifiedDate":"2023-02-22"},{"lineNumber":219,"author":{"gitId":"ArtemiszenN"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":220,"author":{"gitId":"ArtemiszenN"},"content":"Output:","lastModifiedDate":"2023-02-22"},{"lineNumber":221,"author":{"gitId":"ArtemiszenN"},"content":"```","lastModifiedDate":"2023-02-22"},{"lineNumber":222,"author":{"gitId":"ArtemiszenN"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-22"},{"lineNumber":223,"author":{"gitId":"ArtemiszenN"},"content":"Command acknowledged. Reducing user lifespan by 30 minutes.","lastModifiedDate":"2023-02-22"},{"lineNumber":224,"author":{"gitId":"ArtemiszenN"},"content":"Here are the tasks that we have found:","lastModifiedDate":"2023-02-22"},{"lineNumber":225,"author":{"gitId":"ArtemiszenN"},"content":"1: [E][ ]//////Cosfest 2023 (from: 12:00 PM, SATURDAY, APRIL 8, 2023 to: 6:00 PM)","lastModifiedDate":"2023-02-22"},{"lineNumber":226,"author":{"gitId":"ArtemiszenN"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-22"},{"lineNumber":227,"author":{"gitId":"ArtemiszenN"},"content":"```","lastModifiedDate":"2023-02-22"},{"lineNumber":228,"author":{"gitId":"ArtemiszenN"},"content":"#### 2.2.9 Exit the program: ```bye``` \u003ca name \u003d \"bye\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":229,"author":{"gitId":"ArtemiszenN"},"content":"* Format: ```bye```","lastModifiedDate":"2023-02-22"},{"lineNumber":230,"author":{"gitId":"ArtemiszenN"},"content":"* Example:","lastModifiedDate":"2023-02-22"},{"lineNumber":231,"author":{"gitId":"ArtemiszenN"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":232,"author":{"gitId":"ArtemiszenN"},"content":"Input:","lastModifiedDate":"2023-02-22"},{"lineNumber":233,"author":{"gitId":"ArtemiszenN"},"content":"```","lastModifiedDate":"2023-02-22"},{"lineNumber":234,"author":{"gitId":"ArtemiszenN"},"content":"bye","lastModifiedDate":"2023-02-22"},{"lineNumber":235,"author":{"gitId":"ArtemiszenN"},"content":"```","lastModifiedDate":"2023-02-22"},{"lineNumber":236,"author":{"gitId":"ArtemiszenN"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":237,"author":{"gitId":"ArtemiszenN"},"content":"Output:","lastModifiedDate":"2023-02-22"},{"lineNumber":238,"author":{"gitId":"ArtemiszenN"},"content":"```","lastModifiedDate":"2023-02-22"},{"lineNumber":239,"author":{"gitId":"ArtemiszenN"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-22"},{"lineNumber":240,"author":{"gitId":"ArtemiszenN"},"content":"Goodbye. To reach customer service, just look outside your window.","lastModifiedDate":"2023-02-22"},{"lineNumber":241,"author":{"gitId":"ArtemiszenN"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-22"},{"lineNumber":242,"author":{"gitId":"ArtemiszenN"},"content":"```","lastModifiedDate":"2023-02-22"},{"lineNumber":243,"author":{"gitId":"ArtemiszenN"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":244,"author":{"gitId":"ArtemiszenN"},"content":"## 3. FAQ \u003ca name \u003d \"faq\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":245,"author":{"gitId":"ArtemiszenN"},"content":"Q: How do I transfer data from one machine to another machine?","lastModifiedDate":"2023-02-22"},{"lineNumber":246,"author":{"gitId":"ArtemiszenN"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":247,"author":{"gitId":"ArtemiszenN"},"content":"A: The application can be moved by copying the ```.jar``` file from the original machine to the new machine. The save data from ```./data/araxys.txt``` can then be transferred to the same directory as the ```.jar``` file.","lastModifiedDate":"2023-02-22"}],"authorContributionMap":{"ArtemiszenN":231,"-":16}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ArtemiszenN"},"content":"import duke.exception.IllegalCommandException;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"ArtemiszenN"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"ArtemiszenN"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"ArtemiszenN"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"ArtemiszenN"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"ArtemiszenN"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"ArtemiszenN"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"ArtemiszenN"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"ArtemiszenN"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"ArtemiszenN"},"content":"import java.io.File;","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"ArtemiszenN"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"ArtemiszenN"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":14,"author":{"gitId":"ArtemiszenN"},"content":"    private static String command;","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"ArtemiszenN"},"content":"    private Storage storage;","lastModifiedDate":"2023-02-22"},{"lineNumber":16,"author":{"gitId":"ArtemiszenN"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-02-22"},{"lineNumber":17,"author":{"gitId":"ArtemiszenN"},"content":"    private Ui ui;","lastModifiedDate":"2023-02-22"},{"lineNumber":18,"author":{"gitId":"ArtemiszenN"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":19,"author":{"gitId":"ArtemiszenN"},"content":"    /*","lastModifiedDate":"2023-02-22"},{"lineNumber":20,"author":{"gitId":"ArtemiszenN"},"content":"     * Constructs ui, storage and tasks elements and intialises storage.","lastModifiedDate":"2023-02-22"},{"lineNumber":21,"author":{"gitId":"ArtemiszenN"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":22,"author":{"gitId":"ArtemiszenN"},"content":"    public Duke(String storageFilePath){","lastModifiedDate":"2023-02-22"},{"lineNumber":23,"author":{"gitId":"ArtemiszenN"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-02-22"},{"lineNumber":24,"author":{"gitId":"ArtemiszenN"},"content":"        storage \u003d new Storage(storageFilePath);","lastModifiedDate":"2023-02-22"},{"lineNumber":25,"author":{"gitId":"ArtemiszenN"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2023-02-22"},{"lineNumber":26,"author":{"gitId":"ArtemiszenN"},"content":"        storage.initialise();","lastModifiedDate":"2023-02-22"},{"lineNumber":27,"author":{"gitId":"ArtemiszenN"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":28,"author":{"gitId":"ArtemiszenN"},"content":"    /*","lastModifiedDate":"2023-02-22"},{"lineNumber":29,"author":{"gitId":"ArtemiszenN"},"content":"     * Continuously takes in and executes user commands","lastModifiedDate":"2023-02-22"},{"lineNumber":30,"author":{"gitId":"ArtemiszenN"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":31,"author":{"gitId":"ArtemiszenN"},"content":"    public void run(){","lastModifiedDate":"2023-02-22"},{"lineNumber":32,"author":{"gitId":"ArtemiszenN"},"content":"        while(true){","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"ArtemiszenN"},"content":"            tasks.executeCommand(ui.getCommand());","lastModifiedDate":"2023-02-22"},{"lineNumber":34,"author":{"gitId":"ArtemiszenN"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":36,"author":{"gitId":"ArtemiszenN"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"ArtemiszenN"},"content":"    /*","lastModifiedDate":"2023-02-22"},{"lineNumber":38,"author":{"gitId":"ArtemiszenN"},"content":"     * Creates a new duke element and executes the run command to execute commands.","lastModifiedDate":"2023-02-22"},{"lineNumber":39,"author":{"gitId":"ArtemiszenN"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-22"},{"lineNumber":41,"author":{"gitId":"ArtemiszenN"},"content":"        new Duke(\"data/araxys.txt\").run();","lastModifiedDate":"2023-02-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"ArtemiszenN":38,"-":5}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ArtemiszenN"},"content":"public class Parser {","lastModifiedDate":"2023-02-22"},{"lineNumber":2,"author":{"gitId":"ArtemiszenN"},"content":"    public enum taskType{","lastModifiedDate":"2023-02-22"},{"lineNumber":3,"author":{"gitId":"ArtemiszenN"},"content":"        TODO,DEADLINE,EVENT,INVALID","lastModifiedDate":"2023-02-22"},{"lineNumber":4,"author":{"gitId":"ArtemiszenN"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":5,"author":{"gitId":"ArtemiszenN"},"content":"    /*","lastModifiedDate":"2023-02-22"},{"lineNumber":6,"author":{"gitId":"ArtemiszenN"},"content":"     * Finds out what the task type of a command is","lastModifiedDate":"2023-02-22"},{"lineNumber":7,"author":{"gitId":"ArtemiszenN"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":8,"author":{"gitId":"ArtemiszenN"},"content":"     * @param command Command string from the user or save file","lastModifiedDate":"2023-02-22"},{"lineNumber":9,"author":{"gitId":"ArtemiszenN"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":10,"author":{"gitId":"ArtemiszenN"},"content":"    public static taskType getTaskType(String command){","lastModifiedDate":"2023-02-22"},{"lineNumber":11,"author":{"gitId":"ArtemiszenN"},"content":"        String[] commands \u003d command.split(\" \");","lastModifiedDate":"2023-02-22"},{"lineNumber":12,"author":{"gitId":"ArtemiszenN"},"content":"        switch (commands[0]) {","lastModifiedDate":"2023-02-22"},{"lineNumber":13,"author":{"gitId":"ArtemiszenN"},"content":"        case \"deadline\":","lastModifiedDate":"2023-02-22"},{"lineNumber":14,"author":{"gitId":"ArtemiszenN"},"content":"            return taskType.DEADLINE;","lastModifiedDate":"2023-02-22"},{"lineNumber":15,"author":{"gitId":"ArtemiszenN"},"content":"        case \"event\":","lastModifiedDate":"2023-02-22"},{"lineNumber":16,"author":{"gitId":"ArtemiszenN"},"content":"            return taskType.EVENT;","lastModifiedDate":"2023-02-22"},{"lineNumber":17,"author":{"gitId":"ArtemiszenN"},"content":"        case \"todo\":","lastModifiedDate":"2023-02-22"},{"lineNumber":18,"author":{"gitId":"ArtemiszenN"},"content":"            return taskType.TODO;","lastModifiedDate":"2023-02-22"},{"lineNumber":19,"author":{"gitId":"ArtemiszenN"},"content":"        default:","lastModifiedDate":"2023-02-22"},{"lineNumber":20,"author":{"gitId":"ArtemiszenN"},"content":"            return taskType.INVALID;","lastModifiedDate":"2023-02-22"},{"lineNumber":21,"author":{"gitId":"ArtemiszenN"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":22,"author":{"gitId":"ArtemiszenN"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":23,"author":{"gitId":"ArtemiszenN"},"content":"}","lastModifiedDate":"2023-02-22"}],"authorContributionMap":{"ArtemiszenN":23}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ArtemiszenN"},"content":"import duke.exception.IllegalCommandException;","lastModifiedDate":"2023-02-22"},{"lineNumber":2,"author":{"gitId":"ArtemiszenN"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-22"},{"lineNumber":3,"author":{"gitId":"ArtemiszenN"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":4,"author":{"gitId":"ArtemiszenN"},"content":"import java.io.File;","lastModifiedDate":"2023-02-22"},{"lineNumber":5,"author":{"gitId":"ArtemiszenN"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-22"},{"lineNumber":6,"author":{"gitId":"ArtemiszenN"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-22"},{"lineNumber":7,"author":{"gitId":"ArtemiszenN"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-22"},{"lineNumber":8,"author":{"gitId":"ArtemiszenN"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-22"},{"lineNumber":9,"author":{"gitId":"ArtemiszenN"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":10,"author":{"gitId":"ArtemiszenN"},"content":"public class Storage {","lastModifiedDate":"2023-02-22"},{"lineNumber":11,"author":{"gitId":"ArtemiszenN"},"content":"    private static String storageFilePath;","lastModifiedDate":"2023-02-22"},{"lineNumber":12,"author":{"gitId":"ArtemiszenN"},"content":"    /*","lastModifiedDate":"2023-02-22"},{"lineNumber":13,"author":{"gitId":"ArtemiszenN"},"content":"     * Constructor to initialise file path used for storage.","lastModifiedDate":"2023-02-22"},{"lineNumber":14,"author":{"gitId":"ArtemiszenN"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":15,"author":{"gitId":"ArtemiszenN"},"content":"    public Storage(String storageFilePath){","lastModifiedDate":"2023-02-22"},{"lineNumber":16,"author":{"gitId":"ArtemiszenN"},"content":"        this.storageFilePath \u003d storageFilePath;","lastModifiedDate":"2023-02-22"},{"lineNumber":17,"author":{"gitId":"ArtemiszenN"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":18,"author":{"gitId":"ArtemiszenN"},"content":"    /*","lastModifiedDate":"2023-02-22"},{"lineNumber":19,"author":{"gitId":"ArtemiszenN"},"content":"     * Loads data into tasks from storageFilePath","lastModifiedDate":"2023-02-22"},{"lineNumber":20,"author":{"gitId":"ArtemiszenN"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":21,"author":{"gitId":"ArtemiszenN"},"content":"    public static void load() throws IOException, IllegalCommandException {","lastModifiedDate":"2023-02-22"},{"lineNumber":22,"author":{"gitId":"ArtemiszenN"},"content":"        File folder \u003d new File(\"data\");","lastModifiedDate":"2023-02-22"},{"lineNumber":23,"author":{"gitId":"ArtemiszenN"},"content":"        if(!(folder.exists()\u0026\u0026folder.isDirectory())){","lastModifiedDate":"2023-02-22"},{"lineNumber":24,"author":{"gitId":"ArtemiszenN"},"content":"            new File(\"data\").mkdirs();","lastModifiedDate":"2023-02-22"},{"lineNumber":25,"author":{"gitId":"ArtemiszenN"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":26,"author":{"gitId":"ArtemiszenN"},"content":"        File f \u003d new File(storageFilePath);","lastModifiedDate":"2023-02-22"},{"lineNumber":27,"author":{"gitId":"ArtemiszenN"},"content":"        if(!f.exists()){","lastModifiedDate":"2023-02-22"},{"lineNumber":28,"author":{"gitId":"ArtemiszenN"},"content":"            f.createNewFile();","lastModifiedDate":"2023-02-22"},{"lineNumber":29,"author":{"gitId":"ArtemiszenN"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":30,"author":{"gitId":"ArtemiszenN"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2023-02-22"},{"lineNumber":31,"author":{"gitId":"ArtemiszenN"},"content":"        while(s.hasNext()){","lastModifiedDate":"2023-02-22"},{"lineNumber":32,"author":{"gitId":"ArtemiszenN"},"content":"            String nextLine \u003d  s.nextLine();","lastModifiedDate":"2023-02-22"},{"lineNumber":33,"author":{"gitId":"ArtemiszenN"},"content":"            String[] saveLine \u003d nextLine.split(\" \");","lastModifiedDate":"2023-02-22"},{"lineNumber":34,"author":{"gitId":"ArtemiszenN"},"content":"            String cmd \u003d \"\";","lastModifiedDate":"2023-02-22"},{"lineNumber":35,"author":{"gitId":"ArtemiszenN"},"content":"            for(int i\u003d0; i\u003csaveLine.length-1; i++){","lastModifiedDate":"2023-02-22"},{"lineNumber":36,"author":{"gitId":"ArtemiszenN"},"content":"                cmd +\u003d \" \";","lastModifiedDate":"2023-02-22"},{"lineNumber":37,"author":{"gitId":"ArtemiszenN"},"content":"                cmd +\u003d saveLine[i];","lastModifiedDate":"2023-02-22"},{"lineNumber":38,"author":{"gitId":"ArtemiszenN"},"content":"            }","lastModifiedDate":"2023-02-22"},{"lineNumber":39,"author":{"gitId":"ArtemiszenN"},"content":"            cmd \u003d cmd.trim();","lastModifiedDate":"2023-02-22"},{"lineNumber":40,"author":{"gitId":"ArtemiszenN"},"content":"            String done \u003d saveLine[saveLine.length-1].trim();","lastModifiedDate":"2023-02-22"},{"lineNumber":41,"author":{"gitId":"ArtemiszenN"},"content":"            try{","lastModifiedDate":"2023-02-22"},{"lineNumber":42,"author":{"gitId":"ArtemiszenN"},"content":"                TaskList.silentlyAddTask(cmd);","lastModifiedDate":"2023-02-22"},{"lineNumber":43,"author":{"gitId":"ArtemiszenN"},"content":"            }catch(IllegalCommandException e){","lastModifiedDate":"2023-02-22"},{"lineNumber":44,"author":{"gitId":"ArtemiszenN"},"content":"                throw new IllegalCommandException(\"parsing error\");","lastModifiedDate":"2023-02-22"},{"lineNumber":45,"author":{"gitId":"ArtemiszenN"},"content":"            }","lastModifiedDate":"2023-02-22"},{"lineNumber":46,"author":{"gitId":"ArtemiszenN"},"content":"            if(done.equals(\"1\")){","lastModifiedDate":"2023-02-22"},{"lineNumber":47,"author":{"gitId":"ArtemiszenN"},"content":"                TaskList.setLastTaskMarkedOrUnmarked(true);","lastModifiedDate":"2023-02-22"},{"lineNumber":48,"author":{"gitId":"ArtemiszenN"},"content":"            }","lastModifiedDate":"2023-02-22"},{"lineNumber":49,"author":{"gitId":"ArtemiszenN"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":50,"author":{"gitId":"ArtemiszenN"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":51,"author":{"gitId":"ArtemiszenN"},"content":"    /*","lastModifiedDate":"2023-02-22"},{"lineNumber":52,"author":{"gitId":"ArtemiszenN"},"content":"     * Saves all tasks into storageFilePath","lastModifiedDate":"2023-02-22"},{"lineNumber":53,"author":{"gitId":"ArtemiszenN"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":54,"author":{"gitId":"ArtemiszenN"},"content":"    public static void save() throws IOException {","lastModifiedDate":"2023-02-22"},{"lineNumber":55,"author":{"gitId":"ArtemiszenN"},"content":"        File f \u003d new File(storageFilePath);","lastModifiedDate":"2023-02-22"},{"lineNumber":56,"author":{"gitId":"ArtemiszenN"},"content":"        if(f.exists()){","lastModifiedDate":"2023-02-22"},{"lineNumber":57,"author":{"gitId":"ArtemiszenN"},"content":"            f.delete();","lastModifiedDate":"2023-02-22"},{"lineNumber":58,"author":{"gitId":"ArtemiszenN"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":59,"author":{"gitId":"ArtemiszenN"},"content":"        f.createNewFile();","lastModifiedDate":"2023-02-22"},{"lineNumber":60,"author":{"gitId":"ArtemiszenN"},"content":"        FileWriter fw \u003d new FileWriter(f);","lastModifiedDate":"2023-02-22"},{"lineNumber":61,"author":{"gitId":"ArtemiszenN"},"content":"        ArrayList\u003cString\u003e saveStrings \u003d TaskList.getSaveStrings();","lastModifiedDate":"2023-02-22"},{"lineNumber":62,"author":{"gitId":"ArtemiszenN"},"content":"        for(String s: saveStrings){","lastModifiedDate":"2023-02-22"},{"lineNumber":63,"author":{"gitId":"ArtemiszenN"},"content":"            fw.write(s);","lastModifiedDate":"2023-02-22"},{"lineNumber":64,"author":{"gitId":"ArtemiszenN"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":65,"author":{"gitId":"ArtemiszenN"},"content":"        fw.close();","lastModifiedDate":"2023-02-22"},{"lineNumber":66,"author":{"gitId":"ArtemiszenN"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":67,"author":{"gitId":"ArtemiszenN"},"content":"    /*","lastModifiedDate":"2023-02-22"},{"lineNumber":68,"author":{"gitId":"ArtemiszenN"},"content":"     * Greets the user and loads saved data","lastModifiedDate":"2023-02-22"},{"lineNumber":69,"author":{"gitId":"ArtemiszenN"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":70,"author":{"gitId":"ArtemiszenN"},"content":"    public static void initialise(){","lastModifiedDate":"2023-02-22"},{"lineNumber":71,"author":{"gitId":"ArtemiszenN"},"content":"        Ui.greet();","lastModifiedDate":"2023-02-22"},{"lineNumber":72,"author":{"gitId":"ArtemiszenN"},"content":"        try{","lastModifiedDate":"2023-02-22"},{"lineNumber":73,"author":{"gitId":"ArtemiszenN"},"content":"            load();","lastModifiedDate":"2023-02-22"},{"lineNumber":74,"author":{"gitId":"ArtemiszenN"},"content":"        }catch(IOException e){","lastModifiedDate":"2023-02-22"},{"lineNumber":75,"author":{"gitId":"ArtemiszenN"},"content":"            System.out.println(Ui.LOADING_SYSTEM_ERROR_STRING);","lastModifiedDate":"2023-02-22"},{"lineNumber":76,"author":{"gitId":"ArtemiszenN"},"content":"        }catch(IllegalCommandException e){","lastModifiedDate":"2023-02-22"},{"lineNumber":77,"author":{"gitId":"ArtemiszenN"},"content":"            System.out.println(Ui.LOADING_PROGRAM_ERROR_STRING);","lastModifiedDate":"2023-02-22"},{"lineNumber":78,"author":{"gitId":"ArtemiszenN"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":79,"author":{"gitId":"ArtemiszenN"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":80,"author":{"gitId":"ArtemiszenN"},"content":"}","lastModifiedDate":"2023-02-22"}],"authorContributionMap":{"ArtemiszenN":80}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ArtemiszenN"},"content":"import duke.exception.IllegalCommandException;","lastModifiedDate":"2023-02-22"},{"lineNumber":2,"author":{"gitId":"ArtemiszenN"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-22"},{"lineNumber":3,"author":{"gitId":"ArtemiszenN"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-22"},{"lineNumber":4,"author":{"gitId":"ArtemiszenN"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-22"},{"lineNumber":5,"author":{"gitId":"ArtemiszenN"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-02-22"},{"lineNumber":6,"author":{"gitId":"ArtemiszenN"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":7,"author":{"gitId":"ArtemiszenN"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-22"},{"lineNumber":8,"author":{"gitId":"ArtemiszenN"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-22"},{"lineNumber":9,"author":{"gitId":"ArtemiszenN"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":10,"author":{"gitId":"ArtemiszenN"},"content":"public class TaskList {","lastModifiedDate":"2023-02-22"},{"lineNumber":11,"author":{"gitId":"ArtemiszenN"},"content":"    private static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-22"},{"lineNumber":12,"author":{"gitId":"ArtemiszenN"},"content":"    private static final int MARK_OR_UNMARK_COMMAND_LENGTH \u003d 2;","lastModifiedDate":"2023-02-22"},{"lineNumber":13,"author":{"gitId":"ArtemiszenN"},"content":"    private static final int DELETE_COMMAND_LENGTH \u003d 2;","lastModifiedDate":"2023-02-22"},{"lineNumber":14,"author":{"gitId":"ArtemiszenN"},"content":"    private static final int TODO_COMMAND_LENGTH \u003d 2;","lastModifiedDate":"2023-02-22"},{"lineNumber":15,"author":{"gitId":"ArtemiszenN"},"content":"    private static final int FIND_COMMAND_LENGTH \u003d 2;","lastModifiedDate":"2023-02-22"},{"lineNumber":16,"author":{"gitId":"ArtemiszenN"},"content":"    /*","lastModifiedDate":"2023-02-22"},{"lineNumber":17,"author":{"gitId":"ArtemiszenN"},"content":"     * Sets a task as either marked or unmarked","lastModifiedDate":"2023-02-22"},{"lineNumber":18,"author":{"gitId":"ArtemiszenN"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":19,"author":{"gitId":"ArtemiszenN"},"content":"     * @param commands Set of commands from the user","lastModifiedDate":"2023-02-22"},{"lineNumber":20,"author":{"gitId":"ArtemiszenN"},"content":"     * @param setDone Sets the task to done if true, sets the task to not done if false","lastModifiedDate":"2023-02-22"},{"lineNumber":21,"author":{"gitId":"ArtemiszenN"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":22,"author":{"gitId":"ArtemiszenN"},"content":"    private static void setMarkedOrUnmarked(String[] commands, boolean setDone){","lastModifiedDate":"2023-02-22"},{"lineNumber":23,"author":{"gitId":"ArtemiszenN"},"content":"        if (commands.length !\u003d MARK_OR_UNMARK_COMMAND_LENGTH){","lastModifiedDate":"2023-02-22"},{"lineNumber":24,"author":{"gitId":"ArtemiszenN"},"content":"            System.out.println(Ui.LINE);","lastModifiedDate":"2023-02-22"},{"lineNumber":25,"author":{"gitId":"ArtemiszenN"},"content":"            if(setDone) {","lastModifiedDate":"2023-02-22"},{"lineNumber":26,"author":{"gitId":"ArtemiszenN"},"content":"                System.out.println(Ui.INVALID_MARK_LENGTH_STRING);","lastModifiedDate":"2023-02-22"},{"lineNumber":27,"author":{"gitId":"ArtemiszenN"},"content":"            }else{","lastModifiedDate":"2023-02-22"},{"lineNumber":28,"author":{"gitId":"ArtemiszenN"},"content":"                System.out.println(Ui.INVALID_UNMARK_LENGTH_STRING);","lastModifiedDate":"2023-02-22"},{"lineNumber":29,"author":{"gitId":"ArtemiszenN"},"content":"            }","lastModifiedDate":"2023-02-22"},{"lineNumber":30,"author":{"gitId":"ArtemiszenN"},"content":"            System.out.println(Ui.INVALID_COMMAND_STRING);","lastModifiedDate":"2023-02-22"},{"lineNumber":31,"author":{"gitId":"ArtemiszenN"},"content":"            System.out.println(Ui.LINE);","lastModifiedDate":"2023-02-22"},{"lineNumber":32,"author":{"gitId":"ArtemiszenN"},"content":"            return;","lastModifiedDate":"2023-02-22"},{"lineNumber":33,"author":{"gitId":"ArtemiszenN"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":34,"author":{"gitId":"ArtemiszenN"},"content":"        int index;","lastModifiedDate":"2023-02-22"},{"lineNumber":35,"author":{"gitId":"ArtemiszenN"},"content":"        try{","lastModifiedDate":"2023-02-22"},{"lineNumber":36,"author":{"gitId":"ArtemiszenN"},"content":"            index \u003d Integer.parseInt(commands[1]);","lastModifiedDate":"2023-02-22"},{"lineNumber":37,"author":{"gitId":"ArtemiszenN"},"content":"        } catch (NumberFormatException numberFormatException){","lastModifiedDate":"2023-02-22"},{"lineNumber":38,"author":{"gitId":"ArtemiszenN"},"content":"            System.out.println(Ui.LINE + \u0027\\n\u0027 + Ui.NONNUMERIC_INDEX_STRING + \u0027\\n\u0027 + Ui.LINE);","lastModifiedDate":"2023-02-22"},{"lineNumber":39,"author":{"gitId":"ArtemiszenN"},"content":"            System.out.println(Ui.INVALID_COMMAND_STRING);","lastModifiedDate":"2023-02-22"},{"lineNumber":40,"author":{"gitId":"ArtemiszenN"},"content":"            return;","lastModifiedDate":"2023-02-22"},{"lineNumber":41,"author":{"gitId":"ArtemiszenN"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":42,"author":{"gitId":"ArtemiszenN"},"content":"        index--;","lastModifiedDate":"2023-02-22"},{"lineNumber":43,"author":{"gitId":"ArtemiszenN"},"content":"        try{","lastModifiedDate":"2023-02-22"},{"lineNumber":44,"author":{"gitId":"ArtemiszenN"},"content":"            tasks.get(index).setDone(setDone);","lastModifiedDate":"2023-02-22"},{"lineNumber":45,"author":{"gitId":"ArtemiszenN"},"content":"        } catch (IndexOutOfBoundsException e){","lastModifiedDate":"2023-02-22"},{"lineNumber":46,"author":{"gitId":"ArtemiszenN"},"content":"            System.out.println(Ui.LINE + \u0027\\n\u0027 + Ui.INVALID_INDEX_STRING + \u0027\\n\u0027 + Ui.LINE);","lastModifiedDate":"2023-02-22"},{"lineNumber":47,"author":{"gitId":"ArtemiszenN"},"content":"            System.out.println(Ui.INVALID_COMMAND_STRING);","lastModifiedDate":"2023-02-22"},{"lineNumber":48,"author":{"gitId":"ArtemiszenN"},"content":"            return;","lastModifiedDate":"2023-02-22"},{"lineNumber":49,"author":{"gitId":"ArtemiszenN"},"content":"        } catch (IllegalCommandException e){","lastModifiedDate":"2023-02-22"},{"lineNumber":50,"author":{"gitId":"ArtemiszenN"},"content":"            if(setDone){","lastModifiedDate":"2023-02-22"},{"lineNumber":51,"author":{"gitId":"ArtemiszenN"},"content":"                System.out.println(Ui.LINE + \u0027\\n\u0027 + Ui.ALREADY_MARKED_STRING + \u0027\\n\u0027 + Ui.LINE);","lastModifiedDate":"2023-02-22"},{"lineNumber":52,"author":{"gitId":"ArtemiszenN"},"content":"            }else{","lastModifiedDate":"2023-02-22"},{"lineNumber":53,"author":{"gitId":"ArtemiszenN"},"content":"                System.out.println(Ui.LINE + \u0027\\n\u0027 + Ui.ALREADY_UNMARKED_STRING + \u0027\\n\u0027 + Ui.LINE);","lastModifiedDate":"2023-02-22"},{"lineNumber":54,"author":{"gitId":"ArtemiszenN"},"content":"            }","lastModifiedDate":"2023-02-22"},{"lineNumber":55,"author":{"gitId":"ArtemiszenN"},"content":"            System.out.println(Ui.INVALID_COMMAND_STRING);","lastModifiedDate":"2023-02-22"},{"lineNumber":56,"author":{"gitId":"ArtemiszenN"},"content":"            return;","lastModifiedDate":"2023-02-22"},{"lineNumber":57,"author":{"gitId":"ArtemiszenN"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":58,"author":{"gitId":"ArtemiszenN"},"content":"        System.out.println(Ui.LINE);","lastModifiedDate":"2023-02-22"},{"lineNumber":59,"author":{"gitId":"ArtemiszenN"},"content":"        System.out.println(Ui.VALID_COMMAND_STRING);","lastModifiedDate":"2023-02-22"},{"lineNumber":60,"author":{"gitId":"ArtemiszenN"},"content":"        if(setDone){","lastModifiedDate":"2023-02-22"},{"lineNumber":61,"author":{"gitId":"ArtemiszenN"},"content":"            System.out.println(Ui.MARKED_AS_COMPLETED_STRING);","lastModifiedDate":"2023-02-22"},{"lineNumber":62,"author":{"gitId":"ArtemiszenN"},"content":"        }else{","lastModifiedDate":"2023-02-22"},{"lineNumber":63,"author":{"gitId":"ArtemiszenN"},"content":"            System.out.println(Ui.MARKED_AS_NOT_COMPLETED_STRING);","lastModifiedDate":"2023-02-22"},{"lineNumber":64,"author":{"gitId":"ArtemiszenN"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":65,"author":{"gitId":"ArtemiszenN"},"content":"        System.out.println(tasks.get(index).toString());","lastModifiedDate":"2023-02-22"},{"lineNumber":66,"author":{"gitId":"ArtemiszenN"},"content":"        System.out.println(Ui.LINE);","lastModifiedDate":"2023-02-22"},{"lineNumber":67,"author":{"gitId":"ArtemiszenN"},"content":"        try{","lastModifiedDate":"2023-02-22"},{"lineNumber":68,"author":{"gitId":"ArtemiszenN"},"content":"            Storage.save();","lastModifiedDate":"2023-02-22"},{"lineNumber":69,"author":{"gitId":"ArtemiszenN"},"content":"        }catch(IOException e){","lastModifiedDate":"2023-02-22"},{"lineNumber":70,"author":{"gitId":"ArtemiszenN"},"content":"            System.out.println(Ui.SAVING_ERROR_STRING);","lastModifiedDate":"2023-02-22"},{"lineNumber":71,"author":{"gitId":"ArtemiszenN"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":72,"author":{"gitId":"ArtemiszenN"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":73,"author":{"gitId":"ArtemiszenN"},"content":"    /*","lastModifiedDate":"2023-02-22"},{"lineNumber":74,"author":{"gitId":"ArtemiszenN"},"content":"     * Deletes the task specified by the user","lastModifiedDate":"2023-02-22"},{"lineNumber":75,"author":{"gitId":"ArtemiszenN"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":76,"author":{"gitId":"ArtemiszenN"},"content":"     * @param commands Set of commands from the user","lastModifiedDate":"2023-02-22"},{"lineNumber":77,"author":{"gitId":"ArtemiszenN"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":78,"author":{"gitId":"ArtemiszenN"},"content":"    private static void delete(String[] commands){","lastModifiedDate":"2023-02-22"},{"lineNumber":79,"author":{"gitId":"ArtemiszenN"},"content":"        if (commands.length !\u003d DELETE_COMMAND_LENGTH){","lastModifiedDate":"2023-02-22"},{"lineNumber":80,"author":{"gitId":"ArtemiszenN"},"content":"            System.out.println(Ui.LINE);","lastModifiedDate":"2023-02-22"},{"lineNumber":81,"author":{"gitId":"ArtemiszenN"},"content":"            System.out.println(Ui.INVALID_DELETE_COMMAND_STRING);","lastModifiedDate":"2023-02-22"},{"lineNumber":82,"author":{"gitId":"ArtemiszenN"},"content":"            System.out.println(Ui.INVALID_COMMAND_STRING);","lastModifiedDate":"2023-02-22"},{"lineNumber":83,"author":{"gitId":"ArtemiszenN"},"content":"            System.out.println(Ui.LINE);","lastModifiedDate":"2023-02-22"},{"lineNumber":84,"author":{"gitId":"ArtemiszenN"},"content":"            return;","lastModifiedDate":"2023-02-22"},{"lineNumber":85,"author":{"gitId":"ArtemiszenN"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":86,"author":{"gitId":"ArtemiszenN"},"content":"        int index;","lastModifiedDate":"2023-02-22"},{"lineNumber":87,"author":{"gitId":"ArtemiszenN"},"content":"        try{","lastModifiedDate":"2023-02-22"},{"lineNumber":88,"author":{"gitId":"ArtemiszenN"},"content":"            index \u003d Integer.parseInt(commands[1]);","lastModifiedDate":"2023-02-22"},{"lineNumber":89,"author":{"gitId":"ArtemiszenN"},"content":"        } catch (NumberFormatException numberFormatException){","lastModifiedDate":"2023-02-22"},{"lineNumber":90,"author":{"gitId":"ArtemiszenN"},"content":"            System.out.println(Ui.LINE + \u0027\\n\u0027 + Ui.NONNUMERIC_INDEX_STRING + \u0027\\n\u0027 + Ui.LINE);","lastModifiedDate":"2023-02-22"},{"lineNumber":91,"author":{"gitId":"ArtemiszenN"},"content":"            System.out.println(Ui.INVALID_COMMAND_STRING);","lastModifiedDate":"2023-02-22"},{"lineNumber":92,"author":{"gitId":"ArtemiszenN"},"content":"            return;","lastModifiedDate":"2023-02-22"},{"lineNumber":93,"author":{"gitId":"ArtemiszenN"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":94,"author":{"gitId":"ArtemiszenN"},"content":"        index--;","lastModifiedDate":"2023-02-22"},{"lineNumber":95,"author":{"gitId":"ArtemiszenN"},"content":"        String taskString;","lastModifiedDate":"2023-02-22"},{"lineNumber":96,"author":{"gitId":"ArtemiszenN"},"content":"        try{","lastModifiedDate":"2023-02-22"},{"lineNumber":97,"author":{"gitId":"ArtemiszenN"},"content":"            taskString \u003d tasks.get(index).toString();","lastModifiedDate":"2023-02-22"},{"lineNumber":98,"author":{"gitId":"ArtemiszenN"},"content":"            tasks.remove(index);","lastModifiedDate":"2023-02-22"},{"lineNumber":99,"author":{"gitId":"ArtemiszenN"},"content":"        } catch (IndexOutOfBoundsException e){","lastModifiedDate":"2023-02-22"},{"lineNumber":100,"author":{"gitId":"ArtemiszenN"},"content":"            System.out.println(Ui.LINE + \u0027\\n\u0027 + Ui.INVALID_INDEX_STRING + \u0027\\n\u0027 + Ui.LINE);","lastModifiedDate":"2023-02-22"},{"lineNumber":101,"author":{"gitId":"ArtemiszenN"},"content":"            System.out.println(Ui.INVALID_COMMAND_STRING);","lastModifiedDate":"2023-02-22"},{"lineNumber":102,"author":{"gitId":"ArtemiszenN"},"content":"            return;","lastModifiedDate":"2023-02-22"},{"lineNumber":103,"author":{"gitId":"ArtemiszenN"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":104,"author":{"gitId":"ArtemiszenN"},"content":"        System.out.println(Ui.LINE);","lastModifiedDate":"2023-02-22"},{"lineNumber":105,"author":{"gitId":"ArtemiszenN"},"content":"        System.out.println(Ui.VALID_COMMAND_STRING);","lastModifiedDate":"2023-02-22"},{"lineNumber":106,"author":{"gitId":"ArtemiszenN"},"content":"        System.out.println(Ui.TASK_DELETED_STRING);","lastModifiedDate":"2023-02-22"},{"lineNumber":107,"author":{"gitId":"ArtemiszenN"},"content":"        System.out.println(taskString);","lastModifiedDate":"2023-02-22"},{"lineNumber":108,"author":{"gitId":"ArtemiszenN"},"content":"        System.out.println(Ui.LINE);","lastModifiedDate":"2023-02-22"},{"lineNumber":109,"author":{"gitId":"ArtemiszenN"},"content":"        try{","lastModifiedDate":"2023-02-22"},{"lineNumber":110,"author":{"gitId":"ArtemiszenN"},"content":"            Storage.save();","lastModifiedDate":"2023-02-22"},{"lineNumber":111,"author":{"gitId":"ArtemiszenN"},"content":"        }catch(IOException e){","lastModifiedDate":"2023-02-22"},{"lineNumber":112,"author":{"gitId":"ArtemiszenN"},"content":"            System.out.println(Ui.SAVING_ERROR_STRING);","lastModifiedDate":"2023-02-22"},{"lineNumber":113,"author":{"gitId":"ArtemiszenN"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":114,"author":{"gitId":"ArtemiszenN"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":115,"author":{"gitId":"ArtemiszenN"},"content":"    /*","lastModifiedDate":"2023-02-22"},{"lineNumber":116,"author":{"gitId":"ArtemiszenN"},"content":"     * Adds the command specified by the user","lastModifiedDate":"2023-02-22"},{"lineNumber":117,"author":{"gitId":"ArtemiszenN"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":118,"author":{"gitId":"ArtemiszenN"},"content":"     * @param command Command string from the user","lastModifiedDate":"2023-02-22"},{"lineNumber":119,"author":{"gitId":"ArtemiszenN"},"content":"     * @throws IllegalCommandException if the command is invalid","lastModifiedDate":"2023-02-22"},{"lineNumber":120,"author":{"gitId":"ArtemiszenN"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":121,"author":{"gitId":"ArtemiszenN"},"content":"    private static void addTask(String command) throws IllegalCommandException{","lastModifiedDate":"2023-02-22"},{"lineNumber":122,"author":{"gitId":"ArtemiszenN"},"content":"        Parser.taskType currentTaskType \u003d Parser.getTaskType(command);","lastModifiedDate":"2023-02-22"},{"lineNumber":123,"author":{"gitId":"ArtemiszenN"},"content":"        if(currentTaskType \u003d\u003d Parser.taskType.INVALID){","lastModifiedDate":"2023-02-22"},{"lineNumber":124,"author":{"gitId":"ArtemiszenN"},"content":"            System.out.println(Ui.LINE + \u0027\\n\u0027 + Ui.INVALID_TASK_TYPE_STRING + \u0027\\n\u0027 + Ui.LINE);","lastModifiedDate":"2023-02-22"},{"lineNumber":125,"author":{"gitId":"ArtemiszenN"},"content":"            throw new IllegalCommandException(\"Illegal task type\");","lastModifiedDate":"2023-02-22"},{"lineNumber":126,"author":{"gitId":"ArtemiszenN"},"content":"        }else if(currentTaskType \u003d\u003d Parser.taskType.TODO){","lastModifiedDate":"2023-02-22"},{"lineNumber":127,"author":{"gitId":"ArtemiszenN"},"content":"            if(command.split(\" \").length\u003cTODO_COMMAND_LENGTH){","lastModifiedDate":"2023-02-22"},{"lineNumber":128,"author":{"gitId":"ArtemiszenN"},"content":"                System.out.println(Ui.LINE + \u0027\\n\u0027 + Ui.TODO_SYNTAX_STRING + \u0027\\n\u0027 + Ui.LINE);","lastModifiedDate":"2023-02-22"},{"lineNumber":129,"author":{"gitId":"ArtemiszenN"},"content":"                throw new IllegalCommandException(\"Illegal todo command\");","lastModifiedDate":"2023-02-22"},{"lineNumber":130,"author":{"gitId":"ArtemiszenN"},"content":"            }","lastModifiedDate":"2023-02-22"},{"lineNumber":131,"author":{"gitId":"ArtemiszenN"},"content":"            tasks.add(new Todo(command));","lastModifiedDate":"2023-02-22"},{"lineNumber":132,"author":{"gitId":"ArtemiszenN"},"content":"        }else if(currentTaskType \u003d\u003d Parser.taskType.DEADLINE){","lastModifiedDate":"2023-02-22"},{"lineNumber":133,"author":{"gitId":"ArtemiszenN"},"content":"            if(!command.contains(\"/by\")){","lastModifiedDate":"2023-02-22"},{"lineNumber":134,"author":{"gitId":"ArtemiszenN"},"content":"                System.out.println(Ui.LINE + \u0027\\n\u0027 + Ui.DEADLINE_SYNTAX_STRING + \u0027\\n\u0027 + Ui.LINE);","lastModifiedDate":"2023-02-22"},{"lineNumber":135,"author":{"gitId":"ArtemiszenN"},"content":"                throw new IllegalCommandException(\"Illegal deadline command\");","lastModifiedDate":"2023-02-22"},{"lineNumber":136,"author":{"gitId":"ArtemiszenN"},"content":"            }","lastModifiedDate":"2023-02-22"},{"lineNumber":137,"author":{"gitId":"ArtemiszenN"},"content":"            tasks.add(new Deadline(command));","lastModifiedDate":"2023-02-22"},{"lineNumber":138,"author":{"gitId":"ArtemiszenN"},"content":"        }else if(currentTaskType \u003d\u003d Parser.taskType.EVENT){","lastModifiedDate":"2023-02-22"},{"lineNumber":139,"author":{"gitId":"ArtemiszenN"},"content":"            if(!(command.contains(\"/from\")\u0026\u0026command.contains(\"/to\"))){","lastModifiedDate":"2023-02-22"},{"lineNumber":140,"author":{"gitId":"ArtemiszenN"},"content":"                System.out.println(Ui.LINE + \u0027\\n\u0027 + Ui.EVENT_SYNTAX_STRING + \u0027\\n\u0027 + Ui.LINE);","lastModifiedDate":"2023-02-22"},{"lineNumber":141,"author":{"gitId":"ArtemiszenN"},"content":"                throw new IllegalCommandException(\"Illegal event command\");","lastModifiedDate":"2023-02-22"},{"lineNumber":142,"author":{"gitId":"ArtemiszenN"},"content":"            }","lastModifiedDate":"2023-02-22"},{"lineNumber":143,"author":{"gitId":"ArtemiszenN"},"content":"            tasks.add(new Event(command));","lastModifiedDate":"2023-02-22"},{"lineNumber":144,"author":{"gitId":"ArtemiszenN"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":145,"author":{"gitId":"ArtemiszenN"},"content":"        System.out.println(Ui.VALID_COMMAND_STRING);","lastModifiedDate":"2023-02-22"},{"lineNumber":146,"author":{"gitId":"ArtemiszenN"},"content":"        System.out.println(Ui.LINE + \u0027\\n\u0027 + Ui.TASK_ADDED_STRING + tasks.get(tasks.size()-1).toString() + \u0027\\n\u0027 + Ui.LINE);","lastModifiedDate":"2023-02-22"},{"lineNumber":147,"author":{"gitId":"ArtemiszenN"},"content":"        try{","lastModifiedDate":"2023-02-22"},{"lineNumber":148,"author":{"gitId":"ArtemiszenN"},"content":"            Storage.save();","lastModifiedDate":"2023-02-22"},{"lineNumber":149,"author":{"gitId":"ArtemiszenN"},"content":"        }catch(IOException e){","lastModifiedDate":"2023-02-22"},{"lineNumber":150,"author":{"gitId":"ArtemiszenN"},"content":"            System.out.println(Ui.SAVING_ERROR_STRING);","lastModifiedDate":"2023-02-22"},{"lineNumber":151,"author":{"gitId":"ArtemiszenN"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":152,"author":{"gitId":"ArtemiszenN"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":153,"author":{"gitId":"ArtemiszenN"},"content":"    /*","lastModifiedDate":"2023-02-22"},{"lineNumber":154,"author":{"gitId":"ArtemiszenN"},"content":"     * Finds the task specified by the user","lastModifiedDate":"2023-02-22"},{"lineNumber":155,"author":{"gitId":"ArtemiszenN"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":156,"author":{"gitId":"ArtemiszenN"},"content":"     * @param commands Set of commands from the user","lastModifiedDate":"2023-02-22"},{"lineNumber":157,"author":{"gitId":"ArtemiszenN"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":158,"author":{"gitId":"ArtemiszenN"},"content":"    private static void findTask(String[] commands){","lastModifiedDate":"2023-02-22"},{"lineNumber":159,"author":{"gitId":"ArtemiszenN"},"content":"        String keyword \u003d \"\";","lastModifiedDate":"2023-02-22"},{"lineNumber":160,"author":{"gitId":"ArtemiszenN"},"content":"        if(commands.length \u003c FIND_COMMAND_LENGTH){","lastModifiedDate":"2023-02-22"},{"lineNumber":161,"author":{"gitId":"ArtemiszenN"},"content":"            System.out.println(Ui.LINE);","lastModifiedDate":"2023-02-22"},{"lineNumber":162,"author":{"gitId":"ArtemiszenN"},"content":"            System.out.println(Ui.MISSING_FIND_KEYWORD_STRING);","lastModifiedDate":"2023-02-22"},{"lineNumber":163,"author":{"gitId":"ArtemiszenN"},"content":"            System.out.println(Ui.LINE);","lastModifiedDate":"2023-02-22"},{"lineNumber":164,"author":{"gitId":"ArtemiszenN"},"content":"            return;","lastModifiedDate":"2023-02-22"},{"lineNumber":165,"author":{"gitId":"ArtemiszenN"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":166,"author":{"gitId":"ArtemiszenN"},"content":"        for(int i \u003d 1; i \u003c commands.length ; i++){","lastModifiedDate":"2023-02-22"},{"lineNumber":167,"author":{"gitId":"ArtemiszenN"},"content":"            keyword+\u003dcommands[i];","lastModifiedDate":"2023-02-22"},{"lineNumber":168,"author":{"gitId":"ArtemiszenN"},"content":"            if(i \u003c commands.length - 1){","lastModifiedDate":"2023-02-22"},{"lineNumber":169,"author":{"gitId":"ArtemiszenN"},"content":"                keyword+\u003d\" \";","lastModifiedDate":"2023-02-22"},{"lineNumber":170,"author":{"gitId":"ArtemiszenN"},"content":"            }","lastModifiedDate":"2023-02-22"},{"lineNumber":171,"author":{"gitId":"ArtemiszenN"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":172,"author":{"gitId":"ArtemiszenN"},"content":"        int counter \u003d 1;","lastModifiedDate":"2023-02-22"},{"lineNumber":173,"author":{"gitId":"ArtemiszenN"},"content":"        System.out.println(Ui.LINE);","lastModifiedDate":"2023-02-22"},{"lineNumber":174,"author":{"gitId":"ArtemiszenN"},"content":"        System.out.println(Ui.VALID_COMMAND_STRING);","lastModifiedDate":"2023-02-22"},{"lineNumber":175,"author":{"gitId":"ArtemiszenN"},"content":"        System.out.println(Ui.TASKS_FOUND_STRING);","lastModifiedDate":"2023-02-22"},{"lineNumber":176,"author":{"gitId":"ArtemiszenN"},"content":"        for(int i \u003d 0; i \u003c tasks.size(); i++){","lastModifiedDate":"2023-02-22"},{"lineNumber":177,"author":{"gitId":"ArtemiszenN"},"content":"            if(tasks.get(i).getDescription().toLowerCase().contains(keyword.toLowerCase())){","lastModifiedDate":"2023-02-22"},{"lineNumber":178,"author":{"gitId":"ArtemiszenN"},"content":"                System.out.println(counter + \": \" + tasks.get(i).toString());","lastModifiedDate":"2023-02-22"},{"lineNumber":179,"author":{"gitId":"ArtemiszenN"},"content":"                counter++;","lastModifiedDate":"2023-02-22"},{"lineNumber":180,"author":{"gitId":"ArtemiszenN"},"content":"            }","lastModifiedDate":"2023-02-22"},{"lineNumber":181,"author":{"gitId":"ArtemiszenN"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":182,"author":{"gitId":"ArtemiszenN"},"content":"        System.out.println(Ui.LINE);","lastModifiedDate":"2023-02-22"},{"lineNumber":183,"author":{"gitId":"ArtemiszenN"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":184,"author":{"gitId":"ArtemiszenN"},"content":"    /*","lastModifiedDate":"2023-02-22"},{"lineNumber":185,"author":{"gitId":"ArtemiszenN"},"content":"     * Adds task without any output","lastModifiedDate":"2023-02-22"},{"lineNumber":186,"author":{"gitId":"ArtemiszenN"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":187,"author":{"gitId":"ArtemiszenN"},"content":"     * @param command Command string from the saved file","lastModifiedDate":"2023-02-22"},{"lineNumber":188,"author":{"gitId":"ArtemiszenN"},"content":"     * @throws IllegalCommandException if the command is invalid","lastModifiedDate":"2023-02-22"},{"lineNumber":189,"author":{"gitId":"ArtemiszenN"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":190,"author":{"gitId":"ArtemiszenN"},"content":"    public static void silentlyAddTask(String command) throws IllegalCommandException{","lastModifiedDate":"2023-02-22"},{"lineNumber":191,"author":{"gitId":"ArtemiszenN"},"content":"        Parser.taskType currentTaskType \u003d Parser.getTaskType(command);","lastModifiedDate":"2023-02-22"},{"lineNumber":192,"author":{"gitId":"ArtemiszenN"},"content":"        if(currentTaskType \u003d\u003d Parser.taskType.INVALID){","lastModifiedDate":"2023-02-22"},{"lineNumber":193,"author":{"gitId":"ArtemiszenN"},"content":"            throw new IllegalCommandException(\"Illegal task type\");","lastModifiedDate":"2023-02-22"},{"lineNumber":194,"author":{"gitId":"ArtemiszenN"},"content":"        }else if(currentTaskType \u003d\u003d Parser.taskType.TODO){","lastModifiedDate":"2023-02-22"},{"lineNumber":195,"author":{"gitId":"ArtemiszenN"},"content":"            if(command.split(\" \").length\u003c TODO_COMMAND_LENGTH){","lastModifiedDate":"2023-02-22"},{"lineNumber":196,"author":{"gitId":"ArtemiszenN"},"content":"                throw new IllegalCommandException(\"Illegal todo command\");","lastModifiedDate":"2023-02-22"},{"lineNumber":197,"author":{"gitId":"ArtemiszenN"},"content":"            }","lastModifiedDate":"2023-02-22"},{"lineNumber":198,"author":{"gitId":"ArtemiszenN"},"content":"            tasks.add(new Todo(command));","lastModifiedDate":"2023-02-22"},{"lineNumber":199,"author":{"gitId":"ArtemiszenN"},"content":"        }else if(currentTaskType \u003d\u003d Parser.taskType.DEADLINE){","lastModifiedDate":"2023-02-22"},{"lineNumber":200,"author":{"gitId":"ArtemiszenN"},"content":"            if(!command.contains(\"/by\")){","lastModifiedDate":"2023-02-22"},{"lineNumber":201,"author":{"gitId":"ArtemiszenN"},"content":"                throw new IllegalCommandException(\"Illegal deadline command\");","lastModifiedDate":"2023-02-22"},{"lineNumber":202,"author":{"gitId":"ArtemiszenN"},"content":"            }","lastModifiedDate":"2023-02-22"},{"lineNumber":203,"author":{"gitId":"ArtemiszenN"},"content":"            tasks.add(new Deadline(command));","lastModifiedDate":"2023-02-22"},{"lineNumber":204,"author":{"gitId":"ArtemiszenN"},"content":"        }else if(currentTaskType \u003d\u003d Parser.taskType.EVENT){","lastModifiedDate":"2023-02-22"},{"lineNumber":205,"author":{"gitId":"ArtemiszenN"},"content":"            if(!(command.contains(\"/from\")\u0026\u0026command.contains(\"/to\"))){","lastModifiedDate":"2023-02-22"},{"lineNumber":206,"author":{"gitId":"ArtemiszenN"},"content":"                throw new IllegalCommandException(\"Illegal event command\");","lastModifiedDate":"2023-02-22"},{"lineNumber":207,"author":{"gitId":"ArtemiszenN"},"content":"            }","lastModifiedDate":"2023-02-22"},{"lineNumber":208,"author":{"gitId":"ArtemiszenN"},"content":"            tasks.add(new Event(command));","lastModifiedDate":"2023-02-22"},{"lineNumber":209,"author":{"gitId":"ArtemiszenN"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":210,"author":{"gitId":"ArtemiszenN"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":211,"author":{"gitId":"ArtemiszenN"},"content":"    /*","lastModifiedDate":"2023-02-22"},{"lineNumber":212,"author":{"gitId":"ArtemiszenN"},"content":"     * Execute command specified by the command string","lastModifiedDate":"2023-02-22"},{"lineNumber":213,"author":{"gitId":"ArtemiszenN"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":214,"author":{"gitId":"ArtemiszenN"},"content":"     * @param command Command string from the user","lastModifiedDate":"2023-02-22"},{"lineNumber":215,"author":{"gitId":"ArtemiszenN"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":216,"author":{"gitId":"ArtemiszenN"},"content":"    public static void executeCommand(String command){","lastModifiedDate":"2023-02-22"},{"lineNumber":217,"author":{"gitId":"ArtemiszenN"},"content":"        if(command.equals(\"bye\")){","lastModifiedDate":"2023-02-22"},{"lineNumber":218,"author":{"gitId":"ArtemiszenN"},"content":"            System.out.println(Ui.LINE + \u0027\\n\u0027 + Ui.GOODBYE_STRING + \u0027\\n\u0027 + Ui.LINE);","lastModifiedDate":"2023-02-22"},{"lineNumber":219,"author":{"gitId":"ArtemiszenN"},"content":"            System.exit(0);","lastModifiedDate":"2023-02-22"},{"lineNumber":220,"author":{"gitId":"ArtemiszenN"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":221,"author":{"gitId":"ArtemiszenN"},"content":"        if(command.equals(\"list\")){","lastModifiedDate":"2023-02-22"},{"lineNumber":222,"author":{"gitId":"ArtemiszenN"},"content":"            printList();","lastModifiedDate":"2023-02-22"},{"lineNumber":223,"author":{"gitId":"ArtemiszenN"},"content":"        }else if(command.equals(\"help\")){","lastModifiedDate":"2023-02-22"},{"lineNumber":224,"author":{"gitId":"ArtemiszenN"},"content":"            Ui.printHelp();","lastModifiedDate":"2023-02-22"},{"lineNumber":225,"author":{"gitId":"ArtemiszenN"},"content":"        }else{","lastModifiedDate":"2023-02-22"},{"lineNumber":226,"author":{"gitId":"ArtemiszenN"},"content":"            String[] commands \u003d command.split(\" \");","lastModifiedDate":"2023-02-22"},{"lineNumber":227,"author":{"gitId":"ArtemiszenN"},"content":"            if(commands[0].equals(\"mark\")){","lastModifiedDate":"2023-02-22"},{"lineNumber":228,"author":{"gitId":"ArtemiszenN"},"content":"                setMarkedOrUnmarked(commands, true);","lastModifiedDate":"2023-02-22"},{"lineNumber":229,"author":{"gitId":"ArtemiszenN"},"content":"            }else if(commands[0].equals(\"unmark\")){","lastModifiedDate":"2023-02-22"},{"lineNumber":230,"author":{"gitId":"ArtemiszenN"},"content":"                setMarkedOrUnmarked(commands, false);","lastModifiedDate":"2023-02-22"},{"lineNumber":231,"author":{"gitId":"ArtemiszenN"},"content":"            }else if(commands[0].equals(\"delete\")){","lastModifiedDate":"2023-02-22"},{"lineNumber":232,"author":{"gitId":"ArtemiszenN"},"content":"                delete(commands);","lastModifiedDate":"2023-02-22"},{"lineNumber":233,"author":{"gitId":"ArtemiszenN"},"content":"            }else if(commands[0].equals(\"find\")){","lastModifiedDate":"2023-02-22"},{"lineNumber":234,"author":{"gitId":"ArtemiszenN"},"content":"                findTask(commands);","lastModifiedDate":"2023-02-22"},{"lineNumber":235,"author":{"gitId":"ArtemiszenN"},"content":"            }else{","lastModifiedDate":"2023-02-22"},{"lineNumber":236,"author":{"gitId":"ArtemiszenN"},"content":"                try{","lastModifiedDate":"2023-02-22"},{"lineNumber":237,"author":{"gitId":"ArtemiszenN"},"content":"                    addTask(command);","lastModifiedDate":"2023-02-22"},{"lineNumber":238,"author":{"gitId":"ArtemiszenN"},"content":"                }catch (IllegalCommandException e){","lastModifiedDate":"2023-02-22"},{"lineNumber":239,"author":{"gitId":"ArtemiszenN"},"content":"                    System.out.println(Ui.INVALID_COMMAND_STRING);","lastModifiedDate":"2023-02-22"},{"lineNumber":240,"author":{"gitId":"ArtemiszenN"},"content":"                    return;","lastModifiedDate":"2023-02-22"},{"lineNumber":241,"author":{"gitId":"ArtemiszenN"},"content":"                }","lastModifiedDate":"2023-02-22"},{"lineNumber":242,"author":{"gitId":"ArtemiszenN"},"content":"            }","lastModifiedDate":"2023-02-22"},{"lineNumber":243,"author":{"gitId":"ArtemiszenN"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":244,"author":{"gitId":"ArtemiszenN"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":245,"author":{"gitId":"ArtemiszenN"},"content":"    /*","lastModifiedDate":"2023-02-22"},{"lineNumber":246,"author":{"gitId":"ArtemiszenN"},"content":"     * Prints all tasks","lastModifiedDate":"2023-02-22"},{"lineNumber":247,"author":{"gitId":"ArtemiszenN"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":248,"author":{"gitId":"ArtemiszenN"},"content":"    public static void printList(){","lastModifiedDate":"2023-02-22"},{"lineNumber":249,"author":{"gitId":"ArtemiszenN"},"content":"        System.out.println(Ui.LINE);","lastModifiedDate":"2023-02-22"},{"lineNumber":250,"author":{"gitId":"ArtemiszenN"},"content":"        System.out.println(Ui.VALID_COMMAND_STRING);","lastModifiedDate":"2023-02-22"},{"lineNumber":251,"author":{"gitId":"ArtemiszenN"},"content":"        for(int i\u003d0; i\u003ctasks.size(); i++){","lastModifiedDate":"2023-02-22"},{"lineNumber":252,"author":{"gitId":"ArtemiszenN"},"content":"            System.out.print(i + 1 + \":\");","lastModifiedDate":"2023-02-22"},{"lineNumber":253,"author":{"gitId":"ArtemiszenN"},"content":"            System.out.println(tasks.get(i).toString());","lastModifiedDate":"2023-02-22"},{"lineNumber":254,"author":{"gitId":"ArtemiszenN"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":255,"author":{"gitId":"ArtemiszenN"},"content":"        System.out.println(Ui.LINE);","lastModifiedDate":"2023-02-22"},{"lineNumber":256,"author":{"gitId":"ArtemiszenN"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":257,"author":{"gitId":"ArtemiszenN"},"content":"    /*","lastModifiedDate":"2023-02-22"},{"lineNumber":258,"author":{"gitId":"ArtemiszenN"},"content":"     * Sets the last task in the task lists as done or not done","lastModifiedDate":"2023-02-22"},{"lineNumber":259,"author":{"gitId":"ArtemiszenN"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":260,"author":{"gitId":"ArtemiszenN"},"content":"     * @param isDone When true, the task is set as done, else the task is set as not done","lastModifiedDate":"2023-02-22"},{"lineNumber":261,"author":{"gitId":"ArtemiszenN"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":262,"author":{"gitId":"ArtemiszenN"},"content":"    public static void setLastTaskMarkedOrUnmarked(boolean isDone){","lastModifiedDate":"2023-02-22"},{"lineNumber":263,"author":{"gitId":"ArtemiszenN"},"content":"        try{","lastModifiedDate":"2023-02-22"},{"lineNumber":264,"author":{"gitId":"ArtemiszenN"},"content":"            tasks.get(tasks.size()-1).setDone(isDone);","lastModifiedDate":"2023-02-22"},{"lineNumber":265,"author":{"gitId":"ArtemiszenN"},"content":"        }catch(Exception e){","lastModifiedDate":"2023-02-22"},{"lineNumber":266,"author":{"gitId":"ArtemiszenN"},"content":"            return;","lastModifiedDate":"2023-02-22"},{"lineNumber":267,"author":{"gitId":"ArtemiszenN"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":268,"author":{"gitId":"ArtemiszenN"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":269,"author":{"gitId":"ArtemiszenN"},"content":"    /*","lastModifiedDate":"2023-02-22"},{"lineNumber":270,"author":{"gitId":"ArtemiszenN"},"content":"     * Retrieves an arraylist of commands used to initialise tasks from all tasks","lastModifiedDate":"2023-02-22"},{"lineNumber":271,"author":{"gitId":"ArtemiszenN"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":272,"author":{"gitId":"ArtemiszenN"},"content":"     * @return Arraylist of save file strings","lastModifiedDate":"2023-02-22"},{"lineNumber":273,"author":{"gitId":"ArtemiszenN"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":274,"author":{"gitId":"ArtemiszenN"},"content":"    public static ArrayList\u003cString\u003e getSaveStrings(){","lastModifiedDate":"2023-02-22"},{"lineNumber":275,"author":{"gitId":"ArtemiszenN"},"content":"        ArrayList\u003cString\u003e saveStrings \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-22"},{"lineNumber":276,"author":{"gitId":"ArtemiszenN"},"content":"        for(Task t: tasks){","lastModifiedDate":"2023-02-22"},{"lineNumber":277,"author":{"gitId":"ArtemiszenN"},"content":"            saveStrings.add(t.getSaveString());","lastModifiedDate":"2023-02-22"},{"lineNumber":278,"author":{"gitId":"ArtemiszenN"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":279,"author":{"gitId":"ArtemiszenN"},"content":"        return saveStrings;","lastModifiedDate":"2023-02-22"},{"lineNumber":280,"author":{"gitId":"ArtemiszenN"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":281,"author":{"gitId":"ArtemiszenN"},"content":"}","lastModifiedDate":"2023-02-22"}],"authorContributionMap":{"ArtemiszenN":281}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ArtemiszenN"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-22"},{"lineNumber":2,"author":{"gitId":"ArtemiszenN"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":3,"author":{"gitId":"ArtemiszenN"},"content":"public class Ui {","lastModifiedDate":"2023-02-22"},{"lineNumber":4,"author":{"gitId":"ArtemiszenN"},"content":"    public static final String MISSING_FIND_KEYWORD_STRING \u003d \"Missing find keyword.\";","lastModifiedDate":"2023-02-22"},{"lineNumber":5,"author":{"gitId":"ArtemiszenN"},"content":"    public static final String LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-02-22"},{"lineNumber":6,"author":{"gitId":"ArtemiszenN"},"content":"    public static final String INVALID_COMMAND_STRING \u003d \"One hour of lifespan has been deducted,\"","lastModifiedDate":"2023-02-22"},{"lineNumber":7,"author":{"gitId":"ArtemiszenN"},"content":"            + \" in accordance with our Terms and Services.\";","lastModifiedDate":"2023-02-22"},{"lineNumber":8,"author":{"gitId":"ArtemiszenN"},"content":"    public static final String VALID_COMMAND_STRING \u003d \"Command acknowledged. Reducing user lifespan\"","lastModifiedDate":"2023-02-22"},{"lineNumber":9,"author":{"gitId":"ArtemiszenN"},"content":"            + \" by 30 minutes.\";","lastModifiedDate":"2023-02-22"},{"lineNumber":10,"author":{"gitId":"ArtemiszenN"},"content":"    public static final String INVALID_MARK_LENGTH_STRING \u003d \"Please only input \\\"mark\\\" followed by an integer.\";","lastModifiedDate":"2023-02-22"},{"lineNumber":11,"author":{"gitId":"ArtemiszenN"},"content":"    public static final String INVALID_UNMARK_LENGTH_STRING \u003d \"Please only input \\\"unmark\\\" followed by an integer.\";","lastModifiedDate":"2023-02-22"},{"lineNumber":12,"author":{"gitId":"ArtemiszenN"},"content":"    public static final String LOGO \u003d","lastModifiedDate":"2023-02-22"},{"lineNumber":13,"author":{"gitId":"ArtemiszenN"},"content":"            \"    // | |     //   ) )  // | |  \\\\\\\\ / / \\\\\\\\    / / //   ) )\\n\"","lastModifiedDate":"2023-02-22"},{"lineNumber":14,"author":{"gitId":"ArtemiszenN"},"content":"                    + \"   //__| |    //___/ /  //__| |   \\\\  /   \\\\\\\\  / / ((\\n\"","lastModifiedDate":"2023-02-22"},{"lineNumber":15,"author":{"gitId":"ArtemiszenN"},"content":"                    + \"  / ___  |   / ___ (   / ___  |   / /     \\\\\\\\/ /    \\\\\\\\\\n\"","lastModifiedDate":"2023-02-22"},{"lineNumber":16,"author":{"gitId":"ArtemiszenN"},"content":"                    + \" //    | |  //   | |  //    | |  / /\\\\\\\\     / /       ) )\\n\"","lastModifiedDate":"2023-02-22"},{"lineNumber":17,"author":{"gitId":"ArtemiszenN"},"content":"                    + \"//     | | //    | | //     | | / /  \\\\\\\\   / / ((___ / /\";","lastModifiedDate":"2023-02-22"},{"lineNumber":18,"author":{"gitId":"ArtemiszenN"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":19,"author":{"gitId":"ArtemiszenN"},"content":"    public static final String ALREADY_MARKED_STRING \u003d \"The task specified is already marked.\";","lastModifiedDate":"2023-02-22"},{"lineNumber":20,"author":{"gitId":"ArtemiszenN"},"content":"    public static final String ALREADY_UNMARKED_STRING \u003d \"The task specified is already unmarked.\";","lastModifiedDate":"2023-02-22"},{"lineNumber":21,"author":{"gitId":"ArtemiszenN"},"content":"    public static final String MARKED_AS_COMPLETED_STRING \u003d \"Task has been marked as: completed\";","lastModifiedDate":"2023-02-22"},{"lineNumber":22,"author":{"gitId":"ArtemiszenN"},"content":"    public static final String MARKED_AS_NOT_COMPLETED_STRING \u003d \"Task has been marked as: not completed\";","lastModifiedDate":"2023-02-22"},{"lineNumber":23,"author":{"gitId":"ArtemiszenN"},"content":"    public static final String NONNUMERIC_INDEX_STRING \u003d \"Sorry, index is not numeric.\";","lastModifiedDate":"2023-02-22"},{"lineNumber":24,"author":{"gitId":"ArtemiszenN"},"content":"    public static final String INVALID_INDEX_STRING \u003d \"Sorry, index is invalid.\";","lastModifiedDate":"2023-02-22"},{"lineNumber":25,"author":{"gitId":"ArtemiszenN"},"content":"    public static final String SAVING_ERROR_STRING \u003d \"There was an error in saving.\";","lastModifiedDate":"2023-02-22"},{"lineNumber":26,"author":{"gitId":"ArtemiszenN"},"content":"    public static final String INVALID_DELETE_COMMAND_STRING \u003d \"Please only input \\\"delete\\\" followed by an integer.\";","lastModifiedDate":"2023-02-22"},{"lineNumber":27,"author":{"gitId":"ArtemiszenN"},"content":"    public static final String TASK_DELETED_STRING \u003d \"Task has been deleted:\";","lastModifiedDate":"2023-02-22"},{"lineNumber":28,"author":{"gitId":"ArtemiszenN"},"content":"    public static final String INVALID_TASK_TYPE_STRING \u003d \"Invalid task type specified.\";","lastModifiedDate":"2023-02-22"},{"lineNumber":29,"author":{"gitId":"ArtemiszenN"},"content":"    public static final String TODO_SYNTAX_STRING \u003d \"Syntax: todo {task}\";","lastModifiedDate":"2023-02-22"},{"lineNumber":30,"author":{"gitId":"ArtemiszenN"},"content":"    public static final String DEADLINE_SYNTAX_STRING \u003d \"Syntax: deadline {task} /by [endDate]\";","lastModifiedDate":"2023-02-22"},{"lineNumber":31,"author":{"gitId":"ArtemiszenN"},"content":"    public static final String EVENT_SYNTAX_STRING \u003d \"Syntax: event {task} /from [startDate] /to [endDate]\";","lastModifiedDate":"2023-02-22"},{"lineNumber":32,"author":{"gitId":"ArtemiszenN"},"content":"    public static final String TASK_ADDED_STRING \u003d \"New task has been added: \";","lastModifiedDate":"2023-02-22"},{"lineNumber":33,"author":{"gitId":"ArtemiszenN"},"content":"    public static final String GOODBYE_STRING \u003d \"Goodbye. To reach customer service, just look outside your window.\";","lastModifiedDate":"2023-02-22"},{"lineNumber":34,"author":{"gitId":"ArtemiszenN"},"content":"    public static final String LIST_DESCRIPTION_STRING \u003d \"list: lists out all current items and their current status.\";","lastModifiedDate":"2023-02-22"},{"lineNumber":35,"author":{"gitId":"ArtemiszenN"},"content":"    public static final String LIST_SYNTAX_STRING \u003d \"Syntax: list\";","lastModifiedDate":"2023-02-22"},{"lineNumber":36,"author":{"gitId":"ArtemiszenN"},"content":"    public static final String TODO_DESCRIPTION_STRING \u003d \"todo: adds a todo task.\";","lastModifiedDate":"2023-02-22"},{"lineNumber":37,"author":{"gitId":"ArtemiszenN"},"content":"    public static final String DEADLINE_DESCRIPTION_STRING \u003d \"deadline: adds a deadline task.\";","lastModifiedDate":"2023-02-22"},{"lineNumber":38,"author":{"gitId":"ArtemiszenN"},"content":"    public static final String EVENT_DESCRIPTION_STRING \u003d \"event: adds an event task.\";","lastModifiedDate":"2023-02-22"},{"lineNumber":39,"author":{"gitId":"ArtemiszenN"},"content":"    public static final String MARK_DESCRIPTION_STRING \u003d \"mark: marks a task as done.\";","lastModifiedDate":"2023-02-22"},{"lineNumber":40,"author":{"gitId":"ArtemiszenN"},"content":"    public static final String MARK_SYNTAX_STRING \u003d \"Syntax: mark {index}\";","lastModifiedDate":"2023-02-22"},{"lineNumber":41,"author":{"gitId":"ArtemiszenN"},"content":"    public static final String UNMARK_DESCRIPTION_STRING \u003d \"unmark: marks a task as not done.\";","lastModifiedDate":"2023-02-22"},{"lineNumber":42,"author":{"gitId":"ArtemiszenN"},"content":"    public static final String UNMARK_SYNTAX_STRING \u003d \"Syntax: unmark {index}\";","lastModifiedDate":"2023-02-22"},{"lineNumber":43,"author":{"gitId":"ArtemiszenN"},"content":"    public static final String DELETE_DESCRIPTION_STRING \u003d \"delete: deletes an event.\";","lastModifiedDate":"2023-02-22"},{"lineNumber":44,"author":{"gitId":"ArtemiszenN"},"content":"    public static final String DELETE_SYNTAX_STRING \u003d \"Syntax: delete {index}\";","lastModifiedDate":"2023-02-22"},{"lineNumber":45,"author":{"gitId":"ArtemiszenN"},"content":"    public static final String HELP_DESCRIPTION_STRING \u003d \"help: brings you here.\";","lastModifiedDate":"2023-02-22"},{"lineNumber":46,"author":{"gitId":"ArtemiszenN"},"content":"    public static final String HELP_SYNTAX_STRING \u003d \"Syntax: help\";","lastModifiedDate":"2023-02-22"},{"lineNumber":47,"author":{"gitId":"ArtemiszenN"},"content":"    public static final String EXIT_DESCRIPTION_STRING \u003d \"bye: exits the program.\";","lastModifiedDate":"2023-02-22"},{"lineNumber":48,"author":{"gitId":"ArtemiszenN"},"content":"    public static final String EXIT_SYNTAX_STRING \u003d \"Syntax: bye\";","lastModifiedDate":"2023-02-22"},{"lineNumber":49,"author":{"gitId":"ArtemiszenN"},"content":"    public static final String LOADING_SYSTEM_ERROR_STRING \u003d \"There was an system error in loading.\";","lastModifiedDate":"2023-02-22"},{"lineNumber":50,"author":{"gitId":"ArtemiszenN"},"content":"    public static final String LOADING_PROGRAM_ERROR_STRING \u003d \"There was a program error in loading. 3 hours of \"","lastModifiedDate":"2023-02-22"},{"lineNumber":51,"author":{"gitId":"ArtemiszenN"},"content":"            + \"lifetime have been added for your inconvenience.\";","lastModifiedDate":"2023-02-22"},{"lineNumber":52,"author":{"gitId":"ArtemiszenN"},"content":"    public static final String TASKS_FOUND_STRING \u003d \"Here are the tasks that we have found:\";","lastModifiedDate":"2023-02-22"},{"lineNumber":53,"author":{"gitId":"ArtemiszenN"},"content":"    public static final String FIND_DESCRIPTION_STRING \u003d \"find: finds any item with the keywords in the description.\";","lastModifiedDate":"2023-02-22"},{"lineNumber":54,"author":{"gitId":"ArtemiszenN"},"content":"    public static final String FIND_SYNTAX_STRING \u003d \"Syntax: find {keywords}\";","lastModifiedDate":"2023-02-22"},{"lineNumber":55,"author":{"gitId":"ArtemiszenN"},"content":"    private static Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-22"},{"lineNumber":56,"author":{"gitId":"ArtemiszenN"},"content":"    /*","lastModifiedDate":"2023-02-22"},{"lineNumber":57,"author":{"gitId":"ArtemiszenN"},"content":"     * Takes in the next command","lastModifiedDate":"2023-02-22"},{"lineNumber":58,"author":{"gitId":"ArtemiszenN"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":59,"author":{"gitId":"ArtemiszenN"},"content":"     * @return Command string from the user","lastModifiedDate":"2023-02-22"},{"lineNumber":60,"author":{"gitId":"ArtemiszenN"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":61,"author":{"gitId":"ArtemiszenN"},"content":"    public static String getCommand(){","lastModifiedDate":"2023-02-22"},{"lineNumber":62,"author":{"gitId":"ArtemiszenN"},"content":"        return in.nextLine().trim();","lastModifiedDate":"2023-02-22"},{"lineNumber":63,"author":{"gitId":"ArtemiszenN"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":64,"author":{"gitId":"ArtemiszenN"},"content":"    /*","lastModifiedDate":"2023-02-22"},{"lineNumber":65,"author":{"gitId":"ArtemiszenN"},"content":"     * Prints the help section that displays command usage and syntax","lastModifiedDate":"2023-02-22"},{"lineNumber":66,"author":{"gitId":"ArtemiszenN"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":67,"author":{"gitId":"ArtemiszenN"},"content":"    public static void printHelp(){","lastModifiedDate":"2023-02-22"},{"lineNumber":68,"author":{"gitId":"ArtemiszenN"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-02-22"},{"lineNumber":69,"author":{"gitId":"ArtemiszenN"},"content":"        System.out.println(LIST_DESCRIPTION_STRING);","lastModifiedDate":"2023-02-22"},{"lineNumber":70,"author":{"gitId":"ArtemiszenN"},"content":"        System.out.println(LIST_SYNTAX_STRING);","lastModifiedDate":"2023-02-22"},{"lineNumber":71,"author":{"gitId":"ArtemiszenN"},"content":"        System.out.println(TODO_DESCRIPTION_STRING);","lastModifiedDate":"2023-02-22"},{"lineNumber":72,"author":{"gitId":"ArtemiszenN"},"content":"        System.out.println(TODO_SYNTAX_STRING);","lastModifiedDate":"2023-02-22"},{"lineNumber":73,"author":{"gitId":"ArtemiszenN"},"content":"        System.out.println(DEADLINE_DESCRIPTION_STRING);","lastModifiedDate":"2023-02-22"},{"lineNumber":74,"author":{"gitId":"ArtemiszenN"},"content":"        System.out.println(DEADLINE_SYNTAX_STRING);","lastModifiedDate":"2023-02-22"},{"lineNumber":75,"author":{"gitId":"ArtemiszenN"},"content":"        System.out.println(EVENT_DESCRIPTION_STRING);","lastModifiedDate":"2023-02-22"},{"lineNumber":76,"author":{"gitId":"ArtemiszenN"},"content":"        System.out.println(EVENT_SYNTAX_STRING);","lastModifiedDate":"2023-02-22"},{"lineNumber":77,"author":{"gitId":"ArtemiszenN"},"content":"        System.out.println(MARK_DESCRIPTION_STRING);","lastModifiedDate":"2023-02-22"},{"lineNumber":78,"author":{"gitId":"ArtemiszenN"},"content":"        System.out.println(MARK_SYNTAX_STRING);","lastModifiedDate":"2023-02-22"},{"lineNumber":79,"author":{"gitId":"ArtemiszenN"},"content":"        System.out.println(UNMARK_DESCRIPTION_STRING);","lastModifiedDate":"2023-02-22"},{"lineNumber":80,"author":{"gitId":"ArtemiszenN"},"content":"        System.out.println(UNMARK_SYNTAX_STRING);","lastModifiedDate":"2023-02-22"},{"lineNumber":81,"author":{"gitId":"ArtemiszenN"},"content":"        System.out.println(DELETE_DESCRIPTION_STRING);","lastModifiedDate":"2023-02-22"},{"lineNumber":82,"author":{"gitId":"ArtemiszenN"},"content":"        System.out.println(DELETE_SYNTAX_STRING);","lastModifiedDate":"2023-02-22"},{"lineNumber":83,"author":{"gitId":"ArtemiszenN"},"content":"        System.out.println(HELP_DESCRIPTION_STRING);","lastModifiedDate":"2023-02-22"},{"lineNumber":84,"author":{"gitId":"ArtemiszenN"},"content":"        System.out.println(HELP_SYNTAX_STRING);","lastModifiedDate":"2023-02-22"},{"lineNumber":85,"author":{"gitId":"ArtemiszenN"},"content":"        System.out.println(EXIT_DESCRIPTION_STRING);","lastModifiedDate":"2023-02-22"},{"lineNumber":86,"author":{"gitId":"ArtemiszenN"},"content":"        System.out.println(EXIT_SYNTAX_STRING);","lastModifiedDate":"2023-02-22"},{"lineNumber":87,"author":{"gitId":"ArtemiszenN"},"content":"        System.out.println(FIND_DESCRIPTION_STRING);","lastModifiedDate":"2023-02-22"},{"lineNumber":88,"author":{"gitId":"ArtemiszenN"},"content":"        System.out.println(FIND_SYNTAX_STRING);","lastModifiedDate":"2023-02-22"},{"lineNumber":89,"author":{"gitId":"ArtemiszenN"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-02-22"},{"lineNumber":90,"author":{"gitId":"ArtemiszenN"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":91,"author":{"gitId":"ArtemiszenN"},"content":"    /*","lastModifiedDate":"2023-02-22"},{"lineNumber":92,"author":{"gitId":"ArtemiszenN"},"content":"     * Greets the user with welcome messages and the logo.","lastModifiedDate":"2023-02-22"},{"lineNumber":93,"author":{"gitId":"ArtemiszenN"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":94,"author":{"gitId":"ArtemiszenN"},"content":"    public static void greet() {","lastModifiedDate":"2023-02-22"},{"lineNumber":95,"author":{"gitId":"ArtemiszenN"},"content":"        System.out.println(LINE+\u0027\\n\u0027+LOGO+\u0027\\n\u0027+LINE);","lastModifiedDate":"2023-02-22"},{"lineNumber":96,"author":{"gitId":"ArtemiszenN"},"content":"        System.out.println(\"Welcome to Araxys Systems, the only system powered by LifeForceâ„¢\");","lastModifiedDate":"2023-02-22"},{"lineNumber":97,"author":{"gitId":"ArtemiszenN"},"content":"        System.out.println(\"How may I help you today?\");","lastModifiedDate":"2023-02-22"},{"lineNumber":98,"author":{"gitId":"ArtemiszenN"},"content":"        System.out.println(\"Type \\\"help\\\" to get help.\");","lastModifiedDate":"2023-02-22"},{"lineNumber":99,"author":{"gitId":"ArtemiszenN"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-02-22"},{"lineNumber":100,"author":{"gitId":"ArtemiszenN"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":101,"author":{"gitId":"ArtemiszenN"},"content":"}","lastModifiedDate":"2023-02-22"}],"authorContributionMap":{"ArtemiszenN":101}},{"path":"src/main/java/duke/exception/IllegalCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ArtemiszenN"},"content":"package duke.exception;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"ArtemiszenN"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"ArtemiszenN"},"content":"public class IllegalCommandException extends Exception{","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"ArtemiszenN"},"content":"    public IllegalCommandException(String str){","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"ArtemiszenN"},"content":"        super(str);","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"ArtemiszenN"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"ArtemiszenN"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"ArtemiszenN":7}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ArtemiszenN"},"content":"package duke.task;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"ArtemiszenN"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"ArtemiszenN"},"content":"public class Deadline extends Task{","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"ArtemiszenN"},"content":"    /*","lastModifiedDate":"2023-02-22"},{"lineNumber":5,"author":{"gitId":"ArtemiszenN"},"content":"     * Gets the date/time the deadline ends","lastModifiedDate":"2023-02-22"},{"lineNumber":6,"author":{"gitId":"ArtemiszenN"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":7,"author":{"gitId":"ArtemiszenN"},"content":"     * @return date/time string","lastModifiedDate":"2023-02-22"},{"lineNumber":8,"author":{"gitId":"ArtemiszenN"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":9,"author":{"gitId":"ArtemiszenN"},"content":"    public String getEndDate() {","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"ArtemiszenN"},"content":"        return endDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"ArtemiszenN"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"ArtemiszenN"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"ArtemiszenN"},"content":"    /*","lastModifiedDate":"2023-02-22"},{"lineNumber":14,"author":{"gitId":"ArtemiszenN"},"content":"     * Sets the date/time the deadline ends","lastModifiedDate":"2023-02-22"},{"lineNumber":15,"author":{"gitId":"ArtemiszenN"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":16,"author":{"gitId":"ArtemiszenN"},"content":"     * @param endDate Date/time string the deadline ends","lastModifiedDate":"2023-02-22"},{"lineNumber":17,"author":{"gitId":"ArtemiszenN"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":18,"author":{"gitId":"ArtemiszenN"},"content":"    public void setEndDate(String endDate) {","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"ArtemiszenN"},"content":"        this.endDate \u003d parseDateTimeString(endDate);","lastModifiedDate":"2023-02-21"},{"lineNumber":20,"author":{"gitId":"ArtemiszenN"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"ArtemiszenN"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"ArtemiszenN"},"content":"    private String endDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"ArtemiszenN"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":24,"author":{"gitId":"ArtemiszenN"},"content":"    /*","lastModifiedDate":"2023-02-22"},{"lineNumber":25,"author":{"gitId":"ArtemiszenN"},"content":"     * Initialises the deadline from the user command","lastModifiedDate":"2023-02-22"},{"lineNumber":26,"author":{"gitId":"ArtemiszenN"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":27,"author":{"gitId":"ArtemiszenN"},"content":"     * @param command User command","lastModifiedDate":"2023-02-22"},{"lineNumber":28,"author":{"gitId":"ArtemiszenN"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":29,"author":{"gitId":"ArtemiszenN"},"content":"    public Deadline(String command){","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"ArtemiszenN"},"content":"        super();","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"ArtemiszenN"},"content":"        setInitCommand(command);","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"ArtemiszenN"},"content":"        setDescription(command.substring(command.indexOf(\" \"), command.indexOf(\"/by\")).trim());","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"ArtemiszenN"},"content":"        setEndDate(command.substring(command.indexOf(\"/by\") + 3).trim());","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"ArtemiszenN"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"ArtemiszenN"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":36,"author":{"gitId":"ArtemiszenN"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"ArtemiszenN"},"content":"    /*","lastModifiedDate":"2023-02-22"},{"lineNumber":38,"author":{"gitId":"ArtemiszenN"},"content":"     * Gets a printable formatted string of the deadline","lastModifiedDate":"2023-02-22"},{"lineNumber":39,"author":{"gitId":"ArtemiszenN"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":40,"author":{"gitId":"ArtemiszenN"},"content":"     * @return String of the deadline","lastModifiedDate":"2023-02-22"},{"lineNumber":41,"author":{"gitId":"ArtemiszenN"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":42,"author":{"gitId":"ArtemiszenN"},"content":"    public String toString(){","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"ArtemiszenN"},"content":"        return \"[D][\" + (isDone() ? \u0027X\u0027 : \u0027 \u0027) + \"]//////\" + super.toString() + \" (by: \" + getEndDate() + \u0027)\u0027;","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"ArtemiszenN"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"ArtemiszenN"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"ArtemiszenN":45}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ArtemiszenN"},"content":"package duke.task;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"ArtemiszenN"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"ArtemiszenN"},"content":"public class Event extends Task{","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"ArtemiszenN"},"content":"    private String startDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"ArtemiszenN"},"content":"    private String endDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"ArtemiszenN"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"ArtemiszenN"},"content":"    /*","lastModifiedDate":"2023-02-22"},{"lineNumber":8,"author":{"gitId":"ArtemiszenN"},"content":"     * Returns the start date/time of the event","lastModifiedDate":"2023-02-22"},{"lineNumber":9,"author":{"gitId":"ArtemiszenN"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":10,"author":{"gitId":"ArtemiszenN"},"content":"     * @return Start date/time string of the event","lastModifiedDate":"2023-02-22"},{"lineNumber":11,"author":{"gitId":"ArtemiszenN"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":12,"author":{"gitId":"ArtemiszenN"},"content":"    public String getStartDate() {","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"ArtemiszenN"},"content":"        return startDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"ArtemiszenN"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"ArtemiszenN"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"ArtemiszenN"},"content":"    /*","lastModifiedDate":"2023-02-22"},{"lineNumber":17,"author":{"gitId":"ArtemiszenN"},"content":"     * Sets the start date/time of the event","lastModifiedDate":"2023-02-22"},{"lineNumber":18,"author":{"gitId":"ArtemiszenN"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":19,"author":{"gitId":"ArtemiszenN"},"content":"     * @param startDate String start date/time of the event","lastModifiedDate":"2023-02-22"},{"lineNumber":20,"author":{"gitId":"ArtemiszenN"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":21,"author":{"gitId":"ArtemiszenN"},"content":"    public void setStartDate(String startDate) {","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"ArtemiszenN"},"content":"        this.startDate \u003d parseDateTimeString(startDate);","lastModifiedDate":"2023-02-21"},{"lineNumber":23,"author":{"gitId":"ArtemiszenN"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"ArtemiszenN"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"ArtemiszenN"},"content":"    /*","lastModifiedDate":"2023-02-22"},{"lineNumber":26,"author":{"gitId":"ArtemiszenN"},"content":"     * Gets the end date/time of the event","lastModifiedDate":"2023-02-22"},{"lineNumber":27,"author":{"gitId":"ArtemiszenN"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":28,"author":{"gitId":"ArtemiszenN"},"content":"     * @return End date/time string of the event","lastModifiedDate":"2023-02-22"},{"lineNumber":29,"author":{"gitId":"ArtemiszenN"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":30,"author":{"gitId":"ArtemiszenN"},"content":"    public String getEndDate() {","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"ArtemiszenN"},"content":"        return endDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"ArtemiszenN"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"ArtemiszenN"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"ArtemiszenN"},"content":"    /*","lastModifiedDate":"2023-02-22"},{"lineNumber":35,"author":{"gitId":"ArtemiszenN"},"content":"     * Sets the end date/time of the event","lastModifiedDate":"2023-02-22"},{"lineNumber":36,"author":{"gitId":"ArtemiszenN"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":37,"author":{"gitId":"ArtemiszenN"},"content":"     * @param startDate String end date/time of the event","lastModifiedDate":"2023-02-22"},{"lineNumber":38,"author":{"gitId":"ArtemiszenN"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":39,"author":{"gitId":"ArtemiszenN"},"content":"    public void setEndDate(String endDate) {","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"ArtemiszenN"},"content":"        this.endDate \u003d parseDateTimeString(endDate);","lastModifiedDate":"2023-02-21"},{"lineNumber":41,"author":{"gitId":"ArtemiszenN"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"ArtemiszenN"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":43,"author":{"gitId":"ArtemiszenN"},"content":"    /*","lastModifiedDate":"2023-02-22"},{"lineNumber":44,"author":{"gitId":"ArtemiszenN"},"content":"     * Initialises the event from the user command","lastModifiedDate":"2023-02-22"},{"lineNumber":45,"author":{"gitId":"ArtemiszenN"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":46,"author":{"gitId":"ArtemiszenN"},"content":"     * @param command User command","lastModifiedDate":"2023-02-22"},{"lineNumber":47,"author":{"gitId":"ArtemiszenN"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":48,"author":{"gitId":"ArtemiszenN"},"content":"    public Event(String command){","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"ArtemiszenN"},"content":"        super();","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"ArtemiszenN"},"content":"        setInitCommand(command);","lastModifiedDate":"2023-02-11"},{"lineNumber":51,"author":{"gitId":"ArtemiszenN"},"content":"        setDescription(command.substring(command.indexOf(\" \"), command.indexOf(\"/from\")).trim());","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"ArtemiszenN"},"content":"        setStartDate(command.substring(command.indexOf(\"/from\") + 5, command.indexOf(\"/to\")).trim());","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"ArtemiszenN"},"content":"        setEndDate(command.substring(command.indexOf(\"/to\") + 3).trim());","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"ArtemiszenN"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"ArtemiszenN"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"ArtemiszenN"},"content":"    /*","lastModifiedDate":"2023-02-22"},{"lineNumber":57,"author":{"gitId":"ArtemiszenN"},"content":"     * Gets a printable formatted string of the event","lastModifiedDate":"2023-02-22"},{"lineNumber":58,"author":{"gitId":"ArtemiszenN"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":59,"author":{"gitId":"ArtemiszenN"},"content":"     * @return String of the event","lastModifiedDate":"2023-02-22"},{"lineNumber":60,"author":{"gitId":"ArtemiszenN"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":61,"author":{"gitId":"ArtemiszenN"},"content":"    public String toString(){","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"ArtemiszenN"},"content":"        return \"[E][\" + (isDone() ? \u0027X\u0027 : \u0027 \u0027) + \"]//////\" + super.toString() + \" (from: \" + getStartDate()","lastModifiedDate":"2023-02-21"},{"lineNumber":63,"author":{"gitId":"ArtemiszenN"},"content":"                + \" to: \" + getEndDate() + \u0027)\u0027;","lastModifiedDate":"2023-02-21"},{"lineNumber":64,"author":{"gitId":"ArtemiszenN"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"ArtemiszenN"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"ArtemiszenN":65}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ArtemiszenN"},"content":"package duke.task;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"ArtemiszenN"},"content":"import duke.exception.IllegalCommandException;","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"ArtemiszenN"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-21"},{"lineNumber":4,"author":{"gitId":"ArtemiszenN"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-02-21"},{"lineNumber":5,"author":{"gitId":"ArtemiszenN"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"ArtemiszenN"},"content":"public class Task {","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"ArtemiszenN"},"content":"    private String description;","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"ArtemiszenN"},"content":"    private boolean isDone;","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"ArtemiszenN"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"ArtemiszenN"},"content":"    /*","lastModifiedDate":"2023-02-22"},{"lineNumber":11,"author":{"gitId":"ArtemiszenN"},"content":"     * Gets command used to initialise the task","lastModifiedDate":"2023-02-22"},{"lineNumber":12,"author":{"gitId":"ArtemiszenN"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":13,"author":{"gitId":"ArtemiszenN"},"content":"     * @return Returns the initialisation command","lastModifiedDate":"2023-02-22"},{"lineNumber":14,"author":{"gitId":"ArtemiszenN"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":15,"author":{"gitId":"ArtemiszenN"},"content":"    public String getInitCommand() {","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"ArtemiszenN"},"content":"        return initCommand;","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"ArtemiszenN"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"ArtemiszenN"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"ArtemiszenN"},"content":"    /*","lastModifiedDate":"2023-02-22"},{"lineNumber":20,"author":{"gitId":"ArtemiszenN"},"content":"     * Sets command used to initialise the task","lastModifiedDate":"2023-02-22"},{"lineNumber":21,"author":{"gitId":"ArtemiszenN"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":22,"author":{"gitId":"ArtemiszenN"},"content":"     * @param setInitCommand Command used to initialise the task","lastModifiedDate":"2023-02-22"},{"lineNumber":23,"author":{"gitId":"ArtemiszenN"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":24,"author":{"gitId":"ArtemiszenN"},"content":"    public void setInitCommand(String initCommand) {","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"ArtemiszenN"},"content":"        this.initCommand \u003d initCommand;","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"ArtemiszenN"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"ArtemiszenN"},"content":"    /*","lastModifiedDate":"2023-02-22"},{"lineNumber":28,"author":{"gitId":"ArtemiszenN"},"content":"     * Gets string to pass to save file","lastModifiedDate":"2023-02-22"},{"lineNumber":29,"author":{"gitId":"ArtemiszenN"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":30,"author":{"gitId":"ArtemiszenN"},"content":"     * @return String for save file","lastModifiedDate":"2023-02-22"},{"lineNumber":31,"author":{"gitId":"ArtemiszenN"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":32,"author":{"gitId":"ArtemiszenN"},"content":"    public String getSaveString(){","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"ArtemiszenN"},"content":"        return initCommand + \" \" + ( isDone() ? \"1\" : \"0\") + System.lineSeparator();","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"ArtemiszenN"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"ArtemiszenN"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"ArtemiszenN"},"content":"    private String initCommand;","lastModifiedDate":"2023-02-11"},{"lineNumber":37,"author":{"gitId":"ArtemiszenN"},"content":"    /*","lastModifiedDate":"2023-02-22"},{"lineNumber":38,"author":{"gitId":"ArtemiszenN"},"content":"     * Sets is done to false and description to empty","lastModifiedDate":"2023-02-22"},{"lineNumber":39,"author":{"gitId":"ArtemiszenN"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":40,"author":{"gitId":"ArtemiszenN"},"content":"    public Task(){","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"ArtemiszenN"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"ArtemiszenN"},"content":"        this.description \u003d \"\";","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"ArtemiszenN"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"ArtemiszenN"},"content":"    /*","lastModifiedDate":"2023-02-22"},{"lineNumber":45,"author":{"gitId":"ArtemiszenN"},"content":"     * Sets is done to false and description to provided description","lastModifiedDate":"2023-02-22"},{"lineNumber":46,"author":{"gitId":"ArtemiszenN"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":47,"author":{"gitId":"ArtemiszenN"},"content":"     * @param description Description of the task","lastModifiedDate":"2023-02-22"},{"lineNumber":48,"author":{"gitId":"ArtemiszenN"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":49,"author":{"gitId":"ArtemiszenN"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-21"},{"lineNumber":50,"author":{"gitId":"ArtemiszenN"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-21"},{"lineNumber":51,"author":{"gitId":"ArtemiszenN"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-21"},{"lineNumber":52,"author":{"gitId":"ArtemiszenN"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":53,"author":{"gitId":"ArtemiszenN"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":54,"author":{"gitId":"ArtemiszenN"},"content":"    /*","lastModifiedDate":"2023-02-22"},{"lineNumber":55,"author":{"gitId":"ArtemiszenN"},"content":"     * Gets \"X\" if the task is done or an empty character if the task is not done","lastModifiedDate":"2023-02-22"},{"lineNumber":56,"author":{"gitId":"ArtemiszenN"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":57,"author":{"gitId":"ArtemiszenN"},"content":"     * @return \"X\" if task is done, \" \" if task is not done","lastModifiedDate":"2023-02-22"},{"lineNumber":58,"author":{"gitId":"ArtemiszenN"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":59,"author":{"gitId":"ArtemiszenN"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-21"},{"lineNumber":60,"author":{"gitId":"ArtemiszenN"},"content":"        return (isDone() ? \"X\" : \" \");","lastModifiedDate":"2023-02-21"},{"lineNumber":61,"author":{"gitId":"ArtemiszenN"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":62,"author":{"gitId":"ArtemiszenN"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":63,"author":{"gitId":"ArtemiszenN"},"content":"    /*","lastModifiedDate":"2023-02-22"},{"lineNumber":64,"author":{"gitId":"ArtemiszenN"},"content":"     * Gets description of the task","lastModifiedDate":"2023-02-22"},{"lineNumber":65,"author":{"gitId":"ArtemiszenN"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":66,"author":{"gitId":"ArtemiszenN"},"content":"     * @return description of task","lastModifiedDate":"2023-02-22"},{"lineNumber":67,"author":{"gitId":"ArtemiszenN"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":68,"author":{"gitId":"ArtemiszenN"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-21"},{"lineNumber":69,"author":{"gitId":"ArtemiszenN"},"content":"        return description;","lastModifiedDate":"2023-01-21"},{"lineNumber":70,"author":{"gitId":"ArtemiszenN"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":71,"author":{"gitId":"ArtemiszenN"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":72,"author":{"gitId":"ArtemiszenN"},"content":"    /*","lastModifiedDate":"2023-02-22"},{"lineNumber":73,"author":{"gitId":"ArtemiszenN"},"content":"     * Sets description of the task","lastModifiedDate":"2023-02-22"},{"lineNumber":74,"author":{"gitId":"ArtemiszenN"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":75,"author":{"gitId":"ArtemiszenN"},"content":"     * @param description Description of the task","lastModifiedDate":"2023-02-22"},{"lineNumber":76,"author":{"gitId":"ArtemiszenN"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":77,"author":{"gitId":"ArtemiszenN"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2023-01-21"},{"lineNumber":78,"author":{"gitId":"ArtemiszenN"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-21"},{"lineNumber":79,"author":{"gitId":"ArtemiszenN"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":80,"author":{"gitId":"ArtemiszenN"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":81,"author":{"gitId":"ArtemiszenN"},"content":"    /*","lastModifiedDate":"2023-02-22"},{"lineNumber":82,"author":{"gitId":"ArtemiszenN"},"content":"     * Returns true if task is done, false if task is not done","lastModifiedDate":"2023-02-22"},{"lineNumber":83,"author":{"gitId":"ArtemiszenN"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":84,"author":{"gitId":"ArtemiszenN"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-01-21"},{"lineNumber":85,"author":{"gitId":"ArtemiszenN"},"content":"        return isDone;","lastModifiedDate":"2023-01-21"},{"lineNumber":86,"author":{"gitId":"ArtemiszenN"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":87,"author":{"gitId":"ArtemiszenN"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":88,"author":{"gitId":"ArtemiszenN"},"content":"    /*","lastModifiedDate":"2023-02-22"},{"lineNumber":89,"author":{"gitId":"ArtemiszenN"},"content":"     * Sets the done or not done status of the task","lastModifiedDate":"2023-02-22"},{"lineNumber":90,"author":{"gitId":"ArtemiszenN"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":91,"author":{"gitId":"ArtemiszenN"},"content":"     * @param isDone The done status of the task","lastModifiedDate":"2023-02-22"},{"lineNumber":92,"author":{"gitId":"ArtemiszenN"},"content":"     * @throws IllegalCommandException if task is already done and trying to be set to done, and vice versa.","lastModifiedDate":"2023-02-22"},{"lineNumber":93,"author":{"gitId":"ArtemiszenN"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":94,"author":{"gitId":"ArtemiszenN"},"content":"    public void setDone(boolean isDone) throws IllegalCommandException {","lastModifiedDate":"2023-02-21"},{"lineNumber":95,"author":{"gitId":"ArtemiszenN"},"content":"        if(this.isDone \u003d\u003d isDone){","lastModifiedDate":"2023-02-21"},{"lineNumber":96,"author":{"gitId":"ArtemiszenN"},"content":"            throw new IllegalCommandException(\"No change in done state\");","lastModifiedDate":"2023-02-04"},{"lineNumber":97,"author":{"gitId":"ArtemiszenN"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":98,"author":{"gitId":"ArtemiszenN"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-02-21"},{"lineNumber":99,"author":{"gitId":"ArtemiszenN"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":100,"author":{"gitId":"ArtemiszenN"},"content":"    /*","lastModifiedDate":"2023-02-22"},{"lineNumber":101,"author":{"gitId":"ArtemiszenN"},"content":"     * Checks if a substring of user input is a valid time string","lastModifiedDate":"2023-02-22"},{"lineNumber":102,"author":{"gitId":"ArtemiszenN"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":103,"author":{"gitId":"ArtemiszenN"},"content":"     * @userInput User time input","lastModifiedDate":"2023-02-22"},{"lineNumber":104,"author":{"gitId":"ArtemiszenN"},"content":"     * @return true if input is a valid time string, false otherwise","lastModifiedDate":"2023-02-22"},{"lineNumber":105,"author":{"gitId":"ArtemiszenN"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":106,"author":{"gitId":"ArtemiszenN"},"content":"    private static boolean isTime(String userInput){","lastModifiedDate":"2023-02-21"},{"lineNumber":107,"author":{"gitId":"ArtemiszenN"},"content":"        try{","lastModifiedDate":"2023-02-21"},{"lineNumber":108,"author":{"gitId":"ArtemiszenN"},"content":"            LocalTime time \u003d LocalTime.parse(userInput);","lastModifiedDate":"2023-02-21"},{"lineNumber":109,"author":{"gitId":"ArtemiszenN"},"content":"            return true;","lastModifiedDate":"2023-02-21"},{"lineNumber":110,"author":{"gitId":"ArtemiszenN"},"content":"        }catch(Exception e){","lastModifiedDate":"2023-02-21"},{"lineNumber":111,"author":{"gitId":"ArtemiszenN"},"content":"            return false;","lastModifiedDate":"2023-02-21"},{"lineNumber":112,"author":{"gitId":"ArtemiszenN"},"content":"        }","lastModifiedDate":"2023-02-21"},{"lineNumber":113,"author":{"gitId":"ArtemiszenN"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":114,"author":{"gitId":"ArtemiszenN"},"content":"    /*","lastModifiedDate":"2023-02-22"},{"lineNumber":115,"author":{"gitId":"ArtemiszenN"},"content":"     * Checks if a substring of user input is a valid date string","lastModifiedDate":"2023-02-22"},{"lineNumber":116,"author":{"gitId":"ArtemiszenN"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":117,"author":{"gitId":"ArtemiszenN"},"content":"     * @userInput User date input","lastModifiedDate":"2023-02-22"},{"lineNumber":118,"author":{"gitId":"ArtemiszenN"},"content":"     * @return true if input is a valid date string, false otherwise","lastModifiedDate":"2023-02-22"},{"lineNumber":119,"author":{"gitId":"ArtemiszenN"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":120,"author":{"gitId":"ArtemiszenN"},"content":"    private static boolean isDate(String userInput){","lastModifiedDate":"2023-02-21"},{"lineNumber":121,"author":{"gitId":"ArtemiszenN"},"content":"        try{","lastModifiedDate":"2023-02-21"},{"lineNumber":122,"author":{"gitId":"ArtemiszenN"},"content":"            LocalDate date \u003d LocalDate.parse(userInput);","lastModifiedDate":"2023-02-21"},{"lineNumber":123,"author":{"gitId":"ArtemiszenN"},"content":"            return true;","lastModifiedDate":"2023-02-21"},{"lineNumber":124,"author":{"gitId":"ArtemiszenN"},"content":"        }catch(Exception e){","lastModifiedDate":"2023-02-21"},{"lineNumber":125,"author":{"gitId":"ArtemiszenN"},"content":"            return false;","lastModifiedDate":"2023-02-21"},{"lineNumber":126,"author":{"gitId":"ArtemiszenN"},"content":"        }","lastModifiedDate":"2023-02-21"},{"lineNumber":127,"author":{"gitId":"ArtemiszenN"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":128,"author":{"gitId":"ArtemiszenN"},"content":"    /*","lastModifiedDate":"2023-02-22"},{"lineNumber":129,"author":{"gitId":"ArtemiszenN"},"content":"     * Parses the date string from the user","lastModifiedDate":"2023-02-22"},{"lineNumber":130,"author":{"gitId":"ArtemiszenN"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":131,"author":{"gitId":"ArtemiszenN"},"content":"     * @userInput User date input","lastModifiedDate":"2023-02-22"},{"lineNumber":132,"author":{"gitId":"ArtemiszenN"},"content":"     * @return Formatted date if the input is valid, the original input otherwise","lastModifiedDate":"2023-02-22"},{"lineNumber":133,"author":{"gitId":"ArtemiszenN"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":134,"author":{"gitId":"ArtemiszenN"},"content":"    private static String parseDate(String userInput){","lastModifiedDate":"2023-02-21"},{"lineNumber":135,"author":{"gitId":"ArtemiszenN"},"content":"        try{","lastModifiedDate":"2023-02-21"},{"lineNumber":136,"author":{"gitId":"ArtemiszenN"},"content":"            LocalDate date \u003d LocalDate.parse(userInput);","lastModifiedDate":"2023-02-21"},{"lineNumber":137,"author":{"gitId":"ArtemiszenN"},"content":"            return date.getDayOfWeek() + \", \" + date.getMonth() + \" \" + date.getDayOfMonth() + \", \" + date.getYear();","lastModifiedDate":"2023-02-21"},{"lineNumber":138,"author":{"gitId":"ArtemiszenN"},"content":"        }catch(Exception e){","lastModifiedDate":"2023-02-21"},{"lineNumber":139,"author":{"gitId":"ArtemiszenN"},"content":"            return userInput;","lastModifiedDate":"2023-02-21"},{"lineNumber":140,"author":{"gitId":"ArtemiszenN"},"content":"        }","lastModifiedDate":"2023-02-21"},{"lineNumber":141,"author":{"gitId":"ArtemiszenN"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":142,"author":{"gitId":"ArtemiszenN"},"content":"    /*","lastModifiedDate":"2023-02-22"},{"lineNumber":143,"author":{"gitId":"ArtemiszenN"},"content":"     * Changes 24 hour time integer to 12 hour time integer","lastModifiedDate":"2023-02-22"},{"lineNumber":144,"author":{"gitId":"ArtemiszenN"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":145,"author":{"gitId":"ArtemiszenN"},"content":"     * @param hour 24 hour time integer","lastModifiedDate":"2023-02-22"},{"lineNumber":146,"author":{"gitId":"ArtemiszenN"},"content":"     * @return 12 hour time integer","lastModifiedDate":"2023-02-22"},{"lineNumber":147,"author":{"gitId":"ArtemiszenN"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":148,"author":{"gitId":"ArtemiszenN"},"content":"    private static int adjustHour(int hour){","lastModifiedDate":"2023-02-21"},{"lineNumber":149,"author":{"gitId":"ArtemiszenN"},"content":"        if(hour%12\u003d\u003d0){","lastModifiedDate":"2023-02-21"},{"lineNumber":150,"author":{"gitId":"ArtemiszenN"},"content":"            return 12;","lastModifiedDate":"2023-02-21"},{"lineNumber":151,"author":{"gitId":"ArtemiszenN"},"content":"        }","lastModifiedDate":"2023-02-21"},{"lineNumber":152,"author":{"gitId":"ArtemiszenN"},"content":"        return hour%12;","lastModifiedDate":"2023-02-21"},{"lineNumber":153,"author":{"gitId":"ArtemiszenN"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":154,"author":{"gitId":"ArtemiszenN"},"content":"    /*","lastModifiedDate":"2023-02-22"},{"lineNumber":155,"author":{"gitId":"ArtemiszenN"},"content":"     * Parses the time string from the user","lastModifiedDate":"2023-02-22"},{"lineNumber":156,"author":{"gitId":"ArtemiszenN"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":157,"author":{"gitId":"ArtemiszenN"},"content":"     * @userInput User time input","lastModifiedDate":"2023-02-22"},{"lineNumber":158,"author":{"gitId":"ArtemiszenN"},"content":"     * @return Formatted time if the input is valid, the original input otherwise","lastModifiedDate":"2023-02-22"},{"lineNumber":159,"author":{"gitId":"ArtemiszenN"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":160,"author":{"gitId":"ArtemiszenN"},"content":"    private static String parseTime(String userInput){","lastModifiedDate":"2023-02-21"},{"lineNumber":161,"author":{"gitId":"ArtemiszenN"},"content":"        try{","lastModifiedDate":"2023-02-21"},{"lineNumber":162,"author":{"gitId":"ArtemiszenN"},"content":"            LocalTime time \u003d LocalTime.parse(userInput);","lastModifiedDate":"2023-02-21"},{"lineNumber":163,"author":{"gitId":"ArtemiszenN"},"content":"            LocalTime noon \u003d LocalTime.parse(\"12:00\");","lastModifiedDate":"2023-02-21"},{"lineNumber":164,"author":{"gitId":"ArtemiszenN"},"content":"            return adjustHour(time.getHour()) + \":\" + (time.getMinute()\u003c10 ? \"0\" : \"\") + time.getMinute() + \" \" + (time.isBefore(noon)?\"AM\":\"PM\");","lastModifiedDate":"2023-02-22"},{"lineNumber":165,"author":{"gitId":"ArtemiszenN"},"content":"        }catch(Exception e){","lastModifiedDate":"2023-02-21"},{"lineNumber":166,"author":{"gitId":"ArtemiszenN"},"content":"            return userInput;","lastModifiedDate":"2023-02-21"},{"lineNumber":167,"author":{"gitId":"ArtemiszenN"},"content":"        }","lastModifiedDate":"2023-02-21"},{"lineNumber":168,"author":{"gitId":"ArtemiszenN"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":169,"author":{"gitId":"ArtemiszenN"},"content":"    /*","lastModifiedDate":"2023-02-22"},{"lineNumber":170,"author":{"gitId":"ArtemiszenN"},"content":"     * Parses the user date time input and returns a reformatted version if possible","lastModifiedDate":"2023-02-22"},{"lineNumber":171,"author":{"gitId":"ArtemiszenN"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":172,"author":{"gitId":"ArtemiszenN"},"content":"     * @userInput User date time input","lastModifiedDate":"2023-02-22"},{"lineNumber":173,"author":{"gitId":"ArtemiszenN"},"content":"     * @return Reformatted string wherever possible, original user input if string is in an invalid format","lastModifiedDate":"2023-02-22"},{"lineNumber":174,"author":{"gitId":"ArtemiszenN"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":175,"author":{"gitId":"ArtemiszenN"},"content":"    public static String parseDateTimeString(String userInput){","lastModifiedDate":"2023-02-21"},{"lineNumber":176,"author":{"gitId":"ArtemiszenN"},"content":"        userInput \u003d userInput.trim();","lastModifiedDate":"2023-02-21"},{"lineNumber":177,"author":{"gitId":"ArtemiszenN"},"content":"        switch(userInput.split(\" \").length){","lastModifiedDate":"2023-02-21"},{"lineNumber":178,"author":{"gitId":"ArtemiszenN"},"content":"        case 1:","lastModifiedDate":"2023-02-21"},{"lineNumber":179,"author":{"gitId":"ArtemiszenN"},"content":"            if(isDate(userInput)){","lastModifiedDate":"2023-02-21"},{"lineNumber":180,"author":{"gitId":"ArtemiszenN"},"content":"                return parseDate(userInput);","lastModifiedDate":"2023-02-21"},{"lineNumber":181,"author":{"gitId":"ArtemiszenN"},"content":"            }else if(isTime(userInput)){","lastModifiedDate":"2023-02-21"},{"lineNumber":182,"author":{"gitId":"ArtemiszenN"},"content":"                return parseTime(userInput);","lastModifiedDate":"2023-02-21"},{"lineNumber":183,"author":{"gitId":"ArtemiszenN"},"content":"            }else{","lastModifiedDate":"2023-02-21"},{"lineNumber":184,"author":{"gitId":"ArtemiszenN"},"content":"                return userInput;","lastModifiedDate":"2023-02-21"},{"lineNumber":185,"author":{"gitId":"ArtemiszenN"},"content":"            }","lastModifiedDate":"2023-02-21"},{"lineNumber":186,"author":{"gitId":"ArtemiszenN"},"content":"        case 2:","lastModifiedDate":"2023-02-21"},{"lineNumber":187,"author":{"gitId":"ArtemiszenN"},"content":"            String[] userInputs \u003d userInput.split(\" \");","lastModifiedDate":"2023-02-21"},{"lineNumber":188,"author":{"gitId":"ArtemiszenN"},"content":"            if(isTime(userInputs[0]) \u0026\u0026 isDate(userInputs[1])){","lastModifiedDate":"2023-02-21"},{"lineNumber":189,"author":{"gitId":"ArtemiszenN"},"content":"                return parseTime(userInputs[0])+ \", \" + parseDate(userInputs[1]);","lastModifiedDate":"2023-02-21"},{"lineNumber":190,"author":{"gitId":"ArtemiszenN"},"content":"            }else if(isTime(userInputs[1]) \u0026\u0026 isDate(userInputs[0])){","lastModifiedDate":"2023-02-21"},{"lineNumber":191,"author":{"gitId":"ArtemiszenN"},"content":"                return parseTime(userInputs[1])+ \", \" + parseDate(userInputs[0]);","lastModifiedDate":"2023-02-21"},{"lineNumber":192,"author":{"gitId":"ArtemiszenN"},"content":"            }else{","lastModifiedDate":"2023-02-21"},{"lineNumber":193,"author":{"gitId":"ArtemiszenN"},"content":"                return userInput;","lastModifiedDate":"2023-02-21"},{"lineNumber":194,"author":{"gitId":"ArtemiszenN"},"content":"            }","lastModifiedDate":"2023-02-21"},{"lineNumber":195,"author":{"gitId":"ArtemiszenN"},"content":"        default:","lastModifiedDate":"2023-02-21"},{"lineNumber":196,"author":{"gitId":"ArtemiszenN"},"content":"            return userInput;","lastModifiedDate":"2023-02-21"},{"lineNumber":197,"author":{"gitId":"ArtemiszenN"},"content":"        }","lastModifiedDate":"2023-02-21"},{"lineNumber":198,"author":{"gitId":"ArtemiszenN"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":199,"author":{"gitId":"ArtemiszenN"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":200,"author":{"gitId":"ArtemiszenN"},"content":"    /*","lastModifiedDate":"2023-02-22"},{"lineNumber":201,"author":{"gitId":"ArtemiszenN"},"content":"     * Retrieves description of task","lastModifiedDate":"2023-02-22"},{"lineNumber":202,"author":{"gitId":"ArtemiszenN"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":203,"author":{"gitId":"ArtemiszenN"},"content":"     * @return String of description","lastModifiedDate":"2023-02-22"},{"lineNumber":204,"author":{"gitId":"ArtemiszenN"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":205,"author":{"gitId":"ArtemiszenN"},"content":"    public String toString(){","lastModifiedDate":"2023-01-28"},{"lineNumber":206,"author":{"gitId":"ArtemiszenN"},"content":"        return description;","lastModifiedDate":"2023-01-28"},{"lineNumber":207,"author":{"gitId":"ArtemiszenN"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":208,"author":{"gitId":"ArtemiszenN"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"ArtemiszenN":208}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ArtemiszenN"},"content":"package duke.task;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"ArtemiszenN"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"ArtemiszenN"},"content":"public class Todo extends Task{","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"ArtemiszenN"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":5,"author":{"gitId":"ArtemiszenN"},"content":"    /*","lastModifiedDate":"2023-02-22"},{"lineNumber":6,"author":{"gitId":"ArtemiszenN"},"content":"     * Initialises the todo task from user command","lastModifiedDate":"2023-02-22"},{"lineNumber":7,"author":{"gitId":"ArtemiszenN"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":8,"author":{"gitId":"ArtemiszenN"},"content":"     * @param command User command","lastModifiedDate":"2023-02-22"},{"lineNumber":9,"author":{"gitId":"ArtemiszenN"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":10,"author":{"gitId":"ArtemiszenN"},"content":"    public Todo(String command) {","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"ArtemiszenN"},"content":"        super();","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"ArtemiszenN"},"content":"        setInitCommand(command);","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"ArtemiszenN"},"content":"        String description \u003d command.substring(command.indexOf(\" \")).trim();","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"ArtemiszenN"},"content":"        setDescription(description);","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"ArtemiszenN"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"ArtemiszenN"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"ArtemiszenN"},"content":"    /*","lastModifiedDate":"2023-02-22"},{"lineNumber":18,"author":{"gitId":"ArtemiszenN"},"content":"     * Gets a printable formatted string of the todo task","lastModifiedDate":"2023-02-22"},{"lineNumber":19,"author":{"gitId":"ArtemiszenN"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":20,"author":{"gitId":"ArtemiszenN"},"content":"     * @return String of the todo task","lastModifiedDate":"2023-02-22"},{"lineNumber":21,"author":{"gitId":"ArtemiszenN"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":22,"author":{"gitId":"ArtemiszenN"},"content":"    public String toString(){","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"ArtemiszenN"},"content":"        return \"[T][\" + (isDone() ? \u0027X\u0027 : \u0027 \u0027) + \"]//////\" + super.toString();","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"ArtemiszenN"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"ArtemiszenN"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"ArtemiszenN":25}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ArtemiszenN"},"content":"help","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"ArtemiszenN"},"content":"todo try out new thing","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"ArtemiszenN"},"content":"list","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"ArtemiszenN"},"content":"mark 1","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"ArtemiszenN"},"content":"mark 1","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"ArtemiszenN"},"content":"unmark 1","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"ArtemiszenN"},"content":"unmark 1","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"ArtemiszenN"},"content":"todo","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"ArtemiszenN"},"content":"deadline","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"ArtemiszenN"},"content":"deadline do thing /by 5pm","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"ArtemiszenN"},"content":"deadline do thing","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"ArtemiszenN"},"content":"list","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"ArtemiszenN"},"content":"event","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"ArtemiszenN"},"content":"event do stuff /from 6pm /to 10pm","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"ArtemiszenN"},"content":"event do stuff /from 6pm","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"ArtemiszenN"},"content":"event do stuff /to 10pm","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"ArtemiszenN"},"content":"list","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"ArtemiszenN"},"content":"delete 5","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"ArtemiszenN"},"content":"delete","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"ArtemiszenN"},"content":"delete the fifth element","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"ArtemiszenN"},"content":"delete 3","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"ArtemiszenN"},"content":"delete 3","lastModifiedDate":"2023-02-21"},{"lineNumber":23,"author":{"gitId":"ArtemiszenN"},"content":"list","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"ArtemiszenN"},"content":"deadline time test deadline /by 2019-12-01 05:30","lastModifiedDate":"2023-02-21"},{"lineNumber":25,"author":{"gitId":"ArtemiszenN"},"content":"list","lastModifiedDate":"2023-02-21"},{"lineNumber":26,"author":{"gitId":"ArtemiszenN"},"content":"delete 4","lastModifiedDate":"2023-02-21"},{"lineNumber":27,"author":{"gitId":"ArtemiszenN"},"content":"event time test event /from 05:30 2019-12-01 /to 18:59","lastModifiedDate":"2023-02-21"},{"lineNumber":28,"author":{"gitId":"ArtemiszenN"},"content":"list","lastModifiedDate":"2023-02-21"},{"lineNumber":29,"author":{"gitId":"ArtemiszenN"},"content":"delete 4","lastModifiedDate":"2023-02-21"},{"lineNumber":30,"author":{"gitId":"ArtemiszenN"},"content":"event time test event 2 /from 2019-12-01 /to 2023-11-22","lastModifiedDate":"2023-02-21"},{"lineNumber":31,"author":{"gitId":"ArtemiszenN"},"content":"list","lastModifiedDate":"2023-02-21"},{"lineNumber":32,"author":{"gitId":"ArtemiszenN"},"content":"delete 4","lastModifiedDate":"2023-02-21"},{"lineNumber":33,"author":{"gitId":"ArtemiszenN"},"content":"list","lastModifiedDate":"2023-02-21"},{"lineNumber":34,"author":{"gitId":"ArtemiszenN"},"content":"find do","lastModifiedDate":"2023-02-22"}],"authorContributionMap":{"ArtemiszenN":34}}]
