[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Masahiro21"},"content":"# Mike project","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"Masahiro21"},"content":"This is a project based on a template for a greenfield Java project. It was named after the Java mascot _Duke_ but has since been renamed to _Mike_. Given below are instructions on how to use it.","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"Masahiro21"},"content":"## How to start Mike","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":8,"author":{"gitId":"Masahiro21"},"content":"   2. Select the project directory, and click `OK`.","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"Masahiro21"},"content":"   3. If there are any further prompts, accept the defaults.","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"Masahiro21"},"content":"2. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"Masahiro21"},"content":"   1. In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"3. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"Masahiro21"},"content":"    ___       __   _______   ___       ________  ________  _____ ______   _______ ","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"Masahiro21"},"content":"   |\\  \\     |\\  \\|\\  ___ \\ |\\  \\     |\\   ____\\|\\   __  \\|\\   _ \\  _   \\|\\  ___ \\","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"Masahiro21"},"content":"    \\ \\  \\    \\ \\  \\ \\   __/|\\ \\  \\    \\ \\  \\___|\\ \\  \\|\\  \\ \\  \\\\\\__\\ \\  \\ \\   __/|","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"Masahiro21"},"content":"     \\ \\  \\  __\\ \\  \\ \\  \\_|/_\\ \\  \\    \\ \\  \\    \\ \\  \\\\\\  \\ \\  \\\\|__| \\  \\ \\  \\_|/__","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"Masahiro21"},"content":"      \\ \\  \\|\\__\\_\\  \\ \\  \\_|\\ \\ \\  \\____\\ \\  \\____\\ \\  \\\\\\  \\ \\  \\    \\ \\  \\ \\  \\_|\\ \\","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"Masahiro21"},"content":"       \\ \\____________\\ \\_______\\ \\_______\\ \\_______\\ \\_______\\ \\__\\    \\ \\__\\ \\_______\\","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"Masahiro21"},"content":"        \\|____________|\\|_______|\\|_______|\\|_______|\\|_______|\\|__|     \\|__|\\|_______|","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"Masahiro21"},"content":"   ","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"Masahiro21"},"content":"   Hi! I\u0027m Mike, your personal assistant! How can I help you today?","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"Masahiro21"},"content":"   ","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"Masahiro21"},"content":"   We have loaded your file and this is the current state of your list.","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"Masahiro21"},"content":"   Here are the tasks in your list:","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"Masahiro21"},"content":"   You have a total of 0 task(s).","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"Masahiro21"},"content":"4. If you\u0027re starting from a new file it should show that you have 0 task in the list, otherwise it will display the last save state of your task list.","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"Masahiro21"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"Masahiro21"},"content":"## How to use Mike","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"Masahiro21"},"content":"Mike can only take in 1 of 9 specific commands below. To use the command, follow the input format and replace the description, date of deadline etc. accordingly to get your desired output. ","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"Masahiro21"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"Masahiro21"},"content":"Your output should look similar to the sample input provided under each command.","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"Masahiro21"},"content":"1. `todo`: creates a todo task and adds it to the task list.","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"Masahiro21"},"content":"   1. Input format: `todo description of task`","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"Masahiro21"},"content":"   2. Sample output: ","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"Masahiro21"},"content":"      ```","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"Masahiro21"},"content":"      Got it. I\u0027ve added this task:","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"Masahiro21"},"content":"      [T][ ] description of task","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"Masahiro21"},"content":"      Now you have 1 task(s) in the list.","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"Masahiro21"},"content":"      ```","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"Masahiro21"},"content":"2. `deadline`: creates a deadline and adds it to the task list.","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"Masahiro21"},"content":"   1. Input format: `deadline description of task /by date of deadline`","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"Masahiro21"},"content":"   2. Sample output:","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"Masahiro21"},"content":"      ```","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"Masahiro21"},"content":"      Got it. I\u0027ve added this task:","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"Masahiro21"},"content":"      [D][ ] description of task (by: date of deadline)","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"Masahiro21"},"content":"      Now you have 2 task(s) in the list.","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"Masahiro21"},"content":"      ```","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"Masahiro21"},"content":"3. `event`: creates an event and adds it to the list.","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"Masahiro21"},"content":"   1. Input format: `event description of task /from start date of event /to end date of event`","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"Masahiro21"},"content":"   2. Sample output:","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"Masahiro21"},"content":"      ```","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"Masahiro21"},"content":"      Got it. I\u0027ve added this task:","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"Masahiro21"},"content":"      [E][ ] description of task (from: start date of event to: end date of event)","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"Masahiro21"},"content":"      Now you have 3 task(s) in the list.","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"Masahiro21"},"content":"      ```","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"Masahiro21"},"content":"4. `list`: shows all the current tasks in the task list.","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"Masahiro21"},"content":"   1. Input format: `list`","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"Masahiro21"},"content":"   2. Sample output:","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"Masahiro21"},"content":"      ```","lastModifiedDate":"2023-03-05"},{"lineNumber":62,"author":{"gitId":"Masahiro21"},"content":"      Here are the task(s) in your list:","lastModifiedDate":"2023-03-05"},{"lineNumber":63,"author":{"gitId":"Masahiro21"},"content":"      1.[T][ ] description of task","lastModifiedDate":"2023-03-05"},{"lineNumber":64,"author":{"gitId":"Masahiro21"},"content":"      2.[D][ ] description of task (by: date of deadline)","lastModifiedDate":"2023-03-05"},{"lineNumber":65,"author":{"gitId":"Masahiro21"},"content":"      3.[E][ ] description of task (from: start date of event to: end date of event)","lastModifiedDate":"2023-03-05"},{"lineNumber":66,"author":{"gitId":"Masahiro21"},"content":"      You have a total of 3 task(s).","lastModifiedDate":"2023-03-05"},{"lineNumber":67,"author":{"gitId":"Masahiro21"},"content":"      ```","lastModifiedDate":"2023-03-05"},{"lineNumber":68,"author":{"gitId":"Masahiro21"},"content":"5. `mark`: marks a certain task as completed.","lastModifiedDate":"2023-03-05"},{"lineNumber":69,"author":{"gitId":"Masahiro21"},"content":"   1. Input format: `mark (task number)`","lastModifiedDate":"2023-03-05"},{"lineNumber":70,"author":{"gitId":"Masahiro21"},"content":"   2. Sample output:","lastModifiedDate":"2023-03-05"},{"lineNumber":71,"author":{"gitId":"Masahiro21"},"content":"      ```","lastModifiedDate":"2023-03-05"},{"lineNumber":72,"author":{"gitId":"Masahiro21"},"content":"      OK, I\u0027ve marked this task as completed:","lastModifiedDate":"2023-03-05"},{"lineNumber":73,"author":{"gitId":"Masahiro21"},"content":"        [X] description of task","lastModifiedDate":"2023-03-05"},{"lineNumber":74,"author":{"gitId":"Masahiro21"},"content":"      ```","lastModifiedDate":"2023-03-05"},{"lineNumber":75,"author":{"gitId":"Masahiro21"},"content":"6. `unmark`: unmarks a certain completed task.","lastModifiedDate":"2023-03-05"},{"lineNumber":76,"author":{"gitId":"Masahiro21"},"content":"   1. Input format: `unmark (task number)`","lastModifiedDate":"2023-03-05"},{"lineNumber":77,"author":{"gitId":"Masahiro21"},"content":"   2. Sample output:","lastModifiedDate":"2023-03-05"},{"lineNumber":78,"author":{"gitId":"Masahiro21"},"content":"      ```","lastModifiedDate":"2023-03-05"},{"lineNumber":79,"author":{"gitId":"Masahiro21"},"content":"      OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2023-03-05"},{"lineNumber":80,"author":{"gitId":"Masahiro21"},"content":"        [ ] description of task","lastModifiedDate":"2023-03-05"},{"lineNumber":81,"author":{"gitId":"Masahiro21"},"content":"      ```","lastModifiedDate":"2023-03-05"},{"lineNumber":82,"author":{"gitId":"Masahiro21"},"content":"7. `find`: searches for tasks that contains a given keyword.","lastModifiedDate":"2023-03-05"},{"lineNumber":83,"author":{"gitId":"Masahiro21"},"content":"   1. Input format: `find (keyword)`","lastModifiedDate":"2023-03-05"},{"lineNumber":84,"author":{"gitId":"Masahiro21"},"content":"   2. Sample output:","lastModifiedDate":"2023-03-05"},{"lineNumber":85,"author":{"gitId":"Masahiro21"},"content":"      ```","lastModifiedDate":"2023-03-05"},{"lineNumber":86,"author":{"gitId":"Masahiro21"},"content":"      Here\u0027s the list of task(s) in your list that matches your keyword: ","lastModifiedDate":"2023-03-05"},{"lineNumber":87,"author":{"gitId":"Masahiro21"},"content":"      1.[T][ ] description of task","lastModifiedDate":"2023-03-05"},{"lineNumber":88,"author":{"gitId":"Masahiro21"},"content":"      2.[D][ ] description of task (by: date of deadline)","lastModifiedDate":"2023-03-05"},{"lineNumber":89,"author":{"gitId":"Masahiro21"},"content":"      3.[T][X] description of task","lastModifiedDate":"2023-03-05"},{"lineNumber":90,"author":{"gitId":"Masahiro21"},"content":"      ```","lastModifiedDate":"2023-03-05"},{"lineNumber":91,"author":{"gitId":"Masahiro21"},"content":"8. `delete`: delete a certain task from the task list.","lastModifiedDate":"2023-03-05"},{"lineNumber":92,"author":{"gitId":"Masahiro21"},"content":"   1. Input format: `delete (task number)`","lastModifiedDate":"2023-03-05"},{"lineNumber":93,"author":{"gitId":"Masahiro21"},"content":"   2. Sample output:","lastModifiedDate":"2023-03-05"},{"lineNumber":94,"author":{"gitId":"Masahiro21"},"content":"      ```","lastModifiedDate":"2023-03-05"},{"lineNumber":95,"author":{"gitId":"Masahiro21"},"content":"      Noted. I\u0027ve removed this task","lastModifiedDate":"2023-03-05"},{"lineNumber":96,"author":{"gitId":"Masahiro21"},"content":"      3.[E][ ] description of task (from: start date of event to: end date of event)","lastModifiedDate":"2023-03-05"},{"lineNumber":97,"author":{"gitId":"Masahiro21"},"content":"      ```","lastModifiedDate":"2023-03-05"},{"lineNumber":98,"author":{"gitId":"Masahiro21"},"content":"9. `bye`: exits the program.","lastModifiedDate":"2023-03-05"},{"lineNumber":99,"author":{"gitId":"Masahiro21"},"content":"   1. Input format: `bye`","lastModifiedDate":"2023-03-05"},{"lineNumber":100,"author":{"gitId":"Masahiro21"},"content":"   2. Sample output:","lastModifiedDate":"2023-03-05"},{"lineNumber":101,"author":{"gitId":"Masahiro21"},"content":"      ```","lastModifiedDate":"2023-03-05"},{"lineNumber":102,"author":{"gitId":"Masahiro21"},"content":"      Good bye! Hope to see you again soon.","lastModifiedDate":"2023-03-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"      ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Masahiro21":95,"-":8}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Masahiro21"},"content":"package duke;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"Masahiro21"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"Masahiro21"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"Masahiro21"},"content":" * Represents a task that is of type deadline.","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"Masahiro21"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"Masahiro21"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"Masahiro21"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"Masahiro21"},"content":"    protected String by;","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"Masahiro21"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"Masahiro21"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"Masahiro21"},"content":"     * Sets the description, done status and date of the deadline.","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"Masahiro21"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"Masahiro21"},"content":"     * @param description description of the deadline.","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"Masahiro21"},"content":"     * @param isDone done status of the deadline.","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"Masahiro21"},"content":"     * @param by date of the deadline.","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"Masahiro21"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"Masahiro21"},"content":"    public Deadline(String description, boolean isDone, String by) {","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"Masahiro21"},"content":"        super(description,isDone);","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"Masahiro21"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"Masahiro21"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"Masahiro21"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"Masahiro21"},"content":"    public String getType(){","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"Masahiro21"},"content":"        return \"D\";","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"Masahiro21"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"Masahiro21"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"Masahiro21"},"content":"    public String getDeadline(){","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"Masahiro21"},"content":"        return \" (by: \" + by + \")\";","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"Masahiro21"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"Masahiro21"},"content":"    public String getDeadlineSave(){","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"Masahiro21"},"content":"        return by;","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"Masahiro21"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"Masahiro21"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"Masahiro21"},"content":"    public String toString() {","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"Masahiro21"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + \"  [D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"Masahiro21"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"Masahiro21"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"Masahiro21":36}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Masahiro21"},"content":"package duke;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"Masahiro21"},"content":"import duke.exceptions.*;","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"Masahiro21"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"Masahiro21"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"Masahiro21"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"Masahiro21"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"Masahiro21"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"Masahiro21"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"Masahiro21"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"Masahiro21"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"Masahiro21"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"Masahiro21"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"Masahiro21"},"content":" * Entry point of the Mike application.","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"Masahiro21"},"content":" * Initialises the application and begins interaction with the user.","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"Masahiro21"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"Masahiro21"},"content":"    private static Ui ui;","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"Masahiro21"},"content":"    private static Storage storage;","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"Masahiro21"},"content":"    private static TaskList taskList;","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"Masahiro21"},"content":"    private static int numOfTask \u003d 0;","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"Masahiro21"},"content":"    public static String filePath \u003d \"src/duke_list.txt\";","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"Masahiro21"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"Masahiro21"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"Masahiro21"},"content":"     * Sets up the required objects, loads up the storage file and prints the welcome message to the user.","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"Masahiro21"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"Masahiro21"},"content":"     * @param filePath the location of the storage file.","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"Masahiro21"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"Masahiro21"},"content":"    public Duke(String filePath){","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"Masahiro21"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"Masahiro21"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"Masahiro21"},"content":"        try {","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"Masahiro21"},"content":"            taskList \u003d new TaskList(storage.loadFile());","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"Masahiro21"},"content":"            numOfTask \u003d taskList.getNumOfTask();","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"Masahiro21"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"Masahiro21"},"content":"            ui.showCreatingFileMessage();","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"Masahiro21"},"content":"            storage.createFile(filePath);","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"Masahiro21"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"Masahiro21"},"content":"        ui.showWelcomeMessage(taskList);","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"Masahiro21"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"Masahiro21"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"Masahiro21"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"Masahiro21"},"content":"     * Processes the user inputs and executes it until the user issues the exit command.","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"Masahiro21"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"Masahiro21"},"content":"     * @param userInput full user input string.","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"Masahiro21"},"content":"     * @return true if bye command is issued by user, false otherwise.","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"Masahiro21"},"content":"     * @throws DukeException if command issued by user is not recognized.","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"Masahiro21"},"content":"     * @throws IOException if user input string is not recognized.","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"Masahiro21"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"Masahiro21"},"content":"     public static boolean shouldExit(String userInput) throws DukeException, IOException {","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"Masahiro21"},"content":"        Parser parser \u003d new Parser(userInput);","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"Masahiro21"},"content":"        String command \u003d parser.getCommand();","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"Masahiro21"},"content":"         String taskNumber \u003d parser.getTaskNumber();","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"Masahiro21"},"content":"         boolean isDone \u003d false;","lastModifiedDate":"2023-02-28"},{"lineNumber":54,"author":{"gitId":"Masahiro21"},"content":"         switch(command){","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"Masahiro21"},"content":"             case \"bye\":","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"Masahiro21"},"content":"                 ui.showGoodByeMessage();","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"Masahiro21"},"content":"                 return true;","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"Masahiro21"},"content":"             case \"list\":","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"Masahiro21"},"content":"                 ui.showTaskList(taskList);","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"Masahiro21"},"content":"                 return false;","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"Masahiro21"},"content":"             case \"mark\":","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"Masahiro21"},"content":"                 int indexMark \u003d Integer.parseInt(taskNumber);","lastModifiedDate":"2023-01-25"},{"lineNumber":63,"author":{"gitId":"Masahiro21"},"content":"                 taskList.getTask(indexMark-1).markAsDone();","lastModifiedDate":"2023-03-05"},{"lineNumber":64,"author":{"gitId":"Masahiro21"},"content":"                 ui.showMarkedTask(taskList,indexMark);","lastModifiedDate":"2023-03-05"},{"lineNumber":65,"author":{"gitId":"Masahiro21"},"content":"                 storage.saveToFile(taskList.getTaskList());","lastModifiedDate":"2023-03-05"},{"lineNumber":66,"author":{"gitId":"Masahiro21"},"content":"                 return false;","lastModifiedDate":"2023-01-25"},{"lineNumber":67,"author":{"gitId":"Masahiro21"},"content":"             case \"unmark\":","lastModifiedDate":"2023-01-25"},{"lineNumber":68,"author":{"gitId":"Masahiro21"},"content":"                 int indexUnmark \u003d Integer.parseInt(taskNumber);","lastModifiedDate":"2023-01-25"},{"lineNumber":69,"author":{"gitId":"Masahiro21"},"content":"                 taskList.getTask(indexUnmark-1).markAsUndone();","lastModifiedDate":"2023-03-05"},{"lineNumber":70,"author":{"gitId":"Masahiro21"},"content":"                 ui.showUnmarkedTask(taskList,indexUnmark);","lastModifiedDate":"2023-03-05"},{"lineNumber":71,"author":{"gitId":"Masahiro21"},"content":"                 storage.saveToFile(taskList.getTaskList());","lastModifiedDate":"2023-03-05"},{"lineNumber":72,"author":{"gitId":"Masahiro21"},"content":"                 return false;","lastModifiedDate":"2023-02-02"},{"lineNumber":73,"author":{"gitId":"Masahiro21"},"content":"             case \"todo\":","lastModifiedDate":"2023-02-02"},{"lineNumber":74,"author":{"gitId":"Masahiro21"},"content":"                 try {","lastModifiedDate":"2023-02-07"},{"lineNumber":75,"author":{"gitId":"Masahiro21"},"content":"                     ToDo toDoTask \u003d new ToDo(parser.getDescription(), isDone);","lastModifiedDate":"2023-03-05"},{"lineNumber":76,"author":{"gitId":"Masahiro21"},"content":"                     numOfTask +\u003d 1;","lastModifiedDate":"2023-02-02"},{"lineNumber":77,"author":{"gitId":"Masahiro21"},"content":"                     taskList.addTask(toDoTask);","lastModifiedDate":"2023-03-05"},{"lineNumber":78,"author":{"gitId":"Masahiro21"},"content":"                     ui.showTodoTask(taskList,numOfTask);","lastModifiedDate":"2023-03-05"},{"lineNumber":79,"author":{"gitId":"Masahiro21"},"content":"                     taskList.updateTaskLists(numOfTask,taskList.getTaskList());","lastModifiedDate":"2023-03-05"},{"lineNumber":80,"author":{"gitId":"Masahiro21"},"content":"                     storage.saveToFile(taskList.getTaskList());","lastModifiedDate":"2023-03-05"},{"lineNumber":81,"author":{"gitId":"Masahiro21"},"content":"                 } catch (ToDoException e) {","lastModifiedDate":"2023-02-07"},{"lineNumber":82,"author":{"gitId":"Masahiro21"},"content":"                     ui.showInvalidTodoFormatMessage();","lastModifiedDate":"2023-03-05"},{"lineNumber":83,"author":{"gitId":"Masahiro21"},"content":"                 }","lastModifiedDate":"2023-02-07"},{"lineNumber":84,"author":{"gitId":"Masahiro21"},"content":"                 return false;","lastModifiedDate":"2023-02-02"},{"lineNumber":85,"author":{"gitId":"Masahiro21"},"content":"             case \"deadline\":","lastModifiedDate":"2023-02-02"},{"lineNumber":86,"author":{"gitId":"Masahiro21"},"content":"                 try {","lastModifiedDate":"2023-02-07"},{"lineNumber":87,"author":{"gitId":"Masahiro21"},"content":"                     Deadline deadlineTask \u003d new Deadline(parser.getDescription(),isDone, parser.getDeadline());","lastModifiedDate":"2023-03-05"},{"lineNumber":88,"author":{"gitId":"Masahiro21"},"content":"                     numOfTask +\u003d 1;","lastModifiedDate":"2023-02-07"},{"lineNumber":89,"author":{"gitId":"Masahiro21"},"content":"                     taskList.addTask(deadlineTask);","lastModifiedDate":"2023-03-05"},{"lineNumber":90,"author":{"gitId":"Masahiro21"},"content":"                     ui.showDeadlineTask(taskList,numOfTask);","lastModifiedDate":"2023-03-05"},{"lineNumber":91,"author":{"gitId":"Masahiro21"},"content":"                     taskList.updateTaskLists(numOfTask,taskList.getTaskList());","lastModifiedDate":"2023-03-05"},{"lineNumber":92,"author":{"gitId":"Masahiro21"},"content":"                     storage.saveToFile(taskList.getTaskList());","lastModifiedDate":"2023-03-05"},{"lineNumber":93,"author":{"gitId":"Masahiro21"},"content":"                 }catch (StringIndexOutOfBoundsException e){","lastModifiedDate":"2023-02-07"},{"lineNumber":94,"author":{"gitId":"Masahiro21"},"content":"                     ui.showInvalidDeadlineFormatMessage();","lastModifiedDate":"2023-03-05"},{"lineNumber":95,"author":{"gitId":"Masahiro21"},"content":"                 }","lastModifiedDate":"2023-02-07"},{"lineNumber":96,"author":{"gitId":"Masahiro21"},"content":"                 return false;","lastModifiedDate":"2023-02-02"},{"lineNumber":97,"author":{"gitId":"Masahiro21"},"content":"             case \"event\":","lastModifiedDate":"2023-02-02"},{"lineNumber":98,"author":{"gitId":"Masahiro21"},"content":"                 try {","lastModifiedDate":"2023-02-07"},{"lineNumber":99,"author":{"gitId":"Masahiro21"},"content":"                     Event eventTask \u003d new Event(parser.getDescription(), isDone, parser.getFromDate(), parser.getToDate());","lastModifiedDate":"2023-03-05"},{"lineNumber":100,"author":{"gitId":"Masahiro21"},"content":"                     numOfTask +\u003d 1;","lastModifiedDate":"2023-02-07"},{"lineNumber":101,"author":{"gitId":"Masahiro21"},"content":"                     taskList.addTask(eventTask);","lastModifiedDate":"2023-03-05"},{"lineNumber":102,"author":{"gitId":"Masahiro21"},"content":"                     ui.showEventTask(taskList,numOfTask);","lastModifiedDate":"2023-03-05"},{"lineNumber":103,"author":{"gitId":"Masahiro21"},"content":"                     taskList.updateTaskLists(numOfTask,taskList.getTaskList());","lastModifiedDate":"2023-03-05"},{"lineNumber":104,"author":{"gitId":"Masahiro21"},"content":"                     storage.saveToFile(taskList.getTaskList());","lastModifiedDate":"2023-03-05"},{"lineNumber":105,"author":{"gitId":"Masahiro21"},"content":"                 }catch(StringIndexOutOfBoundsException e){","lastModifiedDate":"2023-02-07"},{"lineNumber":106,"author":{"gitId":"Masahiro21"},"content":"                     ui.showInvalidEventFormatMessage();","lastModifiedDate":"2023-03-05"},{"lineNumber":107,"author":{"gitId":"Masahiro21"},"content":"                 }catch(EventException e){","lastModifiedDate":"2023-02-07"},{"lineNumber":108,"author":{"gitId":"Masahiro21"},"content":"                     ui.showEmptyToFieldMessage();","lastModifiedDate":"2023-03-05"},{"lineNumber":109,"author":{"gitId":"Masahiro21"},"content":"                 }","lastModifiedDate":"2023-02-07"},{"lineNumber":110,"author":{"gitId":"Masahiro21"},"content":"                 return false;","lastModifiedDate":"2023-01-25"},{"lineNumber":111,"author":{"gitId":"Masahiro21"},"content":"             case \"delete\":","lastModifiedDate":"2023-02-28"},{"lineNumber":112,"author":{"gitId":"Masahiro21"},"content":"                 int indexDelete \u003d Integer.parseInt(taskNumber);","lastModifiedDate":"2023-03-05"},{"lineNumber":113,"author":{"gitId":"Masahiro21"},"content":"                 ui.showDeletedTask(taskList,indexDelete,numOfTask);","lastModifiedDate":"2023-03-05"},{"lineNumber":114,"author":{"gitId":"Masahiro21"},"content":"                 taskList.removeTask(indexDelete-1);","lastModifiedDate":"2023-03-05"},{"lineNumber":115,"author":{"gitId":"Masahiro21"},"content":"                 numOfTask -\u003d 1;","lastModifiedDate":"2023-02-28"},{"lineNumber":116,"author":{"gitId":"Masahiro21"},"content":"                 taskList.updateTaskLists(numOfTask,taskList.getTaskList());","lastModifiedDate":"2023-03-05"},{"lineNumber":117,"author":{"gitId":"Masahiro21"},"content":"                 storage.saveToFile(taskList.getTaskList());","lastModifiedDate":"2023-03-05"},{"lineNumber":118,"author":{"gitId":"Masahiro21"},"content":"                 return false;","lastModifiedDate":"2023-02-28"},{"lineNumber":119,"author":{"gitId":"Masahiro21"},"content":"             case \"find\":","lastModifiedDate":"2023-03-05"},{"lineNumber":120,"author":{"gitId":"Masahiro21"},"content":"                 String keyword \u003d parser.getKeyword();","lastModifiedDate":"2023-03-05"},{"lineNumber":121,"author":{"gitId":"Masahiro21"},"content":"                 ui.showMatchingTasksMessage();","lastModifiedDate":"2023-03-05"},{"lineNumber":122,"author":{"gitId":"Masahiro21"},"content":"                 taskList.keywordedTaskList(keyword,taskList.getTaskList());","lastModifiedDate":"2023-03-05"},{"lineNumber":123,"author":{"gitId":"Masahiro21"},"content":"                 return false;","lastModifiedDate":"2023-03-05"},{"lineNumber":124,"author":{"gitId":"Masahiro21"},"content":"             default:","lastModifiedDate":"2023-01-25"},{"lineNumber":125,"author":{"gitId":"Masahiro21"},"content":"                 throw new DukeException();","lastModifiedDate":"2023-02-07"},{"lineNumber":126,"author":{"gitId":"Masahiro21"},"content":"         }","lastModifiedDate":"2023-01-25"},{"lineNumber":127,"author":{"gitId":"Masahiro21"},"content":"     }","lastModifiedDate":"2023-01-25"},{"lineNumber":128,"author":{"gitId":"Masahiro21"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":129,"author":{"gitId":"Masahiro21"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":130,"author":{"gitId":"Masahiro21"},"content":"     * Runs the program until termination condition has been satisfied.","lastModifiedDate":"2023-03-05"},{"lineNumber":131,"author":{"gitId":"Masahiro21"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":132,"author":{"gitId":"Masahiro21"},"content":"     * @throws ArrayIndexOutOfBoundsException if task number provided does not exist.","lastModifiedDate":"2023-03-05"},{"lineNumber":133,"author":{"gitId":"Masahiro21"},"content":"     * @throws DukeException if command issued by user is not recognized.","lastModifiedDate":"2023-03-05"},{"lineNumber":134,"author":{"gitId":"Masahiro21"},"content":"     * @throws IOException is user input string is not recognized.","lastModifiedDate":"2023-03-05"},{"lineNumber":135,"author":{"gitId":"Masahiro21"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":136,"author":{"gitId":"Masahiro21"},"content":"    public void run(){","lastModifiedDate":"2023-03-05"},{"lineNumber":137,"author":{"gitId":"Masahiro21"},"content":"        try {","lastModifiedDate":"2023-02-07"},{"lineNumber":138,"author":{"gitId":"Masahiro21"},"content":"            Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-25"},{"lineNumber":139,"author":{"gitId":"Masahiro21"},"content":"            String in \u003d sc.nextLine();","lastModifiedDate":"2023-01-25"},{"lineNumber":140,"author":{"gitId":"Masahiro21"},"content":"            while (shouldExit(in) \u003d\u003d false) {","lastModifiedDate":"2023-02-02"},{"lineNumber":141,"author":{"gitId":"Masahiro21"},"content":"                in \u003d sc.nextLine();","lastModifiedDate":"2023-01-25"},{"lineNumber":142,"author":{"gitId":"Masahiro21"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":143,"author":{"gitId":"Masahiro21"},"content":"        } catch (ArrayIndexOutOfBoundsException e){","lastModifiedDate":"2023-02-07"},{"lineNumber":144,"author":{"gitId":"Masahiro21"},"content":"            ui.showInvalidTaskNumberMessage();","lastModifiedDate":"2023-03-05"},{"lineNumber":145,"author":{"gitId":"Masahiro21"},"content":"        } catch (DukeException | IOException e) {","lastModifiedDate":"2023-03-05"},{"lineNumber":146,"author":{"gitId":"Masahiro21"},"content":"            ui.showDukeExceptionMessage();","lastModifiedDate":"2023-03-05"},{"lineNumber":147,"author":{"gitId":"Masahiro21"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":148,"author":{"gitId":"Masahiro21"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":149,"author":{"gitId":"Masahiro21"},"content":"    public static void main(String[] args){","lastModifiedDate":"2023-03-05"},{"lineNumber":150,"author":{"gitId":"Masahiro21"},"content":"        new Duke(filePath).run();","lastModifiedDate":"2023-03-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":153,"author":{"gitId":"Masahiro21"},"content":"","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"Masahiro21":150,"-":3}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Masahiro21"},"content":"package duke;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"Masahiro21"},"content":"import duke.exceptions.EventException;","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"Masahiro21"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"Masahiro21"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"Masahiro21"},"content":" * Represents a task that is of event type.","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"Masahiro21"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"Masahiro21"},"content":"public class Event extends Task {","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"Masahiro21"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"Masahiro21"},"content":"    protected String from;","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"Masahiro21"},"content":"    protected String to;","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"Masahiro21"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"Masahiro21"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"Masahiro21"},"content":"     * Sets the description, done status, from date and to date of the event.","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"Masahiro21"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"Masahiro21"},"content":"     * @param description description of the event.","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"Masahiro21"},"content":"     * @param isDone done status of the event.","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"Masahiro21"},"content":"     * @param from start date/time of the event.","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"Masahiro21"},"content":"     * @param to end date/time of the event.","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"Masahiro21"},"content":"     * @throws EventException if the end date/time field is empty.","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"Masahiro21"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"Masahiro21"},"content":"    public Event(String description, boolean isDone, String from, String to) throws EventException {","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"Masahiro21"},"content":"        super(description, isDone);","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"Masahiro21"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"Masahiro21"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"Masahiro21"},"content":"        if(to.length() \u003d\u003d 0){","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"Masahiro21"},"content":"            throw new EventException();","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"Masahiro21"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"Masahiro21"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"Masahiro21"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"Masahiro21"},"content":"    public String getType(){","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"Masahiro21"},"content":"        return \"E\";","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"Masahiro21"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"Masahiro21"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"Masahiro21"},"content":"    public String getPeriod(){","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"Masahiro21"},"content":"        return \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"Masahiro21"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"Masahiro21"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"Masahiro21"},"content":"    public String getPeriodSave(){","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"Masahiro21"},"content":"        return  from + \" | \" + to;","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"Masahiro21"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"Masahiro21"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"Masahiro21"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"Masahiro21"},"content":"    public String toString() {","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"Masahiro21"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + \"  [E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"Masahiro21"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"Masahiro21"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"Masahiro21":46}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Masahiro21"},"content":"package duke;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"Masahiro21"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"Masahiro21"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"Masahiro21"},"content":" * Represents a task.","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"Masahiro21"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"Masahiro21"},"content":"public class Task {","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"Masahiro21"},"content":"    protected String description;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"Masahiro21"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"Masahiro21"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"Masahiro21"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"Masahiro21"},"content":"     * Sets the descriptions of the task and its done status .","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"Masahiro21"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"Masahiro21"},"content":"     * @param description description of the task.","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"Masahiro21"},"content":"     * @param isDone done status of the task.","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"Masahiro21"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"Masahiro21"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"Masahiro21"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"Masahiro21"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"Masahiro21"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"Masahiro21"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"Masahiro21"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"Masahiro21"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"Masahiro21"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"Masahiro21"},"content":"    public String getStatusIconSave() {","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"Masahiro21"},"content":"        return (isDone ? \"1\" : \"0\");","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"Masahiro21"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"Masahiro21"},"content":"    public String getDescription(){","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"Masahiro21"},"content":"        return description;","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"Masahiro21"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"Masahiro21"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"Masahiro21"},"content":"    public String getType(){ return \" \";}","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"Masahiro21"},"content":"    public String getPeriod(){","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"Masahiro21"},"content":"        return \"\";","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"Masahiro21"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"Masahiro21"},"content":"    public String getPeriodSave() { return \"\";}","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"Masahiro21"},"content":"    public String getDeadline(){ return \"\";}","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"Masahiro21"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"Masahiro21"},"content":"    public String getDeadlineSave(){ return \"\";}","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"Masahiro21"},"content":"    public void markAsDone(){","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"Masahiro21"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"Masahiro21"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"Masahiro21"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"Masahiro21"},"content":"    public void markAsUndone(){","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"Masahiro21"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"Masahiro21"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"Masahiro21"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"Masahiro21"},"content":"    public String toString(){","lastModifiedDate":"2023-02-02"},{"lineNumber":48,"author":{"gitId":"Masahiro21"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + description;","lastModifiedDate":"2023-02-02"},{"lineNumber":49,"author":{"gitId":"Masahiro21"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":50,"author":{"gitId":"Masahiro21"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"Masahiro21":50}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Masahiro21"},"content":"package duke;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"Masahiro21"},"content":"import duke.exceptions.ToDoException;","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"Masahiro21"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"Masahiro21"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"Masahiro21"},"content":" * Represents a task that is of to-do type.","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"Masahiro21"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"Masahiro21"},"content":"public class ToDo extends Task{","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"Masahiro21"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"Masahiro21"},"content":"     * Sets the description and done status of the to-do task.","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"Masahiro21"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"Masahiro21"},"content":"     * @param description description of the to-do task.","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"Masahiro21"},"content":"     * @param isDone done status of the to-do task.","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"Masahiro21"},"content":"     * @throws ToDoException if description field of the to-do task is empty.","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"Masahiro21"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"Masahiro21"},"content":"    public ToDo(String description, boolean isDone) throws ToDoException{","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"Masahiro21"},"content":"        super(description,isDone);","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"Masahiro21"},"content":"        if(description.length() \u003d\u003d 0){","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"Masahiro21"},"content":"            throw new ToDoException();","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"Masahiro21"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"Masahiro21"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"Masahiro21"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"Masahiro21"},"content":"    public String getType(){","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"Masahiro21"},"content":"        return \"T\";","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"Masahiro21"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"Masahiro21"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"Masahiro21"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"Masahiro21"},"content":"    public String toString() {","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"Masahiro21"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + \"  [T][\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"Masahiro21"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"Masahiro21"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"Masahiro21":30}},{"path":"src/main/java/duke/common/Messages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Masahiro21"},"content":"package duke.common;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"Masahiro21"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"Masahiro21"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"Masahiro21"},"content":" * Container that contains all the messages being displayed to the user","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"Masahiro21"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"Masahiro21"},"content":"public class Messages {","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"Masahiro21"},"content":"    public static final String GOODBYE_MESSAGE \u003d \"Good bye! Hope to see you again soon.\";","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"Masahiro21"},"content":"    public static final String TASK_REMOVED_MESSAGE \u003d \"Noted. I\u0027ve removed this task\";","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"Masahiro21"},"content":"    public static final String MARK_UNDONE_MESSAGE \u003d \"OK, I\u0027ve marked this task as not done yet:\";","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"Masahiro21"},"content":"    public static final String MARK_DONE_MESSAGE \u003d \"OK, I\u0027ve marked this task as completed:\";","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"Masahiro21"},"content":"    public static final String LIST_TASKS_MESSAGE \u003d \"Here are the task(s) in your list:\";","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"Masahiro21"},"content":"    public static final String INVALID_TODO_FORMAT_MESSAGE \u003d \"The description of a todo cannot be empty!\";","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"Masahiro21"},"content":"    public static final String INVALID_DEADLINE_FORMAT_MESSAGE \u003d \"The description of deadline and/or date of deadline cannot be empty!\";","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"Masahiro21"},"content":"    public static final String INVALID_EVENT_FORMAT_MESSAGE \u003d \"The description of the event and/or period of it cannot be empty!\";","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"Masahiro21"},"content":"    public static final String EMPTY_TO_FIELD_MESSAGE \u003d \"To field is empty!\" ;","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"Masahiro21"},"content":"    public static final String CREATING_NEW_FILE \u003d \"It looks like you do not have a save file, creating save file \u0027duke_list.txt\u0027 for you.\";","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"Masahiro21"},"content":"    public static final String LOADING_FILE_MESSAGE \u003d \"We have loaded your file and this is the current state of your list.\";","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"Masahiro21"},"content":"    public static final String INVALID_TASK_NUMBER_MESSAGE \u003d \"This task number does not exist!\";","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"Masahiro21"},"content":"    public static final String DUKE_EXCEPTION_MESSAGE \u003d \"I\u0027m sorry I\u0027m not sure what this means!\";","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"Masahiro21"},"content":"    public static final String MATCHING_TASKS_MESSAGE \u003d \"Here\u0027s the list of task(s) in your list that matches your keyword: \";","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"Masahiro21"},"content":"    public static final String WELCOME_MESSAGE \u003d  \" ___       __   _______   ___       ________  ________  _____ ______   _______ \\n\" +","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"Masahiro21"},"content":"            \"|\\\\  \\\\     |\\\\  \\\\|\\\\  ___ \\\\ |\\\\  \\\\     |\\\\   ____\\\\|\\\\   __  \\\\|\\\\   _ \\\\  _   \\\\|\\\\  ___ \\\\ \\n\" +","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"Masahiro21"},"content":"            \"\\\\ \\\\  \\\\    \\\\ \\\\  \\\\ \\\\   __/|\\\\ \\\\  \\\\    \\\\ \\\\  \\\\___|\\\\ \\\\  \\\\|\\\\  \\\\ \\\\  \\\\\\\\\\\\__\\\\ \\\\  \\\\ \\\\   __/|\\n\" +","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"Masahiro21"},"content":"            \" \\\\ \\\\  \\\\  __\\\\ \\\\  \\\\ \\\\  \\\\_|/_\\\\ \\\\  \\\\    \\\\ \\\\  \\\\    \\\\ \\\\  \\\\\\\\\\\\  \\\\ \\\\  \\\\\\\\|__| \\\\  \\\\ \\\\  \\\\_|/__\\n\" +","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"Masahiro21"},"content":"            \"  \\\\ \\\\  \\\\|\\\\__\\\\_\\\\  \\\\ \\\\  \\\\_|\\\\ \\\\ \\\\  \\\\____\\\\ \\\\  \\\\____\\\\ \\\\  \\\\\\\\\\\\  \\\\ \\\\  \\\\    \\\\ \\\\  \\\\ \\\\  \\\\_|\\\\ \\\\ \\n\" +","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"Masahiro21"},"content":"            \"   \\\\ \\\\____________\\\\ \\\\_______\\\\ \\\\_______\\\\ \\\\_______\\\\ \\\\_______\\\\ \\\\__\\\\    \\\\ \\\\__\\\\ \\\\_______\\\\ \\n\"+","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"Masahiro21"},"content":"            \"    \\\\|____________|\\\\|_______|\\\\|_______|\\\\|_______|\\\\|_______|\\\\|__|     \\\\|__|\\\\|_______| \\n\\n\" +","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"Masahiro21"},"content":"            \"Hi! I\u0027m Mike, your personal assistant! How can I help you today? \\n\";","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"Masahiro21"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"Masahiro21":29}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Masahiro21"},"content":"package duke.exceptions;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"Masahiro21"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"Masahiro21"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"Masahiro21":3}},{"path":"src/main/java/duke/exceptions/EventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Masahiro21"},"content":"package duke.exceptions;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"Masahiro21"},"content":"public class EventException extends Exception{","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"Masahiro21"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"Masahiro21":3}},{"path":"src/main/java/duke/exceptions/ToDoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Masahiro21"},"content":"package duke.exceptions;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"Masahiro21"},"content":"public class ToDoException extends Exception {","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"Masahiro21"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"Masahiro21":3}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Masahiro21"},"content":"package duke.parser;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"Masahiro21"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"Masahiro21"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"Masahiro21"},"content":" * Parses the user\u0027s input.","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"Masahiro21"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"Masahiro21"},"content":"public class Parser {","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"Masahiro21"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"Masahiro21"},"content":"    protected String command;","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"Masahiro21"},"content":"    protected String keyword;","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"Masahiro21"},"content":"    protected String description;","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"Masahiro21"},"content":"    protected String deadline;","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"Masahiro21"},"content":"    protected String fromDate;","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"Masahiro21"},"content":"    protected String toDate;","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"Masahiro21"},"content":"    protected String taskNumber;","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"Masahiro21"},"content":"    protected boolean shouldExit;","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"Masahiro21"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"Masahiro21"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"Masahiro21"},"content":"     * Parses the user\u0027s input into different commands and stores its information.","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"Masahiro21"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"Masahiro21"},"content":"     * @param userInput full user input string.","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"Masahiro21"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"Masahiro21"},"content":"    public Parser(String userInput) {","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"Masahiro21"},"content":"        int dividerPosition \u003d userInput.indexOf(\" \");","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"Masahiro21"},"content":"        String commandWord \u003d filterCommand(userInput);","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"Masahiro21"},"content":"        command \u003d commandWord;","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"Masahiro21"},"content":"        switch (commandWord) {","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"Masahiro21"},"content":"            case \"bye\":","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"Masahiro21"},"content":"                shouldExit \u003d true;","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"Masahiro21"},"content":"                break;","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"Masahiro21"},"content":"            case \"list\":","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"Masahiro21"},"content":"                shouldExit \u003d false;","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"Masahiro21"},"content":"                break;","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"Masahiro21"},"content":"            case \"mark\":","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"Masahiro21"},"content":"                taskNumber \u003d userInput.substring(dividerPosition + 1, userInput.length());","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"Masahiro21"},"content":"                shouldExit \u003d false;","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"Masahiro21"},"content":"                break;","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"Masahiro21"},"content":"            case \"unmark\":","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"Masahiro21"},"content":"                taskNumber \u003d userInput.substring(dividerPosition + 1, userInput.length());","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"Masahiro21"},"content":"                shouldExit \u003d false;","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"Masahiro21"},"content":"                break;","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"Masahiro21"},"content":"            case \"todo\":","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"Masahiro21"},"content":"                description \u003d filterDescription(userInput);","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"Masahiro21"},"content":"                shouldExit \u003d false;","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"Masahiro21"},"content":"                break;","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"Masahiro21"},"content":"            case \"deadline\":","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"Masahiro21"},"content":"                description \u003d filterDescriptionAndDeadline(userInput)[0];","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"Masahiro21"},"content":"                deadline \u003d filterDescriptionAndDeadline(userInput)[1];","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"Masahiro21"},"content":"                shouldExit \u003d false;","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"Masahiro21"},"content":"                break;","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"Masahiro21"},"content":"            case \"event\":","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"Masahiro21"},"content":"                description \u003d filterDescriptionAndTimePeriod(userInput)[0];","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"Masahiro21"},"content":"                fromDate \u003d filterDescriptionAndTimePeriod(userInput)[1];","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"Masahiro21"},"content":"                toDate \u003d filterDescriptionAndTimePeriod(userInput)[2];","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"Masahiro21"},"content":"                shouldExit \u003d false;","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"Masahiro21"},"content":"                break;","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"Masahiro21"},"content":"            case \"delete\":","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"Masahiro21"},"content":"                taskNumber \u003d userInput.substring(dividerPosition + 1, userInput.length());","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"Masahiro21"},"content":"                shouldExit \u003d false;","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"Masahiro21"},"content":"                break;","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"Masahiro21"},"content":"            case \"find\":","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"Masahiro21"},"content":"                keyword \u003d filterDescription(userInput);","lastModifiedDate":"2023-03-05"},{"lineNumber":62,"author":{"gitId":"Masahiro21"},"content":"                shouldExit \u003d false;","lastModifiedDate":"2023-03-05"},{"lineNumber":63,"author":{"gitId":"Masahiro21"},"content":"            default:","lastModifiedDate":"2023-03-05"},{"lineNumber":64,"author":{"gitId":"Masahiro21"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":65,"author":{"gitId":"Masahiro21"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":66,"author":{"gitId":"Masahiro21"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":67,"author":{"gitId":"Masahiro21"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":68,"author":{"gitId":"Masahiro21"},"content":"     * Filters out the command word from the user\u0027s input string.","lastModifiedDate":"2023-03-05"},{"lineNumber":69,"author":{"gitId":"Masahiro21"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":70,"author":{"gitId":"Masahiro21"},"content":"     * @param userInput full user input string.","lastModifiedDate":"2023-03-05"},{"lineNumber":71,"author":{"gitId":"Masahiro21"},"content":"     * @return command word based on the user\u0027s input.","lastModifiedDate":"2023-03-05"},{"lineNumber":72,"author":{"gitId":"Masahiro21"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":73,"author":{"gitId":"Masahiro21"},"content":"    private static String filterCommand(String userInput) {","lastModifiedDate":"2023-03-05"},{"lineNumber":74,"author":{"gitId":"Masahiro21"},"content":"        String[] words \u003d userInput.split(\" \");  // splits into words","lastModifiedDate":"2023-03-05"},{"lineNumber":75,"author":{"gitId":"Masahiro21"},"content":"        for (String word : words) {","lastModifiedDate":"2023-03-05"},{"lineNumber":76,"author":{"gitId":"Masahiro21"},"content":"            switch (word) {","lastModifiedDate":"2023-03-05"},{"lineNumber":77,"author":{"gitId":"Masahiro21"},"content":"                case \"bye\":","lastModifiedDate":"2023-03-05"},{"lineNumber":78,"author":{"gitId":"Masahiro21"},"content":"                    return \"bye\";","lastModifiedDate":"2023-03-05"},{"lineNumber":79,"author":{"gitId":"Masahiro21"},"content":"                case \"list\":","lastModifiedDate":"2023-03-05"},{"lineNumber":80,"author":{"gitId":"Masahiro21"},"content":"                    return \"list\";","lastModifiedDate":"2023-03-05"},{"lineNumber":81,"author":{"gitId":"Masahiro21"},"content":"                case \"mark\":","lastModifiedDate":"2023-03-05"},{"lineNumber":82,"author":{"gitId":"Masahiro21"},"content":"                    return \"mark\";","lastModifiedDate":"2023-03-05"},{"lineNumber":83,"author":{"gitId":"Masahiro21"},"content":"                case \"unmark\":","lastModifiedDate":"2023-03-05"},{"lineNumber":84,"author":{"gitId":"Masahiro21"},"content":"                    return \"unmark\";","lastModifiedDate":"2023-03-05"},{"lineNumber":85,"author":{"gitId":"Masahiro21"},"content":"                case \"todo\":","lastModifiedDate":"2023-03-05"},{"lineNumber":86,"author":{"gitId":"Masahiro21"},"content":"                    return \"todo\";","lastModifiedDate":"2023-03-05"},{"lineNumber":87,"author":{"gitId":"Masahiro21"},"content":"                case \"deadline\":","lastModifiedDate":"2023-03-05"},{"lineNumber":88,"author":{"gitId":"Masahiro21"},"content":"                    return \"deadline\";","lastModifiedDate":"2023-03-05"},{"lineNumber":89,"author":{"gitId":"Masahiro21"},"content":"                case \"event\":","lastModifiedDate":"2023-03-05"},{"lineNumber":90,"author":{"gitId":"Masahiro21"},"content":"                    return \"event\";","lastModifiedDate":"2023-03-05"},{"lineNumber":91,"author":{"gitId":"Masahiro21"},"content":"                case \"delete\":","lastModifiedDate":"2023-03-05"},{"lineNumber":92,"author":{"gitId":"Masahiro21"},"content":"                    return \"delete\";","lastModifiedDate":"2023-03-05"},{"lineNumber":93,"author":{"gitId":"Masahiro21"},"content":"                case \"find\":","lastModifiedDate":"2023-03-05"},{"lineNumber":94,"author":{"gitId":"Masahiro21"},"content":"                    return \"find\";","lastModifiedDate":"2023-03-05"},{"lineNumber":95,"author":{"gitId":"Masahiro21"},"content":"                default:","lastModifiedDate":"2023-03-05"},{"lineNumber":96,"author":{"gitId":"Masahiro21"},"content":"            }","lastModifiedDate":"2023-03-05"},{"lineNumber":97,"author":{"gitId":"Masahiro21"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":98,"author":{"gitId":"Masahiro21"},"content":"        return userInput;","lastModifiedDate":"2023-03-05"},{"lineNumber":99,"author":{"gitId":"Masahiro21"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":100,"author":{"gitId":"Masahiro21"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":101,"author":{"gitId":"Masahiro21"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":102,"author":{"gitId":"Masahiro21"},"content":"     * Filters out the description from the user\u0027s input string.","lastModifiedDate":"2023-03-05"},{"lineNumber":103,"author":{"gitId":"Masahiro21"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":104,"author":{"gitId":"Masahiro21"},"content":"     * @param userInput full user input string.","lastModifiedDate":"2023-03-05"},{"lineNumber":105,"author":{"gitId":"Masahiro21"},"content":"     * @return a string which is the description of the task based on the user\u0027s input.","lastModifiedDate":"2023-03-05"},{"lineNumber":106,"author":{"gitId":"Masahiro21"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":107,"author":{"gitId":"Masahiro21"},"content":"    public static String filterDescription(String userInput) {","lastModifiedDate":"2023-03-05"},{"lineNumber":108,"author":{"gitId":"Masahiro21"},"content":"        String command \u003d filterCommand(userInput);","lastModifiedDate":"2023-03-05"},{"lineNumber":109,"author":{"gitId":"Masahiro21"},"content":"        String description \u003d userInput.replaceAll(command, \"\");","lastModifiedDate":"2023-03-05"},{"lineNumber":110,"author":{"gitId":"Masahiro21"},"content":"        return description.trim();","lastModifiedDate":"2023-03-05"},{"lineNumber":111,"author":{"gitId":"Masahiro21"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":112,"author":{"gitId":"Masahiro21"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":113,"author":{"gitId":"Masahiro21"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":114,"author":{"gitId":"Masahiro21"},"content":"     * Filters out the description and the deadline date from the user\u0027s input string.","lastModifiedDate":"2023-03-05"},{"lineNumber":115,"author":{"gitId":"Masahiro21"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":116,"author":{"gitId":"Masahiro21"},"content":"     * @param userInput full user input string.","lastModifiedDate":"2023-03-05"},{"lineNumber":117,"author":{"gitId":"Masahiro21"},"content":"     * @return a string array containing the description and deadline of the task based on the user\u0027s input.","lastModifiedDate":"2023-03-05"},{"lineNumber":118,"author":{"gitId":"Masahiro21"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":119,"author":{"gitId":"Masahiro21"},"content":"    public static String[] filterDescriptionAndDeadline(String userInput) {","lastModifiedDate":"2023-03-05"},{"lineNumber":120,"author":{"gitId":"Masahiro21"},"content":"        String[] output \u003d new String[2];","lastModifiedDate":"2023-03-05"},{"lineNumber":121,"author":{"gitId":"Masahiro21"},"content":"        String str \u003d filterDescription(userInput);","lastModifiedDate":"2023-03-05"},{"lineNumber":122,"author":{"gitId":"Masahiro21"},"content":"        int dividerPosition \u003d str.indexOf(\"/\");","lastModifiedDate":"2023-03-05"},{"lineNumber":123,"author":{"gitId":"Masahiro21"},"content":"        String description \u003d str.substring(0, dividerPosition - 1);","lastModifiedDate":"2023-03-05"},{"lineNumber":124,"author":{"gitId":"Masahiro21"},"content":"        output[0] \u003d description.trim();","lastModifiedDate":"2023-03-05"},{"lineNumber":125,"author":{"gitId":"Masahiro21"},"content":"        String deadline \u003d str.substring(dividerPosition + 1, str.length());","lastModifiedDate":"2023-03-05"},{"lineNumber":126,"author":{"gitId":"Masahiro21"},"content":"        String byDate \u003d deadline.replaceAll(\"by\", \"\");","lastModifiedDate":"2023-03-05"},{"lineNumber":127,"author":{"gitId":"Masahiro21"},"content":"        output[1] \u003d byDate.trim();","lastModifiedDate":"2023-03-05"},{"lineNumber":128,"author":{"gitId":"Masahiro21"},"content":"        return output;","lastModifiedDate":"2023-03-05"},{"lineNumber":129,"author":{"gitId":"Masahiro21"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":130,"author":{"gitId":"Masahiro21"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":131,"author":{"gitId":"Masahiro21"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":132,"author":{"gitId":"Masahiro21"},"content":"     * Filters out the description and time period from the user\u0027s input string.","lastModifiedDate":"2023-03-05"},{"lineNumber":133,"author":{"gitId":"Masahiro21"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":134,"author":{"gitId":"Masahiro21"},"content":"     * @param userInput full user input string.","lastModifiedDate":"2023-03-05"},{"lineNumber":135,"author":{"gitId":"Masahiro21"},"content":"     * @return a string array containing the description and time period of the task based on the user\u0027s input in.","lastModifiedDate":"2023-03-05"},{"lineNumber":136,"author":{"gitId":"Masahiro21"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":137,"author":{"gitId":"Masahiro21"},"content":"    public static String[] filterDescriptionAndTimePeriod(String userInput) {","lastModifiedDate":"2023-03-05"},{"lineNumber":138,"author":{"gitId":"Masahiro21"},"content":"        String[] output \u003d new String[3];","lastModifiedDate":"2023-03-05"},{"lineNumber":139,"author":{"gitId":"Masahiro21"},"content":"        String str \u003d filterDescription(userInput);","lastModifiedDate":"2023-03-05"},{"lineNumber":140,"author":{"gitId":"Masahiro21"},"content":"        int dividerPosition \u003d str.indexOf(\"/\");","lastModifiedDate":"2023-03-05"},{"lineNumber":141,"author":{"gitId":"Masahiro21"},"content":"        String description \u003d str.substring(0, dividerPosition - 1);","lastModifiedDate":"2023-03-05"},{"lineNumber":142,"author":{"gitId":"Masahiro21"},"content":"        output[0] \u003d description.trim();","lastModifiedDate":"2023-03-05"},{"lineNumber":143,"author":{"gitId":"Masahiro21"},"content":"        String deadline \u003d str.substring(dividerPosition + 1, str.length());","lastModifiedDate":"2023-03-05"},{"lineNumber":144,"author":{"gitId":"Masahiro21"},"content":"        String fromPeriod \u003d deadline.replaceAll(\"from\", \"\");","lastModifiedDate":"2023-03-05"},{"lineNumber":145,"author":{"gitId":"Masahiro21"},"content":"        String fromDate \u003d fromPeriod.substring(0, fromPeriod.indexOf(\"/\"));","lastModifiedDate":"2023-03-05"},{"lineNumber":146,"author":{"gitId":"Masahiro21"},"content":"        output[1] \u003d fromDate.trim();","lastModifiedDate":"2023-03-05"},{"lineNumber":147,"author":{"gitId":"Masahiro21"},"content":"        String toPeriod \u003d fromPeriod.substring(fromPeriod.indexOf(\"/\") + 1, fromPeriod.length());","lastModifiedDate":"2023-03-05"},{"lineNumber":148,"author":{"gitId":"Masahiro21"},"content":"        String toDate \u003d toPeriod.replaceAll(\"to\", \"\");","lastModifiedDate":"2023-03-05"},{"lineNumber":149,"author":{"gitId":"Masahiro21"},"content":"        output[2] \u003d toDate.trim();","lastModifiedDate":"2023-03-05"},{"lineNumber":150,"author":{"gitId":"Masahiro21"},"content":"        return output;","lastModifiedDate":"2023-03-05"},{"lineNumber":151,"author":{"gitId":"Masahiro21"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":152,"author":{"gitId":"Masahiro21"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":153,"author":{"gitId":"Masahiro21"},"content":"    public String getDescription() {","lastModifiedDate":"2023-03-05"},{"lineNumber":154,"author":{"gitId":"Masahiro21"},"content":"        return description;","lastModifiedDate":"2023-03-05"},{"lineNumber":155,"author":{"gitId":"Masahiro21"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":156,"author":{"gitId":"Masahiro21"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":157,"author":{"gitId":"Masahiro21"},"content":"    public String getDeadline() {","lastModifiedDate":"2023-03-05"},{"lineNumber":158,"author":{"gitId":"Masahiro21"},"content":"        return deadline;","lastModifiedDate":"2023-03-05"},{"lineNumber":159,"author":{"gitId":"Masahiro21"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":160,"author":{"gitId":"Masahiro21"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":161,"author":{"gitId":"Masahiro21"},"content":"    public String getFromDate() {","lastModifiedDate":"2023-03-05"},{"lineNumber":162,"author":{"gitId":"Masahiro21"},"content":"        return fromDate;","lastModifiedDate":"2023-03-05"},{"lineNumber":163,"author":{"gitId":"Masahiro21"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":164,"author":{"gitId":"Masahiro21"},"content":"    public String getToDate(){","lastModifiedDate":"2023-03-05"},{"lineNumber":165,"author":{"gitId":"Masahiro21"},"content":"        return toDate;","lastModifiedDate":"2023-03-05"},{"lineNumber":166,"author":{"gitId":"Masahiro21"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":167,"author":{"gitId":"Masahiro21"},"content":"    public String getTaskNumber(){","lastModifiedDate":"2023-03-05"},{"lineNumber":168,"author":{"gitId":"Masahiro21"},"content":"        return taskNumber;","lastModifiedDate":"2023-03-05"},{"lineNumber":169,"author":{"gitId":"Masahiro21"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":170,"author":{"gitId":"Masahiro21"},"content":"    public String getCommand(){","lastModifiedDate":"2023-03-05"},{"lineNumber":171,"author":{"gitId":"Masahiro21"},"content":"        return command;","lastModifiedDate":"2023-03-05"},{"lineNumber":172,"author":{"gitId":"Masahiro21"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":173,"author":{"gitId":"Masahiro21"},"content":"    public String getKeyword(){","lastModifiedDate":"2023-03-05"},{"lineNumber":174,"author":{"gitId":"Masahiro21"},"content":"        return keyword;","lastModifiedDate":"2023-03-05"},{"lineNumber":175,"author":{"gitId":"Masahiro21"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":176,"author":{"gitId":"Masahiro21"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"Masahiro21":176}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Masahiro21"},"content":"package duke.storage;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"Masahiro21"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"Masahiro21"},"content":"import duke.Deadline;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"Masahiro21"},"content":"import duke.Event;","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"Masahiro21"},"content":"import duke.ToDo;","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"Masahiro21"},"content":"import duke.exceptions.EventException;","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"Masahiro21"},"content":"import duke.exceptions.ToDoException;","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"Masahiro21"},"content":"import duke.Task;","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"Masahiro21"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"Masahiro21"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"Masahiro21"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"Masahiro21"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"Masahiro21"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"Masahiro21"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"Masahiro21"},"content":"import java.io.File;","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"Masahiro21"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"Masahiro21"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"Masahiro21"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"Masahiro21"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"Masahiro21"},"content":" * Represents the file used to store the task list data.","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"Masahiro21"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"Masahiro21"},"content":"public class Storage {","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"Masahiro21"},"content":"    /** Task list used to store all the tasks added/ edited by the user*/","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"Masahiro21"},"content":"    protected ArrayList\u003cTask\u003e tasksList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"Masahiro21"},"content":"    int numOfTask \u003d 0;","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"Masahiro21"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"Masahiro21"},"content":"    /** Default file path set in the event that the user doesn\u0027t provide a file name.*/","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"Masahiro21"},"content":"    public static String filePath \u003d \"src/duke_list.txt\";","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"Masahiro21"},"content":"    public Path path \u003d Paths.get(filePath);","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"Masahiro21"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"Masahiro21"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"Masahiro21"},"content":"     * Reassigns the default file path to the user\u0027s defined file path.","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"Masahiro21"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"Masahiro21"},"content":"     * @param userFilePath the user\u0027s defined file path.","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"Masahiro21"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"Masahiro21"},"content":"    public Storage(String userFilePath){","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"Masahiro21"},"content":"        filePath \u003d userFilePath;","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"Masahiro21"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"Masahiro21"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"Masahiro21"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"Masahiro21"},"content":"     * Loads task list data from the storage file and returns it.","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"Masahiro21"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"Masahiro21"},"content":"     * @throws FileNotFoundException if the file cannot be located or does not exist.","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"Masahiro21"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"Masahiro21"},"content":"    public ArrayList\u003cTask\u003e loadFile () throws FileNotFoundException {","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"Masahiro21"},"content":"        numOfTask \u003d 0;","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"Masahiro21"},"content":"        Scanner sc \u003d null;","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"Masahiro21"},"content":"        try {","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"Masahiro21"},"content":"            sc \u003d new Scanner(path);","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"Masahiro21"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"Masahiro21"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"Masahiro21"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"Masahiro21"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"Masahiro21"},"content":"            String task \u003d sc.nextLine();","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"Masahiro21"},"content":"            String[] taskSet \u003d task.trim().split(\"\\\\|\");","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"Masahiro21"},"content":"            String type \u003d taskSet[0].trim();","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"Masahiro21"},"content":"            boolean isDone \u003d taskSet[1].trim().equals(\"1\");","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"Masahiro21"},"content":"            String description \u003d taskSet[2].trim();","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"Masahiro21"},"content":"            numOfTask +\u003d 1;","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"Masahiro21"},"content":"            switch (type) {","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"Masahiro21"},"content":"                case \"T\":","lastModifiedDate":"2023-03-05"},{"lineNumber":62,"author":{"gitId":"Masahiro21"},"content":"                    try {","lastModifiedDate":"2023-03-05"},{"lineNumber":63,"author":{"gitId":"Masahiro21"},"content":"                        ToDo toDoTask \u003d new ToDo(description, isDone);","lastModifiedDate":"2023-03-05"},{"lineNumber":64,"author":{"gitId":"Masahiro21"},"content":"                        tasksList.add(toDoTask);","lastModifiedDate":"2023-03-05"},{"lineNumber":65,"author":{"gitId":"Masahiro21"},"content":"                    } catch (ToDoException e) {","lastModifiedDate":"2023-03-05"},{"lineNumber":66,"author":{"gitId":"Masahiro21"},"content":"                        System.out.println(\"The description of a todo cannot be empty!\");","lastModifiedDate":"2023-03-05"},{"lineNumber":67,"author":{"gitId":"Masahiro21"},"content":"                    }","lastModifiedDate":"2023-03-05"},{"lineNumber":68,"author":{"gitId":"Masahiro21"},"content":"                    break;","lastModifiedDate":"2023-03-05"},{"lineNumber":69,"author":{"gitId":"Masahiro21"},"content":"                case \"D\":","lastModifiedDate":"2023-03-05"},{"lineNumber":70,"author":{"gitId":"Masahiro21"},"content":"                    String deadline \u003d taskSet[3].trim();","lastModifiedDate":"2023-03-05"},{"lineNumber":71,"author":{"gitId":"Masahiro21"},"content":"                    Deadline deadlineTask \u003d new Deadline(description, isDone, deadline);","lastModifiedDate":"2023-03-05"},{"lineNumber":72,"author":{"gitId":"Masahiro21"},"content":"                    tasksList.add(deadlineTask);","lastModifiedDate":"2023-03-05"},{"lineNumber":73,"author":{"gitId":"Masahiro21"},"content":"                    break;","lastModifiedDate":"2023-03-05"},{"lineNumber":74,"author":{"gitId":"Masahiro21"},"content":"                case \"E\":","lastModifiedDate":"2023-03-05"},{"lineNumber":75,"author":{"gitId":"Masahiro21"},"content":"                    String fromDate \u003d taskSet[3].trim();","lastModifiedDate":"2023-03-05"},{"lineNumber":76,"author":{"gitId":"Masahiro21"},"content":"                    String toDate \u003d taskSet[4].trim();","lastModifiedDate":"2023-03-05"},{"lineNumber":77,"author":{"gitId":"Masahiro21"},"content":"                    try {","lastModifiedDate":"2023-03-05"},{"lineNumber":78,"author":{"gitId":"Masahiro21"},"content":"                        Event eventTask \u003d new Event(description, isDone, fromDate, toDate);","lastModifiedDate":"2023-03-05"},{"lineNumber":79,"author":{"gitId":"Masahiro21"},"content":"                        tasksList.add(eventTask);","lastModifiedDate":"2023-03-05"},{"lineNumber":80,"author":{"gitId":"Masahiro21"},"content":"                    } catch (EventException e) {","lastModifiedDate":"2023-03-05"},{"lineNumber":81,"author":{"gitId":"Masahiro21"},"content":"                        System.out.println(\"To field is empty!\");","lastModifiedDate":"2023-03-05"},{"lineNumber":82,"author":{"gitId":"Masahiro21"},"content":"                        break;","lastModifiedDate":"2023-03-05"},{"lineNumber":83,"author":{"gitId":"Masahiro21"},"content":"                    }","lastModifiedDate":"2023-03-05"},{"lineNumber":84,"author":{"gitId":"Masahiro21"},"content":"                default:","lastModifiedDate":"2023-03-05"},{"lineNumber":85,"author":{"gitId":"Masahiro21"},"content":"            }","lastModifiedDate":"2023-03-05"},{"lineNumber":86,"author":{"gitId":"Masahiro21"},"content":"            System.out.println(task);","lastModifiedDate":"2023-03-05"},{"lineNumber":87,"author":{"gitId":"Masahiro21"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":88,"author":{"gitId":"Masahiro21"},"content":"        return tasksList;","lastModifiedDate":"2023-03-05"},{"lineNumber":89,"author":{"gitId":"Masahiro21"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":90,"author":{"gitId":"Masahiro21"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":91,"author":{"gitId":"Masahiro21"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":92,"author":{"gitId":"Masahiro21"},"content":"     * Creates a new storage file.","lastModifiedDate":"2023-03-05"},{"lineNumber":93,"author":{"gitId":"Masahiro21"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":94,"author":{"gitId":"Masahiro21"},"content":"     * @param filePath the location of the storage file.","lastModifiedDate":"2023-03-05"},{"lineNumber":95,"author":{"gitId":"Masahiro21"},"content":"     * @throws IOException if there were errors creating the file.","lastModifiedDate":"2023-03-05"},{"lineNumber":96,"author":{"gitId":"Masahiro21"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":97,"author":{"gitId":"Masahiro21"},"content":"    public void createFile(String filePath){","lastModifiedDate":"2023-03-05"},{"lineNumber":98,"author":{"gitId":"Masahiro21"},"content":"        try{","lastModifiedDate":"2023-03-05"},{"lineNumber":99,"author":{"gitId":"Masahiro21"},"content":"            File f \u003d new File(filePath);","lastModifiedDate":"2023-03-05"},{"lineNumber":100,"author":{"gitId":"Masahiro21"},"content":"            if(f.createNewFile()){","lastModifiedDate":"2023-03-05"},{"lineNumber":101,"author":{"gitId":"Masahiro21"},"content":"                System.out.println(\"Your file has been created: \" + f.getName());","lastModifiedDate":"2023-03-05"},{"lineNumber":102,"author":{"gitId":"Masahiro21"},"content":"            } else {","lastModifiedDate":"2023-03-05"},{"lineNumber":103,"author":{"gitId":"Masahiro21"},"content":"                System.out.println(\"Your file already exists\");","lastModifiedDate":"2023-03-05"},{"lineNumber":104,"author":{"gitId":"Masahiro21"},"content":"            }","lastModifiedDate":"2023-03-05"},{"lineNumber":105,"author":{"gitId":"Masahiro21"},"content":"        } catch(IOException e) {","lastModifiedDate":"2023-03-05"},{"lineNumber":106,"author":{"gitId":"Masahiro21"},"content":"            System.out.println(\"Error Occurred\");","lastModifiedDate":"2023-03-05"},{"lineNumber":107,"author":{"gitId":"Masahiro21"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":108,"author":{"gitId":"Masahiro21"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":109,"author":{"gitId":"Masahiro21"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":110,"author":{"gitId":"Masahiro21"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":111,"author":{"gitId":"Masahiro21"},"content":"     * Saves changes made to the task list to the storage file by calling the writeToFile method.","lastModifiedDate":"2023-03-05"},{"lineNumber":112,"author":{"gitId":"Masahiro21"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":113,"author":{"gitId":"Masahiro21"},"content":"     * @param taskArrayList an Array List containing Tasks added by the user.","lastModifiedDate":"2023-03-05"},{"lineNumber":114,"author":{"gitId":"Masahiro21"},"content":"     * @throws IOException if there were errors writing to the file.","lastModifiedDate":"2023-03-05"},{"lineNumber":115,"author":{"gitId":"Masahiro21"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":116,"author":{"gitId":"Masahiro21"},"content":"    public void saveToFile(ArrayList\u003cTask\u003e taskArrayList){","lastModifiedDate":"2023-03-05"},{"lineNumber":117,"author":{"gitId":"Masahiro21"},"content":"        try{","lastModifiedDate":"2023-03-05"},{"lineNumber":118,"author":{"gitId":"Masahiro21"},"content":"            writeToFile(taskArrayList);","lastModifiedDate":"2023-03-05"},{"lineNumber":119,"author":{"gitId":"Masahiro21"},"content":"        }catch (IOException e){","lastModifiedDate":"2023-03-05"},{"lineNumber":120,"author":{"gitId":"Masahiro21"},"content":"            System.out.println(\"An error has occurred\" + e.getMessage());","lastModifiedDate":"2023-03-05"},{"lineNumber":121,"author":{"gitId":"Masahiro21"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":122,"author":{"gitId":"Masahiro21"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":123,"author":{"gitId":"Masahiro21"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":124,"author":{"gitId":"Masahiro21"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":125,"author":{"gitId":"Masahiro21"},"content":"     * Writes all the data in the task list into the storage file.","lastModifiedDate":"2023-03-05"},{"lineNumber":126,"author":{"gitId":"Masahiro21"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":127,"author":{"gitId":"Masahiro21"},"content":"     * @param taskArrayList an Array List containing Tasks added by the user.","lastModifiedDate":"2023-03-05"},{"lineNumber":128,"author":{"gitId":"Masahiro21"},"content":"     * @throws IOException if there were errors writing to the file.","lastModifiedDate":"2023-03-05"},{"lineNumber":129,"author":{"gitId":"Masahiro21"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":130,"author":{"gitId":"Masahiro21"},"content":"    public void writeToFile(ArrayList\u003cTask\u003e taskArrayList) throws IOException {","lastModifiedDate":"2023-03-05"},{"lineNumber":131,"author":{"gitId":"Masahiro21"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2023-03-05"},{"lineNumber":132,"author":{"gitId":"Masahiro21"},"content":"        for(Task t : taskArrayList) {","lastModifiedDate":"2023-03-05"},{"lineNumber":133,"author":{"gitId":"Masahiro21"},"content":"            String type \u003d t.getType();","lastModifiedDate":"2023-03-05"},{"lineNumber":134,"author":{"gitId":"Masahiro21"},"content":"            switch(type){","lastModifiedDate":"2023-03-05"},{"lineNumber":135,"author":{"gitId":"Masahiro21"},"content":"                case \"T\":","lastModifiedDate":"2023-03-05"},{"lineNumber":136,"author":{"gitId":"Masahiro21"},"content":"                    String targetT \u003d  t.getType() + \" | \" + t.getStatusIconSave() + \" | \" + t.getDescription();","lastModifiedDate":"2023-03-05"},{"lineNumber":137,"author":{"gitId":"Masahiro21"},"content":"                    fw.write(targetT+ \"\\n\");","lastModifiedDate":"2023-03-05"},{"lineNumber":138,"author":{"gitId":"Masahiro21"},"content":"                    break;","lastModifiedDate":"2023-03-05"},{"lineNumber":139,"author":{"gitId":"Masahiro21"},"content":"                case \"D\":","lastModifiedDate":"2023-03-05"},{"lineNumber":140,"author":{"gitId":"Masahiro21"},"content":"                    String targetD \u003d  t.getType() + \" | \" + t.getStatusIconSave() + \" | \" + t.getDescription() + \" | \" +","lastModifiedDate":"2023-03-05"},{"lineNumber":141,"author":{"gitId":"Masahiro21"},"content":"                            t.getDeadlineSave();","lastModifiedDate":"2023-03-05"},{"lineNumber":142,"author":{"gitId":"Masahiro21"},"content":"                    fw.write(targetD + \"\\n\");","lastModifiedDate":"2023-03-05"},{"lineNumber":143,"author":{"gitId":"Masahiro21"},"content":"                    break;","lastModifiedDate":"2023-03-05"},{"lineNumber":144,"author":{"gitId":"Masahiro21"},"content":"                case \"E\":","lastModifiedDate":"2023-03-05"},{"lineNumber":145,"author":{"gitId":"Masahiro21"},"content":"                    String targetE \u003d  t.getType() + \" | \" + t.getStatusIconSave() + \" | \" + t.getDescription() + \" | \" +","lastModifiedDate":"2023-03-05"},{"lineNumber":146,"author":{"gitId":"Masahiro21"},"content":"                            t.getPeriodSave();","lastModifiedDate":"2023-03-05"},{"lineNumber":147,"author":{"gitId":"Masahiro21"},"content":"                    fw.write(targetE + \"\\n\");","lastModifiedDate":"2023-03-05"},{"lineNumber":148,"author":{"gitId":"Masahiro21"},"content":"                    break;","lastModifiedDate":"2023-03-05"},{"lineNumber":149,"author":{"gitId":"Masahiro21"},"content":"            }","lastModifiedDate":"2023-03-05"},{"lineNumber":150,"author":{"gitId":"Masahiro21"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":151,"author":{"gitId":"Masahiro21"},"content":"        fw.close();","lastModifiedDate":"2023-03-05"},{"lineNumber":152,"author":{"gitId":"Masahiro21"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":153,"author":{"gitId":"Masahiro21"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":154,"author":{"gitId":"Masahiro21"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"Masahiro21":154}},{"path":"src/main/java/duke/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Masahiro21"},"content":"package duke.tasklist;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"Masahiro21"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"Masahiro21"},"content":"import duke.Task;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"Masahiro21"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"Masahiro21"},"content":"import static duke.common.Messages.LIST_TASKS_MESSAGE;","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"Masahiro21"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"Masahiro21"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"Masahiro21"},"content":" * Container used to store the tasks added by the user.","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"Masahiro21"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"Masahiro21"},"content":"public class TaskList {","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"Masahiro21"},"content":"    protected static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"Masahiro21"},"content":"    protected static ArrayList\u003cTask\u003e tasksTemp \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"Masahiro21"},"content":"    protected static int numOfTask \u003d 0;","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"Masahiro21"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"Masahiro21"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"Masahiro21"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"Masahiro21"},"content":"     * Initializes a task list provided by the user.","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"Masahiro21"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"Masahiro21"},"content":"     * @param tasksList an Array List containing Tasks added by the user.","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"Masahiro21"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"Masahiro21"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasksList){","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"Masahiro21"},"content":"        tasks \u003d new ArrayList\u003c\u003e(tasksList);","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"Masahiro21"},"content":"        numOfTask \u003d tasks.size();","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"Masahiro21"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"Masahiro21"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"Masahiro21"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"Masahiro21"},"content":"     * Prints out the tasks in the task list provided by the user.","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"Masahiro21"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"Masahiro21"},"content":"    public void printTasks(){","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"Masahiro21"},"content":"        System.out.println(LIST_TASKS_MESSAGE);","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"Masahiro21"},"content":"        for(int i \u003d 1; i \u003c\u003d numOfTask; i+\u003d 1){","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"Masahiro21"},"content":"            System.out.println(i + \".\" +\"[\" + tasks.get(i-1).getType() + \"]\" + \"[\" + tasks.get(i-1).getStatusIcon() + \"] \"+ tasks.get(i-1).getDescription()","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"Masahiro21"},"content":"                    + tasks.get(i-1).getDeadline() + tasks.get(i-1).getPeriod());","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"Masahiro21"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"Masahiro21"},"content":"        System.out.println(\"You have a total of \" + numOfTask + \" task(s).\");","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"Masahiro21"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"Masahiro21"},"content":"    public int getNumOfTask(){","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"Masahiro21"},"content":"        return numOfTask;","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"Masahiro21"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"Masahiro21"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"Masahiro21"},"content":"    public void addTask(Task task){","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"Masahiro21"},"content":"        tasks.add(task);","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"Masahiro21"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"Masahiro21"},"content":"    public void removeTask(int num){","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"Masahiro21"},"content":"        tasks.remove(num);","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"Masahiro21"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"Masahiro21"},"content":"    public Task getTask(int num){","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"Masahiro21"},"content":"        return tasks.get(num);","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"Masahiro21"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"Masahiro21"},"content":"    public ArrayList\u003cTask\u003e getTaskList(){","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"Masahiro21"},"content":"        return tasks;","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"Masahiro21"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"Masahiro21"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"Masahiro21"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"Masahiro21"},"content":"     * Updates the number of tasks and the tasks in the task list as the user edits them.","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"Masahiro21"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"Masahiro21"},"content":"     * @param num number of tasks in the list.","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"Masahiro21"},"content":"     * @param taskList an Array List containing Tasks added by the user.","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"Masahiro21"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"Masahiro21"},"content":"    public void updateTaskLists(int num, ArrayList\u003cTask\u003e taskList){","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"Masahiro21"},"content":"        numOfTask \u003d num;","lastModifiedDate":"2023-03-05"},{"lineNumber":62,"author":{"gitId":"Masahiro21"},"content":"        tasks \u003d taskList;","lastModifiedDate":"2023-03-05"},{"lineNumber":63,"author":{"gitId":"Masahiro21"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":64,"author":{"gitId":"Masahiro21"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":65,"author":{"gitId":"Masahiro21"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":66,"author":{"gitId":"Masahiro21"},"content":"     * Stores the task list in a temporary task list and searches for tasks relevant to the keyword provided by the user and shows them to the user.","lastModifiedDate":"2023-03-05"},{"lineNumber":67,"author":{"gitId":"Masahiro21"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":68,"author":{"gitId":"Masahiro21"},"content":"     * @param keyword word that the user wants to search for in the list of tasks.","lastModifiedDate":"2023-03-05"},{"lineNumber":69,"author":{"gitId":"Masahiro21"},"content":"     * @param tasks an Array List containing Tasks added by the user.","lastModifiedDate":"2023-03-05"},{"lineNumber":70,"author":{"gitId":"Masahiro21"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":71,"author":{"gitId":"Masahiro21"},"content":"    public void keywordedTaskList(String keyword, ArrayList\u003cTask\u003e tasks){","lastModifiedDate":"2023-03-05"},{"lineNumber":72,"author":{"gitId":"Masahiro21"},"content":"        tasksTemp \u003d tasks;","lastModifiedDate":"2023-03-05"},{"lineNumber":73,"author":{"gitId":"Masahiro21"},"content":"        String[] descriptionWords;","lastModifiedDate":"2023-03-05"},{"lineNumber":74,"author":{"gitId":"Masahiro21"},"content":"        int numOfMatchingTasks \u003d 0;","lastModifiedDate":"2023-03-05"},{"lineNumber":75,"author":{"gitId":"Masahiro21"},"content":"        for(int i \u003d 1; i \u003c\u003d numOfTask; i+\u003d 1){","lastModifiedDate":"2023-03-05"},{"lineNumber":76,"author":{"gitId":"Masahiro21"},"content":"            descriptionWords \u003d tasksTemp.get(i-1).getDescription().trim().split(\" \");","lastModifiedDate":"2023-03-05"},{"lineNumber":77,"author":{"gitId":"Masahiro21"},"content":"            for (int j \u003d 0; j \u003c descriptionWords.length;j+\u003d1 ) {","lastModifiedDate":"2023-03-05"},{"lineNumber":78,"author":{"gitId":"Masahiro21"},"content":"                if(descriptionWords[j].equals(keyword)) {","lastModifiedDate":"2023-03-05"},{"lineNumber":79,"author":{"gitId":"Masahiro21"},"content":"                    numOfMatchingTasks +\u003d 1;","lastModifiedDate":"2023-03-05"},{"lineNumber":80,"author":{"gitId":"Masahiro21"},"content":"                    System.out.println(numOfMatchingTasks + \".\" + \"[\" + tasksTemp.get(i - 1).getType() + \"]\" + \"[\" + tasksTemp.get(i - 1).getStatusIcon() + \"] \" + tasksTemp.get(i - 1).getDescription()","lastModifiedDate":"2023-03-05"},{"lineNumber":81,"author":{"gitId":"Masahiro21"},"content":"                            + tasksTemp.get(i - 1).getDeadline() + tasksTemp.get(i - 1).getPeriod());","lastModifiedDate":"2023-03-05"},{"lineNumber":82,"author":{"gitId":"Masahiro21"},"content":"                    break;","lastModifiedDate":"2023-03-05"},{"lineNumber":83,"author":{"gitId":"Masahiro21"},"content":"                }","lastModifiedDate":"2023-03-05"},{"lineNumber":84,"author":{"gitId":"Masahiro21"},"content":"            }","lastModifiedDate":"2023-03-05"},{"lineNumber":85,"author":{"gitId":"Masahiro21"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":86,"author":{"gitId":"Masahiro21"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":87,"author":{"gitId":"Masahiro21"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"Masahiro21":87}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Masahiro21"},"content":"package duke.ui;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"Masahiro21"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"Masahiro21"},"content":"import static duke.common.Messages.*;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"Masahiro21"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"Masahiro21"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"Masahiro21"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"Masahiro21"},"content":" * Ui of Duke Application","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"Masahiro21"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"Masahiro21"},"content":"public class Ui {","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"Masahiro21"},"content":"    public Ui(){","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"Masahiro21"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"Masahiro21"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"Masahiro21"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"Masahiro21"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"Masahiro21"},"content":"     * Generates and prints out the welcome message and task list upon the start of the application.","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"Masahiro21"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"Masahiro21"},"content":"     * @param tasks task list containing the tasks from the loaded storage file.","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"Masahiro21"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"Masahiro21"},"content":"    public void showWelcomeMessage(TaskList tasks){","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"Masahiro21"},"content":"        System.out.println(WELCOME_MESSAGE);","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"Masahiro21"},"content":"        System.out.println(LOADING_FILE_MESSAGE);","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"Masahiro21"},"content":"        tasks.printTasks();","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"Masahiro21"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"Masahiro21"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"Masahiro21"},"content":"    public void showGoodByeMessage(){","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"Masahiro21"},"content":"        System.out.println(GOODBYE_MESSAGE);","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"Masahiro21"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"Masahiro21"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"Masahiro21"},"content":"    public void showCreatingFileMessage(){","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"Masahiro21"},"content":"        System.out.println(CREATING_NEW_FILE);","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"Masahiro21"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"Masahiro21"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"Masahiro21"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"Masahiro21"},"content":"     * Shows the user the task list.","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"Masahiro21"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"Masahiro21"},"content":"     * @param tasks an Array List containing Tasks added by the user.","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"Masahiro21"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"Masahiro21"},"content":"    public void showTaskList(TaskList tasks){","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"Masahiro21"},"content":"        tasks.printTasks();","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"Masahiro21"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"Masahiro21"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"Masahiro21"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"Masahiro21"},"content":"     * Shows the user the task that has been marked.","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"Masahiro21"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"Masahiro21"},"content":"     * @param taskList an Array List containing Tasks added by the user.","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"Masahiro21"},"content":"     * @param indexMark number of the task that needs to be marked.","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"Masahiro21"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"Masahiro21"},"content":"    public void showMarkedTask(TaskList taskList, int indexMark){","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"Masahiro21"},"content":"        System.out.println(MARK_DONE_MESSAGE);","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"Masahiro21"},"content":"        System.out.println(\"  [\" + taskList.getTask(indexMark-1).getStatusIcon() + \"] \" + taskList.getTask(indexMark-1).getDescription());","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"Masahiro21"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"Masahiro21"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"Masahiro21"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"Masahiro21"},"content":"     * Shows the user the task that has been unmarked.","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"Masahiro21"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"Masahiro21"},"content":"     * @param taskList an Array List containing Tasks added by the user.","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"Masahiro21"},"content":"     * @param indexUnmark number of the task that needs to be unmarked.","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"Masahiro21"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"Masahiro21"},"content":"    public void showUnmarkedTask(TaskList taskList, int indexUnmark){","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"Masahiro21"},"content":"        System.out.println(MARK_UNDONE_MESSAGE);","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"Masahiro21"},"content":"        System.out.println(\"  [\" + taskList.getTask(indexUnmark-1).getStatusIcon() + \"] \" + taskList.getTask(indexUnmark-1).getDescription());","lastModifiedDate":"2023-03-05"},{"lineNumber":62,"author":{"gitId":"Masahiro21"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":63,"author":{"gitId":"Masahiro21"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":64,"author":{"gitId":"Masahiro21"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":65,"author":{"gitId":"Masahiro21"},"content":"     * Shows the user the to-do task that has been added and the updated total number of tasks in their list.","lastModifiedDate":"2023-03-05"},{"lineNumber":66,"author":{"gitId":"Masahiro21"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":67,"author":{"gitId":"Masahiro21"},"content":"     * @param taskList an Array List containing Tasks added by the user.","lastModifiedDate":"2023-03-05"},{"lineNumber":68,"author":{"gitId":"Masahiro21"},"content":"     * @param numOfTask number of tasks currently in the list.","lastModifiedDate":"2023-03-05"},{"lineNumber":69,"author":{"gitId":"Masahiro21"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":70,"author":{"gitId":"Masahiro21"},"content":"    public void showTodoTask(TaskList taskList, int numOfTask){","lastModifiedDate":"2023-03-05"},{"lineNumber":71,"author":{"gitId":"Masahiro21"},"content":"        System.out.println(taskList.getTask(numOfTask - 1));","lastModifiedDate":"2023-03-05"},{"lineNumber":72,"author":{"gitId":"Masahiro21"},"content":"        System.out.println(\"Now you have \" + numOfTask + \" task(s) in the list.\");","lastModifiedDate":"2023-03-05"},{"lineNumber":73,"author":{"gitId":"Masahiro21"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":74,"author":{"gitId":"Masahiro21"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":75,"author":{"gitId":"Masahiro21"},"content":"     * Shows the user the deadline that has been added and the updated total number of tasks in their list.","lastModifiedDate":"2023-03-05"},{"lineNumber":76,"author":{"gitId":"Masahiro21"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":77,"author":{"gitId":"Masahiro21"},"content":"     * @param taskList an Array List containing Tasks added by the user.","lastModifiedDate":"2023-03-05"},{"lineNumber":78,"author":{"gitId":"Masahiro21"},"content":"     * @param numOfTask number of tasks currently in the list.","lastModifiedDate":"2023-03-05"},{"lineNumber":79,"author":{"gitId":"Masahiro21"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":80,"author":{"gitId":"Masahiro21"},"content":"    public void showDeadlineTask(TaskList taskList, int numOfTask){","lastModifiedDate":"2023-03-05"},{"lineNumber":81,"author":{"gitId":"Masahiro21"},"content":"        System.out.println(taskList.getTask(numOfTask - 1));","lastModifiedDate":"2023-03-05"},{"lineNumber":82,"author":{"gitId":"Masahiro21"},"content":"        System.out.println(\"Now you have \" + numOfTask + \" task(s) in the list.\");","lastModifiedDate":"2023-03-05"},{"lineNumber":83,"author":{"gitId":"Masahiro21"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":84,"author":{"gitId":"Masahiro21"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":85,"author":{"gitId":"Masahiro21"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":86,"author":{"gitId":"Masahiro21"},"content":"     * Shows the user the event that has been added and the updated total number of tasks in their list.","lastModifiedDate":"2023-03-05"},{"lineNumber":87,"author":{"gitId":"Masahiro21"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":88,"author":{"gitId":"Masahiro21"},"content":"     * @param taskList an Array List containing Tasks added by the user.","lastModifiedDate":"2023-03-05"},{"lineNumber":89,"author":{"gitId":"Masahiro21"},"content":"     * @param numOfTask number of tasks currently in the list.","lastModifiedDate":"2023-03-05"},{"lineNumber":90,"author":{"gitId":"Masahiro21"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":91,"author":{"gitId":"Masahiro21"},"content":"    public void showEventTask(TaskList taskList, int numOfTask){","lastModifiedDate":"2023-03-05"},{"lineNumber":92,"author":{"gitId":"Masahiro21"},"content":"        System.out.println(taskList.getTask(numOfTask - 1));","lastModifiedDate":"2023-03-05"},{"lineNumber":93,"author":{"gitId":"Masahiro21"},"content":"        System.out.println(\"Now you have \" + numOfTask + \" task(s) in the list.\");","lastModifiedDate":"2023-03-05"},{"lineNumber":94,"author":{"gitId":"Masahiro21"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":95,"author":{"gitId":"Masahiro21"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":96,"author":{"gitId":"Masahiro21"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":97,"author":{"gitId":"Masahiro21"},"content":"     * Shows the user the task that has been deleted and the updated total number of tasks in the list.","lastModifiedDate":"2023-03-05"},{"lineNumber":98,"author":{"gitId":"Masahiro21"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":99,"author":{"gitId":"Masahiro21"},"content":"     * @param taskList an Array List containing Tasks added by the user.","lastModifiedDate":"2023-03-05"},{"lineNumber":100,"author":{"gitId":"Masahiro21"},"content":"     * @param indexDelete number of the task that needs to be deleted.","lastModifiedDate":"2023-03-05"},{"lineNumber":101,"author":{"gitId":"Masahiro21"},"content":"     * @param numOfTask number of tasks currently in the list.","lastModifiedDate":"2023-03-05"},{"lineNumber":102,"author":{"gitId":"Masahiro21"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":103,"author":{"gitId":"Masahiro21"},"content":"    public void showDeletedTask(TaskList taskList, int indexDelete,int numOfTask){","lastModifiedDate":"2023-03-05"},{"lineNumber":104,"author":{"gitId":"Masahiro21"},"content":"        numOfTask -\u003d 1;","lastModifiedDate":"2023-03-05"},{"lineNumber":105,"author":{"gitId":"Masahiro21"},"content":"        System.out.println(TASK_REMOVED_MESSAGE);","lastModifiedDate":"2023-03-05"},{"lineNumber":106,"author":{"gitId":"Masahiro21"},"content":"        System.out.println(indexDelete + \".\" +\"[\" + taskList.getTask(indexDelete-1).getType() + \"]\" + \"[\" + taskList.getTask(indexDelete-1).getStatusIcon() + \"] \"+ taskList.getTask(indexDelete-1).getDescription()","lastModifiedDate":"2023-03-05"},{"lineNumber":107,"author":{"gitId":"Masahiro21"},"content":"                + taskList.getTask(indexDelete-1).getDeadline() + taskList.getTask(indexDelete-1).getPeriod());","lastModifiedDate":"2023-03-05"},{"lineNumber":108,"author":{"gitId":"Masahiro21"},"content":"        System.out.println(\"Now you have \" + numOfTask + \" task(s) in the list.\");","lastModifiedDate":"2023-03-05"},{"lineNumber":109,"author":{"gitId":"Masahiro21"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":110,"author":{"gitId":"Masahiro21"},"content":"    public void showMatchingTasksMessage(){System.out.println(MATCHING_TASKS_MESSAGE);}","lastModifiedDate":"2023-03-05"},{"lineNumber":111,"author":{"gitId":"Masahiro21"},"content":"    public void showInvalidTodoFormatMessage(){","lastModifiedDate":"2023-03-05"},{"lineNumber":112,"author":{"gitId":"Masahiro21"},"content":"        System.out.println(INVALID_TODO_FORMAT_MESSAGE);","lastModifiedDate":"2023-03-05"},{"lineNumber":113,"author":{"gitId":"Masahiro21"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":114,"author":{"gitId":"Masahiro21"},"content":"    public void showInvalidDeadlineFormatMessage(){","lastModifiedDate":"2023-03-05"},{"lineNumber":115,"author":{"gitId":"Masahiro21"},"content":"        System.out.println(INVALID_DEADLINE_FORMAT_MESSAGE);","lastModifiedDate":"2023-03-05"},{"lineNumber":116,"author":{"gitId":"Masahiro21"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":117,"author":{"gitId":"Masahiro21"},"content":"    public void showInvalidEventFormatMessage(){","lastModifiedDate":"2023-03-05"},{"lineNumber":118,"author":{"gitId":"Masahiro21"},"content":"        System.out.println(INVALID_EVENT_FORMAT_MESSAGE);","lastModifiedDate":"2023-03-05"},{"lineNumber":119,"author":{"gitId":"Masahiro21"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":120,"author":{"gitId":"Masahiro21"},"content":"    public void showEmptyToFieldMessage(){","lastModifiedDate":"2023-03-05"},{"lineNumber":121,"author":{"gitId":"Masahiro21"},"content":"        System.out.println(EMPTY_TO_FIELD_MESSAGE);","lastModifiedDate":"2023-03-05"},{"lineNumber":122,"author":{"gitId":"Masahiro21"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":123,"author":{"gitId":"Masahiro21"},"content":"    public void showInvalidTaskNumberMessage(){ System.out.println(INVALID_TASK_NUMBER_MESSAGE);}","lastModifiedDate":"2023-03-05"},{"lineNumber":124,"author":{"gitId":"Masahiro21"},"content":"    public void showDukeExceptionMessage(){ System.out.println(DUKE_EXCEPTION_MESSAGE);}","lastModifiedDate":"2023-03-05"},{"lineNumber":125,"author":{"gitId":"Masahiro21"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"Masahiro21":125}},{"path":"tempDuke_list.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Masahiro21"},"content":"D | 0 | work | 6pm","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"Masahiro21"},"content":"E | 0 | party | today | morrow","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"Masahiro21"},"content":"T | 0 | work","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"Masahiro21":3}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Masahiro21"},"content":"todo borrow book","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"Masahiro21"},"content":"list","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"Masahiro21"},"content":"deadline return book /by June 6th","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"Masahiro21"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"Masahiro21"},"content":"list","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"Masahiro21"},"content":"todo join sports club ","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"Masahiro21"},"content":"todo read book","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"Masahiro21"},"content":"list","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"Masahiro21"},"content":"mark 4","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"Masahiro21"},"content":"mark 5","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"Masahiro21"},"content":"list","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"Masahiro21"},"content":"find book","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"Masahiro21"},"content":"delete 3","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"Masahiro21"},"content":"list","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"Masahiro21"},"content":"unmark 3","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"Masahiro21"},"content":"list","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"Masahiro21"},"content":"bye","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"Masahiro21":17}}]
