[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"Rayleigh47"},"content":"Dude is a light-weight task-managing application that can be used on a command line interface (CLI). This is a summary on how it works.","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"Rayleigh47"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"Rayleigh47"},"content":"## Quick Start","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"Rayleigh47"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"Rayleigh47"},"content":"1. Ensure you have `Java 11` or above installed in your computer.","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"Rayleigh47"},"content":"2. Download the latest `ip.jar` from [here](https://github.com/Rayleigh47/ip/releases/).","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"Rayleigh47"},"content":"3. Copy the file to the folder you want to use as your home folder.","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"Rayleigh47"},"content":"4. Open a command line terminal and change directory into the folder.","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"Rayleigh47"},"content":"5. Run the application by entering into the terminal `java -jar ip.jar`","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"Rayleigh47"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"Rayleigh47"},"content":"### 1. List out all tasks: `list`","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"Rayleigh47"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"Rayleigh47"},"content":"Format: `list`","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"Rayleigh47"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"Rayleigh47"},"content":"Displays the full list being tracked.","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"Rayleigh47"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"Rayleigh47"},"content":"Use case: `list`","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"Rayleigh47"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"Rayleigh47"},"content":"### 2. Add a Todo task: `todo`","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"Rayleigh47"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"Rayleigh47"},"content":"Format: `todo {DESCRIPTION} `","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"Rayleigh47"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"Rayleigh47"},"content":"Adds a todo to the list with a description of the task.","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"Rayleigh47"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"Rayleigh47"},"content":"Use case: `todo homework tonight`","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"Rayleigh47"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"Rayleigh47"},"content":"### 3. Add a Deadline task: `deadline`","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"Rayleigh47"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"Rayleigh47"},"content":"Format: `deadline {DESCRIPTION} /by {DEADLINE}`","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"Rayleigh47"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"Rayleigh47"},"content":"Adds a deadline to the list with a description of the task and a deadline. ","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"Rayleigh47"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"Rayleigh47"},"content":"`{DEADLINE}` should be in the format `yyyy-mm-dd`.","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"Rayleigh47"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"Rayleigh47"},"content":"Use case: `deadline homework /by 2023-03-04`","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"Rayleigh47"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"Rayleigh47"},"content":"### 4. Add a Event task: `event`","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"Rayleigh47"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"Rayleigh47"},"content":"Format: `event {DESCRIPTION} /from {START} /to {END}`","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"Rayleigh47"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"Rayleigh47"},"content":"Adds an event to the list with a description of the task, a start time and an end time.","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"Rayleigh47"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"Rayleigh47"},"content":"Use case: `event homework /from 5pm /to 8pm`","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"Rayleigh47"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"Rayleigh47"},"content":"### 5. Mark task as done: `mark`","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"Rayleigh47"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"Rayleigh47"},"content":"Format: `mark {TASK_ID}`","lastModifiedDate":"2023-02-28"},{"lineNumber":52,"author":{"gitId":"Rayleigh47"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":53,"author":{"gitId":"Rayleigh47"},"content":"Marks the task with a specified id in the list as done.","lastModifiedDate":"2023-02-28"},{"lineNumber":54,"author":{"gitId":"Rayleigh47"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":55,"author":{"gitId":"Rayleigh47"},"content":"`{TASK_ID}` should be in the format of a positive integer.","lastModifiedDate":"2023-02-28"},{"lineNumber":56,"author":{"gitId":"Rayleigh47"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":57,"author":{"gitId":"Rayleigh47"},"content":"Use case: `mark 1`","lastModifiedDate":"2023-02-28"},{"lineNumber":58,"author":{"gitId":"Rayleigh47"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":59,"author":{"gitId":"Rayleigh47"},"content":"### 6. Mark task as not done: `unmark`","lastModifiedDate":"2023-02-28"},{"lineNumber":60,"author":{"gitId":"Rayleigh47"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":61,"author":{"gitId":"Rayleigh47"},"content":"Format: `unmark {TASK_ID}`","lastModifiedDate":"2023-02-28"},{"lineNumber":62,"author":{"gitId":"Rayleigh47"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":63,"author":{"gitId":"Rayleigh47"},"content":"Marks the task with a specified id in the list as not done.","lastModifiedDate":"2023-02-28"},{"lineNumber":64,"author":{"gitId":"Rayleigh47"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":65,"author":{"gitId":"Rayleigh47"},"content":"`{TASK_ID}` should be in the format of a positive integer.","lastModifiedDate":"2023-02-28"},{"lineNumber":66,"author":{"gitId":"Rayleigh47"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":67,"author":{"gitId":"Rayleigh47"},"content":"Use case: `unmark 2`","lastModifiedDate":"2023-02-28"},{"lineNumber":68,"author":{"gitId":"Rayleigh47"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":69,"author":{"gitId":"Rayleigh47"},"content":"### 7. Delete a task: `delete`","lastModifiedDate":"2023-02-28"},{"lineNumber":70,"author":{"gitId":"Rayleigh47"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":71,"author":{"gitId":"Rayleigh47"},"content":"Format: `delete {TASK_ID}`","lastModifiedDate":"2023-02-28"},{"lineNumber":72,"author":{"gitId":"Rayleigh47"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":73,"author":{"gitId":"Rayleigh47"},"content":"Deletes the task with a specified id in the list and removes it from the list.","lastModifiedDate":"2023-02-28"},{"lineNumber":74,"author":{"gitId":"Rayleigh47"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":75,"author":{"gitId":"Rayleigh47"},"content":"`{TASK_ID}` should be in the format of a positive integer.","lastModifiedDate":"2023-02-28"},{"lineNumber":76,"author":{"gitId":"Rayleigh47"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":77,"author":{"gitId":"Rayleigh47"},"content":"Use case: `delete 1`","lastModifiedDate":"2023-02-28"},{"lineNumber":78,"author":{"gitId":"Rayleigh47"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":79,"author":{"gitId":"Rayleigh47"},"content":"### 8. Search for task using keyword: `find`","lastModifiedDate":"2023-02-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":81,"author":{"gitId":"Rayleigh47"},"content":"Format: `find {KEYWORD}`","lastModifiedDate":"2023-02-28"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":83,"author":{"gitId":"Rayleigh47"},"content":"Displays the list of tasks that contains a given keyword from the user.","lastModifiedDate":"2023-02-28"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":85,"author":{"gitId":"Rayleigh47"},"content":"`{KEYWORD}` should be a single word and is case-insensitive","lastModifiedDate":"2023-02-28"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":87,"author":{"gitId":"Rayleigh47"},"content":"Use case: `find home`","lastModifiedDate":"2023-02-28"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":89,"author":{"gitId":"Rayleigh47"},"content":"### 9. Exit program: `bye`","lastModifiedDate":"2023-02-28"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":91,"author":{"gitId":"Rayleigh47"},"content":"Format: `bye`","lastModifiedDate":"2023-02-28"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":93,"author":{"gitId":"Rayleigh47"},"content":"Exits the program.","lastModifiedDate":"2023-02-28"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":95,"author":{"gitId":"Rayleigh47"},"content":"Use case: `bye`","lastModifiedDate":"2023-02-28"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":97,"author":{"gitId":"Rayleigh47"},"content":"### 10. Loading and Saving of data","lastModifiedDate":"2023-02-28"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":99,"author":{"gitId":"Rayleigh47"},"content":"The task list is updated as a `duke.txt` file and saved in `data/duke.txt` when the task list","lastModifiedDate":"2023-02-28"},{"lineNumber":100,"author":{"gitId":"Rayleigh47"},"content":"is changed. ","lastModifiedDate":"2023-02-28"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":102,"author":{"gitId":"Rayleigh47"},"content":"When Dude is launched, it is able to retrieve the latest save data, else it will","lastModifiedDate":"2023-02-28"},{"lineNumber":103,"author":{"gitId":"Rayleigh47"},"content":"create a new folder and file for subsequent use.","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"Rayleigh47":88,"-":15}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rayleigh47"},"content":"import Interface.Parser;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"Rayleigh47"},"content":"import Interface.Ui;","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"Rayleigh47"},"content":"import Interface.Storage;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"Rayleigh47"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"Rayleigh47"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"Rayleigh47"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"Rayleigh47"},"content":"     * Initializes storage and starts Dude","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"Rayleigh47"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"Rayleigh47"},"content":"        try {","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"Rayleigh47"},"content":"            Storage.initFile();","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"Rayleigh47"},"content":"        } catch(IOException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"Rayleigh47"},"content":"            System.out.println(\"Error while trying to access save file\");","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"Rayleigh47"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"Rayleigh47"},"content":"        Ui.intro();","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"Rayleigh47"},"content":"        Parser.runDude(true);","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Rayleigh47":15,"-":4}},{"path":"src/main/java/Exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rayleigh47"},"content":"package Exceptions;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"Rayleigh47"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"Rayleigh47"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"Rayleigh47"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"Rayleigh47"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"Rayleigh47"},"content":"     * Returns message from exception error","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"Rayleigh47"},"content":"     * @param error error message","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"Rayleigh47"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"Rayleigh47"},"content":"    public DukeException(String error) {","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"Rayleigh47"},"content":"        super(error);","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"Rayleigh47"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"Rayleigh47"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"Rayleigh47":12}},{"path":"src/main/java/Interface/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rayleigh47"},"content":"package Interface;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"Rayleigh47"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"Rayleigh47"},"content":"import Exceptions.DukeException;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"Rayleigh47"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"Rayleigh47"},"content":"public class Parser {","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"Rayleigh47"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"Rayleigh47"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"Rayleigh47"},"content":"     * Reads in the user input, parses the first keyword and executes the commands accordingly,","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"Rayleigh47"},"content":"     * by default try to add to task list","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"Rayleigh47"},"content":"     *","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"Rayleigh47"},"content":"     * @param isContinue boolean condition to continue running the function","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"Rayleigh47"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"Rayleigh47"},"content":"    public static void runDude(boolean isContinue) {","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"Rayleigh47"},"content":"        while(isContinue) {","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"Rayleigh47"},"content":"            String command \u003d Ui.readCommand();","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"Rayleigh47"},"content":"            String firstKeyword \u003d command.split(\" \")[0];","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"Rayleigh47"},"content":"            switch (firstKeyword) {","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"Rayleigh47"},"content":"            case \"list\":","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"Rayleigh47"},"content":"                TaskList.listTasks();","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"Rayleigh47"},"content":"                break;","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"Rayleigh47"},"content":"            case \"mark\":","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"Rayleigh47"},"content":"                try {","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"Rayleigh47"},"content":"                    TaskList.mark(command);","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"Rayleigh47"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"Rayleigh47"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"Rayleigh47"},"content":"                }","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"Rayleigh47"},"content":"                break;","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"Rayleigh47"},"content":"            case \"unmark\":","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"Rayleigh47"},"content":"                try {","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"Rayleigh47"},"content":"                    TaskList.unmark(command);","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"Rayleigh47"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"Rayleigh47"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"Rayleigh47"},"content":"                }","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"Rayleigh47"},"content":"                break;","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"Rayleigh47"},"content":"            case \"delete\":","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"Rayleigh47"},"content":"                try {","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"Rayleigh47"},"content":"                    TaskList.delete(command);","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"Rayleigh47"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"Rayleigh47"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"Rayleigh47"},"content":"                }","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"Rayleigh47"},"content":"                break;","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"Rayleigh47"},"content":"            case \"bye\":","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"Rayleigh47"},"content":"                Ui.farewell();","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"Rayleigh47"},"content":"                isContinue \u003d false;","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"Rayleigh47"},"content":"                break;","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"Rayleigh47"},"content":"            default:","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"Rayleigh47"},"content":"                try {","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"Rayleigh47"},"content":"                    TaskList.addToList(command);","lastModifiedDate":"2023-02-26"},{"lineNumber":49,"author":{"gitId":"Rayleigh47"},"content":"                } catch (DukeException error) {","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"Rayleigh47"},"content":"                    System.out.println(error.getMessage());","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"Rayleigh47"},"content":"                }","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"Rayleigh47"},"content":"                break;","lastModifiedDate":"2023-02-26"},{"lineNumber":53,"author":{"gitId":"Rayleigh47"},"content":"            }","lastModifiedDate":"2023-02-26"},{"lineNumber":54,"author":{"gitId":"Rayleigh47"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":55,"author":{"gitId":"Rayleigh47"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":56,"author":{"gitId":"Rayleigh47"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"Rayleigh47":56}},{"path":"src/main/java/Interface/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rayleigh47"},"content":"package Interface;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"Rayleigh47"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"Rayleigh47"},"content":"import Tasks.Task;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"Rayleigh47"},"content":"import Tasks.Todo;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"Rayleigh47"},"content":"import Tasks.Event;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"Rayleigh47"},"content":"import Tasks.Deadline;","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"Rayleigh47"},"content":"import java.io.File;","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"Rayleigh47"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"Rayleigh47"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"Rayleigh47"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"Rayleigh47"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"Rayleigh47"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"Rayleigh47"},"content":"public class Storage {","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"Rayleigh47"},"content":"    private static String FilePath \u003d \"data\" ; //location of file to be read","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"Rayleigh47"},"content":"    private static String File \u003d \"data/duke.txt\";","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"Rayleigh47"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"Rayleigh47"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"Rayleigh47"},"content":"     * Initializes the storage system, checks if directory and file exists, else create them.","lastModifiedDate":"2023-02-27"},{"lineNumber":19,"author":{"gitId":"Rayleigh47"},"content":"     * Runs readFromFile function responsible for loading the file.","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"Rayleigh47"},"content":"     *","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"Rayleigh47"},"content":"     * @throws IOException exception thrown when input/output error occurs","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"Rayleigh47"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"Rayleigh47"},"content":"    public static void initFile() throws IOException {","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"Rayleigh47"},"content":"        File dir \u003d new File(FilePath);","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"Rayleigh47"},"content":"        if(!dir.exists()) {","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"Rayleigh47"},"content":"            dir.mkdir();","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"Rayleigh47"},"content":"            Ui.makeDirectory();","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"Rayleigh47"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"Rayleigh47"},"content":"        File f \u003d new File(File);","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"Rayleigh47"},"content":"        if(!f.exists()) {","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"Rayleigh47"},"content":"            f.createNewFile();","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"Rayleigh47"},"content":"            Ui.makeFile();","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"Rayleigh47"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"Rayleigh47"},"content":"        try {","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"Rayleigh47"},"content":"            readFromFile();","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"Rayleigh47"},"content":"            Ui.loadFile();","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"Rayleigh47"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":38,"author":{"gitId":"Rayleigh47"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"Rayleigh47"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":40,"author":{"gitId":"Rayleigh47"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"Rayleigh47"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":42,"author":{"gitId":"Rayleigh47"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":43,"author":{"gitId":"Rayleigh47"},"content":"     * Copies entries from .txt file into ArrayList of tasks. Identifies type of task then adds","lastModifiedDate":"2023-02-27"},{"lineNumber":44,"author":{"gitId":"Rayleigh47"},"content":"     * them into task list accordingly","lastModifiedDate":"2023-02-27"},{"lineNumber":45,"author":{"gitId":"Rayleigh47"},"content":"     *","lastModifiedDate":"2023-02-27"},{"lineNumber":46,"author":{"gitId":"Rayleigh47"},"content":"     * @throws IOException exception thrown when input/output error occurs","lastModifiedDate":"2023-02-27"},{"lineNumber":47,"author":{"gitId":"Rayleigh47"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":48,"author":{"gitId":"Rayleigh47"},"content":"    public static void readFromFile() throws IOException {","lastModifiedDate":"2023-02-13"},{"lineNumber":49,"author":{"gitId":"Rayleigh47"},"content":"        ArrayList\u003cTask\u003e tasks \u003d TaskList.getTasks();","lastModifiedDate":"2023-02-13"},{"lineNumber":50,"author":{"gitId":"Rayleigh47"},"content":"        File f \u003d new File(File);","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"Rayleigh47"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2023-02-13"},{"lineNumber":52,"author":{"gitId":"Rayleigh47"},"content":"        while(s.hasNext()) {","lastModifiedDate":"2023-02-13"},{"lineNumber":53,"author":{"gitId":"Rayleigh47"},"content":"            String text \u003d s.nextLine();","lastModifiedDate":"2023-02-13"},{"lineNumber":54,"author":{"gitId":"Rayleigh47"},"content":"            String[] arrayOfText \u003d text.split(\":\");","lastModifiedDate":"2023-02-13"},{"lineNumber":55,"author":{"gitId":"Rayleigh47"},"content":"            String type \u003d arrayOfText[0];","lastModifiedDate":"2023-02-13"},{"lineNumber":56,"author":{"gitId":"Rayleigh47"},"content":"            switch (type) {","lastModifiedDate":"2023-02-13"},{"lineNumber":57,"author":{"gitId":"Rayleigh47"},"content":"            case \"todo\":","lastModifiedDate":"2023-02-13"},{"lineNumber":58,"author":{"gitId":"Rayleigh47"},"content":"                Todo newTodo \u003d new Todo(arrayOfText[2].trim());","lastModifiedDate":"2023-02-13"},{"lineNumber":59,"author":{"gitId":"Rayleigh47"},"content":"                if ((arrayOfText[1].equals(\"1\"))) {","lastModifiedDate":"2023-02-13"},{"lineNumber":60,"author":{"gitId":"Rayleigh47"},"content":"                    newTodo.markAsDone();","lastModifiedDate":"2023-02-13"},{"lineNumber":61,"author":{"gitId":"Rayleigh47"},"content":"                } else {","lastModifiedDate":"2023-02-13"},{"lineNumber":62,"author":{"gitId":"Rayleigh47"},"content":"                    newTodo.markAsNotDone();","lastModifiedDate":"2023-02-13"},{"lineNumber":63,"author":{"gitId":"Rayleigh47"},"content":"                }","lastModifiedDate":"2023-02-13"},{"lineNumber":64,"author":{"gitId":"Rayleigh47"},"content":"                tasks.add(newTodo);","lastModifiedDate":"2023-02-13"},{"lineNumber":65,"author":{"gitId":"Rayleigh47"},"content":"                break;","lastModifiedDate":"2023-02-13"},{"lineNumber":66,"author":{"gitId":"Rayleigh47"},"content":"            case \"deadline\":","lastModifiedDate":"2023-02-13"},{"lineNumber":67,"author":{"gitId":"Rayleigh47"},"content":"                Deadline newDeadline \u003d new Deadline(arrayOfText[2].trim(), arrayOfText[3].trim());","lastModifiedDate":"2023-02-13"},{"lineNumber":68,"author":{"gitId":"Rayleigh47"},"content":"                if ((arrayOfText[1].equals(\"1\"))) {","lastModifiedDate":"2023-02-13"},{"lineNumber":69,"author":{"gitId":"Rayleigh47"},"content":"                    newDeadline.markAsDone();","lastModifiedDate":"2023-02-13"},{"lineNumber":70,"author":{"gitId":"Rayleigh47"},"content":"                } else {","lastModifiedDate":"2023-02-13"},{"lineNumber":71,"author":{"gitId":"Rayleigh47"},"content":"                    newDeadline.markAsNotDone();","lastModifiedDate":"2023-02-13"},{"lineNumber":72,"author":{"gitId":"Rayleigh47"},"content":"                }","lastModifiedDate":"2023-02-13"},{"lineNumber":73,"author":{"gitId":"Rayleigh47"},"content":"                tasks.add(newDeadline);","lastModifiedDate":"2023-02-13"},{"lineNumber":74,"author":{"gitId":"Rayleigh47"},"content":"                break;","lastModifiedDate":"2023-02-13"},{"lineNumber":75,"author":{"gitId":"Rayleigh47"},"content":"            case \"event\":","lastModifiedDate":"2023-02-13"},{"lineNumber":76,"author":{"gitId":"Rayleigh47"},"content":"                Event newEvent \u003d new Event(arrayOfText[2].trim(), arrayOfText[3].trim(), arrayOfText[4].trim());","lastModifiedDate":"2023-02-13"},{"lineNumber":77,"author":{"gitId":"Rayleigh47"},"content":"                if ((arrayOfText[1].equals(\"1\"))) {","lastModifiedDate":"2023-02-13"},{"lineNumber":78,"author":{"gitId":"Rayleigh47"},"content":"                    newEvent.markAsDone();","lastModifiedDate":"2023-02-13"},{"lineNumber":79,"author":{"gitId":"Rayleigh47"},"content":"                } else {","lastModifiedDate":"2023-02-13"},{"lineNumber":80,"author":{"gitId":"Rayleigh47"},"content":"                    newEvent.markAsNotDone();","lastModifiedDate":"2023-02-13"},{"lineNumber":81,"author":{"gitId":"Rayleigh47"},"content":"                }","lastModifiedDate":"2023-02-13"},{"lineNumber":82,"author":{"gitId":"Rayleigh47"},"content":"                tasks.add(newEvent);","lastModifiedDate":"2023-02-13"},{"lineNumber":83,"author":{"gitId":"Rayleigh47"},"content":"                break;","lastModifiedDate":"2023-02-13"},{"lineNumber":84,"author":{"gitId":"Rayleigh47"},"content":"            default:","lastModifiedDate":"2023-02-13"},{"lineNumber":85,"author":{"gitId":"Rayleigh47"},"content":"                System.out.println(\"Failed to read from save file\");","lastModifiedDate":"2023-02-26"},{"lineNumber":86,"author":{"gitId":"Rayleigh47"},"content":"            }","lastModifiedDate":"2023-02-13"},{"lineNumber":87,"author":{"gitId":"Rayleigh47"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":88,"author":{"gitId":"Rayleigh47"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":89,"author":{"gitId":"Rayleigh47"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":90,"author":{"gitId":"Rayleigh47"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":91,"author":{"gitId":"Rayleigh47"},"content":"     * Copies entries in ArrayList of tasks into a .txt file following a specified format.","lastModifiedDate":"2023-02-27"},{"lineNumber":92,"author":{"gitId":"Rayleigh47"},"content":"     * This is called everytime the list of tasks is changed.","lastModifiedDate":"2023-02-27"},{"lineNumber":93,"author":{"gitId":"Rayleigh47"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":94,"author":{"gitId":"Rayleigh47"},"content":"    public static void writeToFile() {","lastModifiedDate":"2023-02-13"},{"lineNumber":95,"author":{"gitId":"Rayleigh47"},"content":"        ArrayList\u003cTask\u003e tasks \u003d TaskList.getTasks();","lastModifiedDate":"2023-02-13"},{"lineNumber":96,"author":{"gitId":"Rayleigh47"},"content":"        try {","lastModifiedDate":"2023-02-13"},{"lineNumber":97,"author":{"gitId":"Rayleigh47"},"content":"            FileWriter fw \u003d new FileWriter(File);","lastModifiedDate":"2023-02-26"},{"lineNumber":98,"author":{"gitId":"Rayleigh47"},"content":"            for(int i \u003d 0; i \u003c tasks.size(); i +\u003d 1) {","lastModifiedDate":"2023-02-13"},{"lineNumber":99,"author":{"gitId":"Rayleigh47"},"content":"                Task currentTask \u003d tasks.get(i);","lastModifiedDate":"2023-02-13"},{"lineNumber":100,"author":{"gitId":"Rayleigh47"},"content":"                String taskType \u003d currentTask.getType();","lastModifiedDate":"2023-02-13"},{"lineNumber":101,"author":{"gitId":"Rayleigh47"},"content":"                String isDone \u003d String.valueOf(currentTask.getIsDone());","lastModifiedDate":"2023-02-13"},{"lineNumber":102,"author":{"gitId":"Rayleigh47"},"content":"                String description \u003d currentTask.getDescription();","lastModifiedDate":"2023-02-13"},{"lineNumber":103,"author":{"gitId":"Rayleigh47"},"content":"                if(taskType.equals(\"todo\")) {","lastModifiedDate":"2023-02-13"},{"lineNumber":104,"author":{"gitId":"Rayleigh47"},"content":"                    fw.write(taskType + \":\" + isDone + \":\" + description + System.lineSeparator());","lastModifiedDate":"2023-02-13"},{"lineNumber":105,"author":{"gitId":"Rayleigh47"},"content":"                } else if(taskType.equals(\"deadline\")) {","lastModifiedDate":"2023-02-13"},{"lineNumber":106,"author":{"gitId":"Rayleigh47"},"content":"                    Deadline task \u003d (Deadline) currentTask;","lastModifiedDate":"2023-02-13"},{"lineNumber":107,"author":{"gitId":"Rayleigh47"},"content":"                    fw.write(taskType + \":\" + isDone + \":\" + description + \":\" + task.getBy() + System.lineSeparator());","lastModifiedDate":"2023-02-13"},{"lineNumber":108,"author":{"gitId":"Rayleigh47"},"content":"                } else if(taskType.equals(\"event\")) {","lastModifiedDate":"2023-02-13"},{"lineNumber":109,"author":{"gitId":"Rayleigh47"},"content":"                    Event task \u003d (Event) currentTask;","lastModifiedDate":"2023-02-13"},{"lineNumber":110,"author":{"gitId":"Rayleigh47"},"content":"                    fw.write(taskType + \":\" + isDone + \":\" + description + \":\" + task.getFrom() + \":\" + task.getTo() + System.lineSeparator());","lastModifiedDate":"2023-02-13"},{"lineNumber":111,"author":{"gitId":"Rayleigh47"},"content":"                } else {","lastModifiedDate":"2023-02-13"},{"lineNumber":112,"author":{"gitId":"Rayleigh47"},"content":"                    System.out.println(\"Corrupted task detected, unable to write to save file\");","lastModifiedDate":"2023-02-26"},{"lineNumber":113,"author":{"gitId":"Rayleigh47"},"content":"                }","lastModifiedDate":"2023-02-13"},{"lineNumber":114,"author":{"gitId":"Rayleigh47"},"content":"            }","lastModifiedDate":"2023-02-13"},{"lineNumber":115,"author":{"gitId":"Rayleigh47"},"content":"            fw.close();","lastModifiedDate":"2023-02-13"},{"lineNumber":116,"author":{"gitId":"Rayleigh47"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":117,"author":{"gitId":"Rayleigh47"},"content":"            System.out.println(\"Error writing to save file\");","lastModifiedDate":"2023-02-26"},{"lineNumber":118,"author":{"gitId":"Rayleigh47"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":119,"author":{"gitId":"Rayleigh47"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":120,"author":{"gitId":"Rayleigh47"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"Rayleigh47":120}},{"path":"src/main/java/Interface/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rayleigh47"},"content":"package Interface;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"Rayleigh47"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"Rayleigh47"},"content":"import Exceptions.DukeException;","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"Rayleigh47"},"content":"import Tasks.Deadline;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"Rayleigh47"},"content":"import Tasks.Event;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"Rayleigh47"},"content":"import Tasks.Task;","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"Rayleigh47"},"content":"import Tasks.Todo;","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"Rayleigh47"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"Rayleigh47"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"Rayleigh47"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Rayleigh47"},"content":"import static java.util.stream.Collectors.toList;","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"Rayleigh47"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"Rayleigh47"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"Rayleigh47"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Rayleigh47"},"content":"public class TaskList {","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Rayleigh47"},"content":"    private static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"Rayleigh47"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"Rayleigh47"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":19,"author":{"gitId":"Rayleigh47"},"content":"     * Getter for ArrayList of tasks","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"Rayleigh47"},"content":"     *","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"Rayleigh47"},"content":"     * @return ArrayList of tasks of task type","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"Rayleigh47"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"Rayleigh47"},"content":"    public static ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"Rayleigh47"},"content":"        return tasks;","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"Rayleigh47"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"Rayleigh47"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"Rayleigh47"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":28,"author":{"gitId":"Rayleigh47"},"content":"     * Lists out full descriptions of all tasks in list of tasks","lastModifiedDate":"2023-02-27"},{"lineNumber":29,"author":{"gitId":"Rayleigh47"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":30,"author":{"gitId":"Rayleigh47"},"content":"    public static void listTasks() {","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"Rayleigh47"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Rayleigh47"},"content":"        for(int i \u003d 0; i \u003c tasks.size(); i +\u003d 1){","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"Rayleigh47"},"content":"            System.out.println((i + 1) + \". \" + tasks.get(i).fullDescription());","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"Rayleigh47"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"Rayleigh47"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"Rayleigh47"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":37,"author":{"gitId":"Rayleigh47"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":38,"author":{"gitId":"Rayleigh47"},"content":"     * Parses the command for a task\u0027s specific type and adds it the list of tasks accordingly","lastModifiedDate":"2023-02-27"},{"lineNumber":39,"author":{"gitId":"Rayleigh47"},"content":"     *","lastModifiedDate":"2023-02-27"},{"lineNumber":40,"author":{"gitId":"Rayleigh47"},"content":"     * @param command user input to add a task","lastModifiedDate":"2023-02-27"},{"lineNumber":41,"author":{"gitId":"Rayleigh47"},"content":"     * @throws DukeException thrown as a warning message if input is incorrect","lastModifiedDate":"2023-02-27"},{"lineNumber":42,"author":{"gitId":"Rayleigh47"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":43,"author":{"gitId":"Rayleigh47"},"content":"    public static void addToList(String command) throws DukeException {","lastModifiedDate":"2023-02-07"},{"lineNumber":44,"author":{"gitId":"Rayleigh47"},"content":"        String[] arrayOfWords \u003d command.split(\" \", 2);","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"Rayleigh47"},"content":"        String commandWord \u003d arrayOfWords[0];","lastModifiedDate":"2023-02-13"},{"lineNumber":46,"author":{"gitId":"Rayleigh47"},"content":"        switch(commandWord) {","lastModifiedDate":"2023-02-13"},{"lineNumber":47,"author":{"gitId":"Rayleigh47"},"content":"        case \"todo\":","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"Rayleigh47"},"content":"            if(arrayOfWords.length \u003c 2) {","lastModifiedDate":"2023-02-07"},{"lineNumber":49,"author":{"gitId":"Rayleigh47"},"content":"                throw new DukeException(\"OOPS! Use case: todo TASK\");","lastModifiedDate":"2023-02-07"},{"lineNumber":50,"author":{"gitId":"Rayleigh47"},"content":"            }","lastModifiedDate":"2023-02-07"},{"lineNumber":51,"author":{"gitId":"Rayleigh47"},"content":"            addTodo(arrayOfWords);","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"Rayleigh47"},"content":"            break;","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"Rayleigh47"},"content":"        case \"deadline\":","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"Rayleigh47"},"content":"            if(!command.contains(\"/by\")) {","lastModifiedDate":"2023-02-07"},{"lineNumber":55,"author":{"gitId":"Rayleigh47"},"content":"                throw new DukeException(\"OOPS! Use case: deadline X /by yyyy-mm-dd (e.g. 2019-10-15)\");","lastModifiedDate":"2023-02-26"},{"lineNumber":56,"author":{"gitId":"Rayleigh47"},"content":"            }","lastModifiedDate":"2023-02-07"},{"lineNumber":57,"author":{"gitId":"Rayleigh47"},"content":"            addDeadline(arrayOfWords);","lastModifiedDate":"2023-02-26"},{"lineNumber":58,"author":{"gitId":"Rayleigh47"},"content":"            break;","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"Rayleigh47"},"content":"        case \"event\":","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"Rayleigh47"},"content":"            if(!command.contains(\"/from\") || !command.contains(\"/to\")) {","lastModifiedDate":"2023-02-07"},{"lineNumber":61,"author":{"gitId":"Rayleigh47"},"content":"                throw new DukeException(\"OOPS! Use case: event X /from Y /to Z\");","lastModifiedDate":"2023-02-07"},{"lineNumber":62,"author":{"gitId":"Rayleigh47"},"content":"            }","lastModifiedDate":"2023-02-07"},{"lineNumber":63,"author":{"gitId":"Rayleigh47"},"content":"            addEvent(arrayOfWords);","lastModifiedDate":"2023-02-26"},{"lineNumber":64,"author":{"gitId":"Rayleigh47"},"content":"            break;","lastModifiedDate":"2023-02-26"},{"lineNumber":65,"author":{"gitId":"Rayleigh47"},"content":"        case \"find\":","lastModifiedDate":"2023-02-26"},{"lineNumber":66,"author":{"gitId":"Rayleigh47"},"content":"            if(arrayOfWords.length !\u003d 2) {","lastModifiedDate":"2023-02-26"},{"lineNumber":67,"author":{"gitId":"Rayleigh47"},"content":"                throw new DukeException(\"OOPS! Use case: find KEYWORD\");","lastModifiedDate":"2023-02-26"},{"lineNumber":68,"author":{"gitId":"Rayleigh47"},"content":"            }","lastModifiedDate":"2023-02-26"},{"lineNumber":69,"author":{"gitId":"Rayleigh47"},"content":"            findTask(arrayOfWords[1]);","lastModifiedDate":"2023-02-26"},{"lineNumber":70,"author":{"gitId":"Rayleigh47"},"content":"            break;","lastModifiedDate":"2023-02-01"},{"lineNumber":71,"author":{"gitId":"Rayleigh47"},"content":"        default:","lastModifiedDate":"2023-02-01"},{"lineNumber":72,"author":{"gitId":"Rayleigh47"},"content":"            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-02-07"},{"lineNumber":73,"author":{"gitId":"Rayleigh47"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"Rayleigh47"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" task(s) in the list.\");","lastModifiedDate":"2023-02-01"},{"lineNumber":75,"author":{"gitId":"Rayleigh47"},"content":"        Storage.writeToFile();","lastModifiedDate":"2023-02-26"},{"lineNumber":76,"author":{"gitId":"Rayleigh47"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":77,"author":{"gitId":"Rayleigh47"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":78,"author":{"gitId":"Rayleigh47"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":79,"author":{"gitId":"Rayleigh47"},"content":"     * Adds event into list of tasks","lastModifiedDate":"2023-02-27"},{"lineNumber":80,"author":{"gitId":"Rayleigh47"},"content":"     * @param arrayOfWords String array of event input","lastModifiedDate":"2023-02-27"},{"lineNumber":81,"author":{"gitId":"Rayleigh47"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":82,"author":{"gitId":"Rayleigh47"},"content":"    private static void addEvent(String[] arrayOfWords) {","lastModifiedDate":"2023-02-26"},{"lineNumber":83,"author":{"gitId":"Rayleigh47"},"content":"        String[] arrayOfEvent \u003d arrayOfWords[1].split(\"/from\");","lastModifiedDate":"2023-02-26"},{"lineNumber":84,"author":{"gitId":"Rayleigh47"},"content":"        String eventDescription \u003d arrayOfEvent[0];","lastModifiedDate":"2023-02-26"},{"lineNumber":85,"author":{"gitId":"Rayleigh47"},"content":"        String eventStart \u003d arrayOfEvent[1].split(\"/to\", 2)[0].trim();","lastModifiedDate":"2023-02-26"},{"lineNumber":86,"author":{"gitId":"Rayleigh47"},"content":"        String eventEnd \u003d arrayOfEvent[1].split(\"/to\", 2)[1].trim();","lastModifiedDate":"2023-02-26"},{"lineNumber":87,"author":{"gitId":"Rayleigh47"},"content":"        tasks.add(new Event(eventDescription, eventStart, eventEnd));","lastModifiedDate":"2023-02-26"},{"lineNumber":88,"author":{"gitId":"Rayleigh47"},"content":"        System.out.print(\"added new event: \");","lastModifiedDate":"2023-02-26"},{"lineNumber":89,"author":{"gitId":"Rayleigh47"},"content":"        System.out.println(eventDescription + \"from \" + eventStart + \" to \" + eventEnd);","lastModifiedDate":"2023-02-26"},{"lineNumber":90,"author":{"gitId":"Rayleigh47"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":91,"author":{"gitId":"Rayleigh47"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":92,"author":{"gitId":"Rayleigh47"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":93,"author":{"gitId":"Rayleigh47"},"content":"     * Adds deadline into list of tasks","lastModifiedDate":"2023-02-27"},{"lineNumber":94,"author":{"gitId":"Rayleigh47"},"content":"     * @param arrayOfWords String array of deadline input","lastModifiedDate":"2023-02-27"},{"lineNumber":95,"author":{"gitId":"Rayleigh47"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":96,"author":{"gitId":"Rayleigh47"},"content":"    private static void addDeadline(String[] arrayOfWords) {","lastModifiedDate":"2023-02-26"},{"lineNumber":97,"author":{"gitId":"Rayleigh47"},"content":"        try {","lastModifiedDate":"2023-02-26"},{"lineNumber":98,"author":{"gitId":"Rayleigh47"},"content":"            String[] arrayOfDeadline \u003d arrayOfWords[1].split(\"/by\");","lastModifiedDate":"2023-02-26"},{"lineNumber":99,"author":{"gitId":"Rayleigh47"},"content":"            String deadlineDescription \u003d arrayOfDeadline[0].trim();","lastModifiedDate":"2023-02-26"},{"lineNumber":100,"author":{"gitId":"Rayleigh47"},"content":"            String deadlineDue \u003d arrayOfDeadline[1].trim();","lastModifiedDate":"2023-02-26"},{"lineNumber":101,"author":{"gitId":"Rayleigh47"},"content":"            LocalDate dueDate \u003d LocalDate.parse(deadlineDue);","lastModifiedDate":"2023-02-26"},{"lineNumber":102,"author":{"gitId":"Rayleigh47"},"content":"            deadlineDue \u003d dueDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-02-26"},{"lineNumber":103,"author":{"gitId":"Rayleigh47"},"content":"            tasks.add(new Deadline(deadlineDescription, dueDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))));","lastModifiedDate":"2023-02-26"},{"lineNumber":104,"author":{"gitId":"Rayleigh47"},"content":"            System.out.print(\"added new deadline: \");","lastModifiedDate":"2023-02-26"},{"lineNumber":105,"author":{"gitId":"Rayleigh47"},"content":"            System.out.println(deadlineDescription + \" due \" + deadlineDue);","lastModifiedDate":"2023-02-26"},{"lineNumber":106,"author":{"gitId":"Rayleigh47"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-02-26"},{"lineNumber":107,"author":{"gitId":"Rayleigh47"},"content":"            System.out.println(\"OOPS! Use case: deadline X /by yyyy-mm-dd (e.g. 2019-10-15)\");","lastModifiedDate":"2023-02-26"},{"lineNumber":108,"author":{"gitId":"Rayleigh47"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":109,"author":{"gitId":"Rayleigh47"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":110,"author":{"gitId":"Rayleigh47"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":111,"author":{"gitId":"Rayleigh47"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":112,"author":{"gitId":"Rayleigh47"},"content":"     * Adds todo into list of tasks","lastModifiedDate":"2023-02-27"},{"lineNumber":113,"author":{"gitId":"Rayleigh47"},"content":"     * @param arrayOfWords String array of todo input","lastModifiedDate":"2023-02-27"},{"lineNumber":114,"author":{"gitId":"Rayleigh47"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":115,"author":{"gitId":"Rayleigh47"},"content":"    private static void addTodo(String[] arrayOfWords) {","lastModifiedDate":"2023-02-26"},{"lineNumber":116,"author":{"gitId":"Rayleigh47"},"content":"        String todoDescription \u003d arrayOfWords[1].trim();","lastModifiedDate":"2023-02-26"},{"lineNumber":117,"author":{"gitId":"Rayleigh47"},"content":"        tasks.add(new Todo(todoDescription));","lastModifiedDate":"2023-02-26"},{"lineNumber":118,"author":{"gitId":"Rayleigh47"},"content":"        System.out.print(\"added new todo: \");","lastModifiedDate":"2023-02-26"},{"lineNumber":119,"author":{"gitId":"Rayleigh47"},"content":"        System.out.println(todoDescription);","lastModifiedDate":"2023-02-26"},{"lineNumber":120,"author":{"gitId":"Rayleigh47"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":121,"author":{"gitId":"Rayleigh47"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":122,"author":{"gitId":"Rayleigh47"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":123,"author":{"gitId":"Rayleigh47"},"content":"     * Convert user input to the task id that is to be marked and sets the task to done","lastModifiedDate":"2023-02-27"},{"lineNumber":124,"author":{"gitId":"Rayleigh47"},"content":"     *","lastModifiedDate":"2023-02-27"},{"lineNumber":125,"author":{"gitId":"Rayleigh47"},"content":"     * @param command user input to mark a task","lastModifiedDate":"2023-02-27"},{"lineNumber":126,"author":{"gitId":"Rayleigh47"},"content":"     * @throws DukeException thrown as a warning message if input is incorrect","lastModifiedDate":"2023-02-27"},{"lineNumber":127,"author":{"gitId":"Rayleigh47"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":128,"author":{"gitId":"Rayleigh47"},"content":"    public static void mark(String command) throws DukeException {","lastModifiedDate":"2023-02-07"},{"lineNumber":129,"author":{"gitId":"Rayleigh47"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":130,"author":{"gitId":"Rayleigh47"},"content":"            String[] arrOfCommand \u003d command.split(\" \");","lastModifiedDate":"2023-02-08"},{"lineNumber":131,"author":{"gitId":"Rayleigh47"},"content":"            int taskNumber \u003d Integer.parseInt(arrOfCommand[1]) - 1;","lastModifiedDate":"2023-02-01"},{"lineNumber":132,"author":{"gitId":"Rayleigh47"},"content":"            tasks.get(taskNumber).markAsDone();","lastModifiedDate":"2023-02-01"},{"lineNumber":133,"author":{"gitId":"Rayleigh47"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-01-29"},{"lineNumber":134,"author":{"gitId":"Rayleigh47"},"content":"            System.out.println(tasks.get(taskNumber).fullDescription());","lastModifiedDate":"2023-02-01"},{"lineNumber":135,"author":{"gitId":"Rayleigh47"},"content":"            Storage.writeToFile();","lastModifiedDate":"2023-02-26"},{"lineNumber":136,"author":{"gitId":"Rayleigh47"},"content":"        } catch(Exception error) {","lastModifiedDate":"2023-02-08"},{"lineNumber":137,"author":{"gitId":"Rayleigh47"},"content":"            throw new DukeException(\"Use case: mark ITEM_NUMBER\");","lastModifiedDate":"2023-02-08"},{"lineNumber":138,"author":{"gitId":"Rayleigh47"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":139,"author":{"gitId":"Rayleigh47"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":140,"author":{"gitId":"Rayleigh47"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":141,"author":{"gitId":"Rayleigh47"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":142,"author":{"gitId":"Rayleigh47"},"content":"     * Convert user input to the task id that is to be unmarked and sets the task to not done","lastModifiedDate":"2023-02-27"},{"lineNumber":143,"author":{"gitId":"Rayleigh47"},"content":"     *","lastModifiedDate":"2023-02-27"},{"lineNumber":144,"author":{"gitId":"Rayleigh47"},"content":"     * @param command user input to unmark a task","lastModifiedDate":"2023-02-27"},{"lineNumber":145,"author":{"gitId":"Rayleigh47"},"content":"     * @throws DukeException thrown as a warning message if input is incorrect","lastModifiedDate":"2023-02-27"},{"lineNumber":146,"author":{"gitId":"Rayleigh47"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":147,"author":{"gitId":"Rayleigh47"},"content":"    public static void unmark(String command) throws DukeException {","lastModifiedDate":"2023-02-07"},{"lineNumber":148,"author":{"gitId":"Rayleigh47"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":149,"author":{"gitId":"Rayleigh47"},"content":"            String[] arrOfCommand \u003d command.split(\" \");","lastModifiedDate":"2023-02-08"},{"lineNumber":150,"author":{"gitId":"Rayleigh47"},"content":"            int taskNumber \u003d Integer.parseInt(arrOfCommand[1]) - 1;","lastModifiedDate":"2023-02-01"},{"lineNumber":151,"author":{"gitId":"Rayleigh47"},"content":"            tasks.get(taskNumber).markAsNotDone();","lastModifiedDate":"2023-02-01"},{"lineNumber":152,"author":{"gitId":"Rayleigh47"},"content":"            System.out.println(\"Ok, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-01-29"},{"lineNumber":153,"author":{"gitId":"Rayleigh47"},"content":"            System.out.println(tasks.get(taskNumber).fullDescription());","lastModifiedDate":"2023-02-01"},{"lineNumber":154,"author":{"gitId":"Rayleigh47"},"content":"            Storage.writeToFile();","lastModifiedDate":"2023-02-26"},{"lineNumber":155,"author":{"gitId":"Rayleigh47"},"content":"        } catch(Exception error) {","lastModifiedDate":"2023-02-08"},{"lineNumber":156,"author":{"gitId":"Rayleigh47"},"content":"            throw new DukeException(\"Use case: unmark ITEM_NUMBER\");","lastModifiedDate":"2023-02-08"},{"lineNumber":157,"author":{"gitId":"Rayleigh47"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":158,"author":{"gitId":"Rayleigh47"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":159,"author":{"gitId":"Rayleigh47"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":160,"author":{"gitId":"Rayleigh47"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":161,"author":{"gitId":"Rayleigh47"},"content":"     * Convert user input to the task id that is to be deleted and removes the entry from the","lastModifiedDate":"2023-02-27"},{"lineNumber":162,"author":{"gitId":"Rayleigh47"},"content":"     * list of tasks","lastModifiedDate":"2023-02-27"},{"lineNumber":163,"author":{"gitId":"Rayleigh47"},"content":"     *","lastModifiedDate":"2023-02-27"},{"lineNumber":164,"author":{"gitId":"Rayleigh47"},"content":"     * @param command user input to delete as task","lastModifiedDate":"2023-02-27"},{"lineNumber":165,"author":{"gitId":"Rayleigh47"},"content":"     * @throws DukeException thrown as a warning message if input is incorrect","lastModifiedDate":"2023-02-27"},{"lineNumber":166,"author":{"gitId":"Rayleigh47"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":167,"author":{"gitId":"Rayleigh47"},"content":"    public static void delete(String command) throws DukeException {","lastModifiedDate":"2023-02-13"},{"lineNumber":168,"author":{"gitId":"Rayleigh47"},"content":"        try {","lastModifiedDate":"2023-02-13"},{"lineNumber":169,"author":{"gitId":"Rayleigh47"},"content":"            String[] arrOfCommand \u003d command.split(\" \");","lastModifiedDate":"2023-02-13"},{"lineNumber":170,"author":{"gitId":"Rayleigh47"},"content":"            int taskNumber \u003d Integer.parseInt(arrOfCommand[1]) - 1;","lastModifiedDate":"2023-02-13"},{"lineNumber":171,"author":{"gitId":"Rayleigh47"},"content":"            String removalDescription \u003d tasks.get(taskNumber).fullDescription();","lastModifiedDate":"2023-02-13"},{"lineNumber":172,"author":{"gitId":"Rayleigh47"},"content":"            tasks.remove(tasks.get(taskNumber));","lastModifiedDate":"2023-02-13"},{"lineNumber":173,"author":{"gitId":"Rayleigh47"},"content":"            System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-02-13"},{"lineNumber":174,"author":{"gitId":"Rayleigh47"},"content":"            System.out.println(removalDescription);","lastModifiedDate":"2023-02-13"},{"lineNumber":175,"author":{"gitId":"Rayleigh47"},"content":"            System.out.println(\"Now you have \" + tasks.size() + \" task(s) in the list.\");","lastModifiedDate":"2023-02-13"},{"lineNumber":176,"author":{"gitId":"Rayleigh47"},"content":"            Storage.writeToFile();","lastModifiedDate":"2023-02-26"},{"lineNumber":177,"author":{"gitId":"Rayleigh47"},"content":"        } catch(Exception error) {","lastModifiedDate":"2023-02-13"},{"lineNumber":178,"author":{"gitId":"Rayleigh47"},"content":"            throw new DukeException(\"Use case: delete ITEM_NUMBER\");","lastModifiedDate":"2023-02-13"},{"lineNumber":179,"author":{"gitId":"Rayleigh47"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":180,"author":{"gitId":"Rayleigh47"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":181,"author":{"gitId":"Rayleigh47"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":182,"author":{"gitId":"Rayleigh47"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":183,"author":{"gitId":"Rayleigh47"},"content":"     * Outputs list of tasks that have descriptions that match the user\u0027s keyword onto command line","lastModifiedDate":"2023-02-27"},{"lineNumber":184,"author":{"gitId":"Rayleigh47"},"content":"     *","lastModifiedDate":"2023-02-27"},{"lineNumber":185,"author":{"gitId":"Rayleigh47"},"content":"     * @param keyword user input as a keyword for the task","lastModifiedDate":"2023-02-27"},{"lineNumber":186,"author":{"gitId":"Rayleigh47"},"content":"     * @throws DukeException thrown as a warning message if input is incorrect","lastModifiedDate":"2023-02-27"},{"lineNumber":187,"author":{"gitId":"Rayleigh47"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":188,"author":{"gitId":"Rayleigh47"},"content":"    public static void findTask(String keyword) throws DukeException {","lastModifiedDate":"2023-02-26"},{"lineNumber":189,"author":{"gitId":"Rayleigh47"},"content":"        try {","lastModifiedDate":"2023-02-26"},{"lineNumber":190,"author":{"gitId":"Rayleigh47"},"content":"            keyword \u003d keyword.trim().toLowerCase();","lastModifiedDate":"2023-02-26"},{"lineNumber":191,"author":{"gitId":"Rayleigh47"},"content":"            String finalKeyword \u003d keyword;","lastModifiedDate":"2023-02-26"},{"lineNumber":192,"author":{"gitId":"Rayleigh47"},"content":"            ArrayList\u003cTask\u003e filteredList \u003d (ArrayList\u003cTask\u003e) tasks.stream()","lastModifiedDate":"2023-02-26"},{"lineNumber":193,"author":{"gitId":"Rayleigh47"},"content":"                    .filter(t -\u003e t.getDescription().trim().toLowerCase().contains(finalKeyword))","lastModifiedDate":"2023-02-26"},{"lineNumber":194,"author":{"gitId":"Rayleigh47"},"content":"                    .collect(toList());","lastModifiedDate":"2023-02-26"},{"lineNumber":195,"author":{"gitId":"Rayleigh47"},"content":"            System.out.println(\"Here are the matching tasks in your list: \");","lastModifiedDate":"2023-02-26"},{"lineNumber":196,"author":{"gitId":"Rayleigh47"},"content":"            int i \u003d 1;","lastModifiedDate":"2023-02-26"},{"lineNumber":197,"author":{"gitId":"Rayleigh47"},"content":"            for(Task t : filteredList) {","lastModifiedDate":"2023-02-26"},{"lineNumber":198,"author":{"gitId":"Rayleigh47"},"content":"                System.out.println((i) + \". \" + t.fullDescription());","lastModifiedDate":"2023-02-26"},{"lineNumber":199,"author":{"gitId":"Rayleigh47"},"content":"                i +\u003d 1;","lastModifiedDate":"2023-02-26"},{"lineNumber":200,"author":{"gitId":"Rayleigh47"},"content":"            }","lastModifiedDate":"2023-02-26"},{"lineNumber":201,"author":{"gitId":"Rayleigh47"},"content":"        } catch(Exception error) {","lastModifiedDate":"2023-02-26"},{"lineNumber":202,"author":{"gitId":"Rayleigh47"},"content":"            throw new DukeException(\"Error searching for a match\");","lastModifiedDate":"2023-02-26"},{"lineNumber":203,"author":{"gitId":"Rayleigh47"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":204,"author":{"gitId":"Rayleigh47"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":205,"author":{"gitId":"Rayleigh47"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Rayleigh47":205}},{"path":"src/main/java/Interface/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rayleigh47"},"content":"package Interface;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"Rayleigh47"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"Rayleigh47"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"Rayleigh47"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"Rayleigh47"},"content":"public class Ui {","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"Rayleigh47"},"content":"    static Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"Rayleigh47"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"Rayleigh47"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"Rayleigh47"},"content":"     * Outputs intro message to terminal","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"Rayleigh47"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"Rayleigh47"},"content":"    public static void intro() {","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"Rayleigh47"},"content":"        String logo \u003d \"\\n\" +","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"Rayleigh47"},"content":"                \"██████╗░██╗░░░██╗██████╗░███████╗\\n\" +","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"Rayleigh47"},"content":"                \"██╔══██╗██║░░░██║██╔══██╗██╔════╝\\n\" +","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"Rayleigh47"},"content":"                \"██║░░██║██║░░░██║██║░░██║█████╗░░\\n\" +","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"Rayleigh47"},"content":"                \"██║░░██║██║░░░██║██║░░██║██╔══╝░░\\n\" +","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"Rayleigh47"},"content":"                \"██████╔╝╚██████╔╝██████╔╝███████╗\\n\" +","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"Rayleigh47"},"content":"                \"╚═════╝░░╚═════╝░╚═════╝░╚══════╝\\n\";","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"Rayleigh47"},"content":"        System.out.println(\"Hello from:\\n\" + logo);","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"Rayleigh47"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"Rayleigh47"},"content":"        System.out.println(\"Hello there! My name is Dude\");","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"Rayleigh47"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"Rayleigh47"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"Rayleigh47"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"Rayleigh47"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":26,"author":{"gitId":"Rayleigh47"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"Rayleigh47"},"content":"     * Outputs farewell message to terminal","lastModifiedDate":"2023-02-27"},{"lineNumber":28,"author":{"gitId":"Rayleigh47"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":29,"author":{"gitId":"Rayleigh47"},"content":"    public static void farewell() {","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"Rayleigh47"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"Rayleigh47"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"Rayleigh47"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":33,"author":{"gitId":"Rayleigh47"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":34,"author":{"gitId":"Rayleigh47"},"content":"     * Reads user\u0027s input","lastModifiedDate":"2023-02-27"},{"lineNumber":35,"author":{"gitId":"Rayleigh47"},"content":"     * @return string of user input","lastModifiedDate":"2023-02-27"},{"lineNumber":36,"author":{"gitId":"Rayleigh47"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":37,"author":{"gitId":"Rayleigh47"},"content":"    public static String readCommand() {","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"Rayleigh47"},"content":"        return in.nextLine();","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"Rayleigh47"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"Rayleigh47"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":41,"author":{"gitId":"Rayleigh47"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":42,"author":{"gitId":"Rayleigh47"},"content":"     * Outputs a copy of a string to terminal","lastModifiedDate":"2023-02-27"},{"lineNumber":43,"author":{"gitId":"Rayleigh47"},"content":"     * @param line string to be output at terminal","lastModifiedDate":"2023-02-27"},{"lineNumber":44,"author":{"gitId":"Rayleigh47"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":45,"author":{"gitId":"Rayleigh47"},"content":"    public static void copy(String line) {","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"Rayleigh47"},"content":"        System.out.println(line);","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"Rayleigh47"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"Rayleigh47"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":49,"author":{"gitId":"Rayleigh47"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":50,"author":{"gitId":"Rayleigh47"},"content":"     * Outputs create directory message to terminal","lastModifiedDate":"2023-02-27"},{"lineNumber":51,"author":{"gitId":"Rayleigh47"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":52,"author":{"gitId":"Rayleigh47"},"content":"    public static void makeDirectory() {","lastModifiedDate":"2023-02-26"},{"lineNumber":53,"author":{"gitId":"Rayleigh47"},"content":"        System.out.println(\"New directory created...\");","lastModifiedDate":"2023-02-26"},{"lineNumber":54,"author":{"gitId":"Rayleigh47"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":55,"author":{"gitId":"Rayleigh47"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":56,"author":{"gitId":"Rayleigh47"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":57,"author":{"gitId":"Rayleigh47"},"content":"     * Outputs create file message to terminal","lastModifiedDate":"2023-02-27"},{"lineNumber":58,"author":{"gitId":"Rayleigh47"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":59,"author":{"gitId":"Rayleigh47"},"content":"    public static void makeFile() {","lastModifiedDate":"2023-02-26"},{"lineNumber":60,"author":{"gitId":"Rayleigh47"},"content":"        System.out.println(\"New file created...\");","lastModifiedDate":"2023-02-26"},{"lineNumber":61,"author":{"gitId":"Rayleigh47"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":62,"author":{"gitId":"Rayleigh47"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":63,"author":{"gitId":"Rayleigh47"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":64,"author":{"gitId":"Rayleigh47"},"content":"     * Outputs load file message to terminal","lastModifiedDate":"2023-02-27"},{"lineNumber":65,"author":{"gitId":"Rayleigh47"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":66,"author":{"gitId":"Rayleigh47"},"content":"    public static void loadFile() {","lastModifiedDate":"2023-02-26"},{"lineNumber":67,"author":{"gitId":"Rayleigh47"},"content":"        System.out.println(\"Save file has been successfully loaded.\");","lastModifiedDate":"2023-02-26"},{"lineNumber":68,"author":{"gitId":"Rayleigh47"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":69,"author":{"gitId":"Rayleigh47"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"Rayleigh47":69}},{"path":"src/main/java/Tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rayleigh47"},"content":"package Tasks;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"Rayleigh47"},"content":"public class Deadline extends Task{","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"Rayleigh47"},"content":"    protected String by;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"Rayleigh47"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"Rayleigh47"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"Rayleigh47"},"content":"     * Constructor for deadline","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"Rayleigh47"},"content":"     *","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"Rayleigh47"},"content":"     * @param description string of description of deadline","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"Rayleigh47"},"content":"     * @param by string of the due date of deadline","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"Rayleigh47"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"Rayleigh47"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"Rayleigh47"},"content":"        super(description);","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"Rayleigh47"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"Rayleigh47"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"Rayleigh47"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"Rayleigh47"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"Rayleigh47"},"content":"     * Getter for deadline due date","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"Rayleigh47"},"content":"     *","lastModifiedDate":"2023-02-27"},{"lineNumber":19,"author":{"gitId":"Rayleigh47"},"content":"     * @return string of due date of deadline","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"Rayleigh47"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"Rayleigh47"},"content":"    public String getBy() {","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"Rayleigh47"},"content":"        return this.by;","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"Rayleigh47"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"Rayleigh47"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":25,"author":{"gitId":"Rayleigh47"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":26,"author":{"gitId":"Rayleigh47"},"content":"     * Getter for deadline type","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"Rayleigh47"},"content":"     *","lastModifiedDate":"2023-02-27"},{"lineNumber":28,"author":{"gitId":"Rayleigh47"},"content":"     * @return string of deadline","lastModifiedDate":"2023-02-27"},{"lineNumber":29,"author":{"gitId":"Rayleigh47"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":30,"author":{"gitId":"Rayleigh47"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"Rayleigh47"},"content":"    public String getType() {","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"Rayleigh47"},"content":"        return \"deadline\";","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"Rayleigh47"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"Rayleigh47"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":35,"author":{"gitId":"Rayleigh47"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":36,"author":{"gitId":"Rayleigh47"},"content":"     * Getter for full description of a deadline","lastModifiedDate":"2023-02-27"},{"lineNumber":37,"author":{"gitId":"Rayleigh47"},"content":"     *","lastModifiedDate":"2023-02-27"},{"lineNumber":38,"author":{"gitId":"Rayleigh47"},"content":"     * @return string with deadline status, description and due date","lastModifiedDate":"2023-02-27"},{"lineNumber":39,"author":{"gitId":"Rayleigh47"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":40,"author":{"gitId":"Rayleigh47"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"Rayleigh47"},"content":"    public String fullDescription() {","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"Rayleigh47"},"content":"        String fullSentence \u003d (isDone ? \"[D][X] \" : \"[D][ ] \") + this.description +","lastModifiedDate":"2023-02-08"},{"lineNumber":43,"author":{"gitId":"Rayleigh47"},"content":"                \" (by: \" + this.by + \")\";","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"Rayleigh47"},"content":"        return fullSentence;","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"Rayleigh47"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"Rayleigh47"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"Rayleigh47":46}},{"path":"src/main/java/Tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rayleigh47"},"content":"package Tasks;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"Rayleigh47"},"content":"public class Event extends Task {","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"Rayleigh47"},"content":"    protected String startTime;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"Rayleigh47"},"content":"    protected String endTime;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"Rayleigh47"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"Rayleigh47"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"Rayleigh47"},"content":"     * Constructor for event","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"Rayleigh47"},"content":"     *","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"Rayleigh47"},"content":"     * @param description string of description of event","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"Rayleigh47"},"content":"     * @param startTime string of the start time of event","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"Rayleigh47"},"content":"     * @param endTime string of the end time of event","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"Rayleigh47"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"Rayleigh47"},"content":"    public Event(String description, String startTime, String endTime) {","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"Rayleigh47"},"content":"        super(description);","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"Rayleigh47"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"Rayleigh47"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"Rayleigh47"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"Rayleigh47"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":19,"author":{"gitId":"Rayleigh47"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"Rayleigh47"},"content":"     * Getter for event start time","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"Rayleigh47"},"content":"     *","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"Rayleigh47"},"content":"     * @return return event start time","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"Rayleigh47"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":24,"author":{"gitId":"Rayleigh47"},"content":"    public String getFrom() {","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"Rayleigh47"},"content":"        return startTime;","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"Rayleigh47"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"Rayleigh47"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":28,"author":{"gitId":"Rayleigh47"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":29,"author":{"gitId":"Rayleigh47"},"content":"     * Getter for event end time","lastModifiedDate":"2023-02-27"},{"lineNumber":30,"author":{"gitId":"Rayleigh47"},"content":"     *","lastModifiedDate":"2023-02-27"},{"lineNumber":31,"author":{"gitId":"Rayleigh47"},"content":"     * @return return event end time","lastModifiedDate":"2023-02-27"},{"lineNumber":32,"author":{"gitId":"Rayleigh47"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":33,"author":{"gitId":"Rayleigh47"},"content":"    public String getTo() {","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"Rayleigh47"},"content":"        return endTime;","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"Rayleigh47"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"Rayleigh47"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":37,"author":{"gitId":"Rayleigh47"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":38,"author":{"gitId":"Rayleigh47"},"content":"     * Getter for event type","lastModifiedDate":"2023-02-27"},{"lineNumber":39,"author":{"gitId":"Rayleigh47"},"content":"     *","lastModifiedDate":"2023-02-27"},{"lineNumber":40,"author":{"gitId":"Rayleigh47"},"content":"     * @return return event","lastModifiedDate":"2023-02-27"},{"lineNumber":41,"author":{"gitId":"Rayleigh47"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":42,"author":{"gitId":"Rayleigh47"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"Rayleigh47"},"content":"    public String getType() {","lastModifiedDate":"2023-02-13"},{"lineNumber":44,"author":{"gitId":"Rayleigh47"},"content":"        return \"event\";","lastModifiedDate":"2023-02-13"},{"lineNumber":45,"author":{"gitId":"Rayleigh47"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":46,"author":{"gitId":"Rayleigh47"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":47,"author":{"gitId":"Rayleigh47"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":48,"author":{"gitId":"Rayleigh47"},"content":"     * Getter for full description of a event","lastModifiedDate":"2023-02-27"},{"lineNumber":49,"author":{"gitId":"Rayleigh47"},"content":"     *","lastModifiedDate":"2023-02-27"},{"lineNumber":50,"author":{"gitId":"Rayleigh47"},"content":"     * @return string with event status, description, from when to when","lastModifiedDate":"2023-02-27"},{"lineNumber":51,"author":{"gitId":"Rayleigh47"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":52,"author":{"gitId":"Rayleigh47"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"Rayleigh47"},"content":"    public String fullDescription() {","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"Rayleigh47"},"content":"        String fullSentence \u003d (isDone ? \"[E][X] \" : \"[E][ ] \") + this.description +","lastModifiedDate":"2023-02-08"},{"lineNumber":55,"author":{"gitId":"Rayleigh47"},"content":"                \"(from: \" + this.startTime + \" to: \" + this.endTime + \")\";","lastModifiedDate":"2023-02-02"},{"lineNumber":56,"author":{"gitId":"Rayleigh47"},"content":"        return fullSentence;","lastModifiedDate":"2023-02-02"},{"lineNumber":57,"author":{"gitId":"Rayleigh47"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"Rayleigh47"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"Rayleigh47":58}},{"path":"src/main/java/Tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rayleigh47"},"content":"package Tasks;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"Rayleigh47"},"content":"public class Task {","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"Rayleigh47"},"content":"    protected String description;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"Rayleigh47"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"Rayleigh47"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"Rayleigh47"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"Rayleigh47"},"content":"     * Getter for task description","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"Rayleigh47"},"content":"     *","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"Rayleigh47"},"content":"     * @return string of task description","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"Rayleigh47"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"Rayleigh47"},"content":"    public String getDescription() {","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"Rayleigh47"},"content":"        return this.description;","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"Rayleigh47"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"Rayleigh47"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"Rayleigh47"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"Rayleigh47"},"content":"     * Getter for task done status","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"Rayleigh47"},"content":"     *","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"Rayleigh47"},"content":"     * @return integer 1 if task is done, else 0","lastModifiedDate":"2023-02-27"},{"lineNumber":19,"author":{"gitId":"Rayleigh47"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"Rayleigh47"},"content":"    public int getIsDone() {","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"Rayleigh47"},"content":"        return isDone? 1 : 0;","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"Rayleigh47"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"Rayleigh47"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":24,"author":{"gitId":"Rayleigh47"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":25,"author":{"gitId":"Rayleigh47"},"content":"     * Constructor for task","lastModifiedDate":"2023-02-27"},{"lineNumber":26,"author":{"gitId":"Rayleigh47"},"content":"     *","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"Rayleigh47"},"content":"     * @param description description of task","lastModifiedDate":"2023-02-27"},{"lineNumber":28,"author":{"gitId":"Rayleigh47"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":29,"author":{"gitId":"Rayleigh47"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"Rayleigh47"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"Rayleigh47"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"Rayleigh47"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"Rayleigh47"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":34,"author":{"gitId":"Rayleigh47"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":35,"author":{"gitId":"Rayleigh47"},"content":"     * Getter for task type, is override by subclasses","lastModifiedDate":"2023-02-27"},{"lineNumber":36,"author":{"gitId":"Rayleigh47"},"content":"     *","lastModifiedDate":"2023-02-27"},{"lineNumber":37,"author":{"gitId":"Rayleigh47"},"content":"     * @return null","lastModifiedDate":"2023-02-27"},{"lineNumber":38,"author":{"gitId":"Rayleigh47"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":39,"author":{"gitId":"Rayleigh47"},"content":"    public String getType() {","lastModifiedDate":"2023-02-13"},{"lineNumber":40,"author":{"gitId":"Rayleigh47"},"content":"        return null;","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"Rayleigh47"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":42,"author":{"gitId":"Rayleigh47"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":43,"author":{"gitId":"Rayleigh47"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":44,"author":{"gitId":"Rayleigh47"},"content":"     * Getter for task status icon","lastModifiedDate":"2023-02-27"},{"lineNumber":45,"author":{"gitId":"Rayleigh47"},"content":"     *","lastModifiedDate":"2023-02-27"},{"lineNumber":46,"author":{"gitId":"Rayleigh47"},"content":"     * @return string that marks a task if done, else unmarked","lastModifiedDate":"2023-02-27"},{"lineNumber":47,"author":{"gitId":"Rayleigh47"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":48,"author":{"gitId":"Rayleigh47"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"Rayleigh47"},"content":"        return(isDone ? \"[X] \" : \"[ ] \");","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"Rayleigh47"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"Rayleigh47"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":52,"author":{"gitId":"Rayleigh47"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":53,"author":{"gitId":"Rayleigh47"},"content":"     * Setter to set task as done","lastModifiedDate":"2023-02-27"},{"lineNumber":54,"author":{"gitId":"Rayleigh47"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":55,"author":{"gitId":"Rayleigh47"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"Rayleigh47"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"Rayleigh47"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"Rayleigh47"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":59,"author":{"gitId":"Rayleigh47"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":60,"author":{"gitId":"Rayleigh47"},"content":"     * Setter to set task as not done","lastModifiedDate":"2023-02-27"},{"lineNumber":61,"author":{"gitId":"Rayleigh47"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":62,"author":{"gitId":"Rayleigh47"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2023-01-24"},{"lineNumber":63,"author":{"gitId":"Rayleigh47"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-24"},{"lineNumber":64,"author":{"gitId":"Rayleigh47"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":65,"author":{"gitId":"Rayleigh47"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":66,"author":{"gitId":"Rayleigh47"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":67,"author":{"gitId":"Rayleigh47"},"content":"     * Getter for full description of a task","lastModifiedDate":"2023-02-27"},{"lineNumber":68,"author":{"gitId":"Rayleigh47"},"content":"     *","lastModifiedDate":"2023-02-27"},{"lineNumber":69,"author":{"gitId":"Rayleigh47"},"content":"     * @return string with task status and description","lastModifiedDate":"2023-02-27"},{"lineNumber":70,"author":{"gitId":"Rayleigh47"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":71,"author":{"gitId":"Rayleigh47"},"content":"    public String fullDescription() {","lastModifiedDate":"2023-02-01"},{"lineNumber":72,"author":{"gitId":"Rayleigh47"},"content":"        String fullSentence \u003d (isDone ? \"[X] \" : \"[ ] \") + this.description;","lastModifiedDate":"2023-02-08"},{"lineNumber":73,"author":{"gitId":"Rayleigh47"},"content":"        return fullSentence;","lastModifiedDate":"2023-02-08"},{"lineNumber":74,"author":{"gitId":"Rayleigh47"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":75,"author":{"gitId":"Rayleigh47"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"Rayleigh47":75}},{"path":"src/main/java/Tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rayleigh47"},"content":"package Tasks;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"Rayleigh47"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"Rayleigh47"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"Rayleigh47"},"content":"     * Constructor for todo","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"Rayleigh47"},"content":"     *","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"Rayleigh47"},"content":"     * @param description string of description of the todo","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"Rayleigh47"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"Rayleigh47"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"Rayleigh47"},"content":"        super(description);","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"Rayleigh47"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"Rayleigh47"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"Rayleigh47"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"Rayleigh47"},"content":"     * Getter for todo type","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"Rayleigh47"},"content":"     *","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"Rayleigh47"},"content":"     * @return string of todo","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"Rayleigh47"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"Rayleigh47"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"Rayleigh47"},"content":"    public String getType() {","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"Rayleigh47"},"content":"        return \"todo\";","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"Rayleigh47"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"Rayleigh47"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"Rayleigh47"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"Rayleigh47"},"content":"     * Getter for full description of a todo","lastModifiedDate":"2023-02-27"},{"lineNumber":24,"author":{"gitId":"Rayleigh47"},"content":"     *","lastModifiedDate":"2023-02-27"},{"lineNumber":25,"author":{"gitId":"Rayleigh47"},"content":"     * @return string with todo status and description","lastModifiedDate":"2023-02-27"},{"lineNumber":26,"author":{"gitId":"Rayleigh47"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"Rayleigh47"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"Rayleigh47"},"content":"    public String fullDescription() {","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"Rayleigh47"},"content":"        String fullSentence \u003d (isDone ? \"[T][X] \" : \"[T][ ] \") + this.description;","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"Rayleigh47"},"content":"        return fullSentence;","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"Rayleigh47"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"Rayleigh47"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"Rayleigh47":32}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Rayleigh47"},"content":"event meeting /from 3pm /to 6pm tonight","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"Rayleigh47"},"content":"deadline do homework /by february 1st","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"Rayleigh47"},"content":"list","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"Rayleigh47"},"content":"mark 1","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"Rayleigh47"},"content":"list","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"Rayleigh47"},"content":"bye","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"Rayleigh47":6}}]
