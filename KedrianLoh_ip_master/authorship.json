[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KedrianLoh"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"KedrianLoh"},"content":"    protected String byDate;","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"KedrianLoh"},"content":"    public Deadline(String description, String byDate) {","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"KedrianLoh"},"content":"        super(description);","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"KedrianLoh"},"content":"        this.byDate \u003d byDate;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"KedrianLoh"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"KedrianLoh"},"content":"    public String addedMessage() {","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"KedrianLoh"},"content":"        return \" Got it. I\u0027ve added this task:\\n\" + \"   [D]\"","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"KedrianLoh"},"content":"                + getStatusIcon() + \" \" + description + \"(by: \" + byDate + \")\\n\"","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"KedrianLoh"},"content":"                + \" Now you have \" + Task.taskCount + (Task.taskCount !\u003d 1 ? \" tasks\" : \" task\") + \" in the list.\";","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"KedrianLoh"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"KedrianLoh"},"content":"    public String statusMessage() {","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"KedrianLoh"},"content":"        return \"[D]\" + getStatusIcon() + \" \" + description + \"(by: \" + byDate + \")\";","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"KedrianLoh"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"KedrianLoh"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"KedrianLoh":18}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KedrianLoh"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"KedrianLoh"},"content":"        greetingMessage();","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"KedrianLoh"},"content":"        readAndRespond();","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"KedrianLoh"},"content":"        exitMessage();","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"KedrianLoh"},"content":"    private static void readAndRespond() {","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"KedrianLoh"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"KedrianLoh"},"content":"        String input \u003d sc.nextLine();","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"KedrianLoh"},"content":"        Task[] listOfTasks \u003d new Task[101]; // 1-base indexing","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"KedrianLoh"},"content":"        while (!input.equals(\"bye\")) {","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"KedrianLoh"},"content":"            String[] words \u003d input.split(\" \");","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"KedrianLoh"},"content":"            if (input.equals(\"list\")) {","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"KedrianLoh"},"content":"                printList(listOfTasks);","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"KedrianLoh"},"content":"            } else if (input.isBlank()) {","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"KedrianLoh"},"content":"                System.out.println(\"Please enter a non-empty string!\");","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"KedrianLoh"},"content":"            } else if (input.contains(\"unmark\") \u0026\u0026 words.length \u003d\u003d 2 \u0026\u0026 isInt(words[1])) {","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"KedrianLoh"},"content":"                unmarkTask(listOfTasks, words);","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"KedrianLoh"},"content":"            } else if (input.contains(\"mark\") \u0026\u0026 words.length \u003d\u003d 2 \u0026\u0026 isInt(words[1])) {","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"KedrianLoh"},"content":"                markTask(listOfTasks, words);","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"KedrianLoh"},"content":"            } else if (words[0].equals(\"todo\") \u0026\u0026 words.length !\u003d 1) {","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"KedrianLoh"},"content":"                printAddedTodoMessage(input, listOfTasks);","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"KedrianLoh"},"content":"            } else if (words[0].equals(\"deadline\") \u0026\u0026 words.length !\u003d 1) {","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"KedrianLoh"},"content":"                printAddedDeadlineMessage(input, listOfTasks);","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"KedrianLoh"},"content":"            } else if (words[0].equals(\"event\") \u0026\u0026 words.length !\u003d 1) {","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"KedrianLoh"},"content":"                printAddedEventMessage(input, listOfTasks);","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"KedrianLoh"},"content":"            } else {","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"KedrianLoh"},"content":"                printAddedTaskMessage(input, listOfTasks);","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"KedrianLoh"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"KedrianLoh"},"content":"            input \u003d sc.nextLine();","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"KedrianLoh"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"KedrianLoh"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"KedrianLoh"},"content":"    private static void greetingMessage() {","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"KedrianLoh"},"content":"        String logo \u003d \"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\\n\";","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"KedrianLoh"},"content":"        System.out.println(logo);","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"KedrianLoh"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"KedrianLoh"},"content":"    private static void exitMessage() {","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"KedrianLoh"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"KedrianLoh"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"KedrianLoh"},"content":"    private static void printAddedTaskMessage(String input, Task[] listOfTasks) {","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"KedrianLoh"},"content":"        Task newTask \u003d new Task(input);","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"KedrianLoh"},"content":"        listOfTasks[Task.taskCount] \u003d newTask;","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"KedrianLoh"},"content":"        System.out.println(newTask.addedMessage());","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"KedrianLoh"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"KedrianLoh"},"content":"    private static void printAddedEventMessage(String input, Task[] listOfTasks) {","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"KedrianLoh"},"content":"        int idxOfSlash \u003d input.indexOf(\u0027/\u0027);","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"KedrianLoh"},"content":"        Event newEvent \u003d new Event(input.substring(6, idxOfSlash),","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"KedrianLoh"},"content":"                input.substring(idxOfSlash + 6, input.indexOf(\u0027/\u0027, idxOfSlash + 1)),","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"KedrianLoh"},"content":"                input.substring(input.indexOf(\u0027/\u0027, idxOfSlash + 1) + 4));","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"KedrianLoh"},"content":"        listOfTasks[Task.taskCount] \u003d newEvent;","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"KedrianLoh"},"content":"        System.out.println(newEvent.addedMessage());","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"KedrianLoh"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"KedrianLoh"},"content":"    private static void printAddedDeadlineMessage(String input, Task[] listOfTasks) {","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"KedrianLoh"},"content":"        int idxOfSlash \u003d input.indexOf(\u0027/\u0027);","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"KedrianLoh"},"content":"        Deadline newDeadline \u003d new Deadline(input.substring(9, idxOfSlash), input.substring(idxOfSlash + 4));","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"KedrianLoh"},"content":"        listOfTasks[Task.taskCount] \u003d newDeadline;","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"KedrianLoh"},"content":"        System.out.println(newDeadline.addedMessage());","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"KedrianLoh"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"KedrianLoh"},"content":"    private static void printAddedTodoMessage(String input, Task[] listOfTasks) {","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"KedrianLoh"},"content":"        ToDo newTodo \u003d new ToDo(input.substring(5));","lastModifiedDate":"2023-02-01"},{"lineNumber":71,"author":{"gitId":"KedrianLoh"},"content":"        listOfTasks[Task.taskCount] \u003d newTodo;","lastModifiedDate":"2023-02-01"},{"lineNumber":72,"author":{"gitId":"KedrianLoh"},"content":"        System.out.println(newTodo.addedMessage());","lastModifiedDate":"2023-02-01"},{"lineNumber":73,"author":{"gitId":"KedrianLoh"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":74,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":75,"author":{"gitId":"KedrianLoh"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"KedrianLoh"},"content":"     * Determines if the string is an integer","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"KedrianLoh"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":78,"author":{"gitId":"KedrianLoh"},"content":"     * @param str Str is the string we are checking","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"KedrianLoh"},"content":"     * @return True if str is an integer, false otherwise","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"KedrianLoh"},"content":"     * @catch NumberFormatException If str cannot be converted into integer","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"KedrianLoh"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"KedrianLoh"},"content":"    private static boolean isInt(String str) {","lastModifiedDate":"2023-02-01"},{"lineNumber":83,"author":{"gitId":"KedrianLoh"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"KedrianLoh"},"content":"            Integer.parseInt(str);","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"KedrianLoh"},"content":"            return true;","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"KedrianLoh"},"content":"        } catch (NumberFormatException exception) {","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"KedrianLoh"},"content":"            return false;","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"KedrianLoh"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"KedrianLoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":90,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"KedrianLoh"},"content":"    private static void markTask(Task[] listOfTasks, String[] words) {","lastModifiedDate":"2023-02-01"},{"lineNumber":92,"author":{"gitId":"KedrianLoh"},"content":"        int number \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"KedrianLoh"},"content":"        if (number \u003c\u003d 0 || number \u003e 100 || listOfTasks[number] \u003d\u003d null) {","lastModifiedDate":"2023-02-01"},{"lineNumber":94,"author":{"gitId":"KedrianLoh"},"content":"            System.out.println(\"Please mark only valid tasks!\");","lastModifiedDate":"2023-02-01"},{"lineNumber":95,"author":{"gitId":"KedrianLoh"},"content":"        } else {","lastModifiedDate":"2023-01-25"},{"lineNumber":96,"author":{"gitId":"KedrianLoh"},"content":"            listOfTasks[number].markAsDone();","lastModifiedDate":"2023-02-01"},{"lineNumber":97,"author":{"gitId":"KedrianLoh"},"content":"            System.out.println(\"  \" + listOfTasks[number].getStatusIcon() + \" \" + listOfTasks[number].description);","lastModifiedDate":"2023-02-01"},{"lineNumber":98,"author":{"gitId":"KedrianLoh"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":99,"author":{"gitId":"KedrianLoh"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":100,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":101,"author":{"gitId":"KedrianLoh"},"content":"    private static void unmarkTask(Task[] listOfTasks, String[] words) {","lastModifiedDate":"2023-02-01"},{"lineNumber":102,"author":{"gitId":"KedrianLoh"},"content":"        int number \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2023-01-26"},{"lineNumber":103,"author":{"gitId":"KedrianLoh"},"content":"        if (number \u003c\u003d 0 || number \u003e 100 || listOfTasks[number] \u003d\u003d null || words.length \u003d\u003d 1 || !isInt(words[1])) {","lastModifiedDate":"2023-02-01"},{"lineNumber":104,"author":{"gitId":"KedrianLoh"},"content":"            System.out.println(\"Please unmark only valid tasks!\");","lastModifiedDate":"2023-02-01"},{"lineNumber":105,"author":{"gitId":"KedrianLoh"},"content":"        } else {","lastModifiedDate":"2023-01-25"},{"lineNumber":106,"author":{"gitId":"KedrianLoh"},"content":"            listOfTasks[number].unmarkDone();","lastModifiedDate":"2023-02-01"},{"lineNumber":107,"author":{"gitId":"KedrianLoh"},"content":"            System.out.println(\" \" + listOfTasks[number].getStatusIcon() + \" \" + listOfTasks[number].description);","lastModifiedDate":"2023-02-01"},{"lineNumber":108,"author":{"gitId":"KedrianLoh"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":109,"author":{"gitId":"KedrianLoh"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":110,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":111,"author":{"gitId":"KedrianLoh"},"content":"    public static void printList(Task[] listOfTasks) {","lastModifiedDate":"2023-02-01"},{"lineNumber":112,"author":{"gitId":"KedrianLoh"},"content":"        System.out.println(\" Here are the tasks in your list\");","lastModifiedDate":"2023-02-01"},{"lineNumber":113,"author":{"gitId":"KedrianLoh"},"content":"        for (int i \u003d 1; i \u003c\u003d 100; ++i) {","lastModifiedDate":"2023-02-01"},{"lineNumber":114,"author":{"gitId":"KedrianLoh"},"content":"            if (listOfTasks[i] \u003d\u003d null) {","lastModifiedDate":"2023-02-01"},{"lineNumber":115,"author":{"gitId":"KedrianLoh"},"content":"                break;","lastModifiedDate":"2023-02-01"},{"lineNumber":116,"author":{"gitId":"KedrianLoh"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":117,"author":{"gitId":"KedrianLoh"},"content":"            System.out.println(\" \" + i + \".\" + listOfTasks[i].statusMessage());","lastModifiedDate":"2023-02-01"},{"lineNumber":118,"author":{"gitId":"KedrianLoh"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":119,"author":{"gitId":"KedrianLoh"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":120,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"KedrianLoh":117,"-":4}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KedrianLoh"},"content":"public class Event extends Task {","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"KedrianLoh"},"content":"    protected String startDate;","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"KedrianLoh"},"content":"    protected String endDate;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"KedrianLoh"},"content":"    public Event(String description, String startDate, String endDate) {","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"KedrianLoh"},"content":"        super(description);","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"KedrianLoh"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"KedrianLoh"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"KedrianLoh"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"KedrianLoh"},"content":"    public String addedMessage() {","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"KedrianLoh"},"content":"        return \" Got it. I\u0027ve added this task:\\n\" + \"   [E]\"","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"KedrianLoh"},"content":"                + getStatusIcon() + \" \" + description + \"(from: \" + startDate + \"to: \" + endDate + \")\\n\"","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"KedrianLoh"},"content":"                + \" Now you have \" + Task.taskCount + (Task.taskCount !\u003d 1 ? \" tasks\" : \" task\") + \" in the list.\";","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"KedrianLoh"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"KedrianLoh"},"content":"    public String statusMessage() {","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"KedrianLoh"},"content":"        return \"[E]\" + getStatusIcon() + \" \" + description + \"(from: \" + startDate + \"to: \" + endDate + \")\";","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"KedrianLoh"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"KedrianLoh"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"KedrianLoh":20}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KedrianLoh"},"content":"public class Task {","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"KedrianLoh"},"content":"    protected String description;","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"KedrianLoh"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"KedrianLoh"},"content":"    protected static int taskCount \u003d 0;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"KedrianLoh"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"KedrianLoh"},"content":"     * Initialization of the object","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"KedrianLoh"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"KedrianLoh"},"content":"     * @param description","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"KedrianLoh"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"KedrianLoh"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"KedrianLoh"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"KedrianLoh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"KedrianLoh"},"content":"        ++taskCount;","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"KedrianLoh"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"KedrianLoh"},"content":"    public static void printMessage() {","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"KedrianLoh"},"content":"        System.out.println(\"error in printing\");","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"KedrianLoh"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"KedrianLoh"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"KedrianLoh"},"content":"     * @return String that corresponding to the status of the Task","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"KedrianLoh"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"KedrianLoh"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"KedrianLoh"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"KedrianLoh"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"KedrianLoh"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"KedrianLoh"},"content":"     * To change the boolean of the object to true, meaning that is has been done","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"KedrianLoh"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"KedrianLoh"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"KedrianLoh"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"KedrianLoh"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"KedrianLoh"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"KedrianLoh"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"KedrianLoh"},"content":"     * To change the boolean of the object to false, meaning that is has NOT been done","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"KedrianLoh"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"KedrianLoh"},"content":"    public void unmarkDone() {","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"KedrianLoh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"KedrianLoh"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"KedrianLoh"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"KedrianLoh"},"content":"    public String statusMessage() {","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"KedrianLoh"},"content":"        return getStatusIcon() + \" \" + description;","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"KedrianLoh"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"KedrianLoh"},"content":"    public String addedMessage() {","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"KedrianLoh"},"content":"        return \"added: \" + description;","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"KedrianLoh"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"KedrianLoh"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"KedrianLoh":52}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KedrianLoh"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"KedrianLoh"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"KedrianLoh"},"content":"        super(description);","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"KedrianLoh"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"KedrianLoh"},"content":"    public String addedMessage() {","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"KedrianLoh"},"content":"        return \" Got it. I\u0027ve added this task:\\n\" + \"   [T]\"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"KedrianLoh"},"content":"                + getStatusIcon() + \" \" + description + \"\\n\" + \" Now you have \" + Task.taskCount +","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"KedrianLoh"},"content":"                (Task.taskCount !\u003d 1 ? \" tasks\" : \" task\") + \" in the list.\";","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"KedrianLoh"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"KedrianLoh"},"content":"    public String statusMessage() {","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"KedrianLoh"},"content":"        return \"[T]\" + getStatusIcon() + \" \" + description;","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"KedrianLoh"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"KedrianLoh"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"KedrianLoh":15}}]
