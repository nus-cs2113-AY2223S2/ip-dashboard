[{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shawntangy"},"content":"package duke;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"shawntangy"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"shawntangy"},"content":"    public static final String DEADLINE_ICON \u003d \"[D]\";","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"shawntangy"},"content":"    protected String by;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"shawntangy"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"shawntangy"},"content":"        super(description);","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"shawntangy"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"shawntangy"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"shawntangy"},"content":"    public String toString() {","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"shawntangy"},"content":"        return DEADLINE_ICON + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"shawntangy"},"content":"    @Override","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"shawntangy"},"content":"    public String saveFormat() {","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"shawntangy"},"content":"        return \"D|\" + super.saveFormat() + \"|\" + by;","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"shawntangy"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"shawntangy":22}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shawntangy"},"content":"package duke;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"shawntangy"},"content":"import duke.exceptions.EmptyCommandException;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"shawntangy"},"content":"import duke.exceptions.UnknownCommandException;","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"shawntangy"},"content":"import java.io.File;","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"shawntangy"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"shawntangy"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"shawntangy"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"shawntangy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"shawntangy"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"shawntangy"},"content":"    public static final String EXIT_PROGRAM \u003d \"bye\";","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"shawntangy"},"content":"    public static final String BY_DELIMITER \u003d \" /by \";","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"shawntangy"},"content":"    public static final String FROM_DELIMITER \u003d \" /from \";","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"shawntangy"},"content":"    public static final String TO_DELIMITER \u003d \" /to \";","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"shawntangy"},"content":"    public static final String UNKNOWN_COMAMND_MESSAGE \u003d \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"shawntangy"},"content":"    public static final String MARK_UNMARK_INDEX_IS_NOT_A_NUMBER_MESSAGE \u003d \"mark/unmark index is not a number\";","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"shawntangy"},"content":"    public static final String MARK_UNMARK_INDEX_DOES_NOT_EXIST_MESSAGE \u003d \"mark/unmark index does not exist\";","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"shawntangy"},"content":"    public static final String TODO_COMMAND \u003d \"todo\";","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"shawntangy"},"content":"    public static final String DEADLINE_COMMAND \u003d \"deadline\";","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"shawntangy"},"content":"    public static final String EVENT_COMMAND \u003d \"event\";","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"shawntangy"},"content":"    public static final String MARK_COMMAND \u003d \"mark\";","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"shawntangy"},"content":"    public static final String UNMARK_COMMAND \u003d \"unmark\";","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"shawntangy"},"content":"    public static final String LIST_COMMAND \u003d \"list\";","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"shawntangy"},"content":"    public static final String DELETE_COMMAND \u003d \"delete\";","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"shawntangy"},"content":"    public static final String EMPTY_COMMAND_MESSAGE \u003d \"Command is empty!\";","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"shawntangy"},"content":"    public static final String OUTPUT_FILE \u003d \"outputfile.txt\";","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"shawntangy"},"content":"    public static final String IOEXCEPTION_ERROR_MESSAGE \u003d \"IOException Error\";","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"shawntangy"},"content":"    public static final String FILE_NOT_FOUND_MESSAGE \u003d \"File Not Found\";","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"shawntangy"},"content":"    private static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"shawntangy"},"content":"    private Ui ui;","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"shawntangy"},"content":"    public Duke() {","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"shawntangy"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"shawntangy"},"content":"    public void run() {","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"shawntangy"},"content":"        ui.showWelcomeMessage();","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"shawntangy"},"content":"        Duke.load(OUTPUT_FILE);","lastModifiedDate":"2023-02-12"},{"lineNumber":45,"author":{"gitId":"shawntangy"},"content":"        starting();","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"shawntangy"},"content":"        ui.showEndingMessage();","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"shawntangy"},"content":"        System.exit(0);","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":49,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"shawntangy"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"shawntangy"},"content":"        new Duke().run();","lastModifiedDate":"2023-02-26"},{"lineNumber":53,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":54,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":55,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":56,"author":{"gitId":"shawntangy"},"content":"    private void starting() {","lastModifiedDate":"2023-02-26"},{"lineNumber":57,"author":{"gitId":"shawntangy"},"content":"        Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-23"},{"lineNumber":58,"author":{"gitId":"shawntangy"},"content":"        String line \u003d \"\";","lastModifiedDate":"2023-01-23"},{"lineNumber":59,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":60,"author":{"gitId":"shawntangy"},"content":"        line \u003d input.nextLine();","lastModifiedDate":"2023-02-05"},{"lineNumber":61,"author":{"gitId":"shawntangy"},"content":"        while (!line.equals(EXIT_PROGRAM)) {","lastModifiedDate":"2023-02-05"},{"lineNumber":62,"author":{"gitId":"shawntangy"},"content":"            try {","lastModifiedDate":"2023-02-05"},{"lineNumber":63,"author":{"gitId":"shawntangy"},"content":"                processInput(line);","lastModifiedDate":"2023-02-26"},{"lineNumber":64,"author":{"gitId":"shawntangy"},"content":"            } catch (UnknownCommandException e) {","lastModifiedDate":"2023-02-05"},{"lineNumber":65,"author":{"gitId":"shawntangy"},"content":"                System.out.println(UNKNOWN_COMAMND_MESSAGE);","lastModifiedDate":"2023-02-05"},{"lineNumber":66,"author":{"gitId":"shawntangy"},"content":"            } catch (EmptyCommandException e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":67,"author":{"gitId":"shawntangy"},"content":"                System.out.println(EMPTY_COMMAND_MESSAGE);","lastModifiedDate":"2023-02-12"},{"lineNumber":68,"author":{"gitId":"shawntangy"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-06"},{"lineNumber":69,"author":{"gitId":"shawntangy"},"content":"                System.out.println(MARK_UNMARK_INDEX_IS_NOT_A_NUMBER_MESSAGE);","lastModifiedDate":"2023-02-06"},{"lineNumber":70,"author":{"gitId":"shawntangy"},"content":"            } catch (NullPointerException e) {","lastModifiedDate":"2023-02-06"},{"lineNumber":71,"author":{"gitId":"shawntangy"},"content":"                System.out.println(MARK_UNMARK_INDEX_DOES_NOT_EXIST_MESSAGE);","lastModifiedDate":"2023-02-06"},{"lineNumber":72,"author":{"gitId":"shawntangy"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":73,"author":{"gitId":"shawntangy"},"content":"                System.out.println(IOEXCEPTION_ERROR_MESSAGE);","lastModifiedDate":"2023-02-12"},{"lineNumber":74,"author":{"gitId":"shawntangy"},"content":"            }","lastModifiedDate":"2023-02-05"},{"lineNumber":75,"author":{"gitId":"shawntangy"},"content":"            line \u003d input.nextLine();","lastModifiedDate":"2023-02-05"},{"lineNumber":76,"author":{"gitId":"shawntangy"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":77,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":78,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":79,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":80,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":81,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":82,"author":{"gitId":"shawntangy"},"content":"    public void processInput(String line) throws UnknownCommandException, IOException, EmptyCommandException {","lastModifiedDate":"2023-02-26"},{"lineNumber":83,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":84,"author":{"gitId":"shawntangy"},"content":"        String[] words \u003d line.split(\" \", 2);","lastModifiedDate":"2023-01-30"},{"lineNumber":85,"author":{"gitId":"shawntangy"},"content":"        String command \u003d words[0];","lastModifiedDate":"2023-01-23"},{"lineNumber":86,"author":{"gitId":"shawntangy"},"content":"        // words[0] is the command, words[n] is the next few words","lastModifiedDate":"2023-01-30"},{"lineNumber":87,"author":{"gitId":"shawntangy"},"content":"        checkIfCommandEmpty(words);","lastModifiedDate":"2023-02-12"},{"lineNumber":88,"author":{"gitId":"shawntangy"},"content":"        switch (command) {","lastModifiedDate":"2023-01-23"},{"lineNumber":89,"author":{"gitId":"shawntangy"},"content":"        case TODO_COMMAND:","lastModifiedDate":"2023-02-12"},{"lineNumber":90,"author":{"gitId":"shawntangy"},"content":"            Todo td \u003d getTodo(words);","lastModifiedDate":"2023-02-12"},{"lineNumber":91,"author":{"gitId":"shawntangy"},"content":"            tasks.add(td);","lastModifiedDate":"2023-02-12"},{"lineNumber":92,"author":{"gitId":"shawntangy"},"content":"            ui.printAddTaskMessage(td);","lastModifiedDate":"2023-02-26"},{"lineNumber":93,"author":{"gitId":"shawntangy"},"content":"            save(OUTPUT_FILE);","lastModifiedDate":"2023-02-12"},{"lineNumber":94,"author":{"gitId":"shawntangy"},"content":"            break;","lastModifiedDate":"2023-01-30"},{"lineNumber":95,"author":{"gitId":"shawntangy"},"content":"        case DEADLINE_COMMAND:","lastModifiedDate":"2023-02-12"},{"lineNumber":96,"author":{"gitId":"shawntangy"},"content":"            Deadline d \u003d getDeadline(words);","lastModifiedDate":"2023-02-12"},{"lineNumber":97,"author":{"gitId":"shawntangy"},"content":"            tasks.add(d);","lastModifiedDate":"2023-02-12"},{"lineNumber":98,"author":{"gitId":"shawntangy"},"content":"            ui.printAddTaskMessage(d);","lastModifiedDate":"2023-02-26"},{"lineNumber":99,"author":{"gitId":"shawntangy"},"content":"            save(OUTPUT_FILE);","lastModifiedDate":"2023-02-12"},{"lineNumber":100,"author":{"gitId":"shawntangy"},"content":"            break;","lastModifiedDate":"2023-01-30"},{"lineNumber":101,"author":{"gitId":"shawntangy"},"content":"        case EVENT_COMMAND:","lastModifiedDate":"2023-02-12"},{"lineNumber":102,"author":{"gitId":"shawntangy"},"content":"            Event e \u003d getEvent(words);","lastModifiedDate":"2023-02-12"},{"lineNumber":103,"author":{"gitId":"shawntangy"},"content":"            tasks.add(e);","lastModifiedDate":"2023-02-12"},{"lineNumber":104,"author":{"gitId":"shawntangy"},"content":"            ui.printAddTaskMessage(e);","lastModifiedDate":"2023-02-26"},{"lineNumber":105,"author":{"gitId":"shawntangy"},"content":"            save(OUTPUT_FILE);","lastModifiedDate":"2023-02-12"},{"lineNumber":106,"author":{"gitId":"shawntangy"},"content":"            break;","lastModifiedDate":"2023-01-30"},{"lineNumber":107,"author":{"gitId":"shawntangy"},"content":"        case DELETE_COMMAND:","lastModifiedDate":"2023-02-12"},{"lineNumber":108,"author":{"gitId":"shawntangy"},"content":"            deleteTask(words);","lastModifiedDate":"2023-02-12"},{"lineNumber":109,"author":{"gitId":"shawntangy"},"content":"            save(OUTPUT_FILE);","lastModifiedDate":"2023-02-12"},{"lineNumber":110,"author":{"gitId":"shawntangy"},"content":"            break;","lastModifiedDate":"2023-02-12"},{"lineNumber":111,"author":{"gitId":"shawntangy"},"content":"        case MARK_COMMAND:","lastModifiedDate":"2023-02-12"},{"lineNumber":112,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":113,"author":{"gitId":"shawntangy"},"content":"            int markIndex \u003d Integer.parseInt(words[1]) - 1; // 0 indexing","lastModifiedDate":"2023-01-31"},{"lineNumber":114,"author":{"gitId":"shawntangy"},"content":"            tasks.get(markIndex).markAsDone();","lastModifiedDate":"2023-02-12"},{"lineNumber":115,"author":{"gitId":"shawntangy"},"content":"            ui.printMarkedMessage(tasks.get(markIndex));","lastModifiedDate":"2023-02-26"},{"lineNumber":116,"author":{"gitId":"shawntangy"},"content":"            save(OUTPUT_FILE);","lastModifiedDate":"2023-02-12"},{"lineNumber":117,"author":{"gitId":"shawntangy"},"content":"            break;","lastModifiedDate":"2023-01-23"},{"lineNumber":118,"author":{"gitId":"shawntangy"},"content":"        case UNMARK_COMMAND:","lastModifiedDate":"2023-02-12"},{"lineNumber":119,"author":{"gitId":"shawntangy"},"content":"            int unmarkIndex \u003d Integer.parseInt(words[1]) - 1; // 0 indexing","lastModifiedDate":"2023-01-31"},{"lineNumber":120,"author":{"gitId":"shawntangy"},"content":"            tasks.get(unmarkIndex).markAsNotDone();","lastModifiedDate":"2023-02-12"},{"lineNumber":121,"author":{"gitId":"shawntangy"},"content":"            ui.printUnmarkedMessage(tasks.get(unmarkIndex));","lastModifiedDate":"2023-02-26"},{"lineNumber":122,"author":{"gitId":"shawntangy"},"content":"            save(OUTPUT_FILE);","lastModifiedDate":"2023-02-12"},{"lineNumber":123,"author":{"gitId":"shawntangy"},"content":"            break;","lastModifiedDate":"2023-01-23"},{"lineNumber":124,"author":{"gitId":"shawntangy"},"content":"        case LIST_COMMAND:","lastModifiedDate":"2023-02-12"},{"lineNumber":125,"author":{"gitId":"shawntangy"},"content":"            printList();","lastModifiedDate":"2023-02-12"},{"lineNumber":126,"author":{"gitId":"shawntangy"},"content":"            break;","lastModifiedDate":"2023-02-12"},{"lineNumber":127,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":128,"author":{"gitId":"shawntangy"},"content":"        default:","lastModifiedDate":"2023-02-12"},{"lineNumber":129,"author":{"gitId":"shawntangy"},"content":"            throw new UnknownCommandException();","lastModifiedDate":"2023-02-12"},{"lineNumber":130,"author":{"gitId":"shawntangy"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":131,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":132,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":133,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":134,"author":{"gitId":"shawntangy"},"content":"    private void deleteTask(String[] words) {","lastModifiedDate":"2023-02-26"},{"lineNumber":135,"author":{"gitId":"shawntangy"},"content":"        int deleteIndex \u003d Integer.parseInt(words[1]) - 1; // 0 indexing","lastModifiedDate":"2023-02-12"},{"lineNumber":136,"author":{"gitId":"shawntangy"},"content":"        String taskDescription \u003d String.valueOf(tasks.get(deleteIndex));","lastModifiedDate":"2023-02-12"},{"lineNumber":137,"author":{"gitId":"shawntangy"},"content":"        Task toDelete \u003d tasks.get(deleteIndex);","lastModifiedDate":"2023-02-12"},{"lineNumber":138,"author":{"gitId":"shawntangy"},"content":"        int taskLeft \u003d tasks.get(0).getNumberOfTasks() - 1;","lastModifiedDate":"2023-02-12"},{"lineNumber":139,"author":{"gitId":"shawntangy"},"content":"        toDelete.remove();","lastModifiedDate":"2023-02-12"},{"lineNumber":140,"author":{"gitId":"shawntangy"},"content":"        tasks.remove(deleteIndex);","lastModifiedDate":"2023-02-12"},{"lineNumber":141,"author":{"gitId":"shawntangy"},"content":"        ui.printDeleteTaskMessage(taskDescription, taskLeft);","lastModifiedDate":"2023-02-26"},{"lineNumber":142,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":143,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":144,"author":{"gitId":"shawntangy"},"content":"    private static void checkIfCommandEmpty(String[] words) throws EmptyCommandException {","lastModifiedDate":"2023-02-12"},{"lineNumber":145,"author":{"gitId":"shawntangy"},"content":"        if (words[0].equals(LIST_COMMAND)) {","lastModifiedDate":"2023-02-12"},{"lineNumber":146,"author":{"gitId":"shawntangy"},"content":"            return;","lastModifiedDate":"2023-02-12"},{"lineNumber":147,"author":{"gitId":"shawntangy"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":148,"author":{"gitId":"shawntangy"},"content":"        if (words.length \u003c 2 || words[1].equals(\"\")) {","lastModifiedDate":"2023-02-12"},{"lineNumber":149,"author":{"gitId":"shawntangy"},"content":"            throw new EmptyCommandException();","lastModifiedDate":"2023-02-12"},{"lineNumber":150,"author":{"gitId":"shawntangy"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":151,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":152,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":153,"author":{"gitId":"shawntangy"},"content":"    private static Todo getTodo(String[] words) {","lastModifiedDate":"2023-02-12"},{"lineNumber":154,"author":{"gitId":"shawntangy"},"content":"        Todo td \u003d new Todo(words[1]);","lastModifiedDate":"2023-02-12"},{"lineNumber":155,"author":{"gitId":"shawntangy"},"content":"        return td;","lastModifiedDate":"2023-02-12"},{"lineNumber":156,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":157,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":158,"author":{"gitId":"shawntangy"},"content":"    private static void printList() {","lastModifiedDate":"2023-02-12"},{"lineNumber":159,"author":{"gitId":"shawntangy"},"content":"        int listIndex \u003d 0;","lastModifiedDate":"2023-02-05"},{"lineNumber":160,"author":{"gitId":"shawntangy"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2023-01-23"},{"lineNumber":161,"author":{"gitId":"shawntangy"},"content":"            if (t !\u003d null) {","lastModifiedDate":"2023-01-23"},{"lineNumber":162,"author":{"gitId":"shawntangy"},"content":"                System.out.println(++listIndex + \". \" + t);","lastModifiedDate":"2023-02-05"},{"lineNumber":163,"author":{"gitId":"shawntangy"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":164,"author":{"gitId":"shawntangy"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":165,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":166,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":167,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":168,"author":{"gitId":"shawntangy"},"content":"    private static void writeTasksToFile(String filePath) throws IOException {","lastModifiedDate":"2023-02-12"},{"lineNumber":169,"author":{"gitId":"shawntangy"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2023-02-12"},{"lineNumber":170,"author":{"gitId":"shawntangy"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2023-02-12"},{"lineNumber":171,"author":{"gitId":"shawntangy"},"content":"            if (t !\u003d null) {","lastModifiedDate":"2023-02-12"},{"lineNumber":172,"author":{"gitId":"shawntangy"},"content":"                fw.write(t.saveFormat() + System.lineSeparator());","lastModifiedDate":"2023-02-12"},{"lineNumber":173,"author":{"gitId":"shawntangy"},"content":"            }","lastModifiedDate":"2023-02-12"},{"lineNumber":174,"author":{"gitId":"shawntangy"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":175,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":176,"author":{"gitId":"shawntangy"},"content":"        fw.close();","lastModifiedDate":"2023-02-12"},{"lineNumber":177,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":178,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":179,"author":{"gitId":"shawntangy"},"content":"    private static void save(String filename) throws IOException {","lastModifiedDate":"2023-02-12"},{"lineNumber":180,"author":{"gitId":"shawntangy"},"content":"        try {","lastModifiedDate":"2023-02-12"},{"lineNumber":181,"author":{"gitId":"shawntangy"},"content":"            writeTasksToFile(filename);","lastModifiedDate":"2023-02-12"},{"lineNumber":182,"author":{"gitId":"shawntangy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":183,"author":{"gitId":"shawntangy"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2023-02-12"},{"lineNumber":184,"author":{"gitId":"shawntangy"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":185,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":186,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":187,"author":{"gitId":"shawntangy"},"content":"    private static void load(String filename) {","lastModifiedDate":"2023-02-12"},{"lineNumber":188,"author":{"gitId":"shawntangy"},"content":"        File f \u003d new File(filename);","lastModifiedDate":"2023-02-12"},{"lineNumber":189,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":190,"author":{"gitId":"shawntangy"},"content":"        if (f.exists()) {","lastModifiedDate":"2023-02-12"},{"lineNumber":191,"author":{"gitId":"shawntangy"},"content":"            try {","lastModifiedDate":"2023-02-12"},{"lineNumber":192,"author":{"gitId":"shawntangy"},"content":"                loadFileContents(f);","lastModifiedDate":"2023-02-12"},{"lineNumber":193,"author":{"gitId":"shawntangy"},"content":"            } catch (FileNotFoundException e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":194,"author":{"gitId":"shawntangy"},"content":"                System.out.println(FILE_NOT_FOUND_MESSAGE);","lastModifiedDate":"2023-02-12"},{"lineNumber":195,"author":{"gitId":"shawntangy"},"content":"            }","lastModifiedDate":"2023-02-12"},{"lineNumber":196,"author":{"gitId":"shawntangy"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":197,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":198,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":199,"author":{"gitId":"shawntangy"},"content":"    private static void loadFileContents(File f) throws FileNotFoundException {","lastModifiedDate":"2023-02-12"},{"lineNumber":200,"author":{"gitId":"shawntangy"},"content":"        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source","lastModifiedDate":"2023-02-12"},{"lineNumber":201,"author":{"gitId":"shawntangy"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2023-02-12"},{"lineNumber":202,"author":{"gitId":"shawntangy"},"content":"            processFileContents(s.nextLine());","lastModifiedDate":"2023-02-12"},{"lineNumber":203,"author":{"gitId":"shawntangy"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":204,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":205,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":206,"author":{"gitId":"shawntangy"},"content":"    private static void processFileContents(String line) {","lastModifiedDate":"2023-02-12"},{"lineNumber":207,"author":{"gitId":"shawntangy"},"content":"        String[] words \u003d line.split(\"\\\\|\");","lastModifiedDate":"2023-02-12"},{"lineNumber":208,"author":{"gitId":"shawntangy"},"content":"        String type \u003d words[0];","lastModifiedDate":"2023-02-12"},{"lineNumber":209,"author":{"gitId":"shawntangy"},"content":"        boolean isDone \u003d false;","lastModifiedDate":"2023-02-12"},{"lineNumber":210,"author":{"gitId":"shawntangy"},"content":"        if (Integer.valueOf(words[1]) \u003d\u003d 1) {","lastModifiedDate":"2023-02-12"},{"lineNumber":211,"author":{"gitId":"shawntangy"},"content":"            isDone \u003d true;","lastModifiedDate":"2023-02-12"},{"lineNumber":212,"author":{"gitId":"shawntangy"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":213,"author":{"gitId":"shawntangy"},"content":"        switch (type) {","lastModifiedDate":"2023-02-12"},{"lineNumber":214,"author":{"gitId":"shawntangy"},"content":"        case \"T\":","lastModifiedDate":"2023-02-12"},{"lineNumber":215,"author":{"gitId":"shawntangy"},"content":"            loadTodo(words, isDone);","lastModifiedDate":"2023-02-12"},{"lineNumber":216,"author":{"gitId":"shawntangy"},"content":"            break;","lastModifiedDate":"2023-02-12"},{"lineNumber":217,"author":{"gitId":"shawntangy"},"content":"        case \"E\":","lastModifiedDate":"2023-02-12"},{"lineNumber":218,"author":{"gitId":"shawntangy"},"content":"            loadEvent(words, isDone);","lastModifiedDate":"2023-02-12"},{"lineNumber":219,"author":{"gitId":"shawntangy"},"content":"            break;","lastModifiedDate":"2023-02-12"},{"lineNumber":220,"author":{"gitId":"shawntangy"},"content":"        case \"D\":","lastModifiedDate":"2023-02-12"},{"lineNumber":221,"author":{"gitId":"shawntangy"},"content":"            loadDeadline(words, isDone);","lastModifiedDate":"2023-02-12"},{"lineNumber":222,"author":{"gitId":"shawntangy"},"content":"            break;","lastModifiedDate":"2023-02-12"},{"lineNumber":223,"author":{"gitId":"shawntangy"},"content":"        default:","lastModifiedDate":"2023-02-12"},{"lineNumber":224,"author":{"gitId":"shawntangy"},"content":"            // unknown char error","lastModifiedDate":"2023-02-12"},{"lineNumber":225,"author":{"gitId":"shawntangy"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":226,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":227,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":228,"author":{"gitId":"shawntangy"},"content":"    private static void loadDeadline(String[] words, boolean isDone) {","lastModifiedDate":"2023-02-12"},{"lineNumber":229,"author":{"gitId":"shawntangy"},"content":"        Deadline deadline \u003d new Deadline(words[2], words[3]);","lastModifiedDate":"2023-02-12"},{"lineNumber":230,"author":{"gitId":"shawntangy"},"content":"        if (isDone) {","lastModifiedDate":"2023-02-12"},{"lineNumber":231,"author":{"gitId":"shawntangy"},"content":"            deadline.markAsDone();","lastModifiedDate":"2023-02-12"},{"lineNumber":232,"author":{"gitId":"shawntangy"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":233,"author":{"gitId":"shawntangy"},"content":"        tasks.add(deadline);","lastModifiedDate":"2023-02-12"},{"lineNumber":234,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":235,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":236,"author":{"gitId":"shawntangy"},"content":"    private static void loadEvent(String[] words, boolean isDone) {","lastModifiedDate":"2023-02-12"},{"lineNumber":237,"author":{"gitId":"shawntangy"},"content":"        Event event \u003d new Event(words[2], words[3], words[4]);","lastModifiedDate":"2023-02-12"},{"lineNumber":238,"author":{"gitId":"shawntangy"},"content":"        if (isDone) {","lastModifiedDate":"2023-02-12"},{"lineNumber":239,"author":{"gitId":"shawntangy"},"content":"            event.markAsDone();","lastModifiedDate":"2023-02-12"},{"lineNumber":240,"author":{"gitId":"shawntangy"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":241,"author":{"gitId":"shawntangy"},"content":"        tasks.add(event);","lastModifiedDate":"2023-02-12"},{"lineNumber":242,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":243,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":244,"author":{"gitId":"shawntangy"},"content":"    private static void loadTodo(String[] words, boolean isDone) {","lastModifiedDate":"2023-02-12"},{"lineNumber":245,"author":{"gitId":"shawntangy"},"content":"        Todo todo \u003d new Todo(words[2]);","lastModifiedDate":"2023-02-12"},{"lineNumber":246,"author":{"gitId":"shawntangy"},"content":"        if (isDone) {","lastModifiedDate":"2023-02-12"},{"lineNumber":247,"author":{"gitId":"shawntangy"},"content":"            todo.markAsDone();","lastModifiedDate":"2023-02-12"},{"lineNumber":248,"author":{"gitId":"shawntangy"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":249,"author":{"gitId":"shawntangy"},"content":"        tasks.add(todo);","lastModifiedDate":"2023-02-12"},{"lineNumber":250,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":251,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":252,"author":{"gitId":"shawntangy"},"content":"    private static Deadline getDeadline(String[] words) {","lastModifiedDate":"2023-02-12"},{"lineNumber":253,"author":{"gitId":"shawntangy"},"content":"        String line;","lastModifiedDate":"2023-02-12"},{"lineNumber":254,"author":{"gitId":"shawntangy"},"content":"        line \u003d words[1]; // to remove the command","lastModifiedDate":"2023-02-12"},{"lineNumber":255,"author":{"gitId":"shawntangy"},"content":"        String[] deadlineDetails \u003d line.split(BY_DELIMITER);","lastModifiedDate":"2023-02-12"},{"lineNumber":256,"author":{"gitId":"shawntangy"},"content":"        Deadline d \u003d new Deadline(deadlineDetails[0], deadlineDetails[1]);","lastModifiedDate":"2023-02-12"},{"lineNumber":257,"author":{"gitId":"shawntangy"},"content":"        return d;","lastModifiedDate":"2023-02-12"},{"lineNumber":258,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":259,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":260,"author":{"gitId":"shawntangy"},"content":"    private static Event getEvent(String[] words) {","lastModifiedDate":"2023-02-12"},{"lineNumber":261,"author":{"gitId":"shawntangy"},"content":"        String line;","lastModifiedDate":"2023-02-12"},{"lineNumber":262,"author":{"gitId":"shawntangy"},"content":"        line \u003d words[1]; // to remove the command","lastModifiedDate":"2023-02-12"},{"lineNumber":263,"author":{"gitId":"shawntangy"},"content":"        String[] eventDetails \u003d line.split(FROM_DELIMITER);","lastModifiedDate":"2023-02-12"},{"lineNumber":264,"author":{"gitId":"shawntangy"},"content":"        String eventName \u003d eventDetails[0];","lastModifiedDate":"2023-02-12"},{"lineNumber":265,"author":{"gitId":"shawntangy"},"content":"        String from \u003d line.substring(line.indexOf(FROM_DELIMITER) + FROM_DELIMITER.length(), line.indexOf(TO_DELIMITER));","lastModifiedDate":"2023-02-12"},{"lineNumber":266,"author":{"gitId":"shawntangy"},"content":"        eventDetails \u003d line.split(TO_DELIMITER);","lastModifiedDate":"2023-02-12"},{"lineNumber":267,"author":{"gitId":"shawntangy"},"content":"        String to \u003d eventDetails[1];","lastModifiedDate":"2023-02-12"},{"lineNumber":268,"author":{"gitId":"shawntangy"},"content":"        Event e \u003d new Event(eventName, from, to);","lastModifiedDate":"2023-02-12"},{"lineNumber":269,"author":{"gitId":"shawntangy"},"content":"        return e;","lastModifiedDate":"2023-02-12"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":271,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"shawntangy":269,"-":3}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shawntangy"},"content":"package duke;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"shawntangy"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"shawntangy"},"content":"    public static final String EVENT_ICON \u003d \"[E]\";","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"shawntangy"},"content":"    protected String from;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"shawntangy"},"content":"    protected String to;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"shawntangy"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"shawntangy"},"content":"        super(description);","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"shawntangy"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"shawntangy"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"shawntangy"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"shawntangy"},"content":"    public String toString() {","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"shawntangy"},"content":"        return EVENT_ICON + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"shawntangy"},"content":"    @Override","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"shawntangy"},"content":"    public String saveFormat() {","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"shawntangy"},"content":"        return \"E|\" + super.saveFormat() + \"|\" + from + \"|\" + to;","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"shawntangy"},"content":"}","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"shawntangy":24}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shawntangy"},"content":"package duke;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"shawntangy"},"content":"public class Task {","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"shawntangy"},"content":"    public static final String DONE_ICON \u003d \"X\";","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"shawntangy"},"content":"    public static final String NOT_DONE_ICON \u003d \" \";","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"shawntangy"},"content":"    protected String description;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"shawntangy"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"shawntangy"},"content":"    private static int numberOfTasks \u003d 0;","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"shawntangy"},"content":"    public int getNumberOfTasks() {","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"shawntangy"},"content":"        return numberOfTasks;","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"shawntangy"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"shawntangy"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"shawntangy"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"shawntangy"},"content":"        numberOfTasks++;","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"shawntangy"},"content":"    public void remove() {","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"shawntangy"},"content":"        numberOfTasks--;","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"shawntangy"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"shawntangy"},"content":"        return (isDone ? DONE_ICON : NOT_DONE_ICON); // mark done task with X","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"shawntangy"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"shawntangy"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"shawntangy"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"shawntangy"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"shawntangy"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"shawntangy"},"content":"    public String toString() {","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"shawntangy"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + description;","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":43,"author":{"gitId":"shawntangy"},"content":"    public String saveFormat() {","lastModifiedDate":"2023-02-12"},{"lineNumber":44,"author":{"gitId":"shawntangy"},"content":"        String toSave \u003d \"0\";","lastModifiedDate":"2023-02-12"},{"lineNumber":45,"author":{"gitId":"shawntangy"},"content":"        if (isDone) {","lastModifiedDate":"2023-02-12"},{"lineNumber":46,"author":{"gitId":"shawntangy"},"content":"            toSave \u003d \"1\";","lastModifiedDate":"2023-02-12"},{"lineNumber":47,"author":{"gitId":"shawntangy"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":48,"author":{"gitId":"shawntangy"},"content":"        return toSave + \"|\" + description;","lastModifiedDate":"2023-02-12"},{"lineNumber":49,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":50,"author":{"gitId":"shawntangy"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"shawntangy":50}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shawntangy"},"content":"package duke;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"shawntangy"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"shawntangy"},"content":"    public static final String TODO_ICON \u003d \"[T]\";","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"shawntangy"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"shawntangy"},"content":"        super(description);","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"shawntangy"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"shawntangy"},"content":"    public String toString() {","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"shawntangy"},"content":"        return TODO_ICON + super.toString();","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"shawntangy"},"content":"    @Override","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"shawntangy"},"content":"    public String saveFormat() {","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"shawntangy"},"content":"        return \"T|\" + super.saveFormat();","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"shawntangy"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"shawntangy":20}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shawntangy"},"content":"package duke;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"shawntangy"},"content":"import java.sql.SQLOutput;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"shawntangy"},"content":"public class Ui {","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"shawntangy"},"content":"    public static final String LOGO \u003d \"   _____  .__   _____                   .___\\n\" +","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"shawntangy"},"content":"            \"  /  _  \\\\ |  |_/ ____\\\\______   ____   __| _/\\n\" +","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"shawntangy"},"content":"            \" /  /_\\\\  \\\\|  |\\\\   __\\\\\\\\_  __ \\\\_/ __ \\\\ / __ |\\n\" +","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"shawntangy"},"content":"            \"/    |    \\\\  |_|  |   |  | \\\\/\\\\  ___// /_/ |\\n\" +","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"shawntangy"},"content":"            \"\\\\____|__  /____/__|   |__|    \\\\___  \u003e____ |\\n\" +","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"shawntangy"},"content":"            \"        \\\\/                        \\\\/     \\\\/\\n\";","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"shawntangy"},"content":"    public static final String WELCOME_MESSAGE \u003d \"Hello from\\n\";","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"shawntangy"},"content":"    public static final String DIVIDER \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"shawntangy"},"content":"    public static final String GREETINGS \u003d \" Hello! I\u0027m Alfred Pennyworth.\\n What can I do for you?\\n\";","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"shawntangy"},"content":"    public static final String ENDING \u003d \" Bye. Hope to see you again soon!\\n\";","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"shawntangy"},"content":"    public static final String ADDED_TASK \u003d \"Got it. I\u0027ve added this task:\\n  \";","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"shawntangy"},"content":"    public static final String MARKED_THIS_TASK_AS_DONE \u003d \"Nice! I\u0027ve marked this task as done: \";","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"shawntangy"},"content":"    public static final String UNMARKED_THIS_TASK_AS_DONE \u003d \"Okay, I\u0027ve marked this task as not done yet: \";","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"shawntangy"},"content":"    public static final String DELETED_THIS_TASK \u003d \"Noted. I\u0027ve removed this task:\";","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"shawntangy"},"content":"    public void showWelcomeMessage(){","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"shawntangy"},"content":"        System.out.println(WELCOME_MESSAGE + LOGO);","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"shawntangy"},"content":"        System.out.println(DIVIDER + GREETINGS + DIVIDER);","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"shawntangy"},"content":"    public void showEndingMessage(){","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"shawntangy"},"content":"        System.out.println(ENDING + DIVIDER);","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"shawntangy"},"content":"    public void printAddTaskMessage(Task t) {","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"shawntangy"},"content":"        System.out.println(ADDED_TASK + t + \"\\nNow you have \" + t.getNumberOfTasks() + \" tasks in the list.\");","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"shawntangy"},"content":"    public void printMarkedMessage(Task task){","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"shawntangy"},"content":"        System.out.println(MARKED_THIS_TASK_AS_DONE + \"\\n\" + task);","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"shawntangy"},"content":"    public void printUnmarkedMessage(Task task){","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"shawntangy"},"content":"        System.out.println(UNMARKED_THIS_TASK_AS_DONE + \"\\n\" + task);","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"shawntangy"},"content":"    public void printDeleteTaskMessage(String taskDescription, int taskLeft){","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"shawntangy"},"content":"        System.out.println(DELETED_THIS_TASK + \"\\n\" + taskDescription + \"\\nNow you have \" + taskLeft + \" tasks in the list.\");","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"shawntangy"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"shawntangy":47}},{"path":"src/main/java/duke/exceptions/EmptyCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shawntangy"},"content":"package duke.exceptions;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"shawntangy"},"content":"public class EmptyCommandException extends Exception{","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"shawntangy"},"content":"}","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"shawntangy":4}},{"path":"src/main/java/duke/exceptions/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shawntangy"},"content":"package duke.exceptions;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"shawntangy"},"content":"public class UnknownCommandException extends Exception{","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"shawntangy"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"shawntangy":4}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"shawntangy"},"content":"todo borrow book","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"shawntangy"},"content":"list","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"shawntangy"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"shawntangy"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"shawntangy"},"content":"list","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"shawntangy"},"content":"mark 1","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"shawntangy"},"content":"unmark 1","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"shawntangy"},"content":"delete 1","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"shawntangy"},"content":"bye","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"shawntangy":9}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"shawntangy"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java ../src/main/java/duke/exceptions/*.java","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"shawntangy"},"content":"java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"shawntangy":2,"-":36}}]
