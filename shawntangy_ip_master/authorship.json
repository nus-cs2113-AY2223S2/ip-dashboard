[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"shawntangy"},"content":"# Duke (Alfred Version)","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"shawntangy"},"content":"It has been modified to be a little different","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"3. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"shawntangy"},"content":"      _____  .__   _____                   .___","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"shawntangy"},"content":"     /  _  \\ |  |_/ ____\\______   ____   __| _/","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"shawntangy"},"content":"    /  /_\\  \\|  |\\   __\\\\_  __ \\_/ __ \\ / __ |","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"shawntangy"},"content":"   /    |    \\  |_|  |   |  | \\/\\  ___// /_/ |","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"shawntangy"},"content":"   \\____|__  /____/__|   |__|    \\___  \u003e____ |","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"shawntangy"},"content":"           \\/                        \\/     \\/","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"shawntangy"},"content":"   ","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"shawntangy"},"content":"   ____________________________________________________________","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"shawntangy"},"content":"   Hello! I\u0027m Alfred Pennyworth.","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"shawntangy"},"content":"   What can I do for you?","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"shawntangy"},"content":"   ____________________________________________________________","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"shawntangy"},"content":"      ","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"shawntangy"},"content":"## User Guide","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"shawntangy"},"content":"[Read the user guide](https://shawntangy.github.io/ip)","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"shawntangy":17,"-":18}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"shawntangy"},"content":"# User Guide for Alfred","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"shawntangy"},"content":"Duke (Alfred Version) is a simple command line utility to help you keep","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"shawntangy"},"content":"track of important tasks so that you will not forget about it.","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"shawntangy"},"content":"### Save and keep track of various tasks","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"shawntangy"},"content":"Alfred will allow you to keep track of different types of","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"shawntangy"},"content":"tasks including Todo, Deadline and Event.","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"shawntangy"},"content":"### Find specific task","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":13,"author":{"gitId":"shawntangy"},"content":"With multiple tasks in your task list, Alfred will help you find a specific task.","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":15,"author":{"gitId":"shawntangy"},"content":"### Mark tasks as done","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"shawntangy"},"content":"Once a task is completed, Alfred can help you to mark it as done or unmark it.","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"shawntangy"},"content":"### Data is persistent","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"shawntangy"},"content":"All changes made to the task list is saved by Alfred and will be restored on the","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"shawntangy"},"content":"next visit.","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"shawntangy"},"content":"### `todo` - Create a Todo task","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"shawntangy"},"content":"Adds a new task of type Todo","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"shawntangy"},"content":"`Todo \u003ctask title\u003e`","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"shawntangy"},"content":"Expected outcome:","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"shawntangy"},"content":"Todo task to be added will be shown with the new updated number of tasks","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"shawntangy"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"shawntangy"},"content":"todo Visit Gotham","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"shawntangy"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"shawntangy"},"content":"  [T][ ] Visit Gotham","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"shawntangy"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"shawntangy"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"shawntangy"},"content":"### `deadline` - Create a Deadline task","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"shawntangy"},"content":"Adds a new task of type Deadline","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"shawntangy"},"content":"Example of usage:","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"shawntangy"},"content":"`Deadline \u003ctask title\u003e /by \u003cdate/time\u003e`","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"shawntangy"},"content":"Expected outcome:","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"shawntangy"},"content":"Deadline task to be added will be shown with the new updated number of tasks","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"shawntangy"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"shawntangy"},"content":"deadline Smoke /by today","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"shawntangy"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-03-01"},{"lineNumber":56,"author":{"gitId":"shawntangy"},"content":"  [D][ ] Smoke (by: today)","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"shawntangy"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2023-03-01"},{"lineNumber":58,"author":{"gitId":"shawntangy"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":59,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":60,"author":{"gitId":"shawntangy"},"content":"### `Event` - Create a Event task","lastModifiedDate":"2023-03-01"},{"lineNumber":61,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":62,"author":{"gitId":"shawntangy"},"content":"Adds a new task of type Event","lastModifiedDate":"2023-03-01"},{"lineNumber":63,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":64,"author":{"gitId":"shawntangy"},"content":"Example of usage:","lastModifiedDate":"2023-03-01"},{"lineNumber":65,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":66,"author":{"gitId":"shawntangy"},"content":"`Event \u003ctask title\u003e /by \u003cdate/time\u003e`","lastModifiedDate":"2023-03-01"},{"lineNumber":67,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":68,"author":{"gitId":"shawntangy"},"content":"Expected outcome:","lastModifiedDate":"2023-03-01"},{"lineNumber":69,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":70,"author":{"gitId":"shawntangy"},"content":"Event task to be added will be shown with the new updated number of tasks","lastModifiedDate":"2023-03-01"},{"lineNumber":71,"author":{"gitId":"shawntangy"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":72,"author":{"gitId":"shawntangy"},"content":"event Browse for new car /from monday /to tuesday 4pm","lastModifiedDate":"2023-03-01"},{"lineNumber":73,"author":{"gitId":"shawntangy"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-03-01"},{"lineNumber":74,"author":{"gitId":"shawntangy"},"content":"  [E][ ] Browse for new car (from: monday to: tuesday 4pm)","lastModifiedDate":"2023-03-01"},{"lineNumber":75,"author":{"gitId":"shawntangy"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2023-03-01"},{"lineNumber":76,"author":{"gitId":"shawntangy"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":77,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":78,"author":{"gitId":"shawntangy"},"content":"### `list` - View task list","lastModifiedDate":"2023-03-01"},{"lineNumber":79,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":80,"author":{"gitId":"shawntangy"},"content":"Shows all the tasks","lastModifiedDate":"2023-03-01"},{"lineNumber":81,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":82,"author":{"gitId":"shawntangy"},"content":"Example of usage:","lastModifiedDate":"2023-03-01"},{"lineNumber":83,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":84,"author":{"gitId":"shawntangy"},"content":"`list` ","lastModifiedDate":"2023-03-01"},{"lineNumber":85,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":86,"author":{"gitId":"shawntangy"},"content":"Expected outcome:","lastModifiedDate":"2023-03-01"},{"lineNumber":87,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":88,"author":{"gitId":"shawntangy"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":89,"author":{"gitId":"shawntangy"},"content":"list","lastModifiedDate":"2023-03-01"},{"lineNumber":90,"author":{"gitId":"shawntangy"},"content":"1. [T][ ] Visit Gotham","lastModifiedDate":"2023-03-01"},{"lineNumber":91,"author":{"gitId":"shawntangy"},"content":"2. [D][ ] Smoke (by: today)","lastModifiedDate":"2023-03-01"},{"lineNumber":92,"author":{"gitId":"shawntangy"},"content":"3. [E][ ] Browse for new car (from: monday to: tuesday 4pm)","lastModifiedDate":"2023-03-01"},{"lineNumber":93,"author":{"gitId":"shawntangy"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":94,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":95,"author":{"gitId":"shawntangy"},"content":"### `find` - Find specific task based on keyword","lastModifiedDate":"2023-03-01"},{"lineNumber":96,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":97,"author":{"gitId":"shawntangy"},"content":"Shows all the tasks related to the keyword","lastModifiedDate":"2023-03-01"},{"lineNumber":98,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":99,"author":{"gitId":"shawntangy"},"content":"Example of usage:","lastModifiedDate":"2023-03-01"},{"lineNumber":100,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":101,"author":{"gitId":"shawntangy"},"content":"`find \u003ckeyword\u003e`","lastModifiedDate":"2023-03-01"},{"lineNumber":102,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":103,"author":{"gitId":"shawntangy"},"content":"Expected outcome:","lastModifiedDate":"2023-03-01"},{"lineNumber":104,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":105,"author":{"gitId":"shawntangy"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":106,"author":{"gitId":"shawntangy"},"content":"find car","lastModifiedDate":"2023-03-01"},{"lineNumber":107,"author":{"gitId":"shawntangy"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2023-03-01"},{"lineNumber":108,"author":{"gitId":"shawntangy"},"content":"1. [E][ ] Browse for new car (from: monday to: tuesday 4pm)","lastModifiedDate":"2023-03-01"},{"lineNumber":109,"author":{"gitId":"shawntangy"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":110,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":111,"author":{"gitId":"shawntangy"},"content":"### `mark` - Mark a task as done","lastModifiedDate":"2023-03-01"},{"lineNumber":112,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":113,"author":{"gitId":"shawntangy"},"content":"Marks task as done","lastModifiedDate":"2023-03-01"},{"lineNumber":114,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":115,"author":{"gitId":"shawntangy"},"content":"Example of usage:","lastModifiedDate":"2023-03-01"},{"lineNumber":116,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":117,"author":{"gitId":"shawntangy"},"content":"`mark \u003cindex\u003e`","lastModifiedDate":"2023-03-01"},{"lineNumber":118,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":119,"author":{"gitId":"shawntangy"},"content":"Expected outcome:","lastModifiedDate":"2023-03-01"},{"lineNumber":120,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":121,"author":{"gitId":"shawntangy"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":122,"author":{"gitId":"shawntangy"},"content":"mark 3","lastModifiedDate":"2023-03-01"},{"lineNumber":123,"author":{"gitId":"shawntangy"},"content":"Nice! I\u0027ve marked this task as done: ","lastModifiedDate":"2023-03-01"},{"lineNumber":124,"author":{"gitId":"shawntangy"},"content":"[E][X] Browse for new car (from: monday to: tuesday 4pm)","lastModifiedDate":"2023-03-01"},{"lineNumber":125,"author":{"gitId":"shawntangy"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":126,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":127,"author":{"gitId":"shawntangy"},"content":"### `unmark` - Unmark a task as done","lastModifiedDate":"2023-03-01"},{"lineNumber":128,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":129,"author":{"gitId":"shawntangy"},"content":"Unmarks task as done","lastModifiedDate":"2023-03-01"},{"lineNumber":130,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":131,"author":{"gitId":"shawntangy"},"content":"Example of usage:","lastModifiedDate":"2023-03-01"},{"lineNumber":132,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":133,"author":{"gitId":"shawntangy"},"content":"`unmark \u003cindex\u003e`","lastModifiedDate":"2023-03-01"},{"lineNumber":134,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":135,"author":{"gitId":"shawntangy"},"content":"Expected outcome:","lastModifiedDate":"2023-03-01"},{"lineNumber":136,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":137,"author":{"gitId":"shawntangy"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":138,"author":{"gitId":"shawntangy"},"content":"unmark 3","lastModifiedDate":"2023-03-01"},{"lineNumber":139,"author":{"gitId":"shawntangy"},"content":"Okay, I\u0027ve marked this task as not done yet: ","lastModifiedDate":"2023-03-01"},{"lineNumber":140,"author":{"gitId":"shawntangy"},"content":"[E][ ] Browse for new car (from: monday to: tuesday 4pm)","lastModifiedDate":"2023-03-01"},{"lineNumber":141,"author":{"gitId":"shawntangy"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":142,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":143,"author":{"gitId":"shawntangy"},"content":"### `delete` - Delete a task ","lastModifiedDate":"2023-03-01"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":145,"author":{"gitId":"shawntangy"},"content":"Removes a task from the task list","lastModifiedDate":"2023-03-01"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":149,"author":{"gitId":"shawntangy"},"content":"`delete \u003cindex\u003e`","lastModifiedDate":"2023-03-01"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":153,"author":{"gitId":"shawntangy"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":154,"author":{"gitId":"shawntangy"},"content":"delete 3","lastModifiedDate":"2023-03-01"},{"lineNumber":155,"author":{"gitId":"shawntangy"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2023-03-01"},{"lineNumber":156,"author":{"gitId":"shawntangy"},"content":"[E][ ] Browse for new car (from: monday to: tuesday 4pm)","lastModifiedDate":"2023-03-01"},{"lineNumber":157,"author":{"gitId":"shawntangy"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2023-03-01"},{"lineNumber":158,"author":{"gitId":"shawntangy"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":159,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":160,"author":{"gitId":"shawntangy"},"content":"### `bye` - Exit from Alfred","lastModifiedDate":"2023-03-01"},{"lineNumber":161,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":162,"author":{"gitId":"shawntangy"},"content":"Say goodbye to your butler","lastModifiedDate":"2023-03-01"},{"lineNumber":163,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":164,"author":{"gitId":"shawntangy"},"content":"Example of usage:","lastModifiedDate":"2023-03-01"},{"lineNumber":165,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":166,"author":{"gitId":"shawntangy"},"content":"`bye`","lastModifiedDate":"2023-03-01"},{"lineNumber":167,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":168,"author":{"gitId":"shawntangy"},"content":"Expected outcome:","lastModifiedDate":"2023-03-01"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":170,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":171,"author":{"gitId":"shawntangy"},"content":"bye","lastModifiedDate":"2023-03-01"},{"lineNumber":172,"author":{"gitId":"shawntangy"},"content":" Bye. Hope to see you again soon!","lastModifiedDate":"2023-03-01"},{"lineNumber":173,"author":{"gitId":"shawntangy"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-01"},{"lineNumber":174,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"shawntangy":151,"-":23}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shawntangy"},"content":"package duke;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"shawntangy"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"shawntangy"},"content":"    public static final String DEADLINE_ICON \u003d \"[D]\";","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"shawntangy"},"content":"    protected String by;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"shawntangy"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"shawntangy"},"content":"        super(description);","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"shawntangy"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"shawntangy"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"shawntangy"},"content":"    public String toString() {","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"shawntangy"},"content":"        return DEADLINE_ICON + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"shawntangy"},"content":"    @Override","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"shawntangy"},"content":"    public String saveFormat() {","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"shawntangy"},"content":"        return \"D|\" + super.saveFormat() + \"|\" + by;","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"shawntangy"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"shawntangy":22}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shawntangy"},"content":"package duke;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"shawntangy"},"content":"import duke.exceptions.EmptyCommandException;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"shawntangy"},"content":"import duke.exceptions.UnknownCommandException;","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"shawntangy"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"shawntangy"},"content":"    public static final String EXIT_PROGRAM \u003d \"bye\";","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"shawntangy"},"content":"    public static final String UNKNOWN_COMAMND_MESSAGE \u003d \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"shawntangy"},"content":"    public static final String MARK_UNMARK_INDEX_IS_NOT_A_NUMBER_MESSAGE \u003d \"mark/unmark index is not a number\";","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"shawntangy"},"content":"    public static final String MARK_UNMARK_INDEX_DOES_NOT_EXIST_MESSAGE \u003d \"mark/unmark index does not exist\";","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"shawntangy"},"content":"    public static final String TODO_COMMAND \u003d \"todo\";","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"shawntangy"},"content":"    public static final String DEADLINE_COMMAND \u003d \"deadline\";","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"shawntangy"},"content":"    public static final String EVENT_COMMAND \u003d \"event\";","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"shawntangy"},"content":"    public static final String MARK_COMMAND \u003d \"mark\";","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"shawntangy"},"content":"    public static final String UNMARK_COMMAND \u003d \"unmark\";","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"shawntangy"},"content":"    public static final String LIST_COMMAND \u003d \"list\";","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"shawntangy"},"content":"    public static final String DELETE_COMMAND \u003d \"delete\";","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"shawntangy"},"content":"    public static final String FIND_COMMAND \u003d \"find\";","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"shawntangy"},"content":"    public static final String EMPTY_COMMAND_MESSAGE \u003d \"Command is empty!\";","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"shawntangy"},"content":"    public static final String OUTPUT_FILE \u003d \"outputfile.txt\";","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"shawntangy"},"content":"    public static final String IOEXCEPTION_ERROR_MESSAGE \u003d \"IOException Error\";","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"shawntangy"},"content":"    public static final String INDEX_DOES_NOT_EXIST_MESSAGE \u003d \"Index does not exist\";","lastModifiedDate":"2023-02-27"},{"lineNumber":26,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"shawntangy"},"content":"    private Ui ui;","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"shawntangy"},"content":"    private Parser parser;","lastModifiedDate":"2023-02-27"},{"lineNumber":29,"author":{"gitId":"shawntangy"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-02-27"},{"lineNumber":30,"author":{"gitId":"shawntangy"},"content":"    private Storage storage;","lastModifiedDate":"2023-02-27"},{"lineNumber":31,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"shawntangy"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":33,"author":{"gitId":"shawntangy"},"content":"     * Creates the Duke class by initializing the other classes","lastModifiedDate":"2023-02-27"},{"lineNumber":34,"author":{"gitId":"shawntangy"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":35,"author":{"gitId":"shawntangy"},"content":"    public Duke() {","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"shawntangy"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"shawntangy"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2023-02-27"},{"lineNumber":38,"author":{"gitId":"shawntangy"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2023-02-27"},{"lineNumber":39,"author":{"gitId":"shawntangy"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2023-02-27"},{"lineNumber":40,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"shawntangy"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"shawntangy"},"content":"     * Run Duke by displaying welcome message, loading any previous tasks, starts to read input and finally","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"shawntangy"},"content":"     * prints ending message","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"shawntangy"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"shawntangy"},"content":"    private void run() {","lastModifiedDate":"2023-02-27"},{"lineNumber":47,"author":{"gitId":"shawntangy"},"content":"        ui.showWelcomeMessage();","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"shawntangy"},"content":"        taskList \u003d storage.load(OUTPUT_FILE);","lastModifiedDate":"2023-02-27"},{"lineNumber":49,"author":{"gitId":"shawntangy"},"content":"        starting();","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"shawntangy"},"content":"        ui.showEndingMessage();","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"shawntangy"},"content":"        System.exit(0);","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":53,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":54,"author":{"gitId":"shawntangy"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-26"},{"lineNumber":55,"author":{"gitId":"shawntangy"},"content":"        new Duke().run();","lastModifiedDate":"2023-02-26"},{"lineNumber":56,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":57,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":58,"author":{"gitId":"shawntangy"},"content":"    private void starting() {","lastModifiedDate":"2023-02-26"},{"lineNumber":59,"author":{"gitId":"shawntangy"},"content":"        String line \u003d parser.getInput();","lastModifiedDate":"2023-02-27"},{"lineNumber":60,"author":{"gitId":"shawntangy"},"content":"        while (!line.equals(EXIT_PROGRAM)) {","lastModifiedDate":"2023-02-05"},{"lineNumber":61,"author":{"gitId":"shawntangy"},"content":"            try {","lastModifiedDate":"2023-02-05"},{"lineNumber":62,"author":{"gitId":"shawntangy"},"content":"                processInput(line);","lastModifiedDate":"2023-02-26"},{"lineNumber":63,"author":{"gitId":"shawntangy"},"content":"            } catch (UnknownCommandException e) {","lastModifiedDate":"2023-02-05"},{"lineNumber":64,"author":{"gitId":"shawntangy"},"content":"                System.out.println(UNKNOWN_COMAMND_MESSAGE);","lastModifiedDate":"2023-02-05"},{"lineNumber":65,"author":{"gitId":"shawntangy"},"content":"            } catch (EmptyCommandException e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":66,"author":{"gitId":"shawntangy"},"content":"                System.out.println(EMPTY_COMMAND_MESSAGE);","lastModifiedDate":"2023-02-12"},{"lineNumber":67,"author":{"gitId":"shawntangy"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-06"},{"lineNumber":68,"author":{"gitId":"shawntangy"},"content":"                System.out.println(MARK_UNMARK_INDEX_IS_NOT_A_NUMBER_MESSAGE);","lastModifiedDate":"2023-02-06"},{"lineNumber":69,"author":{"gitId":"shawntangy"},"content":"            } catch (NullPointerException e) {","lastModifiedDate":"2023-02-06"},{"lineNumber":70,"author":{"gitId":"shawntangy"},"content":"                System.out.println(MARK_UNMARK_INDEX_DOES_NOT_EXIST_MESSAGE);","lastModifiedDate":"2023-02-06"},{"lineNumber":71,"author":{"gitId":"shawntangy"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-27"},{"lineNumber":72,"author":{"gitId":"shawntangy"},"content":"                System.out.println(INDEX_DOES_NOT_EXIST_MESSAGE);","lastModifiedDate":"2023-02-27"},{"lineNumber":73,"author":{"gitId":"shawntangy"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":74,"author":{"gitId":"shawntangy"},"content":"                System.out.println(IOEXCEPTION_ERROR_MESSAGE);","lastModifiedDate":"2023-02-12"},{"lineNumber":75,"author":{"gitId":"shawntangy"},"content":"            }","lastModifiedDate":"2023-02-05"},{"lineNumber":76,"author":{"gitId":"shawntangy"},"content":"            line \u003d parser.getInput();","lastModifiedDate":"2023-02-27"},{"lineNumber":77,"author":{"gitId":"shawntangy"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":78,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":79,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":80,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":81,"author":{"gitId":"shawntangy"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":82,"author":{"gitId":"shawntangy"},"content":"     * Process the input of the user and execute the relevant command","lastModifiedDate":"2023-03-01"},{"lineNumber":83,"author":{"gitId":"shawntangy"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":84,"author":{"gitId":"shawntangy"},"content":"     * @param line Original string that user typed in","lastModifiedDate":"2023-03-01"},{"lineNumber":85,"author":{"gitId":"shawntangy"},"content":"     * @throws UnknownCommandException when the command is not in the list","lastModifiedDate":"2023-03-01"},{"lineNumber":86,"author":{"gitId":"shawntangy"},"content":"     * @throws IOException             when there is input/output error","lastModifiedDate":"2023-03-01"},{"lineNumber":87,"author":{"gitId":"shawntangy"},"content":"     * @throws EmptyCommandException   when a command is empty (e.g. mark without index)","lastModifiedDate":"2023-03-01"},{"lineNumber":88,"author":{"gitId":"shawntangy"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":89,"author":{"gitId":"shawntangy"},"content":"    private void processInput(String line) throws UnknownCommandException, IOException, EmptyCommandException {","lastModifiedDate":"2023-02-27"},{"lineNumber":90,"author":{"gitId":"shawntangy"},"content":"        String[] words \u003d parser.splitCommandsIntoWords(line);","lastModifiedDate":"2023-02-27"},{"lineNumber":91,"author":{"gitId":"shawntangy"},"content":"        String command \u003d words[0]; // words[0] is the command, words[n] is the next few words","lastModifiedDate":"2023-02-27"},{"lineNumber":92,"author":{"gitId":"shawntangy"},"content":"        switch (command) {","lastModifiedDate":"2023-01-23"},{"lineNumber":93,"author":{"gitId":"shawntangy"},"content":"        case TODO_COMMAND:","lastModifiedDate":"2023-02-12"},{"lineNumber":94,"author":{"gitId":"shawntangy"},"content":"            Todo td \u003d taskList.createTodo(words);","lastModifiedDate":"2023-02-27"},{"lineNumber":95,"author":{"gitId":"shawntangy"},"content":"            ui.printAddTaskMessage(td);","lastModifiedDate":"2023-02-26"},{"lineNumber":96,"author":{"gitId":"shawntangy"},"content":"            storage.save(taskList, OUTPUT_FILE);","lastModifiedDate":"2023-02-27"},{"lineNumber":97,"author":{"gitId":"shawntangy"},"content":"            break;","lastModifiedDate":"2023-01-30"},{"lineNumber":98,"author":{"gitId":"shawntangy"},"content":"        case DEADLINE_COMMAND:","lastModifiedDate":"2023-02-12"},{"lineNumber":99,"author":{"gitId":"shawntangy"},"content":"            Deadline d \u003d taskList.createDeadline(words);","lastModifiedDate":"2023-02-27"},{"lineNumber":100,"author":{"gitId":"shawntangy"},"content":"            ui.printAddTaskMessage(d);","lastModifiedDate":"2023-02-26"},{"lineNumber":101,"author":{"gitId":"shawntangy"},"content":"            storage.save(taskList, OUTPUT_FILE);","lastModifiedDate":"2023-02-27"},{"lineNumber":102,"author":{"gitId":"shawntangy"},"content":"            break;","lastModifiedDate":"2023-01-30"},{"lineNumber":103,"author":{"gitId":"shawntangy"},"content":"        case EVENT_COMMAND:","lastModifiedDate":"2023-02-12"},{"lineNumber":104,"author":{"gitId":"shawntangy"},"content":"            Event e \u003d taskList.createEvent(words);","lastModifiedDate":"2023-02-27"},{"lineNumber":105,"author":{"gitId":"shawntangy"},"content":"            ui.printAddTaskMessage(e);","lastModifiedDate":"2023-02-26"},{"lineNumber":106,"author":{"gitId":"shawntangy"},"content":"            storage.save(taskList, OUTPUT_FILE);","lastModifiedDate":"2023-02-27"},{"lineNumber":107,"author":{"gitId":"shawntangy"},"content":"            break;","lastModifiedDate":"2023-01-30"},{"lineNumber":108,"author":{"gitId":"shawntangy"},"content":"        case DELETE_COMMAND:","lastModifiedDate":"2023-02-12"},{"lineNumber":109,"author":{"gitId":"shawntangy"},"content":"            deleteTask(words);","lastModifiedDate":"2023-02-12"},{"lineNumber":110,"author":{"gitId":"shawntangy"},"content":"            storage.save(taskList, OUTPUT_FILE);","lastModifiedDate":"2023-02-27"},{"lineNumber":111,"author":{"gitId":"shawntangy"},"content":"            break;","lastModifiedDate":"2023-02-12"},{"lineNumber":112,"author":{"gitId":"shawntangy"},"content":"        case MARK_COMMAND:","lastModifiedDate":"2023-02-12"},{"lineNumber":113,"author":{"gitId":"shawntangy"},"content":"            int markIndex \u003d Integer.parseInt(words[1]) - 1; // 0 indexing","lastModifiedDate":"2023-01-31"},{"lineNumber":114,"author":{"gitId":"shawntangy"},"content":"            taskList.markIndexAsDone(markIndex);","lastModifiedDate":"2023-02-27"},{"lineNumber":115,"author":{"gitId":"shawntangy"},"content":"            ui.printMarkedMessage(taskList.getTask(markIndex));","lastModifiedDate":"2023-02-27"},{"lineNumber":116,"author":{"gitId":"shawntangy"},"content":"            storage.save(taskList, OUTPUT_FILE);","lastModifiedDate":"2023-02-27"},{"lineNumber":117,"author":{"gitId":"shawntangy"},"content":"            break;","lastModifiedDate":"2023-01-23"},{"lineNumber":118,"author":{"gitId":"shawntangy"},"content":"        case UNMARK_COMMAND:","lastModifiedDate":"2023-02-12"},{"lineNumber":119,"author":{"gitId":"shawntangy"},"content":"            int unmarkIndex \u003d Integer.parseInt(words[1]) - 1; // 0 indexing","lastModifiedDate":"2023-01-31"},{"lineNumber":120,"author":{"gitId":"shawntangy"},"content":"            taskList.unmarkIndexAsDone(unmarkIndex);","lastModifiedDate":"2023-02-27"},{"lineNumber":121,"author":{"gitId":"shawntangy"},"content":"            ui.printUnmarkedMessage(taskList.getTask(unmarkIndex));","lastModifiedDate":"2023-02-27"},{"lineNumber":122,"author":{"gitId":"shawntangy"},"content":"            storage.save(taskList, OUTPUT_FILE);","lastModifiedDate":"2023-02-27"},{"lineNumber":123,"author":{"gitId":"shawntangy"},"content":"            break;","lastModifiedDate":"2023-01-23"},{"lineNumber":124,"author":{"gitId":"shawntangy"},"content":"        case LIST_COMMAND:","lastModifiedDate":"2023-02-12"},{"lineNumber":125,"author":{"gitId":"shawntangy"},"content":"            taskList.printList();","lastModifiedDate":"2023-02-27"},{"lineNumber":126,"author":{"gitId":"shawntangy"},"content":"            break;","lastModifiedDate":"2023-02-12"},{"lineNumber":127,"author":{"gitId":"shawntangy"},"content":"        case FIND_COMMAND:","lastModifiedDate":"2023-02-27"},{"lineNumber":128,"author":{"gitId":"shawntangy"},"content":"            taskList.printMatchedList(words);","lastModifiedDate":"2023-02-27"},{"lineNumber":129,"author":{"gitId":"shawntangy"},"content":"            break;","lastModifiedDate":"2023-02-27"},{"lineNumber":130,"author":{"gitId":"shawntangy"},"content":"        default:","lastModifiedDate":"2023-02-12"},{"lineNumber":131,"author":{"gitId":"shawntangy"},"content":"            throw new UnknownCommandException();","lastModifiedDate":"2023-02-12"},{"lineNumber":132,"author":{"gitId":"shawntangy"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":133,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":134,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":135,"author":{"gitId":"shawntangy"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":136,"author":{"gitId":"shawntangy"},"content":"     * Deletes a task from the TaskList and prints out the task that was deleted","lastModifiedDate":"2023-02-27"},{"lineNumber":137,"author":{"gitId":"shawntangy"},"content":"     *","lastModifiedDate":"2023-02-27"},{"lineNumber":138,"author":{"gitId":"shawntangy"},"content":"     * @param words original string that the user typed in","lastModifiedDate":"2023-02-27"},{"lineNumber":139,"author":{"gitId":"shawntangy"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":140,"author":{"gitId":"shawntangy"},"content":"    private void deleteTask(String[] words) {","lastModifiedDate":"2023-02-26"},{"lineNumber":141,"author":{"gitId":"shawntangy"},"content":"        int deleteIndex \u003d Integer.parseInt(words[1]) - 1; // 0 indexing","lastModifiedDate":"2023-02-12"},{"lineNumber":142,"author":{"gitId":"shawntangy"},"content":"        String taskDescription \u003d String.valueOf(taskList.getTask(deleteIndex));","lastModifiedDate":"2023-02-27"},{"lineNumber":143,"author":{"gitId":"shawntangy"},"content":"        int taskLeft \u003d taskList.getTask(0).getNumberOfTasks() - 1;","lastModifiedDate":"2023-02-27"},{"lineNumber":144,"author":{"gitId":"shawntangy"},"content":"        taskList.deleteTask(deleteIndex);","lastModifiedDate":"2023-02-27"},{"lineNumber":145,"author":{"gitId":"shawntangy"},"content":"        ui.printDeleteTaskMessage(taskDescription, taskLeft);","lastModifiedDate":"2023-02-26"},{"lineNumber":146,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":147,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"shawntangy":146,"-":2}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shawntangy"},"content":"package duke;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"shawntangy"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"shawntangy"},"content":"    public static final String EVENT_ICON \u003d \"[E]\";","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"shawntangy"},"content":"    protected String from;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"shawntangy"},"content":"    protected String to;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"shawntangy"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"shawntangy"},"content":"        super(description);","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"shawntangy"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"shawntangy"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"shawntangy"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"shawntangy"},"content":"    public String toString() {","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"shawntangy"},"content":"        return EVENT_ICON + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"shawntangy"},"content":"    @Override","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"shawntangy"},"content":"    public String saveFormat() {","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"shawntangy"},"content":"        return \"E|\" + super.saveFormat() + \"|\" + from + \"|\" + to;","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"shawntangy"},"content":"}","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"shawntangy":24}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shawntangy"},"content":"package duke;","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"shawntangy"},"content":"import duke.exceptions.EmptyCommandException;","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"shawntangy"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"shawntangy"},"content":"public class Parser {","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"shawntangy"},"content":"    protected Scanner input;","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"shawntangy"},"content":"    private static final String LIST_COMMAND \u003d \"list\";","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"shawntangy"},"content":"    public Parser() {","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"shawntangy"},"content":"        input \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"shawntangy"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"shawntangy"},"content":"     * Retrieves the next line of user input","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"shawntangy"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"shawntangy"},"content":"     * @return Input from user","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"shawntangy"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"shawntangy"},"content":"    public String getInput() {","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"shawntangy"},"content":"        String line \u003d input.nextLine();","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"shawntangy"},"content":"        return line;","lastModifiedDate":"2023-02-27"},{"lineNumber":24,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":25,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":26,"author":{"gitId":"shawntangy"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"shawntangy"},"content":"     * @param line original line that the user input","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"shawntangy"},"content":"     * @return String array of each word that is separated by the space char","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"shawntangy"},"content":"     * @throws EmptyCommandException When the command is empty (e.g. mark without index)","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"shawntangy"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"shawntangy"},"content":"    public String[] splitCommandsIntoWords(String line) throws EmptyCommandException {","lastModifiedDate":"2023-02-27"},{"lineNumber":32,"author":{"gitId":"shawntangy"},"content":"        String[] words \u003d line.split(\" \", 2);","lastModifiedDate":"2023-02-27"},{"lineNumber":33,"author":{"gitId":"shawntangy"},"content":"        checkIfCommandEmpty(words);","lastModifiedDate":"2023-02-27"},{"lineNumber":34,"author":{"gitId":"shawntangy"},"content":"        return words;","lastModifiedDate":"2023-02-27"},{"lineNumber":35,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":36,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":37,"author":{"gitId":"shawntangy"},"content":"    private void checkIfCommandEmpty(String[] words) throws EmptyCommandException {","lastModifiedDate":"2023-02-27"},{"lineNumber":38,"author":{"gitId":"shawntangy"},"content":"        if (words[0].equals(LIST_COMMAND)) {","lastModifiedDate":"2023-02-27"},{"lineNumber":39,"author":{"gitId":"shawntangy"},"content":"            return;","lastModifiedDate":"2023-02-27"},{"lineNumber":40,"author":{"gitId":"shawntangy"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":41,"author":{"gitId":"shawntangy"},"content":"        if (words.length \u003c 2 || words[1].equals(\"\")) {","lastModifiedDate":"2023-02-27"},{"lineNumber":42,"author":{"gitId":"shawntangy"},"content":"            throw new EmptyCommandException();","lastModifiedDate":"2023-02-27"},{"lineNumber":43,"author":{"gitId":"shawntangy"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":44,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":45,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":46,"author":{"gitId":"shawntangy"},"content":"}","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"shawntangy":46}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shawntangy"},"content":"package duke;","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"shawntangy"},"content":"import java.io.File;","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"shawntangy"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"shawntangy"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"shawntangy"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"shawntangy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"shawntangy"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"shawntangy"},"content":"public class Storage {","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"shawntangy"},"content":"    private static TaskList initialTaskList;","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"shawntangy"},"content":"    private static final String FILE_NOT_FOUND_MESSAGE \u003d \"File Not Found\";","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"shawntangy"},"content":"    public Storage() {","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"shawntangy"},"content":"        initialTaskList \u003d new TaskList();","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"shawntangy"},"content":"    private void writeTasksToFile(TaskList taskList, String filePath) throws IOException {","lastModifiedDate":"2023-02-27"},{"lineNumber":19,"author":{"gitId":"shawntangy"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"shawntangy"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskList.getTaskList();","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"shawntangy"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"shawntangy"},"content":"            if (t !\u003d null) {","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"shawntangy"},"content":"                fw.write(t.saveFormat() + System.lineSeparator());","lastModifiedDate":"2023-02-27"},{"lineNumber":24,"author":{"gitId":"shawntangy"},"content":"            }","lastModifiedDate":"2023-02-27"},{"lineNumber":25,"author":{"gitId":"shawntangy"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":26,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"shawntangy"},"content":"        fw.close();","lastModifiedDate":"2023-02-27"},{"lineNumber":28,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":29,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":30,"author":{"gitId":"shawntangy"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":31,"author":{"gitId":"shawntangy"},"content":"     * Save the current List to a file","lastModifiedDate":"2023-02-27"},{"lineNumber":32,"author":{"gitId":"shawntangy"},"content":"     *","lastModifiedDate":"2023-02-27"},{"lineNumber":33,"author":{"gitId":"shawntangy"},"content":"     * @param taskList the list of Tasks to save","lastModifiedDate":"2023-02-27"},{"lineNumber":34,"author":{"gitId":"shawntangy"},"content":"     * @param filename the filename to save to","lastModifiedDate":"2023-02-27"},{"lineNumber":35,"author":{"gitId":"shawntangy"},"content":"     * @throws IOException if there is any IO error","lastModifiedDate":"2023-02-27"},{"lineNumber":36,"author":{"gitId":"shawntangy"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":37,"author":{"gitId":"shawntangy"},"content":"    public void save(TaskList taskList, String filename) throws IOException {","lastModifiedDate":"2023-02-27"},{"lineNumber":38,"author":{"gitId":"shawntangy"},"content":"        try {","lastModifiedDate":"2023-02-27"},{"lineNumber":39,"author":{"gitId":"shawntangy"},"content":"            writeTasksToFile(taskList, filename);","lastModifiedDate":"2023-02-27"},{"lineNumber":40,"author":{"gitId":"shawntangy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-27"},{"lineNumber":41,"author":{"gitId":"shawntangy"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2023-02-27"},{"lineNumber":42,"author":{"gitId":"shawntangy"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":43,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":44,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":45,"author":{"gitId":"shawntangy"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":46,"author":{"gitId":"shawntangy"},"content":"     * Loads any prior list of Tasks from a file","lastModifiedDate":"2023-02-27"},{"lineNumber":47,"author":{"gitId":"shawntangy"},"content":"     *","lastModifiedDate":"2023-02-27"},{"lineNumber":48,"author":{"gitId":"shawntangy"},"content":"     * @param filename the filename to load","lastModifiedDate":"2023-02-27"},{"lineNumber":49,"author":{"gitId":"shawntangy"},"content":"     * @return loaded list of Tasks from the file","lastModifiedDate":"2023-02-27"},{"lineNumber":50,"author":{"gitId":"shawntangy"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":51,"author":{"gitId":"shawntangy"},"content":"    public TaskList load(String filename) {","lastModifiedDate":"2023-02-27"},{"lineNumber":52,"author":{"gitId":"shawntangy"},"content":"        File f \u003d new File(filename);","lastModifiedDate":"2023-02-27"},{"lineNumber":53,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":54,"author":{"gitId":"shawntangy"},"content":"        if (f.exists()) {","lastModifiedDate":"2023-02-27"},{"lineNumber":55,"author":{"gitId":"shawntangy"},"content":"            try {","lastModifiedDate":"2023-02-27"},{"lineNumber":56,"author":{"gitId":"shawntangy"},"content":"                loadFileContents(f);","lastModifiedDate":"2023-02-27"},{"lineNumber":57,"author":{"gitId":"shawntangy"},"content":"            } catch (FileNotFoundException e) {","lastModifiedDate":"2023-02-27"},{"lineNumber":58,"author":{"gitId":"shawntangy"},"content":"                System.out.println(FILE_NOT_FOUND_MESSAGE);","lastModifiedDate":"2023-02-27"},{"lineNumber":59,"author":{"gitId":"shawntangy"},"content":"            }","lastModifiedDate":"2023-02-27"},{"lineNumber":60,"author":{"gitId":"shawntangy"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":61,"author":{"gitId":"shawntangy"},"content":"        return initialTaskList;","lastModifiedDate":"2023-02-27"},{"lineNumber":62,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":63,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":64,"author":{"gitId":"shawntangy"},"content":"    private static void loadFileContents(File f) throws FileNotFoundException {","lastModifiedDate":"2023-02-27"},{"lineNumber":65,"author":{"gitId":"shawntangy"},"content":"        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source","lastModifiedDate":"2023-02-27"},{"lineNumber":66,"author":{"gitId":"shawntangy"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2023-02-27"},{"lineNumber":67,"author":{"gitId":"shawntangy"},"content":"            processFileContents(s.nextLine());","lastModifiedDate":"2023-02-27"},{"lineNumber":68,"author":{"gitId":"shawntangy"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":69,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":70,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":71,"author":{"gitId":"shawntangy"},"content":"    private static void processFileContents(String line) {","lastModifiedDate":"2023-02-27"},{"lineNumber":72,"author":{"gitId":"shawntangy"},"content":"        String[] words \u003d line.split(\"\\\\|\");","lastModifiedDate":"2023-02-27"},{"lineNumber":73,"author":{"gitId":"shawntangy"},"content":"        String type \u003d words[0];","lastModifiedDate":"2023-02-27"},{"lineNumber":74,"author":{"gitId":"shawntangy"},"content":"        boolean isDone \u003d false;","lastModifiedDate":"2023-02-27"},{"lineNumber":75,"author":{"gitId":"shawntangy"},"content":"        if (Integer.valueOf(words[1]) \u003d\u003d 1) {","lastModifiedDate":"2023-02-27"},{"lineNumber":76,"author":{"gitId":"shawntangy"},"content":"            isDone \u003d true;","lastModifiedDate":"2023-02-27"},{"lineNumber":77,"author":{"gitId":"shawntangy"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":78,"author":{"gitId":"shawntangy"},"content":"        switch (type) {","lastModifiedDate":"2023-02-27"},{"lineNumber":79,"author":{"gitId":"shawntangy"},"content":"        case \"T\":","lastModifiedDate":"2023-02-27"},{"lineNumber":80,"author":{"gitId":"shawntangy"},"content":"            loadTodo(words, isDone);","lastModifiedDate":"2023-02-27"},{"lineNumber":81,"author":{"gitId":"shawntangy"},"content":"            break;","lastModifiedDate":"2023-02-27"},{"lineNumber":82,"author":{"gitId":"shawntangy"},"content":"        case \"E\":","lastModifiedDate":"2023-02-27"},{"lineNumber":83,"author":{"gitId":"shawntangy"},"content":"            loadEvent(words, isDone);","lastModifiedDate":"2023-02-27"},{"lineNumber":84,"author":{"gitId":"shawntangy"},"content":"            break;","lastModifiedDate":"2023-02-27"},{"lineNumber":85,"author":{"gitId":"shawntangy"},"content":"        case \"D\":","lastModifiedDate":"2023-02-27"},{"lineNumber":86,"author":{"gitId":"shawntangy"},"content":"            loadDeadline(words, isDone);","lastModifiedDate":"2023-02-27"},{"lineNumber":87,"author":{"gitId":"shawntangy"},"content":"            break;","lastModifiedDate":"2023-02-27"},{"lineNumber":88,"author":{"gitId":"shawntangy"},"content":"        default:","lastModifiedDate":"2023-02-27"},{"lineNumber":89,"author":{"gitId":"shawntangy"},"content":"            // unknown char error","lastModifiedDate":"2023-02-27"},{"lineNumber":90,"author":{"gitId":"shawntangy"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":91,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":92,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":93,"author":{"gitId":"shawntangy"},"content":"    private static void loadDeadline(String[] words, boolean isDone) {","lastModifiedDate":"2023-02-27"},{"lineNumber":94,"author":{"gitId":"shawntangy"},"content":"        Deadline deadline \u003d new Deadline(words[2], words[3]);","lastModifiedDate":"2023-02-27"},{"lineNumber":95,"author":{"gitId":"shawntangy"},"content":"        if (isDone) {","lastModifiedDate":"2023-02-27"},{"lineNumber":96,"author":{"gitId":"shawntangy"},"content":"            deadline.markAsDone();","lastModifiedDate":"2023-02-27"},{"lineNumber":97,"author":{"gitId":"shawntangy"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":98,"author":{"gitId":"shawntangy"},"content":"        initialTaskList.addDeadline(deadline);","lastModifiedDate":"2023-02-27"},{"lineNumber":99,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":100,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":101,"author":{"gitId":"shawntangy"},"content":"    private static void loadEvent(String[] words, boolean isDone) {","lastModifiedDate":"2023-02-27"},{"lineNumber":102,"author":{"gitId":"shawntangy"},"content":"        Event event \u003d new Event(words[2], words[3], words[4]);","lastModifiedDate":"2023-02-27"},{"lineNumber":103,"author":{"gitId":"shawntangy"},"content":"        if (isDone) {","lastModifiedDate":"2023-02-27"},{"lineNumber":104,"author":{"gitId":"shawntangy"},"content":"            event.markAsDone();","lastModifiedDate":"2023-02-27"},{"lineNumber":105,"author":{"gitId":"shawntangy"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":106,"author":{"gitId":"shawntangy"},"content":"        initialTaskList.addEvent(event);","lastModifiedDate":"2023-02-27"},{"lineNumber":107,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":108,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":109,"author":{"gitId":"shawntangy"},"content":"    private static void loadTodo(String[] words, boolean isDone) {","lastModifiedDate":"2023-02-27"},{"lineNumber":110,"author":{"gitId":"shawntangy"},"content":"        Todo todo \u003d new Todo(words[2]);","lastModifiedDate":"2023-02-27"},{"lineNumber":111,"author":{"gitId":"shawntangy"},"content":"        if (isDone) {","lastModifiedDate":"2023-02-27"},{"lineNumber":112,"author":{"gitId":"shawntangy"},"content":"            todo.markAsDone();","lastModifiedDate":"2023-02-27"},{"lineNumber":113,"author":{"gitId":"shawntangy"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":114,"author":{"gitId":"shawntangy"},"content":"        initialTaskList.addTodo(todo);","lastModifiedDate":"2023-02-27"},{"lineNumber":115,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":116,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":117,"author":{"gitId":"shawntangy"},"content":"}","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"shawntangy":117}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shawntangy"},"content":"package duke;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"shawntangy"},"content":"public class Task {","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"shawntangy"},"content":"    public static final String DONE_ICON \u003d \"X\";","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"shawntangy"},"content":"    public static final String NOT_DONE_ICON \u003d \" \";","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"shawntangy"},"content":"    protected String description;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"shawntangy"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"shawntangy"},"content":"    private static int numberOfTasks \u003d 0;","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"shawntangy"},"content":"    public int getNumberOfTasks() {","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"shawntangy"},"content":"        return numberOfTasks;","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"shawntangy"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"shawntangy"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"shawntangy"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"shawntangy"},"content":"        numberOfTasks++;","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"shawntangy"},"content":"    public void remove() {","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"shawntangy"},"content":"        numberOfTasks--;","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"shawntangy"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"shawntangy"},"content":"        return (isDone ? DONE_ICON : NOT_DONE_ICON); // mark done task with X","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"shawntangy"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"shawntangy"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"shawntangy"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"shawntangy"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"shawntangy"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"shawntangy"},"content":"    public String toString() {","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"shawntangy"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + description;","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":43,"author":{"gitId":"shawntangy"},"content":"    public String saveFormat() {","lastModifiedDate":"2023-02-12"},{"lineNumber":44,"author":{"gitId":"shawntangy"},"content":"        String toSave \u003d \"0\";","lastModifiedDate":"2023-02-12"},{"lineNumber":45,"author":{"gitId":"shawntangy"},"content":"        if (isDone) {","lastModifiedDate":"2023-02-12"},{"lineNumber":46,"author":{"gitId":"shawntangy"},"content":"            toSave \u003d \"1\";","lastModifiedDate":"2023-02-12"},{"lineNumber":47,"author":{"gitId":"shawntangy"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":48,"author":{"gitId":"shawntangy"},"content":"        return toSave + \"|\" + description;","lastModifiedDate":"2023-02-12"},{"lineNumber":49,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":50,"author":{"gitId":"shawntangy"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"shawntangy":50}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shawntangy"},"content":"package duke;","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"shawntangy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"shawntangy"},"content":"public class TaskList {","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"shawntangy"},"content":"    private static final String MATCHING_TASK_MESSAGE \u003d \"Here are the matching tasks in your list:\";","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"shawntangy"},"content":"    protected static ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"shawntangy"},"content":"    private static final String BY_DELIMITER \u003d \" /by \";","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"shawntangy"},"content":"    private static final String FROM_DELIMITER \u003d \" /from \";","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"shawntangy"},"content":"    private static final String TO_DELIMITER \u003d \" /to \";","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"shawntangy"},"content":"    public TaskList() {","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"shawntangy"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"shawntangy"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"shawntangy"},"content":"     * Adds the new Todo task to the task list","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"shawntangy"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"shawntangy"},"content":"     * @param td The Todo task to add","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"shawntangy"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"shawntangy"},"content":"    public void addTodo(Todo td) {","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"shawntangy"},"content":"        tasks.add(td);","lastModifiedDate":"2023-02-27"},{"lineNumber":24,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":25,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"shawntangy"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"shawntangy"},"content":"     * Adds the new Deadline task to the task list","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"shawntangy"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"shawntangy"},"content":"     * @param d The Deadline task to add","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"shawntangy"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"shawntangy"},"content":"    public void addDeadline(Deadline d) {","lastModifiedDate":"2023-02-27"},{"lineNumber":32,"author":{"gitId":"shawntangy"},"content":"        tasks.add(d);","lastModifiedDate":"2023-02-27"},{"lineNumber":33,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":34,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"shawntangy"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"shawntangy"},"content":"     * Adds the new Event task to the task list","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"shawntangy"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"shawntangy"},"content":"     * @param e The Event task to add","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"shawntangy"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"shawntangy"},"content":"    public void addEvent(Event e) {","lastModifiedDate":"2023-02-27"},{"lineNumber":41,"author":{"gitId":"shawntangy"},"content":"        tasks.add(e);","lastModifiedDate":"2023-02-27"},{"lineNumber":42,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":43,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":44,"author":{"gitId":"shawntangy"},"content":"    public void markIndexAsDone(int markIndex) {","lastModifiedDate":"2023-02-27"},{"lineNumber":45,"author":{"gitId":"shawntangy"},"content":"        tasks.get(markIndex).markAsDone();","lastModifiedDate":"2023-02-27"},{"lineNumber":46,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":47,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":48,"author":{"gitId":"shawntangy"},"content":"    public void unmarkIndexAsDone(int unmarkIndex) {","lastModifiedDate":"2023-02-27"},{"lineNumber":49,"author":{"gitId":"shawntangy"},"content":"        tasks.get(unmarkIndex).markAsNotDone();","lastModifiedDate":"2023-02-27"},{"lineNumber":50,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":51,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":52,"author":{"gitId":"shawntangy"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":53,"author":{"gitId":"shawntangy"},"content":"     * @param taskIndex Index of Task in Array List to retrieve","lastModifiedDate":"2023-02-27"},{"lineNumber":54,"author":{"gitId":"shawntangy"},"content":"     * @return Task that is retrieved","lastModifiedDate":"2023-02-27"},{"lineNumber":55,"author":{"gitId":"shawntangy"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":56,"author":{"gitId":"shawntangy"},"content":"    public Task getTask(int taskIndex) {","lastModifiedDate":"2023-02-27"},{"lineNumber":57,"author":{"gitId":"shawntangy"},"content":"        return tasks.get(taskIndex);","lastModifiedDate":"2023-02-27"},{"lineNumber":58,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":59,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":60,"author":{"gitId":"shawntangy"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":61,"author":{"gitId":"shawntangy"},"content":"     * Retrieve a Task that is located in the Task list","lastModifiedDate":"2023-02-27"},{"lineNumber":62,"author":{"gitId":"shawntangy"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":63,"author":{"gitId":"shawntangy"},"content":"     * @return ArrayList of Tasks","lastModifiedDate":"2023-02-27"},{"lineNumber":64,"author":{"gitId":"shawntangy"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":65,"author":{"gitId":"shawntangy"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2023-02-27"},{"lineNumber":66,"author":{"gitId":"shawntangy"},"content":"        return tasks;","lastModifiedDate":"2023-02-27"},{"lineNumber":67,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":68,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":69,"author":{"gitId":"shawntangy"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":70,"author":{"gitId":"shawntangy"},"content":"     * Deletes a Task that is located in the Task list","lastModifiedDate":"2023-02-27"},{"lineNumber":71,"author":{"gitId":"shawntangy"},"content":"     *","lastModifiedDate":"2023-02-27"},{"lineNumber":72,"author":{"gitId":"shawntangy"},"content":"     * @param deleteIndex Index of Task in Array List to delete from","lastModifiedDate":"2023-02-27"},{"lineNumber":73,"author":{"gitId":"shawntangy"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":74,"author":{"gitId":"shawntangy"},"content":"    public void deleteTask(int deleteIndex) {","lastModifiedDate":"2023-02-27"},{"lineNumber":75,"author":{"gitId":"shawntangy"},"content":"        tasks.get(deleteIndex).remove();","lastModifiedDate":"2023-02-27"},{"lineNumber":76,"author":{"gitId":"shawntangy"},"content":"        tasks.remove(deleteIndex);","lastModifiedDate":"2023-02-27"},{"lineNumber":77,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":78,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":79,"author":{"gitId":"shawntangy"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":80,"author":{"gitId":"shawntangy"},"content":"     * Creates a Todo based on what the user typed and save it into the ArrayList","lastModifiedDate":"2023-02-27"},{"lineNumber":81,"author":{"gitId":"shawntangy"},"content":"     *","lastModifiedDate":"2023-02-27"},{"lineNumber":82,"author":{"gitId":"shawntangy"},"content":"     * @param words original string that the user typed in","lastModifiedDate":"2023-02-27"},{"lineNumber":83,"author":{"gitId":"shawntangy"},"content":"     * @return Todo data type","lastModifiedDate":"2023-02-27"},{"lineNumber":84,"author":{"gitId":"shawntangy"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":85,"author":{"gitId":"shawntangy"},"content":"    public Todo createTodo(String[] words) {","lastModifiedDate":"2023-02-27"},{"lineNumber":86,"author":{"gitId":"shawntangy"},"content":"        Todo td \u003d new Todo(words[1]);","lastModifiedDate":"2023-02-27"},{"lineNumber":87,"author":{"gitId":"shawntangy"},"content":"        tasks.add(td);","lastModifiedDate":"2023-02-27"},{"lineNumber":88,"author":{"gitId":"shawntangy"},"content":"        return td;","lastModifiedDate":"2023-02-27"},{"lineNumber":89,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":90,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":91,"author":{"gitId":"shawntangy"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":92,"author":{"gitId":"shawntangy"},"content":"     * Creates a Deadline based on what the user typed and save it into the ArrayList","lastModifiedDate":"2023-02-27"},{"lineNumber":93,"author":{"gitId":"shawntangy"},"content":"     *","lastModifiedDate":"2023-02-27"},{"lineNumber":94,"author":{"gitId":"shawntangy"},"content":"     * @param words original string that the user typed in","lastModifiedDate":"2023-02-27"},{"lineNumber":95,"author":{"gitId":"shawntangy"},"content":"     * @return Deadline data type","lastModifiedDate":"2023-02-27"},{"lineNumber":96,"author":{"gitId":"shawntangy"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":97,"author":{"gitId":"shawntangy"},"content":"    public Deadline createDeadline(String[] words) {","lastModifiedDate":"2023-02-27"},{"lineNumber":98,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":99,"author":{"gitId":"shawntangy"},"content":"        String line;","lastModifiedDate":"2023-02-27"},{"lineNumber":100,"author":{"gitId":"shawntangy"},"content":"        line \u003d words[1]; // to remove the command","lastModifiedDate":"2023-02-27"},{"lineNumber":101,"author":{"gitId":"shawntangy"},"content":"        String[] deadlineDetails \u003d line.split(BY_DELIMITER);","lastModifiedDate":"2023-02-27"},{"lineNumber":102,"author":{"gitId":"shawntangy"},"content":"        Deadline d \u003d new Deadline(deadlineDetails[0], deadlineDetails[1]);","lastModifiedDate":"2023-02-27"},{"lineNumber":103,"author":{"gitId":"shawntangy"},"content":"        tasks.add(d);","lastModifiedDate":"2023-02-27"},{"lineNumber":104,"author":{"gitId":"shawntangy"},"content":"        return d;","lastModifiedDate":"2023-02-27"},{"lineNumber":105,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":106,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":107,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":108,"author":{"gitId":"shawntangy"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":109,"author":{"gitId":"shawntangy"},"content":"     * Creates an Event based on what the user typed and save it into the ArrayList","lastModifiedDate":"2023-02-27"},{"lineNumber":110,"author":{"gitId":"shawntangy"},"content":"     *","lastModifiedDate":"2023-02-27"},{"lineNumber":111,"author":{"gitId":"shawntangy"},"content":"     * @param words original string that the user typed in","lastModifiedDate":"2023-02-27"},{"lineNumber":112,"author":{"gitId":"shawntangy"},"content":"     * @return Event data type","lastModifiedDate":"2023-02-27"},{"lineNumber":113,"author":{"gitId":"shawntangy"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":114,"author":{"gitId":"shawntangy"},"content":"    public Event createEvent(String[] words) {","lastModifiedDate":"2023-02-27"},{"lineNumber":115,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":116,"author":{"gitId":"shawntangy"},"content":"        String line;","lastModifiedDate":"2023-02-27"},{"lineNumber":117,"author":{"gitId":"shawntangy"},"content":"        line \u003d words[1]; // to remove the command","lastModifiedDate":"2023-02-27"},{"lineNumber":118,"author":{"gitId":"shawntangy"},"content":"        String[] eventDetails \u003d line.split(FROM_DELIMITER);","lastModifiedDate":"2023-02-27"},{"lineNumber":119,"author":{"gitId":"shawntangy"},"content":"        String eventName \u003d eventDetails[0];","lastModifiedDate":"2023-02-27"},{"lineNumber":120,"author":{"gitId":"shawntangy"},"content":"        String from \u003d line.substring(line.indexOf(FROM_DELIMITER) + FROM_DELIMITER.length(), line.indexOf(TO_DELIMITER));","lastModifiedDate":"2023-02-27"},{"lineNumber":121,"author":{"gitId":"shawntangy"},"content":"        eventDetails \u003d line.split(TO_DELIMITER);","lastModifiedDate":"2023-02-27"},{"lineNumber":122,"author":{"gitId":"shawntangy"},"content":"        String to \u003d eventDetails[1];","lastModifiedDate":"2023-02-27"},{"lineNumber":123,"author":{"gitId":"shawntangy"},"content":"        Event e \u003d new Event(eventName, from, to);","lastModifiedDate":"2023-02-27"},{"lineNumber":124,"author":{"gitId":"shawntangy"},"content":"        tasks.add(e);","lastModifiedDate":"2023-02-27"},{"lineNumber":125,"author":{"gitId":"shawntangy"},"content":"        return e;","lastModifiedDate":"2023-02-27"},{"lineNumber":126,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":127,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":128,"author":{"gitId":"shawntangy"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":129,"author":{"gitId":"shawntangy"},"content":"     * Print the current Task list","lastModifiedDate":"2023-02-27"},{"lineNumber":130,"author":{"gitId":"shawntangy"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":131,"author":{"gitId":"shawntangy"},"content":"    public void printList() {","lastModifiedDate":"2023-02-27"},{"lineNumber":132,"author":{"gitId":"shawntangy"},"content":"        int listIndex \u003d 0;","lastModifiedDate":"2023-02-27"},{"lineNumber":133,"author":{"gitId":"shawntangy"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2023-02-27"},{"lineNumber":134,"author":{"gitId":"shawntangy"},"content":"            if (t !\u003d null) {","lastModifiedDate":"2023-02-27"},{"lineNumber":135,"author":{"gitId":"shawntangy"},"content":"                System.out.println(++listIndex + \". \" + t);","lastModifiedDate":"2023-02-27"},{"lineNumber":136,"author":{"gitId":"shawntangy"},"content":"            }","lastModifiedDate":"2023-02-27"},{"lineNumber":137,"author":{"gitId":"shawntangy"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":138,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":139,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":140,"author":{"gitId":"shawntangy"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":141,"author":{"gitId":"shawntangy"},"content":"     * Prints the current list of tasks that matches the keyword that the user typed","lastModifiedDate":"2023-02-27"},{"lineNumber":142,"author":{"gitId":"shawntangy"},"content":"     *","lastModifiedDate":"2023-02-27"},{"lineNumber":143,"author":{"gitId":"shawntangy"},"content":"     * @param words Original string that the user typed in","lastModifiedDate":"2023-02-27"},{"lineNumber":144,"author":{"gitId":"shawntangy"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":145,"author":{"gitId":"shawntangy"},"content":"    public void printMatchedList(String[] words) {","lastModifiedDate":"2023-02-27"},{"lineNumber":146,"author":{"gitId":"shawntangy"},"content":"        System.out.println(MATCHING_TASK_MESSAGE);","lastModifiedDate":"2023-02-27"},{"lineNumber":147,"author":{"gitId":"shawntangy"},"content":"        String keyword \u003d words[1];","lastModifiedDate":"2023-02-27"},{"lineNumber":148,"author":{"gitId":"shawntangy"},"content":"        int listIndex \u003d 0;","lastModifiedDate":"2023-02-27"},{"lineNumber":149,"author":{"gitId":"shawntangy"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2023-02-27"},{"lineNumber":150,"author":{"gitId":"shawntangy"},"content":"            if (t !\u003d null \u0026\u0026 t.description.matches(\"(.*)\" + keyword + \"(.*)\")) {","lastModifiedDate":"2023-02-27"},{"lineNumber":151,"author":{"gitId":"shawntangy"},"content":"                System.out.println(++listIndex + \". \" + t);","lastModifiedDate":"2023-02-27"},{"lineNumber":152,"author":{"gitId":"shawntangy"},"content":"            }","lastModifiedDate":"2023-02-27"},{"lineNumber":153,"author":{"gitId":"shawntangy"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":154,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":155,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":156,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":157,"author":{"gitId":"shawntangy"},"content":"}","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"shawntangy":157}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shawntangy"},"content":"package duke;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"shawntangy"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"shawntangy"},"content":"    public static final String TODO_ICON \u003d \"[T]\";","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"shawntangy"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"shawntangy"},"content":"        super(description);","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"shawntangy"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"shawntangy"},"content":"    public String toString() {","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"shawntangy"},"content":"        return TODO_ICON + super.toString();","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"shawntangy"},"content":"    @Override","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"shawntangy"},"content":"    public String saveFormat() {","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"shawntangy"},"content":"        return \"T|\" + super.saveFormat();","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"shawntangy"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"shawntangy":20}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shawntangy"},"content":"package duke;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"shawntangy"},"content":"public class Ui {","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"shawntangy"},"content":"    private static final String LOGO \u003d \"   _____  .__   _____                   .___\\n\" +","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"shawntangy"},"content":"            \"  /  _  \\\\ |  |_/ ____\\\\______   ____   __| _/\\n\" +","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"shawntangy"},"content":"            \" /  /_\\\\  \\\\|  |\\\\   __\\\\\\\\_  __ \\\\_/ __ \\\\ / __ |\\n\" +","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"shawntangy"},"content":"            \"/    |    \\\\  |_|  |   |  | \\\\/\\\\  ___// /_/ |\\n\" +","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"shawntangy"},"content":"            \"\\\\____|__  /____/__|   |__|    \\\\___  \u003e____ |\\n\" +","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"shawntangy"},"content":"            \"        \\\\/                        \\\\/     \\\\/\\n\";","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"shawntangy"},"content":"    private static final String WELCOME_MESSAGE \u003d \"Hello from\\n\";","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"shawntangy"},"content":"    private static final String DIVIDER \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"shawntangy"},"content":"    private static final String GREETINGS \u003d \" Hello! I\u0027m Alfred Pennyworth.\\n What can I do for you?\\n\";","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"shawntangy"},"content":"    private static final String ENDING \u003d \" Bye. Hope to see you again soon!\\n\";","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"shawntangy"},"content":"    private static final String ADDED_TASK \u003d \"Got it. I\u0027ve added this task:\\n  \";","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"shawntangy"},"content":"    private static final String MARKED_THIS_TASK_AS_DONE \u003d \"Nice! I\u0027ve marked this task as done: \";","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"shawntangy"},"content":"    private static final String UNMARKED_THIS_TASK_AS_DONE \u003d \"Okay, I\u0027ve marked this task as not done yet: \";","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"shawntangy"},"content":"    private static final String DELETED_THIS_TASK \u003d \"Noted. I\u0027ve removed this task:\";","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"shawntangy"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"shawntangy"},"content":"     * Prints welcome message and logo","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"shawntangy"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"shawntangy"},"content":"    public void showWelcomeMessage() {","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"shawntangy"},"content":"        System.out.println(WELCOME_MESSAGE + LOGO);","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"shawntangy"},"content":"        System.out.println(DIVIDER + GREETINGS + DIVIDER);","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"shawntangy"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"shawntangy"},"content":"     * Prints ending message with divider","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"shawntangy"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"shawntangy"},"content":"    public void showEndingMessage() {","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"shawntangy"},"content":"        System.out.println(ENDING + DIVIDER);","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"shawntangy"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"shawntangy"},"content":"     * Prints the details of the new task and the new number of tasks in the list","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"shawntangy"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"shawntangy"},"content":"     * @param t The task to add","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"shawntangy"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"shawntangy"},"content":"    public void printAddTaskMessage(Task t) {","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"shawntangy"},"content":"        System.out.println(ADDED_TASK + t + \"\\nNow you have \" + t.getNumberOfTasks() + \" tasks in the list.\");","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"shawntangy"},"content":"    public void printMarkedMessage(Task task) {","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"shawntangy"},"content":"        System.out.println(MARKED_THIS_TASK_AS_DONE + \"\\n\" + task);","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":49,"author":{"gitId":"shawntangy"},"content":"    public void printUnmarkedMessage(Task task) {","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"shawntangy"},"content":"        System.out.println(UNMARKED_THIS_TASK_AS_DONE + \"\\n\" + task);","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":53,"author":{"gitId":"shawntangy"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"shawntangy"},"content":"     * Prints details of the deleted task and update how many task is left","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"shawntangy"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":56,"author":{"gitId":"shawntangy"},"content":"     * @param taskDescription Description of the deleted task","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"shawntangy"},"content":"     * @param taskLeft Count of the number of tasks left","lastModifiedDate":"2023-03-01"},{"lineNumber":58,"author":{"gitId":"shawntangy"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":59,"author":{"gitId":"shawntangy"},"content":"    public void printDeleteTaskMessage(String taskDescription, int taskLeft) {","lastModifiedDate":"2023-02-26"},{"lineNumber":60,"author":{"gitId":"shawntangy"},"content":"        System.out.println(DELETED_THIS_TASK + \"\\n\" + taskDescription + \"\\nNow you have \" + taskLeft + \" tasks in the list.\");","lastModifiedDate":"2023-02-26"},{"lineNumber":61,"author":{"gitId":"shawntangy"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":62,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":63,"author":{"gitId":"shawntangy"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"shawntangy":63}},{"path":"src/main/java/duke/exceptions/EmptyCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shawntangy"},"content":"package duke.exceptions;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"shawntangy"},"content":"public class EmptyCommandException extends Exception{","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"shawntangy"},"content":"}","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"shawntangy":4}},{"path":"src/main/java/duke/exceptions/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shawntangy"},"content":"package duke.exceptions;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"shawntangy"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"shawntangy"},"content":"public class UnknownCommandException extends Exception{","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"shawntangy"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"shawntangy":4}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"shawntangy"},"content":"todo borrow book","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"shawntangy"},"content":"list","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"shawntangy"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"shawntangy"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"shawntangy"},"content":"list","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"shawntangy"},"content":"mark 1","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"shawntangy"},"content":"unmark 1","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"shawntangy"},"content":"delete 1","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"shawntangy"},"content":"bye","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"shawntangy":9}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"shawntangy"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java ../src/main/java/duke/exceptions/*.java","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"shawntangy"},"content":"java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"shawntangy":2,"-":36}}]
