[{"path":"src/main/java/duke/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mingyuannus"},"content":"package duke;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"mingyuannus"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"mingyuannus"},"content":"public class Command {","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"mingyuannus"},"content":"    private final CommandType type;","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"mingyuannus"},"content":"    private String value \u003d \"\";","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"mingyuannus"},"content":"    private final ArrayList\u003cParameter\u003e parameters;","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"mingyuannus"},"content":"    public Command(String input) throws IllegalCommandException, IllegalParameterException {","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"mingyuannus"},"content":"        String[] splitInput \u003d input.split(\" /\");","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"mingyuannus"},"content":"        // handle command","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"mingyuannus"},"content":"        String commandString \u003d splitInput[0].split(\" \", 2)[0];","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"mingyuannus"},"content":"        switch (commandString) {","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"mingyuannus"},"content":"            case \"list\":","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"mingyuannus"},"content":"                this.type \u003d CommandType.LIST;","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"mingyuannus"},"content":"                break;","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"mingyuannus"},"content":"            case \"mark\":","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"mingyuannus"},"content":"                this.type \u003d CommandType.MARK;","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"mingyuannus"},"content":"                break;","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"mingyuannus"},"content":"            case \"unmark\":","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"mingyuannus"},"content":"                this.type \u003d CommandType.UNMARK;","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"mingyuannus"},"content":"                break;","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"mingyuannus"},"content":"            case \"todo\":","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"mingyuannus"},"content":"                this.type \u003d CommandType.CREATE_TODO;","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"mingyuannus"},"content":"                break;","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"mingyuannus"},"content":"            case \"deadline\":","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"mingyuannus"},"content":"                this.type \u003d CommandType.CREATE_DEADLINE;","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"mingyuannus"},"content":"                break;","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"mingyuannus"},"content":"            case \"event\":","lastModifiedDate":"2023-02-04"},{"lineNumber":33,"author":{"gitId":"mingyuannus"},"content":"                this.type \u003d CommandType.CREATE_EVENT;","lastModifiedDate":"2023-02-04"},{"lineNumber":34,"author":{"gitId":"mingyuannus"},"content":"                break;","lastModifiedDate":"2023-02-04"},{"lineNumber":35,"author":{"gitId":"mingyuannus"},"content":"            case \"bye\":","lastModifiedDate":"2023-02-04"},{"lineNumber":36,"author":{"gitId":"mingyuannus"},"content":"                this.type \u003d CommandType.EXIT;","lastModifiedDate":"2023-02-04"},{"lineNumber":37,"author":{"gitId":"mingyuannus"},"content":"                break;","lastModifiedDate":"2023-02-04"},{"lineNumber":38,"author":{"gitId":"mingyuannus"},"content":"            default:","lastModifiedDate":"2023-02-04"},{"lineNumber":39,"author":{"gitId":"mingyuannus"},"content":"                throw new IllegalCommandException(IllegalCommandExceptionType.COMMAND_DOES_NOT_EXIST, commandString);","lastModifiedDate":"2023-02-04"},{"lineNumber":40,"author":{"gitId":"mingyuannus"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":41,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":42,"author":{"gitId":"mingyuannus"},"content":"        if (","lastModifiedDate":"2023-02-04"},{"lineNumber":43,"author":{"gitId":"mingyuannus"},"content":"                this.type \u003d\u003d CommandType.CREATE_TODO ||","lastModifiedDate":"2023-02-04"},{"lineNumber":44,"author":{"gitId":"mingyuannus"},"content":"                this.type \u003d\u003d CommandType.CREATE_DEADLINE ||","lastModifiedDate":"2023-02-04"},{"lineNumber":45,"author":{"gitId":"mingyuannus"},"content":"                this.type \u003d\u003d CommandType.CREATE_EVENT ||","lastModifiedDate":"2023-02-04"},{"lineNumber":46,"author":{"gitId":"mingyuannus"},"content":"                this.type \u003d\u003d CommandType.MARK ||","lastModifiedDate":"2023-02-04"},{"lineNumber":47,"author":{"gitId":"mingyuannus"},"content":"                this.type \u003d\u003d CommandType.UNMARK","lastModifiedDate":"2023-02-04"},{"lineNumber":48,"author":{"gitId":"mingyuannus"},"content":"        ) {","lastModifiedDate":"2023-02-04"},{"lineNumber":49,"author":{"gitId":"mingyuannus"},"content":"            try {","lastModifiedDate":"2023-02-04"},{"lineNumber":50,"author":{"gitId":"mingyuannus"},"content":"                this.value \u003d splitInput[0].split(\" \", 2)[1];","lastModifiedDate":"2023-02-04"},{"lineNumber":51,"author":{"gitId":"mingyuannus"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-04"},{"lineNumber":52,"author":{"gitId":"mingyuannus"},"content":"                throw new IllegalCommandException(IllegalCommandExceptionType.MISSING_VALUE, commandString);","lastModifiedDate":"2023-02-04"},{"lineNumber":53,"author":{"gitId":"mingyuannus"},"content":"            }","lastModifiedDate":"2023-02-04"},{"lineNumber":54,"author":{"gitId":"mingyuannus"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":55,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":56,"author":{"gitId":"mingyuannus"},"content":"        // handle additional parameters","lastModifiedDate":"2023-02-04"},{"lineNumber":57,"author":{"gitId":"mingyuannus"},"content":"        this.parameters \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-04"},{"lineNumber":58,"author":{"gitId":"mingyuannus"},"content":"        for (int i \u003d 1; i \u003c splitInput.length; i++) {","lastModifiedDate":"2023-02-04"},{"lineNumber":59,"author":{"gitId":"mingyuannus"},"content":"            Parameter parameter \u003d new Parameter(splitInput[i]);","lastModifiedDate":"2023-02-04"},{"lineNumber":60,"author":{"gitId":"mingyuannus"},"content":"            parameters.add(parameter);","lastModifiedDate":"2023-02-04"},{"lineNumber":61,"author":{"gitId":"mingyuannus"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":62,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":63,"author":{"gitId":"mingyuannus"},"content":"        // handle missing parameters based on command type","lastModifiedDate":"2023-02-04"},{"lineNumber":64,"author":{"gitId":"mingyuannus"},"content":"        if (this.type \u003d\u003d CommandType.CREATE_DEADLINE) {","lastModifiedDate":"2023-02-04"},{"lineNumber":65,"author":{"gitId":"mingyuannus"},"content":"            this.getParameterValueByType(ParameterType.DEADLINE);","lastModifiedDate":"2023-02-04"},{"lineNumber":66,"author":{"gitId":"mingyuannus"},"content":"        } else if (this.type \u003d\u003d CommandType.CREATE_EVENT) {","lastModifiedDate":"2023-02-04"},{"lineNumber":67,"author":{"gitId":"mingyuannus"},"content":"            this.getParameterValueByType(ParameterType.EVENT_START);","lastModifiedDate":"2023-02-04"},{"lineNumber":68,"author":{"gitId":"mingyuannus"},"content":"            this.getParameterValueByType(ParameterType.EVENT_END);","lastModifiedDate":"2023-02-04"},{"lineNumber":69,"author":{"gitId":"mingyuannus"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":70,"author":{"gitId":"mingyuannus"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":71,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":72,"author":{"gitId":"mingyuannus"},"content":"    public CommandType getCommandType() {","lastModifiedDate":"2023-02-04"},{"lineNumber":73,"author":{"gitId":"mingyuannus"},"content":"        return this.type;","lastModifiedDate":"2023-02-04"},{"lineNumber":74,"author":{"gitId":"mingyuannus"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":75,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":76,"author":{"gitId":"mingyuannus"},"content":"    public String getCommandValue() {","lastModifiedDate":"2023-02-04"},{"lineNumber":77,"author":{"gitId":"mingyuannus"},"content":"        return this.value;","lastModifiedDate":"2023-02-04"},{"lineNumber":78,"author":{"gitId":"mingyuannus"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":79,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":80,"author":{"gitId":"mingyuannus"},"content":"    public String getParameterValueByType(ParameterType type) throws IllegalCommandException {","lastModifiedDate":"2023-02-04"},{"lineNumber":81,"author":{"gitId":"mingyuannus"},"content":"        for (Parameter parameter : parameters) {","lastModifiedDate":"2023-02-04"},{"lineNumber":82,"author":{"gitId":"mingyuannus"},"content":"            if (parameter.getParameterType() \u003d\u003d type) {","lastModifiedDate":"2023-02-04"},{"lineNumber":83,"author":{"gitId":"mingyuannus"},"content":"                return parameter.getParameterValue();","lastModifiedDate":"2023-02-04"},{"lineNumber":84,"author":{"gitId":"mingyuannus"},"content":"            }","lastModifiedDate":"2023-02-04"},{"lineNumber":85,"author":{"gitId":"mingyuannus"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":86,"author":{"gitId":"mingyuannus"},"content":"        throw new IllegalCommandException(IllegalCommandExceptionType.MISSING_PARAMETER, type.toString().toLowerCase());","lastModifiedDate":"2023-02-04"},{"lineNumber":87,"author":{"gitId":"mingyuannus"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":88,"author":{"gitId":"mingyuannus"},"content":"}","lastModifiedDate":"2023-02-04"},{"lineNumber":89,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":90,"author":{"gitId":"mingyuannus"},"content":"enum CommandType {","lastModifiedDate":"2023-02-04"},{"lineNumber":91,"author":{"gitId":"mingyuannus"},"content":"    LIST, MARK, UNMARK, CREATE_TODO, CREATE_DEADLINE, CREATE_EVENT, EXIT","lastModifiedDate":"2023-02-04"},{"lineNumber":92,"author":{"gitId":"mingyuannus"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"mingyuannus":92}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mingyuannus"},"content":"package duke;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"mingyuannus"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"mingyuannus"},"content":"    String by;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"mingyuannus"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"mingyuannus"},"content":"        super(description);","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"mingyuannus"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"mingyuannus"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"mingyuannus"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"mingyuannus"},"content":"    public String getLabel() {","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"mingyuannus"},"content":"        String typeIndicator \u003d \"[D]\";","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"mingyuannus"},"content":"        String doneIndicator \u003d \"[\" + (this.isDone ? \"X\" : \" \") + \"]\";","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"mingyuannus"},"content":"        String suffix \u003d \"(by: \" + this.by + \")\";","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"mingyuannus"},"content":"        return typeIndicator + doneIndicator + \" \" + this.description + \" \" + suffix;","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"mingyuannus"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"mingyuannus"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"mingyuannus":18}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mingyuannus"},"content":"package duke;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"mingyuannus"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"mingyuannus"},"content":"        String line;","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"mingyuannus"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"mingyuannus"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"mingyuannus"},"content":"        System.out.println(\"    Hello! I\u0027m Duke\");","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"mingyuannus"},"content":"        System.out.println(\"    What can I do for you?\");","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"mingyuannus"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"mingyuannus"},"content":"        Task[] list \u003d new Task[100];","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"mingyuannus"},"content":"        int nextEmptyIndex \u003d 0;","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"mingyuannus"},"content":"        boolean isExitCommandReceived \u003d false;","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"mingyuannus"},"content":"        while (!isExitCommandReceived) {","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"mingyuannus"},"content":"            line \u003d in.nextLine();","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"mingyuannus"},"content":"            try  {","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"mingyuannus"},"content":"                Command command \u003d new Command(line);","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"mingyuannus"},"content":"                if (command.getCommandType() \u003d\u003d CommandType.CREATE_TODO) {","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"mingyuannus"},"content":"                    list[nextEmptyIndex] \u003d new Task(command.getCommandValue());","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"mingyuannus"},"content":"                    nextEmptyIndex++;","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"mingyuannus"},"content":"                    printAddedTask(list, nextEmptyIndex);","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"mingyuannus"},"content":"                } else if (command.getCommandType() \u003d\u003d CommandType.CREATE_DEADLINE) {","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"mingyuannus"},"content":"                    String description \u003d command.getCommandValue();","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"mingyuannus"},"content":"                    String deadline \u003d command.getParameterValueByType(ParameterType.DEADLINE);","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"mingyuannus"},"content":"                    list[nextEmptyIndex] \u003d new Deadline(description, deadline);","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"mingyuannus"},"content":"                    nextEmptyIndex++;","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"mingyuannus"},"content":"                    printAddedTask(list, nextEmptyIndex);","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"mingyuannus"},"content":"                } else if (command.getCommandType() \u003d\u003d CommandType.CREATE_EVENT) {","lastModifiedDate":"2023-02-04"},{"lineNumber":36,"author":{"gitId":"mingyuannus"},"content":"                    String description \u003d command.getCommandValue();","lastModifiedDate":"2023-02-04"},{"lineNumber":37,"author":{"gitId":"mingyuannus"},"content":"                    String from \u003d command.getParameterValueByType(ParameterType.EVENT_START);","lastModifiedDate":"2023-02-04"},{"lineNumber":38,"author":{"gitId":"mingyuannus"},"content":"                    String to \u003d command.getParameterValueByType(ParameterType.EVENT_END);","lastModifiedDate":"2023-02-04"},{"lineNumber":39,"author":{"gitId":"mingyuannus"},"content":"                    list[nextEmptyIndex] \u003d new Event(description, from, to);","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"mingyuannus"},"content":"                    nextEmptyIndex++;","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"mingyuannus"},"content":"                    printAddedTask(list, nextEmptyIndex);","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"mingyuannus"},"content":"                } else if (command.getCommandType() \u003d\u003d CommandType.LIST) {","lastModifiedDate":"2023-02-04"},{"lineNumber":43,"author":{"gitId":"mingyuannus"},"content":"                    handleShowTaskList(list, nextEmptyIndex);","lastModifiedDate":"2023-02-04"},{"lineNumber":44,"author":{"gitId":"mingyuannus"},"content":"                } else if (command.getCommandType() \u003d\u003d CommandType.MARK) {","lastModifiedDate":"2023-02-04"},{"lineNumber":45,"author":{"gitId":"mingyuannus"},"content":"                    int indexToMark \u003d Integer.parseInt(command.getCommandValue())-1;","lastModifiedDate":"2023-02-04"},{"lineNumber":46,"author":{"gitId":"mingyuannus"},"content":"                    handleMarkTask(list, indexToMark);","lastModifiedDate":"2023-02-04"},{"lineNumber":47,"author":{"gitId":"mingyuannus"},"content":"                } else if (command.getCommandType() \u003d\u003d CommandType.UNMARK) {","lastModifiedDate":"2023-02-04"},{"lineNumber":48,"author":{"gitId":"mingyuannus"},"content":"                    int indexToUnmark \u003d Integer.parseInt(command.getCommandValue())-1;","lastModifiedDate":"2023-02-04"},{"lineNumber":49,"author":{"gitId":"mingyuannus"},"content":"                    handleUnmarkTask(list, indexToUnmark);","lastModifiedDate":"2023-02-04"},{"lineNumber":50,"author":{"gitId":"mingyuannus"},"content":"                } else if (command.getCommandType() \u003d\u003d CommandType.EXIT) {","lastModifiedDate":"2023-02-04"},{"lineNumber":51,"author":{"gitId":"mingyuannus"},"content":"                    isExitCommandReceived \u003d true;","lastModifiedDate":"2023-02-04"},{"lineNumber":52,"author":{"gitId":"mingyuannus"},"content":"                } else {","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"mingyuannus"},"content":"                    System.out.println(\"ERROR: This should not be possible.\");","lastModifiedDate":"2023-02-04"},{"lineNumber":54,"author":{"gitId":"mingyuannus"},"content":"                }","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"mingyuannus"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-02-04"},{"lineNumber":56,"author":{"gitId":"mingyuannus"},"content":"                handleExceptions(e);","lastModifiedDate":"2023-02-04"},{"lineNumber":57,"author":{"gitId":"mingyuannus"},"content":"            }","lastModifiedDate":"2023-02-04"},{"lineNumber":58,"author":{"gitId":"mingyuannus"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":59,"author":{"gitId":"mingyuannus"},"content":"        handleExitProgram();","lastModifiedDate":"2023-02-04"},{"lineNumber":60,"author":{"gitId":"mingyuannus"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"mingyuannus"},"content":"    public static void printAddedTask(Task[] list, int nextEmptyIndex) {","lastModifiedDate":"2023-02-04"},{"lineNumber":63,"author":{"gitId":"mingyuannus"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"mingyuannus"},"content":"        System.out.println(\"    Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-02-04"},{"lineNumber":65,"author":{"gitId":"mingyuannus"},"content":"        System.out.println(\"    \" + list[nextEmptyIndex-1].getLabel());","lastModifiedDate":"2023-02-04"},{"lineNumber":66,"author":{"gitId":"mingyuannus"},"content":"        System.out.println(\"    Now you have \" + nextEmptyIndex + \" tasks in the list.\");","lastModifiedDate":"2023-02-04"},{"lineNumber":67,"author":{"gitId":"mingyuannus"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-01-22"},{"lineNumber":68,"author":{"gitId":"mingyuannus"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"mingyuannus"},"content":"    public static void handleShowTaskList(Task[] list, int nextEmptyIndex) {","lastModifiedDate":"2023-01-31"},{"lineNumber":71,"author":{"gitId":"mingyuannus"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"mingyuannus"},"content":"        System.out.println(\"    Here are the tasks in your list:\");","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"mingyuannus"},"content":"        for (int i \u003d 0; i \u003c nextEmptyIndex; i++) {","lastModifiedDate":"2023-01-22"},{"lineNumber":74,"author":{"gitId":"mingyuannus"},"content":"            String prefix \u003d (i + 1) + \".\";","lastModifiedDate":"2023-01-31"},{"lineNumber":75,"author":{"gitId":"mingyuannus"},"content":"            System.out.println(\"    \" + prefix + list[i].getLabel());","lastModifiedDate":"2023-02-04"},{"lineNumber":76,"author":{"gitId":"mingyuannus"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":77,"author":{"gitId":"mingyuannus"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-01-22"},{"lineNumber":78,"author":{"gitId":"mingyuannus"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":79,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":80,"author":{"gitId":"mingyuannus"},"content":"    public static void handleMarkTask(Task[] list, int indexToMark) {","lastModifiedDate":"2023-01-31"},{"lineNumber":81,"author":{"gitId":"mingyuannus"},"content":"        list[indexToMark].setIsDone(true);","lastModifiedDate":"2023-01-31"},{"lineNumber":82,"author":{"gitId":"mingyuannus"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-01-22"},{"lineNumber":83,"author":{"gitId":"mingyuannus"},"content":"        System.out.println(\"    Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-01-22"},{"lineNumber":84,"author":{"gitId":"mingyuannus"},"content":"        System.out.println(list[indexToMark].getLabel());","lastModifiedDate":"2023-01-31"},{"lineNumber":85,"author":{"gitId":"mingyuannus"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-01-22"},{"lineNumber":86,"author":{"gitId":"mingyuannus"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":87,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":88,"author":{"gitId":"mingyuannus"},"content":"    public static void handleUnmarkTask(Task[] list, int indexToUnmark) {","lastModifiedDate":"2023-01-31"},{"lineNumber":89,"author":{"gitId":"mingyuannus"},"content":"        list[indexToUnmark].setIsDone(false);","lastModifiedDate":"2023-01-31"},{"lineNumber":90,"author":{"gitId":"mingyuannus"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-01-22"},{"lineNumber":91,"author":{"gitId":"mingyuannus"},"content":"        System.out.println(\"    OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-01-22"},{"lineNumber":92,"author":{"gitId":"mingyuannus"},"content":"        System.out.println(list[indexToUnmark].getLabel());","lastModifiedDate":"2023-01-31"},{"lineNumber":93,"author":{"gitId":"mingyuannus"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-01-22"},{"lineNumber":94,"author":{"gitId":"mingyuannus"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":95,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":96,"author":{"gitId":"mingyuannus"},"content":"    public static void handleExitProgram() {","lastModifiedDate":"2023-02-04"},{"lineNumber":97,"author":{"gitId":"mingyuannus"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-01-22"},{"lineNumber":98,"author":{"gitId":"mingyuannus"},"content":"        System.out.println(\"    Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-02-04"},{"lineNumber":99,"author":{"gitId":"mingyuannus"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-01-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":101,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":102,"author":{"gitId":"mingyuannus"},"content":"    public static void handleExceptions(Exception e) {","lastModifiedDate":"2023-02-04"},{"lineNumber":103,"author":{"gitId":"mingyuannus"},"content":"        switch (e.getClass().getName()) {","lastModifiedDate":"2023-02-04"},{"lineNumber":104,"author":{"gitId":"mingyuannus"},"content":"            case \"IllegalCommandException\":","lastModifiedDate":"2023-02-04"},{"lineNumber":105,"author":{"gitId":"mingyuannus"},"content":"                IllegalCommandException commandError \u003d (IllegalCommandException) e;","lastModifiedDate":"2023-02-04"},{"lineNumber":106,"author":{"gitId":"mingyuannus"},"content":"                if (commandError.type \u003d\u003d IllegalCommandExceptionType.COMMAND_DOES_NOT_EXIST) {","lastModifiedDate":"2023-02-04"},{"lineNumber":107,"author":{"gitId":"mingyuannus"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-02-04"},{"lineNumber":108,"author":{"gitId":"mingyuannus"},"content":"                    System.out.println(\"    Error: The command \u0027\" + commandError.value + \"\u0027 does not exist!\");","lastModifiedDate":"2023-02-04"},{"lineNumber":109,"author":{"gitId":"mingyuannus"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-02-04"},{"lineNumber":110,"author":{"gitId":"mingyuannus"},"content":"                } else if (commandError.type \u003d\u003d IllegalCommandExceptionType.MISSING_VALUE) {","lastModifiedDate":"2023-02-04"},{"lineNumber":111,"author":{"gitId":"mingyuannus"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-02-04"},{"lineNumber":112,"author":{"gitId":"mingyuannus"},"content":"                    System.out.println(\"    Error: Missing value after \u0027\" + commandError.value + \"\u0027 command!\");","lastModifiedDate":"2023-02-04"},{"lineNumber":113,"author":{"gitId":"mingyuannus"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-02-04"},{"lineNumber":114,"author":{"gitId":"mingyuannus"},"content":"                } else if (commandError.type \u003d\u003d IllegalCommandExceptionType.MISSING_PARAMETER) {","lastModifiedDate":"2023-02-04"},{"lineNumber":115,"author":{"gitId":"mingyuannus"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-02-04"},{"lineNumber":116,"author":{"gitId":"mingyuannus"},"content":"                    System.out.println(\"    Error: This command requires the \u0027\" + commandError.value + \"\u0027 parameter!\");","lastModifiedDate":"2023-02-04"},{"lineNumber":117,"author":{"gitId":"mingyuannus"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-02-04"},{"lineNumber":118,"author":{"gitId":"mingyuannus"},"content":"                }","lastModifiedDate":"2023-02-04"},{"lineNumber":119,"author":{"gitId":"mingyuannus"},"content":"                break;","lastModifiedDate":"2023-02-04"},{"lineNumber":120,"author":{"gitId":"mingyuannus"},"content":"            case \"IllegalParameterException\":","lastModifiedDate":"2023-02-04"},{"lineNumber":121,"author":{"gitId":"mingyuannus"},"content":"                IllegalParameterException parameterError \u003d (IllegalParameterException) e;","lastModifiedDate":"2023-02-04"},{"lineNumber":122,"author":{"gitId":"mingyuannus"},"content":"                if (parameterError.type \u003d\u003d IllegalParameterExceptionType.PARAMETER_DOES_NOT_EXIST) {","lastModifiedDate":"2023-02-04"},{"lineNumber":123,"author":{"gitId":"mingyuannus"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-02-04"},{"lineNumber":124,"author":{"gitId":"mingyuannus"},"content":"                    System.out.println(\"    Error: The parameter \u0027\" + parameterError.value + \"\u0027 does not exist!\");","lastModifiedDate":"2023-02-04"},{"lineNumber":125,"author":{"gitId":"mingyuannus"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-02-04"},{"lineNumber":126,"author":{"gitId":"mingyuannus"},"content":"                } else if (parameterError.type \u003d\u003d IllegalParameterExceptionType.MISSING_VALUE) {","lastModifiedDate":"2023-02-04"},{"lineNumber":127,"author":{"gitId":"mingyuannus"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-02-04"},{"lineNumber":128,"author":{"gitId":"mingyuannus"},"content":"                    System.out.println(\"    Error: Missing value after \u0027\" + parameterError.value + \"\u0027 parameter!\");","lastModifiedDate":"2023-02-04"},{"lineNumber":129,"author":{"gitId":"mingyuannus"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-02-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2019-07-29"},{"lineNumber":131,"author":{"gitId":"mingyuannus"},"content":"                break;","lastModifiedDate":"2023-02-04"},{"lineNumber":132,"author":{"gitId":"mingyuannus"},"content":"            default:","lastModifiedDate":"2023-02-04"},{"lineNumber":133,"author":{"gitId":"mingyuannus"},"content":"                break;","lastModifiedDate":"2023-02-04"},{"lineNumber":134,"author":{"gitId":"mingyuannus"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":135,"author":{"gitId":"mingyuannus"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":136,"author":{"gitId":"mingyuannus"},"content":"}","lastModifiedDate":"2023-02-04"},{"lineNumber":137,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"mingyuannus":133,"-":4}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mingyuannus"},"content":"package duke;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"mingyuannus"},"content":"public class Event extends Deadline {","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"mingyuannus"},"content":"    private String from;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"mingyuannus"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"mingyuannus"},"content":"        super(description, to);","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"mingyuannus"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"mingyuannus"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"mingyuannus"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"mingyuannus"},"content":"    public String getLabel() {","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"mingyuannus"},"content":"        String typeIndicator \u003d \"[E]\";","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"mingyuannus"},"content":"        String doneIndicator \u003d \"[\" + (this.isDone ? \"X\" : \" \") + \"]\";","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"mingyuannus"},"content":"        String suffix \u003d \"(from: \" + this.from + \" to: \" + this.by + \")\";","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"mingyuannus"},"content":"        return typeIndicator + doneIndicator + \" \" + this.description + \" \" + suffix;","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"mingyuannus"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"mingyuannus"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"mingyuannus":18}},{"path":"src/main/java/duke/IllegalCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mingyuannus"},"content":"package duke;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"mingyuannus"},"content":"public class IllegalCommandException extends Exception {","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"mingyuannus"},"content":"    public IllegalCommandExceptionType type;","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"mingyuannus"},"content":"    public String value;","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"mingyuannus"},"content":"    public IllegalCommandException(IllegalCommandExceptionType type, String value) {","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"mingyuannus"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"mingyuannus"},"content":"        this.value \u003d value;","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"mingyuannus"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"mingyuannus"},"content":"}","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"mingyuannus"},"content":"enum IllegalCommandExceptionType {","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"mingyuannus"},"content":"    COMMAND_DOES_NOT_EXIST, MISSING_VALUE, MISSING_PARAMETER","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"mingyuannus"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"mingyuannus":14}},{"path":"src/main/java/duke/IllegalParameterException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mingyuannus"},"content":"package duke;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"mingyuannus"},"content":"public class IllegalParameterException extends Exception {","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"mingyuannus"},"content":"    public IllegalParameterExceptionType type;","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"mingyuannus"},"content":"    public String value;","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"mingyuannus"},"content":"    public IllegalParameterException(IllegalParameterExceptionType type, String value) {","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"mingyuannus"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"mingyuannus"},"content":"        this.value \u003d value;","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"mingyuannus"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"mingyuannus"},"content":"}","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"mingyuannus"},"content":"enum IllegalParameterExceptionType {","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"mingyuannus"},"content":"    PARAMETER_DOES_NOT_EXIST, MISSING_VALUE","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"mingyuannus"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"mingyuannus":15}},{"path":"src/main/java/duke/Parameter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mingyuannus"},"content":"package duke;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"mingyuannus"},"content":"public class Parameter {","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"mingyuannus"},"content":"    private final ParameterType type;","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"mingyuannus"},"content":"    private final String value;","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"mingyuannus"},"content":"    public Parameter(String input) throws IllegalParameterException {","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"mingyuannus"},"content":"        String parameterType \u003d input.split(\" \", 2)[0];","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"mingyuannus"},"content":"        switch (parameterType) {","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"mingyuannus"},"content":"            case \"by\":","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"mingyuannus"},"content":"                this.type \u003d ParameterType.DEADLINE;","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"mingyuannus"},"content":"                break;","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"mingyuannus"},"content":"            case \"from\":","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"mingyuannus"},"content":"                this.type \u003d ParameterType.EVENT_START;","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"mingyuannus"},"content":"                break;","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"mingyuannus"},"content":"            case \"to\":","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"mingyuannus"},"content":"                this.type \u003d ParameterType.EVENT_END;","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"mingyuannus"},"content":"                break;","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"mingyuannus"},"content":"            default:","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"mingyuannus"},"content":"                throw new IllegalParameterException(IllegalParameterExceptionType.PARAMETER_DOES_NOT_EXIST, parameterType);","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"mingyuannus"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"mingyuannus"},"content":"        try {","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"mingyuannus"},"content":"            this.value \u003d input.split(\" \", 2)[1];","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"mingyuannus"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"mingyuannus"},"content":"            throw new IllegalParameterException(IllegalParameterExceptionType.MISSING_VALUE, parameterType);","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"mingyuannus"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"mingyuannus"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"mingyuannus"},"content":"    public ParameterType getParameterType() {","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"mingyuannus"},"content":"        return this.type;","lastModifiedDate":"2023-02-04"},{"lineNumber":33,"author":{"gitId":"mingyuannus"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":34,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":35,"author":{"gitId":"mingyuannus"},"content":"    public String getParameterValue() {","lastModifiedDate":"2023-02-04"},{"lineNumber":36,"author":{"gitId":"mingyuannus"},"content":"        return this.value;","lastModifiedDate":"2023-02-04"},{"lineNumber":37,"author":{"gitId":"mingyuannus"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":38,"author":{"gitId":"mingyuannus"},"content":"}","lastModifiedDate":"2023-02-04"},{"lineNumber":39,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":40,"author":{"gitId":"mingyuannus"},"content":"enum ParameterType {","lastModifiedDate":"2023-02-04"},{"lineNumber":41,"author":{"gitId":"mingyuannus"},"content":"    DEADLINE, EVENT_START, EVENT_END","lastModifiedDate":"2023-02-04"},{"lineNumber":42,"author":{"gitId":"mingyuannus"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"mingyuannus":42}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mingyuannus"},"content":"package duke;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"mingyuannus"},"content":"public class Task {","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"mingyuannus"},"content":"    final String description;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"mingyuannus"},"content":"    boolean isDone;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"mingyuannus"},"content":"    public Task(String desc) {","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"mingyuannus"},"content":"        this.description \u003d desc;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"mingyuannus"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"mingyuannus"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"mingyuannus"},"content":"    public String getLabel() {","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"mingyuannus"},"content":"        String typeIndicator \u003d \"[T]\";","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"mingyuannus"},"content":"        String doneIndicator \u003d \"[\" + (this.isDone ? \"X\" : \" \") + \"]\";","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"mingyuannus"},"content":"        return typeIndicator + doneIndicator + \" \" + this.description;","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"mingyuannus"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"mingyuannus"},"content":"    public void setIsDone(boolean isDone) {","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"mingyuannus"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"mingyuannus"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"mingyuannus"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"mingyuannus":21}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mingyuannus"},"content":"package duke;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"mingyuannus"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"mingyuannus"},"content":"    public Todo(String desc) {","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"mingyuannus"},"content":"        super(desc);","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"mingyuannus"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"mingyuannus"},"content":"}","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"mingyuannus":9}}]
