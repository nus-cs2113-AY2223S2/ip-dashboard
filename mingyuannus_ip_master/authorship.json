[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"mingyuannus"},"content":"### Adding and deleting tasks","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"mingyuannus"},"content":"Easily add or remove tasks with a single command.","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":8,"author":{"gitId":"mingyuannus"},"content":"### Viewing all tasks","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"mingyuannus"},"content":"See a list containing all of your tasks.","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"mingyuannus"},"content":"### 3 different types of tasks","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"mingyuannus"},"content":"The typical to-do, deadline for tasks that needs to be done by a certain time, and events with start and end times.","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":14,"author":{"gitId":"mingyuannus"},"content":"### Marking and unmarking tasks as done","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"mingyuannus"},"content":"Easily mark a task as completed, or unmark it if you changed your mind.","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"mingyuannus"},"content":"### Searching for tasks by keyword","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"mingyuannus"},"content":"If your task list is too long, you can search for specific tasks using a keyword.","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"mingyuannus"},"content":"---","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"mingyuannus"},"content":"### `list` - Displays all tasks","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"mingyuannus"},"content":"Shows a list containing all your tasks","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"mingyuannus"},"content":"`list`","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"mingyuannus"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"mingyuannus"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"mingyuannus"},"content":"    Here are the tasks in your list:","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"mingyuannus"},"content":"    1.[T][X] Buy stationaries","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"mingyuannus"},"content":"    2.[E][X] Attend class (from: 5pm to: 6pm)","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"mingyuannus"},"content":"    3.[D][ ] Do assignment (by: Friday 2359)","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"mingyuannus"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"mingyuannus"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"mingyuannus"},"content":"---","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"mingyuannus"},"content":"### `mark` - Marks a task as done","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"mingyuannus"},"content":"Indicate task to mark by its index in the task list","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"mingyuannus"},"content":"Example of usage:","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"mingyuannus"},"content":"`mark 1`","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"mingyuannus"},"content":"Expected outcome:","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"mingyuannus"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"mingyuannus"},"content":"    Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"mingyuannus"},"content":"[T][X] Buy stationaries","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"mingyuannus"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"mingyuannus"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"mingyuannus"},"content":"---","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"mingyuannus"},"content":"### `unmark` - Mark a task as not done","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"mingyuannus"},"content":"Indicate task to unmark by its index in the task list","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"mingyuannus"},"content":"Example of usage:","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"mingyuannus"},"content":"`unmark 1`","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"mingyuannus"},"content":"Expected outcome:","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"mingyuannus"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"mingyuannus"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":76,"author":{"gitId":"mingyuannus"},"content":"    OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"mingyuannus"},"content":"[T][ ] Buy stationaries","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"mingyuannus"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"mingyuannus"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":80,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"mingyuannus"},"content":"---","lastModifiedDate":"2023-03-03"},{"lineNumber":82,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":83,"author":{"gitId":"mingyuannus"},"content":"### `todo` - Create a new todo","lastModifiedDate":"2023-03-03"},{"lineNumber":84,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":85,"author":{"gitId":"mingyuannus"},"content":"A todo only has a description","lastModifiedDate":"2023-03-03"},{"lineNumber":86,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":87,"author":{"gitId":"mingyuannus"},"content":"Example of usage:","lastModifiedDate":"2023-03-03"},{"lineNumber":88,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":89,"author":{"gitId":"mingyuannus"},"content":"`todo Buy lunch`","lastModifiedDate":"2023-03-03"},{"lineNumber":90,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":91,"author":{"gitId":"mingyuannus"},"content":"Expected outcome:","lastModifiedDate":"2023-03-03"},{"lineNumber":92,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":93,"author":{"gitId":"mingyuannus"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":94,"author":{"gitId":"mingyuannus"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":95,"author":{"gitId":"mingyuannus"},"content":"    Got it. I\u0027ve added this task:","lastModifiedDate":"2023-03-03"},{"lineNumber":96,"author":{"gitId":"mingyuannus"},"content":"    [T][ ] Buy lunch","lastModifiedDate":"2023-03-03"},{"lineNumber":97,"author":{"gitId":"mingyuannus"},"content":"    Now you have 4 tasks in the list.","lastModifiedDate":"2023-03-03"},{"lineNumber":98,"author":{"gitId":"mingyuannus"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":99,"author":{"gitId":"mingyuannus"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":100,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":101,"author":{"gitId":"mingyuannus"},"content":"---","lastModifiedDate":"2023-03-03"},{"lineNumber":102,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":103,"author":{"gitId":"mingyuannus"},"content":"### `deadline` - Creates a new deadline","lastModifiedDate":"2023-03-03"},{"lineNumber":104,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":105,"author":{"gitId":"mingyuannus"},"content":"A deadline has a due date in addition to a description. Use the /by flag to indicate the due date.","lastModifiedDate":"2023-03-03"},{"lineNumber":106,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":107,"author":{"gitId":"mingyuannus"},"content":"Example of usage:","lastModifiedDate":"2023-03-03"},{"lineNumber":108,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":109,"author":{"gitId":"mingyuannus"},"content":"`deadline Submit assignment /by Mon 2359`","lastModifiedDate":"2023-03-03"},{"lineNumber":110,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":111,"author":{"gitId":"mingyuannus"},"content":"Expected outcome:","lastModifiedDate":"2023-03-03"},{"lineNumber":112,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":113,"author":{"gitId":"mingyuannus"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":114,"author":{"gitId":"mingyuannus"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":115,"author":{"gitId":"mingyuannus"},"content":"    Got it. I\u0027ve added this task:","lastModifiedDate":"2023-03-03"},{"lineNumber":116,"author":{"gitId":"mingyuannus"},"content":"    [D][ ] Submit assignment (by: Mon 2359)","lastModifiedDate":"2023-03-03"},{"lineNumber":117,"author":{"gitId":"mingyuannus"},"content":"    Now you have 5 tasks in the list.","lastModifiedDate":"2023-03-03"},{"lineNumber":118,"author":{"gitId":"mingyuannus"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":119,"author":{"gitId":"mingyuannus"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":120,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":121,"author":{"gitId":"mingyuannus"},"content":"---","lastModifiedDate":"2023-03-03"},{"lineNumber":122,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":123,"author":{"gitId":"mingyuannus"},"content":"### `event` - Create a new event","lastModifiedDate":"2023-03-03"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":125,"author":{"gitId":"mingyuannus"},"content":"An event has description, start time, and end time. Use /from to label the start time and /to to label the end time.","lastModifiedDate":"2023-03-03"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":129,"author":{"gitId":"mingyuannus"},"content":"`event Midterms /from 10am /to 12pm`","lastModifiedDate":"2023-03-03"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":133,"author":{"gitId":"mingyuannus"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":134,"author":{"gitId":"mingyuannus"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":135,"author":{"gitId":"mingyuannus"},"content":"    Got it. I\u0027ve added this task:","lastModifiedDate":"2023-03-03"},{"lineNumber":136,"author":{"gitId":"mingyuannus"},"content":"    [E][ ] Midterms (from: 10am to: 12pm)","lastModifiedDate":"2023-03-03"},{"lineNumber":137,"author":{"gitId":"mingyuannus"},"content":"    Now you have 6 tasks in the list.","lastModifiedDate":"2023-03-03"},{"lineNumber":138,"author":{"gitId":"mingyuannus"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":139,"author":{"gitId":"mingyuannus"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":140,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":141,"author":{"gitId":"mingyuannus"},"content":"---","lastModifiedDate":"2023-03-03"},{"lineNumber":142,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":143,"author":{"gitId":"mingyuannus"},"content":"### `delete` - Deletes a task by its index","lastModifiedDate":"2023-03-03"},{"lineNumber":144,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":145,"author":{"gitId":"mingyuannus"},"content":"Example of usage:","lastModifiedDate":"2023-03-03"},{"lineNumber":146,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":147,"author":{"gitId":"mingyuannus"},"content":"`delete 3`","lastModifiedDate":"2023-03-03"},{"lineNumber":148,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":149,"author":{"gitId":"mingyuannus"},"content":"Expected outcome:","lastModifiedDate":"2023-03-03"},{"lineNumber":150,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":151,"author":{"gitId":"mingyuannus"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":152,"author":{"gitId":"mingyuannus"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":153,"author":{"gitId":"mingyuannus"},"content":"    Noted. I\u0027ve removed this task:","lastModifiedDate":"2023-03-03"},{"lineNumber":154,"author":{"gitId":"mingyuannus"},"content":"[T][ ] Buy lunch","lastModifiedDate":"2023-03-03"},{"lineNumber":155,"author":{"gitId":"mingyuannus"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":156,"author":{"gitId":"mingyuannus"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":157,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":158,"author":{"gitId":"mingyuannus"},"content":"---","lastModifiedDate":"2023-03-03"},{"lineNumber":159,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":160,"author":{"gitId":"mingyuannus"},"content":"### `bye` - Exits the program","lastModifiedDate":"2023-03-03"},{"lineNumber":161,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":162,"author":{"gitId":"mingyuannus"},"content":"Example of usage:","lastModifiedDate":"2023-03-03"},{"lineNumber":163,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":164,"author":{"gitId":"mingyuannus"},"content":"`bye`","lastModifiedDate":"2023-03-03"},{"lineNumber":165,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":166,"author":{"gitId":"mingyuannus"},"content":"Expected outcome:","lastModifiedDate":"2023-03-03"},{"lineNumber":167,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":168,"author":{"gitId":"mingyuannus"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":169,"author":{"gitId":"mingyuannus"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":170,"author":{"gitId":"mingyuannus"},"content":"    Bye. Hope to see you again soon!","lastModifiedDate":"2023-03-03"},{"lineNumber":171,"author":{"gitId":"mingyuannus"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":172,"author":{"gitId":"mingyuannus"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":173,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":174,"author":{"gitId":"mingyuannus"},"content":"---","lastModifiedDate":"2023-03-03"},{"lineNumber":175,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":176,"author":{"gitId":"mingyuannus"},"content":"### `find` - Finds tasks based on a keyword","lastModifiedDate":"2023-03-03"},{"lineNumber":177,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":178,"author":{"gitId":"mingyuannus"},"content":"Example of usage:","lastModifiedDate":"2023-03-03"},{"lineNumber":179,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":180,"author":{"gitId":"mingyuannus"},"content":"`find assignment`","lastModifiedDate":"2023-03-03"},{"lineNumber":181,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":182,"author":{"gitId":"mingyuannus"},"content":"Expected outcome:","lastModifiedDate":"2023-03-03"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":184,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":185,"author":{"gitId":"mingyuannus"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":186,"author":{"gitId":"mingyuannus"},"content":"    Here are the tasks containing \u0027assignment\u0027:","lastModifiedDate":"2023-03-03"},{"lineNumber":187,"author":{"gitId":"mingyuannus"},"content":"    [D][ ] Submit assignment (by: Mon 2359)","lastModifiedDate":"2023-03-03"},{"lineNumber":188,"author":{"gitId":"mingyuannus"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"-":29,"mingyuannus":160}},{"path":"src/main/java/duke/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mingyuannus"},"content":"package duke;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"mingyuannus"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"mingyuannus"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"mingyuannus"},"content":" * Class representing a command and its parameters. Must be created using a command string.","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"mingyuannus"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"mingyuannus"},"content":"public class Command {","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"mingyuannus"},"content":"    private final CommandType type;","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"mingyuannus"},"content":"    private String value \u003d \"\";","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"mingyuannus"},"content":"    private final ArrayList\u003cParameter\u003e parameters;","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"mingyuannus"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"mingyuannus"},"content":"     * Constructor for a command.","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"mingyuannus"},"content":"     * @param input the full string of the entered command, including parameters","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"mingyuannus"},"content":"     * @throws IllegalCommandException command is invalid","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"mingyuannus"},"content":"     * @throws IllegalParameterException command is valid but parameter requirements are not satisfied","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"mingyuannus"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"mingyuannus"},"content":"    public Command(String input) throws IllegalCommandException, IllegalParameterException {","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"mingyuannus"},"content":"        String[] splitInput \u003d input.split(\" /\");","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"mingyuannus"},"content":"        // handle command","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"mingyuannus"},"content":"        String commandString \u003d splitInput[0].split(\" \", 2)[0];","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"mingyuannus"},"content":"        switch (commandString) {","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"mingyuannus"},"content":"            case \"list\":","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"mingyuannus"},"content":"                this.type \u003d CommandType.LIST;","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"mingyuannus"},"content":"                break;","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"mingyuannus"},"content":"            case \"mark\":","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"mingyuannus"},"content":"                this.type \u003d CommandType.MARK;","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"mingyuannus"},"content":"                break;","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"mingyuannus"},"content":"            case \"unmark\":","lastModifiedDate":"2023-02-04"},{"lineNumber":33,"author":{"gitId":"mingyuannus"},"content":"                this.type \u003d CommandType.UNMARK;","lastModifiedDate":"2023-02-04"},{"lineNumber":34,"author":{"gitId":"mingyuannus"},"content":"                break;","lastModifiedDate":"2023-02-04"},{"lineNumber":35,"author":{"gitId":"mingyuannus"},"content":"            case \"todo\":","lastModifiedDate":"2023-02-04"},{"lineNumber":36,"author":{"gitId":"mingyuannus"},"content":"                this.type \u003d CommandType.CREATE_TODO;","lastModifiedDate":"2023-02-04"},{"lineNumber":37,"author":{"gitId":"mingyuannus"},"content":"                break;","lastModifiedDate":"2023-02-04"},{"lineNumber":38,"author":{"gitId":"mingyuannus"},"content":"            case \"deadline\":","lastModifiedDate":"2023-02-04"},{"lineNumber":39,"author":{"gitId":"mingyuannus"},"content":"                this.type \u003d CommandType.CREATE_DEADLINE;","lastModifiedDate":"2023-02-04"},{"lineNumber":40,"author":{"gitId":"mingyuannus"},"content":"                break;","lastModifiedDate":"2023-02-04"},{"lineNumber":41,"author":{"gitId":"mingyuannus"},"content":"            case \"event\":","lastModifiedDate":"2023-02-04"},{"lineNumber":42,"author":{"gitId":"mingyuannus"},"content":"                this.type \u003d CommandType.CREATE_EVENT;","lastModifiedDate":"2023-02-04"},{"lineNumber":43,"author":{"gitId":"mingyuannus"},"content":"                break;","lastModifiedDate":"2023-02-04"},{"lineNumber":44,"author":{"gitId":"mingyuannus"},"content":"            case \"delete\":","lastModifiedDate":"2023-02-12"},{"lineNumber":45,"author":{"gitId":"mingyuannus"},"content":"                this.type \u003d CommandType.DELETE;","lastModifiedDate":"2023-02-12"},{"lineNumber":46,"author":{"gitId":"mingyuannus"},"content":"                break;","lastModifiedDate":"2023-02-12"},{"lineNumber":47,"author":{"gitId":"mingyuannus"},"content":"            case \"bye\":","lastModifiedDate":"2023-02-04"},{"lineNumber":48,"author":{"gitId":"mingyuannus"},"content":"                this.type \u003d CommandType.EXIT;","lastModifiedDate":"2023-02-04"},{"lineNumber":49,"author":{"gitId":"mingyuannus"},"content":"                break;","lastModifiedDate":"2023-02-04"},{"lineNumber":50,"author":{"gitId":"mingyuannus"},"content":"            case \"find\":","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"mingyuannus"},"content":"                this.type \u003d CommandType.FIND;","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"mingyuannus"},"content":"                break;","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"mingyuannus"},"content":"            default:","lastModifiedDate":"2023-02-04"},{"lineNumber":54,"author":{"gitId":"mingyuannus"},"content":"                throw new IllegalCommandException(IllegalCommandExceptionType.COMMAND_DOES_NOT_EXIST, commandString);","lastModifiedDate":"2023-02-04"},{"lineNumber":55,"author":{"gitId":"mingyuannus"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":56,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":57,"author":{"gitId":"mingyuannus"},"content":"        if (","lastModifiedDate":"2023-02-04"},{"lineNumber":58,"author":{"gitId":"mingyuannus"},"content":"                this.type \u003d\u003d CommandType.CREATE_TODO ||","lastModifiedDate":"2023-02-04"},{"lineNumber":59,"author":{"gitId":"mingyuannus"},"content":"                this.type \u003d\u003d CommandType.CREATE_DEADLINE ||","lastModifiedDate":"2023-02-04"},{"lineNumber":60,"author":{"gitId":"mingyuannus"},"content":"                this.type \u003d\u003d CommandType.CREATE_EVENT ||","lastModifiedDate":"2023-02-04"},{"lineNumber":61,"author":{"gitId":"mingyuannus"},"content":"                this.type \u003d\u003d CommandType.DELETE ||","lastModifiedDate":"2023-02-12"},{"lineNumber":62,"author":{"gitId":"mingyuannus"},"content":"                this.type \u003d\u003d CommandType.MARK ||","lastModifiedDate":"2023-02-04"},{"lineNumber":63,"author":{"gitId":"mingyuannus"},"content":"                this.type \u003d\u003d CommandType.UNMARK ||","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"mingyuannus"},"content":"                this.type \u003d\u003d CommandType.FIND","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"mingyuannus"},"content":"        ) {","lastModifiedDate":"2023-02-04"},{"lineNumber":66,"author":{"gitId":"mingyuannus"},"content":"            try {","lastModifiedDate":"2023-02-04"},{"lineNumber":67,"author":{"gitId":"mingyuannus"},"content":"                this.value \u003d splitInput[0].split(\" \", 2)[1];","lastModifiedDate":"2023-02-04"},{"lineNumber":68,"author":{"gitId":"mingyuannus"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-04"},{"lineNumber":69,"author":{"gitId":"mingyuannus"},"content":"                throw new IllegalCommandException(IllegalCommandExceptionType.MISSING_VALUE, commandString);","lastModifiedDate":"2023-02-04"},{"lineNumber":70,"author":{"gitId":"mingyuannus"},"content":"            }","lastModifiedDate":"2023-02-04"},{"lineNumber":71,"author":{"gitId":"mingyuannus"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":72,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":73,"author":{"gitId":"mingyuannus"},"content":"        // handle additional parameters","lastModifiedDate":"2023-02-04"},{"lineNumber":74,"author":{"gitId":"mingyuannus"},"content":"        this.parameters \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-04"},{"lineNumber":75,"author":{"gitId":"mingyuannus"},"content":"        for (int i \u003d 1; i \u003c splitInput.length; i++) {","lastModifiedDate":"2023-02-04"},{"lineNumber":76,"author":{"gitId":"mingyuannus"},"content":"            Parameter parameter \u003d new Parameter(splitInput[i]);","lastModifiedDate":"2023-02-04"},{"lineNumber":77,"author":{"gitId":"mingyuannus"},"content":"            parameters.add(parameter);","lastModifiedDate":"2023-02-04"},{"lineNumber":78,"author":{"gitId":"mingyuannus"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":79,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":80,"author":{"gitId":"mingyuannus"},"content":"        // handle missing parameters based on command type","lastModifiedDate":"2023-02-04"},{"lineNumber":81,"author":{"gitId":"mingyuannus"},"content":"        if (this.type \u003d\u003d CommandType.CREATE_DEADLINE) {","lastModifiedDate":"2023-02-04"},{"lineNumber":82,"author":{"gitId":"mingyuannus"},"content":"            this.getParameterValueByType(ParameterType.DEADLINE);","lastModifiedDate":"2023-02-04"},{"lineNumber":83,"author":{"gitId":"mingyuannus"},"content":"        } else if (this.type \u003d\u003d CommandType.CREATE_EVENT) {","lastModifiedDate":"2023-02-04"},{"lineNumber":84,"author":{"gitId":"mingyuannus"},"content":"            this.getParameterValueByType(ParameterType.EVENT_START);","lastModifiedDate":"2023-02-04"},{"lineNumber":85,"author":{"gitId":"mingyuannus"},"content":"            this.getParameterValueByType(ParameterType.EVENT_END);","lastModifiedDate":"2023-02-04"},{"lineNumber":86,"author":{"gitId":"mingyuannus"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":87,"author":{"gitId":"mingyuannus"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":88,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":89,"author":{"gitId":"mingyuannus"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":90,"author":{"gitId":"mingyuannus"},"content":"     * Gets the string value of the specified parameter type.","lastModifiedDate":"2023-03-03"},{"lineNumber":91,"author":{"gitId":"mingyuannus"},"content":"     * @param type the type of the parameter to query","lastModifiedDate":"2023-03-03"},{"lineNumber":92,"author":{"gitId":"mingyuannus"},"content":"     * @return the string value of the queried parameter type","lastModifiedDate":"2023-03-03"},{"lineNumber":93,"author":{"gitId":"mingyuannus"},"content":"     * @throws IllegalCommandException the command is missing the queried parameter type","lastModifiedDate":"2023-03-03"},{"lineNumber":94,"author":{"gitId":"mingyuannus"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":95,"author":{"gitId":"mingyuannus"},"content":"    public String getParameterValueByType(ParameterType type) throws IllegalCommandException {","lastModifiedDate":"2023-02-04"},{"lineNumber":96,"author":{"gitId":"mingyuannus"},"content":"        for (Parameter parameter : parameters) {","lastModifiedDate":"2023-02-04"},{"lineNumber":97,"author":{"gitId":"mingyuannus"},"content":"            if (parameter.getParameterType() \u003d\u003d type) {","lastModifiedDate":"2023-02-04"},{"lineNumber":98,"author":{"gitId":"mingyuannus"},"content":"                return parameter.getParameterValue();","lastModifiedDate":"2023-02-04"},{"lineNumber":99,"author":{"gitId":"mingyuannus"},"content":"            }","lastModifiedDate":"2023-02-04"},{"lineNumber":100,"author":{"gitId":"mingyuannus"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":101,"author":{"gitId":"mingyuannus"},"content":"        throw new IllegalCommandException(IllegalCommandExceptionType.MISSING_PARAMETER, type.toString().toLowerCase());","lastModifiedDate":"2023-02-04"},{"lineNumber":102,"author":{"gitId":"mingyuannus"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":103,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":104,"author":{"gitId":"mingyuannus"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":105,"author":{"gitId":"mingyuannus"},"content":"     * Executes the command.","lastModifiedDate":"2023-03-03"},{"lineNumber":106,"author":{"gitId":"mingyuannus"},"content":"     * @param tasks the list of tasks","lastModifiedDate":"2023-03-03"},{"lineNumber":107,"author":{"gitId":"mingyuannus"},"content":"     * @param ui the ui object","lastModifiedDate":"2023-03-03"},{"lineNumber":108,"author":{"gitId":"mingyuannus"},"content":"     * @param storage the storage object","lastModifiedDate":"2023-03-03"},{"lineNumber":109,"author":{"gitId":"mingyuannus"},"content":"     * @throws Exception some kind of error occurred","lastModifiedDate":"2023-03-03"},{"lineNumber":110,"author":{"gitId":"mingyuannus"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":111,"author":{"gitId":"mingyuannus"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws Exception {","lastModifiedDate":"2023-02-28"},{"lineNumber":112,"author":{"gitId":"mingyuannus"},"content":"        if (type \u003d\u003d CommandType.CREATE_TODO) {","lastModifiedDate":"2023-02-28"},{"lineNumber":113,"author":{"gitId":"mingyuannus"},"content":"            Task addedTask \u003d tasks.addTask(new Todo(value));","lastModifiedDate":"2023-02-28"},{"lineNumber":114,"author":{"gitId":"mingyuannus"},"content":"            storage.save(tasks);","lastModifiedDate":"2023-02-28"},{"lineNumber":115,"author":{"gitId":"mingyuannus"},"content":"            ui.showAddedTask(tasks, addedTask);","lastModifiedDate":"2023-02-28"},{"lineNumber":116,"author":{"gitId":"mingyuannus"},"content":"        } else if (type \u003d\u003d CommandType.CREATE_DEADLINE) {","lastModifiedDate":"2023-02-28"},{"lineNumber":117,"author":{"gitId":"mingyuannus"},"content":"            String description \u003d value;","lastModifiedDate":"2023-02-28"},{"lineNumber":118,"author":{"gitId":"mingyuannus"},"content":"            String deadline \u003d getParameterValueByType(ParameterType.DEADLINE);","lastModifiedDate":"2023-02-28"},{"lineNumber":119,"author":{"gitId":"mingyuannus"},"content":"            Task addedTask \u003d tasks.addTask(new Deadline(description, deadline));","lastModifiedDate":"2023-02-28"},{"lineNumber":120,"author":{"gitId":"mingyuannus"},"content":"            storage.save(tasks);","lastModifiedDate":"2023-02-28"},{"lineNumber":121,"author":{"gitId":"mingyuannus"},"content":"            ui.showAddedTask(tasks, addedTask);","lastModifiedDate":"2023-02-28"},{"lineNumber":122,"author":{"gitId":"mingyuannus"},"content":"        } else if (type \u003d\u003d CommandType.CREATE_EVENT) {","lastModifiedDate":"2023-02-28"},{"lineNumber":123,"author":{"gitId":"mingyuannus"},"content":"            String description \u003d value;","lastModifiedDate":"2023-02-28"},{"lineNumber":124,"author":{"gitId":"mingyuannus"},"content":"            String from \u003d getParameterValueByType(ParameterType.EVENT_START);","lastModifiedDate":"2023-02-28"},{"lineNumber":125,"author":{"gitId":"mingyuannus"},"content":"            String to \u003d getParameterValueByType(ParameterType.EVENT_END);","lastModifiedDate":"2023-02-28"},{"lineNumber":126,"author":{"gitId":"mingyuannus"},"content":"            Task addedTask \u003d tasks.addTask(new Event(description, from, to));","lastModifiedDate":"2023-02-28"},{"lineNumber":127,"author":{"gitId":"mingyuannus"},"content":"            ui.showAddedTask(tasks, addedTask);","lastModifiedDate":"2023-02-28"},{"lineNumber":128,"author":{"gitId":"mingyuannus"},"content":"        } else if (type \u003d\u003d CommandType.DELETE) {","lastModifiedDate":"2023-02-28"},{"lineNumber":129,"author":{"gitId":"mingyuannus"},"content":"            int displayedIndex \u003d Integer.parseInt(value);","lastModifiedDate":"2023-02-28"},{"lineNumber":130,"author":{"gitId":"mingyuannus"},"content":"            Task removedTask \u003d tasks.removeTaskByDisplayedIndex(displayedIndex);","lastModifiedDate":"2023-02-28"},{"lineNumber":131,"author":{"gitId":"mingyuannus"},"content":"            storage.save(tasks);","lastModifiedDate":"2023-02-28"},{"lineNumber":132,"author":{"gitId":"mingyuannus"},"content":"            ui.showRemovedTask(removedTask);","lastModifiedDate":"2023-02-28"},{"lineNumber":133,"author":{"gitId":"mingyuannus"},"content":"        } else if (type \u003d\u003d CommandType.LIST) {","lastModifiedDate":"2023-02-28"},{"lineNumber":134,"author":{"gitId":"mingyuannus"},"content":"            ui.showAllTasks(tasks);","lastModifiedDate":"2023-02-28"},{"lineNumber":135,"author":{"gitId":"mingyuannus"},"content":"        } else if (type \u003d\u003d CommandType.MARK) {","lastModifiedDate":"2023-02-28"},{"lineNumber":136,"author":{"gitId":"mingyuannus"},"content":"            int displayedIndex \u003d Integer.parseInt(value);","lastModifiedDate":"2023-02-28"},{"lineNumber":137,"author":{"gitId":"mingyuannus"},"content":"            Task markedTask \u003d tasks.markTaskByDisplayedIndex(displayedIndex);","lastModifiedDate":"2023-02-28"},{"lineNumber":138,"author":{"gitId":"mingyuannus"},"content":"            storage.save(tasks);","lastModifiedDate":"2023-02-28"},{"lineNumber":139,"author":{"gitId":"mingyuannus"},"content":"            ui.showMarkedTask(markedTask);","lastModifiedDate":"2023-02-28"},{"lineNumber":140,"author":{"gitId":"mingyuannus"},"content":"        } else if (type \u003d\u003d CommandType.UNMARK) {","lastModifiedDate":"2023-02-28"},{"lineNumber":141,"author":{"gitId":"mingyuannus"},"content":"            int displayedIndex \u003d Integer.parseInt(value);","lastModifiedDate":"2023-02-28"},{"lineNumber":142,"author":{"gitId":"mingyuannus"},"content":"            Task unmarkedTask \u003d tasks.unmarkTaskByDisplayedIndex(displayedIndex);","lastModifiedDate":"2023-02-28"},{"lineNumber":143,"author":{"gitId":"mingyuannus"},"content":"            storage.save(tasks);","lastModifiedDate":"2023-02-28"},{"lineNumber":144,"author":{"gitId":"mingyuannus"},"content":"            ui.showUnmarkedTask(unmarkedTask);","lastModifiedDate":"2023-02-28"},{"lineNumber":145,"author":{"gitId":"mingyuannus"},"content":"        } else if (type \u003d\u003d CommandType.FIND) {","lastModifiedDate":"2023-03-03"},{"lineNumber":146,"author":{"gitId":"mingyuannus"},"content":"            String keyword \u003d value;","lastModifiedDate":"2023-03-03"},{"lineNumber":147,"author":{"gitId":"mingyuannus"},"content":"            ArrayList\u003cTask\u003e foundTasks \u003d tasks.findTasksByKeyword(keyword);","lastModifiedDate":"2023-03-03"},{"lineNumber":148,"author":{"gitId":"mingyuannus"},"content":"            ui.showFoundTasks(foundTasks, keyword);","lastModifiedDate":"2023-03-03"},{"lineNumber":149,"author":{"gitId":"mingyuannus"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":150,"author":{"gitId":"mingyuannus"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":151,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":152,"author":{"gitId":"mingyuannus"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":153,"author":{"gitId":"mingyuannus"},"content":"     * Check if the command is the exit command.","lastModifiedDate":"2023-03-03"},{"lineNumber":154,"author":{"gitId":"mingyuannus"},"content":"     * @return boolean indicating if the program should exit","lastModifiedDate":"2023-03-03"},{"lineNumber":155,"author":{"gitId":"mingyuannus"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":156,"author":{"gitId":"mingyuannus"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-02-28"},{"lineNumber":157,"author":{"gitId":"mingyuannus"},"content":"        return type \u003d\u003d CommandType.EXIT;","lastModifiedDate":"2023-02-28"},{"lineNumber":158,"author":{"gitId":"mingyuannus"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":159,"author":{"gitId":"mingyuannus"},"content":"}","lastModifiedDate":"2023-02-04"},{"lineNumber":160,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":161,"author":{"gitId":"mingyuannus"},"content":"enum CommandType {","lastModifiedDate":"2023-02-04"},{"lineNumber":162,"author":{"gitId":"mingyuannus"},"content":"    LIST, MARK, UNMARK, CREATE_TODO, CREATE_DEADLINE, CREATE_EVENT, DELETE, EXIT, FIND","lastModifiedDate":"2023-03-03"},{"lineNumber":163,"author":{"gitId":"mingyuannus"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"mingyuannus":163}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mingyuannus"},"content":"package duke;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"mingyuannus"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"mingyuannus"},"content":" * Deadline subclass of Task","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"mingyuannus"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"mingyuannus"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"mingyuannus"},"content":"    String by;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"mingyuannus"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"mingyuannus"},"content":"     * Constructor for a Deadline object","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"mingyuannus"},"content":"     * @param description description of the Deadline","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"mingyuannus"},"content":"     * @param by string of the \"do by\" date","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"mingyuannus"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"mingyuannus"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"mingyuannus"},"content":"        super(description);","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"mingyuannus"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"mingyuannus"},"content":"        this.type \u003d TaskType.DEADLINE;","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"mingyuannus"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"mingyuannus"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"mingyuannus"},"content":"     * Gets a formatted string of the Deadline along with its properties","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"mingyuannus"},"content":"     * @return the formatted string","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"mingyuannus"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"mingyuannus"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"mingyuannus"},"content":"    public String getLabel() {","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"mingyuannus"},"content":"        String typeIndicator \u003d \"[D]\";","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"mingyuannus"},"content":"        String doneIndicator \u003d \"[\" + (this.isDone ? \"X\" : \" \") + \"]\";","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"mingyuannus"},"content":"        String suffix \u003d \"(by: \" + this.by + \")\";","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"mingyuannus"},"content":"        return typeIndicator + doneIndicator + \" \" + this.description + \" \" + suffix;","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"mingyuannus"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"mingyuannus"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"mingyuannus":31}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mingyuannus"},"content":"package duke;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"mingyuannus"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"mingyuannus"},"content":" * Class for the main program","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"mingyuannus"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"mingyuannus"},"content":"    private final Storage storage;","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"mingyuannus"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"mingyuannus"},"content":"    private final Ui ui;","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"mingyuannus"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"mingyuannus"},"content":"     * Constructor for the main program","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"mingyuannus"},"content":"     * @param filePath location of the storage file","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"mingyuannus"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"mingyuannus"},"content":"    public Duke (String filePath) {","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"mingyuannus"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"mingyuannus"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"mingyuannus"},"content":"        try {","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"mingyuannus"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"mingyuannus"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"mingyuannus"},"content":"            ui.showLoadingError(e);","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"mingyuannus"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"mingyuannus"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"mingyuannus"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"mingyuannus"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"mingyuannus"},"content":"     * Runs the main program","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"mingyuannus"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"mingyuannus"},"content":"    public void run() {","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"mingyuannus"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"mingyuannus"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"mingyuannus"},"content":"        while (!isExit) {","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"mingyuannus"},"content":"            try {","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"mingyuannus"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"mingyuannus"},"content":"                ui.showLine();","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"mingyuannus"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"mingyuannus"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"mingyuannus"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"mingyuannus"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"mingyuannus"},"content":"                ui.showError(e);","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"mingyuannus"},"content":"            } finally {","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"mingyuannus"},"content":"                ui.showLine();","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"mingyuannus"},"content":"            }","lastModifiedDate":"2023-02-12"},{"lineNumber":44,"author":{"gitId":"mingyuannus"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"mingyuannus"},"content":"        ui.showExitMessage();","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"mingyuannus"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":48,"author":{"gitId":"mingyuannus"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"mingyuannus"},"content":"        String home \u003d System.getProperty(\"user.home\");","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"mingyuannus"},"content":"        new Duke(home + \"/duke.txt\").run();","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"mingyuannus"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":52,"author":{"gitId":"mingyuannus"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"mingyuannus":51,"-":1}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mingyuannus"},"content":"package duke;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"mingyuannus"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"mingyuannus"},"content":" * Event subclass of Task","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"mingyuannus"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"mingyuannus"},"content":"public class Event extends Deadline {","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"mingyuannus"},"content":"    public String from;","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"mingyuannus"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"mingyuannus"},"content":"     * Constructor for an Event","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"mingyuannus"},"content":"     * @param description description of the Event","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"mingyuannus"},"content":"     * @param from starting time of the Event","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"mingyuannus"},"content":"     * @param to ending time of the Event","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"mingyuannus"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"mingyuannus"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"mingyuannus"},"content":"        super(description, to);","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"mingyuannus"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"mingyuannus"},"content":"        this.type \u003d TaskType.EVENT;","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"mingyuannus"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"mingyuannus"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"mingyuannus"},"content":"     * Gets a formatted string of the Event with properties","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"mingyuannus"},"content":"     * @return the formatted string","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"mingyuannus"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"mingyuannus"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"mingyuannus"},"content":"    public String getLabel() {","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"mingyuannus"},"content":"        String typeIndicator \u003d \"[E]\";","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"mingyuannus"},"content":"        String doneIndicator \u003d \"[\" + (this.isDone ? \"X\" : \" \") + \"]\";","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"mingyuannus"},"content":"        String suffix \u003d \"(from: \" + this.from + \" to: \" + this.by + \")\";","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"mingyuannus"},"content":"        return typeIndicator + doneIndicator + \" \" + this.description + \" \" + suffix;","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"mingyuannus"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"mingyuannus"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"mingyuannus":32}},{"path":"src/main/java/duke/IllegalCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mingyuannus"},"content":"package duke;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"mingyuannus"},"content":"public class IllegalCommandException extends Exception {","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"mingyuannus"},"content":"    public IllegalCommandExceptionType type;","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"mingyuannus"},"content":"    public String value;","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"mingyuannus"},"content":"    public IllegalCommandException(IllegalCommandExceptionType type, String value) {","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"mingyuannus"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"mingyuannus"},"content":"        this.value \u003d value;","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"mingyuannus"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"mingyuannus"},"content":"}","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"mingyuannus"},"content":"enum IllegalCommandExceptionType {","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"mingyuannus"},"content":"    COMMAND_DOES_NOT_EXIST, MISSING_VALUE, MISSING_PARAMETER","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"mingyuannus"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"mingyuannus":14}},{"path":"src/main/java/duke/IllegalParameterException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mingyuannus"},"content":"package duke;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"mingyuannus"},"content":"public class IllegalParameterException extends Exception {","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"mingyuannus"},"content":"    public IllegalParameterExceptionType type;","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"mingyuannus"},"content":"    public String value;","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"mingyuannus"},"content":"    public IllegalParameterException(IllegalParameterExceptionType type, String value) {","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"mingyuannus"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"mingyuannus"},"content":"        this.value \u003d value;","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"mingyuannus"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"mingyuannus"},"content":"}","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"mingyuannus"},"content":"enum IllegalParameterExceptionType {","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"mingyuannus"},"content":"    PARAMETER_DOES_NOT_EXIST, MISSING_VALUE","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"mingyuannus"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"mingyuannus":15}},{"path":"src/main/java/duke/Parameter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mingyuannus"},"content":"package duke;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"mingyuannus"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"mingyuannus"},"content":" * A class representing a parameter in a command","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"mingyuannus"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"mingyuannus"},"content":"public class Parameter {","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"mingyuannus"},"content":"    private final ParameterType type;","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"mingyuannus"},"content":"    private final String value;","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"mingyuannus"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"mingyuannus"},"content":"     * Constructor for a parameter object","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"mingyuannus"},"content":"     * @param input a substring of the command string representing a parameter flag and its value","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"mingyuannus"},"content":"     * @throws IllegalParameterException parameter flag is invalid or its value is missing","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"mingyuannus"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"mingyuannus"},"content":"    public Parameter(String input) throws IllegalParameterException {","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"mingyuannus"},"content":"        String parameterType \u003d input.split(\" \", 2)[0];","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"mingyuannus"},"content":"        switch (parameterType) {","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"mingyuannus"},"content":"            case \"by\":","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"mingyuannus"},"content":"                this.type \u003d ParameterType.DEADLINE;","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"mingyuannus"},"content":"                break;","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"mingyuannus"},"content":"            case \"from\":","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"mingyuannus"},"content":"                this.type \u003d ParameterType.EVENT_START;","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"mingyuannus"},"content":"                break;","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"mingyuannus"},"content":"            case \"to\":","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"mingyuannus"},"content":"                this.type \u003d ParameterType.EVENT_END;","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"mingyuannus"},"content":"                break;","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"mingyuannus"},"content":"            default:","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"mingyuannus"},"content":"                throw new IllegalParameterException(IllegalParameterExceptionType.PARAMETER_DOES_NOT_EXIST, parameterType);","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"mingyuannus"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"mingyuannus"},"content":"        try {","lastModifiedDate":"2023-02-04"},{"lineNumber":33,"author":{"gitId":"mingyuannus"},"content":"            this.value \u003d input.split(\" \", 2)[1];","lastModifiedDate":"2023-02-04"},{"lineNumber":34,"author":{"gitId":"mingyuannus"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-04"},{"lineNumber":35,"author":{"gitId":"mingyuannus"},"content":"            throw new IllegalParameterException(IllegalParameterExceptionType.MISSING_VALUE, parameterType);","lastModifiedDate":"2023-02-04"},{"lineNumber":36,"author":{"gitId":"mingyuannus"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":37,"author":{"gitId":"mingyuannus"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":38,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":39,"author":{"gitId":"mingyuannus"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"mingyuannus"},"content":"     * Getter for parameter type","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"mingyuannus"},"content":"     * @return the parameter type","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"mingyuannus"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"mingyuannus"},"content":"    public ParameterType getParameterType() {","lastModifiedDate":"2023-02-04"},{"lineNumber":44,"author":{"gitId":"mingyuannus"},"content":"        return this.type;","lastModifiedDate":"2023-02-04"},{"lineNumber":45,"author":{"gitId":"mingyuannus"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":46,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":47,"author":{"gitId":"mingyuannus"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"mingyuannus"},"content":"     * Getter for parameter value","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"mingyuannus"},"content":"     * @return the parameter value","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"mingyuannus"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"mingyuannus"},"content":"    public String getParameterValue() {","lastModifiedDate":"2023-02-04"},{"lineNumber":52,"author":{"gitId":"mingyuannus"},"content":"        return this.value;","lastModifiedDate":"2023-02-04"},{"lineNumber":53,"author":{"gitId":"mingyuannus"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":54,"author":{"gitId":"mingyuannus"},"content":"}","lastModifiedDate":"2023-02-04"},{"lineNumber":55,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":56,"author":{"gitId":"mingyuannus"},"content":"enum ParameterType {","lastModifiedDate":"2023-02-04"},{"lineNumber":57,"author":{"gitId":"mingyuannus"},"content":"    DEADLINE, EVENT_START, EVENT_END","lastModifiedDate":"2023-02-04"},{"lineNumber":58,"author":{"gitId":"mingyuannus"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"mingyuannus":58}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mingyuannus"},"content":"package duke;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"mingyuannus"},"content":"public class Parser {","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"mingyuannus"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"mingyuannus"},"content":"     * Creates a new command object given the full command string","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"mingyuannus"},"content":"     * @param fullCommand the command string as entered by the user","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"mingyuannus"},"content":"     * @return the created command object","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"mingyuannus"},"content":"     * @throws IllegalCommandException command is invalid or parameter flags are invalid","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"mingyuannus"},"content":"     * @throws IllegalParameterException command has valid format but has invalid parameter values","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"mingyuannus"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"mingyuannus"},"content":"    public static Command parse(String fullCommand) throws IllegalCommandException, IllegalParameterException {","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"mingyuannus"},"content":"        return new Command(fullCommand);","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"mingyuannus"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"mingyuannus"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"mingyuannus":14}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mingyuannus"},"content":"package duke;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"mingyuannus"},"content":"import java.io.*;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"mingyuannus"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"mingyuannus"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"mingyuannus"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"mingyuannus"},"content":" * Class to handle storage","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"mingyuannus"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"mingyuannus"},"content":"public class Storage {","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"mingyuannus"},"content":"    private final String filePath;","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"mingyuannus"},"content":"    private final String divider \u003d \" / \";","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"mingyuannus"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"mingyuannus"},"content":"     * Constructor for a new storage object","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"mingyuannus"},"content":"     * @param filePath location for the storage file","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"mingyuannus"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"mingyuannus"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"mingyuannus"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"mingyuannus"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"mingyuannus"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"mingyuannus"},"content":"     * Reads the storage file and loads the data into a task list","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"mingyuannus"},"content":"     * @return an ArrayList of the loaded tasks","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"mingyuannus"},"content":"     * @throws Exception error encountered when loading data","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"mingyuannus"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"mingyuannus"},"content":"    public ArrayList\u003cTask\u003e load() throws Exception {","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"mingyuannus"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"mingyuannus"},"content":"        try {","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"mingyuannus"},"content":"            File file \u003d new java.io.File(filePath);","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"mingyuannus"},"content":"            Scanner fileReader \u003d new Scanner(file);","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"mingyuannus"},"content":"            while (fileReader.hasNextLine()) {","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"mingyuannus"},"content":"                String data \u003d fileReader.nextLine();","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"mingyuannus"},"content":"                tasks.add(string2Task(data));","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"mingyuannus"},"content":"            }","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"mingyuannus"},"content":"        } catch (FileNotFoundException fe) {","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"mingyuannus"},"content":"            File file \u003d new java.io.File(filePath);","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"mingyuannus"},"content":"            try {","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"mingyuannus"},"content":"                file.createNewFile();","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"mingyuannus"},"content":"            } catch (IOException ioe) {","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"mingyuannus"},"content":"                throw new Exception(\"Error creating new data file. \" + ioe);","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"mingyuannus"},"content":"            }","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"mingyuannus"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"mingyuannus"},"content":"        return tasks;","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"mingyuannus"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"mingyuannus"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"mingyuannus"},"content":"     * Saves the tasks in memory to the data file","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"mingyuannus"},"content":"     * @param taskList the TaskList object","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"mingyuannus"},"content":"     * @throws Exception error occurred when saving","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"mingyuannus"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"mingyuannus"},"content":"    public void save(TaskList taskList) throws Exception {","lastModifiedDate":"2023-02-28"},{"lineNumber":56,"author":{"gitId":"mingyuannus"},"content":"        StringBuilder data \u003d new StringBuilder();","lastModifiedDate":"2023-02-28"},{"lineNumber":57,"author":{"gitId":"mingyuannus"},"content":"        for (Task task : taskList.getAllTasks()) {","lastModifiedDate":"2023-02-28"},{"lineNumber":58,"author":{"gitId":"mingyuannus"},"content":"            data.append(task2String(task));","lastModifiedDate":"2023-02-28"},{"lineNumber":59,"author":{"gitId":"mingyuannus"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":60,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":61,"author":{"gitId":"mingyuannus"},"content":"        try {","lastModifiedDate":"2023-02-28"},{"lineNumber":62,"author":{"gitId":"mingyuannus"},"content":"            FileWriter writer \u003d new FileWriter(filePath);","lastModifiedDate":"2023-02-28"},{"lineNumber":63,"author":{"gitId":"mingyuannus"},"content":"            writer.write(data.toString());","lastModifiedDate":"2023-02-28"},{"lineNumber":64,"author":{"gitId":"mingyuannus"},"content":"            writer.close();","lastModifiedDate":"2023-02-28"},{"lineNumber":65,"author":{"gitId":"mingyuannus"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-28"},{"lineNumber":66,"author":{"gitId":"mingyuannus"},"content":"            throw new Exception(\"Error saving data to file.\");","lastModifiedDate":"2023-02-28"},{"lineNumber":67,"author":{"gitId":"mingyuannus"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":68,"author":{"gitId":"mingyuannus"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":69,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":70,"author":{"gitId":"mingyuannus"},"content":"    private String task2String(Task task) {","lastModifiedDate":"2023-02-28"},{"lineNumber":71,"author":{"gitId":"mingyuannus"},"content":"        String result \u003d \"\";","lastModifiedDate":"2023-02-28"},{"lineNumber":72,"author":{"gitId":"mingyuannus"},"content":"        switch (task.type) {","lastModifiedDate":"2023-02-28"},{"lineNumber":73,"author":{"gitId":"mingyuannus"},"content":"            case TODO:","lastModifiedDate":"2023-02-28"},{"lineNumber":74,"author":{"gitId":"mingyuannus"},"content":"                Todo todo \u003d (Todo) task;","lastModifiedDate":"2023-02-28"},{"lineNumber":75,"author":{"gitId":"mingyuannus"},"content":"                result \u003d result.concat(\"TODO\" + divider);","lastModifiedDate":"2023-02-28"},{"lineNumber":76,"author":{"gitId":"mingyuannus"},"content":"                result \u003d result.concat((todo.isDone ? \"YES\" : \"NO\") + divider);","lastModifiedDate":"2023-02-28"},{"lineNumber":77,"author":{"gitId":"mingyuannus"},"content":"                result \u003d result.concat(todo.description + \"\\n\");","lastModifiedDate":"2023-02-28"},{"lineNumber":78,"author":{"gitId":"mingyuannus"},"content":"                break;","lastModifiedDate":"2023-02-28"},{"lineNumber":79,"author":{"gitId":"mingyuannus"},"content":"            case DEADLINE:","lastModifiedDate":"2023-02-28"},{"lineNumber":80,"author":{"gitId":"mingyuannus"},"content":"                Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2023-02-28"},{"lineNumber":81,"author":{"gitId":"mingyuannus"},"content":"                result \u003d result.concat(\"DEADLINE\" + divider);","lastModifiedDate":"2023-02-28"},{"lineNumber":82,"author":{"gitId":"mingyuannus"},"content":"                result \u003d result.concat((deadline.isDone ? \"YES\" : \"NO\") + divider);","lastModifiedDate":"2023-02-28"},{"lineNumber":83,"author":{"gitId":"mingyuannus"},"content":"                result \u003d result.concat(deadline.description + divider);","lastModifiedDate":"2023-02-28"},{"lineNumber":84,"author":{"gitId":"mingyuannus"},"content":"                result \u003d result.concat(deadline.by + \"\\n\");","lastModifiedDate":"2023-02-28"},{"lineNumber":85,"author":{"gitId":"mingyuannus"},"content":"                break;","lastModifiedDate":"2023-02-28"},{"lineNumber":86,"author":{"gitId":"mingyuannus"},"content":"            case EVENT:","lastModifiedDate":"2023-02-28"},{"lineNumber":87,"author":{"gitId":"mingyuannus"},"content":"                Event event \u003d (Event) task;","lastModifiedDate":"2023-02-28"},{"lineNumber":88,"author":{"gitId":"mingyuannus"},"content":"                result \u003d result.concat(\"EVENT\" + divider);","lastModifiedDate":"2023-02-28"},{"lineNumber":89,"author":{"gitId":"mingyuannus"},"content":"                result \u003d result.concat((event.isDone ? \"YES\" : \"NO\") + divider);","lastModifiedDate":"2023-02-28"},{"lineNumber":90,"author":{"gitId":"mingyuannus"},"content":"                result \u003d result.concat(event.description + divider);","lastModifiedDate":"2023-02-28"},{"lineNumber":91,"author":{"gitId":"mingyuannus"},"content":"                result \u003d result.concat(event.from + divider);","lastModifiedDate":"2023-02-28"},{"lineNumber":92,"author":{"gitId":"mingyuannus"},"content":"                result \u003d result.concat(event.by + \"\\n\");","lastModifiedDate":"2023-02-28"},{"lineNumber":93,"author":{"gitId":"mingyuannus"},"content":"                break;","lastModifiedDate":"2023-02-28"},{"lineNumber":94,"author":{"gitId":"mingyuannus"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":95,"author":{"gitId":"mingyuannus"},"content":"        return result;","lastModifiedDate":"2023-02-28"},{"lineNumber":96,"author":{"gitId":"mingyuannus"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":97,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":98,"author":{"gitId":"mingyuannus"},"content":"    private Task string2Task(String string) throws Exception {","lastModifiedDate":"2023-02-28"},{"lineNumber":99,"author":{"gitId":"mingyuannus"},"content":"        String[] parts \u003d string.split(divider);","lastModifiedDate":"2023-02-28"},{"lineNumber":100,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":101,"author":{"gitId":"mingyuannus"},"content":"        boolean isDone \u003d parts[1].equals(\"YES\");","lastModifiedDate":"2023-02-28"},{"lineNumber":102,"author":{"gitId":"mingyuannus"},"content":"        String description \u003d parts[2];","lastModifiedDate":"2023-02-28"},{"lineNumber":103,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":104,"author":{"gitId":"mingyuannus"},"content":"        Task task;","lastModifiedDate":"2023-02-28"},{"lineNumber":105,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":106,"author":{"gitId":"mingyuannus"},"content":"        switch (parts[0]) {","lastModifiedDate":"2023-02-28"},{"lineNumber":107,"author":{"gitId":"mingyuannus"},"content":"            case \"TODO\":","lastModifiedDate":"2023-02-28"},{"lineNumber":108,"author":{"gitId":"mingyuannus"},"content":"                task \u003d new Todo(description);","lastModifiedDate":"2023-02-28"},{"lineNumber":109,"author":{"gitId":"mingyuannus"},"content":"                task.setIsDone(isDone);","lastModifiedDate":"2023-02-28"},{"lineNumber":110,"author":{"gitId":"mingyuannus"},"content":"                break;","lastModifiedDate":"2023-02-28"},{"lineNumber":111,"author":{"gitId":"mingyuannus"},"content":"            case \"DEADLINE\":","lastModifiedDate":"2023-02-28"},{"lineNumber":112,"author":{"gitId":"mingyuannus"},"content":"                String by \u003d parts[3];","lastModifiedDate":"2023-02-28"},{"lineNumber":113,"author":{"gitId":"mingyuannus"},"content":"                task \u003d new Deadline(description, by);","lastModifiedDate":"2023-02-28"},{"lineNumber":114,"author":{"gitId":"mingyuannus"},"content":"                task.setIsDone(isDone);","lastModifiedDate":"2023-02-28"},{"lineNumber":115,"author":{"gitId":"mingyuannus"},"content":"                break;","lastModifiedDate":"2023-02-28"},{"lineNumber":116,"author":{"gitId":"mingyuannus"},"content":"            case \"EVENT\":","lastModifiedDate":"2023-02-28"},{"lineNumber":117,"author":{"gitId":"mingyuannus"},"content":"                String from \u003d parts[3];","lastModifiedDate":"2023-02-28"},{"lineNumber":118,"author":{"gitId":"mingyuannus"},"content":"                String to \u003d parts[4];","lastModifiedDate":"2023-02-28"},{"lineNumber":119,"author":{"gitId":"mingyuannus"},"content":"                task \u003d new Event(description, from, to);","lastModifiedDate":"2023-02-28"},{"lineNumber":120,"author":{"gitId":"mingyuannus"},"content":"                task.setIsDone(isDone);","lastModifiedDate":"2023-02-28"},{"lineNumber":121,"author":{"gitId":"mingyuannus"},"content":"                break;","lastModifiedDate":"2023-02-28"},{"lineNumber":122,"author":{"gitId":"mingyuannus"},"content":"            default:","lastModifiedDate":"2023-02-28"},{"lineNumber":123,"author":{"gitId":"mingyuannus"},"content":"                throw new Exception(\"Data file corrupted.\");","lastModifiedDate":"2023-02-28"},{"lineNumber":124,"author":{"gitId":"mingyuannus"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":125,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":126,"author":{"gitId":"mingyuannus"},"content":"        return task;","lastModifiedDate":"2023-02-28"},{"lineNumber":127,"author":{"gitId":"mingyuannus"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":128,"author":{"gitId":"mingyuannus"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"mingyuannus":128}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mingyuannus"},"content":"package duke;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"mingyuannus"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"mingyuannus"},"content":" * The task superclass","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"mingyuannus"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"mingyuannus"},"content":"public class Task {","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"mingyuannus"},"content":"    final String description;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"mingyuannus"},"content":"    boolean isDone;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"mingyuannus"},"content":"    TaskType type;","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"mingyuannus"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"mingyuannus"},"content":"     * Constructor for a Task object","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"mingyuannus"},"content":"     * @param desc description of the task","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"mingyuannus"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"mingyuannus"},"content":"    public Task(String desc) {","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"mingyuannus"},"content":"        this.description \u003d desc;","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"mingyuannus"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"mingyuannus"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"mingyuannus"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"mingyuannus"},"content":"     * Gets a formatted label of the task","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"mingyuannus"},"content":"     * @return the formatted string","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"mingyuannus"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"mingyuannus"},"content":"    public String getLabel() {","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"mingyuannus"},"content":"        String typeIndicator \u003d \"[T]\";","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"mingyuannus"},"content":"        String doneIndicator \u003d \"[\" + (this.isDone ? \"X\" : \" \") + \"]\";","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"mingyuannus"},"content":"        return typeIndicator + doneIndicator + \" \" + this.description;","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"mingyuannus"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"mingyuannus"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"mingyuannus"},"content":"     * Marks the task as either done or not done","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"mingyuannus"},"content":"     * @param isDone the new done status of the task","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"mingyuannus"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"mingyuannus"},"content":"    public void setIsDone(boolean isDone) {","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"mingyuannus"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"mingyuannus"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"mingyuannus"},"content":"}","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"mingyuannus"},"content":"enum TaskType {","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"mingyuannus"},"content":"    TODO, EVENT, DEADLINE","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"mingyuannus"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"mingyuannus":42}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mingyuannus"},"content":"package duke;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"mingyuannus"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"mingyuannus"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"mingyuannus"},"content":" * Class representing a list of tasks and its associated functions","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"mingyuannus"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"mingyuannus"},"content":"public class TaskList {","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"mingyuannus"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"mingyuannus"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"mingyuannus"},"content":"     * Constructor for a task list if there is already a list of tasks.","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"mingyuannus"},"content":"     * @param tasks ArrayList of tasks","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"mingyuannus"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"mingyuannus"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"mingyuannus"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"mingyuannus"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"mingyuannus"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"mingyuannus"},"content":"     * Constructor for a new task list, will be empty.","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"mingyuannus"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"mingyuannus"},"content":"    public TaskList() {","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"mingyuannus"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"mingyuannus"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"mingyuannus"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"mingyuannus"},"content":"     * Getter for all tasks in the task list","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"mingyuannus"},"content":"     * @return ArrayList containing all tasks","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"mingyuannus"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"mingyuannus"},"content":"    public ArrayList\u003cTask\u003e getAllTasks() {","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"mingyuannus"},"content":"        return tasks;","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"mingyuannus"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"mingyuannus"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"mingyuannus"},"content":"     * Adds a new task to the task list","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"mingyuannus"},"content":"     * @param task the task to be added","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"mingyuannus"},"content":"     * @return the task that was just added","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"mingyuannus"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"mingyuannus"},"content":"    public Task addTask(Task task) {","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"mingyuannus"},"content":"        tasks.add(task);","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"mingyuannus"},"content":"        return task;","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"mingyuannus"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"mingyuannus"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"mingyuannus"},"content":"     * Remove a task by its displayed index","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"mingyuannus"},"content":"     * @param displayedIndex the displayed index of the task","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"mingyuannus"},"content":"     * @return the task that was just removed","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"mingyuannus"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"mingyuannus"},"content":"    public Task removeTaskByDisplayedIndex(int displayedIndex) {","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"mingyuannus"},"content":"        Task task \u003d tasks.get(displayedIndex-1);","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"mingyuannus"},"content":"        tasks.remove(displayedIndex-1);","lastModifiedDate":"2023-02-28"},{"lineNumber":52,"author":{"gitId":"mingyuannus"},"content":"        return task;","lastModifiedDate":"2023-02-28"},{"lineNumber":53,"author":{"gitId":"mingyuannus"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":54,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":55,"author":{"gitId":"mingyuannus"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"mingyuannus"},"content":"     * Marks a task as done by its displayed index","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"mingyuannus"},"content":"     * @param displayedIndex the displayed index of the task","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"mingyuannus"},"content":"     * @return the task that was just marked","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"mingyuannus"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"mingyuannus"},"content":"    public Task markTaskByDisplayedIndex(int displayedIndex) {","lastModifiedDate":"2023-02-28"},{"lineNumber":61,"author":{"gitId":"mingyuannus"},"content":"        tasks.get(displayedIndex-1).setIsDone(true);","lastModifiedDate":"2023-02-28"},{"lineNumber":62,"author":{"gitId":"mingyuannus"},"content":"        return tasks.get(displayedIndex-1);","lastModifiedDate":"2023-02-28"},{"lineNumber":63,"author":{"gitId":"mingyuannus"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":64,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":65,"author":{"gitId":"mingyuannus"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"mingyuannus"},"content":"     * Marks a task as not done by its displayed index","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"mingyuannus"},"content":"     * @param displayedIndex the displayed index of the task","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"mingyuannus"},"content":"     * @return the task that was just unmarked","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"mingyuannus"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"mingyuannus"},"content":"    public Task unmarkTaskByDisplayedIndex(int displayedIndex) {","lastModifiedDate":"2023-02-28"},{"lineNumber":71,"author":{"gitId":"mingyuannus"},"content":"        tasks.get(displayedIndex-1).setIsDone(false);","lastModifiedDate":"2023-02-28"},{"lineNumber":72,"author":{"gitId":"mingyuannus"},"content":"        return tasks.get(displayedIndex-1);","lastModifiedDate":"2023-02-28"},{"lineNumber":73,"author":{"gitId":"mingyuannus"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":74,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"mingyuannus"},"content":"    public ArrayList\u003cTask\u003e findTasksByKeyword(String keyword) {","lastModifiedDate":"2023-03-03"},{"lineNumber":76,"author":{"gitId":"mingyuannus"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"mingyuannus"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"mingyuannus"},"content":"            if (task.description.contains(keyword)) {","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"mingyuannus"},"content":"                foundTasks.add(task);","lastModifiedDate":"2023-03-03"},{"lineNumber":80,"author":{"gitId":"mingyuannus"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"mingyuannus"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":82,"author":{"gitId":"mingyuannus"},"content":"        return foundTasks;","lastModifiedDate":"2023-03-03"},{"lineNumber":83,"author":{"gitId":"mingyuannus"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":84,"author":{"gitId":"mingyuannus"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"mingyuannus":84}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mingyuannus"},"content":"package duke;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"mingyuannus"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"mingyuannus"},"content":" * Todo task subclass","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"mingyuannus"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"mingyuannus"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"mingyuannus"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"mingyuannus"},"content":"     * Constructor for a new Todo","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"mingyuannus"},"content":"     * @param desc the description of the Todo","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"mingyuannus"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"mingyuannus"},"content":"    public Todo(String desc) {","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"mingyuannus"},"content":"        super(desc);","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"mingyuannus"},"content":"        this.type \u003d TaskType.TODO;","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"mingyuannus"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"mingyuannus"},"content":"}","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"mingyuannus":16}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mingyuannus"},"content":"package duke;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"mingyuannus"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"mingyuannus"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"mingyuannus"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"mingyuannus"},"content":" * Class to handle printing messages to the user","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"mingyuannus"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"mingyuannus"},"content":"public class Ui {","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"mingyuannus"},"content":"    private final Scanner scanner;","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"mingyuannus"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"mingyuannus"},"content":"     * Constructor for a new Ui object","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"mingyuannus"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"mingyuannus"},"content":"    public Ui() {","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"mingyuannus"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"mingyuannus"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"mingyuannus"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"mingyuannus"},"content":"     * Shows the welcome message","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"mingyuannus"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"mingyuannus"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"mingyuannus"},"content":"        showLine();","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"mingyuannus"},"content":"        System.out.println(\"    Hello! I\u0027m Duke\");","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"mingyuannus"},"content":"        System.out.println(\"    What can I do for you?\");","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"mingyuannus"},"content":"        showLine();","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"mingyuannus"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"mingyuannus"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"mingyuannus"},"content":"     * Shows the error when loading the program","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"mingyuannus"},"content":"     * @param e the error","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"mingyuannus"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"mingyuannus"},"content":"    public void showLoadingError(Exception e) {","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"mingyuannus"},"content":"        showLine();","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"mingyuannus"},"content":"        System.out.println(\"    Loading error!\");","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"mingyuannus"},"content":"        System.out.println(\"    \" + e);","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"mingyuannus"},"content":"        showLine();","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"mingyuannus"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"mingyuannus"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"mingyuannus"},"content":"     * Reads an input from the user","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"mingyuannus"},"content":"     * @return the string that was inputted","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"mingyuannus"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"mingyuannus"},"content":"    public String readCommand() {","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"mingyuannus"},"content":"        return scanner.nextLine();","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"mingyuannus"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"mingyuannus"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"mingyuannus"},"content":"     * Displays a line separator","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"mingyuannus"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"mingyuannus"},"content":"    public void showLine() {","lastModifiedDate":"2023-02-28"},{"lineNumber":52,"author":{"gitId":"mingyuannus"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-02-28"},{"lineNumber":53,"author":{"gitId":"mingyuannus"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":54,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":55,"author":{"gitId":"mingyuannus"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"mingyuannus"},"content":"     * Shows an error caught during the execution of commands","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"mingyuannus"},"content":"     * @param e the error caught","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"mingyuannus"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"mingyuannus"},"content":"    public void showError(Exception e) {","lastModifiedDate":"2023-02-28"},{"lineNumber":60,"author":{"gitId":"mingyuannus"},"content":"        switch (e.getClass().getName()) {","lastModifiedDate":"2023-02-28"},{"lineNumber":61,"author":{"gitId":"mingyuannus"},"content":"            case \"duke.IllegalCommandException\":","lastModifiedDate":"2023-02-28"},{"lineNumber":62,"author":{"gitId":"mingyuannus"},"content":"                IllegalCommandException commandError \u003d (IllegalCommandException) e;","lastModifiedDate":"2023-02-28"},{"lineNumber":63,"author":{"gitId":"mingyuannus"},"content":"                if (commandError.type \u003d\u003d IllegalCommandExceptionType.COMMAND_DOES_NOT_EXIST) {","lastModifiedDate":"2023-02-28"},{"lineNumber":64,"author":{"gitId":"mingyuannus"},"content":"                    showLine();","lastModifiedDate":"2023-02-28"},{"lineNumber":65,"author":{"gitId":"mingyuannus"},"content":"                    System.out.println(\"    Error: The command \u0027\" + commandError.value + \"\u0027 does not exist!\");","lastModifiedDate":"2023-02-28"},{"lineNumber":66,"author":{"gitId":"mingyuannus"},"content":"                    showLine();","lastModifiedDate":"2023-02-28"},{"lineNumber":67,"author":{"gitId":"mingyuannus"},"content":"                } else if (commandError.type \u003d\u003d IllegalCommandExceptionType.MISSING_VALUE) {","lastModifiedDate":"2023-02-28"},{"lineNumber":68,"author":{"gitId":"mingyuannus"},"content":"                    showLine();","lastModifiedDate":"2023-02-28"},{"lineNumber":69,"author":{"gitId":"mingyuannus"},"content":"                    System.out.println(\"    Error: Missing value after \u0027\" + commandError.value + \"\u0027 command!\");","lastModifiedDate":"2023-02-28"},{"lineNumber":70,"author":{"gitId":"mingyuannus"},"content":"                    showLine();","lastModifiedDate":"2023-02-28"},{"lineNumber":71,"author":{"gitId":"mingyuannus"},"content":"                } else if (commandError.type \u003d\u003d IllegalCommandExceptionType.MISSING_PARAMETER) {","lastModifiedDate":"2023-02-28"},{"lineNumber":72,"author":{"gitId":"mingyuannus"},"content":"                    showLine();","lastModifiedDate":"2023-02-28"},{"lineNumber":73,"author":{"gitId":"mingyuannus"},"content":"                    System.out.println(\"    Error: This command requires the \u0027\" + commandError.value + \"\u0027 parameter!\");","lastModifiedDate":"2023-02-28"},{"lineNumber":74,"author":{"gitId":"mingyuannus"},"content":"                    showLine();","lastModifiedDate":"2023-02-28"},{"lineNumber":75,"author":{"gitId":"mingyuannus"},"content":"                }","lastModifiedDate":"2023-02-28"},{"lineNumber":76,"author":{"gitId":"mingyuannus"},"content":"                break;","lastModifiedDate":"2023-02-28"},{"lineNumber":77,"author":{"gitId":"mingyuannus"},"content":"            case \"duke.IllegalParameterException\":","lastModifiedDate":"2023-02-28"},{"lineNumber":78,"author":{"gitId":"mingyuannus"},"content":"                IllegalParameterException parameterError \u003d (IllegalParameterException) e;","lastModifiedDate":"2023-02-28"},{"lineNumber":79,"author":{"gitId":"mingyuannus"},"content":"                if (parameterError.type \u003d\u003d IllegalParameterExceptionType.PARAMETER_DOES_NOT_EXIST) {","lastModifiedDate":"2023-02-28"},{"lineNumber":80,"author":{"gitId":"mingyuannus"},"content":"                    showLine();","lastModifiedDate":"2023-02-28"},{"lineNumber":81,"author":{"gitId":"mingyuannus"},"content":"                    System.out.println(\"    Error: The parameter \u0027\" + parameterError.value + \"\u0027 does not exist!\");","lastModifiedDate":"2023-02-28"},{"lineNumber":82,"author":{"gitId":"mingyuannus"},"content":"                    showLine();","lastModifiedDate":"2023-02-28"},{"lineNumber":83,"author":{"gitId":"mingyuannus"},"content":"                } else if (parameterError.type \u003d\u003d IllegalParameterExceptionType.MISSING_VALUE) {","lastModifiedDate":"2023-02-28"},{"lineNumber":84,"author":{"gitId":"mingyuannus"},"content":"                    showLine();","lastModifiedDate":"2023-02-28"},{"lineNumber":85,"author":{"gitId":"mingyuannus"},"content":"                    System.out.println(\"    Error: Missing value after \u0027\" + parameterError.value + \"\u0027 parameter!\");","lastModifiedDate":"2023-02-28"},{"lineNumber":86,"author":{"gitId":"mingyuannus"},"content":"                    showLine();","lastModifiedDate":"2023-02-28"},{"lineNumber":87,"author":{"gitId":"mingyuannus"},"content":"                }","lastModifiedDate":"2023-02-28"},{"lineNumber":88,"author":{"gitId":"mingyuannus"},"content":"                break;","lastModifiedDate":"2023-02-28"},{"lineNumber":89,"author":{"gitId":"mingyuannus"},"content":"            default:","lastModifiedDate":"2023-02-28"},{"lineNumber":90,"author":{"gitId":"mingyuannus"},"content":"                showLine();","lastModifiedDate":"2023-02-28"},{"lineNumber":91,"author":{"gitId":"mingyuannus"},"content":"                System.out.println(\"    Error: \" + e);","lastModifiedDate":"2023-02-28"},{"lineNumber":92,"author":{"gitId":"mingyuannus"},"content":"                showLine();","lastModifiedDate":"2023-02-28"},{"lineNumber":93,"author":{"gitId":"mingyuannus"},"content":"                break;","lastModifiedDate":"2023-02-28"},{"lineNumber":94,"author":{"gitId":"mingyuannus"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":95,"author":{"gitId":"mingyuannus"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":96,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":97,"author":{"gitId":"mingyuannus"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":98,"author":{"gitId":"mingyuannus"},"content":"     * Displays all tasks","lastModifiedDate":"2023-03-03"},{"lineNumber":99,"author":{"gitId":"mingyuannus"},"content":"     * @param taskList TaskList object containing the tasks to be shown","lastModifiedDate":"2023-03-03"},{"lineNumber":100,"author":{"gitId":"mingyuannus"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":101,"author":{"gitId":"mingyuannus"},"content":"    public void showAllTasks(TaskList taskList) {","lastModifiedDate":"2023-02-28"},{"lineNumber":102,"author":{"gitId":"mingyuannus"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskList.getAllTasks();","lastModifiedDate":"2023-02-28"},{"lineNumber":103,"author":{"gitId":"mingyuannus"},"content":"        System.out.println(\"    Here are the tasks in your list:\");","lastModifiedDate":"2023-02-28"},{"lineNumber":104,"author":{"gitId":"mingyuannus"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-02-28"},{"lineNumber":105,"author":{"gitId":"mingyuannus"},"content":"            String prefix \u003d (i + 1) + \".\";","lastModifiedDate":"2023-02-28"},{"lineNumber":106,"author":{"gitId":"mingyuannus"},"content":"            System.out.println(\"    \" + prefix + tasks.get(i).getLabel());","lastModifiedDate":"2023-02-28"},{"lineNumber":107,"author":{"gitId":"mingyuannus"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":108,"author":{"gitId":"mingyuannus"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":109,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":110,"author":{"gitId":"mingyuannus"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":111,"author":{"gitId":"mingyuannus"},"content":"     * Displays message to acknowledge task addition","lastModifiedDate":"2023-03-03"},{"lineNumber":112,"author":{"gitId":"mingyuannus"},"content":"     * @param taskList the TaskList object","lastModifiedDate":"2023-03-03"},{"lineNumber":113,"author":{"gitId":"mingyuannus"},"content":"     * @param task the added task","lastModifiedDate":"2023-03-03"},{"lineNumber":114,"author":{"gitId":"mingyuannus"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":115,"author":{"gitId":"mingyuannus"},"content":"    public void showAddedTask(TaskList taskList, Task task) {","lastModifiedDate":"2023-02-28"},{"lineNumber":116,"author":{"gitId":"mingyuannus"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskList.getAllTasks();","lastModifiedDate":"2023-02-28"},{"lineNumber":117,"author":{"gitId":"mingyuannus"},"content":"        showLine();","lastModifiedDate":"2023-02-28"},{"lineNumber":118,"author":{"gitId":"mingyuannus"},"content":"        System.out.println(\"    Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-02-28"},{"lineNumber":119,"author":{"gitId":"mingyuannus"},"content":"        System.out.println(\"    \" + task.getLabel());","lastModifiedDate":"2023-02-28"},{"lineNumber":120,"author":{"gitId":"mingyuannus"},"content":"        System.out.println(\"    Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-02-28"},{"lineNumber":121,"author":{"gitId":"mingyuannus"},"content":"        showLine();","lastModifiedDate":"2023-02-28"},{"lineNumber":122,"author":{"gitId":"mingyuannus"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":123,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":124,"author":{"gitId":"mingyuannus"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":125,"author":{"gitId":"mingyuannus"},"content":"     * Displays acknowledgement for task removal","lastModifiedDate":"2023-03-03"},{"lineNumber":126,"author":{"gitId":"mingyuannus"},"content":"     * @param task the removed task","lastModifiedDate":"2023-03-03"},{"lineNumber":127,"author":{"gitId":"mingyuannus"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":128,"author":{"gitId":"mingyuannus"},"content":"    public void showRemovedTask(Task task) {","lastModifiedDate":"2023-02-28"},{"lineNumber":129,"author":{"gitId":"mingyuannus"},"content":"        showLine();","lastModifiedDate":"2023-02-28"},{"lineNumber":130,"author":{"gitId":"mingyuannus"},"content":"        System.out.println(\"    Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-02-28"},{"lineNumber":131,"author":{"gitId":"mingyuannus"},"content":"        System.out.println(task.getLabel());","lastModifiedDate":"2023-02-28"},{"lineNumber":132,"author":{"gitId":"mingyuannus"},"content":"        showLine();","lastModifiedDate":"2023-02-28"},{"lineNumber":133,"author":{"gitId":"mingyuannus"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":134,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":135,"author":{"gitId":"mingyuannus"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":136,"author":{"gitId":"mingyuannus"},"content":"     * Displays acknowledgement for marking task as done","lastModifiedDate":"2023-03-03"},{"lineNumber":137,"author":{"gitId":"mingyuannus"},"content":"     * @param task the marked task","lastModifiedDate":"2023-03-03"},{"lineNumber":138,"author":{"gitId":"mingyuannus"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":139,"author":{"gitId":"mingyuannus"},"content":"    public void showMarkedTask(Task task) {","lastModifiedDate":"2023-02-28"},{"lineNumber":140,"author":{"gitId":"mingyuannus"},"content":"        showLine();","lastModifiedDate":"2023-02-28"},{"lineNumber":141,"author":{"gitId":"mingyuannus"},"content":"        System.out.println(\"    Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-02-28"},{"lineNumber":142,"author":{"gitId":"mingyuannus"},"content":"        System.out.println(task.getLabel());","lastModifiedDate":"2023-02-28"},{"lineNumber":143,"author":{"gitId":"mingyuannus"},"content":"        showLine();","lastModifiedDate":"2023-02-28"},{"lineNumber":144,"author":{"gitId":"mingyuannus"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":145,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":146,"author":{"gitId":"mingyuannus"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":147,"author":{"gitId":"mingyuannus"},"content":"     * Displays acknowledgement for marking task as not done","lastModifiedDate":"2023-03-03"},{"lineNumber":148,"author":{"gitId":"mingyuannus"},"content":"     * @param task the unmarked task","lastModifiedDate":"2023-03-03"},{"lineNumber":149,"author":{"gitId":"mingyuannus"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":150,"author":{"gitId":"mingyuannus"},"content":"    public void showUnmarkedTask(Task task) {","lastModifiedDate":"2023-02-28"},{"lineNumber":151,"author":{"gitId":"mingyuannus"},"content":"        showLine();","lastModifiedDate":"2023-02-28"},{"lineNumber":152,"author":{"gitId":"mingyuannus"},"content":"        System.out.println(\"    OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-02-28"},{"lineNumber":153,"author":{"gitId":"mingyuannus"},"content":"        System.out.println(task.getLabel());","lastModifiedDate":"2023-02-28"},{"lineNumber":154,"author":{"gitId":"mingyuannus"},"content":"        showLine();","lastModifiedDate":"2023-02-28"},{"lineNumber":155,"author":{"gitId":"mingyuannus"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":156,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":157,"author":{"gitId":"mingyuannus"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":158,"author":{"gitId":"mingyuannus"},"content":"     * Displays exit message","lastModifiedDate":"2023-03-03"},{"lineNumber":159,"author":{"gitId":"mingyuannus"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":160,"author":{"gitId":"mingyuannus"},"content":"    public void showExitMessage() {","lastModifiedDate":"2023-02-28"},{"lineNumber":161,"author":{"gitId":"mingyuannus"},"content":"        showLine();","lastModifiedDate":"2023-02-28"},{"lineNumber":162,"author":{"gitId":"mingyuannus"},"content":"        System.out.println(\"    Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-02-28"},{"lineNumber":163,"author":{"gitId":"mingyuannus"},"content":"        showLine();","lastModifiedDate":"2023-02-28"},{"lineNumber":164,"author":{"gitId":"mingyuannus"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":165,"author":{"gitId":"mingyuannus"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":166,"author":{"gitId":"mingyuannus"},"content":"    public void showFoundTasks(ArrayList\u003cTask\u003e tasks, String keyword) {","lastModifiedDate":"2023-03-03"},{"lineNumber":167,"author":{"gitId":"mingyuannus"},"content":"        System.out.println(\"    Here are the tasks containing \u0027\" + keyword + \"\u0027:\");","lastModifiedDate":"2023-03-03"},{"lineNumber":168,"author":{"gitId":"mingyuannus"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-03-03"},{"lineNumber":169,"author":{"gitId":"mingyuannus"},"content":"            System.out.println(\"    \" + tasks.get(i).getLabel());","lastModifiedDate":"2023-03-03"},{"lineNumber":170,"author":{"gitId":"mingyuannus"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":171,"author":{"gitId":"mingyuannus"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":172,"author":{"gitId":"mingyuannus"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"mingyuannus":172}}]
