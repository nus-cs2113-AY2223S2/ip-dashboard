[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"firwer"},"content":"# SAGE iP project","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"firwer"},"content":"─────────────────────────────────────────────────────────────","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"firwer"},"content":"─██████████████─██████████████─██████████████─██████████████─","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"firwer"},"content":"─██░░░░░░░░░░██─██░░░░░░░░░░██─██░░░░░░░░░░██─██░░░░░░░░░░██─","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"firwer"},"content":"─██░░██████████─██░░██████░░██─██░░██████████─██░░██████████─","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"firwer"},"content":"─██░░██─────────██░░██──██░░██─██░░██─────────██░░██─────────","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"firwer"},"content":"─██░░██████████─██░░██████░░██─██░░██─────────██░░██████████─","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"firwer"},"content":"─██░░░░░░░░░░██─██░░░░░░░░░░██─██░░██──██████─██░░░░░░░░░░██─","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"firwer"},"content":"─██████████░░██─██░░██████░░██─██░░██──██░░██─██░░██████████─","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"firwer"},"content":"─────────██░░██─██░░██──██░░██─██░░██──██░░██─██░░██─────────","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"firwer"},"content":"─██████████░░██─██░░██──██░░██─██░░██████░░██─██░░██████████─","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"firwer"},"content":"─██░░░░░░░░░░██─██░░██──██░░██─██░░░░░░░░░░██─██░░░░░░░░░░██─","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"firwer"},"content":"─██████████████─██████──██████─██████████████─██████████████─","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"firwer"},"content":"─────────────────────────────────────────────────────────────","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"-":4,"firwer":14}},{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"firwer"},"content":"public class Command {","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"firwer"},"content":"    private String[] rawOutput;","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"firwer"},"content":"    private String taskType;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"firwer"},"content":"    private String taskDescription;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"firwer"},"content":"    private String by \u003d null;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"firwer"},"content":"    private String from \u003d null;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"firwer"},"content":"    private String to \u003d null;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"firwer"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"firwer"},"content":"    public Command(String input) {","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"firwer"},"content":"        this.rawOutput \u003d input.split(\"/\");","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"firwer"},"content":"        String[] body \u003d rawOutput[0].split(\" \", 2);","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"firwer"},"content":"        this.taskType \u003d body[0].toLowerCase();","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"firwer"},"content":"        if (body.length \u003e 1) {","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"firwer"},"content":"            this.taskDescription \u003d body[1];","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"firwer"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"firwer"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"firwer"},"content":"        for (String i : rawOutput) {","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"firwer"},"content":"            String[] line \u003d i.split(\" \", 2);","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"firwer"},"content":"            String field \u003d line.length \u003e 1 ? line[1].trim() : null;","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"firwer"},"content":"            switch (line[0]) {","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"firwer"},"content":"            case \"by\":","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"firwer"},"content":"                this.by \u003d field;","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"firwer"},"content":"                break;","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"firwer"},"content":"            case \"from\":","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"firwer"},"content":"                this.from \u003d field;","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"firwer"},"content":"                break;","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"firwer"},"content":"            case \"to\":","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"firwer"},"content":"                this.to \u003d field;","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"firwer"},"content":"                break;","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"firwer"},"content":"            }","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"firwer"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"firwer"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"firwer"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"firwer"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"firwer"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"firwer"},"content":"        return taskType;","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"firwer"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"firwer"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"firwer"},"content":"    public String getTaskDescription() {","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"firwer"},"content":"        return taskDescription;","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"firwer"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"firwer"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"firwer"},"content":"    public String getBy() {","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"firwer"},"content":"        return by;","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"firwer"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"firwer"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"firwer"},"content":"    public String getFrom() {","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"firwer"},"content":"        return from;","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"firwer"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"firwer"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"firwer"},"content":"    public String getTo() {","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"firwer"},"content":"        return to;","lastModifiedDate":"2023-02-03"},{"lineNumber":53,"author":{"gitId":"firwer"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":54,"author":{"gitId":"firwer"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"firwer":54}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"firwer"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"firwer"},"content":"    private String byWhen \u003d \"\";","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"firwer"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"firwer"},"content":"    public Deadline(String taskName, String byWhen) {","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"firwer"},"content":"        super(taskName);","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"firwer"},"content":"        this.byWhen \u003d byWhen;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"firwer"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"firwer"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"firwer"},"content":"    public String getByWhen() {","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"firwer"},"content":"        return byWhen;","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"firwer"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"firwer"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"firwer"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"firwer"},"content":"    public String toString() {","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"firwer"},"content":"        if (super.isCompleted()) {","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"firwer"},"content":"            return \".[D][X] \" + super.getTaskName() + \"(by: \" + getByWhen() + \")\";","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"firwer"},"content":"        } else {","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"firwer"},"content":"            return \".[D][ ] \" + super.getTaskName() + \"(by: \" + getByWhen() + \")\";","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"firwer"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"firwer"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"firwer"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"firwer":21}},{"path":"src/main/java/Display.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"firwer"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"firwer"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"firwer"},"content":"public class Display {","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"firwer"},"content":"    private static final String LINE \u003d","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"firwer"},"content":"            \"█████╗█████╗█████╗█████╗█████╗█████╗█████╗\\n\" +","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"firwer"},"content":"                    \"╚════╝╚════╝╚════╝╚════╝╚════╝╚════╝╚════╝\";","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"firwer"},"content":"    private static final String LOGO \u003d \"░██████╗░█████╗░░██████╗░███████╗\\n\" +","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"firwer"},"content":"            \"██╔════╝██╔══██╗██╔════╝░██╔════╝\\n\" +","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"firwer"},"content":"            \"╚█████╗░███████║██║░░██╗░█████╗░░\\n\" +","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"firwer"},"content":"            \"░╚═══██╗██╔══██║██║░░╚██╗██╔══╝░░\\n\" +","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"firwer"},"content":"            \"██████╔╝██║░░██║╚██████╔╝███████╗\\n\" +","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"firwer"},"content":"            \"╚═════╝░╚═╝░░╚═╝░╚═════╝░╚══════╝\";","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"firwer"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"firwer"},"content":"    public void welcomeUser() {","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"firwer"},"content":"        String welcome \u003d \"Hello! I\u0027m SAGE, the knowledgeable one\\n\"","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"firwer"},"content":"                + \"What can I do for you today?\\n\";","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"firwer"},"content":"        System.out.println(LOGO);","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"firwer"},"content":"        System.out.println(welcome);","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"firwer"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"firwer"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"firwer"},"content":"    public void goodByeUser() {","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"firwer"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"firwer"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"firwer"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"firwer"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"firwer"},"content":"     * Displays the list of tasks stored in the taskList.","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"firwer"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"firwer"},"content":"     * @param taskList The TaskList object that contains the tasks to be displayed.","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"firwer"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"firwer"},"content":"    public void displayTask(TaskList taskList) {","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"firwer"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"firwer"},"content":"        taskList.listTask();","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"firwer"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"firwer"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"firwer"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"firwer"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"firwer"},"content":"     * This method prints a message to the console indicating the addition of a task to the task list and its details.","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"firwer"},"content":"     * The message includes the type of task, the task description and the task count after adding the task.","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"firwer"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"firwer"},"content":"     * @param userInput The input entered by the user in the form of an array of strings after character split","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"firwer"},"content":"     * @param taskType  The type of task being added (TODO, EVENT or DEADLINE)","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"firwer"},"content":"     * @param taskList  The list of tasks to which the new task is being added","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"firwer"},"content":"     **/","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"firwer"},"content":"    public void addedTask(Command command, TaskType taskType, TaskList taskList) {","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"firwer"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"firwer"},"content":"        switch (taskType) {","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"firwer"},"content":"        case TODO:","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"firwer"},"content":"            System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"firwer"},"content":"            System.out.println(\"[T][ ] \" + command.getTaskDescription());","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"firwer"},"content":"            System.out.println(\"Now you have \" + taskList.getTaskCount() + \" tasks in the list\");","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"firwer"},"content":"            break;","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"firwer"},"content":"        case EVENT:","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"firwer"},"content":"            System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"firwer"},"content":"            System.out.println(\"[E][ ] \" + command.getTaskDescription() + \"(from: \"","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"firwer"},"content":"                    + command.getFrom() + \" to: \" + command.getTo() + \")\");","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"firwer"},"content":"            System.out.println(\"Now you have \" + taskList.getTaskCount() + \" tasks in the list\");","lastModifiedDate":"2023-02-02"},{"lineNumber":57,"author":{"gitId":"firwer"},"content":"            break;","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"firwer"},"content":"        case DEADLINE:","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"firwer"},"content":"            System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"firwer"},"content":"            System.out.println(\"[D][ ] \" + command.getTaskDescription() + \"(by: \"","lastModifiedDate":"2023-02-03"},{"lineNumber":61,"author":{"gitId":"firwer"},"content":"                    + command.getBy() + \")\");","lastModifiedDate":"2023-02-03"},{"lineNumber":62,"author":{"gitId":"firwer"},"content":"            System.out.println(\"Now you have \" + taskList.getTaskCount() + \" tasks in the list\");","lastModifiedDate":"2023-02-02"},{"lineNumber":63,"author":{"gitId":"firwer"},"content":"            break;","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"firwer"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"firwer"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"firwer"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"firwer"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"firwer"},"content":"    public void missingTodoField() {","lastModifiedDate":"2023-02-03"},{"lineNumber":69,"author":{"gitId":"firwer"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-02-03"},{"lineNumber":70,"author":{"gitId":"firwer"},"content":"        System.out.println(\"Description \");","lastModifiedDate":"2023-02-03"},{"lineNumber":71,"author":{"gitId":"firwer"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-02-03"},{"lineNumber":72,"author":{"gitId":"firwer"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":73,"author":{"gitId":"firwer"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":74,"author":{"gitId":"firwer"},"content":"    public void taskNotFound() {","lastModifiedDate":"2023-02-01"},{"lineNumber":75,"author":{"gitId":"firwer"},"content":"        System.out.println(\"Uh-oh! Task Not Found!\");","lastModifiedDate":"2023-02-01"},{"lineNumber":76,"author":{"gitId":"firwer"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":77,"author":{"gitId":"firwer"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":78,"author":{"gitId":"firwer"},"content":"    public void unknownInput() {","lastModifiedDate":"2023-02-01"},{"lineNumber":79,"author":{"gitId":"firwer"},"content":"        System.out.println(\"I don\u0027t understand what you mean, please try again!\");","lastModifiedDate":"2023-02-01"},{"lineNumber":80,"author":{"gitId":"firwer"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":81,"author":{"gitId":"firwer"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":82,"author":{"gitId":"firwer"},"content":"    public void invalidUnmark() {","lastModifiedDate":"2023-02-01"},{"lineNumber":83,"author":{"gitId":"firwer"},"content":"        System.out.println(\"Task already marked as not completed!\");","lastModifiedDate":"2023-02-01"},{"lineNumber":84,"author":{"gitId":"firwer"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":85,"author":{"gitId":"firwer"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":86,"author":{"gitId":"firwer"},"content":"    public void invalidMark() {","lastModifiedDate":"2023-02-01"},{"lineNumber":87,"author":{"gitId":"firwer"},"content":"        System.out.println(\"Task already marked as completed!\");","lastModifiedDate":"2023-02-01"},{"lineNumber":88,"author":{"gitId":"firwer"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":89,"author":{"gitId":"firwer"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":90,"author":{"gitId":"firwer"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":91,"author":{"gitId":"firwer"},"content":"     * This method is used to display a marked task as not done in the task list.","lastModifiedDate":"2023-02-01"},{"lineNumber":92,"author":{"gitId":"firwer"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":93,"author":{"gitId":"firwer"},"content":"     * @param list       the list of tasks","lastModifiedDate":"2023-02-01"},{"lineNumber":94,"author":{"gitId":"firwer"},"content":"     * @param taskNumber the taskNumber index that is to be unmarked","lastModifiedDate":"2023-02-01"},{"lineNumber":95,"author":{"gitId":"firwer"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":96,"author":{"gitId":"firwer"},"content":"    public void validUnmark(ArrayList\u003cTask\u003e list, int taskNumber) {","lastModifiedDate":"2023-02-01"},{"lineNumber":97,"author":{"gitId":"firwer"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-02-01"},{"lineNumber":98,"author":{"gitId":"firwer"},"content":"        System.out.println(\"[ ] \" + list.get(taskNumber - 1).getTaskName());","lastModifiedDate":"2023-02-02"},{"lineNumber":99,"author":{"gitId":"firwer"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":100,"author":{"gitId":"firwer"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":101,"author":{"gitId":"firwer"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":102,"author":{"gitId":"firwer"},"content":"     * This method is used to display an unmarked task as done in the task list.","lastModifiedDate":"2023-02-01"},{"lineNumber":103,"author":{"gitId":"firwer"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":104,"author":{"gitId":"firwer"},"content":"     * @param list       the list of tasks","lastModifiedDate":"2023-02-01"},{"lineNumber":105,"author":{"gitId":"firwer"},"content":"     * @param taskNumber the taskNumber index that is to be marked","lastModifiedDate":"2023-02-01"},{"lineNumber":106,"author":{"gitId":"firwer"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":107,"author":{"gitId":"firwer"},"content":"    public void validMark(ArrayList\u003cTask\u003e list, int taskNumber) {","lastModifiedDate":"2023-02-01"},{"lineNumber":108,"author":{"gitId":"firwer"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-02-01"},{"lineNumber":109,"author":{"gitId":"firwer"},"content":"        System.out.println(\"[X] \" + list.get(taskNumber - 1).getTaskName());","lastModifiedDate":"2023-02-02"},{"lineNumber":110,"author":{"gitId":"firwer"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":111,"author":{"gitId":"firwer"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":112,"author":{"gitId":"firwer"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"firwer":112}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"firwer"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"firwer"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"firwer"},"content":"    private String startWhen \u003d \"\";","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"firwer"},"content":"    private String endWhen \u003d \"\";","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"firwer"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"firwer"},"content":"    public Event(String taskName, String startWhen, String endWhen) {","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"firwer"},"content":"        super(taskName);","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"firwer"},"content":"        this.startWhen \u003d startWhen;","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"firwer"},"content":"        this.endWhen \u003d endWhen;","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"firwer"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"firwer"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"firwer"},"content":"    public String getStartWhen() {","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"firwer"},"content":"        return startWhen;","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"firwer"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"firwer"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"firwer"},"content":"    public String getEndWhen() {","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"firwer"},"content":"        return endWhen;","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"firwer"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"firwer"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"firwer"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"firwer"},"content":"    public String toString() {","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"firwer"},"content":"        if (super.isCompleted()) {","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"firwer"},"content":"            return \".[E][X] \" + super.getTaskName() + \"(from: \" + getStartWhen() + \" to: \" + getEndWhen() + \")\";","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"firwer"},"content":"        } else {","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"firwer"},"content":"            return \".[E][ ] \" + super.getTaskName() + \"(from: \" + getStartWhen() + \" to: \" + getEndWhen() + \")\";","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"firwer"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"firwer"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"firwer"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"firwer":28}},{"path":"src/main/java/Sage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"firwer"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"firwer"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"firwer"},"content":"public class Sage {","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"firwer"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"firwer"},"content":"        Display ui \u003d new Display();","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"firwer"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"firwer"},"content":"        Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"firwer"},"content":"        ui.welcomeUser();","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"firwer"},"content":"        while (input.hasNextLine()) {","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"firwer"},"content":"            Command command \u003d new Command(input.nextLine());","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"firwer"},"content":"            switch (command.getTaskType()) {","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"firwer"},"content":"            case \"bye\":","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"firwer"},"content":"                ui.goodByeUser();","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"firwer"},"content":"                return;","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"firwer"},"content":"            case \"list\":","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"firwer"},"content":"                ui.displayTask(taskList);","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"firwer"},"content":"                break;","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"firwer"},"content":"            case \"unmark\":","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"firwer"},"content":"                taskList.unmarkTask(command.getTaskDescription(), ui);","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"firwer"},"content":"                break;","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"firwer"},"content":"            case \"mark\":","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"firwer"},"content":"                taskList.markTask(command.getTaskDescription(), ui);","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"firwer"},"content":"                break;","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"firwer"},"content":"            case \"todo\":","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"firwer"},"content":"                taskList.addTask(command.getTaskDescription());","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"firwer"},"content":"                ui.addedTask(command, TaskType.TODO, taskList);","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"firwer"},"content":"                break;","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"firwer"},"content":"            case \"deadline\":","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"firwer"},"content":"                taskList.addTask(command.getTaskDescription(), command.getBy());","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"firwer"},"content":"                ui.addedTask(command, TaskType.DEADLINE, taskList);","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"firwer"},"content":"                break;","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"firwer"},"content":"            case \"event\":","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"firwer"},"content":"                taskList.addTask(command.getTaskDescription(), command.getFrom(), command.getTo());","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"firwer"},"content":"                ui.addedTask(command, TaskType.EVENT, taskList);","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"firwer"},"content":"                break;","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"firwer"},"content":"            default:","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"firwer"},"content":"                ui.unknownInput();","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"firwer"},"content":"                break;","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"firwer"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"firwer"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"firwer"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"firwer"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"firwer":42}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"firwer"},"content":"public class Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"firwer"},"content":"    private String taskName \u003d \"\";","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"firwer"},"content":"    private boolean completed \u003d false;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"firwer"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"firwer"},"content":"    public Task(String taskName) {","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"firwer"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"firwer"},"content":"        this.completed \u003d false;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"firwer"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"firwer"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"firwer"},"content":"    public String getTaskName() {","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"firwer"},"content":"        return this.taskName;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"firwer"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"firwer"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"firwer"},"content":"    public void setCompleted(boolean completed) {","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"firwer"},"content":"        this.completed \u003d completed;","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"firwer"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"firwer"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"firwer"},"content":"    public boolean isCompleted() {","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"firwer"},"content":"        return completed;","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"firwer"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"firwer"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"firwer"},"content":"    public String toString() {","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"firwer"},"content":"        return \"\";","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"firwer"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"firwer"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"firwer"},"content":"    ;","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"firwer"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"firwer":27}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"firwer"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"firwer"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"firwer"},"content":"public class TaskList {","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"firwer"},"content":"    private static ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"firwer"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"firwer"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"firwer"},"content":"     * This method instantiate a Todo object and add the Todo object to the TaskList","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"firwer"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"firwer"},"content":"     * @param taskName The name of the TODO task to be added","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"firwer"},"content":"     **/","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"firwer"},"content":"    public void addTask(String taskName) {","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"firwer"},"content":"        if (taskName \u003d\u003d null) {","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"firwer"},"content":"            throw new IllegalArgumentException(\"Todo description parameter is missing\");","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"firwer"},"content":"        } else {","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"firwer"},"content":"            Todo t \u003d new Todo(taskName);","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"firwer"},"content":"            list.add(t);","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"firwer"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"firwer"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"firwer"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"firwer"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"firwer"},"content":"     * This method instantiate a Deadline object and add the Deadline object to the TaskList","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"firwer"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"firwer"},"content":"     * @param taskName a string that represents the name of the Deadline task to add.","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"firwer"},"content":"     * @param byWhen   a string that represents the deadline of the Deadline task.","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"firwer"},"content":"     **/","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"firwer"},"content":"    public void addTask(String taskName, String byWhen) {","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"firwer"},"content":"        if (taskName \u003d\u003d null) {","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"firwer"},"content":"            throw new IllegalArgumentException(\"Deadline description parameter is missing\");","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"firwer"},"content":"        } else if (byWhen \u003d\u003d null) {","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"firwer"},"content":"            throw new IllegalArgumentException(\"Deadline by parameter is missing\");","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"firwer"},"content":"        } else {","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"firwer"},"content":"            Deadline d \u003d new Deadline(taskName, byWhen);","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"firwer"},"content":"            list.add(d);","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"firwer"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"firwer"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"firwer"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"firwer"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"firwer"},"content":"     * This method instantiate an Event object and add the Event object to the TaskList","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"firwer"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"firwer"},"content":"     * @param taskName  a string that represents the name of the Event task to add.","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"firwer"},"content":"     * @param startWhen a string that represents the start date and time of the Event task.","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"firwer"},"content":"     * @param endWhen   a string that represents the end date and time of the Event task.","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"firwer"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"firwer"},"content":"    public void addTask(String taskName, String startWhen, String endWhen) {","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"firwer"},"content":"        if (taskName \u003d\u003d null) {","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"firwer"},"content":"            throw new IllegalArgumentException(\"Event description parameter is missing\");","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"firwer"},"content":"        } else if (startWhen \u003d\u003d null) {","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"firwer"},"content":"            throw new IllegalArgumentException(\"Event starting parameter is missing\");","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"firwer"},"content":"        } else if (endWhen \u003d\u003d null) {","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"firwer"},"content":"            throw new IllegalArgumentException(\"Event ending parameter is missing\");","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"firwer"},"content":"        } else {","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"firwer"},"content":"            Event e \u003d new Event(taskName, startWhen, endWhen);","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"firwer"},"content":"            list.add(e);","lastModifiedDate":"2023-01-30"},{"lineNumber":54,"author":{"gitId":"firwer"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"firwer"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"firwer"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"firwer"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"firwer"},"content":"     * Unmarks a completed task.","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"firwer"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"firwer"},"content":"     * @param taskDescription string that represents the index of the task to unmark (1-Indexed).","lastModifiedDate":"2023-02-03"},{"lineNumber":61,"author":{"gitId":"firwer"},"content":"     * @param ui              an object of the Display class that provides the user interface.","lastModifiedDate":"2023-02-02"},{"lineNumber":62,"author":{"gitId":"firwer"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"firwer"},"content":"    public void unmarkTask(String taskDescription, Display ui) {","lastModifiedDate":"2023-02-03"},{"lineNumber":64,"author":{"gitId":"firwer"},"content":"        try {","lastModifiedDate":"2023-02-03"},{"lineNumber":65,"author":{"gitId":"firwer"},"content":"            int taskNumber \u003d Integer.parseInt(taskDescription);","lastModifiedDate":"2023-02-03"},{"lineNumber":66,"author":{"gitId":"firwer"},"content":"            if (taskNumber \u003c\u003d 0 || taskNumber \u003e list.size()) {","lastModifiedDate":"2023-01-30"},{"lineNumber":67,"author":{"gitId":"firwer"},"content":"                ui.taskNotFound();","lastModifiedDate":"2023-02-02"},{"lineNumber":68,"author":{"gitId":"firwer"},"content":"            } else if (!list.get(taskNumber - 1).isCompleted()) {","lastModifiedDate":"2023-02-02"},{"lineNumber":69,"author":{"gitId":"firwer"},"content":"                ui.invalidUnmark();","lastModifiedDate":"2023-02-02"},{"lineNumber":70,"author":{"gitId":"firwer"},"content":"            } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"firwer"},"content":"                list.get(taskNumber - 1).setCompleted(false);","lastModifiedDate":"2023-02-02"},{"lineNumber":72,"author":{"gitId":"firwer"},"content":"                ui.validUnmark(list, taskNumber);","lastModifiedDate":"2023-02-02"},{"lineNumber":73,"author":{"gitId":"firwer"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"firwer"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":75,"author":{"gitId":"firwer"},"content":"            System.out.println(\"Index of task to be unmarked is missing\");","lastModifiedDate":"2023-02-03"},{"lineNumber":76,"author":{"gitId":"firwer"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":77,"author":{"gitId":"firwer"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":78,"author":{"gitId":"firwer"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"firwer"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":80,"author":{"gitId":"firwer"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":81,"author":{"gitId":"firwer"},"content":"     * Marks a completed task.","lastModifiedDate":"2023-02-01"},{"lineNumber":82,"author":{"gitId":"firwer"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":83,"author":{"gitId":"firwer"},"content":"     * @param taskDescription a string that represents the index of the task to mark (1-Indexed).","lastModifiedDate":"2023-02-03"},{"lineNumber":84,"author":{"gitId":"firwer"},"content":"     * @param ui              an object of the Display class that provides the user interface.","lastModifiedDate":"2023-02-02"},{"lineNumber":85,"author":{"gitId":"firwer"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":86,"author":{"gitId":"firwer"},"content":"    public void markTask(String taskDescription, Display ui) {","lastModifiedDate":"2023-02-03"},{"lineNumber":87,"author":{"gitId":"firwer"},"content":"        try {","lastModifiedDate":"2023-02-03"},{"lineNumber":88,"author":{"gitId":"firwer"},"content":"            int taskNumber \u003d Integer.parseInt(taskDescription);","lastModifiedDate":"2023-02-03"},{"lineNumber":89,"author":{"gitId":"firwer"},"content":"            if (taskNumber \u003c\u003d 0 || taskNumber \u003e list.size()) {","lastModifiedDate":"2023-02-01"},{"lineNumber":90,"author":{"gitId":"firwer"},"content":"                ui.taskNotFound();","lastModifiedDate":"2023-02-02"},{"lineNumber":91,"author":{"gitId":"firwer"},"content":"            } else if (list.get(taskNumber - 1).isCompleted()) {","lastModifiedDate":"2023-02-02"},{"lineNumber":92,"author":{"gitId":"firwer"},"content":"                ui.invalidMark();","lastModifiedDate":"2023-02-02"},{"lineNumber":93,"author":{"gitId":"firwer"},"content":"            } else {","lastModifiedDate":"2023-02-01"},{"lineNumber":94,"author":{"gitId":"firwer"},"content":"                list.get(taskNumber - 1).setCompleted(true);","lastModifiedDate":"2023-02-02"},{"lineNumber":95,"author":{"gitId":"firwer"},"content":"                ui.validMark(list, taskNumber);","lastModifiedDate":"2023-02-02"},{"lineNumber":96,"author":{"gitId":"firwer"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":97,"author":{"gitId":"firwer"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":98,"author":{"gitId":"firwer"},"content":"            System.out.println(\"Index of task to be marked is missing\");","lastModifiedDate":"2023-02-03"},{"lineNumber":99,"author":{"gitId":"firwer"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":100,"author":{"gitId":"firwer"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":101,"author":{"gitId":"firwer"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":102,"author":{"gitId":"firwer"},"content":"    public void listTask() {","lastModifiedDate":"2023-02-02"},{"lineNumber":103,"author":{"gitId":"firwer"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-01-26"},{"lineNumber":104,"author":{"gitId":"firwer"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-01-30"},{"lineNumber":105,"author":{"gitId":"firwer"},"content":"            System.out.print(i + 1);","lastModifiedDate":"2023-01-30"},{"lineNumber":106,"author":{"gitId":"firwer"},"content":"            System.out.println(list.get(i).toString());","lastModifiedDate":"2023-01-30"},{"lineNumber":107,"author":{"gitId":"firwer"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":108,"author":{"gitId":"firwer"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":109,"author":{"gitId":"firwer"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":110,"author":{"gitId":"firwer"},"content":"    public int getTaskCount() {","lastModifiedDate":"2023-02-02"},{"lineNumber":111,"author":{"gitId":"firwer"},"content":"        return list.size();","lastModifiedDate":"2023-01-30"},{"lineNumber":112,"author":{"gitId":"firwer"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":113,"author":{"gitId":"firwer"},"content":"}","lastModifiedDate":"2023-01-26"},{"lineNumber":114,"author":{"gitId":"firwer"},"content":"","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"firwer":114}},{"path":"src/main/java/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"firwer"},"content":"public enum TaskType {","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"firwer"},"content":"    DEADLINE,","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"firwer"},"content":"    TODO,","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"firwer"},"content":"    EVENT","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"firwer"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"firwer":5}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"firwer"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"firwer"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"firwer"},"content":"    public Todo(String taskName) {","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"firwer"},"content":"        super(taskName);","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"firwer"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"firwer"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"firwer"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"firwer"},"content":"    public String toString() {","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"firwer"},"content":"        if (super.isCompleted()) {","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"firwer"},"content":"            return \".[T][X] \" + super.getTaskName();","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"firwer"},"content":"        } else {","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"firwer"},"content":"            return \".[T][ ] \" + super.getTaskName();","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"firwer"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"firwer"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"firwer"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"firwer"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"firwer":16}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"firwer"},"content":"todo return books","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"firwer"},"content":"todo return laundry","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"firwer"},"content":"list","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"firwer"},"content":"deadline assignment 1 /by Next monday","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"firwer"},"content":"deadline lab 10 /by Next tues","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"firwer"},"content":"list","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"firwer"},"content":"garbage 12323","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"firwer"},"content":"garbage asdasda","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"firwer"},"content":"event funfair 1 /from 21 jan /to 4 feb","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"firwer"},"content":"event fund raising /from 30 feb /to 31 mar","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"firwer"},"content":"list","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"firwer"},"content":"mark 3","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"firwer"},"content":"mark 5","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"firwer"},"content":"mark 100","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"firwer"},"content":"unmark 2","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"firwer"},"content":"unmark 3","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"firwer"},"content":"mark 5","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"firwer"},"content":"list","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"firwer":18}}]
