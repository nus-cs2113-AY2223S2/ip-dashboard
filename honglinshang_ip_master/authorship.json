[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"honglinshang"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"honglinshang"},"content":"    protected String by;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"honglinshang"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"honglinshang"},"content":"        super(description);","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"honglinshang"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"honglinshang"},"content":"    public String getBy() {","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"honglinshang"},"content":"        return by;","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"honglinshang"},"content":"    public void setBy(String by) {","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"honglinshang"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"honglinshang"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"honglinshang"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"honglinshang"},"content":"        return \"[D][\" + getStatus() + \"] \" + description + \" (by: \" + by + \")\";","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"honglinshang"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"honglinshang":22}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"honglinshang"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"honglinshang"},"content":"    private static final String COMMAND_TODO_WORD \u003d \"todo\";","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"honglinshang"},"content":"    private static final String COMMAND_DEADLINE_WORD \u003d \"deadline\";","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"honglinshang"},"content":"    private static final String COMMAND_EVENT_WORD \u003d \"event\";","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"honglinshang"},"content":"    private static final String COMMAND_MARK_WORD \u003d \"mark\";","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"honglinshang"},"content":"    private static final String COMMAND_UNMARK_WORD \u003d \"unmark\";","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"honglinshang"},"content":"    private static final String COMMAND_LIST_WORD \u003d \"list\";","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"honglinshang"},"content":"    private static final String COMMAND_EXIT_WORD \u003d \"bye\";","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"honglinshang"},"content":"    private static final String DIVIDER \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"honglinshang"},"content":"    // max number of tasks","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"honglinshang"},"content":"    private static final int CAPACITY \u003d 100;","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"honglinshang"},"content":"    private static Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"honglinshang"},"content":"    // list of all tasks","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"honglinshang"},"content":"    private static Task[] allTasks;","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"honglinshang"},"content":"    // total number of tasks","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"honglinshang"},"content":"    private static int counter;","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"honglinshang"},"content":"        initTasks();","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"honglinshang"},"content":"        printWelcomeMessage();","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"honglinshang"},"content":"        while (true) {","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"honglinshang"},"content":"            String userCommand \u003d in.nextLine();","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"honglinshang"},"content":"            final String[] commandAndParam \u003d processCommand(userCommand);","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"honglinshang"},"content":"            String command \u003d commandAndParam[0];","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"honglinshang"},"content":"            String param \u003d commandAndParam[1];","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"honglinshang"},"content":"            executeCommand(command, param);","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"honglinshang"},"content":"    private static void executeCommand(String command, String param) {","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"honglinshang"},"content":"        switch (command) {","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"honglinshang"},"content":"        case COMMAND_EXIT_WORD:","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"honglinshang"},"content":"            printExitMessage();","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"honglinshang"},"content":"            System.exit(0);","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"honglinshang"},"content":"        case COMMAND_LIST_WORD:","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"honglinshang"},"content":"            printList(allTasks, counter);","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"honglinshang"},"content":"            break;","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"honglinshang"},"content":"        case COMMAND_MARK_WORD:","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"honglinshang"},"content":"            markDone(param, allTasks, counter);","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"honglinshang"},"content":"            break;","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"honglinshang"},"content":"        case COMMAND_UNMARK_WORD:","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"honglinshang"},"content":"            markNotDone(param, allTasks, counter);","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"honglinshang"},"content":"            break;","lastModifiedDate":"2023-01-23"},{"lineNumber":49,"author":{"gitId":"honglinshang"},"content":"        case COMMAND_TODO_WORD:","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"honglinshang"},"content":"            if (canStore()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"honglinshang"},"content":"                addToDo(param);","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"honglinshang"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"honglinshang"},"content":"            break;","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"honglinshang"},"content":"        case COMMAND_DEADLINE_WORD:","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"honglinshang"},"content":"            if (canStore()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"honglinshang"},"content":"                final String[] paramAndBy \u003d processDeadline(param);","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"honglinshang"},"content":"                if (paramAndBy \u003d\u003d null) {","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"honglinshang"},"content":"                    System.out.println(DIVIDER +","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"honglinshang"},"content":"                            \"Please enter deadline as \\\"deadline [task] /by [date]\\\". \\n\" +","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"honglinshang"},"content":"                            DIVIDER);","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"honglinshang"},"content":"                } else {","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"honglinshang"},"content":"                    addDeadline(paramAndBy[0], paramAndBy[1]);","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"honglinshang"},"content":"                }","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"honglinshang"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"honglinshang"},"content":"            break;","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"honglinshang"},"content":"        case COMMAND_EVENT_WORD:","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"honglinshang"},"content":"            if (canStore()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"honglinshang"},"content":"                final String[] paramAndFromTo \u003d processEvent(param);","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"honglinshang"},"content":"                if (paramAndFromTo \u003d\u003d null) {","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"honglinshang"},"content":"                    System.out.println(DIVIDER +","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"honglinshang"},"content":"                            \"Please enter event as \\\"event [task] /from [date] /to [date]\\\". \\n\" +","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"honglinshang"},"content":"                            DIVIDER);","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"honglinshang"},"content":"                } else {","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"honglinshang"},"content":"                    addEvent(paramAndFromTo[0], paramAndFromTo[1], paramAndFromTo[2]);","lastModifiedDate":"2023-01-29"},{"lineNumber":75,"author":{"gitId":"honglinshang"},"content":"                }","lastModifiedDate":"2023-01-29"},{"lineNumber":76,"author":{"gitId":"honglinshang"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":77,"author":{"gitId":"honglinshang"},"content":"            break;","lastModifiedDate":"2023-01-29"},{"lineNumber":78,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":79,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":80,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":81,"author":{"gitId":"honglinshang"},"content":"    private static boolean canStore() {","lastModifiedDate":"2023-01-29"},{"lineNumber":82,"author":{"gitId":"honglinshang"},"content":"        if (counter \u003c CAPACITY) {","lastModifiedDate":"2023-01-29"},{"lineNumber":83,"author":{"gitId":"honglinshang"},"content":"            return true;","lastModifiedDate":"2023-01-29"},{"lineNumber":84,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":85,"author":{"gitId":"honglinshang"},"content":"        printErrorForStorage();","lastModifiedDate":"2023-01-29"},{"lineNumber":86,"author":{"gitId":"honglinshang"},"content":"        return false;","lastModifiedDate":"2023-01-29"},{"lineNumber":87,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":88,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":89,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":90,"author":{"gitId":"honglinshang"},"content":"    private static void initTasks() {","lastModifiedDate":"2023-01-29"},{"lineNumber":91,"author":{"gitId":"honglinshang"},"content":"        allTasks \u003d new Task[CAPACITY];","lastModifiedDate":"2023-01-29"},{"lineNumber":92,"author":{"gitId":"honglinshang"},"content":"        counter \u003d 0;","lastModifiedDate":"2023-01-29"},{"lineNumber":93,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":94,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":95,"author":{"gitId":"honglinshang"},"content":"    private static String[] processCommand(String userCommand) {","lastModifiedDate":"2023-01-29"},{"lineNumber":96,"author":{"gitId":"honglinshang"},"content":"        final String[] split \u003d userCommand.trim().split(\"\\\\s+\", 2);","lastModifiedDate":"2023-01-29"},{"lineNumber":97,"author":{"gitId":"honglinshang"},"content":"        return split.length \u003d\u003d 2 ? split : new String[]{split[0], \"\"};","lastModifiedDate":"2023-01-29"},{"lineNumber":98,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":99,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":100,"author":{"gitId":"honglinshang"},"content":"    private static String[] processDeadline(String param) {","lastModifiedDate":"2023-01-29"},{"lineNumber":101,"author":{"gitId":"honglinshang"},"content":"        String[] split \u003d param.trim().split(\"\\\\s/by\\\\s\", 2);","lastModifiedDate":"2023-01-29"},{"lineNumber":102,"author":{"gitId":"honglinshang"},"content":"        return split.length \u003d\u003d 2 ? split : null;","lastModifiedDate":"2023-01-29"},{"lineNumber":103,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":104,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":105,"author":{"gitId":"honglinshang"},"content":"    private static String[] processEvent(String param) {","lastModifiedDate":"2023-01-29"},{"lineNumber":106,"author":{"gitId":"honglinshang"},"content":"        String[] split \u003d param.trim().split(\"\\\\s/from\\\\s|\\\\s/to\\\\s\", 3);","lastModifiedDate":"2023-01-29"},{"lineNumber":107,"author":{"gitId":"honglinshang"},"content":"        return split.length \u003d\u003d 3 ? split : null;","lastModifiedDate":"2023-01-29"},{"lineNumber":108,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":109,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":110,"author":{"gitId":"honglinshang"},"content":"    private static void markNotDone(String param, Task[] store, int counter) {","lastModifiedDate":"2023-01-29"},{"lineNumber":111,"author":{"gitId":"honglinshang"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":112,"author":{"gitId":"honglinshang"},"content":"            int idx \u003d Integer.parseInt(param) - 1;","lastModifiedDate":"2023-01-29"},{"lineNumber":113,"author":{"gitId":"honglinshang"},"content":"            if (idx \u003c 0 || idx \u003e\u003d counter) {","lastModifiedDate":"2023-01-26"},{"lineNumber":114,"author":{"gitId":"honglinshang"},"content":"                printErrorForIdx(counter);","lastModifiedDate":"2023-01-29"},{"lineNumber":115,"author":{"gitId":"honglinshang"},"content":"                return;","lastModifiedDate":"2023-01-29"},{"lineNumber":116,"author":{"gitId":"honglinshang"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":117,"author":{"gitId":"honglinshang"},"content":"            store[idx].setDone(false);","lastModifiedDate":"2023-01-29"},{"lineNumber":118,"author":{"gitId":"honglinshang"},"content":"            System.out.println(DIVIDER +","lastModifiedDate":"2023-01-29"},{"lineNumber":119,"author":{"gitId":"honglinshang"},"content":"                    \"OK, I\u0027ve marked this task as not done yet:\\n\" +","lastModifiedDate":"2023-01-29"},{"lineNumber":120,"author":{"gitId":"honglinshang"},"content":"                    \"[ ] \" + store[idx].getDescription() + \"\\n\" +","lastModifiedDate":"2023-01-29"},{"lineNumber":121,"author":{"gitId":"honglinshang"},"content":"                    DIVIDER);","lastModifiedDate":"2023-01-29"},{"lineNumber":122,"author":{"gitId":"honglinshang"},"content":"        } catch (NumberFormatException ex) {","lastModifiedDate":"2023-01-26"},{"lineNumber":123,"author":{"gitId":"honglinshang"},"content":"            printErrorForIdx(counter);","lastModifiedDate":"2023-01-29"},{"lineNumber":124,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":125,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":126,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":127,"author":{"gitId":"honglinshang"},"content":"    private static void markDone(String param, Task[] store, int counter) {","lastModifiedDate":"2023-01-29"},{"lineNumber":128,"author":{"gitId":"honglinshang"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":129,"author":{"gitId":"honglinshang"},"content":"            int idx \u003d Integer.parseInt(param) - 1;","lastModifiedDate":"2023-01-29"},{"lineNumber":130,"author":{"gitId":"honglinshang"},"content":"            if (idx \u003c 0 || idx \u003e\u003d counter) {","lastModifiedDate":"2023-01-26"},{"lineNumber":131,"author":{"gitId":"honglinshang"},"content":"                printErrorForIdx(counter);","lastModifiedDate":"2023-01-29"},{"lineNumber":132,"author":{"gitId":"honglinshang"},"content":"                return;","lastModifiedDate":"2023-01-29"},{"lineNumber":133,"author":{"gitId":"honglinshang"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":134,"author":{"gitId":"honglinshang"},"content":"            store[idx].setDone(true);","lastModifiedDate":"2023-01-29"},{"lineNumber":135,"author":{"gitId":"honglinshang"},"content":"            System.out.println(DIVIDER + \"Nice!, I\u0027ve marked this task as done:\\n\" +","lastModifiedDate":"2023-01-29"},{"lineNumber":136,"author":{"gitId":"honglinshang"},"content":"                    store[idx] + \"\\n\" + DIVIDER);","lastModifiedDate":"2023-01-29"},{"lineNumber":137,"author":{"gitId":"honglinshang"},"content":"        } catch (NumberFormatException ex) {","lastModifiedDate":"2023-01-26"},{"lineNumber":138,"author":{"gitId":"honglinshang"},"content":"            printErrorForIdx(counter);","lastModifiedDate":"2023-01-29"},{"lineNumber":139,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":140,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":141,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":142,"author":{"gitId":"honglinshang"},"content":"    private static void addToDo(String param) {","lastModifiedDate":"2023-01-29"},{"lineNumber":143,"author":{"gitId":"honglinshang"},"content":"        allTasks[counter] \u003d new ToDo(param);","lastModifiedDate":"2023-01-29"},{"lineNumber":144,"author":{"gitId":"honglinshang"},"content":"        printAddMessage(allTasks[counter]);","lastModifiedDate":"2023-01-29"},{"lineNumber":145,"author":{"gitId":"honglinshang"},"content":"        counter++;","lastModifiedDate":"2023-01-29"},{"lineNumber":146,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":147,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":148,"author":{"gitId":"honglinshang"},"content":"    private static void addDeadline(String param, String by) {","lastModifiedDate":"2023-01-29"},{"lineNumber":149,"author":{"gitId":"honglinshang"},"content":"        allTasks[counter] \u003d new Deadline(param, by);","lastModifiedDate":"2023-01-29"},{"lineNumber":150,"author":{"gitId":"honglinshang"},"content":"        printAddMessage(allTasks[counter]);","lastModifiedDate":"2023-01-29"},{"lineNumber":151,"author":{"gitId":"honglinshang"},"content":"        counter++;","lastModifiedDate":"2023-01-29"},{"lineNumber":152,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":153,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":154,"author":{"gitId":"honglinshang"},"content":"    private static void addEvent(String param, String from, String to) {","lastModifiedDate":"2023-01-29"},{"lineNumber":155,"author":{"gitId":"honglinshang"},"content":"        allTasks[counter] \u003d new Event(param, from, to);","lastModifiedDate":"2023-01-29"},{"lineNumber":156,"author":{"gitId":"honglinshang"},"content":"        printAddMessage(allTasks[counter]);","lastModifiedDate":"2023-01-29"},{"lineNumber":157,"author":{"gitId":"honglinshang"},"content":"        counter++;","lastModifiedDate":"2023-01-23"},{"lineNumber":158,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":159,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":160,"author":{"gitId":"honglinshang"},"content":"    private static void printAddMessage(Task store) {","lastModifiedDate":"2023-01-29"},{"lineNumber":161,"author":{"gitId":"honglinshang"},"content":"        System.out.println(DIVIDER + \"Got it. I\u0027ve added this task: \\n\" +","lastModifiedDate":"2023-01-29"},{"lineNumber":162,"author":{"gitId":"honglinshang"},"content":"                \"  \" + store + \"\\n\" + DIVIDER);","lastModifiedDate":"2023-01-29"},{"lineNumber":163,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":164,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":165,"author":{"gitId":"honglinshang"},"content":"    private static void printErrorForStorage() {","lastModifiedDate":"2023-01-29"},{"lineNumber":166,"author":{"gitId":"honglinshang"},"content":"        System.out.println(DIVIDER +","lastModifiedDate":"2023-01-29"},{"lineNumber":167,"author":{"gitId":"honglinshang"},"content":"                \"Maximum number of tasks reached. \\n\" +","lastModifiedDate":"2023-01-29"},{"lineNumber":168,"author":{"gitId":"honglinshang"},"content":"                DIVIDER);","lastModifiedDate":"2023-01-29"},{"lineNumber":169,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":170,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":171,"author":{"gitId":"honglinshang"},"content":"    private static void printErrorForIdx(int counter) {","lastModifiedDate":"2023-01-29"},{"lineNumber":172,"author":{"gitId":"honglinshang"},"content":"        System.out.println(DIVIDER +","lastModifiedDate":"2023-01-29"},{"lineNumber":173,"author":{"gitId":"honglinshang"},"content":"                \"Please enter [idx] in the form of an integer from 1 to \" + counter + \". \\n\" +","lastModifiedDate":"2023-01-29"},{"lineNumber":174,"author":{"gitId":"honglinshang"},"content":"                DIVIDER);","lastModifiedDate":"2023-01-29"},{"lineNumber":175,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":176,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":177,"author":{"gitId":"honglinshang"},"content":"    private static void printList(Task[] store, int counter) {","lastModifiedDate":"2023-01-29"},{"lineNumber":178,"author":{"gitId":"honglinshang"},"content":"        System.out.println(DIVIDER +","lastModifiedDate":"2023-01-29"},{"lineNumber":179,"author":{"gitId":"honglinshang"},"content":"                \"Here are the tasks in your list: \");","lastModifiedDate":"2023-01-29"},{"lineNumber":180,"author":{"gitId":"honglinshang"},"content":"        for (int i \u003d 0; i \u003c counter; i++) {","lastModifiedDate":"2023-01-29"},{"lineNumber":181,"author":{"gitId":"honglinshang"},"content":"            System.out.println(i+1 + \".\" + store[i]);","lastModifiedDate":"2023-01-29"},{"lineNumber":182,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":183,"author":{"gitId":"honglinshang"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-01-29"},{"lineNumber":184,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":185,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":186,"author":{"gitId":"honglinshang"},"content":"    private static void printExitMessage() {","lastModifiedDate":"2023-01-29"},{"lineNumber":187,"author":{"gitId":"honglinshang"},"content":"        System.out.println(DIVIDER +","lastModifiedDate":"2023-01-29"},{"lineNumber":188,"author":{"gitId":"honglinshang"},"content":"                \" Bye. Hope to see you again soon!\\n\" +","lastModifiedDate":"2023-01-29"},{"lineNumber":189,"author":{"gitId":"honglinshang"},"content":"                DIVIDER);","lastModifiedDate":"2023-01-29"},{"lineNumber":190,"author":{"gitId":"honglinshang"},"content":"        return;","lastModifiedDate":"2023-01-29"},{"lineNumber":191,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":192,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":193,"author":{"gitId":"honglinshang"},"content":"    private static void printWelcomeMessage() {","lastModifiedDate":"2023-01-29"},{"lineNumber":194,"author":{"gitId":"honglinshang"},"content":"        System.out.println(DIVIDER +","lastModifiedDate":"2023-01-29"},{"lineNumber":195,"author":{"gitId":"honglinshang"},"content":"                \" Hello! I\u0027m Duke! \\n\" +","lastModifiedDate":"2023-01-29"},{"lineNumber":196,"author":{"gitId":"honglinshang"},"content":"                \" Enter \\\"list\\\" to see all tasks \\n\" +","lastModifiedDate":"2023-01-29"},{"lineNumber":197,"author":{"gitId":"honglinshang"},"content":"                \" Enter \\\"todo [task]\\\" to add a task \\n\" +","lastModifiedDate":"2023-01-29"},{"lineNumber":198,"author":{"gitId":"honglinshang"},"content":"                \" Enter \\\"deadline [task] /by [date]\\\" to add a deadline \\n\" +","lastModifiedDate":"2023-01-29"},{"lineNumber":199,"author":{"gitId":"honglinshang"},"content":"                \" Enter \\\"event [task] /from [date] /to [date]\\\" to add an event \\n\" +","lastModifiedDate":"2023-01-29"},{"lineNumber":200,"author":{"gitId":"honglinshang"},"content":"                \" Enter \\\"mark [idx]\\\" to mark task as done \\n\" +","lastModifiedDate":"2023-01-29"},{"lineNumber":201,"author":{"gitId":"honglinshang"},"content":"                \" Enter \\\"unmark [idx]\\\" to mark task as not done \\n\" +","lastModifiedDate":"2023-01-29"},{"lineNumber":202,"author":{"gitId":"honglinshang"},"content":"                \" Enter \\\"bye\\\" to exit the program \\n\" +","lastModifiedDate":"2023-01-29"},{"lineNumber":203,"author":{"gitId":"honglinshang"},"content":"                DIVIDER);","lastModifiedDate":"2023-01-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"honglinshang":201,"-":4}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"honglinshang"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"    protected String from;","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"honglinshang"},"content":"    protected String to;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"honglinshang"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"honglinshang"},"content":"        super(description);","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"honglinshang"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"honglinshang"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"honglinshang"},"content":"    public String getFrom() {","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"honglinshang"},"content":"        return from;","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"honglinshang"},"content":"    public void setFrom(String from) {","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"honglinshang"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"honglinshang"},"content":"    public String getTo() {","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"honglinshang"},"content":"        return to;","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"honglinshang"},"content":"    public void setTo(String to) {","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"honglinshang"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"honglinshang"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"honglinshang"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"honglinshang"},"content":"        return \"[E][\" + getStatus() + \"] \" + description + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"honglinshang"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"honglinshang":31}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"honglinshang"},"content":"public class Task {","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"    protected String description;","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"honglinshang"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"honglinshang"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"honglinshang"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"honglinshang"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"honglinshang"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"honglinshang"},"content":"        return description;","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"honglinshang"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"honglinshang"},"content":"        return isDone;","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"honglinshang"},"content":"    public String getStatus() {","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"honglinshang"},"content":"        return (isDone() ? \"X\" : \" \");","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"honglinshang"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"honglinshang"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"honglinshang"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"honglinshang"},"content":"        isDone \u003d done;","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"honglinshang"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"honglinshang"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"honglinshang"},"content":"        return description;","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"honglinshang"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"honglinshang":34}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"honglinshang"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"honglinshang"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"honglinshang"},"content":"        super(description);","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"honglinshang"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"honglinshang"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"honglinshang"},"content":"        return \"[T][\" + getStatus() + \"] \" + description;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"honglinshang"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"honglinshang":11}}]
