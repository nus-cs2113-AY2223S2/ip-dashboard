[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"honglinshang"},"content":"# Duke Individual Project","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"honglinshang"},"content":"This is an organiser to help you keep track of your tasks. ","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"honglinshang"},"content":"## Using Duke","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"honglinshang"},"content":"On opening, Duke should greet you with this","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"|  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"| | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"| |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"|____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"honglinshang"},"content":"- Enter ```help``` to see a list of commands that are available in Duke","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"honglinshang"},"content":"- Enter ```list``` to see the complete list of all tasks","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"honglinshang"},"content":"- Enter ```todo [task]``` to add a task to the list","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"honglinshang"},"content":"- Enter ```deadline [task] /by [date]``` to add a task that need to be done before a specific date/time","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"honglinshang"},"content":"- Enter ```event [task] /from [date] /to [date]``` to add a task that starts and ends at a specific date/time","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"honglinshang"},"content":"- Enter ```mark [idx]``` based on the task\u0027s index in the list to mark it as done ","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"honglinshang"},"content":"- Enter ```unmark [idx]``` based on the task\u0027s index in the list to mark it as not done ","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"honglinshang"},"content":"- Enter ```delete [idx]``` based on the task\u0027s index in the list to remove the task from your list","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"honglinshang"},"content":"- Enter ```bye``` to exit the program ","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"honglinshang":13,"-":13}},{"path":"save.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"honglinshang"},"content":"T | X | read book","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"D |   | return book /by June 6th","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"honglinshang"},"content":"E | X | project meeting Aug 6th /from 2pm /to 4pm","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"honglinshang"},"content":"D |   | submit tutorial /by 10pm","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"honglinshang"},"content":"E |   | lecture /from 9am /to 11am","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"honglinshang":5}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"honglinshang"},"content":"package duke;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"honglinshang"},"content":"import duke.exception.EmptyTaskException;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"honglinshang"},"content":"import duke.exception.IllegalCommandException;","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"honglinshang"},"content":"import duke.exception.InvalidDeadline;","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"honglinshang"},"content":"import duke.exception.InvalidEvent;","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"honglinshang"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"honglinshang"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"honglinshang"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"honglinshang"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"honglinshang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"honglinshang"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"honglinshang"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"honglinshang"},"content":"    private static final String COMMAND_EXIT_WORD \u003d \"bye\";","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"honglinshang"},"content":"    private static final String COMMAND_HELP_WORD \u003d \"help\";","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"honglinshang"},"content":"    private static final String COMMAND_LIST_WORD \u003d \"list\";","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"honglinshang"},"content":"    private static final String COMMAND_MARK_WORD \u003d \"mark\";","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"honglinshang"},"content":"    private static final String COMMAND_UNMARK_WORD \u003d \"unmark\";","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"honglinshang"},"content":"    private static final String COMMAND_DELETE_WORD \u003d \"delete\";","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"honglinshang"},"content":"    private static final String COMMAND_TODO_WORD \u003d \"todo\";","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"honglinshang"},"content":"    private static final String COMMAND_DEADLINE_WORD \u003d \"deadline\";","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"honglinshang"},"content":"    private static final String COMMAND_EVENT_WORD \u003d \"event\";","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"honglinshang"},"content":"    // array list of all tasks","lastModifiedDate":"2023-02-14"},{"lineNumber":28,"author":{"gitId":"honglinshang"},"content":"    public static ArrayList\u003cTask\u003e allTasks;","lastModifiedDate":"2023-02-14"},{"lineNumber":29,"author":{"gitId":"honglinshang"},"content":"    private static final Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-14"},{"lineNumber":30,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":32,"author":{"gitId":"honglinshang"},"content":"        initTasks();","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"honglinshang"},"content":"        Output.printWelcomeMessage();","lastModifiedDate":"2023-02-09"},{"lineNumber":34,"author":{"gitId":"honglinshang"},"content":"        while (true) {","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"honglinshang"},"content":"            String userCommand \u003d in.nextLine();","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"honglinshang"},"content":"            final String[] commandAndParam \u003d Processor.command(userCommand);","lastModifiedDate":"2023-02-14"},{"lineNumber":37,"author":{"gitId":"honglinshang"},"content":"            String command \u003d commandAndParam[0];","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"honglinshang"},"content":"            String param \u003d commandAndParam[1];","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"honglinshang"},"content":"            try {","lastModifiedDate":"2023-02-09"},{"lineNumber":40,"author":{"gitId":"honglinshang"},"content":"                executeCommand(command, param);","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"honglinshang"},"content":"                Storage.updateDuke();","lastModifiedDate":"2023-02-15"},{"lineNumber":42,"author":{"gitId":"honglinshang"},"content":"            } catch (IllegalCommandException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":43,"author":{"gitId":"honglinshang"},"content":"                Output.printInvalidCommand();","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"honglinshang"},"content":"            } catch (EmptyTaskException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":45,"author":{"gitId":"honglinshang"},"content":"                Output.printEmptyTask();","lastModifiedDate":"2023-02-09"},{"lineNumber":46,"author":{"gitId":"honglinshang"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":47,"author":{"gitId":"honglinshang"},"content":"                Output.printErrorForIO();","lastModifiedDate":"2023-02-15"},{"lineNumber":48,"author":{"gitId":"honglinshang"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-14"},{"lineNumber":49,"author":{"gitId":"honglinshang"},"content":"                Output.printErrorForIdx();","lastModifiedDate":"2023-02-14"},{"lineNumber":50,"author":{"gitId":"honglinshang"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":51,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"honglinshang"},"content":"    private static void executeCommand(String command, String param)","lastModifiedDate":"2023-02-14"},{"lineNumber":55,"author":{"gitId":"honglinshang"},"content":"            throws IllegalCommandException, EmptyTaskException {","lastModifiedDate":"2023-02-14"},{"lineNumber":56,"author":{"gitId":"honglinshang"},"content":"        switch (command) {","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"honglinshang"},"content":"        case COMMAND_EXIT_WORD:","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"honglinshang"},"content":"            Output.printExitMessage();","lastModifiedDate":"2023-02-09"},{"lineNumber":59,"author":{"gitId":"honglinshang"},"content":"            System.exit(0);","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"honglinshang"},"content":"        case COMMAND_HELP_WORD:","lastModifiedDate":"2023-02-11"},{"lineNumber":61,"author":{"gitId":"honglinshang"},"content":"            Output.printHelpMessage();","lastModifiedDate":"2023-02-11"},{"lineNumber":62,"author":{"gitId":"honglinshang"},"content":"            break;","lastModifiedDate":"2023-02-11"},{"lineNumber":63,"author":{"gitId":"honglinshang"},"content":"        case COMMAND_LIST_WORD:","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"honglinshang"},"content":"            Output.printList(allTasks);","lastModifiedDate":"2023-02-09"},{"lineNumber":65,"author":{"gitId":"honglinshang"},"content":"            break;","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"honglinshang"},"content":"        case COMMAND_MARK_WORD:","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"honglinshang"},"content":"            markDone(param);","lastModifiedDate":"2023-02-09"},{"lineNumber":68,"author":{"gitId":"honglinshang"},"content":"            break;","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"honglinshang"},"content":"        case COMMAND_UNMARK_WORD:","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"honglinshang"},"content":"            markNotDone(param);","lastModifiedDate":"2023-02-09"},{"lineNumber":71,"author":{"gitId":"honglinshang"},"content":"            break;","lastModifiedDate":"2023-01-23"},{"lineNumber":72,"author":{"gitId":"honglinshang"},"content":"        case COMMAND_DELETE_WORD:","lastModifiedDate":"2023-02-14"},{"lineNumber":73,"author":{"gitId":"honglinshang"},"content":"            deleteTask(param);","lastModifiedDate":"2023-02-14"},{"lineNumber":74,"author":{"gitId":"honglinshang"},"content":"            break;","lastModifiedDate":"2023-02-14"},{"lineNumber":75,"author":{"gitId":"honglinshang"},"content":"        case COMMAND_TODO_WORD:","lastModifiedDate":"2023-01-29"},{"lineNumber":76,"author":{"gitId":"honglinshang"},"content":"            if (param.equals(\"\")) {","lastModifiedDate":"2023-02-14"},{"lineNumber":77,"author":{"gitId":"honglinshang"},"content":"                throw new EmptyTaskException();","lastModifiedDate":"2023-02-09"},{"lineNumber":78,"author":{"gitId":"honglinshang"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":79,"author":{"gitId":"honglinshang"},"content":"            addToDo(param);","lastModifiedDate":"2023-02-09"},{"lineNumber":80,"author":{"gitId":"honglinshang"},"content":"            break;","lastModifiedDate":"2023-01-29"},{"lineNumber":81,"author":{"gitId":"honglinshang"},"content":"        case COMMAND_DEADLINE_WORD:","lastModifiedDate":"2023-01-29"},{"lineNumber":82,"author":{"gitId":"honglinshang"},"content":"            if (param.equals(\"\")) {","lastModifiedDate":"2023-02-14"},{"lineNumber":83,"author":{"gitId":"honglinshang"},"content":"                throw new EmptyTaskException();","lastModifiedDate":"2023-02-09"},{"lineNumber":84,"author":{"gitId":"honglinshang"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":85,"author":{"gitId":"honglinshang"},"content":"            try {","lastModifiedDate":"2023-02-15"},{"lineNumber":86,"author":{"gitId":"honglinshang"},"content":"                final String[] paramAndBy \u003d Processor.deadline(param);","lastModifiedDate":"2023-02-14"},{"lineNumber":87,"author":{"gitId":"honglinshang"},"content":"                addDeadline(paramAndBy[0], paramAndBy[1]);","lastModifiedDate":"2023-01-29"},{"lineNumber":88,"author":{"gitId":"honglinshang"},"content":"            } catch (InvalidDeadline e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":89,"author":{"gitId":"honglinshang"},"content":"                Output.printInvalidDeadline();","lastModifiedDate":"2023-02-15"},{"lineNumber":90,"author":{"gitId":"honglinshang"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":91,"author":{"gitId":"honglinshang"},"content":"            break;","lastModifiedDate":"2023-01-29"},{"lineNumber":92,"author":{"gitId":"honglinshang"},"content":"        case COMMAND_EVENT_WORD:","lastModifiedDate":"2023-01-29"},{"lineNumber":93,"author":{"gitId":"honglinshang"},"content":"            if (param.equals(\"\")) {","lastModifiedDate":"2023-02-14"},{"lineNumber":94,"author":{"gitId":"honglinshang"},"content":"                throw new EmptyTaskException();","lastModifiedDate":"2023-02-09"},{"lineNumber":95,"author":{"gitId":"honglinshang"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":96,"author":{"gitId":"honglinshang"},"content":"            try {","lastModifiedDate":"2023-02-15"},{"lineNumber":97,"author":{"gitId":"honglinshang"},"content":"                final String[] paramAndFromTo \u003d Processor.event(param);","lastModifiedDate":"2023-02-14"},{"lineNumber":98,"author":{"gitId":"honglinshang"},"content":"                addEvent(paramAndFromTo[0], paramAndFromTo[1], paramAndFromTo[2]);","lastModifiedDate":"2023-01-29"},{"lineNumber":99,"author":{"gitId":"honglinshang"},"content":"            } catch (InvalidEvent e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":100,"author":{"gitId":"honglinshang"},"content":"                Output.printInvalidEvent();","lastModifiedDate":"2023-02-15"},{"lineNumber":101,"author":{"gitId":"honglinshang"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":102,"author":{"gitId":"honglinshang"},"content":"            break;","lastModifiedDate":"2023-01-29"},{"lineNumber":103,"author":{"gitId":"honglinshang"},"content":"        default:","lastModifiedDate":"2023-02-09"},{"lineNumber":104,"author":{"gitId":"honglinshang"},"content":"            throw new IllegalCommandException();","lastModifiedDate":"2023-02-09"},{"lineNumber":105,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":106,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":107,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":108,"author":{"gitId":"honglinshang"},"content":"    private static void initTasks() {","lastModifiedDate":"2023-01-29"},{"lineNumber":109,"author":{"gitId":"honglinshang"},"content":"        try {","lastModifiedDate":"2023-02-15"},{"lineNumber":110,"author":{"gitId":"honglinshang"},"content":"            allTasks \u003d Storage.initDuke();","lastModifiedDate":"2023-02-15"},{"lineNumber":111,"author":{"gitId":"honglinshang"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":112,"author":{"gitId":"honglinshang"},"content":"            Output.printErrorForIO();","lastModifiedDate":"2023-02-15"},{"lineNumber":113,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":114,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":115,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":116,"author":{"gitId":"honglinshang"},"content":"    private static void markNotDone(String param) {","lastModifiedDate":"2023-02-09"},{"lineNumber":117,"author":{"gitId":"honglinshang"},"content":"        int idx \u003d Integer.parseInt(param) - 1;","lastModifiedDate":"2023-01-29"},{"lineNumber":118,"author":{"gitId":"honglinshang"},"content":"        if (idx \u003c 0 || idx \u003e\u003d allTasks.size()) {","lastModifiedDate":"2023-02-14"},{"lineNumber":119,"author":{"gitId":"honglinshang"},"content":"            throw new NumberFormatException();","lastModifiedDate":"2023-02-14"},{"lineNumber":120,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":121,"author":{"gitId":"honglinshang"},"content":"        allTasks.get(idx).setDone(false);","lastModifiedDate":"2023-02-14"},{"lineNumber":122,"author":{"gitId":"honglinshang"},"content":"        Output.printMarkNotDone(allTasks.get(idx));","lastModifiedDate":"2023-02-14"},{"lineNumber":123,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":124,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":125,"author":{"gitId":"honglinshang"},"content":"    private static void markDone(String param) {","lastModifiedDate":"2023-02-09"},{"lineNumber":126,"author":{"gitId":"honglinshang"},"content":"        int idx \u003d Integer.parseInt(param) - 1;","lastModifiedDate":"2023-01-29"},{"lineNumber":127,"author":{"gitId":"honglinshang"},"content":"        if (idx \u003c 0 || idx \u003e\u003d allTasks.size()) {","lastModifiedDate":"2023-02-14"},{"lineNumber":128,"author":{"gitId":"honglinshang"},"content":"            throw new NumberFormatException();","lastModifiedDate":"2023-02-14"},{"lineNumber":129,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":130,"author":{"gitId":"honglinshang"},"content":"        allTasks.get(idx).setDone(true);","lastModifiedDate":"2023-02-14"},{"lineNumber":131,"author":{"gitId":"honglinshang"},"content":"        Output.printMarkDone(allTasks.get(idx));","lastModifiedDate":"2023-02-14"},{"lineNumber":132,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":133,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":134,"author":{"gitId":"honglinshang"},"content":"    private static void deleteTask(String param) {","lastModifiedDate":"2023-02-14"},{"lineNumber":135,"author":{"gitId":"honglinshang"},"content":"        int idx \u003d Integer.parseInt(param) - 1;","lastModifiedDate":"2023-02-14"},{"lineNumber":136,"author":{"gitId":"honglinshang"},"content":"        if (idx \u003c 0 || idx \u003e\u003d allTasks.size()) {","lastModifiedDate":"2023-02-14"},{"lineNumber":137,"author":{"gitId":"honglinshang"},"content":"            throw new NumberFormatException();","lastModifiedDate":"2023-02-14"},{"lineNumber":138,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":139,"author":{"gitId":"honglinshang"},"content":"        Output.printDeleted(allTasks.get(idx));","lastModifiedDate":"2023-02-14"},{"lineNumber":140,"author":{"gitId":"honglinshang"},"content":"        allTasks.remove(idx);","lastModifiedDate":"2023-02-14"},{"lineNumber":141,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":142,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":143,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":144,"author":{"gitId":"honglinshang"},"content":"    private static void addToDo(String param) {","lastModifiedDate":"2023-01-29"},{"lineNumber":145,"author":{"gitId":"honglinshang"},"content":"        allTasks.add(new ToDo(param));","lastModifiedDate":"2023-02-14"},{"lineNumber":146,"author":{"gitId":"honglinshang"},"content":"        Output.printAddMessage(allTasks.get(allTasks.size() - 1));","lastModifiedDate":"2023-02-14"},{"lineNumber":147,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":148,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":149,"author":{"gitId":"honglinshang"},"content":"    private static void addDeadline(String param, String by) {","lastModifiedDate":"2023-01-29"},{"lineNumber":150,"author":{"gitId":"honglinshang"},"content":"        allTasks.add(new Deadline(param, by));","lastModifiedDate":"2023-02-14"},{"lineNumber":151,"author":{"gitId":"honglinshang"},"content":"        Output.printAddMessage(allTasks.get(allTasks.size() - 1));","lastModifiedDate":"2023-02-14"},{"lineNumber":152,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":153,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":154,"author":{"gitId":"honglinshang"},"content":"    private static void addEvent(String param, String from, String to) {","lastModifiedDate":"2023-01-29"},{"lineNumber":155,"author":{"gitId":"honglinshang"},"content":"        allTasks.add(new Event(param, from, to));","lastModifiedDate":"2023-02-14"},{"lineNumber":156,"author":{"gitId":"honglinshang"},"content":"        Output.printAddMessage(allTasks.get(allTasks.size() - 1));","lastModifiedDate":"2023-02-14"},{"lineNumber":157,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"honglinshang":155,"-":3}},{"path":"src/main/java/duke/Output.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"honglinshang"},"content":"package duke;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"honglinshang"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"honglinshang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"honglinshang"},"content":"import static duke.Duke.allTasks;","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"honglinshang"},"content":"import static duke.Storage.FILE_PATH;","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"honglinshang"},"content":"public class Output {","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"honglinshang"},"content":"    public static final String DIVIDER \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"honglinshang"},"content":"    public static final String INVALID_DEADLINE \u003d","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"honglinshang"},"content":"            DIVIDER + \"Please enter deadline as \\\"deadline [task] /by [date]\\\".\\n\" + DIVIDER;","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"honglinshang"},"content":"    public static final String INVALID_EVENT \u003d","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"honglinshang"},"content":"            DIVIDER + \"Please enter event as \\\"event [task] /from [date] /to [date]\\\".\\n\" + DIVIDER;","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"honglinshang"},"content":"    public static final String INVALID_COMMAND \u003d","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"honglinshang"},"content":"            DIVIDER + \"Sorry, but I don\u0027t know what that means :(\\n\" + DIVIDER;","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"honglinshang"},"content":"    public static final String EMPTY_TASK_DESCRIPTION \u003d","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"honglinshang"},"content":"            DIVIDER + \"Oops! The description of a task cannot be empty.\\n\" + DIVIDER;","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"honglinshang"},"content":"    public static void printWelcomeMessage() {","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"honglinshang"},"content":"        System.out.println(DIVIDER +","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"honglinshang"},"content":"                \"Hello from\\n\" +","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"honglinshang"},"content":"                \" ____        _\\n\" +","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"honglinshang"},"content":"                \"|  _ \\\\ _   _| | _____\\n\" +","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"honglinshang"},"content":"                \"| | | | | | | |/ / _ \\\\\\n\" +","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"honglinshang"},"content":"                \"| |_| | |_| |   \u003c  __/\\n\" +","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"honglinshang"},"content":"                \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\" +","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"honglinshang"},"content":"                \"Enter \\\"help\\\" to see a list of commands.\\n\" +","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"honglinshang"},"content":"                DIVIDER);","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"honglinshang"},"content":"    // functions","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"honglinshang"},"content":"    public static void printHelpMessage() {","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"honglinshang"},"content":"        System.out.println(DIVIDER +","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"honglinshang"},"content":"                \" Enter \\\"list\\\" to see all tasks\\n\" +","lastModifiedDate":"2023-02-09"},{"lineNumber":34,"author":{"gitId":"honglinshang"},"content":"                \" Enter \\\"todo [task]\\\" to add a task\\n\" +","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"honglinshang"},"content":"                \" Enter \\\"deadline [task] /by [date]\\\" to add a deadline\\n\" +","lastModifiedDate":"2023-02-09"},{"lineNumber":36,"author":{"gitId":"honglinshang"},"content":"                \" Enter \\\"event [task] /from [date] /to [date]\\\" to add an event\\n\" +","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"honglinshang"},"content":"                \" Enter \\\"mark [idx]\\\" to mark task as done\\n\" +","lastModifiedDate":"2023-02-09"},{"lineNumber":38,"author":{"gitId":"honglinshang"},"content":"                \" Enter \\\"unmark [idx]\\\" to mark task as not done\\n\" +","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"honglinshang"},"content":"                \" Enter \\\"delete [idx]\\\" to remove task from list\\n\" +","lastModifiedDate":"2023-02-14"},{"lineNumber":40,"author":{"gitId":"honglinshang"},"content":"                \" Enter \\\"bye\\\" to exit the program\\n\" +","lastModifiedDate":"2023-02-09"},{"lineNumber":41,"author":{"gitId":"honglinshang"},"content":"                DIVIDER);","lastModifiedDate":"2023-02-09"},{"lineNumber":42,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":43,"author":{"gitId":"honglinshang"},"content":"    public static void printAddMessage(Task newTask) {","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"honglinshang"},"content":"        System.out.println(","lastModifiedDate":"2023-02-09"},{"lineNumber":45,"author":{"gitId":"honglinshang"},"content":"                DIVIDER + \"Got it. I\u0027ve added this \" + newTask.getType() + \":\\n\" +","lastModifiedDate":"2023-02-09"},{"lineNumber":46,"author":{"gitId":"honglinshang"},"content":"                \"  \" + newTask + \"\\n\" + DIVIDER);","lastModifiedDate":"2023-02-09"},{"lineNumber":47,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":49,"author":{"gitId":"honglinshang"},"content":"    public static void printList(ArrayList\u003cTask\u003e allTasks) {","lastModifiedDate":"2023-02-14"},{"lineNumber":50,"author":{"gitId":"honglinshang"},"content":"        System.out.println(DIVIDER +","lastModifiedDate":"2023-02-09"},{"lineNumber":51,"author":{"gitId":"honglinshang"},"content":"                \"Here are the tasks in your list:\");","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"honglinshang"},"content":"        for (int i \u003d 0; i \u003c allTasks.size(); i++) {","lastModifiedDate":"2023-02-14"},{"lineNumber":53,"author":{"gitId":"honglinshang"},"content":"            System.out.println(i+1 + \".\" + allTasks.get(i));","lastModifiedDate":"2023-02-14"},{"lineNumber":54,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":55,"author":{"gitId":"honglinshang"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-02-09"},{"lineNumber":56,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":57,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":58,"author":{"gitId":"honglinshang"},"content":"    public static void printMarkDone(Task doneTask) {","lastModifiedDate":"2023-02-11"},{"lineNumber":59,"author":{"gitId":"honglinshang"},"content":"        System.out.println(DIVIDER +","lastModifiedDate":"2023-02-11"},{"lineNumber":60,"author":{"gitId":"honglinshang"},"content":"                \"Nice!, I\u0027ve marked this task as done:\\n\" +","lastModifiedDate":"2023-02-11"},{"lineNumber":61,"author":{"gitId":"honglinshang"},"content":"                \"  \" + doneTask + \"\\n\" + DIVIDER);","lastModifiedDate":"2023-02-14"},{"lineNumber":62,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":63,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":64,"author":{"gitId":"honglinshang"},"content":"    public static void printMarkNotDone(Task notDoneTask) {","lastModifiedDate":"2023-02-11"},{"lineNumber":65,"author":{"gitId":"honglinshang"},"content":"        System.out.println(DIVIDER +","lastModifiedDate":"2023-02-11"},{"lineNumber":66,"author":{"gitId":"honglinshang"},"content":"                \"OK, I\u0027ve marked this task as not done yet:\\n\" +","lastModifiedDate":"2023-02-11"},{"lineNumber":67,"author":{"gitId":"honglinshang"},"content":"                \"  \" + notDoneTask + \"\\n\" + DIVIDER);","lastModifiedDate":"2023-02-14"},{"lineNumber":68,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":69,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":70,"author":{"gitId":"honglinshang"},"content":"    public static void printDeleted(Task deletedTask) {","lastModifiedDate":"2023-02-14"},{"lineNumber":71,"author":{"gitId":"honglinshang"},"content":"        System.out.println(DIVIDER +","lastModifiedDate":"2023-02-09"},{"lineNumber":72,"author":{"gitId":"honglinshang"},"content":"                \"Noted, I\u0027ve removed this task:\\n\" +","lastModifiedDate":"2023-02-14"},{"lineNumber":73,"author":{"gitId":"honglinshang"},"content":"                \"  \" + deletedTask + \"\\n\" +","lastModifiedDate":"2023-02-14"},{"lineNumber":74,"author":{"gitId":"honglinshang"},"content":"                \"Now you have \" + (allTasks.size()-1) + \" tasks in the list\\n\" +","lastModifiedDate":"2023-02-14"},{"lineNumber":75,"author":{"gitId":"honglinshang"},"content":"                DIVIDER);","lastModifiedDate":"2023-02-09"},{"lineNumber":76,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":77,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":78,"author":{"gitId":"honglinshang"},"content":"    public static void printExitMessage() {","lastModifiedDate":"2023-02-14"},{"lineNumber":79,"author":{"gitId":"honglinshang"},"content":"        System.out.println(DIVIDER +","lastModifiedDate":"2023-02-09"},{"lineNumber":80,"author":{"gitId":"honglinshang"},"content":"                \"Bye. Hope to see you again soon!\\n\" +","lastModifiedDate":"2023-02-14"},{"lineNumber":81,"author":{"gitId":"honglinshang"},"content":"                DIVIDER);","lastModifiedDate":"2023-02-09"},{"lineNumber":82,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":83,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":84,"author":{"gitId":"honglinshang"},"content":"    // error messages","lastModifiedDate":"2023-02-14"},{"lineNumber":85,"author":{"gitId":"honglinshang"},"content":"    public static void printErrorForIdx() {","lastModifiedDate":"2023-02-09"},{"lineNumber":86,"author":{"gitId":"honglinshang"},"content":"        if (allTasks.size() !\u003d 0) {","lastModifiedDate":"2023-02-14"},{"lineNumber":87,"author":{"gitId":"honglinshang"},"content":"            System.out.println(DIVIDER +","lastModifiedDate":"2023-02-09"},{"lineNumber":88,"author":{"gitId":"honglinshang"},"content":"                    \"Please enter [idx] in the form of an integer from 1 to \" + allTasks.size() + \".\\n\" +","lastModifiedDate":"2023-02-14"},{"lineNumber":89,"author":{"gitId":"honglinshang"},"content":"                    DIVIDER);","lastModifiedDate":"2023-02-09"},{"lineNumber":90,"author":{"gitId":"honglinshang"},"content":"        } else {","lastModifiedDate":"2023-02-14"},{"lineNumber":91,"author":{"gitId":"honglinshang"},"content":"            System.out.println(DIVIDER + \"There are no tasks in your list!\\n\" + DIVIDER);","lastModifiedDate":"2023-02-14"},{"lineNumber":92,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":93,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":94,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":95,"author":{"gitId":"honglinshang"},"content":"    public static void printErrorForIO() {","lastModifiedDate":"2023-02-15"},{"lineNumber":96,"author":{"gitId":"honglinshang"},"content":"        System.out.println(DIVIDER +","lastModifiedDate":"2023-02-15"},{"lineNumber":97,"author":{"gitId":"honglinshang"},"content":"                \"Something went wrong with the hard disk :(\\n\" +","lastModifiedDate":"2023-02-15"},{"lineNumber":98,"author":{"gitId":"honglinshang"},"content":"                DIVIDER);","lastModifiedDate":"2023-02-15"},{"lineNumber":99,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":100,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":101,"author":{"gitId":"honglinshang"},"content":"    public static void printErrorFileNotFound() {","lastModifiedDate":"2023-02-15"},{"lineNumber":102,"author":{"gitId":"honglinshang"},"content":"        System.out.println(DIVIDER +","lastModifiedDate":"2023-02-15"},{"lineNumber":103,"author":{"gitId":"honglinshang"},"content":"                \"Save file not found, initialising empty list...\\n\" +","lastModifiedDate":"2023-02-15"},{"lineNumber":104,"author":{"gitId":"honglinshang"},"content":"                DIVIDER);","lastModifiedDate":"2023-02-15"},{"lineNumber":105,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":106,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":107,"author":{"gitId":"honglinshang"},"content":"    public static void printInvalidDeadline() {","lastModifiedDate":"2023-02-09"},{"lineNumber":108,"author":{"gitId":"honglinshang"},"content":"        System.out.println(INVALID_DEADLINE);","lastModifiedDate":"2023-02-09"},{"lineNumber":109,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":110,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":111,"author":{"gitId":"honglinshang"},"content":"    public static void printInvalidEvent() {","lastModifiedDate":"2023-02-09"},{"lineNumber":112,"author":{"gitId":"honglinshang"},"content":"        System.out.println(INVALID_EVENT);","lastModifiedDate":"2023-02-09"},{"lineNumber":113,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":114,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":115,"author":{"gitId":"honglinshang"},"content":"    public static void printInvalidCommand() {","lastModifiedDate":"2023-02-09"},{"lineNumber":116,"author":{"gitId":"honglinshang"},"content":"        System.out.println(INVALID_COMMAND);","lastModifiedDate":"2023-02-09"},{"lineNumber":117,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":118,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":119,"author":{"gitId":"honglinshang"},"content":"    public static void printInvalidSaveFile(int counter) {","lastModifiedDate":"2023-02-15"},{"lineNumber":120,"author":{"gitId":"honglinshang"},"content":"        System.out.println(DIVIDER + \"There is an error in save.txt at line \" + (counter+1) + \"\\n\" +","lastModifiedDate":"2023-02-15"},{"lineNumber":121,"author":{"gitId":"honglinshang"},"content":"                \"Task \" + (counter+1) + \" has been excluded. You can edit the save file at:\\n\" +","lastModifiedDate":"2023-02-15"},{"lineNumber":122,"author":{"gitId":"honglinshang"},"content":"                FILE_PATH + \"\\n\" + DIVIDER);","lastModifiedDate":"2023-02-15"},{"lineNumber":123,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":124,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":125,"author":{"gitId":"honglinshang"},"content":"    public static void printEmptyTask() {","lastModifiedDate":"2023-02-09"},{"lineNumber":126,"author":{"gitId":"honglinshang"},"content":"        System.out.println(EMPTY_TASK_DESCRIPTION);","lastModifiedDate":"2023-02-09"},{"lineNumber":127,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":128,"author":{"gitId":"honglinshang"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"honglinshang":128}},{"path":"src/main/java/duke/Processor.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"honglinshang"},"content":"package duke;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"honglinshang"},"content":"import duke.exception.InvalidDeadline;","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"honglinshang"},"content":"import duke.exception.InvalidEvent;","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"honglinshang"},"content":"public class Processor {","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"honglinshang"},"content":"    public static String[] command(String userCommand) {","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"honglinshang"},"content":"        final String[] split \u003d userCommand.trim().split(\"\\\\s+\", 2);","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"honglinshang"},"content":"        return (split.length \u003d\u003d 2) ? split : new String[]{split[0], \"\"};","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"honglinshang"},"content":"    public static String[] deadline(String param) throws InvalidDeadline {","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"honglinshang"},"content":"        String[] split \u003d param.trim().split(\"\\\\s/by\\\\s\", 2);","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"honglinshang"},"content":"        if (split.length !\u003d 2) {","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"honglinshang"},"content":"            throw new InvalidDeadline();","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"honglinshang"},"content":"        return split;","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"honglinshang"},"content":"    public static String[] event(String param) throws InvalidEvent {","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"honglinshang"},"content":"        String[] split \u003d param.trim().split(\"\\\\s/from\\\\s|\\\\s/to\\\\s\", 3);","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"honglinshang"},"content":"        if (split.length !\u003d 3) {","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"honglinshang"},"content":"            throw new InvalidEvent();","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":25,"author":{"gitId":"honglinshang"},"content":"        return split;","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":27,"author":{"gitId":"honglinshang"},"content":"}","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"honglinshang":27}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"honglinshang"},"content":"package duke;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"honglinshang"},"content":"import duke.exception.InvalidDeadline;","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"honglinshang"},"content":"import duke.exception.InvalidEvent;","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"honglinshang"},"content":"import duke.exception.InvalidSaveFile;","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"honglinshang"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"honglinshang"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"honglinshang"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"honglinshang"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"honglinshang"},"content":"import java.io.File;","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"honglinshang"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"honglinshang"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"honglinshang"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"honglinshang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"honglinshang"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"honglinshang"},"content":"import static duke.Duke.allTasks;","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"honglinshang"},"content":"public class Storage {","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"honglinshang"},"content":"    public static final String FILE_PATH \u003d \"/Users/linshang/Documents/cs2113/ip/save.txt\";","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"honglinshang"},"content":"    private static final char TXT_TODO_WORD \u003d \u0027T\u0027;","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"honglinshang"},"content":"    private static final char TXT_DEADLINE_WORD \u003d \u0027D\u0027;","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"honglinshang"},"content":"    private static final char TXT_EVENT_WORD \u003d \u0027E\u0027;","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"honglinshang"},"content":"    private static Task newTask(String text) throws InvalidSaveFile {","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"honglinshang"},"content":"        char type \u003d text.charAt(0);","lastModifiedDate":"2023-02-14"},{"lineNumber":28,"author":{"gitId":"honglinshang"},"content":"        char status \u003d text.charAt(4);","lastModifiedDate":"2023-02-14"},{"lineNumber":29,"author":{"gitId":"honglinshang"},"content":"        String param \u003d text.substring(8);","lastModifiedDate":"2023-02-14"},{"lineNumber":30,"author":{"gitId":"honglinshang"},"content":"        switch (type) {","lastModifiedDate":"2023-02-14"},{"lineNumber":31,"author":{"gitId":"honglinshang"},"content":"        case TXT_TODO_WORD:","lastModifiedDate":"2023-02-14"},{"lineNumber":32,"author":{"gitId":"honglinshang"},"content":"            ToDo newToDo \u003d new ToDo(param);","lastModifiedDate":"2023-02-14"},{"lineNumber":33,"author":{"gitId":"honglinshang"},"content":"            markStatus(status, newToDo);","lastModifiedDate":"2023-02-15"},{"lineNumber":34,"author":{"gitId":"honglinshang"},"content":"            return newToDo;","lastModifiedDate":"2023-02-14"},{"lineNumber":35,"author":{"gitId":"honglinshang"},"content":"        case TXT_DEADLINE_WORD:","lastModifiedDate":"2023-02-14"},{"lineNumber":36,"author":{"gitId":"honglinshang"},"content":"            final String[] paramAndBy;","lastModifiedDate":"2023-02-15"},{"lineNumber":37,"author":{"gitId":"honglinshang"},"content":"            try {","lastModifiedDate":"2023-02-15"},{"lineNumber":38,"author":{"gitId":"honglinshang"},"content":"                paramAndBy \u003d Processor.deadline(param);","lastModifiedDate":"2023-02-15"},{"lineNumber":39,"author":{"gitId":"honglinshang"},"content":"            } catch (InvalidDeadline e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":40,"author":{"gitId":"honglinshang"},"content":"                throw new InvalidSaveFile();","lastModifiedDate":"2023-02-15"},{"lineNumber":41,"author":{"gitId":"honglinshang"},"content":"            }","lastModifiedDate":"2023-02-14"},{"lineNumber":42,"author":{"gitId":"honglinshang"},"content":"            Deadline newDeadline \u003d new Deadline(paramAndBy[0], paramAndBy[1]);","lastModifiedDate":"2023-02-15"},{"lineNumber":43,"author":{"gitId":"honglinshang"},"content":"            markStatus(status, newDeadline);","lastModifiedDate":"2023-02-15"},{"lineNumber":44,"author":{"gitId":"honglinshang"},"content":"            return newDeadline;","lastModifiedDate":"2023-02-14"},{"lineNumber":45,"author":{"gitId":"honglinshang"},"content":"        case TXT_EVENT_WORD:","lastModifiedDate":"2023-02-14"},{"lineNumber":46,"author":{"gitId":"honglinshang"},"content":"            final String[] paramAndFromTo;","lastModifiedDate":"2023-02-15"},{"lineNumber":47,"author":{"gitId":"honglinshang"},"content":"            try {","lastModifiedDate":"2023-02-15"},{"lineNumber":48,"author":{"gitId":"honglinshang"},"content":"                paramAndFromTo \u003d Processor.event(param);","lastModifiedDate":"2023-02-15"},{"lineNumber":49,"author":{"gitId":"honglinshang"},"content":"            } catch (InvalidEvent e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":50,"author":{"gitId":"honglinshang"},"content":"                throw new InvalidSaveFile();","lastModifiedDate":"2023-02-15"},{"lineNumber":51,"author":{"gitId":"honglinshang"},"content":"            }","lastModifiedDate":"2023-02-14"},{"lineNumber":52,"author":{"gitId":"honglinshang"},"content":"            Event newEvent \u003d new Event(paramAndFromTo[0], paramAndFromTo[1], paramAndFromTo[2]);","lastModifiedDate":"2023-02-15"},{"lineNumber":53,"author":{"gitId":"honglinshang"},"content":"            markStatus(status, newEvent);","lastModifiedDate":"2023-02-15"},{"lineNumber":54,"author":{"gitId":"honglinshang"},"content":"            return newEvent;","lastModifiedDate":"2023-02-14"},{"lineNumber":55,"author":{"gitId":"honglinshang"},"content":"        default:","lastModifiedDate":"2023-02-14"},{"lineNumber":56,"author":{"gitId":"honglinshang"},"content":"            throw new InvalidSaveFile();","lastModifiedDate":"2023-02-14"},{"lineNumber":57,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":58,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":59,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":60,"author":{"gitId":"honglinshang"},"content":"    private static void markStatus(char status, Task newTask) {","lastModifiedDate":"2023-02-15"},{"lineNumber":61,"author":{"gitId":"honglinshang"},"content":"        if (status \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2023-02-15"},{"lineNumber":62,"author":{"gitId":"honglinshang"},"content":"            newTask.setDone(true);","lastModifiedDate":"2023-02-15"},{"lineNumber":63,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":64,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":65,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":66,"author":{"gitId":"honglinshang"},"content":"    private static ArrayList\u003cTask\u003e readFileContents(File save) throws FileNotFoundException {","lastModifiedDate":"2023-02-15"},{"lineNumber":67,"author":{"gitId":"honglinshang"},"content":"        Scanner s \u003d new Scanner(save);","lastModifiedDate":"2023-02-14"},{"lineNumber":68,"author":{"gitId":"honglinshang"},"content":"        ArrayList\u003cTask\u003e newArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-15"},{"lineNumber":69,"author":{"gitId":"honglinshang"},"content":"        int counter \u003d 0;","lastModifiedDate":"2023-02-14"},{"lineNumber":70,"author":{"gitId":"honglinshang"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2023-02-14"},{"lineNumber":71,"author":{"gitId":"honglinshang"},"content":"            try {","lastModifiedDate":"2023-02-14"},{"lineNumber":72,"author":{"gitId":"honglinshang"},"content":"                newArrayList.add(newTask(s.nextLine()));","lastModifiedDate":"2023-02-15"},{"lineNumber":73,"author":{"gitId":"honglinshang"},"content":"                counter++;","lastModifiedDate":"2023-02-14"},{"lineNumber":74,"author":{"gitId":"honglinshang"},"content":"            } catch (InvalidSaveFile e) {","lastModifiedDate":"2023-02-14"},{"lineNumber":75,"author":{"gitId":"honglinshang"},"content":"                Output.printInvalidSaveFile(counter);","lastModifiedDate":"2023-02-15"},{"lineNumber":76,"author":{"gitId":"honglinshang"},"content":"            }","lastModifiedDate":"2023-02-14"},{"lineNumber":77,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":78,"author":{"gitId":"honglinshang"},"content":"        return newArrayList;","lastModifiedDate":"2023-02-15"},{"lineNumber":79,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":80,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":81,"author":{"gitId":"honglinshang"},"content":"    public static ArrayList\u003cTask\u003e initDuke() throws IOException {","lastModifiedDate":"2023-02-15"},{"lineNumber":82,"author":{"gitId":"honglinshang"},"content":"        ArrayList\u003cTask\u003e newAllTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-15"},{"lineNumber":83,"author":{"gitId":"honglinshang"},"content":"        File save \u003d new File(FILE_PATH);","lastModifiedDate":"2023-02-15"},{"lineNumber":84,"author":{"gitId":"honglinshang"},"content":"        try {","lastModifiedDate":"2023-02-14"},{"lineNumber":85,"author":{"gitId":"honglinshang"},"content":"            newAllTasks \u003d readFileContents(save);","lastModifiedDate":"2023-02-15"},{"lineNumber":86,"author":{"gitId":"honglinshang"},"content":"            return newAllTasks;","lastModifiedDate":"2023-02-15"},{"lineNumber":87,"author":{"gitId":"honglinshang"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-02-14"},{"lineNumber":88,"author":{"gitId":"honglinshang"},"content":"            Output.printErrorFileNotFound();","lastModifiedDate":"2023-02-15"},{"lineNumber":89,"author":{"gitId":"honglinshang"},"content":"            save.createNewFile();","lastModifiedDate":"2023-02-15"},{"lineNumber":90,"author":{"gitId":"honglinshang"},"content":"            return newAllTasks;","lastModifiedDate":"2023-02-15"},{"lineNumber":91,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":92,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":93,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":94,"author":{"gitId":"honglinshang"},"content":"    public static void updateDuke() throws IOException {","lastModifiedDate":"2023-02-15"},{"lineNumber":95,"author":{"gitId":"honglinshang"},"content":"        FileWriter overwrite \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2023-02-15"},{"lineNumber":96,"author":{"gitId":"honglinshang"},"content":"        for (Task task : allTasks) {","lastModifiedDate":"2023-02-15"},{"lineNumber":97,"author":{"gitId":"honglinshang"},"content":"            String desc \u003d task.getDescription();","lastModifiedDate":"2023-02-15"},{"lineNumber":98,"author":{"gitId":"honglinshang"},"content":"            String type \u003d task.getType();","lastModifiedDate":"2023-02-15"},{"lineNumber":99,"author":{"gitId":"honglinshang"},"content":"            String stat \u003d task.getStatus();","lastModifiedDate":"2023-02-15"},{"lineNumber":100,"author":{"gitId":"honglinshang"},"content":"            switch (type) {","lastModifiedDate":"2023-02-15"},{"lineNumber":101,"author":{"gitId":"honglinshang"},"content":"            case \"todo\":","lastModifiedDate":"2023-02-15"},{"lineNumber":102,"author":{"gitId":"honglinshang"},"content":"                overwrite.write(\"T | \" + stat + \" | \" + desc + \"\\n\");","lastModifiedDate":"2023-02-15"},{"lineNumber":103,"author":{"gitId":"honglinshang"},"content":"                break;","lastModifiedDate":"2023-02-15"},{"lineNumber":104,"author":{"gitId":"honglinshang"},"content":"            case \"deadline\":","lastModifiedDate":"2023-02-15"},{"lineNumber":105,"author":{"gitId":"honglinshang"},"content":"                Deadline tempDeadline \u003d (Deadline) task;","lastModifiedDate":"2023-02-15"},{"lineNumber":106,"author":{"gitId":"honglinshang"},"content":"                String by \u003d tempDeadline.getBy();","lastModifiedDate":"2023-02-15"},{"lineNumber":107,"author":{"gitId":"honglinshang"},"content":"                overwrite.write(\"D | \" + stat + \" | \" + desc + \" /by \" + by + \"\\n\");","lastModifiedDate":"2023-02-15"},{"lineNumber":108,"author":{"gitId":"honglinshang"},"content":"                break;","lastModifiedDate":"2023-02-15"},{"lineNumber":109,"author":{"gitId":"honglinshang"},"content":"            case \"event\":","lastModifiedDate":"2023-02-15"},{"lineNumber":110,"author":{"gitId":"honglinshang"},"content":"                Event tempEvent \u003d (Event) task;","lastModifiedDate":"2023-02-15"},{"lineNumber":111,"author":{"gitId":"honglinshang"},"content":"                String from \u003d tempEvent.getFrom();","lastModifiedDate":"2023-02-15"},{"lineNumber":112,"author":{"gitId":"honglinshang"},"content":"                String to \u003d tempEvent.getTo();","lastModifiedDate":"2023-02-15"},{"lineNumber":113,"author":{"gitId":"honglinshang"},"content":"                overwrite.write(\"E | \" + stat + \" | \" + desc + \" /from \" + from + \" /to \" + to + \"\\n\");","lastModifiedDate":"2023-02-15"},{"lineNumber":114,"author":{"gitId":"honglinshang"},"content":"                break;","lastModifiedDate":"2023-02-15"},{"lineNumber":115,"author":{"gitId":"honglinshang"},"content":"            }","lastModifiedDate":"2023-02-15"},{"lineNumber":116,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":117,"author":{"gitId":"honglinshang"},"content":"        overwrite.close();","lastModifiedDate":"2023-02-15"},{"lineNumber":118,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":119,"author":{"gitId":"honglinshang"},"content":"}","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"honglinshang":119}},{"path":"src/main/java/duke/exception/EmptyTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"honglinshang"},"content":"package duke.exception;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"honglinshang"},"content":"public class EmptyTaskException extends Throwable {","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"honglinshang"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"honglinshang":4}},{"path":"src/main/java/duke/exception/IllegalCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"honglinshang"},"content":"package duke.exception;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"honglinshang"},"content":"public class IllegalCommandException extends Throwable {","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"honglinshang"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"honglinshang":4}},{"path":"src/main/java/duke/exception/InvalidDeadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"honglinshang"},"content":"package duke.exception;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"honglinshang"},"content":"public class InvalidDeadline extends Throwable {","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"honglinshang"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"honglinshang":4}},{"path":"src/main/java/duke/exception/InvalidEvent.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"honglinshang"},"content":"package duke.exception;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"honglinshang"},"content":"public class InvalidEvent extends Throwable {","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"honglinshang"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"honglinshang":4}},{"path":"src/main/java/duke/exception/InvalidSaveFile.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"honglinshang"},"content":"package duke.exception;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"honglinshang"},"content":"public class InvalidSaveFile extends Throwable {","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"honglinshang"},"content":"}","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"honglinshang":4}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"honglinshang"},"content":"package duke.task;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"honglinshang"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"honglinshang"},"content":"    public static final String DEADLINE_LABEL \u003d \"D\";","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"honglinshang"},"content":"    protected String by;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"honglinshang"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"honglinshang"},"content":"        super(description);","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"honglinshang"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"honglinshang"},"content":"    public String getType() {","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"honglinshang"},"content":"        return \"deadline\";","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"honglinshang"},"content":"    public String getBy() {","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"honglinshang"},"content":"        return by;","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"honglinshang"},"content":"    public void setBy(String by) {","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"honglinshang"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"honglinshang"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"honglinshang"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"honglinshang"},"content":"        return \"[\" + DEADLINE_LABEL + \"][\" + getStatus() + \"] \" + description + \" (by: \" + by + \")\";","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"honglinshang"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"honglinshang":29}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"honglinshang"},"content":"package duke.task;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"honglinshang"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"honglinshang"},"content":"    public static final String EVENT_LABEL \u003d \"E\";","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"honglinshang"},"content":"    protected String from;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"honglinshang"},"content":"    protected String to;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"honglinshang"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"honglinshang"},"content":"        super(description);","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"honglinshang"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"honglinshang"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"honglinshang"},"content":"    public String getType() {","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"honglinshang"},"content":"        return \"event\";","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"honglinshang"},"content":"    public String getFrom() {","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"honglinshang"},"content":"        return from;","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"honglinshang"},"content":"    public void setFrom(String from) {","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"honglinshang"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"honglinshang"},"content":"    public String getTo() {","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"honglinshang"},"content":"        return to;","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"honglinshang"},"content":"    public void setTo(String to) {","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"honglinshang"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"honglinshang"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"honglinshang"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"honglinshang"},"content":"        return \"[\" + EVENT_LABEL + \"][\" + getStatus() + \"] \" + description + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"honglinshang"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"honglinshang":38}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"honglinshang"},"content":"package duke.task;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"honglinshang"},"content":"public abstract class Task {","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"honglinshang"},"content":"    protected String description;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"honglinshang"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"honglinshang"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"honglinshang"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"honglinshang"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"honglinshang"},"content":"    public String getType() {","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"honglinshang"},"content":"        return \"task\";","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"honglinshang"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"honglinshang"},"content":"        return description;","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"honglinshang"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"honglinshang"},"content":"        return isDone;","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"honglinshang"},"content":"    public String getStatus() {","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"honglinshang"},"content":"        return (isDone() ? \"X\" : \" \");","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"honglinshang"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"honglinshang"},"content":"        isDone \u003d done;","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"honglinshang"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"honglinshang"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"honglinshang"},"content":"        return description;","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"honglinshang"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"honglinshang":36}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"honglinshang"},"content":"package duke.task;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"honglinshang"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"honglinshang"},"content":"    public static final String TODO_LABEL \u003d \"T\";","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"honglinshang"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"honglinshang"},"content":"        super(description);","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"honglinshang"},"content":"    public String getType() {","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"honglinshang"},"content":"        return \"todo\";","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"honglinshang"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"honglinshang"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"honglinshang"},"content":"        return \"[\" + TODO_LABEL + \"][\" + getStatus() + \"] \" + description;","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"honglinshang"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"honglinshang":18}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"honglinshang"},"content":"help","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"list","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"honglinshang"},"content":"todo","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"honglinshang"},"content":"todo eat lunch","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"honglinshang"},"content":"deadline","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"honglinshang"},"content":"deadline submit tutorial","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"honglinshang"},"content":"deadline submit tutorial /by 10pm","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"honglinshang"},"content":"event","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"honglinshang"},"content":"event lecture /from 9am","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"honglinshang"},"content":"event lecture /from 9am /to 11am","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"honglinshang"},"content":"list","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"honglinshang"},"content":"mark eat lunch","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"honglinshang"},"content":"mark 8","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"honglinshang"},"content":"mark 5","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"honglinshang"},"content":"list","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"honglinshang"},"content":"unmark 5","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"honglinshang"},"content":"list","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"honglinshang"},"content":"delete eat lunch","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"honglinshang"},"content":"delete 0","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"honglinshang"},"content":"delete 4","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"honglinshang"},"content":"list","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"honglinshang"},"content":"hello","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"honglinshang"},"content":"bye","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"honglinshang":23}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"honglinshang"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java ../src/main/java/duke/exception/*.java ../src/main/java/duke/task/*.java","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"honglinshang"},"content":"cp save_test.txt /Users/linshang/Documents/cs2113/ip/save.txt","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"honglinshang"},"content":"java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"honglinshang":3,"-":36}},{"path":"text-ui-test/save_test.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"honglinshang"},"content":"T | X | read book","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"D |   | return book /by June 6th","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"honglinshang"},"content":"D |   | join sports club by tomorrow","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"honglinshang"},"content":"E | X | project meeting Aug 6th /from 2pm /to 4pm","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"honglinshang":4}}]
