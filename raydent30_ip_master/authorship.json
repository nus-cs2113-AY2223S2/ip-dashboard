[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"raydent30"},"content":"# duke.Duke project template","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"raydent30"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"raydent30":2,"-":22}},{"path":"data/tasklist.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"raydent30"},"content":"[T][X] borrow book","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"raydent30"},"content":"[D][X] return book (by: Sunday)","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"raydent30"},"content":"[E][X] project meeting (from: Mon 2pm to: 4pm)","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"raydent30"},"content":"[T][X] homework","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"raydent30"},"content":"[D][X] ip (by: Friday night)","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"raydent30"},"content":"[T][X] this project","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"raydent30":6}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raydent30"},"content":"package duke;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"raydent30"},"content":"import duke.command.MainFunctions;","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"raydent30"},"content":"import duke.exception.BlankDescException;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"raydent30"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"raydent30"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"raydent30"},"content":"import java.io.File;","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"raydent30"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"raydent30"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"raydent30"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"raydent30"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"raydent30"},"content":"    public static int userTextCount \u003d 0;","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"raydent30"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"raydent30"},"content":"        MainFunctions.printWelcome();","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"raydent30"},"content":"        String userCommand \u003d scanner.nextLine();","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"raydent30"},"content":"        ArrayList\u003cTask\u003e storedUserTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"raydent30"},"content":"        try {","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"raydent30"},"content":"            MainFunctions.readData(storedUserTasks);","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"raydent30"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"raydent30"},"content":"            File f \u003d new File(\"data/tasklist.txt\");","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"raydent30"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"raydent30"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"raydent30"},"content":"        while(!isExit){","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"raydent30"},"content":"            switch (userCommand.split(\" \")[0]) {","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"raydent30"},"content":"            case \"list\":","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"raydent30"},"content":"                MainFunctions.listTasks(userTextCount, storedUserTasks);","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"raydent30"},"content":"                break;","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"raydent30"},"content":"            case \"bye\":","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"raydent30"},"content":"                isExit \u003d true;","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"raydent30"},"content":"                break;","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"raydent30"},"content":"            case \"mark\":","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"raydent30"},"content":"                MainFunctions.markTask(userCommand, storedUserTasks);","lastModifiedDate":"2023-02-08"},{"lineNumber":45,"author":{"gitId":"raydent30"},"content":"                break;","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"raydent30"},"content":"            case \"unmark\":","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"raydent30"},"content":"                MainFunctions.unmarkTask(userCommand, storedUserTasks);","lastModifiedDate":"2023-02-08"},{"lineNumber":48,"author":{"gitId":"raydent30"},"content":"                break;","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"raydent30"},"content":"            case \"delete\":","lastModifiedDate":"2023-02-16"},{"lineNumber":50,"author":{"gitId":"raydent30"},"content":"                MainFunctions.deleteTask(userCommand, storedUserTasks);","lastModifiedDate":"2023-02-16"},{"lineNumber":51,"author":{"gitId":"raydent30"},"content":"                break;","lastModifiedDate":"2023-02-16"},{"lineNumber":52,"author":{"gitId":"raydent30"},"content":"            case \"todo\":","lastModifiedDate":"2023-02-02"},{"lineNumber":53,"author":{"gitId":"raydent30"},"content":"                try {","lastModifiedDate":"2023-02-09"},{"lineNumber":54,"author":{"gitId":"raydent30"},"content":"                    MainFunctions.createTodo(userCommand, storedUserTasks);","lastModifiedDate":"2023-02-08"},{"lineNumber":55,"author":{"gitId":"raydent30"},"content":"                } catch (BlankDescException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":56,"author":{"gitId":"raydent30"},"content":"                    BlankDescException.errorMessage(\"todo\");","lastModifiedDate":"2023-02-09"},{"lineNumber":57,"author":{"gitId":"raydent30"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":58,"author":{"gitId":"raydent30"},"content":"                    DukeException.errorMessage();","lastModifiedDate":"2023-02-09"},{"lineNumber":59,"author":{"gitId":"raydent30"},"content":"                }","lastModifiedDate":"2023-02-09"},{"lineNumber":60,"author":{"gitId":"raydent30"},"content":"                break;","lastModifiedDate":"2023-02-02"},{"lineNumber":61,"author":{"gitId":"raydent30"},"content":"            case \"deadline\":","lastModifiedDate":"2023-02-02"},{"lineNumber":62,"author":{"gitId":"raydent30"},"content":"                try {","lastModifiedDate":"2023-02-09"},{"lineNumber":63,"author":{"gitId":"raydent30"},"content":"                    MainFunctions.createDeadline(userCommand, storedUserTasks);","lastModifiedDate":"2023-02-08"},{"lineNumber":64,"author":{"gitId":"raydent30"},"content":"                } catch (BlankDescException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":65,"author":{"gitId":"raydent30"},"content":"                    BlankDescException.errorMessage(\"deadline\");","lastModifiedDate":"2023-02-09"},{"lineNumber":66,"author":{"gitId":"raydent30"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":67,"author":{"gitId":"raydent30"},"content":"                    DukeException.errorMessage();","lastModifiedDate":"2023-02-09"},{"lineNumber":68,"author":{"gitId":"raydent30"},"content":"                }","lastModifiedDate":"2023-02-09"},{"lineNumber":69,"author":{"gitId":"raydent30"},"content":"                break;","lastModifiedDate":"2023-02-02"},{"lineNumber":70,"author":{"gitId":"raydent30"},"content":"            case \"event\":","lastModifiedDate":"2023-02-02"},{"lineNumber":71,"author":{"gitId":"raydent30"},"content":"                try {","lastModifiedDate":"2023-02-09"},{"lineNumber":72,"author":{"gitId":"raydent30"},"content":"                    MainFunctions.createEvent(userCommand, storedUserTasks);","lastModifiedDate":"2023-02-08"},{"lineNumber":73,"author":{"gitId":"raydent30"},"content":"                } catch (BlankDescException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":74,"author":{"gitId":"raydent30"},"content":"                    BlankDescException.errorMessage(\"event\");","lastModifiedDate":"2023-02-09"},{"lineNumber":75,"author":{"gitId":"raydent30"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":76,"author":{"gitId":"raydent30"},"content":"                    DukeException.errorMessage();","lastModifiedDate":"2023-02-09"},{"lineNumber":77,"author":{"gitId":"raydent30"},"content":"                }","lastModifiedDate":"2023-02-09"},{"lineNumber":78,"author":{"gitId":"raydent30"},"content":"                break;","lastModifiedDate":"2023-02-02"},{"lineNumber":79,"author":{"gitId":"raydent30"},"content":"            default:","lastModifiedDate":"2023-02-02"},{"lineNumber":80,"author":{"gitId":"raydent30"},"content":"                MainFunctions.invalidInput();","lastModifiedDate":"2023-02-03"},{"lineNumber":81,"author":{"gitId":"raydent30"},"content":"                break;","lastModifiedDate":"2023-01-25"},{"lineNumber":82,"author":{"gitId":"raydent30"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":83,"author":{"gitId":"raydent30"},"content":"            if(!isExit) {","lastModifiedDate":"2023-02-03"},{"lineNumber":84,"author":{"gitId":"raydent30"},"content":"                userCommand \u003d scanner.nextLine();","lastModifiedDate":"2023-02-03"},{"lineNumber":85,"author":{"gitId":"raydent30"},"content":"            }","lastModifiedDate":"2023-02-03"},{"lineNumber":86,"author":{"gitId":"raydent30"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":87,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":88,"author":{"gitId":"raydent30"},"content":"        try {","lastModifiedDate":"2023-02-17"},{"lineNumber":89,"author":{"gitId":"raydent30"},"content":"            MainFunctions.writeData(storedUserTasks);","lastModifiedDate":"2023-02-17"},{"lineNumber":90,"author":{"gitId":"raydent30"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":91,"author":{"gitId":"raydent30"},"content":"            System.out.println(\"Failed to save data!\");","lastModifiedDate":"2023-02-17"},{"lineNumber":92,"author":{"gitId":"raydent30"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":93,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":94,"author":{"gitId":"raydent30"},"content":"        MainFunctions.printGoodbye();","lastModifiedDate":"2023-02-03"},{"lineNumber":95,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"raydent30":93,"-":4}},{"path":"src/main/java/duke/command/MainFunctions.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raydent30"},"content":"package duke.command;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"raydent30"},"content":"import duke.Duke;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"raydent30"},"content":"import duke.exception.BlankDescException;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"raydent30"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"raydent30"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"raydent30"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"raydent30"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"raydent30"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"raydent30"},"content":"import java.io.File;","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"raydent30"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"raydent30"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"raydent30"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"raydent30"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"raydent30"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"raydent30"},"content":"public class MainFunctions {","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"raydent30"},"content":"    public static final String LOGO \u003d","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"raydent30"},"content":"            \"\\t __   __\\n\"","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"raydent30"},"content":"                    + \"\\t|  | |  |   ____     _  _   _    _\\n\"","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"raydent30"},"content":"                    + \"\\t|  |_|  |  / _  \\\\   | |/_\\\\ | |  | |\\n\"","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"raydent30"},"content":"                    + \"\\t|   _   | | |_|  \\\\  |  /   | \\\\_/  |\\n\"","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"raydent30"},"content":"                    + \"\\t|__| |__|  \\\\___/\\\\_\\\\ |_|     \\\\__/|_|\\n\";","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"raydent30"},"content":"    public static final String DIVIDER \u003d \"\\t____________________________________________________________\";","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"raydent30"},"content":"    public static final String SPACER \u003d \"\\t\";","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"raydent30"},"content":"    public static final String FILEPATH \u003d \"data/tasklist.txt\";","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"raydent30"},"content":"    public static void printWelcome() {","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"raydent30"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"raydent30"},"content":"        System.out.println(LOGO);","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"raydent30"},"content":"        System.out.println(SPACER + \"Hello! I\u0027m Haru\");","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"raydent30"},"content":"        System.out.println(SPACER + \"What can I do for you?\");","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"raydent30"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"raydent30"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"raydent30"},"content":"    public static void printGoodbye() {","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"raydent30"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"raydent30"},"content":"        System.out.println(SPACER+\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"raydent30"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"raydent30"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"raydent30"},"content":"    public static void readData(ArrayList\u003cTask\u003e storedUserTasks) throws FileNotFoundException {","lastModifiedDate":"2023-02-17"},{"lineNumber":46,"author":{"gitId":"raydent30"},"content":"        String originalString, description, by, from, to;","lastModifiedDate":"2023-02-17"},{"lineNumber":47,"author":{"gitId":"raydent30"},"content":"        int indexOfBy, indexOfFrom, indexOfTo;","lastModifiedDate":"2023-02-17"},{"lineNumber":48,"author":{"gitId":"raydent30"},"content":"        boolean isDone;","lastModifiedDate":"2023-02-17"},{"lineNumber":49,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":50,"author":{"gitId":"raydent30"},"content":"        File f \u003d new File(FILEPATH);","lastModifiedDate":"2023-02-17"},{"lineNumber":51,"author":{"gitId":"raydent30"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2023-02-17"},{"lineNumber":52,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":53,"author":{"gitId":"raydent30"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2023-02-17"},{"lineNumber":54,"author":{"gitId":"raydent30"},"content":"            originalString \u003d s.nextLine();","lastModifiedDate":"2023-02-17"},{"lineNumber":55,"author":{"gitId":"raydent30"},"content":"            isDone \u003d originalString.charAt(4) \u003d\u003d \u0027X\u0027;","lastModifiedDate":"2023-02-17"},{"lineNumber":56,"author":{"gitId":"raydent30"},"content":"            switch (originalString.charAt(1)) {","lastModifiedDate":"2023-02-17"},{"lineNumber":57,"author":{"gitId":"raydent30"},"content":"            case \u0027T\u0027:","lastModifiedDate":"2023-02-17"},{"lineNumber":58,"author":{"gitId":"raydent30"},"content":"                description \u003d originalString.substring(7);","lastModifiedDate":"2023-02-17"},{"lineNumber":59,"author":{"gitId":"raydent30"},"content":"                storedUserTasks.add(new Todo(description));","lastModifiedDate":"2023-02-17"},{"lineNumber":60,"author":{"gitId":"raydent30"},"content":"                break;","lastModifiedDate":"2023-02-17"},{"lineNumber":61,"author":{"gitId":"raydent30"},"content":"            case \u0027D\u0027:","lastModifiedDate":"2023-02-17"},{"lineNumber":62,"author":{"gitId":"raydent30"},"content":"                originalString \u003d originalString.substring(7).replace(\"(by:\", \"/by\");","lastModifiedDate":"2023-02-17"},{"lineNumber":63,"author":{"gitId":"raydent30"},"content":"                originalString \u003d originalString.substring(0, originalString.length() - 1);","lastModifiedDate":"2023-02-17"},{"lineNumber":64,"author":{"gitId":"raydent30"},"content":"                indexOfBy \u003d originalString.indexOf(\"/by\");","lastModifiedDate":"2023-02-17"},{"lineNumber":65,"author":{"gitId":"raydent30"},"content":"                description \u003d originalString.substring( 0, indexOfBy-1);","lastModifiedDate":"2023-02-17"},{"lineNumber":66,"author":{"gitId":"raydent30"},"content":"                by \u003d originalString.substring(indexOfBy+4);","lastModifiedDate":"2023-02-17"},{"lineNumber":67,"author":{"gitId":"raydent30"},"content":"                storedUserTasks.add(new Deadline(description,by));","lastModifiedDate":"2023-02-17"},{"lineNumber":68,"author":{"gitId":"raydent30"},"content":"                break;","lastModifiedDate":"2023-02-17"},{"lineNumber":69,"author":{"gitId":"raydent30"},"content":"            case \u0027E\u0027:","lastModifiedDate":"2023-02-17"},{"lineNumber":70,"author":{"gitId":"raydent30"},"content":"                originalString \u003d originalString.substring(7).replace(\"(from:\", \"/from\");","lastModifiedDate":"2023-02-17"},{"lineNumber":71,"author":{"gitId":"raydent30"},"content":"                originalString \u003d originalString.replace(\"to:\", \"/to\");","lastModifiedDate":"2023-02-17"},{"lineNumber":72,"author":{"gitId":"raydent30"},"content":"                originalString \u003d originalString.substring(0, originalString.length() - 1);","lastModifiedDate":"2023-02-17"},{"lineNumber":73,"author":{"gitId":"raydent30"},"content":"                indexOfFrom \u003d originalString.indexOf(\"/from\");","lastModifiedDate":"2023-02-17"},{"lineNumber":74,"author":{"gitId":"raydent30"},"content":"                indexOfTo \u003d originalString.indexOf(\"/to\");","lastModifiedDate":"2023-02-17"},{"lineNumber":75,"author":{"gitId":"raydent30"},"content":"                description \u003d originalString.substring(0,indexOfFrom-1);","lastModifiedDate":"2023-02-17"},{"lineNumber":76,"author":{"gitId":"raydent30"},"content":"                from \u003d originalString.substring(indexOfFrom+6,indexOfTo-1);","lastModifiedDate":"2023-02-17"},{"lineNumber":77,"author":{"gitId":"raydent30"},"content":"                to \u003d originalString.substring(indexOfTo+4);","lastModifiedDate":"2023-02-17"},{"lineNumber":78,"author":{"gitId":"raydent30"},"content":"                storedUserTasks.add(new Event(description,from,to));","lastModifiedDate":"2023-02-17"},{"lineNumber":79,"author":{"gitId":"raydent30"},"content":"                break;","lastModifiedDate":"2023-02-17"},{"lineNumber":80,"author":{"gitId":"raydent30"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":81,"author":{"gitId":"raydent30"},"content":"            storedUserTasks.get(Duke.userTextCount).isDone \u003d isDone;","lastModifiedDate":"2023-02-17"},{"lineNumber":82,"author":{"gitId":"raydent30"},"content":"            Duke.userTextCount++;","lastModifiedDate":"2023-02-17"},{"lineNumber":83,"author":{"gitId":"raydent30"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":84,"author":{"gitId":"raydent30"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":85,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":86,"author":{"gitId":"raydent30"},"content":"    public static void writeData(ArrayList\u003cTask\u003e storedUserTasks) throws IOException {","lastModifiedDate":"2023-02-17"},{"lineNumber":87,"author":{"gitId":"raydent30"},"content":"        FileWriter fw \u003d new FileWriter(FILEPATH);","lastModifiedDate":"2023-02-17"},{"lineNumber":88,"author":{"gitId":"raydent30"},"content":"        for(int i\u003d0; i\u003cDuke.userTextCount; i++) {","lastModifiedDate":"2023-02-17"},{"lineNumber":89,"author":{"gitId":"raydent30"},"content":"            fw.write(storedUserTasks.get(i).toString()+\u0027\\n\u0027);","lastModifiedDate":"2023-02-17"},{"lineNumber":90,"author":{"gitId":"raydent30"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":91,"author":{"gitId":"raydent30"},"content":"        fw.close();","lastModifiedDate":"2023-02-17"},{"lineNumber":92,"author":{"gitId":"raydent30"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":93,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":94,"author":{"gitId":"raydent30"},"content":"    public static void invalidInput() {","lastModifiedDate":"2023-02-03"},{"lineNumber":95,"author":{"gitId":"raydent30"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-02-03"},{"lineNumber":96,"author":{"gitId":"raydent30"},"content":"        System.out.println(SPACER+\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-02-09"},{"lineNumber":97,"author":{"gitId":"raydent30"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-02-03"},{"lineNumber":98,"author":{"gitId":"raydent30"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":99,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":100,"author":{"gitId":"raydent30"},"content":"    public static void listTasks(int userTextCount, ArrayList\u003cTask\u003e storedUserTasks) {","lastModifiedDate":"2023-02-16"},{"lineNumber":101,"author":{"gitId":"raydent30"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-02-03"},{"lineNumber":102,"author":{"gitId":"raydent30"},"content":"        System.out.println(SPACER+\"Here are the tasks in your lists:\");","lastModifiedDate":"2023-02-03"},{"lineNumber":103,"author":{"gitId":"raydent30"},"content":"        for(int i\u003d0;i\u003cuserTextCount;i++){","lastModifiedDate":"2023-02-03"},{"lineNumber":104,"author":{"gitId":"raydent30"},"content":"            System.out.println(SPACER+(i+1)+\".\"+storedUserTasks.get(i).toString());","lastModifiedDate":"2023-02-16"},{"lineNumber":105,"author":{"gitId":"raydent30"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":106,"author":{"gitId":"raydent30"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-02-03"},{"lineNumber":107,"author":{"gitId":"raydent30"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":108,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":109,"author":{"gitId":"raydent30"},"content":"    public static void markTask(String userCommand, ArrayList\u003cTask\u003e storedUserTasks) {","lastModifiedDate":"2023-02-16"},{"lineNumber":110,"author":{"gitId":"raydent30"},"content":"        int taskIndex \u003d Integer.parseInt(userCommand.split(\" \")[1])-1;","lastModifiedDate":"2023-02-08"},{"lineNumber":111,"author":{"gitId":"raydent30"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-02-03"},{"lineNumber":112,"author":{"gitId":"raydent30"},"content":"        System.out.println(SPACER+\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-02-03"},{"lineNumber":113,"author":{"gitId":"raydent30"},"content":"        storedUserTasks.get(taskIndex).isDone \u003d true;","lastModifiedDate":"2023-02-16"},{"lineNumber":114,"author":{"gitId":"raydent30"},"content":"        System.out.println(SPACER+storedUserTasks.get(taskIndex).toString());","lastModifiedDate":"2023-02-16"},{"lineNumber":115,"author":{"gitId":"raydent30"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-02-03"},{"lineNumber":116,"author":{"gitId":"raydent30"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":117,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":118,"author":{"gitId":"raydent30"},"content":"    public static void unmarkTask(String userCommand, ArrayList\u003cTask\u003e storedUserTasks) {","lastModifiedDate":"2023-02-16"},{"lineNumber":119,"author":{"gitId":"raydent30"},"content":"        int taskIndex \u003d Integer.parseInt(userCommand.split(\" \")[1])-1;","lastModifiedDate":"2023-02-08"},{"lineNumber":120,"author":{"gitId":"raydent30"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-02-03"},{"lineNumber":121,"author":{"gitId":"raydent30"},"content":"        System.out.println(SPACER+\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-02-03"},{"lineNumber":122,"author":{"gitId":"raydent30"},"content":"        storedUserTasks.get(taskIndex).isDone \u003d false;","lastModifiedDate":"2023-02-16"},{"lineNumber":123,"author":{"gitId":"raydent30"},"content":"        System.out.println(SPACER+storedUserTasks.get(taskIndex).toString());","lastModifiedDate":"2023-02-16"},{"lineNumber":124,"author":{"gitId":"raydent30"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-02-16"},{"lineNumber":125,"author":{"gitId":"raydent30"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":126,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":127,"author":{"gitId":"raydent30"},"content":"    public static void deleteTask(String userCommand, ArrayList\u003cTask\u003e storedUserTasks) {","lastModifiedDate":"2023-02-16"},{"lineNumber":128,"author":{"gitId":"raydent30"},"content":"        int taskIndex \u003d Integer.parseInt(userCommand.split(\" \")[1])-1;","lastModifiedDate":"2023-02-16"},{"lineNumber":129,"author":{"gitId":"raydent30"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-02-16"},{"lineNumber":130,"author":{"gitId":"raydent30"},"content":"        System.out.println(SPACER+\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-02-16"},{"lineNumber":131,"author":{"gitId":"raydent30"},"content":"        System.out.println(SPACER+SPACER+storedUserTasks.remove(taskIndex).toString());","lastModifiedDate":"2023-02-16"},{"lineNumber":132,"author":{"gitId":"raydent30"},"content":"        Duke.userTextCount--;","lastModifiedDate":"2023-02-16"},{"lineNumber":133,"author":{"gitId":"raydent30"},"content":"        System.out.println(SPACER+\"Now you have \" + Duke.userTextCount + \" tasks in the list.\");","lastModifiedDate":"2023-02-16"},{"lineNumber":134,"author":{"gitId":"raydent30"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-02-03"},{"lineNumber":135,"author":{"gitId":"raydent30"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":136,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":137,"author":{"gitId":"raydent30"},"content":"    public static void createTodo(String userCommand, ArrayList\u003cTask\u003e storedUserTasks) throws DukeException {","lastModifiedDate":"2023-02-16"},{"lineNumber":138,"author":{"gitId":"raydent30"},"content":"        if (userCommand.length()\u003c\u003d4) {","lastModifiedDate":"2023-02-09"},{"lineNumber":139,"author":{"gitId":"raydent30"},"content":"            throw new BlankDescException();","lastModifiedDate":"2023-02-09"},{"lineNumber":140,"author":{"gitId":"raydent30"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":141,"author":{"gitId":"raydent30"},"content":"        String description \u003d userCommand.substring(5);","lastModifiedDate":"2023-02-08"},{"lineNumber":142,"author":{"gitId":"raydent30"},"content":"        storedUserTasks.add(new Todo(description));","lastModifiedDate":"2023-02-16"},{"lineNumber":143,"author":{"gitId":"raydent30"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-02-03"},{"lineNumber":144,"author":{"gitId":"raydent30"},"content":"        System.out.println(SPACER+\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-02-03"},{"lineNumber":145,"author":{"gitId":"raydent30"},"content":"        System.out.println(SPACER+SPACER+storedUserTasks.get(Duke.userTextCount).toString());","lastModifiedDate":"2023-02-16"},{"lineNumber":146,"author":{"gitId":"raydent30"},"content":"        Duke.userTextCount++;","lastModifiedDate":"2023-02-03"},{"lineNumber":147,"author":{"gitId":"raydent30"},"content":"        System.out.println(SPACER+\"Now you have \" + Duke.userTextCount + \" tasks in the list.\");","lastModifiedDate":"2023-02-03"},{"lineNumber":148,"author":{"gitId":"raydent30"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-02-03"},{"lineNumber":149,"author":{"gitId":"raydent30"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":150,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":151,"author":{"gitId":"raydent30"},"content":"    public static void createDeadline(String userCommand, ArrayList\u003cTask\u003e storedUserTasks) throws DukeException {","lastModifiedDate":"2023-02-16"},{"lineNumber":152,"author":{"gitId":"raydent30"},"content":"        if (userCommand.length()\u003c\u003d8) {","lastModifiedDate":"2023-02-09"},{"lineNumber":153,"author":{"gitId":"raydent30"},"content":"            throw new BlankDescException();","lastModifiedDate":"2023-02-09"},{"lineNumber":154,"author":{"gitId":"raydent30"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":155,"author":{"gitId":"raydent30"},"content":"        int indexOfBy \u003d userCommand.indexOf(\"/by\");","lastModifiedDate":"2023-02-08"},{"lineNumber":156,"author":{"gitId":"raydent30"},"content":"        String description \u003d userCommand.substring( 9, indexOfBy-1);","lastModifiedDate":"2023-02-08"},{"lineNumber":157,"author":{"gitId":"raydent30"},"content":"        String by \u003d userCommand.substring(indexOfBy+4);","lastModifiedDate":"2023-02-08"},{"lineNumber":158,"author":{"gitId":"raydent30"},"content":"        storedUserTasks.add(new Deadline(description,by));","lastModifiedDate":"2023-02-16"},{"lineNumber":159,"author":{"gitId":"raydent30"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-02-03"},{"lineNumber":160,"author":{"gitId":"raydent30"},"content":"        System.out.println(SPACER+\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-02-03"},{"lineNumber":161,"author":{"gitId":"raydent30"},"content":"        System.out.println(SPACER+SPACER+storedUserTasks.get(Duke.userTextCount).toString());","lastModifiedDate":"2023-02-16"},{"lineNumber":162,"author":{"gitId":"raydent30"},"content":"        Duke.userTextCount++;","lastModifiedDate":"2023-02-03"},{"lineNumber":163,"author":{"gitId":"raydent30"},"content":"        System.out.println(SPACER+\"Now you have \" + Duke.userTextCount + \" tasks in the list.\");","lastModifiedDate":"2023-02-03"},{"lineNumber":164,"author":{"gitId":"raydent30"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-02-03"},{"lineNumber":165,"author":{"gitId":"raydent30"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":166,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":167,"author":{"gitId":"raydent30"},"content":"    public static void createEvent(String userCommand, ArrayList\u003cTask\u003e storedUserTasks) throws DukeException {","lastModifiedDate":"2023-02-16"},{"lineNumber":168,"author":{"gitId":"raydent30"},"content":"        if (userCommand.length()\u003c\u003d5) {","lastModifiedDate":"2023-02-09"},{"lineNumber":169,"author":{"gitId":"raydent30"},"content":"            throw new BlankDescException();","lastModifiedDate":"2023-02-09"},{"lineNumber":170,"author":{"gitId":"raydent30"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":171,"author":{"gitId":"raydent30"},"content":"        int indexOfFrom \u003d userCommand.indexOf(\"/from\");","lastModifiedDate":"2023-02-08"},{"lineNumber":172,"author":{"gitId":"raydent30"},"content":"        int indexOfTo \u003d userCommand.indexOf(\"/to\");","lastModifiedDate":"2023-02-08"},{"lineNumber":173,"author":{"gitId":"raydent30"},"content":"        String description \u003d userCommand.substring(6,indexOfFrom-1);","lastModifiedDate":"2023-02-08"},{"lineNumber":174,"author":{"gitId":"raydent30"},"content":"        String from \u003d userCommand.substring(indexOfFrom+6,indexOfTo-1);","lastModifiedDate":"2023-02-08"},{"lineNumber":175,"author":{"gitId":"raydent30"},"content":"        String to \u003d userCommand.substring(indexOfTo+4);","lastModifiedDate":"2023-02-08"},{"lineNumber":176,"author":{"gitId":"raydent30"},"content":"        storedUserTasks.add(new Event(description,from,to));","lastModifiedDate":"2023-02-16"},{"lineNumber":177,"author":{"gitId":"raydent30"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-02-03"},{"lineNumber":178,"author":{"gitId":"raydent30"},"content":"        System.out.println(SPACER+\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-02-03"},{"lineNumber":179,"author":{"gitId":"raydent30"},"content":"        System.out.println(SPACER+storedUserTasks.get(Duke.userTextCount).toString());","lastModifiedDate":"2023-02-16"},{"lineNumber":180,"author":{"gitId":"raydent30"},"content":"        Duke.userTextCount++;","lastModifiedDate":"2023-02-03"},{"lineNumber":181,"author":{"gitId":"raydent30"},"content":"        System.out.println(SPACER+\"Now you have \" + Duke.userTextCount + \" tasks in the list.\");","lastModifiedDate":"2023-02-03"},{"lineNumber":182,"author":{"gitId":"raydent30"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-02-03"},{"lineNumber":183,"author":{"gitId":"raydent30"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":184,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":185,"author":{"gitId":"raydent30"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"raydent30":185}},{"path":"src/main/java/duke/exception/BlankDescException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raydent30"},"content":"package duke.exception;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"raydent30"},"content":"public class BlankDescException extends DukeException {","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"raydent30"},"content":"    public static final String DIVIDER \u003d \"\\t____________________________________________________________\";","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"raydent30"},"content":"    public static final String SPACER \u003d \"\\t\";","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"raydent30"},"content":"    public BlankDescException(){","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"raydent30"},"content":"        super();","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"raydent30"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"raydent30"},"content":"    public static void errorMessage (String type) {","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"raydent30"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"raydent30"},"content":"        System.out.println(SPACER + \"☹ OOPS!!! The description of a \"+type+\" cannot be empty.\");","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"raydent30"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"raydent30"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"raydent30"},"content":"}","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"raydent30":19}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raydent30"},"content":"package duke.exception;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"raydent30"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"raydent30"},"content":"    public static final String DIVIDER \u003d \"\\t____________________________________________________________\";","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"raydent30"},"content":"    public static final String SPACER \u003d \"\\t\";","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"raydent30"},"content":"    DukeException(){","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"raydent30"},"content":"        super();","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"raydent30"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"raydent30"},"content":"    public static void errorMessage () {","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"raydent30"},"content":"            System.out.println(DIVIDER);","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"raydent30"},"content":"            System.out.println(SPACER + \"☹ OOPS!!! An error has occured!.\");","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"raydent30"},"content":"            System.out.println(DIVIDER);","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"raydent30"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"raydent30"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"raydent30":16}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raydent30"},"content":"package duke.task;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"raydent30"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"raydent30"},"content":"    protected String by;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"raydent30"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"raydent30"},"content":"        super(description);","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"raydent30"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"raydent30"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"raydent30"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"raydent30"},"content":"    public String toString() {","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"raydent30"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"raydent30"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"raydent30"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"raydent30":15}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raydent30"},"content":"package duke.task;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"raydent30"},"content":"public class Event extends Task {","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"raydent30"},"content":"    protected String from;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"raydent30"},"content":"    protected String to;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"raydent30"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"raydent30"},"content":"        super(description);","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"raydent30"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"raydent30"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"raydent30"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"raydent30"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"raydent30"},"content":"    public String toString() {","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"raydent30"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"raydent30"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"raydent30"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"raydent30":18}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raydent30"},"content":"package duke.task;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"raydent30"},"content":"public class Task {","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"raydent30"},"content":"    protected String description;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"raydent30"},"content":"    public boolean isDone;","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"raydent30"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"raydent30"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"raydent30"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"raydent30"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"raydent30"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"raydent30"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"raydent30"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"raydent30"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"raydent30"},"content":"    public String toString() {","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"raydent30"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"raydent30"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"raydent30"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"raydent30":20}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raydent30"},"content":"package duke.task;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"raydent30"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"raydent30"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"raydent30"},"content":"        super(description);","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"raydent30"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"raydent30"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"raydent30"},"content":"    public String toString() {","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"raydent30"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"raydent30"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"raydent30"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"raydent30":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"raydent30"},"content":"todo","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"raydent30"},"content":"todo borrow book","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"raydent30"},"content":"deadline","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"raydent30"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"raydent30"},"content":"event","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"raydent30"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"raydent30"},"content":"mark 2","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"raydent30"},"content":"list","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"raydent30"},"content":"mark 1","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"raydent30"},"content":"list","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"raydent30"},"content":"unmark 1","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"raydent30"},"content":"list","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"raydent30"},"content":"bye","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"raydent30":13}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"raydent30"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"raydent30":1,"-":20}}]
