[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"raydent30"},"content":"# duke.Duke project template","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"raydent30"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"raydent30":2,"-":22}},{"path":"data/tasklist.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"raydent30"},"content":"[T][X] borrow book","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"raydent30"},"content":"[T][ ] homework","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"raydent30"},"content":"[D][X] return book (by: 14 February 2023 01:00 PM)","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"raydent30"},"content":"[E][X] project meeting (from: 02 March 2023 12:00 PM to: 02 March 2023 02:00 PM)","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"raydent30"},"content":"[D][ ] iP (by: 03 March 2023 10:00 AM)","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"raydent30"},"content":"[D][ ] wrap book present (by: 21 May 2023 09:30 AM)","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"raydent30":6}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"raydent30"},"content":"Welcome to the Haru task bot! This bot can be used as your personal todo list.","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"raydent30"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"raydent30"},"content":"\t____________________________________________________________","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"raydent30"},"content":"\t __   __","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"raydent30"},"content":"\t|  | |  |   ____     _  _   _    _","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"raydent30"},"content":"\t|  |_|  |  / _  \\   | |/_\\ | |  | |","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"raydent30"},"content":"\t|   _   | | |_|  \\  |  /   | \\_/  |","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"raydent30"},"content":"\t|__| |__|  \\___/\\_\\ |_|     \\__/|_|","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"raydent30"},"content":"\tHello! I\u0027m Haru","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"raydent30"},"content":"\tWhat can I do for you?","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"raydent30"},"content":"\t____________________________________________________________","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"raydent30"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"raydent30"},"content":"Ensure that there is a folder named \"data\" with a .txt file named \"tasklist\" inside to read and write the tasks successfully. ","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"raydent30"},"content":"### Add Task","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"raydent30"},"content":"Add Todo, Deadline, or Event.","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"raydent30"},"content":"### List Tasks","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"raydent30"},"content":"List current tasks.","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"raydent30"},"content":"### Find Tasks","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"raydent30"},"content":"Search for tasks containing a keyword.","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"raydent30"},"content":"### Mark Task as Done","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"raydent30"},"content":"Mark a task as done.","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"raydent30"},"content":"### Unmark Task as Undone","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"raydent30"},"content":"Unmark a task as not done.","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"raydent30"},"content":"### Delete Tasks","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":42,"author":{"gitId":"raydent30"},"content":"Delete a task.","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":44,"author":{"gitId":"raydent30"},"content":"### Exit Program","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":46,"author":{"gitId":"raydent30"},"content":"Exit program and save all changes made to the list of tasks.","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"## Usage ","lastModifiedDate":"2019-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":50,"author":{"gitId":"raydent30"},"content":"### Add Task","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"raydent30"},"content":"Format of usage:","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"raydent30"},"content":"1) `todo (task description)`","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"raydent30"},"content":"2) `deadline (task description) /by dd-M-yyyy hh:mm a`","lastModifiedDate":"2023-03-01"},{"lineNumber":56,"author":{"gitId":"raydent30"},"content":"3) `event (task description) /from dd-M-yyyy hh:mm a /to dd-M-yyyy hh:mm a`","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":61,"author":{"gitId":"raydent30"},"content":"1) `todo homework`","lastModifiedDate":"2023-03-01"},{"lineNumber":62,"author":{"gitId":"raydent30"},"content":"2) `deadline return book /by 14-2-2023 01:00 PM`","lastModifiedDate":"2023-03-01"},{"lineNumber":63,"author":{"gitId":"raydent30"},"content":"3) `event project meeting /from 02-3-2023 12:00 PM /to 02-3-2023 02:00 PM`","lastModifiedDate":"2023-03-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":65,"author":{"gitId":"raydent30"},"content":"### List Tasks","lastModifiedDate":"2023-03-01"},{"lineNumber":66,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":67,"author":{"gitId":"raydent30"},"content":"Format of usage: `list`","lastModifiedDate":"2023-03-01"},{"lineNumber":68,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":69,"author":{"gitId":"raydent30"},"content":"Example output:","lastModifiedDate":"2023-03-01"},{"lineNumber":70,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":71,"author":{"gitId":"raydent30"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":72,"author":{"gitId":"raydent30"},"content":"list","lastModifiedDate":"2023-03-01"},{"lineNumber":73,"author":{"gitId":"raydent30"},"content":"\t____________________________________________________________","lastModifiedDate":"2023-03-01"},{"lineNumber":74,"author":{"gitId":"raydent30"},"content":"\tHere are the tasks in your lists:","lastModifiedDate":"2023-03-01"},{"lineNumber":75,"author":{"gitId":"raydent30"},"content":"\t1.[T][X] borrow book","lastModifiedDate":"2023-03-01"},{"lineNumber":76,"author":{"gitId":"raydent30"},"content":"\t2.[T][ ] homework","lastModifiedDate":"2023-03-01"},{"lineNumber":77,"author":{"gitId":"raydent30"},"content":"\t3.[D][X] return book (by: 14 February 2023 01:00 PM)","lastModifiedDate":"2023-03-01"},{"lineNumber":78,"author":{"gitId":"raydent30"},"content":"\t4.[E][X] project meeting (from: 02 March 2023 12:00 PM to: 02 March 2023 02:00 PM)","lastModifiedDate":"2023-03-01"},{"lineNumber":79,"author":{"gitId":"raydent30"},"content":"\t5.[D][ ] iP (by: 03 March 2023 10:00 AM)","lastModifiedDate":"2023-03-01"},{"lineNumber":80,"author":{"gitId":"raydent30"},"content":"\t6.[D][ ] wrap book present (by: 21 May 2023 09:30 AM)","lastModifiedDate":"2023-03-01"},{"lineNumber":81,"author":{"gitId":"raydent30"},"content":"\t____________________________________________________________","lastModifiedDate":"2023-03-01"},{"lineNumber":82,"author":{"gitId":"raydent30"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":83,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":84,"author":{"gitId":"raydent30"},"content":"### Find Tasks","lastModifiedDate":"2023-03-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":86,"author":{"gitId":"raydent30"},"content":"Format of usage: `find (keyword)`","lastModifiedDate":"2023-03-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":88,"author":{"gitId":"raydent30"},"content":"Example usage: `find book`","lastModifiedDate":"2023-03-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":90,"author":{"gitId":"raydent30"},"content":"Example output:","lastModifiedDate":"2023-03-01"},{"lineNumber":91,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":92,"author":{"gitId":"raydent30"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":93,"author":{"gitId":"raydent30"},"content":"find book","lastModifiedDate":"2023-03-01"},{"lineNumber":94,"author":{"gitId":"raydent30"},"content":"\t____________________________________________________________","lastModifiedDate":"2023-03-01"},{"lineNumber":95,"author":{"gitId":"raydent30"},"content":"\tHere are the matching tasks in your list:","lastModifiedDate":"2023-03-01"},{"lineNumber":96,"author":{"gitId":"raydent30"},"content":"\t1.[T][X] borrow book","lastModifiedDate":"2023-03-01"},{"lineNumber":97,"author":{"gitId":"raydent30"},"content":"\t3.[D][X] return book (by: 14 February 2023 01:00 PM)","lastModifiedDate":"2023-03-01"},{"lineNumber":98,"author":{"gitId":"raydent30"},"content":"\t6.[D][ ] wrap book present (by: 21 May 2023 09:30 AM)","lastModifiedDate":"2023-03-01"},{"lineNumber":99,"author":{"gitId":"raydent30"},"content":"\t____________________________________________________________","lastModifiedDate":"2023-03-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":101,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":102,"author":{"gitId":"raydent30"},"content":"### Mark Task as Done","lastModifiedDate":"2023-03-01"},{"lineNumber":103,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":104,"author":{"gitId":"raydent30"},"content":"Format of usage: `mark (task number)`","lastModifiedDate":"2023-03-01"},{"lineNumber":105,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":106,"author":{"gitId":"raydent30"},"content":"Example usage: `mark 2`","lastModifiedDate":"2023-03-01"},{"lineNumber":107,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":108,"author":{"gitId":"raydent30"},"content":"Example output:","lastModifiedDate":"2023-03-01"},{"lineNumber":109,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":110,"author":{"gitId":"raydent30"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":111,"author":{"gitId":"raydent30"},"content":"list","lastModifiedDate":"2023-03-01"},{"lineNumber":112,"author":{"gitId":"raydent30"},"content":"\t____________________________________________________________","lastModifiedDate":"2023-03-01"},{"lineNumber":113,"author":{"gitId":"raydent30"},"content":"\tHere are the tasks in your lists:","lastModifiedDate":"2023-03-01"},{"lineNumber":114,"author":{"gitId":"raydent30"},"content":"\t1.[T][X] borrow book","lastModifiedDate":"2023-03-01"},{"lineNumber":115,"author":{"gitId":"raydent30"},"content":"\t2.[T][ ] homework","lastModifiedDate":"2023-03-01"},{"lineNumber":116,"author":{"gitId":"raydent30"},"content":"\t3.[D][X] return book (by: 14 February 2023 01:00 PM)","lastModifiedDate":"2023-03-01"},{"lineNumber":117,"author":{"gitId":"raydent30"},"content":"\t4.[E][X] project meeting (from: 02 March 2023 12:00 PM to: 02 March 2023 02:00 PM)","lastModifiedDate":"2023-03-01"},{"lineNumber":118,"author":{"gitId":"raydent30"},"content":"\t5.[D][ ] iP (by: 03 March 2023 10:00 AM)","lastModifiedDate":"2023-03-01"},{"lineNumber":119,"author":{"gitId":"raydent30"},"content":"\t6.[D][ ] wrap book present (by: 21 May 2023 09:30 AM)","lastModifiedDate":"2023-03-01"},{"lineNumber":120,"author":{"gitId":"raydent30"},"content":"\t____________________________________________________________","lastModifiedDate":"2023-03-01"},{"lineNumber":121,"author":{"gitId":"raydent30"},"content":"mark 2","lastModifiedDate":"2023-03-01"},{"lineNumber":122,"author":{"gitId":"raydent30"},"content":"\t____________________________________________________________","lastModifiedDate":"2023-03-01"},{"lineNumber":123,"author":{"gitId":"raydent30"},"content":"\tNice! I\u0027ve marked this task as done:","lastModifiedDate":"2023-03-01"},{"lineNumber":124,"author":{"gitId":"raydent30"},"content":"\t[T][X] homework","lastModifiedDate":"2023-03-01"},{"lineNumber":125,"author":{"gitId":"raydent30"},"content":"\t____________________________________________________________","lastModifiedDate":"2023-03-01"},{"lineNumber":126,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":127,"author":{"gitId":"raydent30"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":128,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":129,"author":{"gitId":"raydent30"},"content":"### Unmark Task as Undone","lastModifiedDate":"2023-03-01"},{"lineNumber":130,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":131,"author":{"gitId":"raydent30"},"content":"Format of usage: `unmark (task number)`","lastModifiedDate":"2023-03-01"},{"lineNumber":132,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":133,"author":{"gitId":"raydent30"},"content":"Example usage: `unmark 2`","lastModifiedDate":"2023-03-01"},{"lineNumber":134,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":135,"author":{"gitId":"raydent30"},"content":"Example output:","lastModifiedDate":"2023-03-01"},{"lineNumber":136,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":137,"author":{"gitId":"raydent30"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":138,"author":{"gitId":"raydent30"},"content":"list","lastModifiedDate":"2023-03-01"},{"lineNumber":139,"author":{"gitId":"raydent30"},"content":"\t____________________________________________________________","lastModifiedDate":"2023-03-01"},{"lineNumber":140,"author":{"gitId":"raydent30"},"content":"\tHere are the tasks in your lists:","lastModifiedDate":"2023-03-01"},{"lineNumber":141,"author":{"gitId":"raydent30"},"content":"\t1.[T][X] borrow book","lastModifiedDate":"2023-03-01"},{"lineNumber":142,"author":{"gitId":"raydent30"},"content":"\t2.[T][X] homework","lastModifiedDate":"2023-03-01"},{"lineNumber":143,"author":{"gitId":"raydent30"},"content":"\t3.[D][X] return book (by: 14 February 2023 01:00 PM)","lastModifiedDate":"2023-03-01"},{"lineNumber":144,"author":{"gitId":"raydent30"},"content":"\t4.[E][X] project meeting (from: 02 March 2023 12:00 PM to: 02 March 2023 02:00 PM)","lastModifiedDate":"2023-03-01"},{"lineNumber":145,"author":{"gitId":"raydent30"},"content":"\t5.[D][ ] iP (by: 03 March 2023 10:00 AM)","lastModifiedDate":"2023-03-01"},{"lineNumber":146,"author":{"gitId":"raydent30"},"content":"\t6.[D][ ] wrap book present (by: 21 May 2023 09:30 AM)","lastModifiedDate":"2023-03-01"},{"lineNumber":147,"author":{"gitId":"raydent30"},"content":"\t____________________________________________________________","lastModifiedDate":"2023-03-01"},{"lineNumber":148,"author":{"gitId":"raydent30"},"content":"unmark 2","lastModifiedDate":"2023-03-01"},{"lineNumber":149,"author":{"gitId":"raydent30"},"content":"\t____________________________________________________________","lastModifiedDate":"2023-03-01"},{"lineNumber":150,"author":{"gitId":"raydent30"},"content":"\tOK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2023-03-01"},{"lineNumber":151,"author":{"gitId":"raydent30"},"content":"\t[T][ ] homework","lastModifiedDate":"2023-03-01"},{"lineNumber":152,"author":{"gitId":"raydent30"},"content":"\t____________________________________________________________","lastModifiedDate":"2023-03-01"},{"lineNumber":153,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":154,"author":{"gitId":"raydent30"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":155,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":156,"author":{"gitId":"raydent30"},"content":"### Delete Tasks","lastModifiedDate":"2023-03-01"},{"lineNumber":157,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":158,"author":{"gitId":"raydent30"},"content":"Format of usage: `delete (task number)`","lastModifiedDate":"2023-03-01"},{"lineNumber":159,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":160,"author":{"gitId":"raydent30"},"content":"Example usage: `delete 2`","lastModifiedDate":"2023-03-01"},{"lineNumber":161,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":162,"author":{"gitId":"raydent30"},"content":"Example output:","lastModifiedDate":"2023-03-01"},{"lineNumber":163,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":164,"author":{"gitId":"raydent30"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":165,"author":{"gitId":"raydent30"},"content":"list","lastModifiedDate":"2023-03-01"},{"lineNumber":166,"author":{"gitId":"raydent30"},"content":"\t____________________________________________________________","lastModifiedDate":"2023-03-01"},{"lineNumber":167,"author":{"gitId":"raydent30"},"content":"\tHere are the tasks in your lists:","lastModifiedDate":"2023-03-01"},{"lineNumber":168,"author":{"gitId":"raydent30"},"content":"\t1.[T][X] borrow book","lastModifiedDate":"2023-03-01"},{"lineNumber":169,"author":{"gitId":"raydent30"},"content":"\t2.[T][ ] homework","lastModifiedDate":"2023-03-01"},{"lineNumber":170,"author":{"gitId":"raydent30"},"content":"\t3.[D][X] return book (by: 14 February 2023 01:00 PM)","lastModifiedDate":"2023-03-01"},{"lineNumber":171,"author":{"gitId":"raydent30"},"content":"\t4.[E][X] project meeting (from: 02 March 2023 12:00 PM to: 02 March 2023 02:00 PM)","lastModifiedDate":"2023-03-01"},{"lineNumber":172,"author":{"gitId":"raydent30"},"content":"\t5.[D][ ] iP (by: 03 March 2023 10:00 AM)","lastModifiedDate":"2023-03-01"},{"lineNumber":173,"author":{"gitId":"raydent30"},"content":"\t6.[D][ ] wrap book present (by: 21 May 2023 09:30 AM)","lastModifiedDate":"2023-03-01"},{"lineNumber":174,"author":{"gitId":"raydent30"},"content":"\t____________________________________________________________","lastModifiedDate":"2023-03-01"},{"lineNumber":175,"author":{"gitId":"raydent30"},"content":"delete 2","lastModifiedDate":"2023-03-01"},{"lineNumber":176,"author":{"gitId":"raydent30"},"content":"\t____________________________________________________________","lastModifiedDate":"2023-03-01"},{"lineNumber":177,"author":{"gitId":"raydent30"},"content":"\tNoted. I\u0027ve removed this task:","lastModifiedDate":"2023-03-01"},{"lineNumber":178,"author":{"gitId":"raydent30"},"content":"\t\t[T][ ] homework","lastModifiedDate":"2023-03-01"},{"lineNumber":179,"author":{"gitId":"raydent30"},"content":"\tNow you have 5 tasks in the list.","lastModifiedDate":"2023-03-01"},{"lineNumber":180,"author":{"gitId":"raydent30"},"content":"\t____________________________________________________________","lastModifiedDate":"2023-03-01"},{"lineNumber":181,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":182,"author":{"gitId":"raydent30"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":183,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":184,"author":{"gitId":"raydent30"},"content":"### Exit Program","lastModifiedDate":"2023-03-01"},{"lineNumber":185,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":186,"author":{"gitId":"raydent30"},"content":"Format of usage: `bye`","lastModifiedDate":"2023-03-01"},{"lineNumber":187,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":188,"author":{"gitId":"raydent30"},"content":"Example output:","lastModifiedDate":"2023-03-01"},{"lineNumber":189,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":190,"author":{"gitId":"raydent30"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":191,"author":{"gitId":"raydent30"},"content":"bye","lastModifiedDate":"2023-03-01"},{"lineNumber":192,"author":{"gitId":"raydent30"},"content":"\t____________________________________________________________","lastModifiedDate":"2023-03-01"},{"lineNumber":193,"author":{"gitId":"raydent30"},"content":"\tBye. Hope to see you again soon!","lastModifiedDate":"2023-03-01"},{"lineNumber":194,"author":{"gitId":"raydent30"},"content":"\t____________________________________________________________","lastModifiedDate":"2023-03-01"},{"lineNumber":195,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":196,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"raydent30":173,"-":23}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raydent30"},"content":"package duke;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"raydent30"},"content":"import duke.command.*;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"raydent30"},"content":"import duke.exception.BlankDescException;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"raydent30"},"content":"import duke.exception.CommandParseException;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"raydent30"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"raydent30"},"content":"import duke.exception.TimeParseException;","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"raydent30"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"raydent30"},"content":"import java.io.File;","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"raydent30"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"raydent30"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"raydent30"},"content":"import java.text.ParseException;","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"raydent30"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"raydent30"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"raydent30"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"raydent30"},"content":" * The Duke program implements a todo list application that","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"raydent30"},"content":" * takes in \"todo\", \"deadline\", and \"event\" tasks.","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"raydent30"},"content":" *","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"raydent30"},"content":" * @author  Rayden Teo","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"raydent30"},"content":" * @version 1.0","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"raydent30"},"content":" * @since   2023-01-13","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"raydent30"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":26,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"raydent30"},"content":"    public static int userTextCount \u003d 0;","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"raydent30"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"raydent30"},"content":"     * This is the main method which lets you:","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"raydent30"},"content":"     * 1) List tasks","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"raydent30"},"content":"     * 2) Mark or Unmark tasks","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"raydent30"},"content":"     * 3) Delete tasks","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"raydent30"},"content":"     * 4) Add todo, deadline, or event","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"raydent30"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"raydent30"},"content":"     * @param args String class that stores java command line arguments.","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"raydent30"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":39,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"raydent30"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"raydent30"},"content":"        Display.printWelcome();","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"raydent30"},"content":"        String userCommand \u003d scanner.nextLine();","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"raydent30"},"content":"        ArrayList\u003cTask\u003e storedUserTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-16"},{"lineNumber":47,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":48,"author":{"gitId":"raydent30"},"content":"        try {","lastModifiedDate":"2023-02-17"},{"lineNumber":49,"author":{"gitId":"raydent30"},"content":"            IOFile.readData(storedUserTasks);","lastModifiedDate":"2023-02-17"},{"lineNumber":50,"author":{"gitId":"raydent30"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":51,"author":{"gitId":"raydent30"},"content":"            File f \u003d new File(\"data/tasklist.txt\");","lastModifiedDate":"2023-02-17"},{"lineNumber":52,"author":{"gitId":"raydent30"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":53,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":54,"author":{"gitId":"raydent30"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"raydent30"},"content":"        while(!isExit){","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"raydent30"},"content":"            switch (userCommand.split(\" \")[0]) {","lastModifiedDate":"2023-02-02"},{"lineNumber":58,"author":{"gitId":"raydent30"},"content":"            case \"list\":","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"raydent30"},"content":"                Display.listTasks(userTextCount, storedUserTasks);","lastModifiedDate":"2023-02-17"},{"lineNumber":60,"author":{"gitId":"raydent30"},"content":"                break;","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"raydent30"},"content":"            case \"find\":","lastModifiedDate":"2023-02-28"},{"lineNumber":62,"author":{"gitId":"raydent30"},"content":"                try {","lastModifiedDate":"2023-03-01"},{"lineNumber":63,"author":{"gitId":"raydent30"},"content":"                    FindTask.searchForKeyword(userCommand, storedUserTasks);","lastModifiedDate":"2023-03-01"},{"lineNumber":64,"author":{"gitId":"raydent30"},"content":"                } catch (ParseException e) {","lastModifiedDate":"2023-03-01"},{"lineNumber":65,"author":{"gitId":"raydent30"},"content":"                    CommandParseException.errorMessage();","lastModifiedDate":"2023-03-01"},{"lineNumber":66,"author":{"gitId":"raydent30"},"content":"                }","lastModifiedDate":"2023-03-01"},{"lineNumber":67,"author":{"gitId":"raydent30"},"content":"                break;","lastModifiedDate":"2023-02-28"},{"lineNumber":68,"author":{"gitId":"raydent30"},"content":"            case \"bye\":","lastModifiedDate":"2023-01-25"},{"lineNumber":69,"author":{"gitId":"raydent30"},"content":"                isExit \u003d true;","lastModifiedDate":"2023-01-25"},{"lineNumber":70,"author":{"gitId":"raydent30"},"content":"                break;","lastModifiedDate":"2023-01-25"},{"lineNumber":71,"author":{"gitId":"raydent30"},"content":"            case \"mark\":","lastModifiedDate":"2023-01-25"},{"lineNumber":72,"author":{"gitId":"raydent30"},"content":"                ModifyTask.markTask(userCommand, storedUserTasks);","lastModifiedDate":"2023-02-17"},{"lineNumber":73,"author":{"gitId":"raydent30"},"content":"                break;","lastModifiedDate":"2023-01-25"},{"lineNumber":74,"author":{"gitId":"raydent30"},"content":"            case \"unmark\":","lastModifiedDate":"2023-01-25"},{"lineNumber":75,"author":{"gitId":"raydent30"},"content":"                ModifyTask.unmarkTask(userCommand, storedUserTasks);","lastModifiedDate":"2023-02-17"},{"lineNumber":76,"author":{"gitId":"raydent30"},"content":"                break;","lastModifiedDate":"2023-01-25"},{"lineNumber":77,"author":{"gitId":"raydent30"},"content":"            case \"delete\":","lastModifiedDate":"2023-02-16"},{"lineNumber":78,"author":{"gitId":"raydent30"},"content":"                ModifyTask.deleteTask(userCommand, storedUserTasks);","lastModifiedDate":"2023-02-17"},{"lineNumber":79,"author":{"gitId":"raydent30"},"content":"                break;","lastModifiedDate":"2023-02-16"},{"lineNumber":80,"author":{"gitId":"raydent30"},"content":"            case \"todo\":","lastModifiedDate":"2023-02-02"},{"lineNumber":81,"author":{"gitId":"raydent30"},"content":"                try {","lastModifiedDate":"2023-02-09"},{"lineNumber":82,"author":{"gitId":"raydent30"},"content":"                    CreateTask.createTodo(userCommand, storedUserTasks);","lastModifiedDate":"2023-02-17"},{"lineNumber":83,"author":{"gitId":"raydent30"},"content":"                } catch (BlankDescException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":84,"author":{"gitId":"raydent30"},"content":"                    BlankDescException.errorMessage(\"todo\");","lastModifiedDate":"2023-02-09"},{"lineNumber":85,"author":{"gitId":"raydent30"},"content":"                } catch (ParseException e) {","lastModifiedDate":"2023-02-28"},{"lineNumber":86,"author":{"gitId":"raydent30"},"content":"                    TimeParseException.errorMessage();","lastModifiedDate":"2023-02-28"},{"lineNumber":87,"author":{"gitId":"raydent30"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":88,"author":{"gitId":"raydent30"},"content":"                    DukeException.errorMessage();","lastModifiedDate":"2023-02-09"},{"lineNumber":89,"author":{"gitId":"raydent30"},"content":"                }","lastModifiedDate":"2023-02-09"},{"lineNumber":90,"author":{"gitId":"raydent30"},"content":"                break;","lastModifiedDate":"2023-02-02"},{"lineNumber":91,"author":{"gitId":"raydent30"},"content":"            case \"deadline\":","lastModifiedDate":"2023-02-02"},{"lineNumber":92,"author":{"gitId":"raydent30"},"content":"                try {","lastModifiedDate":"2023-02-09"},{"lineNumber":93,"author":{"gitId":"raydent30"},"content":"                    CreateTask.createDeadline(userCommand, storedUserTasks);","lastModifiedDate":"2023-02-17"},{"lineNumber":94,"author":{"gitId":"raydent30"},"content":"                } catch (BlankDescException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":95,"author":{"gitId":"raydent30"},"content":"                    BlankDescException.errorMessage(\"deadline\");","lastModifiedDate":"2023-02-09"},{"lineNumber":96,"author":{"gitId":"raydent30"},"content":"                } catch (ParseException e) {","lastModifiedDate":"2023-02-28"},{"lineNumber":97,"author":{"gitId":"raydent30"},"content":"                    TimeParseException.errorMessage();","lastModifiedDate":"2023-02-28"},{"lineNumber":98,"author":{"gitId":"raydent30"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":99,"author":{"gitId":"raydent30"},"content":"                    DukeException.errorMessage();","lastModifiedDate":"2023-02-09"},{"lineNumber":100,"author":{"gitId":"raydent30"},"content":"                }","lastModifiedDate":"2023-02-09"},{"lineNumber":101,"author":{"gitId":"raydent30"},"content":"                break;","lastModifiedDate":"2023-02-02"},{"lineNumber":102,"author":{"gitId":"raydent30"},"content":"            case \"event\":","lastModifiedDate":"2023-02-02"},{"lineNumber":103,"author":{"gitId":"raydent30"},"content":"                try {","lastModifiedDate":"2023-02-09"},{"lineNumber":104,"author":{"gitId":"raydent30"},"content":"                    CreateTask.createEvent(userCommand, storedUserTasks);","lastModifiedDate":"2023-02-17"},{"lineNumber":105,"author":{"gitId":"raydent30"},"content":"                } catch (BlankDescException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":106,"author":{"gitId":"raydent30"},"content":"                    BlankDescException.errorMessage(\"event\");","lastModifiedDate":"2023-02-09"},{"lineNumber":107,"author":{"gitId":"raydent30"},"content":"                } catch (ParseException e) {","lastModifiedDate":"2023-02-28"},{"lineNumber":108,"author":{"gitId":"raydent30"},"content":"                    TimeParseException.errorMessage();","lastModifiedDate":"2023-02-28"},{"lineNumber":109,"author":{"gitId":"raydent30"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":110,"author":{"gitId":"raydent30"},"content":"                    DukeException.errorMessage();","lastModifiedDate":"2023-02-09"},{"lineNumber":111,"author":{"gitId":"raydent30"},"content":"                }","lastModifiedDate":"2023-02-09"},{"lineNumber":112,"author":{"gitId":"raydent30"},"content":"                break;","lastModifiedDate":"2023-02-02"},{"lineNumber":113,"author":{"gitId":"raydent30"},"content":"            default:","lastModifiedDate":"2023-02-02"},{"lineNumber":114,"author":{"gitId":"raydent30"},"content":"                Display.printInvalidInput();","lastModifiedDate":"2023-02-17"},{"lineNumber":115,"author":{"gitId":"raydent30"},"content":"                break;","lastModifiedDate":"2023-01-25"},{"lineNumber":116,"author":{"gitId":"raydent30"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":117,"author":{"gitId":"raydent30"},"content":"            if(!isExit) {","lastModifiedDate":"2023-02-03"},{"lineNumber":118,"author":{"gitId":"raydent30"},"content":"                userCommand \u003d scanner.nextLine();","lastModifiedDate":"2023-02-03"},{"lineNumber":119,"author":{"gitId":"raydent30"},"content":"            }","lastModifiedDate":"2023-02-03"},{"lineNumber":120,"author":{"gitId":"raydent30"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":121,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":122,"author":{"gitId":"raydent30"},"content":"        try {","lastModifiedDate":"2023-02-17"},{"lineNumber":123,"author":{"gitId":"raydent30"},"content":"            IOFile.writeData(storedUserTasks);","lastModifiedDate":"2023-02-17"},{"lineNumber":124,"author":{"gitId":"raydent30"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":125,"author":{"gitId":"raydent30"},"content":"            System.out.println(\"Failed to save data!\");","lastModifiedDate":"2023-02-17"},{"lineNumber":126,"author":{"gitId":"raydent30"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":127,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":128,"author":{"gitId":"raydent30"},"content":"        Display.printGoodbye();","lastModifiedDate":"2023-02-17"},{"lineNumber":129,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"raydent30":127,"-":4}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raydent30"},"content":"package duke;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"raydent30"},"content":"import java.text.ParseException;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"raydent30"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"raydent30"},"content":"import java.util.Date;","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"raydent30"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"raydent30"},"content":" * The Parser class helps to extract necessary","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"raydent30"},"content":" * information from the user command for later use.","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"raydent30"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"raydent30"},"content":"public class Parser {","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"raydent30"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"raydent30"},"content":"     * This method is used to get the index in the user command","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"raydent30"},"content":"     * string for various scenarios","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"raydent30"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"raydent30"},"content":"     * @param userCommand User\u0027s command","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"raydent30"},"content":"     * @param type Type of index to be extracted","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"raydent30"},"content":"     * @return int","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"raydent30"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"raydent30"},"content":"    public static int extractIndex(String userCommand, String type) {","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"raydent30"},"content":"        switch (type) {","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"raydent30"},"content":"        case \"task\":","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"raydent30"},"content":"            return Integer.parseInt(userCommand.split(\" \")[1])-1;","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"raydent30"},"content":"        case \"by\":","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"raydent30"},"content":"            return userCommand.indexOf(\"/by\");","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"raydent30"},"content":"        case \"from\":","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"raydent30"},"content":"            return userCommand.indexOf(\"/from\");","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"raydent30"},"content":"        case \"to\":","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"raydent30"},"content":"            return userCommand.indexOf(\"/to\");","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"raydent30"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"raydent30"},"content":"        return 0;","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"raydent30"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"raydent30"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"raydent30"},"content":"     * This method is used to get a string in the user command","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"raydent30"},"content":"     * string for various scenarios","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"raydent30"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"raydent30"},"content":"     * @param userCommand User\u0027s command","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"raydent30"},"content":"     * @param type Type of String to be extracted","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"raydent30"},"content":"     * @param task Type of Task String is being extracted from","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"raydent30"},"content":"     * @return String","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"raydent30"},"content":"     * @throws ParseException ParseException has occurred","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"raydent30"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"raydent30"},"content":"    public static String extractInfo(String userCommand, String type, String task) throws ParseException {","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"raydent30"},"content":"        int indexOfBy, indexOfFrom, indexOfTo;","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"raydent30"},"content":"        String dateInString, strDate;","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"raydent30"},"content":"        switch (type) {","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"raydent30"},"content":"        case \"desc\":","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"raydent30"},"content":"            switch (task) {","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"raydent30"},"content":"            case \"todo\":","lastModifiedDate":"2023-02-28"},{"lineNumber":52,"author":{"gitId":"raydent30"},"content":"                return userCommand.substring(5);","lastModifiedDate":"2023-02-28"},{"lineNumber":53,"author":{"gitId":"raydent30"},"content":"            case \"deadline\":","lastModifiedDate":"2023-02-28"},{"lineNumber":54,"author":{"gitId":"raydent30"},"content":"                indexOfBy \u003d Parser.extractIndex(userCommand, \"by\");","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"raydent30"},"content":"                return userCommand.substring(9, indexOfBy - 1);","lastModifiedDate":"2023-02-28"},{"lineNumber":56,"author":{"gitId":"raydent30"},"content":"            case \"event\":","lastModifiedDate":"2023-02-28"},{"lineNumber":57,"author":{"gitId":"raydent30"},"content":"                indexOfFrom \u003d Parser.extractIndex(userCommand, \"from\");","lastModifiedDate":"2023-03-01"},{"lineNumber":58,"author":{"gitId":"raydent30"},"content":"                return userCommand.substring(6,indexOfFrom-1);","lastModifiedDate":"2023-02-28"},{"lineNumber":59,"author":{"gitId":"raydent30"},"content":"            }","lastModifiedDate":"2023-02-28"},{"lineNumber":60,"author":{"gitId":"raydent30"},"content":"        case \"by\":","lastModifiedDate":"2023-02-28"},{"lineNumber":61,"author":{"gitId":"raydent30"},"content":"            indexOfBy \u003d Parser.extractIndex(userCommand, \"by\");","lastModifiedDate":"2023-03-01"},{"lineNumber":62,"author":{"gitId":"raydent30"},"content":"            dateInString \u003d userCommand.substring(indexOfBy + 4);","lastModifiedDate":"2023-02-28"},{"lineNumber":63,"author":{"gitId":"raydent30"},"content":"            strDate \u003d extractDateAndTime(dateInString);","lastModifiedDate":"2023-02-28"},{"lineNumber":64,"author":{"gitId":"raydent30"},"content":"            return strDate;","lastModifiedDate":"2023-02-28"},{"lineNumber":65,"author":{"gitId":"raydent30"},"content":"        case \"from\":","lastModifiedDate":"2023-02-28"},{"lineNumber":66,"author":{"gitId":"raydent30"},"content":"            indexOfFrom \u003d Parser.extractIndex(userCommand, \"from\");","lastModifiedDate":"2023-03-01"},{"lineNumber":67,"author":{"gitId":"raydent30"},"content":"            indexOfTo \u003d Parser.extractIndex(userCommand, \"to\");","lastModifiedDate":"2023-03-01"},{"lineNumber":68,"author":{"gitId":"raydent30"},"content":"            dateInString \u003d userCommand.substring(indexOfFrom+6,indexOfTo-1);","lastModifiedDate":"2023-02-28"},{"lineNumber":69,"author":{"gitId":"raydent30"},"content":"            strDate \u003d extractDateAndTime(dateInString);","lastModifiedDate":"2023-02-28"},{"lineNumber":70,"author":{"gitId":"raydent30"},"content":"            return strDate;","lastModifiedDate":"2023-02-28"},{"lineNumber":71,"author":{"gitId":"raydent30"},"content":"        case \"to\":","lastModifiedDate":"2023-02-28"},{"lineNumber":72,"author":{"gitId":"raydent30"},"content":"            indexOfTo \u003d Parser.extractIndex(userCommand, \"to\");","lastModifiedDate":"2023-03-01"},{"lineNumber":73,"author":{"gitId":"raydent30"},"content":"            dateInString \u003d userCommand.substring(indexOfTo+4);","lastModifiedDate":"2023-02-28"},{"lineNumber":74,"author":{"gitId":"raydent30"},"content":"            strDate \u003d extractDateAndTime(dateInString);","lastModifiedDate":"2023-02-28"},{"lineNumber":75,"author":{"gitId":"raydent30"},"content":"            return strDate;","lastModifiedDate":"2023-02-28"},{"lineNumber":76,"author":{"gitId":"raydent30"},"content":"        case \"keyword\":","lastModifiedDate":"2023-03-01"},{"lineNumber":77,"author":{"gitId":"raydent30"},"content":"            return userCommand.substring(4);","lastModifiedDate":"2023-03-01"},{"lineNumber":78,"author":{"gitId":"raydent30"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":79,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":80,"author":{"gitId":"raydent30"},"content":"        return \"\";","lastModifiedDate":"2023-02-28"},{"lineNumber":81,"author":{"gitId":"raydent30"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":82,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":83,"author":{"gitId":"raydent30"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":84,"author":{"gitId":"raydent30"},"content":"     * This method is used to format the date","lastModifiedDate":"2023-03-01"},{"lineNumber":85,"author":{"gitId":"raydent30"},"content":"     * and time in the user command string","lastModifiedDate":"2023-03-01"},{"lineNumber":86,"author":{"gitId":"raydent30"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":87,"author":{"gitId":"raydent30"},"content":"     * @param dateAndTime String of the date and time","lastModifiedDate":"2023-03-01"},{"lineNumber":88,"author":{"gitId":"raydent30"},"content":"     * @return String","lastModifiedDate":"2023-03-01"},{"lineNumber":89,"author":{"gitId":"raydent30"},"content":"     * @throws ParseException ParseException has occurred","lastModifiedDate":"2023-03-01"},{"lineNumber":90,"author":{"gitId":"raydent30"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":91,"author":{"gitId":"raydent30"},"content":"    public static String extractDateAndTime(String dateAndTime) throws ParseException {","lastModifiedDate":"2023-02-28"},{"lineNumber":92,"author":{"gitId":"raydent30"},"content":"        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd-M-yyyy hh:mm a\");","lastModifiedDate":"2023-02-28"},{"lineNumber":93,"author":{"gitId":"raydent30"},"content":"        Date date \u003d formatter.parse(dateAndTime);","lastModifiedDate":"2023-02-28"},{"lineNumber":94,"author":{"gitId":"raydent30"},"content":"        formatter \u003d new SimpleDateFormat(\"dd MMMM yyyy hh:mm a\");","lastModifiedDate":"2023-02-28"},{"lineNumber":95,"author":{"gitId":"raydent30"},"content":"        return formatter.format(date);","lastModifiedDate":"2023-02-28"},{"lineNumber":96,"author":{"gitId":"raydent30"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":97,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":98,"author":{"gitId":"raydent30"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"raydent30":98}},{"path":"src/main/java/duke/command/CreateTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raydent30"},"content":"package duke.command;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"raydent30"},"content":"import duke.Duke;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"raydent30"},"content":"import duke.Parser;","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"raydent30"},"content":"import duke.exception.BlankDescException;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"raydent30"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"raydent30"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"raydent30"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"raydent30"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"raydent30"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"raydent30"},"content":"import java.text.ParseException;","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"raydent30"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"raydent30"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"raydent30"},"content":" * The CreateTask class helps to extract","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"raydent30"},"content":" * necessary information from the user command for later use.","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"raydent30"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"raydent30"},"content":"public class CreateTask {","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"raydent30"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"raydent30"},"content":"     * This method is used to create a todo task","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"raydent30"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"raydent30"},"content":"     * @param userCommand User\u0027s command","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"raydent30"},"content":"     * @param storedUserTasks ArrayList containing listed Tasks","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"raydent30"},"content":"     * @throws DukeException DukeException has occurred","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"raydent30"},"content":"     * @throws ParseException ParseException has occurred","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"raydent30"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"raydent30"},"content":"    public static void createTodo(String userCommand, ArrayList\u003cTask\u003e storedUserTasks) throws DukeException, ParseException {","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"raydent30"},"content":"        if (userCommand.length()\u003c\u003d4) {","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"raydent30"},"content":"            throw new BlankDescException();","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"raydent30"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"raydent30"},"content":"        String description \u003d Parser.extractInfo(userCommand, \"desc\", \"todo\");","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"raydent30"},"content":"        storedUserTasks.add(new Todo(description));","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"raydent30"},"content":"        Display.displayCreateTask(storedUserTasks);","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"raydent30"},"content":"        Duke.userTextCount++;","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"raydent30"},"content":"        Display.printNumberOfTasks();","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"raydent30"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"raydent30"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"raydent30"},"content":"     * This method is used to create a deadline task","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"raydent30"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"raydent30"},"content":"     * @param userCommand User\u0027s command","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"raydent30"},"content":"     * @param storedUserTasks ArrayList containing listed Tasks","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"raydent30"},"content":"     * @throws DukeException DukeException has occurred","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"raydent30"},"content":"     * @throws ParseException ParseException has occurred","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"raydent30"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"raydent30"},"content":"    public static void createDeadline(String userCommand, ArrayList\u003cTask\u003e storedUserTasks) throws DukeException, ParseException {","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"raydent30"},"content":"        if (userCommand.length()\u003c\u003d8) {","lastModifiedDate":"2023-02-17"},{"lineNumber":51,"author":{"gitId":"raydent30"},"content":"            throw new BlankDescException();","lastModifiedDate":"2023-02-17"},{"lineNumber":52,"author":{"gitId":"raydent30"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":53,"author":{"gitId":"raydent30"},"content":"        String description \u003d Parser.extractInfo(userCommand, \"desc\", \"deadline\");","lastModifiedDate":"2023-02-28"},{"lineNumber":54,"author":{"gitId":"raydent30"},"content":"        String by \u003d Parser.extractInfo(userCommand, \"by\", \"none\");","lastModifiedDate":"2023-02-28"},{"lineNumber":55,"author":{"gitId":"raydent30"},"content":"        storedUserTasks.add(new Deadline(description,by));","lastModifiedDate":"2023-02-17"},{"lineNumber":56,"author":{"gitId":"raydent30"},"content":"        Display.displayCreateTask(storedUserTasks);","lastModifiedDate":"2023-02-17"},{"lineNumber":57,"author":{"gitId":"raydent30"},"content":"        Duke.userTextCount++;","lastModifiedDate":"2023-02-17"},{"lineNumber":58,"author":{"gitId":"raydent30"},"content":"        Display.printNumberOfTasks();","lastModifiedDate":"2023-02-17"},{"lineNumber":59,"author":{"gitId":"raydent30"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":60,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":61,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":62,"author":{"gitId":"raydent30"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":63,"author":{"gitId":"raydent30"},"content":"     * This method is used to create a event task","lastModifiedDate":"2023-03-01"},{"lineNumber":64,"author":{"gitId":"raydent30"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":65,"author":{"gitId":"raydent30"},"content":"     * @param userCommand User\u0027s command","lastModifiedDate":"2023-03-01"},{"lineNumber":66,"author":{"gitId":"raydent30"},"content":"     * @param storedUserTasks ArrayList containing listed Tasks","lastModifiedDate":"2023-03-01"},{"lineNumber":67,"author":{"gitId":"raydent30"},"content":"     * @throws DukeException DukeException has occurred","lastModifiedDate":"2023-03-01"},{"lineNumber":68,"author":{"gitId":"raydent30"},"content":"     * @throws ParseException ParseException has occurred","lastModifiedDate":"2023-03-01"},{"lineNumber":69,"author":{"gitId":"raydent30"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":70,"author":{"gitId":"raydent30"},"content":"    public static void createEvent(String userCommand, ArrayList\u003cTask\u003e storedUserTasks) throws DukeException, ParseException {","lastModifiedDate":"2023-02-28"},{"lineNumber":71,"author":{"gitId":"raydent30"},"content":"        if (userCommand.length()\u003c\u003d5) {","lastModifiedDate":"2023-02-17"},{"lineNumber":72,"author":{"gitId":"raydent30"},"content":"            throw new BlankDescException();","lastModifiedDate":"2023-02-17"},{"lineNumber":73,"author":{"gitId":"raydent30"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":74,"author":{"gitId":"raydent30"},"content":"        String description \u003d Parser.extractInfo(userCommand, \"desc\", \"event\");","lastModifiedDate":"2023-02-28"},{"lineNumber":75,"author":{"gitId":"raydent30"},"content":"        String from \u003d Parser.extractInfo(userCommand, \"from\", \"none\");","lastModifiedDate":"2023-02-28"},{"lineNumber":76,"author":{"gitId":"raydent30"},"content":"        String to \u003d Parser.extractInfo(userCommand, \"to\", \"none\");","lastModifiedDate":"2023-02-28"},{"lineNumber":77,"author":{"gitId":"raydent30"},"content":"        storedUserTasks.add(new Event(description,from,to));","lastModifiedDate":"2023-02-17"},{"lineNumber":78,"author":{"gitId":"raydent30"},"content":"        Display.displayCreateTask(storedUserTasks);","lastModifiedDate":"2023-02-17"},{"lineNumber":79,"author":{"gitId":"raydent30"},"content":"        Duke.userTextCount++;","lastModifiedDate":"2023-02-17"},{"lineNumber":80,"author":{"gitId":"raydent30"},"content":"        Display.printNumberOfTasks();","lastModifiedDate":"2023-02-17"},{"lineNumber":81,"author":{"gitId":"raydent30"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":82,"author":{"gitId":"raydent30"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"raydent30":82}},{"path":"src/main/java/duke/command/Display.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raydent30"},"content":"package duke.command;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"raydent30"},"content":"import duke.Duke;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"raydent30"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"raydent30"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"raydent30"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"raydent30"},"content":" * The Display class prints out various","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"raydent30"},"content":" * messages for the user","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"raydent30"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"raydent30"},"content":"public class Display {","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"raydent30"},"content":"    public static final String LOGO \u003d","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"raydent30"},"content":"            \"\\t __   __\\n\"","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"raydent30"},"content":"                    + \"\\t|  | |  |   ____     _  _   _    _\\n\"","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"raydent30"},"content":"                    + \"\\t|  |_|  |  / _  \\\\   | |/_\\\\ | |  | |\\n\"","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"raydent30"},"content":"                    + \"\\t|   _   | | |_|  \\\\  |  /   | \\\\_/  |\\n\"","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"raydent30"},"content":"                    + \"\\t|__| |__|  \\\\___/\\\\_\\\\ |_|     \\\\__/|_|\\n\";","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"raydent30"},"content":"    public static final String DIVIDER \u003d \"\\t____________________________________________________________\";","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"raydent30"},"content":"    public static final String SPACER \u003d \"\\t\";","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"raydent30"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"raydent30"},"content":"     * This method prints the welcome message","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"raydent30"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"raydent30"},"content":"    public static void printWelcome() {","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"raydent30"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"raydent30"},"content":"        System.out.println(LOGO);","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"raydent30"},"content":"        System.out.println(SPACER + \"Hello! I\u0027m Haru\");","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"raydent30"},"content":"        System.out.println(SPACER + \"What can I do for you?\");","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"raydent30"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"raydent30"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"raydent30"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"raydent30"},"content":"     * This method prints the goodbye message","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"raydent30"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"raydent30"},"content":"    public static void printGoodbye() {","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"raydent30"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"raydent30"},"content":"        System.out.println(SPACER+\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"raydent30"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"raydent30"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"raydent30"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"raydent30"},"content":"     * This method prints the number of tasks listed","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"raydent30"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"raydent30"},"content":"    public static void printNumberOfTasks() {","lastModifiedDate":"2023-02-17"},{"lineNumber":46,"author":{"gitId":"raydent30"},"content":"        System.out.println(SPACER+\"Now you have \" + Duke.userTextCount + \" tasks in the list.\");","lastModifiedDate":"2023-02-17"},{"lineNumber":47,"author":{"gitId":"raydent30"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-02-17"},{"lineNumber":48,"author":{"gitId":"raydent30"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":49,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":50,"author":{"gitId":"raydent30"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"raydent30"},"content":"     * This method prints the welcome message","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"raydent30"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"raydent30"},"content":"    public static void printInvalidInput() {","lastModifiedDate":"2023-02-17"},{"lineNumber":54,"author":{"gitId":"raydent30"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-02-17"},{"lineNumber":55,"author":{"gitId":"raydent30"},"content":"        System.out.println(SPACER+\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-02-17"},{"lineNumber":56,"author":{"gitId":"raydent30"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-02-17"},{"lineNumber":57,"author":{"gitId":"raydent30"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":58,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":59,"author":{"gitId":"raydent30"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":60,"author":{"gitId":"raydent30"},"content":"     * This method prints out all the tasks listed","lastModifiedDate":"2023-03-01"},{"lineNumber":61,"author":{"gitId":"raydent30"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":62,"author":{"gitId":"raydent30"},"content":"    public static void listTasks(int userTextCount, ArrayList\u003cTask\u003e storedUserTasks) {","lastModifiedDate":"2023-02-17"},{"lineNumber":63,"author":{"gitId":"raydent30"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-02-17"},{"lineNumber":64,"author":{"gitId":"raydent30"},"content":"        System.out.println(SPACER+\"Here are the tasks in your lists:\");","lastModifiedDate":"2023-02-17"},{"lineNumber":65,"author":{"gitId":"raydent30"},"content":"        for(int i\u003d0;i\u003cuserTextCount;i++){","lastModifiedDate":"2023-02-17"},{"lineNumber":66,"author":{"gitId":"raydent30"},"content":"            System.out.println(SPACER+(i+1)+\".\"+storedUserTasks.get(i).toString());","lastModifiedDate":"2023-02-17"},{"lineNumber":67,"author":{"gitId":"raydent30"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":68,"author":{"gitId":"raydent30"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-02-17"},{"lineNumber":69,"author":{"gitId":"raydent30"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":70,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":71,"author":{"gitId":"raydent30"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":72,"author":{"gitId":"raydent30"},"content":"     * This method prints the task progress","lastModifiedDate":"2023-03-01"},{"lineNumber":73,"author":{"gitId":"raydent30"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":74,"author":{"gitId":"raydent30"},"content":"    public static void displayTaskProgress(String checkType, int taskIndex,ArrayList\u003cTask\u003e storedUserTasks) {","lastModifiedDate":"2023-02-17"},{"lineNumber":75,"author":{"gitId":"raydent30"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-02-17"},{"lineNumber":76,"author":{"gitId":"raydent30"},"content":"        if(checkType.equals(\"mark\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":77,"author":{"gitId":"raydent30"},"content":"            System.out.println(SPACER+\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-02-17"},{"lineNumber":78,"author":{"gitId":"raydent30"},"content":"        } else {","lastModifiedDate":"2023-02-17"},{"lineNumber":79,"author":{"gitId":"raydent30"},"content":"            System.out.println(SPACER+\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-02-17"},{"lineNumber":80,"author":{"gitId":"raydent30"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":81,"author":{"gitId":"raydent30"},"content":"        System.out.println(SPACER+storedUserTasks.get(taskIndex).toString());","lastModifiedDate":"2023-02-17"},{"lineNumber":82,"author":{"gitId":"raydent30"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-02-17"},{"lineNumber":83,"author":{"gitId":"raydent30"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":84,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":85,"author":{"gitId":"raydent30"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":86,"author":{"gitId":"raydent30"},"content":"     * This method prints a deleted task","lastModifiedDate":"2023-03-01"},{"lineNumber":87,"author":{"gitId":"raydent30"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":88,"author":{"gitId":"raydent30"},"content":"    public static void displayDeleteTask(int taskIndex,ArrayList\u003cTask\u003e storedUserTasks) {","lastModifiedDate":"2023-02-17"},{"lineNumber":89,"author":{"gitId":"raydent30"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-02-17"},{"lineNumber":90,"author":{"gitId":"raydent30"},"content":"        System.out.println(SPACER+\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-02-17"},{"lineNumber":91,"author":{"gitId":"raydent30"},"content":"        System.out.println(SPACER+SPACER+storedUserTasks.remove(taskIndex).toString());","lastModifiedDate":"2023-02-17"},{"lineNumber":92,"author":{"gitId":"raydent30"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":93,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":94,"author":{"gitId":"raydent30"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":95,"author":{"gitId":"raydent30"},"content":"     * This method prints a created task","lastModifiedDate":"2023-03-01"},{"lineNumber":96,"author":{"gitId":"raydent30"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":97,"author":{"gitId":"raydent30"},"content":"    public static void displayCreateTask(ArrayList\u003cTask\u003e storedUserTasks) {","lastModifiedDate":"2023-02-17"},{"lineNumber":98,"author":{"gitId":"raydent30"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-02-17"},{"lineNumber":99,"author":{"gitId":"raydent30"},"content":"        System.out.println(SPACER+\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-02-17"},{"lineNumber":100,"author":{"gitId":"raydent30"},"content":"        System.out.println(SPACER+storedUserTasks.get(Duke.userTextCount).toString());","lastModifiedDate":"2023-02-17"},{"lineNumber":101,"author":{"gitId":"raydent30"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":102,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":103,"author":{"gitId":"raydent30"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":104,"author":{"gitId":"raydent30"},"content":"     * This method prints tasks containing a keyword","lastModifiedDate":"2023-03-01"},{"lineNumber":105,"author":{"gitId":"raydent30"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":106,"author":{"gitId":"raydent30"},"content":"    public static void displayTasksWithKeyword(ArrayList\u003cTask\u003e storedUserTasks, ArrayList\u003cInteger\u003e taskIndexesWithKeyword) {","lastModifiedDate":"2023-03-01"},{"lineNumber":107,"author":{"gitId":"raydent30"},"content":"        int listIndex;","lastModifiedDate":"2023-03-01"},{"lineNumber":108,"author":{"gitId":"raydent30"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-03-01"},{"lineNumber":109,"author":{"gitId":"raydent30"},"content":"        if (taskIndexesWithKeyword.size()\u003d\u003d0) {","lastModifiedDate":"2023-03-01"},{"lineNumber":110,"author":{"gitId":"raydent30"},"content":"            System.out.println(SPACER+\"No tasks contained the keyword.\");","lastModifiedDate":"2023-03-01"},{"lineNumber":111,"author":{"gitId":"raydent30"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":112,"author":{"gitId":"raydent30"},"content":"        else {","lastModifiedDate":"2023-03-01"},{"lineNumber":113,"author":{"gitId":"raydent30"},"content":"            System.out.println(SPACER+\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-03-01"},{"lineNumber":114,"author":{"gitId":"raydent30"},"content":"            for (Integer integer : taskIndexesWithKeyword) {","lastModifiedDate":"2023-03-01"},{"lineNumber":115,"author":{"gitId":"raydent30"},"content":"                listIndex \u003d integer;","lastModifiedDate":"2023-03-01"},{"lineNumber":116,"author":{"gitId":"raydent30"},"content":"                System.out.println(SPACER + (listIndex + 1) + \".\" + storedUserTasks.get(listIndex).toString());","lastModifiedDate":"2023-03-01"},{"lineNumber":117,"author":{"gitId":"raydent30"},"content":"            }","lastModifiedDate":"2023-03-01"},{"lineNumber":118,"author":{"gitId":"raydent30"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":119,"author":{"gitId":"raydent30"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-03-01"},{"lineNumber":120,"author":{"gitId":"raydent30"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":121,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":122,"author":{"gitId":"raydent30"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"raydent30":122}},{"path":"src/main/java/duke/command/FindTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raydent30"},"content":"package duke.command;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"raydent30"},"content":"import duke.Parser;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"raydent30"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"raydent30"},"content":"import java.text.ParseException;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"raydent30"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"raydent30"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"raydent30"},"content":" * The FindTask class finds","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"raydent30"},"content":" * a listed task with a given keyword","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"raydent30"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"raydent30"},"content":"public class FindTask {","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"raydent30"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"raydent30"},"content":"     * This method searches for tasks with a given keyword","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"raydent30"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"raydent30"},"content":"     * @param userCommand User\u0027s command","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"raydent30"},"content":"     * @param storedUserTasks ArrayList containing listed Tasks","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"raydent30"},"content":"     * @throws ParseException A ParseException has occurred","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"raydent30"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"raydent30"},"content":"    public static void searchForKeyword(String userCommand, ArrayList\u003cTask\u003e storedUserTasks) throws ParseException {","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"raydent30"},"content":"        String keyWord \u003d Parser.extractInfo(userCommand, \"keyword\", \"none\");","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"raydent30"},"content":"        ArrayList\u003cInteger\u003e taskIndexesWithKeyword \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"raydent30"},"content":"        for (int i \u003d 0; i \u003c storedUserTasks.size(); i++) {","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"raydent30"},"content":"            if(storedUserTasks.get(i).toString().contains(keyWord)){","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"raydent30"},"content":"                taskIndexesWithKeyword.add(i);","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"raydent30"},"content":"            }","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"raydent30"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"raydent30"},"content":"        Display.displayTasksWithKeyword(storedUserTasks, taskIndexesWithKeyword);","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"raydent30"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"raydent30"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"raydent30":32}},{"path":"src/main/java/duke/command/IOFile.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raydent30"},"content":"package duke.command;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"raydent30"},"content":"import duke.Duke;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"raydent30"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"raydent30"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"raydent30"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"raydent30"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"raydent30"},"content":"import java.io.File;","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"raydent30"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"raydent30"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"raydent30"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"raydent30"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"raydent30"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"raydent30"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"raydent30"},"content":" * The IOFile class reads and writes","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"raydent30"},"content":" * onto a .txt file to save the tasks listed","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"raydent30"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"raydent30"},"content":"public class IOFile {","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"raydent30"},"content":"    public static final String FILEPATH \u003d \"data/tasklist.txt\";","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"raydent30"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"raydent30"},"content":"     * This method reads the tasks saved","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"raydent30"},"content":"     * onto the .txt file","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"raydent30"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"raydent30"},"content":"     * @param storedUserTasks ArrayList containing listed Tasks","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"raydent30"},"content":"     * @throws FileNotFoundException FileNotFoundException has occurred","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"raydent30"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"raydent30"},"content":"    public static void readData(ArrayList\u003cTask\u003e storedUserTasks) throws FileNotFoundException {","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"raydent30"},"content":"        String originalString, description, by, from, to;","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"raydent30"},"content":"        int indexOfBy, indexOfFrom, indexOfTo;","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"raydent30"},"content":"        boolean isDone;","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"raydent30"},"content":"        File f \u003d new File(FILEPATH);","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"raydent30"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"raydent30"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"raydent30"},"content":"            originalString \u003d s.nextLine();","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"raydent30"},"content":"            isDone \u003d originalString.charAt(4) \u003d\u003d \u0027X\u0027;","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"raydent30"},"content":"            switch (originalString.charAt(1)) {","lastModifiedDate":"2023-02-17"},{"lineNumber":44,"author":{"gitId":"raydent30"},"content":"            case \u0027T\u0027:","lastModifiedDate":"2023-02-17"},{"lineNumber":45,"author":{"gitId":"raydent30"},"content":"                description \u003d originalString.substring(7);","lastModifiedDate":"2023-02-17"},{"lineNumber":46,"author":{"gitId":"raydent30"},"content":"                storedUserTasks.add(new Todo(description));","lastModifiedDate":"2023-02-17"},{"lineNumber":47,"author":{"gitId":"raydent30"},"content":"                break;","lastModifiedDate":"2023-02-17"},{"lineNumber":48,"author":{"gitId":"raydent30"},"content":"            case \u0027D\u0027:","lastModifiedDate":"2023-02-17"},{"lineNumber":49,"author":{"gitId":"raydent30"},"content":"                originalString \u003d originalString.substring(7).replace(\"(by:\", \"/by\");","lastModifiedDate":"2023-02-17"},{"lineNumber":50,"author":{"gitId":"raydent30"},"content":"                originalString \u003d originalString.substring(0, originalString.length() - 1);","lastModifiedDate":"2023-02-17"},{"lineNumber":51,"author":{"gitId":"raydent30"},"content":"                indexOfBy \u003d originalString.indexOf(\"/by\");","lastModifiedDate":"2023-02-17"},{"lineNumber":52,"author":{"gitId":"raydent30"},"content":"                description \u003d originalString.substring( 0, indexOfBy-1);","lastModifiedDate":"2023-02-17"},{"lineNumber":53,"author":{"gitId":"raydent30"},"content":"                by \u003d originalString.substring(indexOfBy+4);","lastModifiedDate":"2023-02-17"},{"lineNumber":54,"author":{"gitId":"raydent30"},"content":"                storedUserTasks.add(new Deadline(description,by));","lastModifiedDate":"2023-02-17"},{"lineNumber":55,"author":{"gitId":"raydent30"},"content":"                break;","lastModifiedDate":"2023-02-17"},{"lineNumber":56,"author":{"gitId":"raydent30"},"content":"            case \u0027E\u0027:","lastModifiedDate":"2023-02-17"},{"lineNumber":57,"author":{"gitId":"raydent30"},"content":"                originalString \u003d originalString.substring(7).replace(\"(from:\", \"/from\");","lastModifiedDate":"2023-02-17"},{"lineNumber":58,"author":{"gitId":"raydent30"},"content":"                originalString \u003d originalString.replace(\"to:\", \"/to\");","lastModifiedDate":"2023-02-17"},{"lineNumber":59,"author":{"gitId":"raydent30"},"content":"                originalString \u003d originalString.substring(0, originalString.length() - 1);","lastModifiedDate":"2023-02-17"},{"lineNumber":60,"author":{"gitId":"raydent30"},"content":"                indexOfFrom \u003d originalString.indexOf(\"/from\");","lastModifiedDate":"2023-02-17"},{"lineNumber":61,"author":{"gitId":"raydent30"},"content":"                indexOfTo \u003d originalString.indexOf(\"/to\");","lastModifiedDate":"2023-02-17"},{"lineNumber":62,"author":{"gitId":"raydent30"},"content":"                description \u003d originalString.substring(0,indexOfFrom-1);","lastModifiedDate":"2023-02-17"},{"lineNumber":63,"author":{"gitId":"raydent30"},"content":"                from \u003d originalString.substring(indexOfFrom+6,indexOfTo-1);","lastModifiedDate":"2023-02-17"},{"lineNumber":64,"author":{"gitId":"raydent30"},"content":"                to \u003d originalString.substring(indexOfTo+4);","lastModifiedDate":"2023-02-17"},{"lineNumber":65,"author":{"gitId":"raydent30"},"content":"                storedUserTasks.add(new Event(description,from,to));","lastModifiedDate":"2023-02-17"},{"lineNumber":66,"author":{"gitId":"raydent30"},"content":"                break;","lastModifiedDate":"2023-02-17"},{"lineNumber":67,"author":{"gitId":"raydent30"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":68,"author":{"gitId":"raydent30"},"content":"            storedUserTasks.get(Duke.userTextCount).isDone \u003d isDone;","lastModifiedDate":"2023-02-17"},{"lineNumber":69,"author":{"gitId":"raydent30"},"content":"            Duke.userTextCount++;","lastModifiedDate":"2023-02-17"},{"lineNumber":70,"author":{"gitId":"raydent30"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":71,"author":{"gitId":"raydent30"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":72,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":73,"author":{"gitId":"raydent30"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":74,"author":{"gitId":"raydent30"},"content":"     * This method writes the tasks saved","lastModifiedDate":"2023-03-01"},{"lineNumber":75,"author":{"gitId":"raydent30"},"content":"     * onto the .txt file","lastModifiedDate":"2023-03-01"},{"lineNumber":76,"author":{"gitId":"raydent30"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":77,"author":{"gitId":"raydent30"},"content":"     * @param storedUserTasks ArrayList containing listed Tasks","lastModifiedDate":"2023-03-01"},{"lineNumber":78,"author":{"gitId":"raydent30"},"content":"     * @throws IOException IOException has occurred","lastModifiedDate":"2023-03-01"},{"lineNumber":79,"author":{"gitId":"raydent30"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":80,"author":{"gitId":"raydent30"},"content":"    public static void writeData(ArrayList\u003cTask\u003e storedUserTasks) throws IOException {","lastModifiedDate":"2023-02-17"},{"lineNumber":81,"author":{"gitId":"raydent30"},"content":"        FileWriter fw \u003d new FileWriter(FILEPATH);","lastModifiedDate":"2023-02-17"},{"lineNumber":82,"author":{"gitId":"raydent30"},"content":"        for(int i\u003d0; i\u003cDuke.userTextCount; i++) {","lastModifiedDate":"2023-02-17"},{"lineNumber":83,"author":{"gitId":"raydent30"},"content":"            fw.write(storedUserTasks.get(i).toString()+\u0027\\n\u0027);","lastModifiedDate":"2023-02-17"},{"lineNumber":84,"author":{"gitId":"raydent30"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":85,"author":{"gitId":"raydent30"},"content":"        fw.close();","lastModifiedDate":"2023-02-17"},{"lineNumber":86,"author":{"gitId":"raydent30"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":87,"author":{"gitId":"raydent30"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"raydent30":87}},{"path":"src/main/java/duke/command/ModifyTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raydent30"},"content":"package duke.command;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"raydent30"},"content":"import duke.Duke;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"raydent30"},"content":"import duke.Parser;","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"raydent30"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"raydent30"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"raydent30"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"raydent30"},"content":" * The ModifyTask class modifies","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"raydent30"},"content":" * a listed task","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"raydent30"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"raydent30"},"content":"public class ModifyTask {","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"raydent30"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"raydent30"},"content":"     * This method marks a task as done","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"raydent30"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"raydent30"},"content":"     * @param userCommand User\u0027s command","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"raydent30"},"content":"     * @param storedUserTasks ArrayList containing listed Tasks","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"raydent30"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"raydent30"},"content":"    public static void markTask(String userCommand, ArrayList\u003cTask\u003e storedUserTasks) {","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"raydent30"},"content":"        int taskIndex \u003d Parser.extractIndex(userCommand, \"task\");","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"raydent30"},"content":"        storedUserTasks.get(taskIndex).isDone \u003d true;","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"raydent30"},"content":"        Display.displayTaskProgress(\"mark\", taskIndex, storedUserTasks);","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"raydent30"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"raydent30"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"raydent30"},"content":"     * This method marks a task as not done","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"raydent30"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"raydent30"},"content":"     * @param userCommand User\u0027s command","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"raydent30"},"content":"     * @param storedUserTasks ArrayList containing listed Tasks","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"raydent30"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"raydent30"},"content":"    public static void unmarkTask(String userCommand, ArrayList\u003cTask\u003e storedUserTasks) {","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"raydent30"},"content":"        int taskIndex \u003d Parser.extractIndex(userCommand, \"task\");","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"raydent30"},"content":"        storedUserTasks.get(taskIndex).isDone \u003d false;","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"raydent30"},"content":"        Display.displayTaskProgress(\"unmark\", taskIndex, storedUserTasks);","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"raydent30"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"raydent30"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"raydent30"},"content":"     * This method deletes a task","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"raydent30"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"raydent30"},"content":"     * @param userCommand User\u0027s command","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"raydent30"},"content":"     * @param storedUserTasks ArrayList containing listed Tasks","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"raydent30"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"raydent30"},"content":"    public static void deleteTask(String userCommand, ArrayList\u003cTask\u003e storedUserTasks) {","lastModifiedDate":"2023-02-17"},{"lineNumber":46,"author":{"gitId":"raydent30"},"content":"        int taskIndex \u003d Parser.extractIndex(userCommand, \"task\");","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"raydent30"},"content":"        Display.displayDeleteTask(taskIndex, storedUserTasks);","lastModifiedDate":"2023-02-17"},{"lineNumber":48,"author":{"gitId":"raydent30"},"content":"        Duke.userTextCount--;","lastModifiedDate":"2023-02-17"},{"lineNumber":49,"author":{"gitId":"raydent30"},"content":"        Display.printNumberOfTasks();","lastModifiedDate":"2023-02-17"},{"lineNumber":50,"author":{"gitId":"raydent30"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":51,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":52,"author":{"gitId":"raydent30"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"raydent30":52}},{"path":"src/main/java/duke/exception/BlankDescException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raydent30"},"content":"package duke.exception;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"raydent30"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"raydent30"},"content":" * The BlankDescException class handles","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"raydent30"},"content":" * blank description errors when creating a task","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"raydent30"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"raydent30"},"content":"public class BlankDescException extends DukeException {","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"raydent30"},"content":"    public static final String DIVIDER \u003d \"\\t____________________________________________________________\";","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"raydent30"},"content":"    public static final String SPACER \u003d \"\\t\";","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"raydent30"},"content":"    public BlankDescException(){","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"raydent30"},"content":"        super();","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"raydent30"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"raydent30"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"raydent30"},"content":"     * This method prints the error message of a specific type","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"raydent30"},"content":"     * @param type Type of Task","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"raydent30"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"raydent30"},"content":"    public static void errorMessage (String type) {","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"raydent30"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"raydent30"},"content":"        System.out.println(SPACER + \"☹ OOPS!!! The description of a \"+type+\" cannot be empty.\");","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"raydent30"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"raydent30"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"raydent30"},"content":"}","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"raydent30":27}},{"path":"src/main/java/duke/exception/CommandParseException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raydent30"},"content":"package duke.exception;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"raydent30"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"raydent30"},"content":" * The CommandParseException class handles","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"raydent30"},"content":" * CommandParseException exceptions","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"raydent30"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"raydent30"},"content":"public class CommandParseException extends DukeException {","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"raydent30"},"content":"    public static final String DIVIDER \u003d \"\\t____________________________________________________________\";","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"raydent30"},"content":"    public static final String SPACER \u003d \"\\t\";","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"raydent30"},"content":"    public CommandParseException(){","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"raydent30"},"content":"        super();","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"raydent30"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"raydent30"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"raydent30"},"content":"     * This method prints the error message","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"raydent30"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"raydent30"},"content":"    public static void errorMessage () {","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"raydent30"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"raydent30"},"content":"        System.out.println(SPACER + \"☹ OOPS!!! Please enter a proper keyword.\");","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"raydent30"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"raydent30"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"raydent30"},"content":"}","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"raydent30":26}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raydent30"},"content":"package duke.exception;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"raydent30"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"raydent30"},"content":" * The DukeException class handles","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"raydent30"},"content":" * general Duke exceptions","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"raydent30"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"raydent30"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"raydent30"},"content":"    public static final String DIVIDER \u003d \"\\t____________________________________________________________\";","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"raydent30"},"content":"    public static final String SPACER \u003d \"\\t\";","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"raydent30"},"content":"    DukeException(){","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"raydent30"},"content":"        super();","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"raydent30"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"raydent30"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"raydent30"},"content":"     * This method prints the error message","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"raydent30"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"raydent30"},"content":"    public static void errorMessage () {","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"raydent30"},"content":"            System.out.println(DIVIDER);","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"raydent30"},"content":"            System.out.println(SPACER + \"☹ OOPS!!! An error has occured!.\");","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"raydent30"},"content":"            System.out.println(DIVIDER);","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"raydent30"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"raydent30"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"raydent30":23}},{"path":"src/main/java/duke/exception/TimeParseException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raydent30"},"content":"package duke.exception;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"raydent30"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"raydent30"},"content":" * The TimeParseException class handles","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"raydent30"},"content":" * TimeParseException exceptions","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"raydent30"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"raydent30"},"content":"public class TimeParseException extends DukeException {","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"raydent30"},"content":"    public static final String DIVIDER \u003d \"\\t____________________________________________________________\";","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"raydent30"},"content":"    public static final String SPACER \u003d \"\\t\";","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"raydent30"},"content":"    public TimeParseException(){","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"raydent30"},"content":"        super();","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"raydent30"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"raydent30"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"raydent30"},"content":"     * This method prints the error message","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"raydent30"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"raydent30"},"content":"    public static void errorMessage () {","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"raydent30"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"raydent30"},"content":"        System.out.println(SPACER + \"☹ OOPS!!! Please enter the time format according to \u0027dd-M-yyyy hh:mm a\u0027\");","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"raydent30"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"raydent30"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"raydent30"},"content":"}","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"raydent30":26}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raydent30"},"content":"package duke.task;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"raydent30"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"raydent30"},"content":" * The Deadline class extends the Task class","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"raydent30"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"raydent30"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"raydent30"},"content":"    protected String by;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"raydent30"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"raydent30"},"content":"     * Constructor for a Deadline","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"raydent30"},"content":"     * @param description Task description","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"raydent30"},"content":"     * @param by By description","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"raydent30"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"raydent30"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"raydent30"},"content":"        super(description);","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"raydent30"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"raydent30"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"raydent30"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"raydent30"},"content":"     * This method returns the deadline in the form of a string","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"raydent30"},"content":"     * @return String","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"raydent30"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"raydent30"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"raydent30"},"content":"    public String toString() {","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"raydent30"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"raydent30"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"raydent30"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"raydent30":27}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raydent30"},"content":"package duke.task;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"raydent30"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"raydent30"},"content":" * The Event class extends the Task class","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"raydent30"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"raydent30"},"content":"public class Event extends Task {","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"raydent30"},"content":"    protected String from;","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"raydent30"},"content":"    protected String to;","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"raydent30"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"raydent30"},"content":"     * Constructor for an Event","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"raydent30"},"content":"     * @param description Task description","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"raydent30"},"content":"     * @param from From description","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"raydent30"},"content":"     * @param to To description","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"raydent30"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"raydent30"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"raydent30"},"content":"        super(description);","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"raydent30"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"raydent30"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"raydent30"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"raydent30"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"raydent30"},"content":"     * This method returns the event in the form of a string","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"raydent30"},"content":"     * @return String","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"raydent30"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"raydent30"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"raydent30"},"content":"    public String toString() {","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"raydent30"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"raydent30"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"raydent30"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"raydent30":31}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raydent30"},"content":"package duke.task;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"raydent30"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"raydent30"},"content":" * The Task class contains","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"raydent30"},"content":" * details of a listed task","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"raydent30"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"raydent30"},"content":"public class Task {","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"raydent30"},"content":"    protected String description;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"raydent30"},"content":"    public boolean isDone;","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"raydent30"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"raydent30"},"content":"     * Constructor for a Task","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"raydent30"},"content":"     * @param description Task description","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"raydent30"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"raydent30"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"raydent30"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"raydent30"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"raydent30"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"raydent30"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"raydent30"},"content":"     * This method returns the progress of a task","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"raydent30"},"content":"     * @return String","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"raydent30"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"raydent30"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"raydent30"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"raydent30"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"raydent30"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"raydent30"},"content":"     * This method returns the task in the form of a string","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"raydent30"},"content":"     * @return String","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"raydent30"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"raydent30"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"raydent30"},"content":"    public String toString() {","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"raydent30"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"raydent30"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"raydent30"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"raydent30":36}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raydent30"},"content":"package duke.task;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"raydent30"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"raydent30"},"content":" * The Todo class extends the Task class","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"raydent30"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"raydent30"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"raydent30"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"raydent30"},"content":"     * Constructor for a Todo","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"raydent30"},"content":"     * @param description Task description","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"raydent30"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"raydent30"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"raydent30"},"content":"        super(description);","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"raydent30"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"raydent30"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"raydent30"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"raydent30"},"content":"     * This method returns the todo in the form of a string","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"raydent30"},"content":"     * @return String","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"raydent30"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"raydent30"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"raydent30"},"content":"    public String toString() {","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"raydent30"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"raydent30"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"raydent30"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"raydent30":23}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"raydent30"},"content":"todo","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"raydent30"},"content":"todo borrow book","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"raydent30"},"content":"deadline","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"raydent30"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"raydent30"},"content":"event","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"raydent30"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"raydent30"},"content":"mark 2","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"raydent30"},"content":"list","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"raydent30"},"content":"mark 1","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"raydent30"},"content":"list","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"raydent30"},"content":"unmark 1","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"raydent30"},"content":"list","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"raydent30"},"content":"bye","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"raydent30":13}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"raydent30"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"raydent30":1,"-":20}}]
