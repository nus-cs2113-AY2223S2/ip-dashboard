[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"nafisazizir"},"content":"# Jonathan project template","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"nafisazizir"},"content":"3. After that, locate the `src/main/java/Jonathan.java` file, right-click it, and choose `Run Jonathan.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"nafisazizir":2,"-":22}},{"path":"data/jonathan.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nafisazizir"},"content":"E | 0 | project meeting | Mon 2pm | 4pm","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"nafisazizir"},"content":"D | 0 | return book | Sunday","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"nafisazizir"},"content":"T | 0 | borrow book","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"nafisazizir":3}},{"path":"src/main/Java/jonathan/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nafisazizir"},"content":"package jonathan;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"nafisazizir"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"nafisazizir"},"content":"    private final String by;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"nafisazizir"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"nafisazizir"},"content":"        super(description);","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"nafisazizir"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"nafisazizir"},"content":"    public String getBy() {","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"nafisazizir"},"content":"        return by;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"nafisazizir"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"nafisazizir"},"content":"    public String toString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"nafisazizir"},"content":"        return \"[D][\" + getStatusIcon() + \"] \" + getDescription() + \" (by: \" + getBy() + \")\";","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"nafisazizir"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"nafisazizir":19}},{"path":"src/main/Java/jonathan/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nafisazizir"},"content":"package jonathan;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"nafisazizir"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"nafisazizir"},"content":"    private final String start;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"nafisazizir"},"content":"    private final String end;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"nafisazizir"},"content":"    public Event(String description, String start, String end) {","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"nafisazizir"},"content":"        super(description);","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"nafisazizir"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"nafisazizir"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"nafisazizir"},"content":"    public String getStart() {","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"nafisazizir"},"content":"        return start;","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"nafisazizir"},"content":"    public String getEnd() {","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"nafisazizir"},"content":"        return end;","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"nafisazizir"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"nafisazizir"},"content":"    public String toString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"nafisazizir"},"content":"        return \"[E][\" + getStatusIcon() + \"] \" + getDescription() + \" (from: \" + getStart() +","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"nafisazizir"},"content":"                \" to: \" + getEnd() + \")\";","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"nafisazizir"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"nafisazizir":26}},{"path":"src/main/Java/jonathan/Jonathan.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nafisazizir"},"content":"package jonathan;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"nafisazizir"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"nafisazizir"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"nafisazizir"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"nafisazizir"},"content":"import java.util.Objects;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"nafisazizir"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"nafisazizir"},"content":"import java.io.File;","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"nafisazizir"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"nafisazizir"},"content":"public class Jonathan {","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"nafisazizir"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"nafisazizir"},"content":"        Scanner input \u003d new Scanner((System.in));","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"nafisazizir"},"content":"        String command;","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"nafisazizir"},"content":"        String line \u003d \"    ____________________________________________________________\";","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"nafisazizir"},"content":"        String welcome \u003d line + \"\\n    Hello! I\u0027m Jonathan\\n\" +","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"nafisazizir"},"content":"                \"    What can I do for you?\\n\" + line + \"\\n\";","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"nafisazizir"},"content":"        String goodbye \u003d line + \"\\n    Bye. Hope to see you again soon!\\n\" + line;","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"nafisazizir"},"content":"        ArrayList\u003cTask\u003e list \u003d readData();","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"nafisazizir"},"content":"        int taskCounter \u003d list.size();","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"nafisazizir"},"content":"        System.out.println(welcome);","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"nafisazizir"},"content":"        // Loop until user prompt \"bye\"","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"nafisazizir"},"content":"        while (true) {","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"nafisazizir"},"content":"            command \u003d input.nextLine(); // Prompt input from user","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"nafisazizir"},"content":"            try {","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"nafisazizir"},"content":"                if (Objects.equals(command, \"bye\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"nafisazizir"},"content":"                    saveData(list);","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"nafisazizir"},"content":"                    System.out.println(goodbye);","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"nafisazizir"},"content":"                    break; // quit the program","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"nafisazizir"},"content":"                } else if (Objects.equals(command, \"list\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"nafisazizir"},"content":"                    lookupTask(list, taskCounter);","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"nafisazizir"},"content":"                } else if (command.split(\" \")[0].equals(\"mark\") || command.split(\" \")[0].equals(\"unmark\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"nafisazizir"},"content":"                    boolean isDone \u003d command.split(\" \")[0].equals(\"mark\");","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"nafisazizir"},"content":"                    int taskNum \u003d Integer.parseInt(command.split(\" \")[1]);","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"nafisazizir"},"content":"                    Task task \u003d list.get(taskNum - 1);","lastModifiedDate":"2023-02-07"},{"lineNumber":43,"author":{"gitId":"nafisazizir"},"content":"                    changeStatus(task, isDone);","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"nafisazizir"},"content":"                } else if (command.split(\" \")[0].equals(\"todo\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":47,"author":{"gitId":"nafisazizir"},"content":"                    if (command.split(\" \").length \u003d\u003d 1) {","lastModifiedDate":"2023-02-07"},{"lineNumber":48,"author":{"gitId":"nafisazizir"},"content":"                        throw new StringIndexOutOfBoundsException();","lastModifiedDate":"2023-02-07"},{"lineNumber":49,"author":{"gitId":"nafisazizir"},"content":"                    }","lastModifiedDate":"2023-02-07"},{"lineNumber":50,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":51,"author":{"gitId":"nafisazizir"},"content":"                    String description \u003d command.substring(command.indexOf(\" \") + 1);","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"nafisazizir"},"content":"                    Todo todo \u003d new Todo(description);","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"nafisazizir"},"content":"                    list.add(todo);","lastModifiedDate":"2023-02-07"},{"lineNumber":54,"author":{"gitId":"nafisazizir"},"content":"                    taskCounter +\u003d 1;","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"nafisazizir"},"content":"                    addedMessage(todo, taskCounter);","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"nafisazizir"},"content":"                } else if (command.split(\" \")[0].equals(\"deadline\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"nafisazizir"},"content":"                    String description \u003d command.substring(command.indexOf(\" \") + 1, command.indexOf(\" /by\"));","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"nafisazizir"},"content":"                    String by \u003d command.substring(command.indexOf(\"/by\") + 4);","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"nafisazizir"},"content":"                    Deadline deadline \u003d new Deadline(description, by);","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"nafisazizir"},"content":"                    list.add(deadline);","lastModifiedDate":"2023-02-07"},{"lineNumber":62,"author":{"gitId":"nafisazizir"},"content":"                    taskCounter +\u003d 1;","lastModifiedDate":"2023-01-24"},{"lineNumber":63,"author":{"gitId":"nafisazizir"},"content":"                    addedMessage(deadline, taskCounter);","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"nafisazizir"},"content":"                } else if (command.split(\" \")[0].equals(\"event\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"nafisazizir"},"content":"                    String description \u003d command.substring(command.indexOf(\" \") + 1, command.indexOf(\" /from\"));","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"nafisazizir"},"content":"                    String start \u003d command.substring(command.indexOf(\"/from\") + 6, command.indexOf(\" /to\"));","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"nafisazizir"},"content":"                    String end \u003d command.substring(command.indexOf(\"/to\") + 4);","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"nafisazizir"},"content":"                    Event event \u003d new Event(description, start, end);","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"nafisazizir"},"content":"                    list.add(event);","lastModifiedDate":"2023-02-07"},{"lineNumber":71,"author":{"gitId":"nafisazizir"},"content":"                    taskCounter +\u003d 1;","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"nafisazizir"},"content":"                    addedMessage(event, taskCounter);","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":74,"author":{"gitId":"nafisazizir"},"content":"                } else if (command.split(\" \")[0].equals(\"delete\")) {","lastModifiedDate":"2023-02-11"},{"lineNumber":75,"author":{"gitId":"nafisazizir"},"content":"                    int taskNum \u003d Integer.parseInt(command.split(\" \")[1]);","lastModifiedDate":"2023-02-11"},{"lineNumber":76,"author":{"gitId":"nafisazizir"},"content":"                    Task task \u003d list.get(taskNum-1);","lastModifiedDate":"2023-02-11"},{"lineNumber":77,"author":{"gitId":"nafisazizir"},"content":"                    list.remove(taskNum - 1);","lastModifiedDate":"2023-02-11"},{"lineNumber":78,"author":{"gitId":"nafisazizir"},"content":"                    taskCounter -\u003d 1;","lastModifiedDate":"2023-02-11"},{"lineNumber":79,"author":{"gitId":"nafisazizir"},"content":"                    System.out.println(\"     ____________________________________________________________\\n\" +","lastModifiedDate":"2023-02-11"},{"lineNumber":80,"author":{"gitId":"nafisazizir"},"content":"                            \"     Noted. I\u0027ve removed this task:\\n\" +","lastModifiedDate":"2023-02-11"},{"lineNumber":81,"author":{"gitId":"nafisazizir"},"content":"                            \"       \" + task + \"\\n\" +","lastModifiedDate":"2023-02-11"},{"lineNumber":82,"author":{"gitId":"nafisazizir"},"content":"                            \"     Now you have \" + taskCounter + \" tasks in the list.\\n\" +","lastModifiedDate":"2023-02-11"},{"lineNumber":83,"author":{"gitId":"nafisazizir"},"content":"                            \"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-02-11"},{"lineNumber":84,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":85,"author":{"gitId":"nafisazizir"},"content":"                } else {","lastModifiedDate":"2023-02-07"},{"lineNumber":86,"author":{"gitId":"nafisazizir"},"content":"                    throw new JonathanException();","lastModifiedDate":"2023-02-07"},{"lineNumber":87,"author":{"gitId":"nafisazizir"},"content":"                }","lastModifiedDate":"2023-02-07"},{"lineNumber":88,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":89,"author":{"gitId":"nafisazizir"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-07"},{"lineNumber":90,"author":{"gitId":"nafisazizir"},"content":"                System.out.println(\"    ____________________________________________________________\\n\" +","lastModifiedDate":"2023-02-07"},{"lineNumber":91,"author":{"gitId":"nafisazizir"},"content":"                        \"    The task doesn\u0027t exist, please type it correctly!\\n\" +","lastModifiedDate":"2023-02-07"},{"lineNumber":92,"author":{"gitId":"nafisazizir"},"content":"                        \"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-02-07"},{"lineNumber":93,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":94,"author":{"gitId":"nafisazizir"},"content":"            } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-07"},{"lineNumber":95,"author":{"gitId":"nafisazizir"},"content":"                System.out.println(\"    ____________________________________________________________\\n\" +","lastModifiedDate":"2023-02-07"},{"lineNumber":96,"author":{"gitId":"nafisazizir"},"content":"                        \"    Please type with the following format:\\n\\n\" +","lastModifiedDate":"2023-02-07"},{"lineNumber":97,"author":{"gitId":"nafisazizir"},"content":"                        \"    - todo \u003cdescription\u003e\\n\" +","lastModifiedDate":"2023-02-07"},{"lineNumber":98,"author":{"gitId":"nafisazizir"},"content":"                        \"    - deadline \u003cdescription\u003e /by \u003ctime\u003e\\n\" +","lastModifiedDate":"2023-02-07"},{"lineNumber":99,"author":{"gitId":"nafisazizir"},"content":"                        \"    - event \u003cdescripton\u003e /from \u003ctime\u003e /to \u003ctime\u003e\\n\\n\" +","lastModifiedDate":"2023-02-07"},{"lineNumber":100,"author":{"gitId":"nafisazizir"},"content":"                        \"    note: without the angle bracket\\n\" +","lastModifiedDate":"2023-02-07"},{"lineNumber":101,"author":{"gitId":"nafisazizir"},"content":"                        \"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-02-07"},{"lineNumber":102,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":103,"author":{"gitId":"nafisazizir"},"content":"            } catch (JonathanException e) {","lastModifiedDate":"2023-02-07"},{"lineNumber":104,"author":{"gitId":"nafisazizir"},"content":"                System.out.println(\"    ____________________________________________________________\\n\" +","lastModifiedDate":"2023-01-31"},{"lineNumber":105,"author":{"gitId":"nafisazizir"},"content":"                        \"    Wrong input, please type it correctly!\\n\" +","lastModifiedDate":"2023-01-31"},{"lineNumber":106,"author":{"gitId":"nafisazizir"},"content":"                        \"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-01-31"},{"lineNumber":107,"author":{"gitId":"nafisazizir"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":108,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":109,"author":{"gitId":"nafisazizir"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":110,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":111,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":112,"author":{"gitId":"nafisazizir"},"content":"    /*","lastModifiedDate":"2023-01-31"},{"lineNumber":113,"author":{"gitId":"nafisazizir"},"content":"    Method to print the added message to the user after prompting input","lastModifiedDate":"2023-01-31"},{"lineNumber":114,"author":{"gitId":"nafisazizir"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":115,"author":{"gitId":"nafisazizir"},"content":"    public static void addedMessage(Task task, int taskCounter) {","lastModifiedDate":"2023-01-31"},{"lineNumber":116,"author":{"gitId":"nafisazizir"},"content":"        System.out.println(\"    ____________________________________________________________\\n\" +","lastModifiedDate":"2023-01-31"},{"lineNumber":117,"author":{"gitId":"nafisazizir"},"content":"                \"     Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2023-01-31"},{"lineNumber":118,"author":{"gitId":"nafisazizir"},"content":"                \"       \" + task + \"\\n\" +","lastModifiedDate":"2023-01-31"},{"lineNumber":119,"author":{"gitId":"nafisazizir"},"content":"                \"     Now you have \" + taskCounter + \" tasks in the list.\\n\" +","lastModifiedDate":"2023-01-31"},{"lineNumber":120,"author":{"gitId":"nafisazizir"},"content":"                \"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-01-31"},{"lineNumber":121,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":122,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":123,"author":{"gitId":"nafisazizir"},"content":"    /*","lastModifiedDate":"2023-01-24"},{"lineNumber":124,"author":{"gitId":"nafisazizir"},"content":"    Method to print all the Task, including the Task\u0027s status","lastModifiedDate":"2023-01-24"},{"lineNumber":125,"author":{"gitId":"nafisazizir"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":126,"author":{"gitId":"nafisazizir"},"content":"    public static void lookupTask(ArrayList\u003cTask\u003e list, int counter) {","lastModifiedDate":"2023-02-07"},{"lineNumber":127,"author":{"gitId":"nafisazizir"},"content":"        System.out.println(\"    ____________________________________________________________\\n\" +","lastModifiedDate":"2023-01-31"},{"lineNumber":128,"author":{"gitId":"nafisazizir"},"content":"                \"    Here are the tasks in your list:\");","lastModifiedDate":"2023-01-31"},{"lineNumber":129,"author":{"gitId":"nafisazizir"},"content":"        for (int i \u003d 0; i \u003c counter; i++) {","lastModifiedDate":"2023-01-24"},{"lineNumber":130,"author":{"gitId":"nafisazizir"},"content":"            System.out.println(\"    \" + (i+1) + \". \"  + list.get(i));","lastModifiedDate":"2023-02-07"},{"lineNumber":131,"author":{"gitId":"nafisazizir"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":132,"author":{"gitId":"nafisazizir"},"content":"        System.out.println(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-01-24"},{"lineNumber":133,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":134,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":135,"author":{"gitId":"nafisazizir"},"content":"    /*","lastModifiedDate":"2023-01-24"},{"lineNumber":136,"author":{"gitId":"nafisazizir"},"content":"    Method to change the status of a Task","lastModifiedDate":"2023-01-24"},{"lineNumber":137,"author":{"gitId":"nafisazizir"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":138,"author":{"gitId":"nafisazizir"},"content":"    public static void changeStatus(Task task, boolean isDone) {","lastModifiedDate":"2023-01-24"},{"lineNumber":139,"author":{"gitId":"nafisazizir"},"content":"        task.setDone(isDone);","lastModifiedDate":"2023-01-24"},{"lineNumber":140,"author":{"gitId":"nafisazizir"},"content":"        // If the Task is mark done","lastModifiedDate":"2023-01-24"},{"lineNumber":141,"author":{"gitId":"nafisazizir"},"content":"        if (isDone) {","lastModifiedDate":"2023-01-24"},{"lineNumber":142,"author":{"gitId":"nafisazizir"},"content":"            System.out.println(\"    ____________________________________________________________\\n\" +","lastModifiedDate":"2023-01-24"},{"lineNumber":143,"author":{"gitId":"nafisazizir"},"content":"                    \"     Nice! I\u0027ve marked this task as done:\\n\" +","lastModifiedDate":"2023-01-24"},{"lineNumber":144,"author":{"gitId":"nafisazizir"},"content":"                    \"       \" + task + \"\\n\" +","lastModifiedDate":"2023-01-31"},{"lineNumber":145,"author":{"gitId":"nafisazizir"},"content":"                    \"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-01-31"},{"lineNumber":146,"author":{"gitId":"nafisazizir"},"content":"        } else { // Unmark the Task","lastModifiedDate":"2023-01-31"},{"lineNumber":147,"author":{"gitId":"nafisazizir"},"content":"            System.out.println(\"    ____________________________________________________________\\n\" +","lastModifiedDate":"2023-01-24"},{"lineNumber":148,"author":{"gitId":"nafisazizir"},"content":"                    \"     OK, I\u0027ve marked this task as not done yet:\\n\" +","lastModifiedDate":"2023-01-24"},{"lineNumber":149,"author":{"gitId":"nafisazizir"},"content":"                    \"       \" + task + \"\\n\" +","lastModifiedDate":"2023-01-31"},{"lineNumber":150,"author":{"gitId":"nafisazizir"},"content":"                    \"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-01-31"},{"lineNumber":151,"author":{"gitId":"nafisazizir"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":152,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":153,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":154,"author":{"gitId":"nafisazizir"},"content":"    /*","lastModifiedDate":"2023-02-11"},{"lineNumber":155,"author":{"gitId":"nafisazizir"},"content":"    Method to export the data into .txt file","lastModifiedDate":"2023-02-11"},{"lineNumber":156,"author":{"gitId":"nafisazizir"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":157,"author":{"gitId":"nafisazizir"},"content":"    public static void saveData(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-11"},{"lineNumber":158,"author":{"gitId":"nafisazizir"},"content":"        try {","lastModifiedDate":"2023-02-11"},{"lineNumber":159,"author":{"gitId":"nafisazizir"},"content":"            File outFile \u003d new File(\"data/jonathan.txt\");","lastModifiedDate":"2023-02-11"},{"lineNumber":160,"author":{"gitId":"nafisazizir"},"content":"            outFile.createNewFile();","lastModifiedDate":"2023-02-11"},{"lineNumber":161,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":162,"author":{"gitId":"nafisazizir"},"content":"            FileWriter outFileWriter \u003d new FileWriter(outFile);","lastModifiedDate":"2023-02-11"},{"lineNumber":163,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":164,"author":{"gitId":"nafisazizir"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-02-11"},{"lineNumber":165,"author":{"gitId":"nafisazizir"},"content":"                Task task \u003d tasks.get(i);","lastModifiedDate":"2023-02-11"},{"lineNumber":166,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":167,"author":{"gitId":"nafisazizir"},"content":"                if (task instanceof Todo) {","lastModifiedDate":"2023-02-11"},{"lineNumber":168,"author":{"gitId":"nafisazizir"},"content":"                    Todo todo \u003d (Todo) task;","lastModifiedDate":"2023-02-11"},{"lineNumber":169,"author":{"gitId":"nafisazizir"},"content":"                    String line \u003d \"T | \" + todo.getIsDone() + \" | \" + todo.getDescription() + \"\\n\";","lastModifiedDate":"2023-02-11"},{"lineNumber":170,"author":{"gitId":"nafisazizir"},"content":"                    outFileWriter.write(line);","lastModifiedDate":"2023-02-11"},{"lineNumber":171,"author":{"gitId":"nafisazizir"},"content":"                } else if (task instanceof Deadline) {","lastModifiedDate":"2023-02-11"},{"lineNumber":172,"author":{"gitId":"nafisazizir"},"content":"                    Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2023-02-11"},{"lineNumber":173,"author":{"gitId":"nafisazizir"},"content":"                    String line \u003d \"D | \" + deadline.getIsDone() + \" | \" + deadline.getDescription() +","lastModifiedDate":"2023-02-11"},{"lineNumber":174,"author":{"gitId":"nafisazizir"},"content":"                            \" | \" + deadline.getBy() + \"\\n\";","lastModifiedDate":"2023-02-11"},{"lineNumber":175,"author":{"gitId":"nafisazizir"},"content":"                    outFileWriter.write(line);","lastModifiedDate":"2023-02-11"},{"lineNumber":176,"author":{"gitId":"nafisazizir"},"content":"                } else if (task instanceof Event) {","lastModifiedDate":"2023-02-11"},{"lineNumber":177,"author":{"gitId":"nafisazizir"},"content":"                    Event event \u003d (Event) task;","lastModifiedDate":"2023-02-11"},{"lineNumber":178,"author":{"gitId":"nafisazizir"},"content":"                    String line \u003d \"E | \" + event.getIsDone() + \" | \" + event.getDescription() +","lastModifiedDate":"2023-02-11"},{"lineNumber":179,"author":{"gitId":"nafisazizir"},"content":"                            \" | \" + event.getStart() + \" | \" + event.getEnd() + \"\\n\";","lastModifiedDate":"2023-02-11"},{"lineNumber":180,"author":{"gitId":"nafisazizir"},"content":"                    outFileWriter.write(line);","lastModifiedDate":"2023-02-11"},{"lineNumber":181,"author":{"gitId":"nafisazizir"},"content":"                }","lastModifiedDate":"2023-02-11"},{"lineNumber":182,"author":{"gitId":"nafisazizir"},"content":"            }","lastModifiedDate":"2023-02-11"},{"lineNumber":183,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":184,"author":{"gitId":"nafisazizir"},"content":"            outFileWriter.flush();","lastModifiedDate":"2023-02-11"},{"lineNumber":185,"author":{"gitId":"nafisazizir"},"content":"            outFileWriter.close();","lastModifiedDate":"2023-02-11"},{"lineNumber":186,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":187,"author":{"gitId":"nafisazizir"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-11"},{"lineNumber":188,"author":{"gitId":"nafisazizir"},"content":"            System.out.println(\"An error occurred.\");","lastModifiedDate":"2023-02-11"},{"lineNumber":189,"author":{"gitId":"nafisazizir"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-11"},{"lineNumber":190,"author":{"gitId":"nafisazizir"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":191,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":192,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":193,"author":{"gitId":"nafisazizir"},"content":"    public static ArrayList\u003cTask\u003e readData() {","lastModifiedDate":"2023-02-11"},{"lineNumber":194,"author":{"gitId":"nafisazizir"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-11"},{"lineNumber":195,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":196,"author":{"gitId":"nafisazizir"},"content":"        try {","lastModifiedDate":"2023-02-11"},{"lineNumber":197,"author":{"gitId":"nafisazizir"},"content":"            File file \u003d new File(\"data/jonathan.txt\");","lastModifiedDate":"2023-02-11"},{"lineNumber":198,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":199,"author":{"gitId":"nafisazizir"},"content":"            Scanner reader \u003d new Scanner(file);","lastModifiedDate":"2023-02-11"},{"lineNumber":200,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":201,"author":{"gitId":"nafisazizir"},"content":"            while (reader.hasNextLine()) {","lastModifiedDate":"2023-02-11"},{"lineNumber":202,"author":{"gitId":"nafisazizir"},"content":"                String line \u003d reader.nextLine();","lastModifiedDate":"2023-02-11"},{"lineNumber":203,"author":{"gitId":"nafisazizir"},"content":"                String[] extract \u003d line.split(\"\\\\|\");","lastModifiedDate":"2023-02-11"},{"lineNumber":204,"author":{"gitId":"nafisazizir"},"content":"                String symbol \u003d extract[0].trim();","lastModifiedDate":"2023-02-11"},{"lineNumber":205,"author":{"gitId":"nafisazizir"},"content":"                String isDone \u003d extract[1].trim();","lastModifiedDate":"2023-02-11"},{"lineNumber":206,"author":{"gitId":"nafisazizir"},"content":"                String description \u003d extract[2].trim();","lastModifiedDate":"2023-02-11"},{"lineNumber":207,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":208,"author":{"gitId":"nafisazizir"},"content":"                switch (symbol) {","lastModifiedDate":"2023-02-11"},{"lineNumber":209,"author":{"gitId":"nafisazizir"},"content":"                    case \"T\":","lastModifiedDate":"2023-02-11"},{"lineNumber":210,"author":{"gitId":"nafisazizir"},"content":"                        Todo todo \u003d new Todo(description);","lastModifiedDate":"2023-02-11"},{"lineNumber":211,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":212,"author":{"gitId":"nafisazizir"},"content":"                        if (isDone.equals(\"1\")) {","lastModifiedDate":"2023-02-11"},{"lineNumber":213,"author":{"gitId":"nafisazizir"},"content":"                            todo.setDone(true);","lastModifiedDate":"2023-02-11"},{"lineNumber":214,"author":{"gitId":"nafisazizir"},"content":"                        }","lastModifiedDate":"2023-02-11"},{"lineNumber":215,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":216,"author":{"gitId":"nafisazizir"},"content":"                        tasks.add(todo);","lastModifiedDate":"2023-02-11"},{"lineNumber":217,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":218,"author":{"gitId":"nafisazizir"},"content":"                        break;","lastModifiedDate":"2023-02-11"},{"lineNumber":219,"author":{"gitId":"nafisazizir"},"content":"                    case \"D\":","lastModifiedDate":"2023-02-11"},{"lineNumber":220,"author":{"gitId":"nafisazizir"},"content":"                        String by \u003d extract[3].trim();","lastModifiedDate":"2023-02-11"},{"lineNumber":221,"author":{"gitId":"nafisazizir"},"content":"                        Deadline deadline \u003d new Deadline(description, by);","lastModifiedDate":"2023-02-11"},{"lineNumber":222,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":223,"author":{"gitId":"nafisazizir"},"content":"                        if (isDone.equals(\"1\")) {","lastModifiedDate":"2023-02-11"},{"lineNumber":224,"author":{"gitId":"nafisazizir"},"content":"                            deadline.setDone(true);","lastModifiedDate":"2023-02-11"},{"lineNumber":225,"author":{"gitId":"nafisazizir"},"content":"                        }","lastModifiedDate":"2023-02-11"},{"lineNumber":226,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":227,"author":{"gitId":"nafisazizir"},"content":"                        tasks.add(deadline);","lastModifiedDate":"2023-02-11"},{"lineNumber":228,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":229,"author":{"gitId":"nafisazizir"},"content":"                        break;","lastModifiedDate":"2023-02-11"},{"lineNumber":230,"author":{"gitId":"nafisazizir"},"content":"                    case \"E\":","lastModifiedDate":"2023-02-11"},{"lineNumber":231,"author":{"gitId":"nafisazizir"},"content":"                        String start \u003d extract[3].trim();","lastModifiedDate":"2023-02-11"},{"lineNumber":232,"author":{"gitId":"nafisazizir"},"content":"                        String end \u003d extract[4].trim();","lastModifiedDate":"2023-02-11"},{"lineNumber":233,"author":{"gitId":"nafisazizir"},"content":"                        Event event \u003d new Event(description, start, end);","lastModifiedDate":"2023-02-11"},{"lineNumber":234,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":235,"author":{"gitId":"nafisazizir"},"content":"                        if (isDone.equals(\"1\")) {","lastModifiedDate":"2023-02-11"},{"lineNumber":236,"author":{"gitId":"nafisazizir"},"content":"                            event.setDone(true);","lastModifiedDate":"2023-02-11"},{"lineNumber":237,"author":{"gitId":"nafisazizir"},"content":"                        }","lastModifiedDate":"2023-02-11"},{"lineNumber":238,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":239,"author":{"gitId":"nafisazizir"},"content":"                        tasks.add(event);","lastModifiedDate":"2023-02-11"},{"lineNumber":240,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":241,"author":{"gitId":"nafisazizir"},"content":"                        break;","lastModifiedDate":"2023-02-11"},{"lineNumber":242,"author":{"gitId":"nafisazizir"},"content":"                }","lastModifiedDate":"2023-02-11"},{"lineNumber":243,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":244,"author":{"gitId":"nafisazizir"},"content":"            }","lastModifiedDate":"2023-02-11"},{"lineNumber":245,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":246,"author":{"gitId":"nafisazizir"},"content":"            reader.close();","lastModifiedDate":"2023-02-11"},{"lineNumber":247,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":248,"author":{"gitId":"nafisazizir"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-02-11"},{"lineNumber":249,"author":{"gitId":"nafisazizir"},"content":"            System.out.println(\"An error occurred while reading the file.\");","lastModifiedDate":"2023-02-11"},{"lineNumber":250,"author":{"gitId":"nafisazizir"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-11"},{"lineNumber":251,"author":{"gitId":"nafisazizir"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":252,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":253,"author":{"gitId":"nafisazizir"},"content":"        return tasks;","lastModifiedDate":"2023-02-11"},{"lineNumber":254,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":255,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":256,"author":{"gitId":"nafisazizir"},"content":"}","lastModifiedDate":"2023-01-24"},{"lineNumber":257,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"nafisazizir":257}},{"path":"src/main/Java/jonathan/JonathanException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nafisazizir"},"content":"package jonathan;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"nafisazizir"},"content":"public class JonathanException extends Exception {","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"nafisazizir"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"nafisazizir":4}},{"path":"src/main/Java/jonathan/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nafisazizir"},"content":"package jonathan;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"nafisazizir"},"content":"public class Task {","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"nafisazizir"},"content":"    protected String description;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"nafisazizir"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"nafisazizir"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"nafisazizir"},"content":"        setDescription(description);","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"nafisazizir"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"nafisazizir"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"nafisazizir"},"content":"        return description;","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"nafisazizir"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"nafisazizir"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"nafisazizir"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"nafisazizir"},"content":"        isDone \u003d done;","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"nafisazizir"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"nafisazizir"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"nafisazizir"},"content":"    public String getIsDone() {","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"nafisazizir"},"content":"        return (isDone ? \"1\" : \"0\");","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"nafisazizir"},"content":"    public String stringRepresentation() {","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"nafisazizir"},"content":"        return \"[\" + getStatusIcon() + \"] \" + getDescription();","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"nafisazizir"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"nafisazizir":35}},{"path":"src/main/Java/jonathan/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nafisazizir"},"content":"package jonathan;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"nafisazizir"},"content":"public class Todo extends Task{","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"nafisazizir"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"nafisazizir"},"content":"        super(description);","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"nafisazizir"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"nafisazizir"},"content":"    public String toString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"nafisazizir"},"content":"        return \"[T][\" + getStatusIcon() + \"] \" + getDescription();","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"nafisazizir"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"nafisazizir":12}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nafisazizir"},"content":"todo borrow book","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"nafisazizir"},"content":"list","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"nafisazizir"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"nafisazizir"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"nafisazizir"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"nafisazizir"},"content":"this is random prompt","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"nafisazizir"},"content":"list","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"nafisazizir"},"content":"mark 1","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"nafisazizir"},"content":"unmark 1","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"nafisazizir"},"content":"list","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"nafisazizir"},"content":"bye","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"nafisazizir":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"nafisazizir"},"content":"java -classpath ..\\bin Jonathan \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"nafisazizir":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"nafisazizir"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/Java/jonathan/*.java","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"nafisazizir"},"content":"java -classpath ../bin Jonathan \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"nafisazizir":2,"-":36}}]
