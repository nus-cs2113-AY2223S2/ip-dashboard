[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"nafisazizir"},"content":"# Jonathan project template","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"nafisazizir"},"content":"3. After that, locate the `src/main/java/Jonathan.java` file, right-click it, and choose `Run Jonathan.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"nafisazizir":2,"-":22}},{"path":"data/jonathan.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nafisazizir"},"content":"T | 0 | makan","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"nafisazizir":1}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"nafisazizir"},"content":"Jonathan is a Personal Assistant Chatbot that helps a person to keep track of various things","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"nafisazizir"},"content":"### Adding an entry: ```todo``` ```deadline``` ```event```","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"nafisazizir"},"content":"There are three options to add a new entry of task:","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"nafisazizir"},"content":"1. ```todo```: is a task without any date/time attached to it. e.g., visit new theme park.","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"nafisazizir"},"content":"##### Command","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"nafisazizir"},"content":"```aidl","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"nafisazizir"},"content":"todo \u003cdescription\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"nafisazizir"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"nafisazizir"},"content":"##### Usage and Example Output","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"nafisazizir"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"nafisazizir"},"content":"todo borrow book","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"nafisazizir"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"nafisazizir"},"content":"    Got it. I\u0027ve added this task:","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"nafisazizir"},"content":"    [T][ ] borrow book","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"nafisazizir"},"content":"    Now you have 1 tasks in the list.","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"nafisazizir"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"nafisazizir"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"nafisazizir"},"content":"2. ```deadline```","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"nafisazizir"},"content":"is a task that need to be done before a specific date/time e.g., submit report by 11/10/2019 5pm","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"nafisazizir"},"content":"##### Command","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"nafisazizir"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"nafisazizir"},"content":"deadline \u003cdescription\u003e /by \u003cdate\u0026time\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"nafisazizir"},"content":"Additional notes:","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"nafisazizir"},"content":"date\u0026time format shoudl be: dd/mm/yyy hhmm","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"nafisazizir"},"content":"should be in 24h format","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"nafisazizir"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"nafisazizir"},"content":"##### Usage and Example Output","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"nafisazizir"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"nafisazizir"},"content":"deadline submit report /by 11/10/2019 1730","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"nafisazizir"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"nafisazizir"},"content":"    Got it. I\u0027ve added this task:","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"nafisazizir"},"content":"    [D][ ] submit report (by: 11th of October 2019, 5:30PM)","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"nafisazizir"},"content":"    Now you have 1 tasks in the list.","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"nafisazizir"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"nafisazizir"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"nafisazizir"},"content":"3. ```event```","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"nafisazizir"},"content":"is a task that start at a specific date/time and ends at a specific date/time e.g.,","lastModifiedDate":"2023-03-01"},{"lineNumber":56,"author":{"gitId":"nafisazizir"},"content":"team project meeting 2/10/2019 2-4pm","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":58,"author":{"gitId":"nafisazizir"},"content":"##### Command","lastModifiedDate":"2023-03-01"},{"lineNumber":59,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":60,"author":{"gitId":"nafisazizir"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":61,"author":{"gitId":"nafisazizir"},"content":"event \u003cdescription\u003e /from \u003cdate\u0026time\u003e /to \u003cdate\u0026time\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":63,"author":{"gitId":"nafisazizir"},"content":"Additional notes:","lastModifiedDate":"2023-03-01"},{"lineNumber":64,"author":{"gitId":"nafisazizir"},"content":"date\u0026time format shoudl be: dd/mm/yyy hhmm","lastModifiedDate":"2023-03-01"},{"lineNumber":65,"author":{"gitId":"nafisazizir"},"content":"should be in 24h format","lastModifiedDate":"2023-03-01"},{"lineNumber":66,"author":{"gitId":"nafisazizir"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":68,"author":{"gitId":"nafisazizir"},"content":"##### Usage and Example Output","lastModifiedDate":"2023-03-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":70,"author":{"gitId":"nafisazizir"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":71,"author":{"gitId":"nafisazizir"},"content":"event team project meating /from 11/10/2019 1700 /to 11/10/2019 1830","lastModifiedDate":"2023-03-01"},{"lineNumber":72,"author":{"gitId":"nafisazizir"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-03-01"},{"lineNumber":73,"author":{"gitId":"nafisazizir"},"content":"    Got it. I\u0027ve added this task:","lastModifiedDate":"2023-03-01"},{"lineNumber":74,"author":{"gitId":"nafisazizir"},"content":"    [E][ ] team project meating (from: 11th of October 2019, 5:0PM to: 11th of October 2019, 6:30PM)","lastModifiedDate":"2023-03-01"},{"lineNumber":75,"author":{"gitId":"nafisazizir"},"content":"    Now you have 2 tasks in the list.","lastModifiedDate":"2023-03-01"},{"lineNumber":76,"author":{"gitId":"nafisazizir"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-03-01"},{"lineNumber":77,"author":{"gitId":"nafisazizir"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":79,"author":{"gitId":"nafisazizir"},"content":"### Show all tasks: ```list```","lastModifiedDate":"2023-03-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":81,"author":{"gitId":"nafisazizir"},"content":"##### Command","lastModifiedDate":"2023-03-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":83,"author":{"gitId":"nafisazizir"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":84,"author":{"gitId":"nafisazizir"},"content":"list","lastModifiedDate":"2023-03-01"},{"lineNumber":85,"author":{"gitId":"nafisazizir"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":87,"author":{"gitId":"nafisazizir"},"content":"##### Usage and Example Output","lastModifiedDate":"2023-03-01"},{"lineNumber":88,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":89,"author":{"gitId":"nafisazizir"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":90,"author":{"gitId":"nafisazizir"},"content":"list","lastModifiedDate":"2023-03-01"},{"lineNumber":91,"author":{"gitId":"nafisazizir"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-03-01"},{"lineNumber":92,"author":{"gitId":"nafisazizir"},"content":"    Here are the tasks in your list:","lastModifiedDate":"2023-03-01"},{"lineNumber":93,"author":{"gitId":"nafisazizir"},"content":"    1. [D][ ] submit report (by: 11th of October 2019, 5:30PM)","lastModifiedDate":"2023-03-01"},{"lineNumber":94,"author":{"gitId":"nafisazizir"},"content":"    2. [E][ ] team project meating (from: 11th of October 2019, 5:0PM to: 11th of October 2019, 6:30PM)","lastModifiedDate":"2023-03-01"},{"lineNumber":95,"author":{"gitId":"nafisazizir"},"content":"    3. [T][ ] borrow book","lastModifiedDate":"2023-03-01"},{"lineNumber":96,"author":{"gitId":"nafisazizir"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-03-01"},{"lineNumber":97,"author":{"gitId":"nafisazizir"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":98,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":99,"author":{"gitId":"nafisazizir"},"content":"### Find tasks: ```find```","lastModifiedDate":"2023-03-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":101,"author":{"gitId":"nafisazizir"},"content":"This feature will show all task that contain \u003ckeyword\u003e in the description of the task","lastModifiedDate":"2023-03-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":103,"author":{"gitId":"nafisazizir"},"content":"##### Command","lastModifiedDate":"2023-03-01"},{"lineNumber":104,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":105,"author":{"gitId":"nafisazizir"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":106,"author":{"gitId":"nafisazizir"},"content":"find \u003ckeyword\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":107,"author":{"gitId":"nafisazizir"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":109,"author":{"gitId":"nafisazizir"},"content":"##### Usage and Example Output","lastModifiedDate":"2023-03-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":111,"author":{"gitId":"nafisazizir"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":112,"author":{"gitId":"nafisazizir"},"content":"find book","lastModifiedDate":"2023-03-01"},{"lineNumber":113,"author":{"gitId":"nafisazizir"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-03-01"},{"lineNumber":114,"author":{"gitId":"nafisazizir"},"content":"    Here are the matching tasks in your list:","lastModifiedDate":"2023-03-01"},{"lineNumber":115,"author":{"gitId":"nafisazizir"},"content":"    1. [T][ ] borrow book","lastModifiedDate":"2023-03-01"},{"lineNumber":116,"author":{"gitId":"nafisazizir"},"content":"    2. [D][ ] return book (by: 11th of July 2019, 12:0PM)","lastModifiedDate":"2023-03-01"},{"lineNumber":117,"author":{"gitId":"nafisazizir"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-03-01"},{"lineNumber":118,"author":{"gitId":"nafisazizir"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":120,"author":{"gitId":"nafisazizir"},"content":"### Delete task: ```delete```","lastModifiedDate":"2023-03-01"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":122,"author":{"gitId":"nafisazizir"},"content":"##### Command","lastModifiedDate":"2023-03-01"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":124,"author":{"gitId":"nafisazizir"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":125,"author":{"gitId":"nafisazizir"},"content":"delete \u003ctask_number\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":127,"author":{"gitId":"nafisazizir"},"content":"Additional notes:","lastModifiedDate":"2023-03-01"},{"lineNumber":128,"author":{"gitId":"nafisazizir"},"content":"\u003ctask_number\u003e must be positive integer (eg. 1, 2, 3) and must match with the","lastModifiedDate":"2023-03-01"},{"lineNumber":129,"author":{"gitId":"nafisazizir"},"content":"task number when the list command is called","lastModifiedDate":"2023-03-01"},{"lineNumber":130,"author":{"gitId":"nafisazizir"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":132,"author":{"gitId":"nafisazizir"},"content":"##### Usage and Example Output","lastModifiedDate":"2023-03-01"},{"lineNumber":133,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":134,"author":{"gitId":"nafisazizir"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":135,"author":{"gitId":"nafisazizir"},"content":"list","lastModifiedDate":"2023-03-01"},{"lineNumber":136,"author":{"gitId":"nafisazizir"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-03-01"},{"lineNumber":137,"author":{"gitId":"nafisazizir"},"content":"    Here are the tasks in your list:","lastModifiedDate":"2023-03-01"},{"lineNumber":138,"author":{"gitId":"nafisazizir"},"content":"    1. [D][ ] submit report (by: 11th of October 2019, 5:30PM)","lastModifiedDate":"2023-03-01"},{"lineNumber":139,"author":{"gitId":"nafisazizir"},"content":"    2. [E][ ] team project meating (from: 11th of October 2019, 5:0PM to: 11th of October 2019, 6:30PM)","lastModifiedDate":"2023-03-01"},{"lineNumber":140,"author":{"gitId":"nafisazizir"},"content":"    3. [T][ ] borrow book","lastModifiedDate":"2023-03-01"},{"lineNumber":141,"author":{"gitId":"nafisazizir"},"content":"    4. [D][ ] return book (by: 11th of July 2019, 12:0PM)","lastModifiedDate":"2023-03-01"},{"lineNumber":142,"author":{"gitId":"nafisazizir"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-03-01"},{"lineNumber":143,"author":{"gitId":"nafisazizir"},"content":"delete 1","lastModifiedDate":"2023-03-01"},{"lineNumber":144,"author":{"gitId":"nafisazizir"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-03-01"},{"lineNumber":145,"author":{"gitId":"nafisazizir"},"content":"    Noted. I\u0027ve removed this task:","lastModifiedDate":"2023-03-01"},{"lineNumber":146,"author":{"gitId":"nafisazizir"},"content":"    [D][ ] submit report (by: 11th of October 2019, 5:30PM)","lastModifiedDate":"2023-03-01"},{"lineNumber":147,"author":{"gitId":"nafisazizir"},"content":"    Now you have 3 tasks in the list.","lastModifiedDate":"2023-03-01"},{"lineNumber":148,"author":{"gitId":"nafisazizir"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-03-01"},{"lineNumber":149,"author":{"gitId":"nafisazizir"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":150,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":151,"author":{"gitId":"nafisazizir"},"content":"### Mark task as done: ```mark```","lastModifiedDate":"2023-03-01"},{"lineNumber":152,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":153,"author":{"gitId":"nafisazizir"},"content":"##### Command","lastModifiedDate":"2023-03-01"},{"lineNumber":154,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":155,"author":{"gitId":"nafisazizir"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":156,"author":{"gitId":"nafisazizir"},"content":"mark \u003ctask_number\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":157,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":158,"author":{"gitId":"nafisazizir"},"content":"Additional notes:","lastModifiedDate":"2023-03-01"},{"lineNumber":159,"author":{"gitId":"nafisazizir"},"content":"\u003ctask_number\u003e must be positive integer (eg. 1, 2, 3) and must match with the","lastModifiedDate":"2023-03-01"},{"lineNumber":160,"author":{"gitId":"nafisazizir"},"content":"task number when the list command is called","lastModifiedDate":"2023-03-01"},{"lineNumber":161,"author":{"gitId":"nafisazizir"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":163,"author":{"gitId":"nafisazizir"},"content":"##### Usage and Example Output","lastModifiedDate":"2023-03-01"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":166,"author":{"gitId":"nafisazizir"},"content":"mark 2","lastModifiedDate":"2023-03-01"},{"lineNumber":167,"author":{"gitId":"nafisazizir"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-03-01"},{"lineNumber":168,"author":{"gitId":"nafisazizir"},"content":"    Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2023-03-01"},{"lineNumber":169,"author":{"gitId":"nafisazizir"},"content":"    [T][X] borrow book","lastModifiedDate":"2023-03-01"},{"lineNumber":170,"author":{"gitId":"nafisazizir"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-03-01"},{"lineNumber":171,"author":{"gitId":"nafisazizir"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":172,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":173,"author":{"gitId":"nafisazizir"},"content":"### Unmark task: ```unmark```","lastModifiedDate":"2023-03-01"},{"lineNumber":174,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":175,"author":{"gitId":"nafisazizir"},"content":"##### Command","lastModifiedDate":"2023-03-01"},{"lineNumber":176,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":177,"author":{"gitId":"nafisazizir"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":178,"author":{"gitId":"nafisazizir"},"content":"unmark \u003ctask_number\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":179,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":180,"author":{"gitId":"nafisazizir"},"content":"Additional notes:","lastModifiedDate":"2023-03-01"},{"lineNumber":181,"author":{"gitId":"nafisazizir"},"content":"\u003ctask_number\u003e must be positive integer (eg. 1, 2, 3) and must match with the","lastModifiedDate":"2023-03-01"},{"lineNumber":182,"author":{"gitId":"nafisazizir"},"content":"task number when the list command is called","lastModifiedDate":"2023-03-01"},{"lineNumber":183,"author":{"gitId":"nafisazizir"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":184,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":185,"author":{"gitId":"nafisazizir"},"content":"##### Usage and Example Output","lastModifiedDate":"2023-03-01"},{"lineNumber":186,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":187,"author":{"gitId":"nafisazizir"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":188,"author":{"gitId":"nafisazizir"},"content":"unmark 2","lastModifiedDate":"2023-03-01"},{"lineNumber":189,"author":{"gitId":"nafisazizir"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-03-01"},{"lineNumber":190,"author":{"gitId":"nafisazizir"},"content":"    OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2023-03-01"},{"lineNumber":191,"author":{"gitId":"nafisazizir"},"content":"    [T][ ] borrow book","lastModifiedDate":"2023-03-01"},{"lineNumber":192,"author":{"gitId":"nafisazizir"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-03-01"},{"lineNumber":193,"author":{"gitId":"nafisazizir"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":194,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":195,"author":{"gitId":"nafisazizir"},"content":"### Exit: ```bye```","lastModifiedDate":"2023-03-01"},{"lineNumber":196,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":197,"author":{"gitId":"nafisazizir"},"content":"##### Command","lastModifiedDate":"2023-03-01"},{"lineNumber":198,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":199,"author":{"gitId":"nafisazizir"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":200,"author":{"gitId":"nafisazizir"},"content":"bye","lastModifiedDate":"2023-03-01"},{"lineNumber":201,"author":{"gitId":"nafisazizir"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":203,"author":{"gitId":"nafisazizir"},"content":"##### Usage and Example Output","lastModifiedDate":"2023-03-01"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":205,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":206,"author":{"gitId":"nafisazizir"},"content":"bye","lastModifiedDate":"2023-03-01"},{"lineNumber":207,"author":{"gitId":"nafisazizir"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-03-01"},{"lineNumber":208,"author":{"gitId":"nafisazizir"},"content":"    Bye. Hope to see you again soon!","lastModifiedDate":"2023-03-01"},{"lineNumber":209,"author":{"gitId":"nafisazizir"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-03-01"},{"lineNumber":210,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"nafisazizir":183,"-":27}},{"path":"src/main/Java/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nafisazizir"},"content":"package command;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"nafisazizir"},"content":"import jonathan.Storage;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"nafisazizir"},"content":"import task.TaskList;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"nafisazizir"},"content":"import jonathan.Ui;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"nafisazizir"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"nafisazizir"},"content":" * model a class to handle the bye command. inherit from Command class.","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"nafisazizir"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"nafisazizir"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"nafisazizir"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"nafisazizir"},"content":"     * Method to execute the bye command class.","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"nafisazizir"},"content":"     * @param tasks list of tasks.","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"nafisazizir"},"content":"     * @param ui the interface of the program.","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"nafisazizir"},"content":"     * @param storage the storage of the program.","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"nafisazizir"},"content":"     * @return list of tasks.","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"nafisazizir"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"nafisazizir"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"nafisazizir"},"content":"    public TaskList execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"nafisazizir"},"content":"        storage.save(tasks);","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"nafisazizir"},"content":"        ui.showGoodbye();","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"nafisazizir"},"content":"        return tasks;","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"nafisazizir"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"nafisazizir"},"content":"     * Method to indicate to exit the program after executed","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"nafisazizir"},"content":"     * @return boolean.","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"nafisazizir"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"nafisazizir"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"nafisazizir"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"nafisazizir"},"content":"        return true;","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"nafisazizir"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"nafisazizir":34}},{"path":"src/main/Java/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nafisazizir"},"content":"package command;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"nafisazizir"},"content":"import jonathan.JonathanException;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"nafisazizir"},"content":"import jonathan.Storage;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"nafisazizir"},"content":"import task.TaskList;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"nafisazizir"},"content":"import jonathan.Ui;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"nafisazizir"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"nafisazizir"},"content":" * Abstract class to implement command class.","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"nafisazizir"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"nafisazizir"},"content":"public abstract class Command {","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"nafisazizir"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"nafisazizir"},"content":"     * Method to execute the the command.","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"nafisazizir"},"content":"     * @param tasks list of tasks.","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"nafisazizir"},"content":"     * @param ui interface of the program.","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"nafisazizir"},"content":"     * @param storage storage of the program.","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"nafisazizir"},"content":"     * @return tasks.","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"nafisazizir"},"content":"     * @throws JonathanException to handle exception.","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"nafisazizir"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"nafisazizir"},"content":"    public TaskList execute(TaskList tasks, Ui ui, Storage storage) throws JonathanException {","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"nafisazizir"},"content":"        return tasks;","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"nafisazizir"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"nafisazizir"},"content":"     * Method to indicate to exit the program after executed","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"nafisazizir"},"content":"     * @return boolean.","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"nafisazizir"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"nafisazizir"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"nafisazizir"},"content":"        return false;","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"nafisazizir"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"nafisazizir":32}},{"path":"src/main/Java/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nafisazizir"},"content":"package command;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"nafisazizir"},"content":"import task.Deadline;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"nafisazizir"},"content":"import jonathan.Storage;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"nafisazizir"},"content":"import task.TaskList;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"nafisazizir"},"content":"import jonathan.Ui;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"nafisazizir"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"nafisazizir"},"content":" * model a class to handle the deadline command. inherit from Command class.","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"nafisazizir"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"nafisazizir"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"nafisazizir"},"content":"    private final Deadline deadline;","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"nafisazizir"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"nafisazizir"},"content":"     * build constructor for DeadlineCommand class.","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"nafisazizir"},"content":"     * @param deadline task to be executed.","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"nafisazizir"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"nafisazizir"},"content":"    public DeadlineCommand(Deadline deadline) {","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"nafisazizir"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"nafisazizir"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"nafisazizir"},"content":"     * Method to execute the bye command class.","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"nafisazizir"},"content":"     * @param tasks list of tasks.","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"nafisazizir"},"content":"     * @param ui the interface of the program.","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"nafisazizir"},"content":"     * @param storage the storage of the program.","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"nafisazizir"},"content":"     * @return list of tasks.","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"nafisazizir"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"nafisazizir"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"nafisazizir"},"content":"    public TaskList execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"nafisazizir"},"content":"        tasks.add(deadline);","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"nafisazizir"},"content":"        ui.showAdded(tasks, deadline);","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"nafisazizir"},"content":"        return tasks;","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"nafisazizir"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"nafisazizir":35}},{"path":"src/main/Java/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nafisazizir"},"content":"package command;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"nafisazizir"},"content":"import jonathan.JonathanException;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"nafisazizir"},"content":"import jonathan.Storage;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"nafisazizir"},"content":"import task.Task;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"nafisazizir"},"content":"import task.TaskList;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"nafisazizir"},"content":"import jonathan.Ui;","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"nafisazizir"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"nafisazizir"},"content":" * model a class to handle the delete command. inherit from Command class.","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"nafisazizir"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"nafisazizir"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"nafisazizir"},"content":"    private final int taskNum;","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"nafisazizir"},"content":"    public DeleteCommand(int taskNum) {","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"nafisazizir"},"content":"        this.taskNum \u003d taskNum;","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"nafisazizir"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"nafisazizir"},"content":"     * Method to execute the delete command class.","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"nafisazizir"},"content":"     * @param tasks list of tasks.","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"nafisazizir"},"content":"     * @param ui the interface of the program.","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"nafisazizir"},"content":"     * @param storage the storage of the program.","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"nafisazizir"},"content":"     * @return list of tasks.","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"nafisazizir"},"content":"     * @throws JonathanException when the task doesn\u0027t exist.","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"nafisazizir"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"nafisazizir"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"nafisazizir"},"content":"    public TaskList execute(TaskList tasks, Ui ui, Storage storage) throws JonathanException {","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"nafisazizir"},"content":"        try {","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"nafisazizir"},"content":"            Task task \u003d tasks.get(taskNum - 1);","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"nafisazizir"},"content":"            tasks.remove(taskNum - 1);","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"nafisazizir"},"content":"            ui.showDelete(tasks, task);","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"nafisazizir"},"content":"            return tasks;","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"nafisazizir"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"nafisazizir"},"content":"            throw new JonathanException(\"The task doesn\u0027t exist, please type it correctly!\");","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"nafisazizir"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"nafisazizir"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"nafisazizir":39}},{"path":"src/main/Java/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nafisazizir"},"content":"package command;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"nafisazizir"},"content":"import task.Event;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"nafisazizir"},"content":"import jonathan.Storage;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"nafisazizir"},"content":"import task.TaskList;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"nafisazizir"},"content":"import jonathan.Ui;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"nafisazizir"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"nafisazizir"},"content":" * model a class to handle the event command. inherit from Command class.","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"nafisazizir"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"nafisazizir"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"nafisazizir"},"content":"    private final Event event;","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"nafisazizir"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"nafisazizir"},"content":"     * build constructor for EventCommand class.","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"nafisazizir"},"content":"     * @param event task to be executed.","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"nafisazizir"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"nafisazizir"},"content":"    public EventCommand(Event event) {","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"nafisazizir"},"content":"        this.event \u003d event;","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"nafisazizir"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"nafisazizir"},"content":"     * Method to execute the event command class.","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"nafisazizir"},"content":"     * @param tasks list of tasks.","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"nafisazizir"},"content":"     * @param ui the interface of the program.","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"nafisazizir"},"content":"     * @param storage the storage of the program.","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"nafisazizir"},"content":"     * @return list of tasks.","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"nafisazizir"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"nafisazizir"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"nafisazizir"},"content":"    public TaskList execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"nafisazizir"},"content":"        tasks.add(event);","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"nafisazizir"},"content":"        ui.showAdded(tasks, event);","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"nafisazizir"},"content":"        return tasks;","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"nafisazizir"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"nafisazizir":35}},{"path":"src/main/Java/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nafisazizir"},"content":"package command;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"nafisazizir"},"content":"import jonathan.Storage;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"nafisazizir"},"content":"import task.Task;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"nafisazizir"},"content":"import task.TaskList;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"nafisazizir"},"content":"import jonathan.Ui;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"nafisazizir"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"nafisazizir"},"content":" * model a class to handle the find command. inherit from Command class.","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"nafisazizir"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"nafisazizir"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"nafisazizir"},"content":"    private final String keyword;","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"nafisazizir"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"nafisazizir"},"content":"     * build constructor for FindCommand class.","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"nafisazizir"},"content":"     * @param keyword to be searched.","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"nafisazizir"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"nafisazizir"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"nafisazizir"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"nafisazizir"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"nafisazizir"},"content":"     * Method to execute the find command class.","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"nafisazizir"},"content":"     * @param tasks list of tasks.","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"nafisazizir"},"content":"     * @param ui the interface of the program.","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"nafisazizir"},"content":"     * @param storage the storage of the program.","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"nafisazizir"},"content":"     * @return list of tasks.","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"nafisazizir"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"nafisazizir"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"nafisazizir"},"content":"    public TaskList execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"nafisazizir"},"content":"        TaskList matchedTasks \u003d new TaskList();","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"nafisazizir"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"nafisazizir"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"nafisazizir"},"content":"            if (task.toString().contains(keyword)) {","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"nafisazizir"},"content":"                matchedTasks.add(task);","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"nafisazizir"},"content":"            }","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"nafisazizir"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"nafisazizir"},"content":"        ui.showMatchedTask(matchedTasks);","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"nafisazizir"},"content":"        return tasks;","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"nafisazizir"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"nafisazizir":44}},{"path":"src/main/Java/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nafisazizir"},"content":"package command;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"nafisazizir"},"content":"import jonathan.Storage;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"nafisazizir"},"content":"import task.TaskList;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"nafisazizir"},"content":"import jonathan.Ui;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"nafisazizir"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"nafisazizir"},"content":" * model a class to handle the list command. inherit from Command class.","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"nafisazizir"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"nafisazizir"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"nafisazizir"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"nafisazizir"},"content":"     * Method to execute the list command class.","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"nafisazizir"},"content":"     * @param tasks list of tasks.","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"nafisazizir"},"content":"     * @param ui the interface of the program.","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"nafisazizir"},"content":"     * @param storage the storage of the program.","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"nafisazizir"},"content":"     * @return list of tasks.","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"nafisazizir"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"nafisazizir"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"nafisazizir"},"content":"    public TaskList execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"nafisazizir"},"content":"        ui.showAllTasks(tasks);","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"nafisazizir"},"content":"        return tasks;","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"nafisazizir"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"nafisazizir":25}},{"path":"src/main/Java/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nafisazizir"},"content":"package command;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"nafisazizir"},"content":"import jonathan.Storage;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"nafisazizir"},"content":"import task.Task;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"nafisazizir"},"content":"import task.TaskList;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"nafisazizir"},"content":"import jonathan.Ui;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"nafisazizir"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"nafisazizir"},"content":" * model a class to handle the mark command. inherit from Command class.","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"nafisazizir"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"nafisazizir"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"nafisazizir"},"content":"    private final int taskNum;","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"nafisazizir"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"nafisazizir"},"content":"     * build constructor for MarkCommand class.","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"nafisazizir"},"content":"     * @param taskNum task to be marked.","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"nafisazizir"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"nafisazizir"},"content":"    public MarkCommand(int taskNum) {","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"nafisazizir"},"content":"        this.taskNum \u003d taskNum;","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"nafisazizir"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"nafisazizir"},"content":"     * Method to execute the mark command class.","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"nafisazizir"},"content":"     * @param tasks list of tasks.","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"nafisazizir"},"content":"     * @param ui the interface of the program.","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"nafisazizir"},"content":"     * @param storage the storage of the program.","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"nafisazizir"},"content":"     * @return list of tasks.","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"nafisazizir"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"nafisazizir"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"nafisazizir"},"content":"    public TaskList execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"nafisazizir"},"content":"        try {","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"nafisazizir"},"content":"            Task task \u003d tasks.get(taskNum - 1);","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"nafisazizir"},"content":"            task.setDone(true);","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"nafisazizir"},"content":"            ui.showMarked(task);","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"nafisazizir"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"nafisazizir"},"content":"            ui.showError(\"please enter the right index (in the range of the tasks)\");","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"nafisazizir"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"nafisazizir"},"content":"        return tasks;","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"nafisazizir"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"nafisazizir":40}},{"path":"src/main/Java/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nafisazizir"},"content":"package command;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"nafisazizir"},"content":"import jonathan.Storage;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"nafisazizir"},"content":"import task.TaskList;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"nafisazizir"},"content":"import task.Todo;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"nafisazizir"},"content":"import jonathan.Ui;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"nafisazizir"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"nafisazizir"},"content":" * model a class to handle the todo command. inherit from Command class.","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"nafisazizir"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"nafisazizir"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"nafisazizir"},"content":"    private final Todo todo;","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"nafisazizir"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"nafisazizir"},"content":"     * build constructor for TodoCommand class.","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"nafisazizir"},"content":"     * @param todo task to be executed.","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"nafisazizir"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"nafisazizir"},"content":"    public TodoCommand(Todo todo) {","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"nafisazizir"},"content":"        this.todo \u003d todo;","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"nafisazizir"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"nafisazizir"},"content":"     * Method to execute the todo command class.","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"nafisazizir"},"content":"     * @param tasks list of tasks.","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"nafisazizir"},"content":"     * @param ui the interface of the program.","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"nafisazizir"},"content":"     * @param storage the storage of the program.","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"nafisazizir"},"content":"     * @return list of tasks.","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"nafisazizir"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"nafisazizir"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"nafisazizir"},"content":"    public TaskList execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"nafisazizir"},"content":"        tasks.add(todo);","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"nafisazizir"},"content":"        ui.showAdded(tasks, todo);","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"nafisazizir"},"content":"        return tasks;","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"nafisazizir"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"nafisazizir":35}},{"path":"src/main/Java/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nafisazizir"},"content":"package command;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"nafisazizir"},"content":"import jonathan.Storage;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"nafisazizir"},"content":"import task.Task;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"nafisazizir"},"content":"import task.TaskList;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"nafisazizir"},"content":"import jonathan.Ui;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"nafisazizir"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"nafisazizir"},"content":" * model a class to handle the unmark command. inherit from Command class.","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"nafisazizir"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"nafisazizir"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"nafisazizir"},"content":"    private final int taskNum;","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"nafisazizir"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"nafisazizir"},"content":"     * build constructor for MarkCommand class.","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"nafisazizir"},"content":"     * @param taskNum task to be marked.","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"nafisazizir"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"nafisazizir"},"content":"    public UnmarkCommand(int taskNum) {","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"nafisazizir"},"content":"        this.taskNum \u003d taskNum;","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"nafisazizir"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"nafisazizir"},"content":"     * Method to execute the unmark command class.","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"nafisazizir"},"content":"     * @param tasks list of tasks.","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"nafisazizir"},"content":"     * @param ui the interface of the program.","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"nafisazizir"},"content":"     * @param storage the storage of the program.","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"nafisazizir"},"content":"     * @return list of tasks.","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"nafisazizir"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"nafisazizir"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"nafisazizir"},"content":"    public TaskList execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"nafisazizir"},"content":"        try {","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"nafisazizir"},"content":"            Task task \u003d tasks.get(taskNum - 1);","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"nafisazizir"},"content":"            task.setDone(false);","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"nafisazizir"},"content":"            ui.showUnmarked(task);","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"nafisazizir"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"nafisazizir"},"content":"            ui.showError(\"please enter the right index (in the range of the tasks)\");","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"nafisazizir"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"nafisazizir"},"content":"        return tasks;","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"nafisazizir"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"nafisazizir":40}},{"path":"src/main/Java/command/WrongFormatCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nafisazizir"},"content":"package command;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"nafisazizir"},"content":"import jonathan.Storage;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"nafisazizir"},"content":"import task.TaskList;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"nafisazizir"},"content":"import jonathan.Ui;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"nafisazizir"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"nafisazizir"},"content":" * model a class to handle the wrong format command. inherit from Command class.","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"nafisazizir"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"nafisazizir"},"content":"public class WrongFormatCommand extends Command {","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"nafisazizir"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"nafisazizir"},"content":"     * Method to execute the wrong format command class.","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"nafisazizir"},"content":"     * @param tasks list of tasks.","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"nafisazizir"},"content":"     * @param ui the interface of the program.","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"nafisazizir"},"content":"     * @param storage the storage of the program.","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"nafisazizir"},"content":"     * @return list of tasks.","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"nafisazizir"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"nafisazizir"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"nafisazizir"},"content":"    public TaskList execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"nafisazizir"},"content":"        ui.showWrongFormat();","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"nafisazizir"},"content":"        return tasks;","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"nafisazizir"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"nafisazizir":23}},{"path":"src/main/Java/jonathan/Jonathan.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nafisazizir"},"content":"package jonathan;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"nafisazizir"},"content":"import command.Command;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"nafisazizir"},"content":"import task.TaskList;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"nafisazizir"},"content":"public class Jonathan {","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"nafisazizir"},"content":"    private Storage storage;","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"nafisazizir"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"nafisazizir"},"content":"    private Ui ui;","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"nafisazizir"},"content":"    public Jonathan(String filePath) {","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"nafisazizir"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"nafisazizir"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"nafisazizir"},"content":"        try {","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"nafisazizir"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"nafisazizir"},"content":"        } catch (JonathanException e) {","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"nafisazizir"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"nafisazizir"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"nafisazizir"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"nafisazizir"},"content":"    public void run() {","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"nafisazizir"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"nafisazizir"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"nafisazizir"},"content":"        while (!isExit) {","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"nafisazizir"},"content":"            try {","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"nafisazizir"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"nafisazizir"},"content":"                ui.showLine(); // show the divider line (\"_______\")","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"nafisazizir"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"nafisazizir"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"nafisazizir"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"nafisazizir"},"content":"            } catch(JonathanException e) {","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"nafisazizir"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"nafisazizir"},"content":"            } finally {","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"nafisazizir"},"content":"                ui.showLine();","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"nafisazizir"},"content":"            }","lastModifiedDate":"2023-02-11"},{"lineNumber":37,"author":{"gitId":"nafisazizir"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":38,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":39,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":40,"author":{"gitId":"nafisazizir"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"nafisazizir"},"content":"        new Jonathan(\"data/jonathan.txt\").run();","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":43,"author":{"gitId":"nafisazizir"},"content":"}","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"nafisazizir":44}},{"path":"src/main/Java/jonathan/JonathanException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nafisazizir"},"content":"package jonathan;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"nafisazizir"},"content":"public class JonathanException extends Exception {","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"nafisazizir"},"content":"    public JonathanException(String message) {","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"nafisazizir"},"content":"        super(message);","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"nafisazizir"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"nafisazizir":7}},{"path":"src/main/Java/jonathan/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nafisazizir"},"content":"package jonathan;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"nafisazizir"},"content":"import command.*;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"nafisazizir"},"content":"import task.Deadline;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"nafisazizir"},"content":"import task.Event;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"nafisazizir"},"content":"import task.Todo;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"nafisazizir"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"nafisazizir"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"nafisazizir"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"nafisazizir"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"nafisazizir"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"nafisazizir"},"content":" * Model a class to handle fullCommand, and produce in nicer/understandable format.","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"nafisazizir"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"nafisazizir"},"content":"public class Parser {","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"nafisazizir"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"nafisazizir"},"content":"     * Method to parse the raw command.","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"nafisazizir"},"content":"     * @param fullCommand the raw command.","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"nafisazizir"},"content":"     * @return the Command class to be executed.","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"nafisazizir"},"content":"     * @throws JonathanException for error handling.","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"nafisazizir"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"nafisazizir"},"content":"    public static Command parse(String fullCommand) throws JonathanException {","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"nafisazizir"},"content":"        Command command \u003d new ByeCommand();","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"nafisazizir"},"content":"        try {","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"nafisazizir"},"content":"            if (Objects.equals(fullCommand, \"bye\")) {","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"nafisazizir"},"content":"                command \u003d new ByeCommand();","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"nafisazizir"},"content":"            } else if (Objects.equals(fullCommand, \"list\")) {","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"nafisazizir"},"content":"                command \u003d new ListCommand();","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"nafisazizir"},"content":"            } else if (fullCommand.split(\" \")[0].equals(\"mark\") || fullCommand.split(\" \")[0].equals(\"unmark\")) {","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"nafisazizir"},"content":"                boolean isDone \u003d fullCommand.split(\" \")[0].equals(\"mark\");","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"nafisazizir"},"content":"                int taskNum \u003d Integer.parseInt(fullCommand.split(\" \")[1]);","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"nafisazizir"},"content":"                if (isDone) {","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"nafisazizir"},"content":"                    command \u003d new MarkCommand(taskNum);","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"nafisazizir"},"content":"                } else {","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"nafisazizir"},"content":"                    command \u003d new UnmarkCommand(taskNum);","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"nafisazizir"},"content":"                }","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"nafisazizir"},"content":"            } else if (fullCommand.split(\" \")[0].equals(\"todo\")) {","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"nafisazizir"},"content":"                if (fullCommand.split(\" \").length \u003d\u003d 1) {","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"nafisazizir"},"content":"                    throw new StringIndexOutOfBoundsException();","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"nafisazizir"},"content":"                }","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"nafisazizir"},"content":"                String description \u003d fullCommand.substring(fullCommand.indexOf(\" \") + 1);","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"nafisazizir"},"content":"                Todo todo \u003d new Todo(description);","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"nafisazizir"},"content":"                command \u003d new TodoCommand(todo);","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"nafisazizir"},"content":"            } else if (fullCommand.split(\" \")[0].equals(\"deadline\")) {","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"nafisazizir"},"content":"                String description \u003d fullCommand.substring(fullCommand.indexOf(\" \") + 1, fullCommand.indexOf(\" /by\"));","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"nafisazizir"},"content":"                String byString \u003d fullCommand.substring(fullCommand.indexOf(\"/by\") + 4);","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"nafisazizir"},"content":"                LocalDateTime by \u003d getDateAndTimeFormat(byString);","lastModifiedDate":"2023-03-01"},{"lineNumber":56,"author":{"gitId":"nafisazizir"},"content":"                Deadline deadline \u003d new Deadline(description, by);","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"nafisazizir"},"content":"                command \u003d new DeadlineCommand(deadline);","lastModifiedDate":"2023-03-01"},{"lineNumber":58,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":59,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":60,"author":{"gitId":"nafisazizir"},"content":"            } else if (fullCommand.split(\" \")[0].equals(\"event\")) {","lastModifiedDate":"2023-03-01"},{"lineNumber":61,"author":{"gitId":"nafisazizir"},"content":"                String description \u003d fullCommand.substring(fullCommand.indexOf(\" \") + 1, fullCommand.indexOf(\" /from\"));","lastModifiedDate":"2023-03-01"},{"lineNumber":62,"author":{"gitId":"nafisazizir"},"content":"                String startString \u003d fullCommand.substring(fullCommand.indexOf(\"/from\") + 6, fullCommand.indexOf(\" /to\"));","lastModifiedDate":"2023-03-01"},{"lineNumber":63,"author":{"gitId":"nafisazizir"},"content":"                String endString \u003d fullCommand.substring(fullCommand.indexOf(\"/to\") + 4);","lastModifiedDate":"2023-03-01"},{"lineNumber":64,"author":{"gitId":"nafisazizir"},"content":"                LocalDateTime start \u003d getDateAndTimeFormat(startString);","lastModifiedDate":"2023-03-01"},{"lineNumber":65,"author":{"gitId":"nafisazizir"},"content":"                LocalDateTime end \u003d getDateAndTimeFormat(endString);","lastModifiedDate":"2023-03-01"},{"lineNumber":66,"author":{"gitId":"nafisazizir"},"content":"                Event event \u003d new Event(description, start, end);","lastModifiedDate":"2023-03-01"},{"lineNumber":67,"author":{"gitId":"nafisazizir"},"content":"                command \u003d new EventCommand(event);","lastModifiedDate":"2023-03-01"},{"lineNumber":68,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":69,"author":{"gitId":"nafisazizir"},"content":"            } else if (fullCommand.split(\" \")[0].equals(\"delete\")) {","lastModifiedDate":"2023-03-01"},{"lineNumber":70,"author":{"gitId":"nafisazizir"},"content":"                int taskNum \u003d Integer.parseInt(fullCommand.split(\" \")[1]);","lastModifiedDate":"2023-03-01"},{"lineNumber":71,"author":{"gitId":"nafisazizir"},"content":"                command \u003d new DeleteCommand(taskNum);","lastModifiedDate":"2023-03-01"},{"lineNumber":72,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":73,"author":{"gitId":"nafisazizir"},"content":"            } else if (fullCommand.split(\" \")[0].equals(\"find\")) {","lastModifiedDate":"2023-03-01"},{"lineNumber":74,"author":{"gitId":"nafisazizir"},"content":"                if (fullCommand.split(\" \").length \u003d\u003d 1) {","lastModifiedDate":"2023-03-01"},{"lineNumber":75,"author":{"gitId":"nafisazizir"},"content":"                    throw new StringIndexOutOfBoundsException();","lastModifiedDate":"2023-03-01"},{"lineNumber":76,"author":{"gitId":"nafisazizir"},"content":"                }","lastModifiedDate":"2023-03-01"},{"lineNumber":77,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":78,"author":{"gitId":"nafisazizir"},"content":"                String keyword \u003d fullCommand.substring(fullCommand.indexOf(\" \") + 1);","lastModifiedDate":"2023-03-01"},{"lineNumber":79,"author":{"gitId":"nafisazizir"},"content":"                command \u003d new FindCommand(keyword);","lastModifiedDate":"2023-03-01"},{"lineNumber":80,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":81,"author":{"gitId":"nafisazizir"},"content":"            } else {","lastModifiedDate":"2023-03-01"},{"lineNumber":82,"author":{"gitId":"nafisazizir"},"content":"                throw new JonathanException(\"Wrong input, please type it correctly!\");","lastModifiedDate":"2023-03-01"},{"lineNumber":83,"author":{"gitId":"nafisazizir"},"content":"            }","lastModifiedDate":"2023-03-01"},{"lineNumber":84,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":85,"author":{"gitId":"nafisazizir"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-03-01"},{"lineNumber":86,"author":{"gitId":"nafisazizir"},"content":"            command \u003d new WrongFormatCommand();","lastModifiedDate":"2023-03-01"},{"lineNumber":87,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":88,"author":{"gitId":"nafisazizir"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-03-16"},{"lineNumber":89,"author":{"gitId":"nafisazizir"},"content":"            command \u003d new WrongFormatCommand();","lastModifiedDate":"2023-03-16"},{"lineNumber":90,"author":{"gitId":"nafisazizir"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":91,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":92,"author":{"gitId":"nafisazizir"},"content":"        return command;","lastModifiedDate":"2023-03-01"},{"lineNumber":93,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":94,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":95,"author":{"gitId":"nafisazizir"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":96,"author":{"gitId":"nafisazizir"},"content":"     * Method to convert the String into LocalDateTime.","lastModifiedDate":"2023-03-01"},{"lineNumber":97,"author":{"gitId":"nafisazizir"},"content":"     * @param substring string to be converted.","lastModifiedDate":"2023-03-01"},{"lineNumber":98,"author":{"gitId":"nafisazizir"},"content":"     * @return LocalDateTime.","lastModifiedDate":"2023-03-01"},{"lineNumber":99,"author":{"gitId":"nafisazizir"},"content":"     * @throws JonathanException when the string is not following the format.","lastModifiedDate":"2023-03-01"},{"lineNumber":100,"author":{"gitId":"nafisazizir"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":101,"author":{"gitId":"nafisazizir"},"content":"    private static LocalDateTime getDateAndTimeFormat(String substring) throws JonathanException {","lastModifiedDate":"2023-03-01"},{"lineNumber":102,"author":{"gitId":"nafisazizir"},"content":"        try {","lastModifiedDate":"2023-03-01"},{"lineNumber":103,"author":{"gitId":"nafisazizir"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2023-03-01"},{"lineNumber":104,"author":{"gitId":"nafisazizir"},"content":"            LocalDateTime dateTime \u003d LocalDateTime.parse(substring, formatter);","lastModifiedDate":"2023-03-01"},{"lineNumber":105,"author":{"gitId":"nafisazizir"},"content":"            return dateTime;","lastModifiedDate":"2023-03-01"},{"lineNumber":106,"author":{"gitId":"nafisazizir"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-03-01"},{"lineNumber":107,"author":{"gitId":"nafisazizir"},"content":"            throw new JonathanException(\"Please input the date and time in the correct format!\");","lastModifiedDate":"2023-03-01"},{"lineNumber":108,"author":{"gitId":"nafisazizir"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":109,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":110,"author":{"gitId":"nafisazizir"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"nafisazizir":110}},{"path":"src/main/Java/jonathan/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nafisazizir"},"content":"package jonathan;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"nafisazizir"},"content":"import task.*;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"nafisazizir"},"content":"import java.io.File;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"nafisazizir"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"nafisazizir"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"nafisazizir"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"nafisazizir"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"nafisazizir"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"nafisazizir"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"nafisazizir"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"nafisazizir"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"nafisazizir"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"nafisazizir"},"content":" * Model a class to handle storage for the program.","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"nafisazizir"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"nafisazizir"},"content":"public class Storage {","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"nafisazizir"},"content":"    private final File file;","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"nafisazizir"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"nafisazizir"},"content":"     * Build constructor for the Storage class.","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"nafisazizir"},"content":"     * @param filepath the filepath of the storage.","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"nafisazizir"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"nafisazizir"},"content":"    Storage(String filepath) {","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"nafisazizir"},"content":"        String dirname \u003d filepath.substring(0, filepath.lastIndexOf(\"/\"));","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"nafisazizir"},"content":"        File dir \u003d new File(dirname);","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"nafisazizir"},"content":"        dir.mkdirs();","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"nafisazizir"},"content":"        this.file \u003d new File(filepath);","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"nafisazizir"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"nafisazizir"},"content":"     * Method to load the file.","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"nafisazizir"},"content":"     * @return the ArrayList of the tasks.","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"nafisazizir"},"content":"     * @throws JonathanException when the file can\u0027t be found.","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"nafisazizir"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"nafisazizir"},"content":"    public ArrayList\u003cTask\u003e load() throws JonathanException {","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"nafisazizir"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"nafisazizir"},"content":"        try {","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"nafisazizir"},"content":"            Scanner reader \u003d new Scanner(file);","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"nafisazizir"},"content":"            while (reader.hasNextLine()) {","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"nafisazizir"},"content":"                String line \u003d reader.nextLine();","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"nafisazizir"},"content":"                String[] extract \u003d line.split(\"\\\\|\");","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"nafisazizir"},"content":"                String symbol \u003d extract[0].trim();","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"nafisazizir"},"content":"                String isDone \u003d extract[1].trim();","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"nafisazizir"},"content":"                String description \u003d extract[2].trim();","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"nafisazizir"},"content":"                switch (symbol) {","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"nafisazizir"},"content":"                    case \"T\":","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"nafisazizir"},"content":"                        Todo todo \u003d new Todo(description);","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"nafisazizir"},"content":"                        if (isDone.equals(\"1\")) {","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"nafisazizir"},"content":"                            todo.setDone(true);","lastModifiedDate":"2023-03-01"},{"lineNumber":56,"author":{"gitId":"nafisazizir"},"content":"                        }","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":58,"author":{"gitId":"nafisazizir"},"content":"                        tasks.add(todo);","lastModifiedDate":"2023-03-01"},{"lineNumber":59,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":60,"author":{"gitId":"nafisazizir"},"content":"                        break;","lastModifiedDate":"2023-03-01"},{"lineNumber":61,"author":{"gitId":"nafisazizir"},"content":"                    case \"D\":","lastModifiedDate":"2023-03-01"},{"lineNumber":62,"author":{"gitId":"nafisazizir"},"content":"                        String byString \u003d extract[3].trim();","lastModifiedDate":"2023-03-01"},{"lineNumber":63,"author":{"gitId":"nafisazizir"},"content":"                        LocalDateTime by \u003d getDateAndTimeFormat(byString);","lastModifiedDate":"2023-03-01"},{"lineNumber":64,"author":{"gitId":"nafisazizir"},"content":"                        Deadline deadline \u003d new Deadline(description, by);","lastModifiedDate":"2023-03-01"},{"lineNumber":65,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":66,"author":{"gitId":"nafisazizir"},"content":"                        if (isDone.equals(\"1\")) {","lastModifiedDate":"2023-03-01"},{"lineNumber":67,"author":{"gitId":"nafisazizir"},"content":"                            deadline.setDone(true);","lastModifiedDate":"2023-03-01"},{"lineNumber":68,"author":{"gitId":"nafisazizir"},"content":"                        }","lastModifiedDate":"2023-03-01"},{"lineNumber":69,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":70,"author":{"gitId":"nafisazizir"},"content":"                        tasks.add(deadline);","lastModifiedDate":"2023-03-01"},{"lineNumber":71,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":72,"author":{"gitId":"nafisazizir"},"content":"                        break;","lastModifiedDate":"2023-03-01"},{"lineNumber":73,"author":{"gitId":"nafisazizir"},"content":"                    case \"E\":","lastModifiedDate":"2023-03-01"},{"lineNumber":74,"author":{"gitId":"nafisazizir"},"content":"                        String startString \u003d extract[3].trim();","lastModifiedDate":"2023-03-01"},{"lineNumber":75,"author":{"gitId":"nafisazizir"},"content":"                        String endString \u003d extract[4].trim();","lastModifiedDate":"2023-03-01"},{"lineNumber":76,"author":{"gitId":"nafisazizir"},"content":"                        LocalDateTime start \u003d getDateAndTimeFormat(startString);","lastModifiedDate":"2023-03-01"},{"lineNumber":77,"author":{"gitId":"nafisazizir"},"content":"                        LocalDateTime end \u003d getDateAndTimeFormat(endString);","lastModifiedDate":"2023-03-01"},{"lineNumber":78,"author":{"gitId":"nafisazizir"},"content":"                        Event event \u003d new Event(description, start, end);","lastModifiedDate":"2023-03-01"},{"lineNumber":79,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":80,"author":{"gitId":"nafisazizir"},"content":"                        if (isDone.equals(\"1\")) {","lastModifiedDate":"2023-03-01"},{"lineNumber":81,"author":{"gitId":"nafisazizir"},"content":"                            event.setDone(true);","lastModifiedDate":"2023-03-01"},{"lineNumber":82,"author":{"gitId":"nafisazizir"},"content":"                        }","lastModifiedDate":"2023-03-01"},{"lineNumber":83,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":84,"author":{"gitId":"nafisazizir"},"content":"                        tasks.add(event);","lastModifiedDate":"2023-03-01"},{"lineNumber":85,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":86,"author":{"gitId":"nafisazizir"},"content":"                        break;","lastModifiedDate":"2023-03-01"},{"lineNumber":87,"author":{"gitId":"nafisazizir"},"content":"                }","lastModifiedDate":"2023-03-01"},{"lineNumber":88,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":89,"author":{"gitId":"nafisazizir"},"content":"            }","lastModifiedDate":"2023-03-01"},{"lineNumber":90,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":91,"author":{"gitId":"nafisazizir"},"content":"            reader.close();","lastModifiedDate":"2023-03-01"},{"lineNumber":92,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":93,"author":{"gitId":"nafisazizir"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-03-01"},{"lineNumber":94,"author":{"gitId":"nafisazizir"},"content":"            throw new JonathanException(\"Unfortunately, file can\u0027t be found. I\u0027ll make a new one!\");","lastModifiedDate":"2023-03-01"},{"lineNumber":95,"author":{"gitId":"nafisazizir"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":96,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":97,"author":{"gitId":"nafisazizir"},"content":"        return tasks;","lastModifiedDate":"2023-03-01"},{"lineNumber":98,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":99,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":100,"author":{"gitId":"nafisazizir"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":101,"author":{"gitId":"nafisazizir"},"content":"     * Method to save the current state of the program into a file.","lastModifiedDate":"2023-03-01"},{"lineNumber":102,"author":{"gitId":"nafisazizir"},"content":"     * @param tasks the list of the task.","lastModifiedDate":"2023-03-01"},{"lineNumber":103,"author":{"gitId":"nafisazizir"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":104,"author":{"gitId":"nafisazizir"},"content":"    public void save(TaskList tasks) {","lastModifiedDate":"2023-03-01"},{"lineNumber":105,"author":{"gitId":"nafisazizir"},"content":"        try {","lastModifiedDate":"2023-03-01"},{"lineNumber":106,"author":{"gitId":"nafisazizir"},"content":"            file.createNewFile();","lastModifiedDate":"2023-03-01"},{"lineNumber":107,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":108,"author":{"gitId":"nafisazizir"},"content":"            FileWriter fileWriter \u003d new FileWriter(file);","lastModifiedDate":"2023-03-01"},{"lineNumber":109,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":110,"author":{"gitId":"nafisazizir"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-03-01"},{"lineNumber":111,"author":{"gitId":"nafisazizir"},"content":"                Task task \u003d tasks.get(i);","lastModifiedDate":"2023-03-01"},{"lineNumber":112,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":113,"author":{"gitId":"nafisazizir"},"content":"                if (task instanceof Todo) {","lastModifiedDate":"2023-03-01"},{"lineNumber":114,"author":{"gitId":"nafisazizir"},"content":"                    Todo todo \u003d (Todo) task;","lastModifiedDate":"2023-03-01"},{"lineNumber":115,"author":{"gitId":"nafisazizir"},"content":"                    String line \u003d \"T | \" + todo.getIsDone() + \" | \" + todo.getDescription() + \"\\n\";","lastModifiedDate":"2023-03-01"},{"lineNumber":116,"author":{"gitId":"nafisazizir"},"content":"                    fileWriter.write(line);","lastModifiedDate":"2023-03-01"},{"lineNumber":117,"author":{"gitId":"nafisazizir"},"content":"                } else if (task instanceof Deadline) {","lastModifiedDate":"2023-03-01"},{"lineNumber":118,"author":{"gitId":"nafisazizir"},"content":"                    Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2023-03-01"},{"lineNumber":119,"author":{"gitId":"nafisazizir"},"content":"                    String line \u003d \"D | \" + deadline.getIsDone() + \" | \" + deadline.getDescription() +","lastModifiedDate":"2023-03-01"},{"lineNumber":120,"author":{"gitId":"nafisazizir"},"content":"                            \" | \" + convertDateTime(deadline.getRawBy()) + \"\\n\";","lastModifiedDate":"2023-03-01"},{"lineNumber":121,"author":{"gitId":"nafisazizir"},"content":"                    fileWriter.write(line);","lastModifiedDate":"2023-03-01"},{"lineNumber":122,"author":{"gitId":"nafisazizir"},"content":"                } else if (task instanceof Event) {","lastModifiedDate":"2023-03-01"},{"lineNumber":123,"author":{"gitId":"nafisazizir"},"content":"                    Event event \u003d (Event) task;","lastModifiedDate":"2023-03-01"},{"lineNumber":124,"author":{"gitId":"nafisazizir"},"content":"                    String line \u003d \"E | \" + event.getIsDone() + \" | \" + event.getDescription() +","lastModifiedDate":"2023-03-01"},{"lineNumber":125,"author":{"gitId":"nafisazizir"},"content":"                            \" | \" + convertDateTime(event.getRawStart()) + \" | \" +","lastModifiedDate":"2023-03-01"},{"lineNumber":126,"author":{"gitId":"nafisazizir"},"content":"                            convertDateTime(event.getRawEnd()) + \"\\n\";","lastModifiedDate":"2023-03-01"},{"lineNumber":127,"author":{"gitId":"nafisazizir"},"content":"                    fileWriter.write(line);","lastModifiedDate":"2023-03-01"},{"lineNumber":128,"author":{"gitId":"nafisazizir"},"content":"                }","lastModifiedDate":"2023-03-01"},{"lineNumber":129,"author":{"gitId":"nafisazizir"},"content":"            }","lastModifiedDate":"2023-03-01"},{"lineNumber":130,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":131,"author":{"gitId":"nafisazizir"},"content":"            fileWriter.flush();","lastModifiedDate":"2023-03-01"},{"lineNumber":132,"author":{"gitId":"nafisazizir"},"content":"            fileWriter.close();","lastModifiedDate":"2023-03-01"},{"lineNumber":133,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":134,"author":{"gitId":"nafisazizir"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-01"},{"lineNumber":135,"author":{"gitId":"nafisazizir"},"content":"            System.out.println(\"An error occurred.\");","lastModifiedDate":"2023-03-01"},{"lineNumber":136,"author":{"gitId":"nafisazizir"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-03-01"},{"lineNumber":137,"author":{"gitId":"nafisazizir"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":138,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":139,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":140,"author":{"gitId":"nafisazizir"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":141,"author":{"gitId":"nafisazizir"},"content":"     * Method to convert the String into LocalDateTime.","lastModifiedDate":"2023-03-01"},{"lineNumber":142,"author":{"gitId":"nafisazizir"},"content":"     * @param substring string to be converted.","lastModifiedDate":"2023-03-01"},{"lineNumber":143,"author":{"gitId":"nafisazizir"},"content":"     * @return LocalDateTime.","lastModifiedDate":"2023-03-01"},{"lineNumber":144,"author":{"gitId":"nafisazizir"},"content":"     * @throws JonathanException when the string is not following the format.","lastModifiedDate":"2023-03-01"},{"lineNumber":145,"author":{"gitId":"nafisazizir"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":146,"author":{"gitId":"nafisazizir"},"content":"    private LocalDateTime getDateAndTimeFormat(String substring) {","lastModifiedDate":"2023-03-01"},{"lineNumber":147,"author":{"gitId":"nafisazizir"},"content":"        try {","lastModifiedDate":"2023-03-01"},{"lineNumber":148,"author":{"gitId":"nafisazizir"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2023-03-01"},{"lineNumber":149,"author":{"gitId":"nafisazizir"},"content":"            LocalDateTime dateTime \u003d LocalDateTime.parse(substring, formatter);","lastModifiedDate":"2023-03-01"},{"lineNumber":150,"author":{"gitId":"nafisazizir"},"content":"            return dateTime;","lastModifiedDate":"2023-03-01"},{"lineNumber":151,"author":{"gitId":"nafisazizir"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-03-01"},{"lineNumber":152,"author":{"gitId":"nafisazizir"},"content":"            // do something here","lastModifiedDate":"2023-03-01"},{"lineNumber":153,"author":{"gitId":"nafisazizir"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":154,"author":{"gitId":"nafisazizir"},"content":"        return null;","lastModifiedDate":"2023-03-01"},{"lineNumber":155,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":156,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":157,"author":{"gitId":"nafisazizir"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":158,"author":{"gitId":"nafisazizir"},"content":"     * Method to convert LocalDateTime into String","lastModifiedDate":"2023-03-01"},{"lineNumber":159,"author":{"gitId":"nafisazizir"},"content":"     * @param dateTime the LocalDateTime.","lastModifiedDate":"2023-03-01"},{"lineNumber":160,"author":{"gitId":"nafisazizir"},"content":"     * @return the string representation to be print in the file.","lastModifiedDate":"2023-03-01"},{"lineNumber":161,"author":{"gitId":"nafisazizir"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":162,"author":{"gitId":"nafisazizir"},"content":"    private String convertDateTime(LocalDateTime dateTime) {","lastModifiedDate":"2023-03-01"},{"lineNumber":163,"author":{"gitId":"nafisazizir"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2023-03-01"},{"lineNumber":164,"author":{"gitId":"nafisazizir"},"content":"        return dateTime.format(formatter);","lastModifiedDate":"2023-03-01"},{"lineNumber":165,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":166,"author":{"gitId":"nafisazizir"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"nafisazizir":166}},{"path":"src/main/Java/jonathan/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nafisazizir"},"content":"package jonathan;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"nafisazizir"},"content":"import task.Task;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"nafisazizir"},"content":"import task.TaskList;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"nafisazizir"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"nafisazizir"},"content":"public class Ui {","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"nafisazizir"},"content":"    public String readCommand() {","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"nafisazizir"},"content":"        Scanner input \u003d new Scanner((System.in));","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"nafisazizir"},"content":"        String fullCommand \u003d input.nextLine();","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"nafisazizir"},"content":"        return fullCommand;","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"nafisazizir"},"content":"    public void showLine() {","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"nafisazizir"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"nafisazizir"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"nafisazizir"},"content":"        showLine();","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"nafisazizir"},"content":"        System.out.println(\"    Hello! I\u0027m Jonathan\");","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"nafisazizir"},"content":"        System.out.println(\"    What can I do for you?\");","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"nafisazizir"},"content":"        showLine();","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"nafisazizir"},"content":"    public void showGoodbye() {","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"nafisazizir"},"content":"        System.out.println(\"    Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"nafisazizir"},"content":"    public void showAdded(TaskList tasks, Task task) {","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"nafisazizir"},"content":"        System.out.println(\"    Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"nafisazizir"},"content":"        System.out.println(\"    \" + task);","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"nafisazizir"},"content":"        System.out.println(\"    Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"nafisazizir"},"content":"    public void showDelete(TaskList tasks, Task task) {","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"nafisazizir"},"content":"        System.out.println(\"    Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"nafisazizir"},"content":"        System.out.println(\"    \" + task);","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"nafisazizir"},"content":"        System.out.println(\"    Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"nafisazizir"},"content":"    public void showAllTasks(TaskList tasks) {","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"nafisazizir"},"content":"        if (tasks.size() \u003e 0) {","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"nafisazizir"},"content":"            System.out.println(\"    Here are the tasks in your list:\");","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"nafisazizir"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"nafisazizir"},"content":"                System.out.println(\"    \" + (i+1) + \". \"  + tasks.get(i));","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"nafisazizir"},"content":"            }","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"nafisazizir"},"content":"        } else {","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"nafisazizir"},"content":"            System.out.println(\"    You don\u0027t have any tasks!\");","lastModifiedDate":"2023-03-16"},{"lineNumber":51,"author":{"gitId":"nafisazizir"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":52,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"nafisazizir"},"content":"    public void showMarked(Task task) {","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"nafisazizir"},"content":"        System.out.println(\"    Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-03-01"},{"lineNumber":56,"author":{"gitId":"nafisazizir"},"content":"        System.out.println(\"    \" + task);","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":58,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":59,"author":{"gitId":"nafisazizir"},"content":"    public void showUnmarked(Task task) {","lastModifiedDate":"2023-03-01"},{"lineNumber":60,"author":{"gitId":"nafisazizir"},"content":"        System.out.println(\"    OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-03-01"},{"lineNumber":61,"author":{"gitId":"nafisazizir"},"content":"        System.out.println(\"    \" + task);","lastModifiedDate":"2023-03-01"},{"lineNumber":62,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":63,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":64,"author":{"gitId":"nafisazizir"},"content":"    public void showMatchedTask(TaskList tasks) {","lastModifiedDate":"2023-03-01"},{"lineNumber":65,"author":{"gitId":"nafisazizir"},"content":"        if (tasks.size() \u003e 0) {","lastModifiedDate":"2023-03-16"},{"lineNumber":66,"author":{"gitId":"nafisazizir"},"content":"            System.out.println(\"    Here are the matching tasks in your list:\");","lastModifiedDate":"2023-03-01"},{"lineNumber":67,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":68,"author":{"gitId":"nafisazizir"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-03-01"},{"lineNumber":69,"author":{"gitId":"nafisazizir"},"content":"                System.out.println(\"    \" + (i+1) + \". \"  + tasks.get(i));","lastModifiedDate":"2023-03-01"},{"lineNumber":70,"author":{"gitId":"nafisazizir"},"content":"            }","lastModifiedDate":"2023-03-01"},{"lineNumber":71,"author":{"gitId":"nafisazizir"},"content":"        } else {","lastModifiedDate":"2023-03-16"},{"lineNumber":72,"author":{"gitId":"nafisazizir"},"content":"            System.out.println(\"    No mathcing tasks for those keyword\");","lastModifiedDate":"2023-03-16"},{"lineNumber":73,"author":{"gitId":"nafisazizir"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":74,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":75,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":76,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":77,"author":{"gitId":"nafisazizir"},"content":"    public void showWrongFormat() {","lastModifiedDate":"2023-03-01"},{"lineNumber":78,"author":{"gitId":"nafisazizir"},"content":"        System.out.println(\"    Please type with he following format:\\n\");","lastModifiedDate":"2023-03-01"},{"lineNumber":79,"author":{"gitId":"nafisazizir"},"content":"        System.out.println(\"    - todo \u003cdescription\u003e\");","lastModifiedDate":"2023-03-01"},{"lineNumber":80,"author":{"gitId":"nafisazizir"},"content":"        System.out.println(\"    - deadline \u003cdescription\u003e /by \u003ctime\u003e\");","lastModifiedDate":"2023-03-01"},{"lineNumber":81,"author":{"gitId":"nafisazizir"},"content":"        System.out.println(\"    - event \u003cdescripton\u003e /from \u003ctime\u003e /to \u003ctime\u003e\");","lastModifiedDate":"2023-03-16"},{"lineNumber":82,"author":{"gitId":"nafisazizir"},"content":"        System.out.println(\"    - delete \u003cindex\u003e\\n\");","lastModifiedDate":"2023-03-16"},{"lineNumber":83,"author":{"gitId":"nafisazizir"},"content":"        System.out.println(\"    note: without the angle bracket\");","lastModifiedDate":"2023-03-01"},{"lineNumber":84,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":85,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":86,"author":{"gitId":"nafisazizir"},"content":"    public void showError(String message) {","lastModifiedDate":"2023-03-01"},{"lineNumber":87,"author":{"gitId":"nafisazizir"},"content":"        System.out.println(\"    \" + message);","lastModifiedDate":"2023-03-01"},{"lineNumber":88,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":89,"author":{"gitId":"nafisazizir"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"nafisazizir":89}},{"path":"src/main/Java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nafisazizir"},"content":"package task;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"nafisazizir"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"nafisazizir"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"nafisazizir"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"nafisazizir"},"content":" * Model a class to handle deadline, inherit from Task class.","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"nafisazizir"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"nafisazizir"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"nafisazizir"},"content":"    private final LocalDateTime by;","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"nafisazizir"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"nafisazizir"},"content":"     * Build constructor for Deadline class.","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"nafisazizir"},"content":"     * @param description the description of the task.","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"nafisazizir"},"content":"     * @param by the deadline of the task.","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"nafisazizir"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"nafisazizir"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"nafisazizir"},"content":"        super(description);","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"nafisazizir"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"nafisazizir"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"nafisazizir"},"content":"     * Method to get the raw data of the deadline.","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"nafisazizir"},"content":"     * @return the deadline in LocalDateTime format.","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"nafisazizir"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"nafisazizir"},"content":"    public LocalDateTime getRawBy() {","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"nafisazizir"},"content":"        return by;","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"nafisazizir"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"nafisazizir"},"content":"     * Method to get the string representation of the deadline.","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"nafisazizir"},"content":"     * @return String deadline with readable format.","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"nafisazizir"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"nafisazizir"},"content":"    public String getBy() {","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"nafisazizir"},"content":"        String literal \u003d nthNumber(Integer.parseInt(by.format(DateTimeFormatter.ofPattern(\"d\"))));","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"nafisazizir"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(String.format(\"d \u0027of\u0027 MMMM yyyy\u0027, \u0027h:ma\"));","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"nafisazizir"},"content":"        String formatted \u003d by.format(formatter);","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"nafisazizir"},"content":"        String date \u003d formatted.split(\" \")[0];","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"nafisazizir"},"content":"        String rest \u003d formatted.substring(formatted.indexOf(\" \"));","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"nafisazizir"},"content":"        String newFormatted \u003d date + literal + rest;","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"nafisazizir"},"content":"        return newFormatted;","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"nafisazizir"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"nafisazizir"},"content":"     * Method to override toString().","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"nafisazizir"},"content":"     * @return the string representation of the class.","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"nafisazizir"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"nafisazizir"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"nafisazizir"},"content":"    public String toString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"nafisazizir"},"content":"        return \"[D][\" + getStatusIcon() + \"] \" + getDescription() + \" (by: \" + getBy() + \")\";","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"nafisazizir"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"nafisazizir":52}},{"path":"src/main/Java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nafisazizir"},"content":"package task;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"nafisazizir"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"nafisazizir"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"nafisazizir"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"nafisazizir"},"content":" * Model a class to handle event, inherit from Task class.","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"nafisazizir"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"nafisazizir"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"nafisazizir"},"content":"    private final LocalDateTime start;","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"nafisazizir"},"content":"    private final LocalDateTime end;","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"nafisazizir"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"nafisazizir"},"content":"     * Build constructor for event class.","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"nafisazizir"},"content":"     * @param description the description of the task.","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"nafisazizir"},"content":"     * @param start the start date\u0026time of the event.","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"nafisazizir"},"content":"     * @param end the end date\u0026time of the event.","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"nafisazizir"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"nafisazizir"},"content":"    public Event(String description, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"nafisazizir"},"content":"        super(description);","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"nafisazizir"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"nafisazizir"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"nafisazizir"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"nafisazizir"},"content":"     * Method to get the raw data of the start date\u0026time.","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"nafisazizir"},"content":"     * @return the start in LocalDateTime format.","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"nafisazizir"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"nafisazizir"},"content":"    public LocalDateTime getRawStart() {","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"nafisazizir"},"content":"        return start;","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"nafisazizir"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"nafisazizir"},"content":"     * Method to get the raw data of the end date\u0026time.","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"nafisazizir"},"content":"     * @return the end in LocalDateTime format.","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"nafisazizir"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"nafisazizir"},"content":"    public LocalDateTime getRawEnd() {","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"nafisazizir"},"content":"        return end;","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"nafisazizir"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"nafisazizir"},"content":"     * Method to get the string representation of the start.","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"nafisazizir"},"content":"     * @return String start with readable format.","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"nafisazizir"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"nafisazizir"},"content":"    public String getStart() {","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"nafisazizir"},"content":"        String literal \u003d nthNumber(Integer.parseInt(start.format(DateTimeFormatter.ofPattern(\"d\"))));","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"nafisazizir"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(String.format(\"d \u0027of\u0027 MMMM yyyy\u0027, \u0027h:ma\"));","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"nafisazizir"},"content":"        String formatted \u003d start.format(formatter);","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"nafisazizir"},"content":"        String date \u003d formatted.split(\" \")[0];","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"nafisazizir"},"content":"        String rest \u003d formatted.substring(formatted.indexOf(\" \"));","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"nafisazizir"},"content":"        String newFormatted \u003d date + literal + rest;","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"nafisazizir"},"content":"        return newFormatted;","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"nafisazizir"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":56,"author":{"gitId":"nafisazizir"},"content":"     * Method to get the string representation of the end.","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"nafisazizir"},"content":"     * @return String end with readable format.","lastModifiedDate":"2023-03-01"},{"lineNumber":58,"author":{"gitId":"nafisazizir"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":59,"author":{"gitId":"nafisazizir"},"content":"    public String getEnd() {","lastModifiedDate":"2023-03-01"},{"lineNumber":60,"author":{"gitId":"nafisazizir"},"content":"        String literal \u003d nthNumber(Integer.parseInt(end.format(DateTimeFormatter.ofPattern(\"d\"))));","lastModifiedDate":"2023-03-01"},{"lineNumber":61,"author":{"gitId":"nafisazizir"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(String.format(\"d \u0027of\u0027 MMMM yyyy\u0027, \u0027h:ma\"));","lastModifiedDate":"2023-03-01"},{"lineNumber":62,"author":{"gitId":"nafisazizir"},"content":"        String formatted \u003d end.format(formatter);","lastModifiedDate":"2023-03-01"},{"lineNumber":63,"author":{"gitId":"nafisazizir"},"content":"        String date \u003d formatted.split(\" \")[0];","lastModifiedDate":"2023-03-01"},{"lineNumber":64,"author":{"gitId":"nafisazizir"},"content":"        String rest \u003d formatted.substring(formatted.indexOf(\" \"));","lastModifiedDate":"2023-03-01"},{"lineNumber":65,"author":{"gitId":"nafisazizir"},"content":"        String newFormatted \u003d date + literal + rest;","lastModifiedDate":"2023-03-01"},{"lineNumber":66,"author":{"gitId":"nafisazizir"},"content":"        return newFormatted;","lastModifiedDate":"2023-03-01"},{"lineNumber":67,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":68,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":69,"author":{"gitId":"nafisazizir"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":70,"author":{"gitId":"nafisazizir"},"content":"     * Method to override toString().","lastModifiedDate":"2023-03-01"},{"lineNumber":71,"author":{"gitId":"nafisazizir"},"content":"     * @return the string representation of the class.","lastModifiedDate":"2023-03-01"},{"lineNumber":72,"author":{"gitId":"nafisazizir"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":73,"author":{"gitId":"nafisazizir"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":74,"author":{"gitId":"nafisazizir"},"content":"    public String toString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":75,"author":{"gitId":"nafisazizir"},"content":"        return \"[E][\" + getStatusIcon() + \"] \" + getDescription() + \" (from: \" + getStart() +","lastModifiedDate":"2023-01-31"},{"lineNumber":76,"author":{"gitId":"nafisazizir"},"content":"                \" to: \" + getEnd() + \")\";","lastModifiedDate":"2023-01-31"},{"lineNumber":77,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":78,"author":{"gitId":"nafisazizir"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"nafisazizir":78}},{"path":"src/main/Java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nafisazizir"},"content":"package task;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"nafisazizir"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"nafisazizir"},"content":" * Abstract class to implement Task class.","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"nafisazizir"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"nafisazizir"},"content":"public abstract class Task {","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"nafisazizir"},"content":"    protected String description;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"nafisazizir"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"nafisazizir"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"nafisazizir"},"content":"     * Build constructor for Task class.","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"nafisazizir"},"content":"     * @param description the description of the task.","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"nafisazizir"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"nafisazizir"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"nafisazizir"},"content":"        setDescription(description);","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"nafisazizir"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"nafisazizir"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"nafisazizir"},"content":"     * Method to get the description of the task.","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"nafisazizir"},"content":"     * @return description.","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"nafisazizir"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"nafisazizir"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"nafisazizir"},"content":"        return description;","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"nafisazizir"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"nafisazizir"},"content":"     * Method to set the description.","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"nafisazizir"},"content":"     * @param description the description of the class.","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"nafisazizir"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"nafisazizir"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"nafisazizir"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"nafisazizir"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"nafisazizir"},"content":"     * Method to set the status of the task.","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"nafisazizir"},"content":"     * @param done boolean.","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"nafisazizir"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"nafisazizir"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"nafisazizir"},"content":"        isDone \u003d done;","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"nafisazizir"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"nafisazizir"},"content":"     * Method to get the status icon of the task.","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"nafisazizir"},"content":"     * @return X if task is done, whitespace otherwise.","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"nafisazizir"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"nafisazizir"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"nafisazizir"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"nafisazizir"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"nafisazizir"},"content":"     * Method to get the status of the task.","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"nafisazizir"},"content":"     * @return String represent 1 for done, 0 for undone.","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"nafisazizir"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"nafisazizir"},"content":"    public String getIsDone() {","lastModifiedDate":"2023-02-11"},{"lineNumber":56,"author":{"gitId":"nafisazizir"},"content":"        return (isDone ? \"1\" : \"0\");","lastModifiedDate":"2023-02-11"},{"lineNumber":57,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":58,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":59,"author":{"gitId":"nafisazizir"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":60,"author":{"gitId":"nafisazizir"},"content":"     * Method to compute the literal of the date.","lastModifiedDate":"2023-03-01"},{"lineNumber":61,"author":{"gitId":"nafisazizir"},"content":"     * @param number the date.","lastModifiedDate":"2023-03-01"},{"lineNumber":62,"author":{"gitId":"nafisazizir"},"content":"     * @return the literal of the date.","lastModifiedDate":"2023-03-01"},{"lineNumber":63,"author":{"gitId":"nafisazizir"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":64,"author":{"gitId":"nafisazizir"},"content":"    public String nthNumber(int number) {","lastModifiedDate":"2023-03-01"},{"lineNumber":65,"author":{"gitId":"nafisazizir"},"content":"        if (number \u003e 0) {","lastModifiedDate":"2023-03-01"},{"lineNumber":66,"author":{"gitId":"nafisazizir"},"content":"            int lastDigit \u003d number % 10;","lastModifiedDate":"2023-03-01"},{"lineNumber":67,"author":{"gitId":"nafisazizir"},"content":"            int secondLastDigit \u003d (number / 10) % 10;","lastModifiedDate":"2023-03-01"},{"lineNumber":68,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":69,"author":{"gitId":"nafisazizir"},"content":"            if (secondLastDigit \u003d\u003d 1) {","lastModifiedDate":"2023-03-01"},{"lineNumber":70,"author":{"gitId":"nafisazizir"},"content":"                return \"th\";","lastModifiedDate":"2023-03-01"},{"lineNumber":71,"author":{"gitId":"nafisazizir"},"content":"            } else {","lastModifiedDate":"2023-03-01"},{"lineNumber":72,"author":{"gitId":"nafisazizir"},"content":"                switch (lastDigit) {","lastModifiedDate":"2023-03-01"},{"lineNumber":73,"author":{"gitId":"nafisazizir"},"content":"                    case 1:","lastModifiedDate":"2023-03-01"},{"lineNumber":74,"author":{"gitId":"nafisazizir"},"content":"                        return \"st\";","lastModifiedDate":"2023-03-01"},{"lineNumber":75,"author":{"gitId":"nafisazizir"},"content":"                    case 2:","lastModifiedDate":"2023-03-01"},{"lineNumber":76,"author":{"gitId":"nafisazizir"},"content":"                        return \"nd\";","lastModifiedDate":"2023-03-01"},{"lineNumber":77,"author":{"gitId":"nafisazizir"},"content":"                    case 3:","lastModifiedDate":"2023-03-01"},{"lineNumber":78,"author":{"gitId":"nafisazizir"},"content":"                        return \"rd\";","lastModifiedDate":"2023-03-01"},{"lineNumber":79,"author":{"gitId":"nafisazizir"},"content":"                    default:","lastModifiedDate":"2023-03-01"},{"lineNumber":80,"author":{"gitId":"nafisazizir"},"content":"                        return \"th\";","lastModifiedDate":"2023-03-01"},{"lineNumber":81,"author":{"gitId":"nafisazizir"},"content":"                }","lastModifiedDate":"2023-03-01"},{"lineNumber":82,"author":{"gitId":"nafisazizir"},"content":"            }","lastModifiedDate":"2023-03-01"},{"lineNumber":83,"author":{"gitId":"nafisazizir"},"content":"        } else {","lastModifiedDate":"2023-03-01"},{"lineNumber":84,"author":{"gitId":"nafisazizir"},"content":"            return \"\";","lastModifiedDate":"2023-03-01"},{"lineNumber":85,"author":{"gitId":"nafisazizir"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":86,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":87,"author":{"gitId":"nafisazizir"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"nafisazizir":87}},{"path":"src/main/Java/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nafisazizir"},"content":"package task;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"nafisazizir"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"nafisazizir"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"nafisazizir"},"content":" * model a class to handle the collection of the tasks.","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"nafisazizir"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"nafisazizir"},"content":"public class TaskList {","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"nafisazizir"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"nafisazizir"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"nafisazizir"},"content":"     * Build constructor for TaskList class.","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"nafisazizir"},"content":"     * @param tasks the list of the task.","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"nafisazizir"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"nafisazizir"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"nafisazizir"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"nafisazizir"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"nafisazizir"},"content":"     * Build empty/new list of the task.","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"nafisazizir"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"nafisazizir"},"content":"    public TaskList() {","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"nafisazizir"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"nafisazizir"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"nafisazizir"},"content":"     * Method to add task into the list.","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"nafisazizir"},"content":"     * @param task the task to be added.","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"nafisazizir"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"nafisazizir"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"nafisazizir"},"content":"        tasks.add(task);","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"nafisazizir"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"nafisazizir"},"content":"     * Method to compute the size of the list.","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"nafisazizir"},"content":"     * @return the size of the list","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"nafisazizir"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"nafisazizir"},"content":"    public int size() {","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"nafisazizir"},"content":"        return tasks.size();","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"nafisazizir"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"nafisazizir"},"content":"     * Method to get the element of the list.","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"nafisazizir"},"content":"     * @param index of the list.","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"nafisazizir"},"content":"     * @return the element of the list.","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"nafisazizir"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"nafisazizir"},"content":"    public Task get(int index) {","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"nafisazizir"},"content":"        return tasks.get(index);","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"nafisazizir"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"nafisazizir"},"content":"     * Method to remove element from the list.","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"nafisazizir"},"content":"     * @param index of the list to be removed.","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"nafisazizir"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"nafisazizir"},"content":"    public void remove(int index) {","lastModifiedDate":"2023-03-01"},{"lineNumber":56,"author":{"gitId":"nafisazizir"},"content":"        tasks.remove(index);","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":58,"author":{"gitId":"nafisazizir"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"nafisazizir":58}},{"path":"src/main/Java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nafisazizir"},"content":"package task;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"nafisazizir"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"nafisazizir"},"content":" * Model a class to handle todo, inherit from Task class.","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"nafisazizir"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"nafisazizir"},"content":"public class Todo extends Task{","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"nafisazizir"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"nafisazizir"},"content":"     * Build constructor for Todo class.","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"nafisazizir"},"content":"     * @param description the description of the task.","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"nafisazizir"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"nafisazizir"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"nafisazizir"},"content":"        super(description);","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"nafisazizir"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"nafisazizir"},"content":"     * Method to override toString().","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"nafisazizir"},"content":"     * @return the string representation of the class.","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"nafisazizir"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"nafisazizir"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"nafisazizir"},"content":"    public String toString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"nafisazizir"},"content":"        return \"[T][\" + getStatusIcon() + \"] \" + getDescription();","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"nafisazizir"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"nafisazizir":23}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nafisazizir"},"content":"todo borrow book","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"nafisazizir"},"content":"list","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"nafisazizir"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"nafisazizir"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"nafisazizir"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"nafisazizir"},"content":"this is random prompt","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"nafisazizir"},"content":"list","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"nafisazizir"},"content":"mark 1","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"nafisazizir"},"content":"unmark 1","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"nafisazizir"},"content":"list","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"nafisazizir"},"content":"bye","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"nafisazizir":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"nafisazizir"},"content":"java -classpath ..\\bin Jonathan \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"nafisazizir":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"nafisazizir"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/Java/jonathan/*.java","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"nafisazizir"},"content":"java -classpath ../bin Jonathan \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"nafisazizir":2,"-":36}}]
