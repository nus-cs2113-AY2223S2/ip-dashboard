[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"nafisazizir"},"content":"# Jonathan project template","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"nafisazizir"},"content":"3. After that, locate the `src/main/java/Jonathan.java` file, right-click it, and choose `Run Jonathan.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"nafisazizir":2,"-":22}},{"path":"src/main/java/Jonathan.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nafisazizir"},"content":"import java.util.Objects;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"nafisazizir"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"nafisazizir"},"content":"public class Jonathan {","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"nafisazizir"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"nafisazizir"},"content":"        Scanner input \u003d new Scanner((System.in));","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"nafisazizir"},"content":"        String command;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"nafisazizir"},"content":"        String line \u003d \"    ____________________________________________________________\";","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"nafisazizir"},"content":"        String welcome \u003d line + \"\\n    Hello! I\u0027m Jonathan\\n\" +","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"nafisazizir"},"content":"                \"    What can I do for you?\\n\" + line + \"\\n\";","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"nafisazizir"},"content":"        String goodbye \u003d \"    Bye. Hope to see you again soon!\\n\" + line;","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"nafisazizir"},"content":"        Task[] list \u003d new Task[100];","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"nafisazizir"},"content":"        int taskCounter \u003d 0;","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"nafisazizir"},"content":"        System.out.println(welcome);","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"nafisazizir"},"content":"        // Loop until user prompt \"bye\"","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"nafisazizir"},"content":"        while (true) {","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"nafisazizir"},"content":"            command \u003d input.nextLine(); // Prompt input from user","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"nafisazizir"},"content":"            if (Objects.equals(command, \"bye\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"nafisazizir"},"content":"                System.out.println(goodbye);","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"nafisazizir"},"content":"                break; // quit the program","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"nafisazizir"},"content":"            } else if (Objects.equals(command, \"list\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"nafisazizir"},"content":"                lookupTask(list, taskCounter);","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"nafisazizir"},"content":"            } else if (command.split(\" \")[0].equals(\"mark\") || command.split(\" \")[0].equals(\"unmark\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"nafisazizir"},"content":"                boolean isDone \u003d command.split(\" \")[0].equals(\"mark\");","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"nafisazizir"},"content":"                int taskNum \u003d Integer.parseInt(command.split(\" \")[1]);","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"nafisazizir"},"content":"                Task task \u003d list[taskNum-1];","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"nafisazizir"},"content":"                changeStatus(task, isDone);","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"nafisazizir"},"content":"            } else { // add Task","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"nafisazizir"},"content":"                list[taskCounter] \u003d new Task(command);","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"nafisazizir"},"content":"                taskCounter +\u003d 1;","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"nafisazizir"},"content":"                System.out.println(line + \"\\n    added: \" + command + \"\\n\" + line + \"\\n\");","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"nafisazizir"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"nafisazizir"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"nafisazizir"},"content":"    /*","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"nafisazizir"},"content":"    Method to print all the Task, including the Task\u0027s status","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"nafisazizir"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"nafisazizir"},"content":"    public static void lookupTask(Task[] list, int counter) {","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"nafisazizir"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"nafisazizir"},"content":"        for (int i \u003d 0; i \u003c counter; i++) {","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"nafisazizir"},"content":"            System.out.println(\"    \" + (i+1) + \". \"  + list[i].stringRepresentation());","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"nafisazizir"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"nafisazizir"},"content":"        System.out.println(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":55,"author":{"gitId":"nafisazizir"},"content":"    /*","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"nafisazizir"},"content":"    Method to change the status of a Task","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"nafisazizir"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"nafisazizir"},"content":"    public static void changeStatus(Task task, boolean isDone){","lastModifiedDate":"2023-01-24"},{"lineNumber":59,"author":{"gitId":"nafisazizir"},"content":"        task.setDone(isDone);","lastModifiedDate":"2023-01-24"},{"lineNumber":60,"author":{"gitId":"nafisazizir"},"content":"        // If the Task is mark done","lastModifiedDate":"2023-01-24"},{"lineNumber":61,"author":{"gitId":"nafisazizir"},"content":"        if (isDone) {","lastModifiedDate":"2023-01-24"},{"lineNumber":62,"author":{"gitId":"nafisazizir"},"content":"            System.out.println(\"    ____________________________________________________________\\n\" +","lastModifiedDate":"2023-01-24"},{"lineNumber":63,"author":{"gitId":"nafisazizir"},"content":"                    \"     Nice! I\u0027ve marked this task as done:\\n\" +","lastModifiedDate":"2023-01-24"},{"lineNumber":64,"author":{"gitId":"nafisazizir"},"content":"                    \"       \" + task.stringRepresentation() + \"\\n\" +","lastModifiedDate":"2023-01-24"},{"lineNumber":65,"author":{"gitId":"nafisazizir"},"content":"                    \"    ____________________________________________________________\");","lastModifiedDate":"2023-01-24"},{"lineNumber":66,"author":{"gitId":"nafisazizir"},"content":"        } else { // Unmaark the Task","lastModifiedDate":"2023-01-24"},{"lineNumber":67,"author":{"gitId":"nafisazizir"},"content":"            System.out.println(\"    ____________________________________________________________\\n\" +","lastModifiedDate":"2023-01-24"},{"lineNumber":68,"author":{"gitId":"nafisazizir"},"content":"                    \"     OK, I\u0027ve marked this task as not done yet:\\n\" +","lastModifiedDate":"2023-01-24"},{"lineNumber":69,"author":{"gitId":"nafisazizir"},"content":"                    \"       \" + task.stringRepresentation() + \"\\n\" +","lastModifiedDate":"2023-01-24"},{"lineNumber":70,"author":{"gitId":"nafisazizir"},"content":"                    \"    ____________________________________________________________\");","lastModifiedDate":"2023-01-24"},{"lineNumber":71,"author":{"gitId":"nafisazizir"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":72,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":73,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":74,"author":{"gitId":"nafisazizir"},"content":"}","lastModifiedDate":"2023-01-24"},{"lineNumber":75,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"nafisazizir":75}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nafisazizir"},"content":"public class Task {","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"nafisazizir"},"content":"    protected String description;","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"nafisazizir"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"nafisazizir"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"nafisazizir"},"content":"        setDescription(description);","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"nafisazizir"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"nafisazizir"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"nafisazizir"},"content":"        return description;","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"nafisazizir"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"nafisazizir"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"nafisazizir"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"nafisazizir"},"content":"        isDone \u003d done;","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"nafisazizir"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"nafisazizir"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"nafisazizir"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"nafisazizir"},"content":"    public String stringRepresentation() {","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"nafisazizir"},"content":"        return \"[\" + getStatusIcon() + \"] \" + getDescription();","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"nafisazizir"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"nafisazizir"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"nafisazizir":29}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"nafisazizir"},"content":"java -classpath ..\\bin Jonathan \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"nafisazizir":1,"-":20}}]
