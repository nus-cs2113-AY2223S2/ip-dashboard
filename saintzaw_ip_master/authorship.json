[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"saintzaw"},"content":"# Duke User Guide","lastModifiedDate":"2023-02-22"},{"lineNumber":2,"author":{"gitId":"saintzaw"},"content":"Duke is a Personal Assistant Chatbot that helps you to keep track of various things via Command Line Interface (CLI).","lastModifiedDate":"2023-02-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"saintzaw"},"content":"## Setting Up Duke","lastModifiedDate":"2023-02-22"},{"lineNumber":5,"author":{"gitId":"saintzaw"},"content":"1. Ensure you have Java 11 or above installed in your computer.","lastModifiedDate":"2023-02-22"},{"lineNumber":6,"author":{"gitId":"saintzaw"},"content":"2. Download the latest `Duke.jar` from [here](https://github.com/saintzaw/ip/releases).","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"saintzaw"},"content":"3. Open your terminal and `cd` into the folder where `Duke.jar` exists.","lastModifiedDate":"2023-02-22"},{"lineNumber":8,"author":{"gitId":"saintzaw"},"content":"4. Once you are in the correct folder, run this command `java -jar Duke.jar` to run Duke.","lastModifiedDate":"2023-02-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":10,"author":{"gitId":"saintzaw"},"content":"If the setup is correct, you should see the below as the output when you run Duke for the first time:","lastModifiedDate":"2023-02-22"},{"lineNumber":11,"author":{"gitId":"saintzaw"},"content":"```","lastModifiedDate":"2023-02-22"},{"lineNumber":12,"author":{"gitId":"saintzaw"},"content":"Hello from","lastModifiedDate":"2023-02-22"},{"lineNumber":13,"author":{"gitId":"saintzaw"},"content":" ____        _        ","lastModifiedDate":"2023-02-22"},{"lineNumber":14,"author":{"gitId":"saintzaw"},"content":"|  _ \\ _   _| | _____ ","lastModifiedDate":"2023-02-22"},{"lineNumber":15,"author":{"gitId":"saintzaw"},"content":"| | | | | | | |/ / _ \\","lastModifiedDate":"2023-02-22"},{"lineNumber":16,"author":{"gitId":"saintzaw"},"content":"| |_| | |_| |   \u003c  __/","lastModifiedDate":"2023-02-22"},{"lineNumber":17,"author":{"gitId":"saintzaw"},"content":"|____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2023-02-22"},{"lineNumber":18,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":19,"author":{"gitId":"saintzaw"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-22"},{"lineNumber":20,"author":{"gitId":"saintzaw"},"content":"Hello! I\u0027m Duke","lastModifiedDate":"2023-02-22"},{"lineNumber":21,"author":{"gitId":"saintzaw"},"content":"What can I do for you?","lastModifiedDate":"2023-02-22"},{"lineNumber":22,"author":{"gitId":"saintzaw"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-22"},{"lineNumber":23,"author":{"gitId":"saintzaw"},"content":"â˜¹ OOPS!!! The file does not exist. Creating a new file.","lastModifiedDate":"2023-02-22"},{"lineNumber":24,"author":{"gitId":"saintzaw"},"content":"Now your data will be saved in the file. Please proceed!","lastModifiedDate":"2023-02-22"},{"lineNumber":25,"author":{"gitId":"saintzaw"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-22"},{"lineNumber":26,"author":{"gitId":"saintzaw"},"content":"```","lastModifiedDate":"2023-02-22"},{"lineNumber":27,"author":{"gitId":"saintzaw"},"content":"In future usage of Duke, you can expect to see this instead:","lastModifiedDate":"2023-02-22"},{"lineNumber":28,"author":{"gitId":"saintzaw"},"content":"```","lastModifiedDate":"2023-02-22"},{"lineNumber":29,"author":{"gitId":"saintzaw"},"content":"Hello from","lastModifiedDate":"2023-02-22"},{"lineNumber":30,"author":{"gitId":"saintzaw"},"content":" ____        _        ","lastModifiedDate":"2023-02-22"},{"lineNumber":31,"author":{"gitId":"saintzaw"},"content":"|  _ \\ _   _| | _____ ","lastModifiedDate":"2023-02-22"},{"lineNumber":32,"author":{"gitId":"saintzaw"},"content":"| | | | | | | |/ / _ \\","lastModifiedDate":"2023-02-22"},{"lineNumber":33,"author":{"gitId":"saintzaw"},"content":"| |_| | |_| |   \u003c  __/","lastModifiedDate":"2023-02-22"},{"lineNumber":34,"author":{"gitId":"saintzaw"},"content":"|____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2023-02-22"},{"lineNumber":35,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":36,"author":{"gitId":"saintzaw"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-22"},{"lineNumber":37,"author":{"gitId":"saintzaw"},"content":"Hello! I\u0027m Duke","lastModifiedDate":"2023-02-22"},{"lineNumber":38,"author":{"gitId":"saintzaw"},"content":"What can I do for you?","lastModifiedDate":"2023-02-22"},{"lineNumber":39,"author":{"gitId":"saintzaw"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-22"},{"lineNumber":40,"author":{"gitId":"saintzaw"},"content":"Saved data has been loaded!","lastModifiedDate":"2023-02-22"},{"lineNumber":41,"author":{"gitId":"saintzaw"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-22"},{"lineNumber":42,"author":{"gitId":"saintzaw"},"content":"```","lastModifiedDate":"2023-02-22"},{"lineNumber":43,"author":{"gitId":"saintzaw"},"content":"Enjoy! ","lastModifiedDate":"2023-02-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":45,"author":{"gitId":"saintzaw"},"content":"- Add Todo","lastModifiedDate":"2023-02-22"},{"lineNumber":46,"author":{"gitId":"saintzaw"},"content":"- Add Deadline","lastModifiedDate":"2023-02-22"},{"lineNumber":47,"author":{"gitId":"saintzaw"},"content":"- Add Event","lastModifiedDate":"2023-02-22"},{"lineNumber":48,"author":{"gitId":"saintzaw"},"content":"- List Tasks","lastModifiedDate":"2023-02-22"},{"lineNumber":49,"author":{"gitId":"saintzaw"},"content":"- Delete Task","lastModifiedDate":"2023-02-22"},{"lineNumber":50,"author":{"gitId":"saintzaw"},"content":"- Mark As Done","lastModifiedDate":"2023-02-22"},{"lineNumber":51,"author":{"gitId":"saintzaw"},"content":"- Mark As Not Done","lastModifiedDate":"2023-02-22"},{"lineNumber":52,"author":{"gitId":"saintzaw"},"content":"- Find Task ","lastModifiedDate":"2023-02-22"},{"lineNumber":53,"author":{"gitId":"saintzaw"},"content":"- Exit","lastModifiedDate":"2023-02-22"},{"lineNumber":54,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":55,"author":{"gitId":"saintzaw"},"content":"### Add Todo","lastModifiedDate":"2023-02-22"},{"lineNumber":56,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":57,"author":{"gitId":"saintzaw"},"content":"Add a todo to task list. A todo is a task that does not have any ","lastModifiedDate":"2023-02-22"},{"lineNumber":58,"author":{"gitId":"saintzaw"},"content":"date or time attached to it.","lastModifiedDate":"2023-02-22"},{"lineNumber":59,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":60,"author":{"gitId":"saintzaw"},"content":"### Usage:","lastModifiedDate":"2023-02-22"},{"lineNumber":61,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":62,"author":{"gitId":"saintzaw"},"content":"`todo \u003cdescription\u003e`","lastModifiedDate":"2023-02-22"},{"lineNumber":63,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":64,"author":{"gitId":"saintzaw"},"content":"### Example: ","lastModifiedDate":"2023-02-22"},{"lineNumber":65,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":66,"author":{"gitId":"saintzaw"},"content":"`todo read book`","lastModifiedDate":"2023-02-22"},{"lineNumber":67,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":68,"author":{"gitId":"saintzaw"},"content":"### Expected outcome:","lastModifiedDate":"2023-02-22"},{"lineNumber":69,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":70,"author":{"gitId":"saintzaw"},"content":"```","lastModifiedDate":"2023-02-22"},{"lineNumber":71,"author":{"gitId":"saintzaw"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-22"},{"lineNumber":72,"author":{"gitId":"saintzaw"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-02-22"},{"lineNumber":73,"author":{"gitId":"saintzaw"},"content":"[T][ ] read book","lastModifiedDate":"2023-02-22"},{"lineNumber":74,"author":{"gitId":"saintzaw"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2023-02-22"},{"lineNumber":75,"author":{"gitId":"saintzaw"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-22"},{"lineNumber":76,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":77,"author":{"gitId":"saintzaw"},"content":"```","lastModifiedDate":"2023-02-22"},{"lineNumber":78,"author":{"gitId":"saintzaw"},"content":"### Add Deadline","lastModifiedDate":"2023-02-22"},{"lineNumber":79,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":80,"author":{"gitId":"saintzaw"},"content":"Add a deadline to task list. A deadline is a task that has a specific due date.","lastModifiedDate":"2023-02-22"},{"lineNumber":81,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":82,"author":{"gitId":"saintzaw"},"content":"### Usage:","lastModifiedDate":"2023-02-22"},{"lineNumber":83,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":84,"author":{"gitId":"saintzaw"},"content":"`deadline \u003cdescription\u003e /by \u003cdue date\u003e`","lastModifiedDate":"2023-02-22"},{"lineNumber":85,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":86,"author":{"gitId":"saintzaw"},"content":"### Example:","lastModifiedDate":"2023-02-22"},{"lineNumber":87,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":88,"author":{"gitId":"saintzaw"},"content":"`deadline return book /by 3 March`","lastModifiedDate":"2023-02-22"},{"lineNumber":89,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":90,"author":{"gitId":"saintzaw"},"content":"### Expected outcome:","lastModifiedDate":"2023-02-22"},{"lineNumber":91,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":92,"author":{"gitId":"saintzaw"},"content":"```","lastModifiedDate":"2023-02-22"},{"lineNumber":93,"author":{"gitId":"saintzaw"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-22"},{"lineNumber":94,"author":{"gitId":"saintzaw"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-02-22"},{"lineNumber":95,"author":{"gitId":"saintzaw"},"content":"[D][ ] return book (by: 3 March)","lastModifiedDate":"2023-02-22"},{"lineNumber":96,"author":{"gitId":"saintzaw"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2023-02-22"},{"lineNumber":97,"author":{"gitId":"saintzaw"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-22"},{"lineNumber":98,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":99,"author":{"gitId":"saintzaw"},"content":"```","lastModifiedDate":"2023-02-22"},{"lineNumber":100,"author":{"gitId":"saintzaw"},"content":"### Add Event","lastModifiedDate":"2023-02-22"},{"lineNumber":101,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":102,"author":{"gitId":"saintzaw"},"content":"Add an event to task list. An event is a task that that starts at a specific ","lastModifiedDate":"2023-02-22"},{"lineNumber":103,"author":{"gitId":"saintzaw"},"content":"date or time and ends at a specific date or time.","lastModifiedDate":"2023-02-22"},{"lineNumber":104,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":105,"author":{"gitId":"saintzaw"},"content":"### Usage:","lastModifiedDate":"2023-02-22"},{"lineNumber":106,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":107,"author":{"gitId":"saintzaw"},"content":"`event \u003cdescription\u003e /from \u003cstart date/time\u003e /to \u003cend date/time\u003e`","lastModifiedDate":"2023-02-22"},{"lineNumber":108,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":109,"author":{"gitId":"saintzaw"},"content":"### Example:","lastModifiedDate":"2023-02-22"},{"lineNumber":110,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":111,"author":{"gitId":"saintzaw"},"content":"`event training /from Thursday 1900 /to 2100`","lastModifiedDate":"2023-02-22"},{"lineNumber":112,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":113,"author":{"gitId":"saintzaw"},"content":"### Expected outcome:","lastModifiedDate":"2023-02-22"},{"lineNumber":114,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":115,"author":{"gitId":"saintzaw"},"content":"```","lastModifiedDate":"2023-02-22"},{"lineNumber":116,"author":{"gitId":"saintzaw"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-22"},{"lineNumber":117,"author":{"gitId":"saintzaw"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-02-22"},{"lineNumber":118,"author":{"gitId":"saintzaw"},"content":"[E][ ] training (from: Thursday 1900 to: 2100)","lastModifiedDate":"2023-02-22"},{"lineNumber":119,"author":{"gitId":"saintzaw"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2023-02-22"},{"lineNumber":120,"author":{"gitId":"saintzaw"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-22"},{"lineNumber":121,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":122,"author":{"gitId":"saintzaw"},"content":"```","lastModifiedDate":"2023-02-22"},{"lineNumber":123,"author":{"gitId":"saintzaw"},"content":"### List Tasks","lastModifiedDate":"2023-02-22"},{"lineNumber":124,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":125,"author":{"gitId":"saintzaw"},"content":"List all the tasks in the current task list.","lastModifiedDate":"2023-02-22"},{"lineNumber":126,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":127,"author":{"gitId":"saintzaw"},"content":"### Usage:","lastModifiedDate":"2023-02-22"},{"lineNumber":128,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":129,"author":{"gitId":"saintzaw"},"content":"`list`","lastModifiedDate":"2023-02-22"},{"lineNumber":130,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":131,"author":{"gitId":"saintzaw"},"content":"### Example:","lastModifiedDate":"2023-02-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":133,"author":{"gitId":"saintzaw"},"content":"`list`","lastModifiedDate":"2023-02-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":135,"author":{"gitId":"saintzaw"},"content":"### Expected outcome:","lastModifiedDate":"2023-02-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":137,"author":{"gitId":"saintzaw"},"content":"```","lastModifiedDate":"2023-02-22"},{"lineNumber":138,"author":{"gitId":"saintzaw"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-22"},{"lineNumber":139,"author":{"gitId":"saintzaw"},"content":"Here are the tasks in your list:","lastModifiedDate":"2023-02-22"},{"lineNumber":140,"author":{"gitId":"saintzaw"},"content":"1.[T][ ] read book","lastModifiedDate":"2023-02-22"},{"lineNumber":141,"author":{"gitId":"saintzaw"},"content":"2.[D][ ] return book (by: 3 March)","lastModifiedDate":"2023-02-22"},{"lineNumber":142,"author":{"gitId":"saintzaw"},"content":"3.[E][ ] training (from: Thursday 1900 to: 2100)","lastModifiedDate":"2023-02-22"},{"lineNumber":143,"author":{"gitId":"saintzaw"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-22"},{"lineNumber":144,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":145,"author":{"gitId":"saintzaw"},"content":"```","lastModifiedDate":"2023-02-22"},{"lineNumber":146,"author":{"gitId":"saintzaw"},"content":"### Delete Task","lastModifiedDate":"2023-02-22"},{"lineNumber":147,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":148,"author":{"gitId":"saintzaw"},"content":"Delete a task from task list by specifying the task number in the list.","lastModifiedDate":"2023-02-22"},{"lineNumber":149,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":150,"author":{"gitId":"saintzaw"},"content":"### Usage:","lastModifiedDate":"2023-02-22"},{"lineNumber":151,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":152,"author":{"gitId":"saintzaw"},"content":"`delete \u003ctask number\u003e`","lastModifiedDate":"2023-02-22"},{"lineNumber":153,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":154,"author":{"gitId":"saintzaw"},"content":"### Example:","lastModifiedDate":"2023-02-22"},{"lineNumber":155,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":156,"author":{"gitId":"saintzaw"},"content":"`delete 1`","lastModifiedDate":"2023-02-22"},{"lineNumber":157,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":158,"author":{"gitId":"saintzaw"},"content":"### Expected outcome:","lastModifiedDate":"2023-02-22"},{"lineNumber":159,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":160,"author":{"gitId":"saintzaw"},"content":"```","lastModifiedDate":"2023-02-22"},{"lineNumber":161,"author":{"gitId":"saintzaw"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-22"},{"lineNumber":162,"author":{"gitId":"saintzaw"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2023-02-22"},{"lineNumber":163,"author":{"gitId":"saintzaw"},"content":"[T][ ] read book","lastModifiedDate":"2023-02-22"},{"lineNumber":164,"author":{"gitId":"saintzaw"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2023-02-22"},{"lineNumber":165,"author":{"gitId":"saintzaw"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-22"},{"lineNumber":166,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":167,"author":{"gitId":"saintzaw"},"content":"```","lastModifiedDate":"2023-02-22"},{"lineNumber":168,"author":{"gitId":"saintzaw"},"content":"### Mark As Done","lastModifiedDate":"2023-02-22"},{"lineNumber":169,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":170,"author":{"gitId":"saintzaw"},"content":"Mark a task as done by specifying the task number in the list.","lastModifiedDate":"2023-02-22"},{"lineNumber":171,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":172,"author":{"gitId":"saintzaw"},"content":"### Usage:","lastModifiedDate":"2023-02-22"},{"lineNumber":173,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":174,"author":{"gitId":"saintzaw"},"content":"`mark \u003ctask number\u003e`","lastModifiedDate":"2023-02-22"},{"lineNumber":175,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":176,"author":{"gitId":"saintzaw"},"content":"### Example:","lastModifiedDate":"2023-02-22"},{"lineNumber":177,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":178,"author":{"gitId":"saintzaw"},"content":"`mark 1`","lastModifiedDate":"2023-02-22"},{"lineNumber":179,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":180,"author":{"gitId":"saintzaw"},"content":"### Expected outcome:","lastModifiedDate":"2023-02-22"},{"lineNumber":181,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":182,"author":{"gitId":"saintzaw"},"content":"```","lastModifiedDate":"2023-02-22"},{"lineNumber":183,"author":{"gitId":"saintzaw"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-22"},{"lineNumber":184,"author":{"gitId":"saintzaw"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2023-02-22"},{"lineNumber":185,"author":{"gitId":"saintzaw"},"content":"[D][X] return book (by: 3 March)","lastModifiedDate":"2023-02-22"},{"lineNumber":186,"author":{"gitId":"saintzaw"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":188,"author":{"gitId":"saintzaw"},"content":"```","lastModifiedDate":"2023-02-22"},{"lineNumber":189,"author":{"gitId":"saintzaw"},"content":"### Mark As Not Done","lastModifiedDate":"2023-02-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":191,"author":{"gitId":"saintzaw"},"content":"Mark a task as not done by specifying the task number in the list.","lastModifiedDate":"2023-02-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":193,"author":{"gitId":"saintzaw"},"content":"### Usage:","lastModifiedDate":"2023-02-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":195,"author":{"gitId":"saintzaw"},"content":"`unmark \u003ctask number\u003e`","lastModifiedDate":"2023-02-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":197,"author":{"gitId":"saintzaw"},"content":"### Example:","lastModifiedDate":"2023-02-22"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":199,"author":{"gitId":"saintzaw"},"content":"`unmark 1`","lastModifiedDate":"2023-02-22"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":201,"author":{"gitId":"saintzaw"},"content":"### Expected outcome:","lastModifiedDate":"2023-02-22"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":203,"author":{"gitId":"saintzaw"},"content":"```","lastModifiedDate":"2023-02-22"},{"lineNumber":204,"author":{"gitId":"saintzaw"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-22"},{"lineNumber":205,"author":{"gitId":"saintzaw"},"content":"OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2023-02-22"},{"lineNumber":206,"author":{"gitId":"saintzaw"},"content":"[D][ ] return book (by: 3 March)","lastModifiedDate":"2023-02-22"},{"lineNumber":207,"author":{"gitId":"saintzaw"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-22"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":209,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":210,"author":{"gitId":"saintzaw"},"content":"### Find Task","lastModifiedDate":"2023-02-22"},{"lineNumber":211,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":212,"author":{"gitId":"saintzaw"},"content":"Find a task in the list by providing a keyword that matches the","lastModifiedDate":"2023-02-22"},{"lineNumber":213,"author":{"gitId":"saintzaw"},"content":"task description or part of it.","lastModifiedDate":"2023-02-22"},{"lineNumber":214,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":215,"author":{"gitId":"saintzaw"},"content":"### Usage:","lastModifiedDate":"2023-02-22"},{"lineNumber":216,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":217,"author":{"gitId":"saintzaw"},"content":"`find \u003ckeyword\u003e`","lastModifiedDate":"2023-02-22"},{"lineNumber":218,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":219,"author":{"gitId":"saintzaw"},"content":"### Example:","lastModifiedDate":"2023-02-22"},{"lineNumber":220,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":221,"author":{"gitId":"saintzaw"},"content":"`find book`","lastModifiedDate":"2023-02-22"},{"lineNumber":222,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":223,"author":{"gitId":"saintzaw"},"content":"### Expected outcome:","lastModifiedDate":"2023-02-22"},{"lineNumber":224,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":225,"author":{"gitId":"saintzaw"},"content":"```","lastModifiedDate":"2023-02-22"},{"lineNumber":226,"author":{"gitId":"saintzaw"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-22"},{"lineNumber":227,"author":{"gitId":"saintzaw"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2023-02-22"},{"lineNumber":228,"author":{"gitId":"saintzaw"},"content":"1.[D][ ] return book (by: 3 March)","lastModifiedDate":"2023-02-22"},{"lineNumber":229,"author":{"gitId":"saintzaw"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-22"},{"lineNumber":230,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":231,"author":{"gitId":"saintzaw"},"content":"```","lastModifiedDate":"2023-02-22"},{"lineNumber":232,"author":{"gitId":"saintzaw"},"content":"### Exit","lastModifiedDate":"2023-02-22"},{"lineNumber":233,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":234,"author":{"gitId":"saintzaw"},"content":"Exit the program.","lastModifiedDate":"2023-02-22"},{"lineNumber":235,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":236,"author":{"gitId":"saintzaw"},"content":"### Usage:","lastModifiedDate":"2023-02-22"},{"lineNumber":237,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":238,"author":{"gitId":"saintzaw"},"content":"`bye`","lastModifiedDate":"2023-02-22"},{"lineNumber":239,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":240,"author":{"gitId":"saintzaw"},"content":"### Example:","lastModifiedDate":"2023-02-22"},{"lineNumber":241,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":242,"author":{"gitId":"saintzaw"},"content":"`bye`","lastModifiedDate":"2023-02-22"},{"lineNumber":243,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":244,"author":{"gitId":"saintzaw"},"content":"### Expected outcome:","lastModifiedDate":"2023-02-22"},{"lineNumber":245,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":246,"author":{"gitId":"saintzaw"},"content":"```","lastModifiedDate":"2023-02-22"},{"lineNumber":247,"author":{"gitId":"saintzaw"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-22"},{"lineNumber":248,"author":{"gitId":"saintzaw"},"content":"Bye. Hope to see you again soon! :)","lastModifiedDate":"2023-02-22"},{"lineNumber":249,"author":{"gitId":"saintzaw"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-22"},{"lineNumber":250,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":251,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"saintzaw":234,"-":17}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saintzaw"},"content":"/**","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"saintzaw"},"content":" * Represents the Duke chatbot. Allows user to utilise features such as loading","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"saintzaw"},"content":" * and saving their data in every instance of Duke, listing tasks, finding","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"saintzaw"},"content":" * specific tasks, marking and unmarking tasks, deleting tasks, as well as adding","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"saintzaw"},"content":" * three different types of tasks : To-do, Deadline or Event.","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"saintzaw"},"content":" */","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"saintzaw"},"content":"    protected Storage storage;","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"saintzaw"},"content":"    protected Parser parser;","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"saintzaw"},"content":"    protected Ui ui;","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"saintzaw"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"saintzaw"},"content":"     * Creates new Ui, Storage and Parser objects.","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"saintzaw"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"saintzaw"},"content":"    public Duke() {","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"saintzaw"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"saintzaw"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"saintzaw"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"saintzaw"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"saintzaw"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":22,"author":{"gitId":"saintzaw"},"content":"     * Greets the user and loads data from text file at the start of the program.","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"saintzaw"},"content":"     * Handles user commands until user exits the program.","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"saintzaw"},"content":"     * When user exits program, saves current task list inside text file and says bye.","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"saintzaw"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"saintzaw"},"content":"    public void run() {","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"saintzaw"},"content":"        ui.greetUser();","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"saintzaw"},"content":"        storage.load();","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"saintzaw"},"content":"        parser.handleCommands();","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"saintzaw"},"content":"        storage.saveData();","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"saintzaw"},"content":"        ui.sayBye();","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"saintzaw"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":33,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":34,"author":{"gitId":"saintzaw"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":35,"author":{"gitId":"saintzaw"},"content":"     * Runs Duke.","lastModifiedDate":"2023-02-19"},{"lineNumber":36,"author":{"gitId":"saintzaw"},"content":"     * @param args The user\u0027s inputs.","lastModifiedDate":"2023-02-19"},{"lineNumber":37,"author":{"gitId":"saintzaw"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"saintzaw"},"content":"        new Duke().run();","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":42,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"saintzaw":38,"-":4}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saintzaw"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"saintzaw"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"saintzaw"},"content":"/**","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"saintzaw"},"content":" * Represents a parser that parses the user\u0027s commands to make sense of","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"saintzaw"},"content":" * what the user wants to do.","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"saintzaw"},"content":" */","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"saintzaw"},"content":"public class Parser {","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"saintzaw"},"content":"    private final TaskList tasks;","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"saintzaw"},"content":"    private final Ui ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"saintzaw"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"saintzaw"},"content":"     * Constructs new TaskList and UI objects to be used to handle appropriate","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"saintzaw"},"content":"     * task operations based on the user\u0027s commands.","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"saintzaw"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"saintzaw"},"content":"    public Parser() {","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"saintzaw"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"saintzaw"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"saintzaw"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":21,"author":{"gitId":"saintzaw"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":22,"author":{"gitId":"saintzaw"},"content":"     * Prints a horizontal line.","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"saintzaw"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"saintzaw"},"content":"    public void printLine() {","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"saintzaw"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"saintzaw"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":28,"author":{"gitId":"saintzaw"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":29,"author":{"gitId":"saintzaw"},"content":"     * Interprets user commands by checking the first word of the user input.","lastModifiedDate":"2023-02-19"},{"lineNumber":30,"author":{"gitId":"saintzaw"},"content":"     * Checks whether user command is List, Find, Mark, Unmark, Delete, To-do,","lastModifiedDate":"2023-02-19"},{"lineNumber":31,"author":{"gitId":"saintzaw"},"content":"     * Deadline or Event and calls the appropriate method to handle the command.","lastModifiedDate":"2023-02-19"},{"lineNumber":32,"author":{"gitId":"saintzaw"},"content":"     * Handles unidentified commands by giving the user a message.","lastModifiedDate":"2023-02-19"},{"lineNumber":33,"author":{"gitId":"saintzaw"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":34,"author":{"gitId":"saintzaw"},"content":"    public void handleCommands() {","lastModifiedDate":"2023-02-19"},{"lineNumber":35,"author":{"gitId":"saintzaw"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"saintzaw"},"content":"        String command \u003d in.nextLine();","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"saintzaw"},"content":"        while (!(command.equals(\"bye\"))) {","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"saintzaw"},"content":"            try {","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"saintzaw"},"content":"                String[] input \u003d command.split(\" \", 2); //only check the first word","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"saintzaw"},"content":"                String firstWord \u003d input[0];","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"saintzaw"},"content":"                switch (firstWord) {","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"saintzaw"},"content":"                    case \"list\" :","lastModifiedDate":"2023-02-17"},{"lineNumber":44,"author":{"gitId":"saintzaw"},"content":"                        tasks.listTasks();","lastModifiedDate":"2023-02-19"},{"lineNumber":45,"author":{"gitId":"saintzaw"},"content":"                        break;","lastModifiedDate":"2023-02-17"},{"lineNumber":46,"author":{"gitId":"saintzaw"},"content":"                    case \"find\" :","lastModifiedDate":"2023-02-17"},{"lineNumber":47,"author":{"gitId":"saintzaw"},"content":"                        tasks.findTask(input);","lastModifiedDate":"2023-02-19"},{"lineNumber":48,"author":{"gitId":"saintzaw"},"content":"                        break;","lastModifiedDate":"2023-02-17"},{"lineNumber":49,"author":{"gitId":"saintzaw"},"content":"                    case \"mark\":","lastModifiedDate":"2023-02-17"},{"lineNumber":50,"author":{"gitId":"saintzaw"},"content":"                        tasks.markTask(input);","lastModifiedDate":"2023-02-19"},{"lineNumber":51,"author":{"gitId":"saintzaw"},"content":"                        break;","lastModifiedDate":"2023-02-17"},{"lineNumber":52,"author":{"gitId":"saintzaw"},"content":"                    case \"unmark\":","lastModifiedDate":"2023-02-17"},{"lineNumber":53,"author":{"gitId":"saintzaw"},"content":"                        tasks.unmarkTask(input);","lastModifiedDate":"2023-02-19"},{"lineNumber":54,"author":{"gitId":"saintzaw"},"content":"                        break;","lastModifiedDate":"2023-02-17"},{"lineNumber":55,"author":{"gitId":"saintzaw"},"content":"                    case \"delete\":","lastModifiedDate":"2023-02-17"},{"lineNumber":56,"author":{"gitId":"saintzaw"},"content":"                        tasks.deleteTask(input);","lastModifiedDate":"2023-02-19"},{"lineNumber":57,"author":{"gitId":"saintzaw"},"content":"                        break;","lastModifiedDate":"2023-02-17"},{"lineNumber":58,"author":{"gitId":"saintzaw"},"content":"                    case \"todo\":","lastModifiedDate":"2023-02-17"},{"lineNumber":59,"author":{"gitId":"saintzaw"},"content":"                        tasks.addTodo(input);","lastModifiedDate":"2023-02-19"},{"lineNumber":60,"author":{"gitId":"saintzaw"},"content":"                        break;","lastModifiedDate":"2023-02-17"},{"lineNumber":61,"author":{"gitId":"saintzaw"},"content":"                    case \"deadline\":","lastModifiedDate":"2023-02-17"},{"lineNumber":62,"author":{"gitId":"saintzaw"},"content":"                        tasks.addDeadline(input);","lastModifiedDate":"2023-02-19"},{"lineNumber":63,"author":{"gitId":"saintzaw"},"content":"                        break;","lastModifiedDate":"2023-02-17"},{"lineNumber":64,"author":{"gitId":"saintzaw"},"content":"                    case \"event\":","lastModifiedDate":"2023-02-17"},{"lineNumber":65,"author":{"gitId":"saintzaw"},"content":"                        tasks.addEvent(input);","lastModifiedDate":"2023-02-19"},{"lineNumber":66,"author":{"gitId":"saintzaw"},"content":"                        break;","lastModifiedDate":"2023-02-17"},{"lineNumber":67,"author":{"gitId":"saintzaw"},"content":"                    default:","lastModifiedDate":"2023-02-17"},{"lineNumber":68,"author":{"gitId":"saintzaw"},"content":"                        throw new DukeException();","lastModifiedDate":"2023-02-17"},{"lineNumber":69,"author":{"gitId":"saintzaw"},"content":"                }","lastModifiedDate":"2023-02-17"},{"lineNumber":70,"author":{"gitId":"saintzaw"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":71,"author":{"gitId":"saintzaw"},"content":"                ui.handleUnidentifiedCommand();","lastModifiedDate":"2023-02-20"},{"lineNumber":72,"author":{"gitId":"saintzaw"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":73,"author":{"gitId":"saintzaw"},"content":"            command \u003d in.nextLine();","lastModifiedDate":"2023-02-20"},{"lineNumber":74,"author":{"gitId":"saintzaw"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":75,"author":{"gitId":"saintzaw"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":76,"author":{"gitId":"saintzaw"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"saintzaw":76}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saintzaw"},"content":"import duke.Deadline;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"saintzaw"},"content":"import duke.Event;","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"saintzaw"},"content":"import duke.Task;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"saintzaw"},"content":"import duke.Todo;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"saintzaw"},"content":"import java.io.File;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"saintzaw"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"saintzaw"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"saintzaw"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"saintzaw"},"content":"import static duke.FileOperations.*;","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"saintzaw"},"content":"/**","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"saintzaw"},"content":" * Represents a Storage object that handles the loading of data from text file and","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"saintzaw"},"content":" * saving of data into text file.","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"saintzaw"},"content":" */","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"saintzaw"},"content":"public class Storage {","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"saintzaw"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"saintzaw"},"content":"     * Prints a horizontal line.","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"saintzaw"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"saintzaw"},"content":"    public void printLine() {","lastModifiedDate":"2023-02-19"},{"lineNumber":20,"author":{"gitId":"saintzaw"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"saintzaw"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"saintzaw"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"saintzaw"},"content":"     * Loads the data from the text file when Duke starts up and writes the","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"saintzaw"},"content":"     * existing data into the list of tasks.","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"saintzaw"},"content":"     * @throws FileNotFoundException when the text file \"data/duke.txt\" is","lastModifiedDate":"2023-02-19"},{"lineNumber":27,"author":{"gitId":"saintzaw"},"content":"     * not found.","lastModifiedDate":"2023-02-19"},{"lineNumber":28,"author":{"gitId":"saintzaw"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":29,"author":{"gitId":"saintzaw"},"content":"    public void loadData() throws FileNotFoundException {","lastModifiedDate":"2023-02-19"},{"lineNumber":30,"author":{"gitId":"saintzaw"},"content":"        String filePath \u003d \"data/duke.txt\";","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"saintzaw"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"saintzaw"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"saintzaw"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"saintzaw"},"content":"            String str \u003d s.nextLine();","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"saintzaw"},"content":"            convertFromData(str);","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"saintzaw"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"saintzaw"},"content":"        System.out.println(\"Saved data has been loaded!\");","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"saintzaw"},"content":"        printLine();","lastModifiedDate":"2023-02-19"},{"lineNumber":39,"author":{"gitId":"saintzaw"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"saintzaw"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":42,"author":{"gitId":"saintzaw"},"content":"     * Attempts to load the data from the text file into the list of tasks.","lastModifiedDate":"2023-02-19"},{"lineNumber":43,"author":{"gitId":"saintzaw"},"content":"     * Attempts to create the text file for the user if it is not found.","lastModifiedDate":"2023-02-19"},{"lineNumber":44,"author":{"gitId":"saintzaw"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":45,"author":{"gitId":"saintzaw"},"content":"    public void load() {","lastModifiedDate":"2023-02-19"},{"lineNumber":46,"author":{"gitId":"saintzaw"},"content":"        try {","lastModifiedDate":"2023-02-17"},{"lineNumber":47,"author":{"gitId":"saintzaw"},"content":"            loadData();","lastModifiedDate":"2023-02-17"},{"lineNumber":48,"author":{"gitId":"saintzaw"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":49,"author":{"gitId":"saintzaw"},"content":"            System.out.println(\"â˜¹ OOPS!!! The file does not exist. Creating a new file.\");","lastModifiedDate":"2023-02-17"},{"lineNumber":50,"author":{"gitId":"saintzaw"},"content":"            String pathName \u003d \"data\";","lastModifiedDate":"2023-02-17"},{"lineNumber":51,"author":{"gitId":"saintzaw"},"content":"            String filePath \u003d \"data/duke.txt\";","lastModifiedDate":"2023-02-17"},{"lineNumber":52,"author":{"gitId":"saintzaw"},"content":"            File directory \u003d new File(pathName);","lastModifiedDate":"2023-02-17"},{"lineNumber":53,"author":{"gitId":"saintzaw"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2023-02-17"},{"lineNumber":54,"author":{"gitId":"saintzaw"},"content":"            if (!directory.exists()) {","lastModifiedDate":"2023-02-17"},{"lineNumber":55,"author":{"gitId":"saintzaw"},"content":"                if (directory.mkdirs()) {","lastModifiedDate":"2023-02-19"},{"lineNumber":56,"author":{"gitId":"saintzaw"},"content":"                    System.out.println(\"Directory created.\");","lastModifiedDate":"2023-02-19"},{"lineNumber":57,"author":{"gitId":"saintzaw"},"content":"                } else {","lastModifiedDate":"2023-02-19"},{"lineNumber":58,"author":{"gitId":"saintzaw"},"content":"                    System.out.println(\"Directory already exists.\");","lastModifiedDate":"2023-02-19"},{"lineNumber":59,"author":{"gitId":"saintzaw"},"content":"                }","lastModifiedDate":"2023-02-19"},{"lineNumber":60,"author":{"gitId":"saintzaw"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":61,"author":{"gitId":"saintzaw"},"content":"            try {","lastModifiedDate":"2023-02-17"},{"lineNumber":62,"author":{"gitId":"saintzaw"},"content":"                if (file.createNewFile()) {","lastModifiedDate":"2023-02-19"},{"lineNumber":63,"author":{"gitId":"saintzaw"},"content":"                    System.out.println(\"Now your data will be saved in the file. Please proceed!\");","lastModifiedDate":"2023-02-17"},{"lineNumber":64,"author":{"gitId":"saintzaw"},"content":"                } else {","lastModifiedDate":"2023-02-19"},{"lineNumber":65,"author":{"gitId":"saintzaw"},"content":"                    System.out.println(\"File already exists.\");","lastModifiedDate":"2023-02-19"},{"lineNumber":66,"author":{"gitId":"saintzaw"},"content":"                }","lastModifiedDate":"2023-02-19"},{"lineNumber":67,"author":{"gitId":"saintzaw"},"content":"                printLine();","lastModifiedDate":"2023-02-17"},{"lineNumber":68,"author":{"gitId":"saintzaw"},"content":"            } catch (IOException exception) {","lastModifiedDate":"2023-02-17"},{"lineNumber":69,"author":{"gitId":"saintzaw"},"content":"                System.out.println(\"Error while creating the file. Your data won\u0027t be saved :(\");","lastModifiedDate":"2023-02-19"},{"lineNumber":70,"author":{"gitId":"saintzaw"},"content":"                printLine();","lastModifiedDate":"2023-02-17"},{"lineNumber":71,"author":{"gitId":"saintzaw"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":72,"author":{"gitId":"saintzaw"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":73,"author":{"gitId":"saintzaw"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":74,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":75,"author":{"gitId":"saintzaw"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":76,"author":{"gitId":"saintzaw"},"content":"     * Saves the tasks in the current list of tasks automatically whenever","lastModifiedDate":"2023-02-19"},{"lineNumber":77,"author":{"gitId":"saintzaw"},"content":"     * a new change is made to the task list. Ensures that user\u0027s data is","lastModifiedDate":"2023-02-19"},{"lineNumber":78,"author":{"gitId":"saintzaw"},"content":"     * saved even if the program crashes.","lastModifiedDate":"2023-02-19"},{"lineNumber":79,"author":{"gitId":"saintzaw"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":80,"author":{"gitId":"saintzaw"},"content":"    public void saveData() {","lastModifiedDate":"2023-02-19"},{"lineNumber":81,"author":{"gitId":"saintzaw"},"content":"        String filePath \u003d \"data/duke.txt\";","lastModifiedDate":"2023-02-17"},{"lineNumber":82,"author":{"gitId":"saintzaw"},"content":"        try {","lastModifiedDate":"2023-02-17"},{"lineNumber":83,"author":{"gitId":"saintzaw"},"content":"            writeToFile(filePath, convertToData(Task.tasks.get(0)) + System.lineSeparator());","lastModifiedDate":"2023-02-17"},{"lineNumber":84,"author":{"gitId":"saintzaw"},"content":"            for (int i \u003d 1; i \u003c Task.tasks.size(); i++) {","lastModifiedDate":"2023-02-17"},{"lineNumber":85,"author":{"gitId":"saintzaw"},"content":"                appendToFile(filePath, convertToData(Task.tasks.get(i)) + System.lineSeparator());","lastModifiedDate":"2023-02-17"},{"lineNumber":86,"author":{"gitId":"saintzaw"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":87,"author":{"gitId":"saintzaw"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":88,"author":{"gitId":"saintzaw"},"content":"            System.out.println(\"Something went wrong.\");","lastModifiedDate":"2023-02-20"},{"lineNumber":89,"author":{"gitId":"saintzaw"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":90,"author":{"gitId":"saintzaw"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":91,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":92,"author":{"gitId":"saintzaw"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":93,"author":{"gitId":"saintzaw"},"content":"     * Converts data from inside the text file into a Task object before","lastModifiedDate":"2023-02-19"},{"lineNumber":94,"author":{"gitId":"saintzaw"},"content":"     * loading the data into the task list.","lastModifiedDate":"2023-02-19"},{"lineNumber":95,"author":{"gitId":"saintzaw"},"content":"     * @param str Task to be loaded from text file into task list.","lastModifiedDate":"2023-02-19"},{"lineNumber":96,"author":{"gitId":"saintzaw"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":97,"author":{"gitId":"saintzaw"},"content":"    public void convertFromData(String str) {","lastModifiedDate":"2023-02-19"},{"lineNumber":98,"author":{"gitId":"saintzaw"},"content":"        String[] task \u003d str.split(\"\\\\|\");","lastModifiedDate":"2023-02-17"},{"lineNumber":99,"author":{"gitId":"saintzaw"},"content":"        Character c \u003d task[0].charAt(0); //check if task is a To-do, Deadline or Event","lastModifiedDate":"2023-02-17"},{"lineNumber":100,"author":{"gitId":"saintzaw"},"content":"        Character marked \u003d task[1].charAt(1); //check if task is marked done or not","lastModifiedDate":"2023-02-17"},{"lineNumber":101,"author":{"gitId":"saintzaw"},"content":"        if (c.equals(\u0027T\u0027)) {","lastModifiedDate":"2023-02-17"},{"lineNumber":102,"author":{"gitId":"saintzaw"},"content":"            String description \u003d task[2].substring(1);","lastModifiedDate":"2023-02-17"},{"lineNumber":103,"author":{"gitId":"saintzaw"},"content":"            Task t \u003d new Todo(description);","lastModifiedDate":"2023-02-17"},{"lineNumber":104,"author":{"gitId":"saintzaw"},"content":"            Task.tasks.add(Task.taskCount, t);","lastModifiedDate":"2023-02-17"},{"lineNumber":105,"author":{"gitId":"saintzaw"},"content":"            Task.taskCount++;","lastModifiedDate":"2023-02-17"},{"lineNumber":106,"author":{"gitId":"saintzaw"},"content":"            if (marked.equals(\u00271\u0027)) {","lastModifiedDate":"2023-02-17"},{"lineNumber":107,"author":{"gitId":"saintzaw"},"content":"                t.markAsDone();","lastModifiedDate":"2023-02-17"},{"lineNumber":108,"author":{"gitId":"saintzaw"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":109,"author":{"gitId":"saintzaw"},"content":"        } else if (c.equals(\u0027D\u0027)) {","lastModifiedDate":"2023-02-17"},{"lineNumber":110,"author":{"gitId":"saintzaw"},"content":"            String description \u003d task[2].substring(1,(task[2].length()-1));","lastModifiedDate":"2023-02-17"},{"lineNumber":111,"author":{"gitId":"saintzaw"},"content":"            String deadline \u003d task[3].substring(1);","lastModifiedDate":"2023-02-17"},{"lineNumber":112,"author":{"gitId":"saintzaw"},"content":"            Task t \u003d new Deadline(description, deadline);","lastModifiedDate":"2023-02-17"},{"lineNumber":113,"author":{"gitId":"saintzaw"},"content":"            Task.tasks.add(Task.taskCount, t);","lastModifiedDate":"2023-02-17"},{"lineNumber":114,"author":{"gitId":"saintzaw"},"content":"            Task.taskCount++;","lastModifiedDate":"2023-02-17"},{"lineNumber":115,"author":{"gitId":"saintzaw"},"content":"            if (marked.equals(\u00271\u0027)) {","lastModifiedDate":"2023-02-17"},{"lineNumber":116,"author":{"gitId":"saintzaw"},"content":"                t.markAsDone();","lastModifiedDate":"2023-02-17"},{"lineNumber":117,"author":{"gitId":"saintzaw"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":118,"author":{"gitId":"saintzaw"},"content":"        } else {","lastModifiedDate":"2023-02-17"},{"lineNumber":119,"author":{"gitId":"saintzaw"},"content":"            String description \u003d task[2].substring(1,(task[2].length()-1));","lastModifiedDate":"2023-02-17"},{"lineNumber":120,"author":{"gitId":"saintzaw"},"content":"            String event \u003d task[3].substring(1);","lastModifiedDate":"2023-02-17"},{"lineNumber":121,"author":{"gitId":"saintzaw"},"content":"            String[] duration \u003d event.split(\"-\");","lastModifiedDate":"2023-02-17"},{"lineNumber":122,"author":{"gitId":"saintzaw"},"content":"            Task t \u003d new Event(description, duration[0], duration[1]);","lastModifiedDate":"2023-02-17"},{"lineNumber":123,"author":{"gitId":"saintzaw"},"content":"            Task.tasks.add(Task.taskCount, t);","lastModifiedDate":"2023-02-17"},{"lineNumber":124,"author":{"gitId":"saintzaw"},"content":"            Task.taskCount++;","lastModifiedDate":"2023-02-17"},{"lineNumber":125,"author":{"gitId":"saintzaw"},"content":"            if (marked.equals(\u00271\u0027)) {","lastModifiedDate":"2023-02-17"},{"lineNumber":126,"author":{"gitId":"saintzaw"},"content":"                t.markAsDone();","lastModifiedDate":"2023-02-17"},{"lineNumber":127,"author":{"gitId":"saintzaw"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":128,"author":{"gitId":"saintzaw"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":129,"author":{"gitId":"saintzaw"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":130,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":131,"author":{"gitId":"saintzaw"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":132,"author":{"gitId":"saintzaw"},"content":"     * Converts a task from inside the task list into the correct format for","lastModifiedDate":"2023-02-19"},{"lineNumber":133,"author":{"gitId":"saintzaw"},"content":"     * saving the task in the text file.","lastModifiedDate":"2023-02-19"},{"lineNumber":134,"author":{"gitId":"saintzaw"},"content":"     * @param t Task to be saved from task list into text file.","lastModifiedDate":"2023-02-19"},{"lineNumber":135,"author":{"gitId":"saintzaw"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":136,"author":{"gitId":"saintzaw"},"content":"    public String convertToData(Task t) {","lastModifiedDate":"2023-02-19"},{"lineNumber":137,"author":{"gitId":"saintzaw"},"content":"        String str \u003d \"\"+t;","lastModifiedDate":"2023-02-17"},{"lineNumber":138,"author":{"gitId":"saintzaw"},"content":"        String data;","lastModifiedDate":"2023-02-17"},{"lineNumber":139,"author":{"gitId":"saintzaw"},"content":"        Character c \u003d str.charAt(1); //check if task is a To-do, Deadline or Event","lastModifiedDate":"2023-02-17"},{"lineNumber":140,"author":{"gitId":"saintzaw"},"content":"        Character marked \u003d str.charAt(4); //check if task is marked done or not","lastModifiedDate":"2023-02-17"},{"lineNumber":141,"author":{"gitId":"saintzaw"},"content":"        String task \u003d  str.substring(6);","lastModifiedDate":"2023-02-17"},{"lineNumber":142,"author":{"gitId":"saintzaw"},"content":"        if (c.equals(\u0027T\u0027)) {","lastModifiedDate":"2023-02-17"},{"lineNumber":143,"author":{"gitId":"saintzaw"},"content":"            if (marked.equals(\u0027X\u0027)) {","lastModifiedDate":"2023-02-17"},{"lineNumber":144,"author":{"gitId":"saintzaw"},"content":"                data \u003d (\"T | 1 |\" + task);","lastModifiedDate":"2023-02-17"},{"lineNumber":145,"author":{"gitId":"saintzaw"},"content":"            } else {","lastModifiedDate":"2023-02-17"},{"lineNumber":146,"author":{"gitId":"saintzaw"},"content":"                data \u003d (\"T | 0 |\" + task);","lastModifiedDate":"2023-02-17"},{"lineNumber":147,"author":{"gitId":"saintzaw"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":148,"author":{"gitId":"saintzaw"},"content":"        } else if (c.equals(\u0027D\u0027)) {","lastModifiedDate":"2023-02-17"},{"lineNumber":149,"author":{"gitId":"saintzaw"},"content":"            int openBracket \u003d task.indexOf(\"(\");","lastModifiedDate":"2023-02-17"},{"lineNumber":150,"author":{"gitId":"saintzaw"},"content":"            int closeBracket \u003d task.indexOf(\")\");","lastModifiedDate":"2023-02-17"},{"lineNumber":151,"author":{"gitId":"saintzaw"},"content":"            String description \u003d task.substring(0,openBracket);","lastModifiedDate":"2023-02-17"},{"lineNumber":152,"author":{"gitId":"saintzaw"},"content":"            String by \u003d task.substring(openBracket+1, closeBracket);","lastModifiedDate":"2023-02-17"},{"lineNumber":153,"author":{"gitId":"saintzaw"},"content":"            String[] deadline \u003d by.split(\"by: \");","lastModifiedDate":"2023-02-17"},{"lineNumber":154,"author":{"gitId":"saintzaw"},"content":"            if (marked.equals(\u0027X\u0027)) {","lastModifiedDate":"2023-02-17"},{"lineNumber":155,"author":{"gitId":"saintzaw"},"content":"                data \u003d (\"D | 1 |\" + description + \" | \" + deadline[1]);","lastModifiedDate":"2023-02-17"},{"lineNumber":156,"author":{"gitId":"saintzaw"},"content":"            } else {","lastModifiedDate":"2023-02-17"},{"lineNumber":157,"author":{"gitId":"saintzaw"},"content":"                data \u003d (\"D | 0 |\" + description + \" | \" + deadline[1]);","lastModifiedDate":"2023-02-17"},{"lineNumber":158,"author":{"gitId":"saintzaw"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":159,"author":{"gitId":"saintzaw"},"content":"        } else {","lastModifiedDate":"2023-02-17"},{"lineNumber":160,"author":{"gitId":"saintzaw"},"content":"            int openBracket \u003d task.indexOf(\"(\");","lastModifiedDate":"2023-02-17"},{"lineNumber":161,"author":{"gitId":"saintzaw"},"content":"            int closeBracket \u003d task.indexOf(\")\");","lastModifiedDate":"2023-02-17"},{"lineNumber":162,"author":{"gitId":"saintzaw"},"content":"            String description \u003d task.substring(0,openBracket);","lastModifiedDate":"2023-02-17"},{"lineNumber":163,"author":{"gitId":"saintzaw"},"content":"            String duration \u003d task.substring(openBracket+6, closeBracket);","lastModifiedDate":"2023-02-17"},{"lineNumber":164,"author":{"gitId":"saintzaw"},"content":"            String[] eventTime \u003d duration.split(\" to: \");","lastModifiedDate":"2023-02-17"},{"lineNumber":165,"author":{"gitId":"saintzaw"},"content":"            if (marked.equals(\u0027X\u0027)) {","lastModifiedDate":"2023-02-17"},{"lineNumber":166,"author":{"gitId":"saintzaw"},"content":"                data \u003d (\"E | 1 |\" + description + \" | \" + eventTime[0].substring(1) + \"-\" + eventTime[1]);","lastModifiedDate":"2023-02-17"},{"lineNumber":167,"author":{"gitId":"saintzaw"},"content":"            } else {","lastModifiedDate":"2023-02-17"},{"lineNumber":168,"author":{"gitId":"saintzaw"},"content":"                data \u003d (\"E | 0 |\" + description + \" | \" + eventTime[0].substring(1) + \"-\" + eventTime[1]);","lastModifiedDate":"2023-02-17"},{"lineNumber":169,"author":{"gitId":"saintzaw"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":170,"author":{"gitId":"saintzaw"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":171,"author":{"gitId":"saintzaw"},"content":"        return data;","lastModifiedDate":"2023-02-17"},{"lineNumber":172,"author":{"gitId":"saintzaw"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":173,"author":{"gitId":"saintzaw"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"saintzaw":173}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saintzaw"},"content":"import duke.*;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"saintzaw"},"content":"/**","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"saintzaw"},"content":" * Represents the task list and has operations to list tasks, find tasks,","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"saintzaw"},"content":" * mark and unmark tasks, delete tasks and add To-dos, Deadlines and Events.","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"saintzaw"},"content":" */","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"saintzaw"},"content":"public class TaskList {","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"saintzaw"},"content":"    private final Storage storage;","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"saintzaw"},"content":"    private final Ui ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"saintzaw"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"saintzaw"},"content":"     * Constructs new Storage object to handle saving of data into","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"saintzaw"},"content":"     * text file and new Ui object to handle some error messages.","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"saintzaw"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"saintzaw"},"content":"    public TaskList() {","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"saintzaw"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"saintzaw"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"saintzaw"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":20,"author":{"gitId":"saintzaw"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":21,"author":{"gitId":"saintzaw"},"content":"     * Prints a horizontal line.","lastModifiedDate":"2023-02-19"},{"lineNumber":22,"author":{"gitId":"saintzaw"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"saintzaw"},"content":"    public void printLine() {","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"saintzaw"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"saintzaw"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"saintzaw"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":28,"author":{"gitId":"saintzaw"},"content":"     * Prints out each task in the list of tasks.","lastModifiedDate":"2023-02-19"},{"lineNumber":29,"author":{"gitId":"saintzaw"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":30,"author":{"gitId":"saintzaw"},"content":"    public void listTasks() {","lastModifiedDate":"2023-02-19"},{"lineNumber":31,"author":{"gitId":"saintzaw"},"content":"        printLine();","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"saintzaw"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"saintzaw"},"content":"        int i \u003d 1;","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"saintzaw"},"content":"        int numOfTasks \u003d 0;","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"saintzaw"},"content":"        for (Task t : Task.tasks) {","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"saintzaw"},"content":"            System.out.println(i + \".\" + t);","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"saintzaw"},"content":"            i++;","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"saintzaw"},"content":"            numOfTasks++;","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"saintzaw"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"saintzaw"},"content":"        if (numOfTasks \u003d\u003d 0) {","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"saintzaw"},"content":"            System.out.println(\"Looks like your list is still empty\");","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"saintzaw"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"saintzaw"},"content":"        printLine();","lastModifiedDate":"2023-02-17"},{"lineNumber":44,"author":{"gitId":"saintzaw"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":45,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":46,"author":{"gitId":"saintzaw"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":47,"author":{"gitId":"saintzaw"},"content":"     * Finds a task by searching list of tasks for a keyword.","lastModifiedDate":"2023-02-19"},{"lineNumber":48,"author":{"gitId":"saintzaw"},"content":"     * Prints out all tasks with descriptions that contain the keyword.","lastModifiedDate":"2023-02-19"},{"lineNumber":49,"author":{"gitId":"saintzaw"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":50,"author":{"gitId":"saintzaw"},"content":"     * @param input The user command.","lastModifiedDate":"2023-02-19"},{"lineNumber":51,"author":{"gitId":"saintzaw"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":52,"author":{"gitId":"saintzaw"},"content":"    public void findTask(String[] input) {","lastModifiedDate":"2023-02-19"},{"lineNumber":53,"author":{"gitId":"saintzaw"},"content":"        try {","lastModifiedDate":"2023-02-17"},{"lineNumber":54,"author":{"gitId":"saintzaw"},"content":"            printLine();","lastModifiedDate":"2023-02-17"},{"lineNumber":55,"author":{"gitId":"saintzaw"},"content":"            String keyword \u003d input[1];","lastModifiedDate":"2023-02-17"},{"lineNumber":56,"author":{"gitId":"saintzaw"},"content":"            System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-02-17"},{"lineNumber":57,"author":{"gitId":"saintzaw"},"content":"            int i \u003d 1;","lastModifiedDate":"2023-02-17"},{"lineNumber":58,"author":{"gitId":"saintzaw"},"content":"            int numOfMatches \u003d 0;","lastModifiedDate":"2023-02-17"},{"lineNumber":59,"author":{"gitId":"saintzaw"},"content":"            for (Task t : Task.tasks) {","lastModifiedDate":"2023-02-17"},{"lineNumber":60,"author":{"gitId":"saintzaw"},"content":"                String s \u003d \"\" + t;","lastModifiedDate":"2023-02-17"},{"lineNumber":61,"author":{"gitId":"saintzaw"},"content":"                if (s.contains(keyword)) {","lastModifiedDate":"2023-02-17"},{"lineNumber":62,"author":{"gitId":"saintzaw"},"content":"                    System.out.println(i + \".\" + t);","lastModifiedDate":"2023-02-17"},{"lineNumber":63,"author":{"gitId":"saintzaw"},"content":"                    i++;","lastModifiedDate":"2023-02-17"},{"lineNumber":64,"author":{"gitId":"saintzaw"},"content":"                    numOfMatches++;","lastModifiedDate":"2023-02-17"},{"lineNumber":65,"author":{"gitId":"saintzaw"},"content":"                }","lastModifiedDate":"2023-02-17"},{"lineNumber":66,"author":{"gitId":"saintzaw"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":67,"author":{"gitId":"saintzaw"},"content":"            if (numOfMatches \u003d\u003d 0) {","lastModifiedDate":"2023-02-17"},{"lineNumber":68,"author":{"gitId":"saintzaw"},"content":"                System.out.println(\"I couldn\u0027t find any matching tasks :(\");","lastModifiedDate":"2023-02-17"},{"lineNumber":69,"author":{"gitId":"saintzaw"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":70,"author":{"gitId":"saintzaw"},"content":"            printLine();","lastModifiedDate":"2023-02-17"},{"lineNumber":71,"author":{"gitId":"saintzaw"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":72,"author":{"gitId":"saintzaw"},"content":"            System.out.println(\"â˜¹ OOPS!!! Keyword is missing. Please try again by giving me a keyword to look for.\");","lastModifiedDate":"2023-02-17"},{"lineNumber":73,"author":{"gitId":"saintzaw"},"content":"            printLine();","lastModifiedDate":"2023-02-17"},{"lineNumber":74,"author":{"gitId":"saintzaw"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":75,"author":{"gitId":"saintzaw"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":76,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":77,"author":{"gitId":"saintzaw"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":78,"author":{"gitId":"saintzaw"},"content":"     * Marks a task as done.","lastModifiedDate":"2023-02-19"},{"lineNumber":79,"author":{"gitId":"saintzaw"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":80,"author":{"gitId":"saintzaw"},"content":"     * @param input The user command.","lastModifiedDate":"2023-02-19"},{"lineNumber":81,"author":{"gitId":"saintzaw"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":82,"author":{"gitId":"saintzaw"},"content":"    public void markTask(String[] input) {","lastModifiedDate":"2023-02-19"},{"lineNumber":83,"author":{"gitId":"saintzaw"},"content":"        try {","lastModifiedDate":"2023-02-17"},{"lineNumber":84,"author":{"gitId":"saintzaw"},"content":"            int index \u003d Integer.parseInt(input[1]);","lastModifiedDate":"2023-02-17"},{"lineNumber":85,"author":{"gitId":"saintzaw"},"content":"            if (index \u003c 1 || index \u003e Task.taskCount) {","lastModifiedDate":"2023-02-17"},{"lineNumber":86,"author":{"gitId":"saintzaw"},"content":"                throw new DukeException();","lastModifiedDate":"2023-02-17"},{"lineNumber":87,"author":{"gitId":"saintzaw"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":88,"author":{"gitId":"saintzaw"},"content":"            Task t \u003d duke.Task.tasks.get(index - 1);","lastModifiedDate":"2023-02-17"},{"lineNumber":89,"author":{"gitId":"saintzaw"},"content":"            t.markAsDone();","lastModifiedDate":"2023-02-17"},{"lineNumber":90,"author":{"gitId":"saintzaw"},"content":"            storage.saveData();","lastModifiedDate":"2023-02-19"},{"lineNumber":91,"author":{"gitId":"saintzaw"},"content":"            printLine();","lastModifiedDate":"2023-02-17"},{"lineNumber":92,"author":{"gitId":"saintzaw"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-02-17"},{"lineNumber":93,"author":{"gitId":"saintzaw"},"content":"            System.out.println(t);","lastModifiedDate":"2023-02-17"},{"lineNumber":94,"author":{"gitId":"saintzaw"},"content":"            printLine();","lastModifiedDate":"2023-02-17"},{"lineNumber":95,"author":{"gitId":"saintzaw"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":96,"author":{"gitId":"saintzaw"},"content":"            ui.handleNumberFormatException();","lastModifiedDate":"2023-02-20"},{"lineNumber":97,"author":{"gitId":"saintzaw"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":98,"author":{"gitId":"saintzaw"},"content":"           ui.handleIndexOutOfBoundsException();","lastModifiedDate":"2023-02-20"},{"lineNumber":99,"author":{"gitId":"saintzaw"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":100,"author":{"gitId":"saintzaw"},"content":"           ui.handleDukeException();","lastModifiedDate":"2023-02-20"},{"lineNumber":101,"author":{"gitId":"saintzaw"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":102,"author":{"gitId":"saintzaw"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":103,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":104,"author":{"gitId":"saintzaw"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":105,"author":{"gitId":"saintzaw"},"content":"     * Marks a task as not done.","lastModifiedDate":"2023-02-19"},{"lineNumber":106,"author":{"gitId":"saintzaw"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":107,"author":{"gitId":"saintzaw"},"content":"     * @param input The user command.","lastModifiedDate":"2023-02-19"},{"lineNumber":108,"author":{"gitId":"saintzaw"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":109,"author":{"gitId":"saintzaw"},"content":"    public void unmarkTask(String[] input) {","lastModifiedDate":"2023-02-19"},{"lineNumber":110,"author":{"gitId":"saintzaw"},"content":"        try {","lastModifiedDate":"2023-02-17"},{"lineNumber":111,"author":{"gitId":"saintzaw"},"content":"            int index \u003d Integer.parseInt(input[1]);","lastModifiedDate":"2023-02-17"},{"lineNumber":112,"author":{"gitId":"saintzaw"},"content":"            if (index \u003c 1 || index \u003e Task.taskCount) {","lastModifiedDate":"2023-02-17"},{"lineNumber":113,"author":{"gitId":"saintzaw"},"content":"                throw new DukeException();","lastModifiedDate":"2023-02-17"},{"lineNumber":114,"author":{"gitId":"saintzaw"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":115,"author":{"gitId":"saintzaw"},"content":"            Task t \u003d duke.Task.tasks.get(index - 1);","lastModifiedDate":"2023-02-17"},{"lineNumber":116,"author":{"gitId":"saintzaw"},"content":"            t.markNotDone();","lastModifiedDate":"2023-02-17"},{"lineNumber":117,"author":{"gitId":"saintzaw"},"content":"            storage.saveData();","lastModifiedDate":"2023-02-19"},{"lineNumber":118,"author":{"gitId":"saintzaw"},"content":"            printLine();","lastModifiedDate":"2023-02-17"},{"lineNumber":119,"author":{"gitId":"saintzaw"},"content":"            System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-02-17"},{"lineNumber":120,"author":{"gitId":"saintzaw"},"content":"            System.out.println(t);","lastModifiedDate":"2023-02-17"},{"lineNumber":121,"author":{"gitId":"saintzaw"},"content":"            printLine();","lastModifiedDate":"2023-02-17"},{"lineNumber":122,"author":{"gitId":"saintzaw"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":123,"author":{"gitId":"saintzaw"},"content":"            ui.handleNumberFormatException();","lastModifiedDate":"2023-02-20"},{"lineNumber":124,"author":{"gitId":"saintzaw"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":125,"author":{"gitId":"saintzaw"},"content":"           ui.handleIndexOutOfBoundsException();","lastModifiedDate":"2023-02-20"},{"lineNumber":126,"author":{"gitId":"saintzaw"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":127,"author":{"gitId":"saintzaw"},"content":"            ui.handleDukeException();","lastModifiedDate":"2023-02-20"},{"lineNumber":128,"author":{"gitId":"saintzaw"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":129,"author":{"gitId":"saintzaw"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":130,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":131,"author":{"gitId":"saintzaw"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":132,"author":{"gitId":"saintzaw"},"content":"     * Deletes a task from the list of tasks.","lastModifiedDate":"2023-02-19"},{"lineNumber":133,"author":{"gitId":"saintzaw"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":134,"author":{"gitId":"saintzaw"},"content":"     * @param input The user command.","lastModifiedDate":"2023-02-19"},{"lineNumber":135,"author":{"gitId":"saintzaw"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":136,"author":{"gitId":"saintzaw"},"content":"    public void deleteTask(String[] input) {","lastModifiedDate":"2023-02-19"},{"lineNumber":137,"author":{"gitId":"saintzaw"},"content":"        try {","lastModifiedDate":"2023-02-17"},{"lineNumber":138,"author":{"gitId":"saintzaw"},"content":"            int index \u003d Integer.parseInt(input[1]);","lastModifiedDate":"2023-02-17"},{"lineNumber":139,"author":{"gitId":"saintzaw"},"content":"            if (index \u003c 1 || index \u003e Task.taskCount) {","lastModifiedDate":"2023-02-17"},{"lineNumber":140,"author":{"gitId":"saintzaw"},"content":"                throw new DukeException();","lastModifiedDate":"2023-02-17"},{"lineNumber":141,"author":{"gitId":"saintzaw"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":142,"author":{"gitId":"saintzaw"},"content":"            Task t \u003d duke.Task.tasks.get(index - 1);","lastModifiedDate":"2023-02-17"},{"lineNumber":143,"author":{"gitId":"saintzaw"},"content":"            Task.tasks.remove(index - 1);","lastModifiedDate":"2023-02-17"},{"lineNumber":144,"author":{"gitId":"saintzaw"},"content":"            Task.taskCount--;","lastModifiedDate":"2023-02-17"},{"lineNumber":145,"author":{"gitId":"saintzaw"},"content":"            storage.saveData();","lastModifiedDate":"2023-02-19"},{"lineNumber":146,"author":{"gitId":"saintzaw"},"content":"            printLine();","lastModifiedDate":"2023-02-17"},{"lineNumber":147,"author":{"gitId":"saintzaw"},"content":"            System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-02-17"},{"lineNumber":148,"author":{"gitId":"saintzaw"},"content":"            System.out.println(t);","lastModifiedDate":"2023-02-17"},{"lineNumber":149,"author":{"gitId":"saintzaw"},"content":"            System.out.println(\"Now you have \" + Task.taskCount + \" tasks in the list.\");","lastModifiedDate":"2023-02-17"},{"lineNumber":150,"author":{"gitId":"saintzaw"},"content":"            printLine();","lastModifiedDate":"2023-02-17"},{"lineNumber":151,"author":{"gitId":"saintzaw"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":152,"author":{"gitId":"saintzaw"},"content":"            ui.handleNumberFormatException();","lastModifiedDate":"2023-02-20"},{"lineNumber":153,"author":{"gitId":"saintzaw"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":154,"author":{"gitId":"saintzaw"},"content":"            ui.handleIndexOutOfBoundsException();","lastModifiedDate":"2023-02-20"},{"lineNumber":155,"author":{"gitId":"saintzaw"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":156,"author":{"gitId":"saintzaw"},"content":"            ui.handleDukeException();","lastModifiedDate":"2023-02-20"},{"lineNumber":157,"author":{"gitId":"saintzaw"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":158,"author":{"gitId":"saintzaw"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":159,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":160,"author":{"gitId":"saintzaw"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":161,"author":{"gitId":"saintzaw"},"content":"     * Adds a To-do object to the list of tasks.","lastModifiedDate":"2023-02-19"},{"lineNumber":162,"author":{"gitId":"saintzaw"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":163,"author":{"gitId":"saintzaw"},"content":"     * @param input The user command.","lastModifiedDate":"2023-02-19"},{"lineNumber":164,"author":{"gitId":"saintzaw"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":165,"author":{"gitId":"saintzaw"},"content":"    public void addTodo(String[] input) {","lastModifiedDate":"2023-02-19"},{"lineNumber":166,"author":{"gitId":"saintzaw"},"content":"        try {","lastModifiedDate":"2023-02-17"},{"lineNumber":167,"author":{"gitId":"saintzaw"},"content":"            if (input[1].isBlank()) {","lastModifiedDate":"2023-02-20"},{"lineNumber":168,"author":{"gitId":"saintzaw"},"content":"                throw new DukeException();","lastModifiedDate":"2023-02-17"},{"lineNumber":169,"author":{"gitId":"saintzaw"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":170,"author":{"gitId":"saintzaw"},"content":"            Task t \u003d new Todo(input[1]);","lastModifiedDate":"2023-02-17"},{"lineNumber":171,"author":{"gitId":"saintzaw"},"content":"            Task.tasks.add(Task.taskCount, t);","lastModifiedDate":"2023-02-17"},{"lineNumber":172,"author":{"gitId":"saintzaw"},"content":"            Task.taskCount++;","lastModifiedDate":"2023-02-17"},{"lineNumber":173,"author":{"gitId":"saintzaw"},"content":"            storage.saveData();","lastModifiedDate":"2023-02-19"},{"lineNumber":174,"author":{"gitId":"saintzaw"},"content":"            printLine();","lastModifiedDate":"2023-02-17"},{"lineNumber":175,"author":{"gitId":"saintzaw"},"content":"            System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-02-17"},{"lineNumber":176,"author":{"gitId":"saintzaw"},"content":"            System.out.println(t);","lastModifiedDate":"2023-02-17"},{"lineNumber":177,"author":{"gitId":"saintzaw"},"content":"            System.out.println(\"Now you have \" + Task.taskCount + \" tasks in the list.\");","lastModifiedDate":"2023-02-17"},{"lineNumber":178,"author":{"gitId":"saintzaw"},"content":"            printLine();","lastModifiedDate":"2023-02-17"},{"lineNumber":179,"author":{"gitId":"saintzaw"},"content":"        } catch (IndexOutOfBoundsException | DukeException e) {","lastModifiedDate":"2023-02-20"},{"lineNumber":180,"author":{"gitId":"saintzaw"},"content":"            ui.printErrorMessage();","lastModifiedDate":"2023-02-20"},{"lineNumber":181,"author":{"gitId":"saintzaw"},"content":"            ui.printTodoFormat();","lastModifiedDate":"2023-02-20"},{"lineNumber":182,"author":{"gitId":"saintzaw"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":183,"author":{"gitId":"saintzaw"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":184,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":185,"author":{"gitId":"saintzaw"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":186,"author":{"gitId":"saintzaw"},"content":"     * Adds a Deadline object to the list of tasks.","lastModifiedDate":"2023-02-19"},{"lineNumber":187,"author":{"gitId":"saintzaw"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":188,"author":{"gitId":"saintzaw"},"content":"     * @param input The user command.","lastModifiedDate":"2023-02-19"},{"lineNumber":189,"author":{"gitId":"saintzaw"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":190,"author":{"gitId":"saintzaw"},"content":"    public void addDeadline(String[] input){","lastModifiedDate":"2023-02-19"},{"lineNumber":191,"author":{"gitId":"saintzaw"},"content":"        try {","lastModifiedDate":"2023-02-17"},{"lineNumber":192,"author":{"gitId":"saintzaw"},"content":"            if (input[1].isBlank()) {","lastModifiedDate":"2023-02-20"},{"lineNumber":193,"author":{"gitId":"saintzaw"},"content":"                throw new DukeException();","lastModifiedDate":"2023-02-17"},{"lineNumber":194,"author":{"gitId":"saintzaw"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":195,"author":{"gitId":"saintzaw"},"content":"            String[] doBy \u003d input[1].split(\" /by \", 2);","lastModifiedDate":"2023-02-17"},{"lineNumber":196,"author":{"gitId":"saintzaw"},"content":"            Task t \u003d new Deadline(doBy[0], doBy[1]);","lastModifiedDate":"2023-02-17"},{"lineNumber":197,"author":{"gitId":"saintzaw"},"content":"            Task.tasks.add(Task.taskCount, t);","lastModifiedDate":"2023-02-17"},{"lineNumber":198,"author":{"gitId":"saintzaw"},"content":"            Task.taskCount++;","lastModifiedDate":"2023-02-17"},{"lineNumber":199,"author":{"gitId":"saintzaw"},"content":"            storage.saveData();","lastModifiedDate":"2023-02-19"},{"lineNumber":200,"author":{"gitId":"saintzaw"},"content":"            printLine();","lastModifiedDate":"2023-02-17"},{"lineNumber":201,"author":{"gitId":"saintzaw"},"content":"            System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-02-17"},{"lineNumber":202,"author":{"gitId":"saintzaw"},"content":"            System.out.println(t);","lastModifiedDate":"2023-02-17"},{"lineNumber":203,"author":{"gitId":"saintzaw"},"content":"            System.out.println(\"Now you have \" + Task.taskCount + \" tasks in the list.\");","lastModifiedDate":"2023-02-17"},{"lineNumber":204,"author":{"gitId":"saintzaw"},"content":"            printLine();","lastModifiedDate":"2023-02-17"},{"lineNumber":205,"author":{"gitId":"saintzaw"},"content":"        } catch (IndexOutOfBoundsException | DukeException e) {","lastModifiedDate":"2023-02-20"},{"lineNumber":206,"author":{"gitId":"saintzaw"},"content":"            ui.printErrorMessage();","lastModifiedDate":"2023-02-20"},{"lineNumber":207,"author":{"gitId":"saintzaw"},"content":"            ui.printDeadlineFormat();","lastModifiedDate":"2023-02-20"},{"lineNumber":208,"author":{"gitId":"saintzaw"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":209,"author":{"gitId":"saintzaw"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":210,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":211,"author":{"gitId":"saintzaw"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":212,"author":{"gitId":"saintzaw"},"content":"     * Adds an Event object to the list of tasks.","lastModifiedDate":"2023-02-19"},{"lineNumber":213,"author":{"gitId":"saintzaw"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":214,"author":{"gitId":"saintzaw"},"content":"     * @param input The user command.","lastModifiedDate":"2023-02-19"},{"lineNumber":215,"author":{"gitId":"saintzaw"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":216,"author":{"gitId":"saintzaw"},"content":"    public void addEvent(String[] input){","lastModifiedDate":"2023-02-19"},{"lineNumber":217,"author":{"gitId":"saintzaw"},"content":"        try {","lastModifiedDate":"2023-02-17"},{"lineNumber":218,"author":{"gitId":"saintzaw"},"content":"            if (input[1].isBlank()) {","lastModifiedDate":"2023-02-20"},{"lineNumber":219,"author":{"gitId":"saintzaw"},"content":"                throw new DukeException();","lastModifiedDate":"2023-02-17"},{"lineNumber":220,"author":{"gitId":"saintzaw"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":221,"author":{"gitId":"saintzaw"},"content":"            String[] start \u003d input[1].split(\" /from \", 2);","lastModifiedDate":"2023-02-17"},{"lineNumber":222,"author":{"gitId":"saintzaw"},"content":"            String[] end \u003d start[1].split(\" /to \", 2);","lastModifiedDate":"2023-02-17"},{"lineNumber":223,"author":{"gitId":"saintzaw"},"content":"            Task t \u003d new Event(start[0], end[0], end[1] );","lastModifiedDate":"2023-02-17"},{"lineNumber":224,"author":{"gitId":"saintzaw"},"content":"            Task.tasks.add(Task.taskCount, t);","lastModifiedDate":"2023-02-17"},{"lineNumber":225,"author":{"gitId":"saintzaw"},"content":"            Task.taskCount++;","lastModifiedDate":"2023-02-17"},{"lineNumber":226,"author":{"gitId":"saintzaw"},"content":"            storage.saveData();","lastModifiedDate":"2023-02-19"},{"lineNumber":227,"author":{"gitId":"saintzaw"},"content":"            printLine();","lastModifiedDate":"2023-02-17"},{"lineNumber":228,"author":{"gitId":"saintzaw"},"content":"            System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-02-17"},{"lineNumber":229,"author":{"gitId":"saintzaw"},"content":"            System.out.println(t);","lastModifiedDate":"2023-02-17"},{"lineNumber":230,"author":{"gitId":"saintzaw"},"content":"            System.out.println(\"Now you have \" + Task.taskCount + \" tasks in the list.\");","lastModifiedDate":"2023-02-17"},{"lineNumber":231,"author":{"gitId":"saintzaw"},"content":"            printLine();","lastModifiedDate":"2023-02-17"},{"lineNumber":232,"author":{"gitId":"saintzaw"},"content":"        } catch (IndexOutOfBoundsException | DukeException e) {","lastModifiedDate":"2023-02-20"},{"lineNumber":233,"author":{"gitId":"saintzaw"},"content":"            ui.printErrorMessage();","lastModifiedDate":"2023-02-20"},{"lineNumber":234,"author":{"gitId":"saintzaw"},"content":"            ui.printEventFormat();","lastModifiedDate":"2023-02-20"},{"lineNumber":235,"author":{"gitId":"saintzaw"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":236,"author":{"gitId":"saintzaw"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":237,"author":{"gitId":"saintzaw"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"saintzaw":237}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saintzaw"},"content":"/**","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"saintzaw"},"content":" * Represents messages printed by Duke for interactions with the user.","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"saintzaw"},"content":" */","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"saintzaw"},"content":"public class Ui {","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"saintzaw"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"saintzaw"},"content":"     * Prints a horizontal line.","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"saintzaw"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"saintzaw"},"content":"    public void printLine() {","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"saintzaw"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"saintzaw"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"saintzaw"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"saintzaw"},"content":"     * Greets the user at the start of the program.","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"saintzaw"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"saintzaw"},"content":"    public void greetUser() {","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"saintzaw"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"saintzaw"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"saintzaw"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"saintzaw"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"saintzaw"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"saintzaw"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"saintzaw"},"content":"        printLine();","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"saintzaw"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"saintzaw"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"saintzaw"},"content":"        printLine();","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"saintzaw"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"saintzaw"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":30,"author":{"gitId":"saintzaw"},"content":"     * Bids the user farewell when they exit the program.","lastModifiedDate":"2023-02-19"},{"lineNumber":31,"author":{"gitId":"saintzaw"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":32,"author":{"gitId":"saintzaw"},"content":"    public void sayBye() {","lastModifiedDate":"2023-02-19"},{"lineNumber":33,"author":{"gitId":"saintzaw"},"content":"        printLine();","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"saintzaw"},"content":"        System.out.println(\"Bye. Hope to see you again soon! :)\");","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"saintzaw"},"content":"        printLine();","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"saintzaw"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"saintzaw"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"saintzaw"},"content":"     * Prints a message to the user when the user command is unidentified.","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"saintzaw"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":41,"author":{"gitId":"saintzaw"},"content":"    public void handleUnidentifiedCommand() {","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"saintzaw"},"content":"        printLine();","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"saintzaw"},"content":"        System.out.println(\"â˜¹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means.\");","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"saintzaw"},"content":"        printLine();","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"saintzaw"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":46,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":47,"author":{"gitId":"saintzaw"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":48,"author":{"gitId":"saintzaw"},"content":"     * Prints error message when NumberFormatException is caught when attempting to","lastModifiedDate":"2023-02-20"},{"lineNumber":49,"author":{"gitId":"saintzaw"},"content":"     * mark a task as done or undone, or while deleting a task.","lastModifiedDate":"2023-02-20"},{"lineNumber":50,"author":{"gitId":"saintzaw"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":51,"author":{"gitId":"saintzaw"},"content":"    public void handleNumberFormatException() {","lastModifiedDate":"2023-02-20"},{"lineNumber":52,"author":{"gitId":"saintzaw"},"content":"        System.out.println(\"â˜¹ OOPS!!! Task number is invalid. Please try again.\");","lastModifiedDate":"2023-02-20"},{"lineNumber":53,"author":{"gitId":"saintzaw"},"content":"        printLine();","lastModifiedDate":"2023-02-20"},{"lineNumber":54,"author":{"gitId":"saintzaw"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":55,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":56,"author":{"gitId":"saintzaw"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":57,"author":{"gitId":"saintzaw"},"content":"     * Prints error message when IndexOutOfBoundsException is caught when attempting to","lastModifiedDate":"2023-02-20"},{"lineNumber":58,"author":{"gitId":"saintzaw"},"content":"     * mark a task as done or undone, or while deleting a task.","lastModifiedDate":"2023-02-20"},{"lineNumber":59,"author":{"gitId":"saintzaw"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":60,"author":{"gitId":"saintzaw"},"content":"    public void handleIndexOutOfBoundsException() {","lastModifiedDate":"2023-02-20"},{"lineNumber":61,"author":{"gitId":"saintzaw"},"content":"        System.out.println(\"â˜¹ OOPS!!! Task number is missing. Please try again. \");","lastModifiedDate":"2023-02-20"},{"lineNumber":62,"author":{"gitId":"saintzaw"},"content":"        printLine();","lastModifiedDate":"2023-02-20"},{"lineNumber":63,"author":{"gitId":"saintzaw"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":64,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":65,"author":{"gitId":"saintzaw"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":66,"author":{"gitId":"saintzaw"},"content":"     * Prints error message when DukeException is caught when attempting to","lastModifiedDate":"2023-02-20"},{"lineNumber":67,"author":{"gitId":"saintzaw"},"content":"     * mark a task as done or undone, or while deleting a task.","lastModifiedDate":"2023-02-20"},{"lineNumber":68,"author":{"gitId":"saintzaw"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":69,"author":{"gitId":"saintzaw"},"content":"    public void handleDukeException() {","lastModifiedDate":"2023-02-20"},{"lineNumber":70,"author":{"gitId":"saintzaw"},"content":"        System.out.println(\"â˜¹ OOPS!!! You entered an invalid task number. Please try again.\");","lastModifiedDate":"2023-02-20"},{"lineNumber":71,"author":{"gitId":"saintzaw"},"content":"        printLine();","lastModifiedDate":"2023-02-20"},{"lineNumber":72,"author":{"gitId":"saintzaw"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":73,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":74,"author":{"gitId":"saintzaw"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":75,"author":{"gitId":"saintzaw"},"content":"     * Prints error message when there is a missing task description for a To-do, Deadline","lastModifiedDate":"2023-02-20"},{"lineNumber":76,"author":{"gitId":"saintzaw"},"content":"     * or Event task or a missing attribute such as the due date for a Deadline or a start","lastModifiedDate":"2023-02-20"},{"lineNumber":77,"author":{"gitId":"saintzaw"},"content":"     * and end date/time for an Event.","lastModifiedDate":"2023-02-20"},{"lineNumber":78,"author":{"gitId":"saintzaw"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":79,"author":{"gitId":"saintzaw"},"content":"    public void printErrorMessage() {","lastModifiedDate":"2023-02-20"},{"lineNumber":80,"author":{"gitId":"saintzaw"},"content":"        printLine();","lastModifiedDate":"2023-02-20"},{"lineNumber":81,"author":{"gitId":"saintzaw"},"content":"        System.out.println(\"â˜¹ OOPS!!! There\u0027s something missing in your task description.\");","lastModifiedDate":"2023-02-20"},{"lineNumber":82,"author":{"gitId":"saintzaw"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":83,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":84,"author":{"gitId":"saintzaw"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":85,"author":{"gitId":"saintzaw"},"content":"     * Prints out the correct format for adding a To-do task.","lastModifiedDate":"2023-02-20"},{"lineNumber":86,"author":{"gitId":"saintzaw"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":87,"author":{"gitId":"saintzaw"},"content":"    public void printTodoFormat() {","lastModifiedDate":"2023-02-20"},{"lineNumber":88,"author":{"gitId":"saintzaw"},"content":"        System.out.println(\"Please follow this format: todo [description].\");","lastModifiedDate":"2023-02-20"},{"lineNumber":89,"author":{"gitId":"saintzaw"},"content":"        printLine();","lastModifiedDate":"2023-02-20"},{"lineNumber":90,"author":{"gitId":"saintzaw"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":91,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":92,"author":{"gitId":"saintzaw"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":93,"author":{"gitId":"saintzaw"},"content":"     * Prints out the correct format for adding a Deadline task.","lastModifiedDate":"2023-02-20"},{"lineNumber":94,"author":{"gitId":"saintzaw"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":95,"author":{"gitId":"saintzaw"},"content":"    public void printDeadlineFormat() {","lastModifiedDate":"2023-02-20"},{"lineNumber":96,"author":{"gitId":"saintzaw"},"content":"        System.out.println(\"Please follow this format: deadline [description] /by [due date/time]\");","lastModifiedDate":"2023-02-20"},{"lineNumber":97,"author":{"gitId":"saintzaw"},"content":"        printLine();","lastModifiedDate":"2023-02-20"},{"lineNumber":98,"author":{"gitId":"saintzaw"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":99,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":100,"author":{"gitId":"saintzaw"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":101,"author":{"gitId":"saintzaw"},"content":"     * Prints out the correct format for adding an Event task.","lastModifiedDate":"2023-02-20"},{"lineNumber":102,"author":{"gitId":"saintzaw"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":103,"author":{"gitId":"saintzaw"},"content":"    public void printEventFormat() {","lastModifiedDate":"2023-02-20"},{"lineNumber":104,"author":{"gitId":"saintzaw"},"content":"        System.out.println(\"Please follow this format: event [description] /from [start] /to [end]\");","lastModifiedDate":"2023-02-20"},{"lineNumber":105,"author":{"gitId":"saintzaw"},"content":"        printLine();","lastModifiedDate":"2023-02-20"},{"lineNumber":106,"author":{"gitId":"saintzaw"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":107,"author":{"gitId":"saintzaw"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"saintzaw":107}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saintzaw"},"content":"package duke;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"saintzaw"},"content":"/**","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"saintzaw"},"content":" * Represents a type of task that has a due date, which is indicated by","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"saintzaw"},"content":" * the user, by the delimiter \"/by\".","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"saintzaw"},"content":" */","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"saintzaw"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"saintzaw"},"content":"    protected String by;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"saintzaw"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"saintzaw"},"content":"     * Constructs a Deadline object that inherits from Task object, assigns the due date of task.","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"saintzaw"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"saintzaw"},"content":"     * @param description The description of the deadline.","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"saintzaw"},"content":"     * @param by The due date of the deadline.","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"saintzaw"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"saintzaw"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"saintzaw"},"content":"        super(description);","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"saintzaw"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-02-19"},{"lineNumber":20,"author":{"gitId":"saintzaw"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"saintzaw"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"saintzaw"},"content":"     * Prints Deadline object in a specific format.","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"saintzaw"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"saintzaw"},"content":"     * @return A string representing the Deadline object.","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"saintzaw"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":27,"author":{"gitId":"saintzaw"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"saintzaw"},"content":"    public String toString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"saintzaw"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + by + \")\";}","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"saintzaw"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"saintzaw":31}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saintzaw"},"content":"package duke;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"saintzaw"},"content":"/**","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"saintzaw"},"content":" * Represents an exception that is specific to the Duke chatbot.","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"saintzaw"},"content":" */","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"saintzaw"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"saintzaw"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"saintzaw":7}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saintzaw"},"content":"package duke;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"saintzaw"},"content":"/**","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"saintzaw"},"content":" * Represents a type of task that starts at a specific date/time and ends","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"saintzaw"},"content":" * at a specific date/time. The start and end date/time are indicated by","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"saintzaw"},"content":" * the user, by the delimiters \"/from\" and \"/to\".","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"saintzaw"},"content":" */","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"saintzaw"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"saintzaw"},"content":"    protected String start;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"saintzaw"},"content":"    protected String end;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"saintzaw"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"saintzaw"},"content":"     * Constructs an Event object that inherits from Task object, assigns the","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"saintzaw"},"content":"     * start and end date and/or time of task.","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"saintzaw"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"saintzaw"},"content":"     * @param description The description of the deadline.","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"saintzaw"},"content":"     * @param start The start date/time of the deadline.","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"saintzaw"},"content":"     * @param end The end date/time of the deadline.","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"saintzaw"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":20,"author":{"gitId":"saintzaw"},"content":"    public Event(String description, String start, String end) {","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"saintzaw"},"content":"        super(description);","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"saintzaw"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"saintzaw"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"saintzaw"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"saintzaw"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":27,"author":{"gitId":"saintzaw"},"content":"     * Prints Event object in a specific format.","lastModifiedDate":"2023-02-19"},{"lineNumber":28,"author":{"gitId":"saintzaw"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":29,"author":{"gitId":"saintzaw"},"content":"     * @return A string representing the Event object.","lastModifiedDate":"2023-02-19"},{"lineNumber":30,"author":{"gitId":"saintzaw"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":31,"author":{"gitId":"saintzaw"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"saintzaw"},"content":"    public String toString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"saintzaw"},"content":"        return \"[E]\" + super.toString() + \"(from: \" + start + \" to: \" + end + \")\";","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"saintzaw"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"saintzaw"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"saintzaw":35}},{"path":"src/main/java/duke/FileOperations.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saintzaw"},"content":"package duke;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"saintzaw"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"saintzaw"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"saintzaw"},"content":"/**","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"saintzaw"},"content":" * Represents file operations such as writing and appending to a file.","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"saintzaw"},"content":" */","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"saintzaw"},"content":"public class FileOperations {","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"saintzaw"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"saintzaw"},"content":"     * Writes a specific string to the file specified by the file path.","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"saintzaw"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"saintzaw"},"content":"     * @param filePath The file path which specifies which file to write to.","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"saintzaw"},"content":"     * @param textToAdd The string that is to be written into the file","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"saintzaw"},"content":"     * @throws IOException if the file specified by the file path is not found.","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"saintzaw"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"saintzaw"},"content":"    public static void writeToFile(String filePath, String textToAdd) throws IOException {","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"saintzaw"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"saintzaw"},"content":"        fw.write(textToAdd);","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"saintzaw"},"content":"        fw.close();","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"saintzaw"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"saintzaw"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"saintzaw"},"content":"     * Appends a specific string to the file specified by the file path.","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"saintzaw"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"saintzaw"},"content":"     * @param filePath The file path which specifies which file to append to.","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"saintzaw"},"content":"     * @param textToAppend The string that is to be appended into the file","lastModifiedDate":"2023-02-19"},{"lineNumber":27,"author":{"gitId":"saintzaw"},"content":"     * @throws IOException if the file specified by the file path is not found.","lastModifiedDate":"2023-02-19"},{"lineNumber":28,"author":{"gitId":"saintzaw"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":29,"author":{"gitId":"saintzaw"},"content":"    public static void appendToFile(String filePath, String textToAppend) throws IOException {","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"saintzaw"},"content":"        FileWriter fw \u003d new FileWriter(filePath, true);","lastModifiedDate":"2023-02-19"},{"lineNumber":31,"author":{"gitId":"saintzaw"},"content":"        fw.write(textToAppend);","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"saintzaw"},"content":"        fw.close();","lastModifiedDate":"2023-02-15"},{"lineNumber":33,"author":{"gitId":"saintzaw"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":34,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":35,"author":{"gitId":"saintzaw"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"saintzaw":35}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saintzaw"},"content":"package duke;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"saintzaw"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"saintzaw"},"content":"/**","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"saintzaw"},"content":" * Represents a Task that contains attributes like the task description and","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"saintzaw"},"content":" * an indication of whether the task has been completed.","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"saintzaw"},"content":" */","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"saintzaw"},"content":"public class Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"saintzaw"},"content":"    protected String description;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"saintzaw"},"content":"    protected boolean isDone \u003d false;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"saintzaw"},"content":"    public static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e(); //keep a collection of tasks","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"saintzaw"},"content":"    public static int taskCount \u003d 0; //keep track of number of tasks","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"saintzaw"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"saintzaw"},"content":"     * Constructs a Task object that contains the descriptions or details of a task.","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"saintzaw"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"saintzaw"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"saintzaw"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"saintzaw"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"saintzaw"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"saintzaw"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"saintzaw"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"saintzaw"},"content":"     * Prints Task object in a specific format.","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"saintzaw"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"saintzaw"},"content":"     * @return A string representing the Task object.","lastModifiedDate":"2023-02-19"},{"lineNumber":27,"author":{"gitId":"saintzaw"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":28,"author":{"gitId":"saintzaw"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"saintzaw"},"content":"    public String toString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"saintzaw"},"content":"        return getStatusIcon() + description;","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"saintzaw"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"saintzaw"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":34,"author":{"gitId":"saintzaw"},"content":"     * Gets the Status Icon of the task object by checking the isDone field.","lastModifiedDate":"2023-02-19"},{"lineNumber":35,"author":{"gitId":"saintzaw"},"content":"     * @return Marks the Task with an \"X\" if it has been completed","lastModifiedDate":"2023-02-19"},{"lineNumber":36,"author":{"gitId":"saintzaw"},"content":"     * and with a whitespace character \" \" otherwise.","lastModifiedDate":"2023-02-19"},{"lineNumber":37,"author":{"gitId":"saintzaw"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":38,"author":{"gitId":"saintzaw"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"saintzaw"},"content":"        return (isDone ? \"[X] \" : \"[ ] \");","lastModifiedDate":"2023-02-19"},{"lineNumber":40,"author":{"gitId":"saintzaw"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"saintzaw"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":43,"author":{"gitId":"saintzaw"},"content":"     * Sets the isDone attribute of a task to true to indicate that the task","lastModifiedDate":"2023-02-19"},{"lineNumber":44,"author":{"gitId":"saintzaw"},"content":"     * has been completed.","lastModifiedDate":"2023-02-19"},{"lineNumber":45,"author":{"gitId":"saintzaw"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":46,"author":{"gitId":"saintzaw"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"saintzaw"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"saintzaw"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"saintzaw"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":51,"author":{"gitId":"saintzaw"},"content":"     * Sets the isDone attribute of a task to false to indicate that the task","lastModifiedDate":"2023-02-19"},{"lineNumber":52,"author":{"gitId":"saintzaw"},"content":"     * has not been completed.","lastModifiedDate":"2023-02-19"},{"lineNumber":53,"author":{"gitId":"saintzaw"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":54,"author":{"gitId":"saintzaw"},"content":"    public void markNotDone() {","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"saintzaw"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"saintzaw"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"saintzaw"},"content":"}","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"saintzaw":58}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saintzaw"},"content":"package duke;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"saintzaw"},"content":"/**","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"saintzaw"},"content":" * Represents a type of task that does not have any date/time","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"saintzaw"},"content":" * attached to it.","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"saintzaw"},"content":" */","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"saintzaw"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"saintzaw"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"saintzaw"},"content":"     * Constructs a To-do object that inherits from Task object.","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"saintzaw"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"saintzaw"},"content":"     * @param description The description of the to-do.","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"saintzaw"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"saintzaw"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"saintzaw"},"content":"        super(description);","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"saintzaw"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"saintzaw"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"saintzaw"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":20,"author":{"gitId":"saintzaw"},"content":"     * Prints To-do object in a specific format.","lastModifiedDate":"2023-02-19"},{"lineNumber":21,"author":{"gitId":"saintzaw"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":22,"author":{"gitId":"saintzaw"},"content":"     * @return A string representing the To-do object.","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"saintzaw"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"saintzaw"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"saintzaw"},"content":"    public String toString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"saintzaw"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"saintzaw"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"saintzaw"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"saintzaw":28}}]
