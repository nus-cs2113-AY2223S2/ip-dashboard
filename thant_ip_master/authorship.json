[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thant"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"thant"},"content":"    protected String by;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"thant"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"thant"},"content":"        super(description);","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"thant"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"thant"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"thant"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"thant"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"thant"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"thant"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"thant"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"thant":14}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thant"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"thant"},"content":"        String LINE \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"thant"},"content":"        Task[] list \u003d new Task[100];","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"thant"},"content":"        String[] commands \u003d new String[]{\"bye\",\"mark\",\"unmark\",\"todo\",\"list\",\"deadline\",\"event\"};","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"thant"},"content":"        int count \u003d 0;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"thant"},"content":"        System.out.println(LINE +\" Hello! I\u0027m Duke\\n\" + \" What can I do for you?\\n\" +LINE);","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"thant"},"content":"            while(true){","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"thant"},"content":"                Scanner newScanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"thant"},"content":"                String userInput \u003d newScanner.nextLine();","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"thant"},"content":"                String[] userInputSplit \u003d userInput.split(\" \");","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"thant"},"content":"                try {","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"thant"},"content":"                    if (userInputSplit[0].equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"thant"},"content":"                        System.out.println(\" Bye. Hope to see you again soon!\\n\" + LINE);","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"thant"},"content":"                        break;","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"thant"},"content":"                    } else if (userInputSplit[0].contains(\"mark\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"thant"},"content":"                        try{","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"thant"},"content":"                            String index \u003d userInput.trim().substring(userInput.length()-1);","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"thant"},"content":"                            int indexInt \u003d Integer.parseInt(index) - 1;","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"thant"},"content":"                            if (userInputSplit[0].contains(\"unmark\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"thant"},"content":"                                list[indexInt].unmarkTask();","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"thant"},"content":"                                System.out.println(LINE + \"     OK, I\u0027ve marked this task as not done yet:\\n [ ] \"","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"thant"},"content":"                                        + list[indexInt].description + \"\\n \" + LINE);","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"thant"},"content":"                            } else {","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"thant"},"content":"                                list[indexInt].markAsDone();","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"thant"},"content":"                                System.out.println(LINE + \"     Nice! I\u0027ve marked this task as done:\\n [X] \" + list[indexInt].description + \"\\n \"","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"thant"},"content":"                                        + LINE);","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"thant"},"content":"                            }","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"thant"},"content":"                        }catch (NullPointerException nullError){","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"thant"},"content":"                            System.out.println(LINE + \"☹ OOPS!!! The task you tried to \" + userInputSplit[0] + \" does not exist!\\n\" + LINE);","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"thant"},"content":"                        }catch (NumberFormatException numError){","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"thant"},"content":"                            System.out.println(LINE + \"☹ OOPS!!! There wasn\u0027t a valid number inputted!\\n\" + LINE);","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"thant"},"content":"                        }","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"thant"},"content":"                    } else if (userInputSplit[0].equals(\"list\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"thant"},"content":"                        System.out.println(LINE);","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"thant"},"content":"                        for (int i \u003d 0; i \u003c count; i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"thant"},"content":"                            System.out.println(i + 1 + \".\" + list[i].toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"thant"},"content":"                        }","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"thant"},"content":"                        System.out.println(LINE);","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"thant"},"content":"                    } else if (userInputSplit[0].equals(\"todo\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"thant"},"content":"                        list[count] \u003d new Todo(userInput.substring(5));","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"thant"},"content":"                        count++;","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"thant"},"content":"                        System.out.println(LINE +","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"thant"},"content":"                                \"     Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"thant"},"content":"                                \"       [T][ ] \" + userInput.substring(5) +","lastModifiedDate":"2023-02-02"},{"lineNumber":49,"author":{"gitId":"thant"},"content":"                                \"\\n     Now you have \" + count + \" tasks in the list.\\n\" +","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"thant"},"content":"                                LINE);","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"thant"},"content":"                    } else if (userInputSplit[0].equals(\"deadline\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"thant"},"content":"                        String[] userInputSplitBy \u003d userInput.split(\"by\");","lastModifiedDate":"2023-02-02"},{"lineNumber":53,"author":{"gitId":"thant"},"content":"                        try {","lastModifiedDate":"2023-02-02"},{"lineNumber":54,"author":{"gitId":"thant"},"content":"                            list[count] \u003d new Deadline(userInputSplitBy[0].substring(8), userInputSplitBy[1].substring(1));","lastModifiedDate":"2023-02-02"},{"lineNumber":55,"author":{"gitId":"thant"},"content":"                            count++;","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"thant"},"content":"                            System.out.println(LINE +","lastModifiedDate":"2023-02-02"},{"lineNumber":57,"author":{"gitId":"thant"},"content":"                                    \"     Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"thant"},"content":"                                    \"        \" + list[count - 1].toString() +","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"thant"},"content":"                                    \"\\n     Now you have \" + count + \" tasks in the list.\\n\" +","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"thant"},"content":"                                    LINE);","lastModifiedDate":"2023-02-02"},{"lineNumber":61,"author":{"gitId":"thant"},"content":"                        }catch (ArrayIndexOutOfBoundsException arrayError){","lastModifiedDate":"2023-02-02"},{"lineNumber":62,"author":{"gitId":"thant"},"content":"                            System.out.println(LINE + \"Please follow the format:[deadline \u003cTask Name\u003e by \u003cDeadline Date\u003e]\\n\" + LINE);","lastModifiedDate":"2023-02-02"},{"lineNumber":63,"author":{"gitId":"thant"},"content":"                        }","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"thant"},"content":"                    } else if (userInputSplit[0].equals(\"event\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":65,"author":{"gitId":"thant"},"content":"                        try {","lastModifiedDate":"2023-02-02"},{"lineNumber":66,"author":{"gitId":"thant"},"content":"                            String[] userInputSplitFrom \u003d userInput.split(\" from \");","lastModifiedDate":"2023-02-02"},{"lineNumber":67,"author":{"gitId":"thant"},"content":"                            String[] userInputSplitTo \u003d userInputSplitFrom[1].split(\" to \");","lastModifiedDate":"2023-02-02"},{"lineNumber":68,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"thant"},"content":"                            list[count] \u003d new Event(userInputSplitFrom[0].substring(5), userInputSplitTo[0], userInputSplitTo[1]);","lastModifiedDate":"2023-02-02"},{"lineNumber":70,"author":{"gitId":"thant"},"content":"                            count++;","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"thant"},"content":"                            System.out.println(LINE +","lastModifiedDate":"2023-02-02"},{"lineNumber":72,"author":{"gitId":"thant"},"content":"                                    \"     Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"thant"},"content":"                                    \"        \" + list[count - 1].toString() +","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"thant"},"content":"                                    \"\\n     Now you have \" + count + \" tasks in the list.\\n\" +","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"thant"},"content":"                                    LINE);","lastModifiedDate":"2023-02-02"},{"lineNumber":76,"author":{"gitId":"thant"},"content":"                        }catch (ArrayIndexOutOfBoundsException arrayError){","lastModifiedDate":"2023-02-02"},{"lineNumber":77,"author":{"gitId":"thant"},"content":"                            System.out.println(LINE + \"Please follow the format:[event \u003cTask Name\u003e from \u003cStart Time\u003e to \u003cEnd Time\u003e]\\n\" + LINE);","lastModifiedDate":"2023-02-02"},{"lineNumber":78,"author":{"gitId":"thant"},"content":"                        }","lastModifiedDate":"2023-02-02"},{"lineNumber":79,"author":{"gitId":"thant"},"content":"                    } else {","lastModifiedDate":"2023-02-02"},{"lineNumber":80,"author":{"gitId":"thant"},"content":"                        System.out.println(LINE + \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\" + LINE);","lastModifiedDate":"2023-02-02"},{"lineNumber":81,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"thant"},"content":"                    }","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"thant"},"content":"                }catch (StringIndexOutOfBoundsException | ArrayIndexOutOfBoundsException error) {","lastModifiedDate":"2023-02-02"},{"lineNumber":84,"author":{"gitId":"thant"},"content":"                    System.out.println(LINE + \"☹ OOPS!!! The description of a \" + userInputSplit[0] + \" cannot be empty.\\n\" + LINE);","lastModifiedDate":"2023-02-02"},{"lineNumber":85,"author":{"gitId":"thant"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"thant"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"thant":84,"-":4}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thant"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"thant"},"content":"    protected String from;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"thant"},"content":"    protected String to;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"thant"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"thant"},"content":"        super(description);","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"thant"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"thant"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"thant"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"thant"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"thant"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"thant"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.from + \" to: \" + this.to + \")\";","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"thant"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"thant"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"thant":16}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thant"},"content":"public class Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"thant"},"content":"    protected String description;","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"thant"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"thant"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"thant"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"thant"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"thant"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"thant"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"thant"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"thant"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"thant"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"thant"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"thant"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"thant"},"content":"    public void unmarkTask() {","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"thant"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"thant"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"thant"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"thant"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"thant"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"thant"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"thant":25}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thant"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"thant"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"thant"},"content":"        super(description);","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"thant"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"thant"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"thant"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"thant"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"thant"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"thant"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"thant":11}}]
