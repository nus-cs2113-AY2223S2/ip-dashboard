[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danxuZhang"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"danxuZhang"},"content":" * Represents tasks that need to be done before a specific date/time.","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"danxuZhang"},"content":" * e.g., submit report by 11/10/2019 5pm.","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"danxuZhang"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"danxuZhang"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"danxuZhang"},"content":"    protected String by;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"danxuZhang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"danxuZhang"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"danxuZhang"},"content":"     * Constructor initializing the content and deadline of the Deadline task.","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"danxuZhang"},"content":"     * The task is unmarked by default.","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"danxuZhang"},"content":"     * @param content content of the Deadline task.","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"danxuZhang"},"content":"     * @param by deadline of the Deadline task.","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"danxuZhang"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"danxuZhang"},"content":"    public Deadline(String content, String by) {","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"danxuZhang"},"content":"        super(content);","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"danxuZhang"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"danxuZhang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"danxuZhang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"danxuZhang"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"danxuZhang"},"content":"     * Constructs a Deadline class from input arguments.","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"danxuZhang"},"content":"     * @param args input arguments containing content and by time of the deadline.","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"danxuZhang"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"danxuZhang"},"content":"    public Deadline(String[] args) {","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"danxuZhang"},"content":"        assert args[0].equals(\"deadline\");","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"danxuZhang"},"content":"        StringBuilder content \u003d new StringBuilder();","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"danxuZhang"},"content":"        StringBuilder by \u003d new StringBuilder();","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"danxuZhang"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"danxuZhang"},"content":"        int byIndex \u003d -1;","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"danxuZhang"},"content":"        for (int i \u003d 0; i \u003c args.length; ++i) {","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"danxuZhang"},"content":"            if (args[i].equals(\"/by\")) {","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"danxuZhang"},"content":"                byIndex \u003d i;","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"danxuZhang"},"content":"            }","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"danxuZhang"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"danxuZhang"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"danxuZhang"},"content":"        if (byIndex \u003d\u003d -1) {","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"danxuZhang"},"content":"            throw new IllegalArgumentException(\"Cannot find by time!\");","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"danxuZhang"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"danxuZhang"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"danxuZhang"},"content":"        for (int i \u003d 1; i \u003c args.length; ++i) {","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"danxuZhang"},"content":"            if (i \u003d\u003d byIndex) {","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"danxuZhang"},"content":"                continue;","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"danxuZhang"},"content":"            }","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"danxuZhang"},"content":"            if (i \u003c byIndex) {","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"danxuZhang"},"content":"                content.append(args[i]).append(\" \");","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"danxuZhang"},"content":"            } else {","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"danxuZhang"},"content":"                by.append(args[i]).append(\" \");","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"danxuZhang"},"content":"            }","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"danxuZhang"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"danxuZhang"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"danxuZhang"},"content":"        this.content \u003d content.toString().trim();","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"danxuZhang"},"content":"        this.by \u003d by.toString().trim();","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"danxuZhang"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":53,"author":{"gitId":"danxuZhang"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":54,"author":{"gitId":"danxuZhang"},"content":"    public String getBy() {","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"danxuZhang"},"content":"        return by;","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"danxuZhang"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":57,"author":{"gitId":"danxuZhang"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":58,"author":{"gitId":"danxuZhang"},"content":"    public void setBy(String by) {","lastModifiedDate":"2023-02-03"},{"lineNumber":59,"author":{"gitId":"danxuZhang"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-02-03"},{"lineNumber":60,"author":{"gitId":"danxuZhang"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":61,"author":{"gitId":"danxuZhang"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":62,"author":{"gitId":"danxuZhang"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"danxuZhang"},"content":"     * Converts the task to a string with label, mark status and deadline.","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"danxuZhang"},"content":"     * @return a string containing the task\u0027s label, mark status and deadline.","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"danxuZhang"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"danxuZhang"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"danxuZhang"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"danxuZhang"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"danxuZhang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"danxuZhang"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"danxuZhang":70}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danxuZhang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"danxuZhang"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"danxuZhang"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"danxuZhang"},"content":"    private static final Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"danxuZhang"},"content":"    private static final ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"danxuZhang"},"content":"    private static final String spacer \u003d \"\\t \";","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"danxuZhang"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"danxuZhang"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"danxuZhang"},"content":"     * Helper method to print a horizontal line.","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"danxuZhang"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"danxuZhang"},"content":"    private static void printDivider() {","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"danxuZhang"},"content":"        System.out.println(\"\\t____________________________________________________________\");","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"danxuZhang"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"danxuZhang"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"danxuZhang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"danxuZhang"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"danxuZhang"},"content":"     * Prints all tasks in the list.","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"danxuZhang"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"danxuZhang"},"content":"    private static void listTasks() {","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"danxuZhang"},"content":"        System.out.println(spacer + \"Here are the tasks in your list:\");","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"danxuZhang"},"content":"        int cnt \u003d 0;","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"danxuZhang"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"danxuZhang"},"content":"            System.out.printf(spacer + \"%d.%s\\n\", ++cnt, task);","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"danxuZhang"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"danxuZhang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"danxuZhang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"danxuZhang"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"danxuZhang"},"content":"     * Checks validity of listID and then marks the corresponding task in the task list.","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"danxuZhang"},"content":"     * @param listIdStr id of the task in the task list in a string.","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"danxuZhang"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"danxuZhang"},"content":"    private static void markTask(String listIdStr) {","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"danxuZhang"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"danxuZhang"},"content":"            markTask(Integer.parseInt(listIdStr));","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"danxuZhang"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"danxuZhang"},"content":"            System.err.println(spacer + \"Invalid input!\");","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"danxuZhang"},"content":"            System.err.println(spacer + \"Valid input format: mark [list id of the task]\");","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"danxuZhang"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"danxuZhang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"danxuZhang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"danxuZhang"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"danxuZhang"},"content":"     * Checks validity of listID and then unmark the corresponding task in the task list.","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"danxuZhang"},"content":"     * @param listIdStr id of the task in the task list in a string.","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"danxuZhang"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"danxuZhang"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"danxuZhang"},"content":"    private static void unmarkTask(String listIdStr) {","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"danxuZhang"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"danxuZhang"},"content":"            unmarkTask(Integer.parseInt(listIdStr));","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"danxuZhang"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"danxuZhang"},"content":"            System.err.println(spacer + \"Invalid input!\");","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"danxuZhang"},"content":"            System.err.println(spacer + \"Valid input format: unmark [list id of the task]\");","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"danxuZhang"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"danxuZhang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"danxuZhang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"danxuZhang"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"danxuZhang"},"content":"     * Marks a task in the task list","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"danxuZhang"},"content":"     * @param listId id of the task in the task list in an int.","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"danxuZhang"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"danxuZhang"},"content":"    private static void markTask(int listId) {","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"danxuZhang"},"content":"        int index \u003d listId - 1;","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"danxuZhang"},"content":"        if (index \u003c 0 || index \u003e\u003d taskList.size()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"danxuZhang"},"content":"            System.err.println(spacer + \"Index out of range!\");","lastModifiedDate":"2023-02-03"},{"lineNumber":63,"author":{"gitId":"danxuZhang"},"content":"        } else {","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"danxuZhang"},"content":"            taskList.get(index).mark();","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"danxuZhang"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"danxuZhang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"danxuZhang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"danxuZhang"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"danxuZhang"},"content":"     * Unmarks a task in the task list.","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"danxuZhang"},"content":"     * @param listId id of the task in the task list in an int.","lastModifiedDate":"2023-02-01"},{"lineNumber":71,"author":{"gitId":"danxuZhang"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":72,"author":{"gitId":"danxuZhang"},"content":"    private static void unmarkTask(int listId) {","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"danxuZhang"},"content":"        int index \u003d listId - 1;","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"danxuZhang"},"content":"        if (index \u003c 0 || index \u003e\u003d taskList.size()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":75,"author":{"gitId":"danxuZhang"},"content":"            System.err.println(spacer + \"Index out of range!\");","lastModifiedDate":"2023-02-03"},{"lineNumber":76,"author":{"gitId":"danxuZhang"},"content":"        } else {","lastModifiedDate":"2023-01-29"},{"lineNumber":77,"author":{"gitId":"danxuZhang"},"content":"            taskList.get(index).unmark();","lastModifiedDate":"2023-01-29"},{"lineNumber":78,"author":{"gitId":"danxuZhang"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":79,"author":{"gitId":"danxuZhang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":80,"author":{"gitId":"danxuZhang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":81,"author":{"gitId":"danxuZhang"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":82,"author":{"gitId":"danxuZhang"},"content":"     * Add a task from user\u0027s command.","lastModifiedDate":"2023-02-01"},{"lineNumber":83,"author":{"gitId":"danxuZhang"},"content":"     * @param cmd user\u0027s input command.","lastModifiedDate":"2023-02-01"},{"lineNumber":84,"author":{"gitId":"danxuZhang"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":85,"author":{"gitId":"danxuZhang"},"content":"    private static void addTask(String cmd) {","lastModifiedDate":"2023-01-29"},{"lineNumber":86,"author":{"gitId":"danxuZhang"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":87,"author":{"gitId":"danxuZhang"},"content":"            Task task \u003d createTask(cmd);","lastModifiedDate":"2023-01-29"},{"lineNumber":88,"author":{"gitId":"danxuZhang"},"content":"            taskList.add(task);","lastModifiedDate":"2023-01-29"},{"lineNumber":89,"author":{"gitId":"danxuZhang"},"content":"            System.out.println(spacer + \"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-02-03"},{"lineNumber":90,"author":{"gitId":"danxuZhang"},"content":"            System.out.println(\"\\t\\t\" + task);","lastModifiedDate":"2023-01-29"},{"lineNumber":91,"author":{"gitId":"danxuZhang"},"content":"            System.out.println(spacer + \"Now you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2023-02-03"},{"lineNumber":92,"author":{"gitId":"danxuZhang"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":93,"author":{"gitId":"danxuZhang"},"content":"            System.err.println(spacer + \"Invalid task type!\");","lastModifiedDate":"2023-02-03"},{"lineNumber":94,"author":{"gitId":"danxuZhang"},"content":"            System.err.println(spacer + \"Valid task types: todo, deadline, event.\");","lastModifiedDate":"2023-02-03"},{"lineNumber":95,"author":{"gitId":"danxuZhang"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":96,"author":{"gitId":"danxuZhang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":97,"author":{"gitId":"danxuZhang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":98,"author":{"gitId":"danxuZhang"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":99,"author":{"gitId":"danxuZhang"},"content":"     * Create a task from user\u0027s input command.","lastModifiedDate":"2023-02-01"},{"lineNumber":100,"author":{"gitId":"danxuZhang"},"content":"     * @param cmd user command.","lastModifiedDate":"2023-02-01"},{"lineNumber":101,"author":{"gitId":"danxuZhang"},"content":"     * @return a task instance (can be event, deadline, etc).","lastModifiedDate":"2023-02-01"},{"lineNumber":102,"author":{"gitId":"danxuZhang"},"content":"     * @throws IllegalArgumentException when user input an invalid command","lastModifiedDate":"2023-02-01"},{"lineNumber":103,"author":{"gitId":"danxuZhang"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":104,"author":{"gitId":"danxuZhang"},"content":"    private static Task createTask(String cmd) {","lastModifiedDate":"2023-01-29"},{"lineNumber":105,"author":{"gitId":"danxuZhang"},"content":"        String[] cmdArgs \u003d cmd.split(\" \");","lastModifiedDate":"2023-01-29"},{"lineNumber":106,"author":{"gitId":"danxuZhang"},"content":"        switch (cmdArgs[0]) {","lastModifiedDate":"2023-01-29"},{"lineNumber":107,"author":{"gitId":"danxuZhang"},"content":"        case \"todo\":","lastModifiedDate":"2023-01-29"},{"lineNumber":108,"author":{"gitId":"danxuZhang"},"content":"            return new Todo(cmdArgs);","lastModifiedDate":"2023-02-03"},{"lineNumber":109,"author":{"gitId":"danxuZhang"},"content":"        case \"deadline\":","lastModifiedDate":"2023-01-29"},{"lineNumber":110,"author":{"gitId":"danxuZhang"},"content":"            return new Deadline(cmdArgs);","lastModifiedDate":"2023-02-03"},{"lineNumber":111,"author":{"gitId":"danxuZhang"},"content":"        case \"event\":","lastModifiedDate":"2023-01-29"},{"lineNumber":112,"author":{"gitId":"danxuZhang"},"content":"            return new Event(cmdArgs);","lastModifiedDate":"2023-02-03"},{"lineNumber":113,"author":{"gitId":"danxuZhang"},"content":"        default:","lastModifiedDate":"2023-01-29"},{"lineNumber":114,"author":{"gitId":"danxuZhang"},"content":"            throw new IllegalArgumentException(\"Invalid task type!\");","lastModifiedDate":"2023-01-29"},{"lineNumber":115,"author":{"gitId":"danxuZhang"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":116,"author":{"gitId":"danxuZhang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":117,"author":{"gitId":"danxuZhang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":118,"author":{"gitId":"danxuZhang"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":126,"author":{"gitId":"danxuZhang"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":127,"author":{"gitId":"danxuZhang"},"content":"        // greeting messages","lastModifiedDate":"2023-01-26"},{"lineNumber":128,"author":{"gitId":"danxuZhang"},"content":"        printDivider();","lastModifiedDate":"2023-01-26"},{"lineNumber":129,"author":{"gitId":"danxuZhang"},"content":"        System.out.println(spacer + \"Hello! I\u0027m Tohru.\");","lastModifiedDate":"2023-02-03"},{"lineNumber":130,"author":{"gitId":"danxuZhang"},"content":"        System.out.println(spacer + \"What can I do for you?\");","lastModifiedDate":"2023-02-03"},{"lineNumber":131,"author":{"gitId":"danxuZhang"},"content":"        printDivider();","lastModifiedDate":"2023-01-26"},{"lineNumber":132,"author":{"gitId":"danxuZhang"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":133,"author":{"gitId":"danxuZhang"},"content":"        // user interactions","lastModifiedDate":"2023-01-26"},{"lineNumber":134,"author":{"gitId":"danxuZhang"},"content":"        while (true) {","lastModifiedDate":"2023-01-26"},{"lineNumber":135,"author":{"gitId":"danxuZhang"},"content":"            String cmd \u003d scanner.nextLine();","lastModifiedDate":"2023-01-29"},{"lineNumber":136,"author":{"gitId":"danxuZhang"},"content":"            String[] cmdArgs \u003d cmd.split(\" \");","lastModifiedDate":"2023-01-29"},{"lineNumber":137,"author":{"gitId":"danxuZhang"},"content":"            printDivider();","lastModifiedDate":"2023-01-26"},{"lineNumber":138,"author":{"gitId":"danxuZhang"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":139,"author":{"gitId":"danxuZhang"},"content":"            if (cmd.equals(\"bye\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":140,"author":{"gitId":"danxuZhang"},"content":"                break;","lastModifiedDate":"2023-01-26"},{"lineNumber":141,"author":{"gitId":"danxuZhang"},"content":"            } else if (cmd.equals(\"list\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":142,"author":{"gitId":"danxuZhang"},"content":"                listTasks();","lastModifiedDate":"2023-01-26"},{"lineNumber":143,"author":{"gitId":"danxuZhang"},"content":"            } else if (cmdArgs[0].equals(\"mark\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":144,"author":{"gitId":"danxuZhang"},"content":"                markTask(cmdArgs[1]);","lastModifiedDate":"2023-01-29"},{"lineNumber":145,"author":{"gitId":"danxuZhang"},"content":"            } else if (cmdArgs[0].equals(\"unmark\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":146,"author":{"gitId":"danxuZhang"},"content":"                unmarkTask(cmdArgs[1]);","lastModifiedDate":"2023-01-29"},{"lineNumber":147,"author":{"gitId":"danxuZhang"},"content":"            } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":148,"author":{"gitId":"danxuZhang"},"content":"                addTask(cmd);","lastModifiedDate":"2023-01-29"},{"lineNumber":149,"author":{"gitId":"danxuZhang"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":150,"author":{"gitId":"danxuZhang"},"content":"            printDivider();","lastModifiedDate":"2023-01-26"},{"lineNumber":151,"author":{"gitId":"danxuZhang"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":152,"author":{"gitId":"danxuZhang"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":153,"author":{"gitId":"danxuZhang"},"content":"        // exit message","lastModifiedDate":"2023-01-26"},{"lineNumber":154,"author":{"gitId":"danxuZhang"},"content":"        System.out.println(spacer + \"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-02-03"},{"lineNumber":155,"author":{"gitId":"danxuZhang"},"content":"        printDivider();","lastModifiedDate":"2023-01-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"danxuZhang":147,"-":10}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danxuZhang"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"danxuZhang"},"content":" * tasks that start at a specific date/time and ends at a specific date/time.","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"danxuZhang"},"content":" * e.g., (a) team project meeting 2/10/2019 2-4pm.","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"danxuZhang"},"content":" *      (b) orientation week 4/10/2019 to 11/10/2019.","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"danxuZhang"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"danxuZhang"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"danxuZhang"},"content":"    protected String from;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"danxuZhang"},"content":"    protected String to;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"danxuZhang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"danxuZhang"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"danxuZhang"},"content":"     * Constructor initializing the content, start time, end time of the Event task.","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"danxuZhang"},"content":"     * The task is unmarked by default.","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"danxuZhang"},"content":"     * @param content content of the Event.","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"danxuZhang"},"content":"     * @param from starting time of the Event.","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"danxuZhang"},"content":"     * @param to ending time of the Event.","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"danxuZhang"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"danxuZhang"},"content":"    public Event(String content, String from, String to) {","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"danxuZhang"},"content":"        super(content);","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"danxuZhang"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"danxuZhang"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"danxuZhang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"danxuZhang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"danxuZhang"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"danxuZhang"},"content":"     * Constructs an Event class from input arguments.","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"danxuZhang"},"content":"     * @param args arguments containing content, from, to time of the event.","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"danxuZhang"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"danxuZhang"},"content":"    public Event(String[] args) {","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"danxuZhang"},"content":"        assert args[0].equals(\"event\");","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"danxuZhang"},"content":"        StringBuilder content \u003d new StringBuilder();","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"danxuZhang"},"content":"        StringBuilder from \u003d new StringBuilder();","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"danxuZhang"},"content":"        StringBuilder to \u003d new StringBuilder();","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"danxuZhang"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"danxuZhang"},"content":"        int fromIndex \u003d -1;","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"danxuZhang"},"content":"        int toIndex \u003d -1;","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"danxuZhang"},"content":"        for (int i \u003d 0; i \u003c args.length; ++i) {","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"danxuZhang"},"content":"            if (args[i].equals(\"/from\")) {","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"danxuZhang"},"content":"                fromIndex \u003d i;","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"danxuZhang"},"content":"            } else if (args[i].equals(\"/to\")) {","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"danxuZhang"},"content":"                toIndex \u003d i;","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"danxuZhang"},"content":"            }","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"danxuZhang"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"danxuZhang"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"danxuZhang"},"content":"        if (fromIndex \u003d\u003d -1 || toIndex \u003d\u003d -1) {","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"danxuZhang"},"content":"            throw new IllegalArgumentException(\"Cannot find from or to index in the arguments!\");","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"danxuZhang"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"danxuZhang"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"danxuZhang"},"content":"        for (int i \u003d 1; i \u003c args.length; ++i) {","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"danxuZhang"},"content":"            if (i \u003c fromIndex) {","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"danxuZhang"},"content":"                content.append(args[i]).append(\" \");","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"danxuZhang"},"content":"            } else if (i \u003e fromIndex \u0026\u0026 i \u003c toIndex) {","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"danxuZhang"},"content":"                from.append(args[i]).append(\" \");","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"danxuZhang"},"content":"            } else if (i \u003e toIndex) {","lastModifiedDate":"2023-02-03"},{"lineNumber":53,"author":{"gitId":"danxuZhang"},"content":"                to.append(args[i]).append(\" \");","lastModifiedDate":"2023-02-03"},{"lineNumber":54,"author":{"gitId":"danxuZhang"},"content":"            }","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"danxuZhang"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"danxuZhang"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":57,"author":{"gitId":"danxuZhang"},"content":"        if (content.toString().isEmpty() || from.toString().isEmpty() || to.toString().isEmpty()) {","lastModifiedDate":"2023-02-03"},{"lineNumber":58,"author":{"gitId":"danxuZhang"},"content":"            throw new IllegalArgumentException(\"Input content contains blank!\");","lastModifiedDate":"2023-02-03"},{"lineNumber":59,"author":{"gitId":"danxuZhang"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":60,"author":{"gitId":"danxuZhang"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":61,"author":{"gitId":"danxuZhang"},"content":"        this.content \u003d content.toString().trim();","lastModifiedDate":"2023-02-03"},{"lineNumber":62,"author":{"gitId":"danxuZhang"},"content":"        this.from \u003d from.toString().trim();","lastModifiedDate":"2023-02-03"},{"lineNumber":63,"author":{"gitId":"danxuZhang"},"content":"        this.to \u003d to.toString().trim();","lastModifiedDate":"2023-02-03"},{"lineNumber":64,"author":{"gitId":"danxuZhang"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":65,"author":{"gitId":"danxuZhang"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":66,"author":{"gitId":"danxuZhang"},"content":"    public String getFrom() {","lastModifiedDate":"2023-02-03"},{"lineNumber":67,"author":{"gitId":"danxuZhang"},"content":"        return from;","lastModifiedDate":"2023-02-03"},{"lineNumber":68,"author":{"gitId":"danxuZhang"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":69,"author":{"gitId":"danxuZhang"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":70,"author":{"gitId":"danxuZhang"},"content":"    public void setFrom(String from) {","lastModifiedDate":"2023-02-03"},{"lineNumber":71,"author":{"gitId":"danxuZhang"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-02-03"},{"lineNumber":72,"author":{"gitId":"danxuZhang"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":73,"author":{"gitId":"danxuZhang"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":74,"author":{"gitId":"danxuZhang"},"content":"    public String getTo() {","lastModifiedDate":"2023-02-03"},{"lineNumber":75,"author":{"gitId":"danxuZhang"},"content":"        return to;","lastModifiedDate":"2023-02-03"},{"lineNumber":76,"author":{"gitId":"danxuZhang"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":77,"author":{"gitId":"danxuZhang"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":78,"author":{"gitId":"danxuZhang"},"content":"    public void setTo(String to) {","lastModifiedDate":"2023-02-03"},{"lineNumber":79,"author":{"gitId":"danxuZhang"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-02-03"},{"lineNumber":80,"author":{"gitId":"danxuZhang"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":81,"author":{"gitId":"danxuZhang"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":82,"author":{"gitId":"danxuZhang"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":83,"author":{"gitId":"danxuZhang"},"content":"     * Converts the task to a string with label, marked status, starting and ending time.","lastModifiedDate":"2023-01-29"},{"lineNumber":84,"author":{"gitId":"danxuZhang"},"content":"     * @return a string containing the task\u0027s label, marked status, starting and ending time.","lastModifiedDate":"2023-01-29"},{"lineNumber":85,"author":{"gitId":"danxuZhang"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":86,"author":{"gitId":"danxuZhang"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":87,"author":{"gitId":"danxuZhang"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":88,"author":{"gitId":"danxuZhang"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-01-29"},{"lineNumber":89,"author":{"gitId":"danxuZhang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":90,"author":{"gitId":"danxuZhang"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"danxuZhang":90}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danxuZhang"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"danxuZhang"},"content":" * The Task class represents real-world tasks with content and marking status.","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"danxuZhang"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"danxuZhang"},"content":"public class Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"danxuZhang"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"danxuZhang"},"content":"    protected String content;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"danxuZhang"},"content":"    protected boolean isMarked;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"danxuZhang"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"danxuZhang"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"danxuZhang"},"content":"     * Default constructor for the Task class.","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"danxuZhang"},"content":"     * Initialize task content to be empty and set isMarked to be false.","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"danxuZhang"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"danxuZhang"},"content":"    public Task() {","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"danxuZhang"},"content":"        this(\"\", false);","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"danxuZhang"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"danxuZhang"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"danxuZhang"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"danxuZhang"},"content":"     * Another constructor for the Task class.","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"danxuZhang"},"content":"     * Initialize task content to be the parameter and set isMarked to be false.","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"danxuZhang"},"content":"     * @param content content of the task","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"danxuZhang"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"danxuZhang"},"content":"    public Task(String content) {","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"danxuZhang"},"content":"        this(content, false);","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"danxuZhang"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"danxuZhang"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"danxuZhang"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"danxuZhang"},"content":"     * Another constructor for the Task class.","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"danxuZhang"},"content":"     * @param content content of the task.","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"danxuZhang"},"content":"     * @param isMarked marking status of the task.","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"danxuZhang"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"danxuZhang"},"content":"    public Task(String content, boolean isMarked) {","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"danxuZhang"},"content":"        this.content \u003d content;","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"danxuZhang"},"content":"        this.isMarked \u003d isMarked;","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"danxuZhang"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"danxuZhang"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"danxuZhang"},"content":"    public String getContent() {","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"danxuZhang"},"content":"        return content;","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"danxuZhang"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"danxuZhang"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"danxuZhang"},"content":"    public void setContent(String content) {","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"danxuZhang"},"content":"        this.content \u003d content;","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"danxuZhang"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"danxuZhang"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"danxuZhang"},"content":"    public boolean getMarked() {","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"danxuZhang"},"content":"        return isMarked;","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"danxuZhang"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"danxuZhang"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"danxuZhang"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"danxuZhang"},"content":"     * Prints the marking status of the task following by the content.","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"danxuZhang"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"danxuZhang"},"content":"    public void printTask() {","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"danxuZhang"},"content":"        System.out.println(this);","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"danxuZhang"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"danxuZhang"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"danxuZhang"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"danxuZhang"},"content":"     * Marks the marking status of the task, i.e. set isMarked to be true.","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"danxuZhang"},"content":"     * Prints a reply message after successfully mark the task.","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"danxuZhang"},"content":"     * Prints an error message if the task is already marked.","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"danxuZhang"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"danxuZhang"},"content":"    public void mark() {","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"danxuZhang"},"content":"        if (!isMarked) {","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"danxuZhang"},"content":"            isMarked \u003d true;","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"danxuZhang"},"content":"            System.out.println(\"\\t Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"danxuZhang"},"content":"            System.out.println(\"\\t \" + this);","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"danxuZhang"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"danxuZhang"},"content":"            System.err.println(\"\\t The task is already marked!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"danxuZhang"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"danxuZhang"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"danxuZhang"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"danxuZhang"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"danxuZhang"},"content":"     * Unmarks the marking status of the task, i.e. set isMarked to be false.","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"danxuZhang"},"content":"     * Prints a reply message after successfully unmark the task.","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"danxuZhang"},"content":"     * Prints an error message if the task is already unchecked.","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"danxuZhang"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"danxuZhang"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"danxuZhang"},"content":"        if (isMarked) {","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"danxuZhang"},"content":"            isMarked \u003d false;","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"danxuZhang"},"content":"            System.out.println(\"\\t OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"danxuZhang"},"content":"            System.out.println(\"\\t \" + this);","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"danxuZhang"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"danxuZhang"},"content":"            System.err.println(\"\\t This task is already not marked!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"danxuZhang"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"danxuZhang"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"danxuZhang"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"danxuZhang"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"danxuZhang"},"content":"     * Converts the task to a string containing marking status and content.","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"danxuZhang"},"content":"     * e.g. For a marked task: [X] a marked task.","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"danxuZhang"},"content":"     * e.g. For an unmarked task: [ ] an unmarked task.","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"danxuZhang"},"content":"     * @return a string containing marking status and task content","lastModifiedDate":"2023-01-26"},{"lineNumber":90,"author":{"gitId":"danxuZhang"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"danxuZhang"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":92,"author":{"gitId":"danxuZhang"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"danxuZhang"},"content":"        return \"[\" + (isMarked ? \"X\" : \" \") + \"]\" + \" \" + content;","lastModifiedDate":"2023-01-26"},{"lineNumber":94,"author":{"gitId":"danxuZhang"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":95,"author":{"gitId":"danxuZhang"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"danxuZhang":95}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danxuZhang"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"danxuZhang"},"content":" * Represents tasks without any date/time attached to it.","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"danxuZhang"},"content":" * e.g., visit new theme park.","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"danxuZhang"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"danxuZhang"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"danxuZhang"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"danxuZhang"},"content":"     * Constructor initializing the content of the task.","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"danxuZhang"},"content":"     * The task is unmarked by default.","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"danxuZhang"},"content":"     * @param content content of the task.","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"danxuZhang"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"danxuZhang"},"content":"    public Todo(String content) {","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"danxuZhang"},"content":"        super(content);","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"danxuZhang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"danxuZhang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"danxuZhang"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"danxuZhang"},"content":"     * Constructs a Todo class from arguments","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"danxuZhang"},"content":"     * @param args arguments containing the content of the todo task.","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"danxuZhang"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"danxuZhang"},"content":"    public Todo(String[] args) {","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"danxuZhang"},"content":"        assert args[0].equals(\"todo\");","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"danxuZhang"},"content":"        StringBuilder content \u003d new StringBuilder();","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"danxuZhang"},"content":"        for (int i \u003d 1; i \u003c args.length; ++i) {","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"danxuZhang"},"content":"            content.append(args[i]).append(\" \");","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"danxuZhang"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"danxuZhang"},"content":"        this.content \u003d content.toString().trim();","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"danxuZhang"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"danxuZhang"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"danxuZhang"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"danxuZhang"},"content":"     * Converts the class to a string with label and marked status.","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"danxuZhang"},"content":"     * @return a string containing the task\u0027s label and marked status.","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"danxuZhang"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"danxuZhang"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"danxuZhang"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"danxuZhang"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"danxuZhang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"danxuZhang"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"danxuZhang":36}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"danxuZhang"},"content":"todo read book","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"danxuZhang"},"content":"mark 1","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"danxuZhang"},"content":"deadline return book /by June 6th","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"danxuZhang"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"danxuZhang"},"content":"todo join sports club","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"danxuZhang"},"content":"mark 4","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"danxuZhang"},"content":"bye","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"danxuZhang":7}}]
