[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"EthanYidong"},"content":"# Bunny project template","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"EthanYidong"},"content":"3. After that, locate the `src/main/java/Bunny.java` file, right-click it, and choose `Run Bunny.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"EthanYidong":2,"-":22}},{"path":"src/main/java/Bunny.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EthanYidong"},"content":"import java.text.ParseException;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"EthanYidong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"EthanYidong"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"EthanYidong"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"EthanYidong"},"content":"public class Bunny {","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"EthanYidong"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"EthanYidong"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"EthanYidong"},"content":"        BunnySession bunny \u003d new BunnySession();","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"EthanYidong"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"EthanYidong"},"content":"        bunny.printMessage(\"Hello! I\u0027m Bunny.\\nWhat can I do for you?\");","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"EthanYidong"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"EthanYidong"},"content":"        while (true) {","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"EthanYidong"},"content":"            String input \u003d in.nextLine();","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"EthanYidong"},"content":"            if (input.equals(\"bye\")) {","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"EthanYidong"},"content":"                break;","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"EthanYidong"},"content":"            } else if (input.equals(\"list\")) {","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"EthanYidong"},"content":"                if (bunny.numTodos() \u003d\u003d 0) {","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"EthanYidong"},"content":"                    bunny.printMessage(\"Your TODO list is empty!\");","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"EthanYidong"},"content":"                } else {","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"EthanYidong"},"content":"                    ArrayList\u003cString\u003e messageLines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"EthanYidong"},"content":"                    for (int i \u003d 0; i \u003c bunny.numTodos(); i++) {","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"EthanYidong"},"content":"                        messageLines.add((i + 1) + \". \" + bunny.getTodo(i));","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"EthanYidong"},"content":"                    }","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"EthanYidong"},"content":"                    bunny.printMessage(messageLines);","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"EthanYidong"},"content":"                }","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"EthanYidong"},"content":"            } else if (input.startsWith(\"mark\")) {","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"EthanYidong"},"content":"                try {","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"EthanYidong"},"content":"                    int markIndex \u003d Integer.parseInt(input.split(\" \")[1]) - 1;","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"EthanYidong"},"content":"                    bunny.getTodo(markIndex).markAsDone();","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"EthanYidong"},"content":"                    bunny.printMessage(\"Nice! I\u0027ve marked this task as done:\\n\\t\" + bunny.getTodo(markIndex));","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"EthanYidong"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"EthanYidong"},"content":"                    bunny.printMessage(\"To mark a TODO as done, provide a valid TODO number like so: \\\"mark 1\\\"\");","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"EthanYidong"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"EthanYidong"},"content":"                    bunny.printMessage(\"To mark a TODO as done, provide a valid TODO number like so: \\\"mark 1\\\"\");","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"EthanYidong"},"content":"                }","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"EthanYidong"},"content":"            } else if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"EthanYidong"},"content":"                try {","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"EthanYidong"},"content":"                    int unmarkIndex \u003d Integer.parseInt(input.split(\" \")[1]) - 1;","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"EthanYidong"},"content":"                    bunny.getTodo(unmarkIndex).markAsNotDone();","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"EthanYidong"},"content":"                    bunny.printMessage(\"Nice! I\u0027ve marked this task as not done yet:\\n\\t\" + bunny.getTodo(unmarkIndex));","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"EthanYidong"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"EthanYidong"},"content":"                    bunny.printMessage(\"To unmark a TODO as done, provide a valid TODO number like so: \\\"unmark 1\\\"\");","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"EthanYidong"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"EthanYidong"},"content":"                    bunny.printMessage(\"To unmark a TODO as done, provide a valid TODO number like so: \\\"unmark 1\\\"\");","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"EthanYidong"},"content":"                }","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"EthanYidong"},"content":"            } else {","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"EthanYidong"},"content":"                bunny.addTodo(new Todo(input));","lastModifiedDate":"2023-01-22"},{"lineNumber":48,"author":{"gitId":"EthanYidong"},"content":"                bunny.printMessage(\"added: \" + input);","lastModifiedDate":"2023-01-22"},{"lineNumber":49,"author":{"gitId":"EthanYidong"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":50,"author":{"gitId":"EthanYidong"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":51,"author":{"gitId":"EthanYidong"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":52,"author":{"gitId":"EthanYidong"},"content":"        bunny.printMessage(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-22"},{"lineNumber":53,"author":{"gitId":"EthanYidong"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":54,"author":{"gitId":"EthanYidong"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"EthanYidong":54}},{"path":"src/main/java/BunnySession.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EthanYidong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"EthanYidong"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"EthanYidong"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"EthanYidong"},"content":"public class BunnySession {","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"EthanYidong"},"content":"    private final static String DIVIDER \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"EthanYidong"},"content":"    private final static String GLOBAL_INDENTATION \u003d \"\\t\";","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"EthanYidong"},"content":"    private final static String MESSAGE_INDENTATION \u003d \" \";","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"EthanYidong"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"EthanYidong"},"content":"    private ArrayList\u003cTodo\u003e todoList;","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"EthanYidong"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"EthanYidong"},"content":"    public BunnySession() {","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"EthanYidong"},"content":"        this.todoList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"EthanYidong"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"EthanYidong"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"EthanYidong"},"content":"    public void printMessage(String message) {","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"EthanYidong"},"content":"        this.printMessage(Arrays.asList(message.split(\"\\n\")));","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"EthanYidong"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"EthanYidong"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"EthanYidong"},"content":"    public void printMessage(Iterable\u003cString\u003e messageLines) {","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"EthanYidong"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"EthanYidong"},"content":"        output +\u003d GLOBAL_INDENTATION + DIVIDER + \"\\n\";","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"EthanYidong"},"content":"        for (String line : messageLines) {","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"EthanYidong"},"content":"            output +\u003d GLOBAL_INDENTATION + MESSAGE_INDENTATION + line + \"\\n\";","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"EthanYidong"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"EthanYidong"},"content":"        output +\u003d GLOBAL_INDENTATION + DIVIDER + \"\\n\";","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"EthanYidong"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"EthanYidong"},"content":"        System.out.print(output);","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"EthanYidong"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"EthanYidong"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"EthanYidong"},"content":"    public void addTodo(Todo todo) {","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"EthanYidong"},"content":"        this.todoList.add(todo);","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"EthanYidong"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"EthanYidong"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"EthanYidong"},"content":"    public Todo getTodo(int index) {","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"EthanYidong"},"content":"        return this.todoList.get(index);","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"EthanYidong"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"EthanYidong"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"EthanYidong"},"content":"    public int numTodos() {","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"EthanYidong"},"content":"        return this.todoList.size();","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"EthanYidong"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"EthanYidong"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"EthanYidong":41}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EthanYidong"},"content":"public class Todo {","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"EthanYidong"},"content":"    private String name;","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"EthanYidong"},"content":"    private boolean done;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"EthanYidong"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"EthanYidong"},"content":"    public Todo(String name) {","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"EthanYidong"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"EthanYidong"},"content":"        this.done \u003d false;","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"EthanYidong"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"EthanYidong"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"EthanYidong"},"content":"    public String getName() {","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"EthanYidong"},"content":"        return name;","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"EthanYidong"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"EthanYidong"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"EthanYidong"},"content":"    public void setName(String name) {","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"EthanYidong"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"EthanYidong"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"EthanYidong"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"EthanYidong"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"EthanYidong"},"content":"        this.done \u003d true;","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"EthanYidong"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"EthanYidong"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"EthanYidong"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"EthanYidong"},"content":"        this.done \u003d false;","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"EthanYidong"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"EthanYidong"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"EthanYidong"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"EthanYidong"},"content":"    public String toString() {","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"EthanYidong"},"content":"        char marker \u003d \u0027 \u0027;","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"EthanYidong"},"content":"        if (this.done) {","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"EthanYidong"},"content":"            marker \u003d \u0027X\u0027;","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"EthanYidong"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"EthanYidong"},"content":"        return \"[\" + marker + \"] \" + this.name;","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"EthanYidong"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"EthanYidong"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"EthanYidong":34}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"EthanYidong"},"content":"java -classpath ..\\bin Bunny \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"EthanYidong":1,"-":20}}]
