[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"EthanYidong"},"content":"# Bunny project template","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"EthanYidong"},"content":"3. After that, locate the `src/main/java/Bunny.java` file, right-click it, and choose `Run Bunny.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"EthanYidong":2,"-":22}},{"path":"src/main/java/Bunny.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EthanYidong"},"content":"import java.text.ParseException;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"EthanYidong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"EthanYidong"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"EthanYidong"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"EthanYidong"},"content":"public class Bunny {","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"EthanYidong"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"EthanYidong"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"EthanYidong"},"content":"        BunnySession bunny \u003d new BunnySession();","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"EthanYidong"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"EthanYidong"},"content":"        bunny.printMessage(\"Hello! I\u0027m Bunny.\\nWhat can I do for you?\");","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"EthanYidong"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"EthanYidong"},"content":"        while (true) {","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"EthanYidong"},"content":"            String input \u003d in.nextLine();","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"EthanYidong"},"content":"            ParsedCommand inputCommand \u003d new ParsedCommand(input);","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"EthanYidong"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"EthanYidong"},"content":"            if (inputCommand.getCommand().equals(\"bye\")) {","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"EthanYidong"},"content":"                break;","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"EthanYidong"},"content":"            } else if (inputCommand.getCommand().equals(\"list\")) {","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"EthanYidong"},"content":"                if (bunny.numTasks() \u003d\u003d 0) {","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"EthanYidong"},"content":"                    bunny.printMessage(\"Your TODO list is empty!\");","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"EthanYidong"},"content":"                } else {","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"EthanYidong"},"content":"                    ArrayList\u003cString\u003e messageLines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"EthanYidong"},"content":"                    for (int i \u003d 0; i \u003c bunny.numTasks(); i++) {","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"EthanYidong"},"content":"                        messageLines.add((i + 1) + \". \" + bunny.getTask(i));","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"EthanYidong"},"content":"                    }","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"EthanYidong"},"content":"                    bunny.printMessage(messageLines);","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"EthanYidong"},"content":"                }","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"EthanYidong"},"content":"            } else if (inputCommand.getCommand().equals(\"mark\")) {","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"EthanYidong"},"content":"                try {","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"EthanYidong"},"content":"                    int markIndex \u003d Integer.parseInt(inputCommand.getPositionalArgument()) - 1;","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"EthanYidong"},"content":"                    bunny.getTask(markIndex).markAsDone();","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"EthanYidong"},"content":"                    bunny.printMessage(\"Nice! I\u0027ve marked this task as done:\\n\\t\" + bunny.getTask(markIndex));","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"EthanYidong"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"EthanYidong"},"content":"                    bunny.printMessage(\"To mark a TODO as done, provide a valid TODO number like so: \\\"mark 1\\\"\");","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"EthanYidong"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"EthanYidong"},"content":"                    bunny.printMessage(\"To mark a TODO as done, provide a valid TODO number like so: \\\"mark 1\\\"\");","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"EthanYidong"},"content":"                }","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"EthanYidong"},"content":"            } else if (inputCommand.getCommand().equals(\"unmark\")) {","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"EthanYidong"},"content":"                try {","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"EthanYidong"},"content":"                    int unmarkIndex \u003d Integer.parseInt(inputCommand.getPositionalArgument()) - 1;","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"EthanYidong"},"content":"                    bunny.getTask(unmarkIndex).markAsNotDone();","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"EthanYidong"},"content":"                    bunny.printMessage(\"Nice! I\u0027ve marked this task as not done yet:\\n\\t\" + bunny.getTask(unmarkIndex));","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"EthanYidong"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"EthanYidong"},"content":"                    bunny.printMessage(\"To unmark a TODO as done, provide a valid TODO number like so: \\\"unmark 1\\\"\");","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"EthanYidong"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"EthanYidong"},"content":"                    bunny.printMessage(\"To unmark a TODO as done, provide a valid TODO number like so: \\\"unmark 1\\\"\");","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"EthanYidong"},"content":"                }","lastModifiedDate":"2023-01-22"},{"lineNumber":48,"author":{"gitId":"EthanYidong"},"content":"            } else if (inputCommand.getCommand().equals(\"todo\")){","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"EthanYidong"},"content":"                Task newTask \u003d new Todo(inputCommand.getPositionalArgument());","lastModifiedDate":"2023-02-02"},{"lineNumber":50,"author":{"gitId":"EthanYidong"},"content":"                bunny.addTask(newTask);","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"EthanYidong"},"content":"                bunny.printMessage(\"I\u0027ve added this task: \" + newTask + \"\\nNow you have \" + bunny.numTasks() + \" tasks in the list.\");","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"EthanYidong"},"content":"            } else if (inputCommand.getCommand().equals(\"deadline\")){","lastModifiedDate":"2023-02-02"},{"lineNumber":53,"author":{"gitId":"EthanYidong"},"content":"                Task newTask \u003d new Deadline(inputCommand.getPositionalArgument(), inputCommand.getFlagArgument(\"by\"));","lastModifiedDate":"2023-02-02"},{"lineNumber":54,"author":{"gitId":"EthanYidong"},"content":"                bunny.addTask(newTask);","lastModifiedDate":"2023-02-02"},{"lineNumber":55,"author":{"gitId":"EthanYidong"},"content":"                bunny.printMessage(\"I\u0027ve added this task: \" + newTask + \"\\nNow you have \" + bunny.numTasks() + \" tasks in the list.\");","lastModifiedDate":"2023-02-02"},{"lineNumber":56,"author":{"gitId":"EthanYidong"},"content":"            } else if (inputCommand.getCommand().equals(\"event\")){","lastModifiedDate":"2023-02-02"},{"lineNumber":57,"author":{"gitId":"EthanYidong"},"content":"                Task newTask \u003d new Event(inputCommand.getPositionalArgument(),","lastModifiedDate":"2023-02-02"},{"lineNumber":58,"author":{"gitId":"EthanYidong"},"content":"                        inputCommand.getFlagArgument(\"from\"),","lastModifiedDate":"2023-02-02"},{"lineNumber":59,"author":{"gitId":"EthanYidong"},"content":"                        inputCommand.getFlagArgument(\"to\"));","lastModifiedDate":"2023-02-02"},{"lineNumber":60,"author":{"gitId":"EthanYidong"},"content":"                bunny.addTask(newTask);","lastModifiedDate":"2023-02-02"},{"lineNumber":61,"author":{"gitId":"EthanYidong"},"content":"                bunny.printMessage(\"I\u0027ve added this task: \" + newTask + \"\\nNow you have \" + bunny.numTasks() + \" tasks in the list.\");","lastModifiedDate":"2023-02-02"},{"lineNumber":62,"author":{"gitId":"EthanYidong"},"content":"            } else {","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"EthanYidong"},"content":"                bunny.printMessage(\"That is not a valid command!\");","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"EthanYidong"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":65,"author":{"gitId":"EthanYidong"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":66,"author":{"gitId":"EthanYidong"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":67,"author":{"gitId":"EthanYidong"},"content":"        bunny.printMessage(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-22"},{"lineNumber":68,"author":{"gitId":"EthanYidong"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":69,"author":{"gitId":"EthanYidong"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"EthanYidong":69}},{"path":"src/main/java/BunnySession.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EthanYidong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"EthanYidong"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"EthanYidong"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"EthanYidong"},"content":"public class BunnySession {","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"EthanYidong"},"content":"    private final static String DIVIDER \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"EthanYidong"},"content":"    private final static String GLOBAL_INDENTATION \u003d \"\\t\";","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"EthanYidong"},"content":"    private final static String MESSAGE_INDENTATION \u003d \" \";","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"EthanYidong"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"EthanYidong"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"EthanYidong"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"EthanYidong"},"content":"    public BunnySession() {","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"EthanYidong"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"EthanYidong"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"EthanYidong"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"EthanYidong"},"content":"    public void printMessage(String message) {","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"EthanYidong"},"content":"        this.printMessage(Arrays.asList(message.split(\"\\n\")));","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"EthanYidong"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"EthanYidong"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"EthanYidong"},"content":"    public void printMessage(Iterable\u003cString\u003e messageLines) {","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"EthanYidong"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"EthanYidong"},"content":"        output +\u003d GLOBAL_INDENTATION + DIVIDER + \"\\n\";","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"EthanYidong"},"content":"        for (String line : messageLines) {","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"EthanYidong"},"content":"            output +\u003d GLOBAL_INDENTATION + MESSAGE_INDENTATION + line + \"\\n\";","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"EthanYidong"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"EthanYidong"},"content":"        output +\u003d GLOBAL_INDENTATION + DIVIDER + \"\\n\";","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"EthanYidong"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"EthanYidong"},"content":"        System.out.print(output);","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"EthanYidong"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"EthanYidong"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"EthanYidong"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"EthanYidong"},"content":"        this.taskList.add(task);","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"EthanYidong"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"EthanYidong"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"EthanYidong"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"EthanYidong"},"content":"        return this.taskList.get(index);","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"EthanYidong"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"EthanYidong"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"EthanYidong"},"content":"    public int numTasks() {","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"EthanYidong"},"content":"        return this.taskList.size();","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"EthanYidong"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"EthanYidong"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"EthanYidong":41}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EthanYidong"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"EthanYidong"},"content":"    private String by;","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"EthanYidong"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"EthanYidong"},"content":"    public Deadline(String name, String by) {","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"EthanYidong"},"content":"        super(name);","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"EthanYidong"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"EthanYidong"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"EthanYidong"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"EthanYidong"},"content":"    public String getBy() {","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"EthanYidong"},"content":"        return by;","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"EthanYidong"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"EthanYidong"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"EthanYidong"},"content":"    public void setBy(String by) {","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"EthanYidong"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"EthanYidong"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"EthanYidong"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"EthanYidong"},"content":"    protected String label() {","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"EthanYidong"},"content":"        return \"D\";","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"EthanYidong"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"EthanYidong"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"EthanYidong"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"EthanYidong"},"content":"    public String toString() {","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"EthanYidong"},"content":"        return super.toString() + \" (by: \" + this.by + \")\";","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"EthanYidong"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"EthanYidong"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"EthanYidong":25}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EthanYidong"},"content":"public class Event extends Task {","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"EthanYidong"},"content":"    private String from;","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"EthanYidong"},"content":"    private String to;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"EthanYidong"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"EthanYidong"},"content":"    public Event(String name, String from, String to) {","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"EthanYidong"},"content":"        super(name);","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"EthanYidong"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"EthanYidong"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"EthanYidong"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"EthanYidong"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"EthanYidong"},"content":"    public String getFrom() {","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"EthanYidong"},"content":"        return from;","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"EthanYidong"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"EthanYidong"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"EthanYidong"},"content":"    public void setFrom(String from) {","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"EthanYidong"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"EthanYidong"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"EthanYidong"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"EthanYidong"},"content":"    public String getTo() {","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"EthanYidong"},"content":"        return to;","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"EthanYidong"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"EthanYidong"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"EthanYidong"},"content":"    public void setTo(String to) {","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"EthanYidong"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"EthanYidong"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"EthanYidong"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"EthanYidong"},"content":"    protected String label() {","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"EthanYidong"},"content":"        return \"E\";","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"EthanYidong"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"EthanYidong"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"EthanYidong"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"EthanYidong"},"content":"    public String toString() {","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"EthanYidong"},"content":"        return super.toString() + \" (from: \" + this.from + \" to: \" + this.to + \")\";","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"EthanYidong"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"EthanYidong"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"EthanYidong":35}},{"path":"src/main/java/ParsedCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EthanYidong"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"EthanYidong"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"EthanYidong"},"content":"public class ParsedCommand {","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"EthanYidong"},"content":"    private String command;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"EthanYidong"},"content":"    private String positionalArgument;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"EthanYidong"},"content":"    private HashMap\u003cString, String\u003e flagArguments;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"EthanYidong"},"content":"    public ParsedCommand(String command) {","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"EthanYidong"},"content":"        String[] commandAndArguments \u003d command.split(\" \", 2);","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"EthanYidong"},"content":"        this.command \u003d commandAndArguments[0];","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"EthanYidong"},"content":"        String arguments;","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"EthanYidong"},"content":"        if(commandAndArguments.length \u003d\u003d 2) {","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"EthanYidong"},"content":"            arguments \u003d commandAndArguments[1];","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"EthanYidong"},"content":"        } else {","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"EthanYidong"},"content":"            return;","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"EthanYidong"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"EthanYidong"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"EthanYidong"},"content":"        String[] positionalAndFlagArguments \u003d arguments.split(\"/\");","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"EthanYidong"},"content":"        this.positionalArgument \u003d positionalAndFlagArguments[0].trim();","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"EthanYidong"},"content":"        this.flagArguments \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"EthanYidong"},"content":"        for(int i \u003d 1; i \u003c positionalAndFlagArguments.length; i++) {","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"EthanYidong"},"content":"            String[] flagAndFlagArgument \u003d positionalAndFlagArguments[i].split(\" \", 2);","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"EthanYidong"},"content":"            if (flagAndFlagArgument.length \u003d\u003d 2) {","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"EthanYidong"},"content":"                this.flagArguments.put(flagAndFlagArgument[0], flagAndFlagArgument[1]);","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"EthanYidong"},"content":"            } else {","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"EthanYidong"},"content":"                return;","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"EthanYidong"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"EthanYidong"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"EthanYidong"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"EthanYidong"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"EthanYidong"},"content":"    public String getCommand() {","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"EthanYidong"},"content":"        return command;","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"EthanYidong"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"EthanYidong"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"EthanYidong"},"content":"    public String getPositionalArgument() {","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"EthanYidong"},"content":"        return positionalArgument;","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"EthanYidong"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"EthanYidong"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"EthanYidong"},"content":"    public String getFlagArgument(String flag) {","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"EthanYidong"},"content":"        return this.flagArguments.get(flag);","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"EthanYidong"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"EthanYidong"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"EthanYidong":41}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EthanYidong"},"content":"public abstract class Task {","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"EthanYidong"},"content":"    private String name;","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"EthanYidong"},"content":"    private boolean done;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"EthanYidong"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"EthanYidong"},"content":"    public Task(String name) {","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"EthanYidong"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"EthanYidong"},"content":"        this.done \u003d false;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"EthanYidong"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"EthanYidong"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"EthanYidong"},"content":"    public String getName() {","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"EthanYidong"},"content":"        return name;","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"EthanYidong"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"EthanYidong"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"EthanYidong"},"content":"    public void setName(String name) {","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"EthanYidong"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"EthanYidong"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"EthanYidong"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"EthanYidong"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"EthanYidong"},"content":"        this.done \u003d true;","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"EthanYidong"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"EthanYidong"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"EthanYidong"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"EthanYidong"},"content":"        this.done \u003d false;","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"EthanYidong"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"EthanYidong"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"EthanYidong"},"content":"    protected abstract String label();","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"EthanYidong"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"EthanYidong"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"EthanYidong"},"content":"    public String toString() {","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"EthanYidong"},"content":"        char marker \u003d \u0027 \u0027;","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"EthanYidong"},"content":"        if (this.done) {","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"EthanYidong"},"content":"            marker \u003d \u0027X\u0027;","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"EthanYidong"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"EthanYidong"},"content":"        return \"[\" + this.label() + \"][\" + marker + \"] \" + this.getName();","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"EthanYidong"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"EthanYidong"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"EthanYidong":36}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EthanYidong"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"EthanYidong"},"content":"    public Todo(String name) {","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"EthanYidong"},"content":"        super(name);","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"EthanYidong"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"EthanYidong"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"EthanYidong"},"content":"    protected String label() {","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"EthanYidong"},"content":"        return \"T\";","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"EthanYidong"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"EthanYidong"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"EthanYidong":9}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"EthanYidong"},"content":"list","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"EthanYidong"},"content":"todo a b c d","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"EthanYidong"},"content":"list","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"EthanYidong"},"content":"deadline e f g /by h i","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"EthanYidong"},"content":"list","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"EthanYidong"},"content":"event j k /from l m /to n o p","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"EthanYidong"},"content":"list","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"EthanYidong"},"content":"mark 1","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"EthanYidong"},"content":"list","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"EthanYidong"},"content":"unmark 1","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"EthanYidong"},"content":"list","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"EthanYidong"},"content":"mark 2","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"EthanYidong"},"content":"mark 3","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"EthanYidong"},"content":"list","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"EthanYidong"},"content":"unmark 3","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"EthanYidong"},"content":"list","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"EthanYidong"},"content":"bye","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"EthanYidong":17}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"EthanYidong"},"content":"java -classpath ..\\bin Bunny \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"EthanYidong":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"EthanYidong"},"content":"java -classpath ../bin Bunny \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"EthanYidong":1,"-":37}}]
