[{"path":"src/main/java/duke/command/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EangJS"},"content":"package duke.command;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"EangJS"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"EangJS"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"EangJS"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"EangJS"},"content":"public class TaskManager {","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"EangJS"},"content":"    private Task[] taskList;","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"EangJS"},"content":"    private int listSize;","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"EangJS"},"content":"    private static final int MAXLISTSIZE \u003d 100;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"EangJS"},"content":"    public TaskManager() {","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"EangJS"},"content":"        this.listSize \u003d 0;","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"EangJS"},"content":"        this.taskList \u003d new Task[MAXLISTSIZE];","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"EangJS"},"content":"     * Adds task to the list to keep track","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"EangJS"},"content":"     * @param description: user task to remember","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"EangJS"},"content":"    public void addToList(String description) {","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"EangJS"},"content":"        Task task \u003d new Task(description);","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"EangJS"},"content":"        taskList[this.listSize] \u003d task;","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"EangJS"},"content":"        this.listSize +\u003d 1;","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"EangJS"},"content":"        System.out.println(\"Got it! Added \\n\"","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"EangJS"},"content":"                + \"[T][ ]\" + description + \"\\n\"","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"EangJS"},"content":"                + \"to the list.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"EangJS"},"content":"        System.out.println(\"Now you have \" + this.listSize + \" task(s) in the list.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"EangJS"},"content":"     * Overloaded: Adds Deadline to the list to keep track","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"EangJS"},"content":"     * @param description: user Deadline to remember","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"EangJS"},"content":"    public void addToList(String description, String dueBy) {","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"EangJS"},"content":"        Deadline event \u003d new Deadline(description, dueBy);","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"EangJS"},"content":"        taskList[this.listSize] \u003d event;","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"EangJS"},"content":"        this.listSize +\u003d 1;","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"EangJS"},"content":"        String eventDuration \u003d event.getDueDate();","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"EangJS"},"content":"        System.out.println(\"Got it! Added \\n\"","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"EangJS"},"content":"                + \"[D][ ] \" + description + eventDuration + \"\\n\"","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"EangJS"},"content":"                + \"to the list.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"EangJS"},"content":"        System.out.println(\"Now you have \" + this.listSize + \" task(s) in the list.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"EangJS"},"content":"     * Overloaded: Adds Event to the list to keep track","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"EangJS"},"content":"     * @param description: user event to remember","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":56,"author":{"gitId":"EangJS"},"content":"    public void addToList(String description, String startDate, String endDate) {","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"EangJS"},"content":"        Event event \u003d new Event(description, startDate, endDate);","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"EangJS"},"content":"        taskList[this.listSize] \u003d event;","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"EangJS"},"content":"        this.listSize +\u003d 1;","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"EangJS"},"content":"        String eventDuration \u003d event.getDuration();","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"EangJS"},"content":"        System.out.println(\"Got it! Added \\n\"","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"EangJS"},"content":"                + \"[E][ ] \" + description + eventDuration + \"\\n\"","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"EangJS"},"content":"                + \"to the list.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"EangJS"},"content":"        System.out.println(\"Now you have \" + this.listSize + \" task(s) in the list.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":66,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":67,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":68,"author":{"gitId":"EangJS"},"content":"     * Set the specified task at the given index to done","lastModifiedDate":"2023-01-22"},{"lineNumber":69,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":70,"author":{"gitId":"EangJS"},"content":"     * @param taskIndex index in which the task is stored in the array","lastModifiedDate":"2023-01-22"},{"lineNumber":71,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":72,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":73,"author":{"gitId":"EangJS"},"content":"    public void markAsDone(int taskIndex) {","lastModifiedDate":"2023-01-22"},{"lineNumber":74,"author":{"gitId":"EangJS"},"content":"        if (taskIndex \u003e\u003d listSize || taskIndex \u003c 0) {","lastModifiedDate":"2023-01-22"},{"lineNumber":75,"author":{"gitId":"EangJS"},"content":"            System.out.println(\"Task not found within the list!\");","lastModifiedDate":"2023-01-22"},{"lineNumber":76,"author":{"gitId":"EangJS"},"content":"        } else {","lastModifiedDate":"2023-01-22"},{"lineNumber":77,"author":{"gitId":"EangJS"},"content":"            String taskType \u003d taskList[taskIndex].getTaskType();","lastModifiedDate":"2023-01-29"},{"lineNumber":78,"author":{"gitId":"EangJS"},"content":"            String task \u003d taskList[taskIndex].setAsDone();","lastModifiedDate":"2023-01-22"},{"lineNumber":79,"author":{"gitId":"EangJS"},"content":"            System.out.println(\"Noted sir, I have marked \\n\"","lastModifiedDate":"2023-01-22"},{"lineNumber":80,"author":{"gitId":"EangJS"},"content":"                    + taskType + \"[X]\" + task + \"\\n\"","lastModifiedDate":"2023-01-29"},{"lineNumber":81,"author":{"gitId":"EangJS"},"content":"                    + \"as done.\");","lastModifiedDate":"2023-01-22"},{"lineNumber":82,"author":{"gitId":"EangJS"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":83,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":84,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":85,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":86,"author":{"gitId":"EangJS"},"content":"     * Set the specified task at the given index to undone","lastModifiedDate":"2023-01-22"},{"lineNumber":87,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":88,"author":{"gitId":"EangJS"},"content":"     * @param taskIndex index in which the task is stored in the array","lastModifiedDate":"2023-01-22"},{"lineNumber":89,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":90,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":91,"author":{"gitId":"EangJS"},"content":"    public void markAsUndone(int taskIndex) {","lastModifiedDate":"2023-01-22"},{"lineNumber":92,"author":{"gitId":"EangJS"},"content":"        if (taskIndex \u003e\u003d listSize || taskIndex \u003c 0) {","lastModifiedDate":"2023-01-22"},{"lineNumber":93,"author":{"gitId":"EangJS"},"content":"            System.out.println(\"Task not found within the list!\");","lastModifiedDate":"2023-01-22"},{"lineNumber":94,"author":{"gitId":"EangJS"},"content":"        } else {","lastModifiedDate":"2023-01-22"},{"lineNumber":95,"author":{"gitId":"EangJS"},"content":"            String taskType \u003d taskList[taskIndex].getTaskType();","lastModifiedDate":"2023-01-29"},{"lineNumber":96,"author":{"gitId":"EangJS"},"content":"            String task \u003d taskList[taskIndex].setAsUndone();","lastModifiedDate":"2023-01-22"},{"lineNumber":97,"author":{"gitId":"EangJS"},"content":"            System.out.println(\"Noted sir, I have marked \\n\"","lastModifiedDate":"2023-01-22"},{"lineNumber":98,"author":{"gitId":"EangJS"},"content":"                    + taskType + \"[ ]\" + task + \"\\n\"","lastModifiedDate":"2023-01-29"},{"lineNumber":99,"author":{"gitId":"EangJS"},"content":"                    + \"as not done.\");","lastModifiedDate":"2023-01-22"},{"lineNumber":100,"author":{"gitId":"EangJS"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":101,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":102,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":103,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":104,"author":{"gitId":"EangJS"},"content":"     * prints all tasks stored in the list","lastModifiedDate":"2023-01-22"},{"lineNumber":105,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":106,"author":{"gitId":"EangJS"},"content":"    ","lastModifiedDate":"2023-01-30"},{"lineNumber":107,"author":{"gitId":"EangJS"},"content":"    public void printList() {","lastModifiedDate":"2023-01-22"},{"lineNumber":108,"author":{"gitId":"EangJS"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-01-22"},{"lineNumber":109,"author":{"gitId":"EangJS"},"content":"        for (int i \u003d 1; i \u003c this.listSize + 1; i++) {","lastModifiedDate":"2023-01-22"},{"lineNumber":110,"author":{"gitId":"EangJS"},"content":"            System.out.println(i + \". \" + taskList[i - 1].getTaskStatus());","lastModifiedDate":"2023-01-29"},{"lineNumber":111,"author":{"gitId":"EangJS"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":112,"author":{"gitId":"EangJS"},"content":"        System.out.println(\"Now you have \" + this.listSize + \" tasks in the list.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":113,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":114,"author":{"gitId":"EangJS"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"EangJS":114}},{"path":"src/main/java/duke/command/UserCommandManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EangJS"},"content":"package duke.command;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"EangJS"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"EangJS"},"content":"public class UserCommandManager {","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"EangJS"},"content":"    TaskManager myList \u003d new TaskManager();","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"EangJS"},"content":"     * checks if user input is valid and adds the event to list","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"EangJS"},"content":"     * @param userInputArray array of string containing user deadline details","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"EangJS"},"content":"    public void handleDeadlineCommand(String[] userInputArray) {","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"EangJS"},"content":"        if (userInputArray.length \u003c 2) {","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"EangJS"},"content":"            System.out.println(\"Invalid input, make sure you use /by \u003cdate\u003e\");","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"EangJS"},"content":"            return;","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"EangJS"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"EangJS"},"content":"        String description \u003d userInputArray[0];","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"EangJS"},"content":"        String dueBy \u003d userInputArray[1];","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"EangJS"},"content":"        myList.addToList(description, dueBy);","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"EangJS"},"content":"     * checks if user input is valid and adds the event to list","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"EangJS"},"content":"     * @param userInput String containing user event details","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"EangJS"},"content":"    public void handleEventCommand(String userInput) {","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"EangJS"},"content":"        final String[] userInputArray \u003d userInput.trim().split(\"/from|/to\");","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"EangJS"},"content":"        if (userInputArray.length \u003c 3) {","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"EangJS"},"content":"            System.out.println(\"Invalid input, make sure you use /from \u003cstart\u003e and /to \u003cend\u003e\");","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"EangJS"},"content":"            return;","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"EangJS"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"EangJS"},"content":"        String description \u003d userInputArray[0];","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"EangJS"},"content":"        String startTime \u003d userInputArray[1];","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"EangJS"},"content":"        String endTime \u003d userInputArray[2];","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"EangJS"},"content":"        myList.addToList(description, startTime, endTime);","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"EangJS"},"content":"     * prints instructions to use the program if","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"EangJS"},"content":"     * an unknown command is entered","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"EangJS"},"content":"    public static void handleUnknownCommand() {","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"EangJS"},"content":"        System.out.println(\"I don\u0027t understand...\\n\" +","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"EangJS"},"content":"                \"Try these commands: \u003cevent\u003e /from \u003cstart\u003e /to \u003cend\u003e\\n\" +","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"EangJS"},"content":"                \"\u003cdeadline\u003e /by \u003cend\u003e \\n\" +","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"EangJS"},"content":"                \"\u003ctodo\u003e\\n\" +","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"EangJS"},"content":"                \"\u003clist\u003e\");","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"EangJS"},"content":"     * Handles the command (i.e. type of task) by user","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"EangJS"},"content":"     * and parse the arguments to add to task list","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"EangJS"},"content":"     * @param userCommand type of action user wants to perform","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"EangJS"},"content":"     * @param userInput   arguments to the action (i.e. task description)","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"EangJS"},"content":"    public void handleCommands(String userCommand, String userInput) {","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"EangJS"},"content":"        Scanner scanner \u003d new Scanner(userInput);","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"EangJS"},"content":"        switch (userCommand) {","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"EangJS"},"content":"            case \"list\":","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"EangJS"},"content":"                myList.printList();","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"EangJS"},"content":"                break;","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"EangJS"},"content":"            case \"mark\":","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"EangJS"},"content":"                myList.markAsDone(scanner.nextInt() - 1);","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"EangJS"},"content":"                break;","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"EangJS"},"content":"            case \"unmark\":","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"EangJS"},"content":"                myList.markAsUndone(scanner.nextInt() - 1);","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"EangJS"},"content":"                break;","lastModifiedDate":"2023-01-29"},{"lineNumber":75,"author":{"gitId":"EangJS"},"content":"            case \"todo\":","lastModifiedDate":"2023-01-29"},{"lineNumber":76,"author":{"gitId":"EangJS"},"content":"                myList.addToList(scanner.nextLine());","lastModifiedDate":"2023-01-29"},{"lineNumber":77,"author":{"gitId":"EangJS"},"content":"                break;","lastModifiedDate":"2023-01-29"},{"lineNumber":78,"author":{"gitId":"EangJS"},"content":"            case \"deadline\":","lastModifiedDate":"2023-01-29"},{"lineNumber":79,"author":{"gitId":"EangJS"},"content":"                handleDeadlineCommand(scanner.nextLine().trim().split(\"/by\"));","lastModifiedDate":"2023-01-29"},{"lineNumber":80,"author":{"gitId":"EangJS"},"content":"                break;","lastModifiedDate":"2023-01-29"},{"lineNumber":81,"author":{"gitId":"EangJS"},"content":"            case \"event\":","lastModifiedDate":"2023-01-29"},{"lineNumber":82,"author":{"gitId":"EangJS"},"content":"                handleEventCommand(userInput);","lastModifiedDate":"2023-01-29"},{"lineNumber":83,"author":{"gitId":"EangJS"},"content":"                break;","lastModifiedDate":"2023-01-29"},{"lineNumber":84,"author":{"gitId":"EangJS"},"content":"            default:","lastModifiedDate":"2023-01-29"},{"lineNumber":85,"author":{"gitId":"EangJS"},"content":"                handleUnknownCommand();","lastModifiedDate":"2023-01-29"},{"lineNumber":86,"author":{"gitId":"EangJS"},"content":"                break;","lastModifiedDate":"2023-01-29"},{"lineNumber":87,"author":{"gitId":"EangJS"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":88,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":89,"author":{"gitId":"EangJS"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"EangJS":89}},{"path":"src/main/java/duke/main/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EangJS"},"content":"package duke.main;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"EangJS"},"content":"import duke.command.UserCommandManager;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"EangJS"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":9,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-01-13"},{"lineNumber":10,"author":{"gitId":"EangJS"},"content":"     * Prints out the greeting message to the user","lastModifiedDate":"2023-01-13"},{"lineNumber":11,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-01-13"},{"lineNumber":12,"author":{"gitId":"EangJS"},"content":"    public static void greetUser() {","lastModifiedDate":"2023-01-13"},{"lineNumber":13,"author":{"gitId":"EangJS"},"content":"        String logo \u003d \" .----------------.  .----------------.  .----------------.  .----------------. \\n\" +","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"EangJS"},"content":"                \"| | |_   ___ `.  | || ||_   _||_   _|| || | |_  ||_  _|  | || | |_   ___  |  | |\\n\" +","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"EangJS"},"content":"                \"| |   | |   `. \\\\ | || |  | |    | |  | || |   | |_/ /    | || |   | |_  \\\\_|  | |\\n\" +","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"EangJS"},"content":"                \"| |   | |    | | | || |  | \u0027    \u0027 |  | || |   |  __\u0027.    | || |   |  _|  _   | |\\n\" +","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"EangJS"},"content":"                \"| |  _| |___.\u0027 / | || |   \\\\ `--\u0027 /   | || |  _| |  \\\\ \\\\_  | || |  _| |___/ |  | |\\n\" +","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"EangJS"},"content":"                \"| | |________.\u0027  | || |    `.__.\u0027    | || | |____||____| | || | |_________|  | |\\n\" +","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"EangJS"},"content":"                \" \u0027----------------\u0027  \u0027----------------\u0027  \u0027----------------\u0027  \u0027----------------\u0027 \";","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"EangJS"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"EangJS"},"content":"        String greetMessage \u003d \"Hello! I\u0027m Duke\\n\"","lastModifiedDate":"2023-01-13"},{"lineNumber":22,"author":{"gitId":"EangJS"},"content":"                + \"Send me a list of things to remember!\\n\"","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"EangJS"},"content":"                + \"Type \u003cbye\u003e to exit\";","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"EangJS"},"content":"        System.out.println(greetMessage);","lastModifiedDate":"2023-01-13"},{"lineNumber":25,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":26,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":27,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"EangJS"},"content":"     * Prints out the exit message to the user","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"EangJS"},"content":"    public static void exitProgram() {","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"EangJS"},"content":"        String exitMessage \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"EangJS"},"content":"        System.out.println(exitMessage);","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"EangJS"},"content":"        System.exit(0);","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"EangJS"},"content":"     * Greets user and responds to user commands from the command line","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"EangJS"},"content":"     * @param args None taken","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"EangJS"},"content":"    @SuppressWarnings(\"InfiniteLoopStatement\")","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":43,"author":{"gitId":"EangJS"},"content":"        Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-21"},{"lineNumber":44,"author":{"gitId":"EangJS"},"content":"        greetUser();","lastModifiedDate":"2023-01-13"},{"lineNumber":45,"author":{"gitId":"EangJS"},"content":"        UserCommandManager commandManager \u003d new UserCommandManager();","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"EangJS"},"content":"        while (true) {","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"EangJS"},"content":"            String userCommand \u003d input.next().toLowerCase();","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"EangJS"},"content":"            if (userCommand.equals(\"bye\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"EangJS"},"content":"                exitProgram();","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"EangJS"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"EangJS"},"content":"            commandManager.handleCommands(userCommand, input.nextLine());","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"EangJS"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"EangJS":50,"-":4}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EangJS"},"content":"package duke.task;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"EangJS"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"EangJS"},"content":"    protected String dueBy;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"EangJS"},"content":"    public Deadline(String task, String dueBy) {","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"EangJS"},"content":"        super(task);","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"EangJS"},"content":"        this.dueBy \u003d dueBy;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"EangJS"},"content":"     * gets the due date of the task","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"EangJS"},"content":"     * @return formatted string of due date","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"EangJS"},"content":"    public String getDueDate() {","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"EangJS"},"content":"        return \"(by:\" + dueBy + \")\";","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"EangJS"},"content":"     * gets the type of task (deadline type)","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"EangJS"},"content":"     * @return letter representing type of task","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"EangJS"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"EangJS"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"EangJS"},"content":"        return \"[D]\";","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"EangJS"},"content":"     * Shows the full deadline status and description","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"EangJS"},"content":"     * @return deadline status and description","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"EangJS"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"EangJS"},"content":"    public String getTaskStatus() {","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"EangJS"},"content":"        return \"[D]\" + \"[\" + getStatusIcon() + \"] \" + task + getDueDate();","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"EangJS"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"EangJS":42}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EangJS"},"content":"package duke.task;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"EangJS"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"EangJS"},"content":"    protected String startTime;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"EangJS"},"content":"    protected String endTime;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"EangJS"},"content":"    public Event(String task, String startTime, String endTime) {","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"EangJS"},"content":"        super(task);","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"EangJS"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"EangJS"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"EangJS"},"content":"     * gets the duration of the event","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"EangJS"},"content":"     * @return the formatted string of the event duration","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"EangJS"},"content":"    public String getDuration() {","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"EangJS"},"content":"        return \"(from:\" + startTime + \"to:\" + endTime + \")\";","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"EangJS"},"content":"     * gets the type of task (event type)","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"EangJS"},"content":"     * @return letter representing type of task","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"EangJS"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"EangJS"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"EangJS"},"content":"        return \"[E]\";","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"EangJS"},"content":"     * Shows the full event status and description","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"EangJS"},"content":"     * @return event status and description","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"EangJS"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"EangJS"},"content":"    public String getTaskStatus() {","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"EangJS"},"content":"        return \"[E]\" + \"[\" + getStatusIcon() + \"] \" + task + getDuration();","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"EangJS"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"EangJS":44}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EangJS"},"content":"package duke.task;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"EangJS"},"content":"public class Task {","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"EangJS"},"content":"    protected String task;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"EangJS"},"content":"    private boolean isDone;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"EangJS"},"content":"    public Task(String task) {","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"EangJS"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"EangJS"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"EangJS"},"content":"     * sets the current task to be marked as done","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"EangJS"},"content":"     * @return the String of the marked task","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"EangJS"},"content":"    public String setAsDone() {","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"EangJS"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"EangJS"},"content":"        return this.task;","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"EangJS"},"content":"     * sets the current task to be marked as not done","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"EangJS"},"content":"     * @return the String of the marked task","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"EangJS"},"content":"    public String setAsUndone() {","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"EangJS"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"EangJS"},"content":"        return this.task;","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"EangJS"},"content":"     * checks if the task is done, if done will return a tick,","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"EangJS"},"content":"     * however, if not done will return an empty space","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"EangJS"},"content":"     * @return the String indicating the status of the task","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"EangJS"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"EangJS"},"content":"        return (this.isDone ? \"X\" : \" \");","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"EangJS"},"content":"     * gets the type of task (todo type)","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"EangJS"},"content":"     * @return letter representing type of task","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"EangJS"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"EangJS"},"content":"        return \"[T]\";","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"EangJS"},"content":"     * Shows the full task status and description","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"EangJS"},"content":"     * @return task status and description","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"EangJS"},"content":"    public String getTaskStatus() {","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"EangJS"},"content":"        return \"[T]\" + \"[\" + getStatusIcon() + \"]\" + task;","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"EangJS"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"EangJS":64}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"EangJS"},"content":"list","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"EangJS"},"content":"todo Buy milk","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"EangJS"},"content":"todo Buy eggs","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"EangJS"},"content":"todo Buy flour","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"EangJS"},"content":"list","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"EangJS"},"content":"mark 1","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"EangJS"},"content":"mark 2","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"EangJS"},"content":"unmark 1","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"EangJS"},"content":"deadline bake a cake /by 17/02/2023","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"EangJS"},"content":"deadline sell the cake /by 18/02/2023","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"EangJS"},"content":"event attend baking course /from 16/02/2023 /to 19/02/2023","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"EangJS"},"content":"list","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"EangJS"},"content":"mark 3","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"EangJS"},"content":"mark 5","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"EangJS"},"content":"mark 1","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"EangJS"},"content":"event attend /to","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"EangJS"},"content":"deadline /by","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"EangJS"},"content":"todo todo","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"EangJS"},"content":"list","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"EangJS"},"content":"bye","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"EangJS":20}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"EangJS"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\main\\*.java","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"EangJS"},"content":"java -classpath ..\\bin duke.main.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"EangJS"},"content":"FC ACTUAL.TXT EXPECTED.TXT \u003e nul","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"EangJS"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"EangJS"},"content":"    ECHO TESTCASE FAILED","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"EangJS"},"content":") ELSE (","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"EangJS"},"content":"    ECHO TESTCASE PASSED","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"EangJS"},"content":")","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"EangJS"},"content":"timeout /t 3","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"-":17,"EangJS":10}}]
