[{"path":"src/main/java/duke/command/CommandHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EangJS"},"content":"package duke.command;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"EangJS"},"content":"import duke.exceptions.ListTooLarge;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"EangJS"},"content":"import duke.filemanager.TaskLoader;","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"EangJS"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"EangJS"},"content":"public class CommandHandler {","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"EangJS"},"content":"    TaskManager myList \u003d new TaskManager();","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"EangJS"},"content":"    public CommandHandler() {","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"EangJS"},"content":"        myList.setData();","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"EangJS"},"content":"     * Prints the current items and status in the list","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"EangJS"},"content":"    public void handleListCommand() {","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"EangJS"},"content":"        myList.printList();","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"EangJS"},"content":"     * Sets the item to be marked as done","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"EangJS"},"content":"    public void handleMarkAsDone(String index) {","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"EangJS"},"content":"        try {","lastModifiedDate":"2023-02-05"},{"lineNumber":30,"author":{"gitId":"EangJS"},"content":"            myList.markAsDone(Integer.parseInt(index) - 1);","lastModifiedDate":"2023-02-05"},{"lineNumber":31,"author":{"gitId":"EangJS"},"content":"        } catch (NullPointerException | IndexOutOfBoundsException arraySizeException) {","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"EangJS"},"content":"            System.out.println(\"No such item exists! Please select a number within the list size\");","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"EangJS"},"content":"        } catch (NumberFormatException notANumber) {","lastModifiedDate":"2023-02-05"},{"lineNumber":34,"author":{"gitId":"EangJS"},"content":"            System.out.println(\"Please enter a number\");","lastModifiedDate":"2023-02-05"},{"lineNumber":35,"author":{"gitId":"EangJS"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":36,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":37,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":38,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":39,"author":{"gitId":"EangJS"},"content":"     * Sets the item to be marked as undone","lastModifiedDate":"2023-02-05"},{"lineNumber":40,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":41,"author":{"gitId":"EangJS"},"content":"    public void handleMarkAsUndone(String index) {","lastModifiedDate":"2023-02-05"},{"lineNumber":42,"author":{"gitId":"EangJS"},"content":"        try {","lastModifiedDate":"2023-02-05"},{"lineNumber":43,"author":{"gitId":"EangJS"},"content":"            myList.markAsUndone(Integer.parseInt(index) - 1);","lastModifiedDate":"2023-02-05"},{"lineNumber":44,"author":{"gitId":"EangJS"},"content":"        } catch (NullPointerException | ArrayIndexOutOfBoundsException arraySizeException) {","lastModifiedDate":"2023-02-05"},{"lineNumber":45,"author":{"gitId":"EangJS"},"content":"            System.out.println(\"No such item exists! Please select a number within the list size\");","lastModifiedDate":"2023-02-08"},{"lineNumber":46,"author":{"gitId":"EangJS"},"content":"        } catch (NumberFormatException notANumber) {","lastModifiedDate":"2023-02-05"},{"lineNumber":47,"author":{"gitId":"EangJS"},"content":"            System.out.println(\"Please enter a number\");","lastModifiedDate":"2023-02-05"},{"lineNumber":48,"author":{"gitId":"EangJS"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":49,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":50,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":51,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":52,"author":{"gitId":"EangJS"},"content":"     * Adds todo item to list","lastModifiedDate":"2023-02-05"},{"lineNumber":53,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":54,"author":{"gitId":"EangJS"},"content":"    public void handleTodoCommand(String description) {","lastModifiedDate":"2023-02-05"},{"lineNumber":55,"author":{"gitId":"EangJS"},"content":"        try {","lastModifiedDate":"2023-02-05"},{"lineNumber":56,"author":{"gitId":"EangJS"},"content":"            myList.addToList(description);","lastModifiedDate":"2023-02-05"},{"lineNumber":57,"author":{"gitId":"EangJS"},"content":"        } catch (ListTooLarge error) {","lastModifiedDate":"2023-02-05"},{"lineNumber":58,"author":{"gitId":"EangJS"},"content":"            System.out.println(error.getMessage());","lastModifiedDate":"2023-02-05"},{"lineNumber":59,"author":{"gitId":"EangJS"},"content":"        } catch (IndexOutOfBoundsException outOfBounds) {","lastModifiedDate":"2023-02-05"},{"lineNumber":60,"author":{"gitId":"EangJS"},"content":"            System.out.println(\"Please input all the necessary details\");","lastModifiedDate":"2023-02-09"},{"lineNumber":61,"author":{"gitId":"EangJS"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":62,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":63,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":64,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":65,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":66,"author":{"gitId":"EangJS"},"content":"     * checks if user input is valid and adds the event to list","lastModifiedDate":"2023-02-05"},{"lineNumber":67,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":68,"author":{"gitId":"EangJS"},"content":"     * @param userInputArray array of string containing user deadline details","lastModifiedDate":"2023-02-05"},{"lineNumber":69,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":70,"author":{"gitId":"EangJS"},"content":"    public void handleDeadlineCommand(String[] userInputArray) {","lastModifiedDate":"2023-02-05"},{"lineNumber":71,"author":{"gitId":"EangJS"},"content":"        try {","lastModifiedDate":"2023-02-05"},{"lineNumber":72,"author":{"gitId":"EangJS"},"content":"            String description \u003d userInputArray[0];","lastModifiedDate":"2023-02-05"},{"lineNumber":73,"author":{"gitId":"EangJS"},"content":"            String dueBy \u003d userInputArray[1];","lastModifiedDate":"2023-02-05"},{"lineNumber":74,"author":{"gitId":"EangJS"},"content":"            myList.addToList(description, dueBy);","lastModifiedDate":"2023-02-05"},{"lineNumber":75,"author":{"gitId":"EangJS"},"content":"        } catch (ListTooLarge error) {","lastModifiedDate":"2023-02-05"},{"lineNumber":76,"author":{"gitId":"EangJS"},"content":"            System.out.println(error.getMessage());","lastModifiedDate":"2023-02-05"},{"lineNumber":77,"author":{"gitId":"EangJS"},"content":"        } catch (IndexOutOfBoundsException outOfBounds) {","lastModifiedDate":"2023-02-05"},{"lineNumber":78,"author":{"gitId":"EangJS"},"content":"            System.out.println(\"Please input all the necessary details\");","lastModifiedDate":"2023-02-09"},{"lineNumber":79,"author":{"gitId":"EangJS"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":80,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":81,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":82,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":83,"author":{"gitId":"EangJS"},"content":"     * checks if user input is valid and adds the event to list","lastModifiedDate":"2023-02-05"},{"lineNumber":84,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":85,"author":{"gitId":"EangJS"},"content":"     * @param userInput String containing user event details","lastModifiedDate":"2023-02-05"},{"lineNumber":86,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":87,"author":{"gitId":"EangJS"},"content":"    public void handleEventCommand(String userInput) {","lastModifiedDate":"2023-02-05"},{"lineNumber":88,"author":{"gitId":"EangJS"},"content":"        try {","lastModifiedDate":"2023-02-05"},{"lineNumber":89,"author":{"gitId":"EangJS"},"content":"            final String[] userInputArray \u003d userInput.trim().split(\"/from|/to\");","lastModifiedDate":"2023-02-05"},{"lineNumber":90,"author":{"gitId":"EangJS"},"content":"            String description \u003d userInputArray[0];","lastModifiedDate":"2023-02-05"},{"lineNumber":91,"author":{"gitId":"EangJS"},"content":"            String startTime \u003d userInputArray[1];","lastModifiedDate":"2023-02-05"},{"lineNumber":92,"author":{"gitId":"EangJS"},"content":"            String endTime \u003d userInputArray[2];","lastModifiedDate":"2023-02-05"},{"lineNumber":93,"author":{"gitId":"EangJS"},"content":"            myList.addToList(description, startTime, endTime);","lastModifiedDate":"2023-02-05"},{"lineNumber":94,"author":{"gitId":"EangJS"},"content":"        } catch (ListTooLarge error) {","lastModifiedDate":"2023-02-05"},{"lineNumber":95,"author":{"gitId":"EangJS"},"content":"            System.out.println(error.getMessage());","lastModifiedDate":"2023-02-05"},{"lineNumber":96,"author":{"gitId":"EangJS"},"content":"        } catch (IndexOutOfBoundsException outOfBounds) {","lastModifiedDate":"2023-02-05"},{"lineNumber":97,"author":{"gitId":"EangJS"},"content":"            System.out.println(\"Please input all the necessary details\");","lastModifiedDate":"2023-02-09"},{"lineNumber":98,"author":{"gitId":"EangJS"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":99,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":100,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":101,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":102,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":103,"author":{"gitId":"EangJS"},"content":"     * Takes in index of task and delete from list","lastModifiedDate":"2023-02-09"},{"lineNumber":104,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-02-09"},{"lineNumber":105,"author":{"gitId":"EangJS"},"content":"     * @param index position of the task to be removed","lastModifiedDate":"2023-02-09"},{"lineNumber":106,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":107,"author":{"gitId":"EangJS"},"content":"    public void handleDeleteCommand(String index) {","lastModifiedDate":"2023-02-09"},{"lineNumber":108,"author":{"gitId":"EangJS"},"content":"        try {","lastModifiedDate":"2023-02-09"},{"lineNumber":109,"author":{"gitId":"EangJS"},"content":"            myList.deleteTask(Integer.parseInt(index) - 1);","lastModifiedDate":"2023-02-09"},{"lineNumber":110,"author":{"gitId":"EangJS"},"content":"        } catch (IndexOutOfBoundsException outOfBounds) {","lastModifiedDate":"2023-02-09"},{"lineNumber":111,"author":{"gitId":"EangJS"},"content":"            System.out.println(\"Please choose an appropriate index\");","lastModifiedDate":"2023-02-09"},{"lineNumber":112,"author":{"gitId":"EangJS"},"content":"        } catch (NumberFormatException notANumber) {","lastModifiedDate":"2023-02-09"},{"lineNumber":113,"author":{"gitId":"EangJS"},"content":"            System.out.println(\"Please enter a number\");","lastModifiedDate":"2023-02-09"},{"lineNumber":114,"author":{"gitId":"EangJS"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":115,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":116,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":117,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":118,"author":{"gitId":"EangJS"},"content":"     * prints instructions to use the program if","lastModifiedDate":"2023-02-05"},{"lineNumber":119,"author":{"gitId":"EangJS"},"content":"     * an unknown command is entered","lastModifiedDate":"2023-02-05"},{"lineNumber":120,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":121,"author":{"gitId":"EangJS"},"content":"    public static void handleUnknownCommand() {","lastModifiedDate":"2023-02-05"},{"lineNumber":122,"author":{"gitId":"EangJS"},"content":"        System.out.println(\"I don\u0027t understand...\\n\" +","lastModifiedDate":"2023-02-05"},{"lineNumber":123,"author":{"gitId":"EangJS"},"content":"                \"Try these commands: \u003cevent\u003e /from \u003cstart\u003e /to \u003cend\u003e\\n\" +","lastModifiedDate":"2023-02-05"},{"lineNumber":124,"author":{"gitId":"EangJS"},"content":"                \"\u003cdeadline\u003e /by \u003cend\u003e \\n\" +","lastModifiedDate":"2023-02-05"},{"lineNumber":125,"author":{"gitId":"EangJS"},"content":"                \"\u003ctodo\u003e\\n\" +","lastModifiedDate":"2023-02-05"},{"lineNumber":126,"author":{"gitId":"EangJS"},"content":"                \"\u003clist\u003e\");","lastModifiedDate":"2023-02-05"},{"lineNumber":127,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":128,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":129,"author":{"gitId":"EangJS"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"EangJS":129}},{"path":"src/main/java/duke/command/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EangJS"},"content":"package duke.command;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"EangJS"},"content":"import duke.filemanager.TaskLoader;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"EangJS"},"content":"import duke.filemanager.TaskWriter;","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"EangJS"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"EangJS"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"EangJS"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"EangJS"},"content":"import duke.exceptions.ListTooLarge;","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"EangJS"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"EangJS"},"content":"public class TaskManager {","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"EangJS"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"EangJS"},"content":"    TaskWriter taskWriter \u003d new TaskWriter();","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"EangJS"},"content":"    public TaskManager() {","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"EangJS"},"content":"        this.taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"EangJS"},"content":"    public void setData() {","lastModifiedDate":"2023-02-10"},{"lineNumber":22,"author":{"gitId":"EangJS"},"content":"        TaskLoader taskLoader \u003d new TaskLoader();","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"EangJS"},"content":"        this.taskList \u003d taskLoader.setClasses();","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"EangJS"},"content":"     * Adds task to the list to keep track","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"EangJS"},"content":"     * @param description: user task to remember","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"EangJS"},"content":"    public void addToList(String description) throws ListTooLarge {","lastModifiedDate":"2023-02-05"},{"lineNumber":32,"author":{"gitId":"EangJS"},"content":"        Task task \u003d new Task(description);","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"EangJS"},"content":"        taskList.add(task);","lastModifiedDate":"2023-02-09"},{"lineNumber":34,"author":{"gitId":"EangJS"},"content":"        taskWriter.writeToJson(taskList);","lastModifiedDate":"2023-02-10"},{"lineNumber":35,"author":{"gitId":"EangJS"},"content":"        System.out.println(\"Got it! Added \\n\"","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"EangJS"},"content":"                + \"[T][ ]\" + description + \"\\n\"","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"EangJS"},"content":"                + \"to the list.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"EangJS"},"content":"        System.out.println(\"Now you have \" + taskList.size() + \" task(s) in the list.\");","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"EangJS"},"content":"     * Overloaded: Adds Deadline to the list to keep track","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"EangJS"},"content":"     * @param description: user Deadline to remember","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"EangJS"},"content":"    public void addToList(String description, String dueBy) throws ListTooLarge {","lastModifiedDate":"2023-02-05"},{"lineNumber":47,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"EangJS"},"content":"        Deadline deadline \u003d new Deadline(description, dueBy);","lastModifiedDate":"2023-02-05"},{"lineNumber":49,"author":{"gitId":"EangJS"},"content":"        taskList.add(deadline);","lastModifiedDate":"2023-02-09"},{"lineNumber":50,"author":{"gitId":"EangJS"},"content":"        taskWriter.writeToJson(taskList);","lastModifiedDate":"2023-02-10"},{"lineNumber":51,"author":{"gitId":"EangJS"},"content":"        String deadlineDuration \u003d deadline.getDueDate();","lastModifiedDate":"2023-02-05"},{"lineNumber":52,"author":{"gitId":"EangJS"},"content":"        System.out.println(\"Got it! Added \\n\"","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"EangJS"},"content":"                + \"[D][ ] \" + description + deadlineDuration + \"\\n\"","lastModifiedDate":"2023-02-05"},{"lineNumber":54,"author":{"gitId":"EangJS"},"content":"                + \"to the list.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"EangJS"},"content":"        System.out.println(\"Now you have \" + taskList.size() + \" task(s) in the list.\");","lastModifiedDate":"2023-02-09"},{"lineNumber":56,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"EangJS"},"content":"     * Overloaded: Adds Event to the list to keep track","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"EangJS"},"content":"     * @param description: user event to remember","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"EangJS"},"content":"    public void addToList(String description, String startDate, String endDate) throws ListTooLarge {","lastModifiedDate":"2023-02-05"},{"lineNumber":64,"author":{"gitId":"EangJS"},"content":"        Event event \u003d new Event(description, startDate, endDate);","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"EangJS"},"content":"        taskList.add(event);","lastModifiedDate":"2023-02-09"},{"lineNumber":66,"author":{"gitId":"EangJS"},"content":"        taskWriter.writeToJson(taskList);","lastModifiedDate":"2023-02-10"},{"lineNumber":67,"author":{"gitId":"EangJS"},"content":"        String eventDuration \u003d event.getDuration();","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"EangJS"},"content":"        System.out.println(\"Got it! Added \\n\"","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"EangJS"},"content":"                + \"[E][ ] \" + description + eventDuration + \"\\n\"","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"EangJS"},"content":"                + \"to the list.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"EangJS"},"content":"        System.out.println(\"Now you have \" + taskList.size() + \" task(s) in the list.\");","lastModifiedDate":"2023-02-09"},{"lineNumber":72,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":73,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":74,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":75,"author":{"gitId":"EangJS"},"content":"     * Set the specified task at the given index to done","lastModifiedDate":"2023-01-22"},{"lineNumber":76,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":77,"author":{"gitId":"EangJS"},"content":"     * @param taskIndex index in which the task is stored in the array","lastModifiedDate":"2023-01-22"},{"lineNumber":78,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":79,"author":{"gitId":"EangJS"},"content":"    public void markAsDone(int taskIndex) {","lastModifiedDate":"2023-01-22"},{"lineNumber":80,"author":{"gitId":"EangJS"},"content":"        String taskType \u003d taskList.get(taskIndex).getTaskType();","lastModifiedDate":"2023-02-09"},{"lineNumber":81,"author":{"gitId":"EangJS"},"content":"        String task \u003d taskList.get(taskIndex).setAsDone();","lastModifiedDate":"2023-02-09"},{"lineNumber":82,"author":{"gitId":"EangJS"},"content":"        taskWriter.writeToJson(taskList);","lastModifiedDate":"2023-02-10"},{"lineNumber":83,"author":{"gitId":"EangJS"},"content":"        System.out.println(\"Noted sir, I have marked \\n\"","lastModifiedDate":"2023-01-22"},{"lineNumber":84,"author":{"gitId":"EangJS"},"content":"                + taskType + \"[X] \" + task + \"\\n\"","lastModifiedDate":"2023-01-29"},{"lineNumber":85,"author":{"gitId":"EangJS"},"content":"                + \"as done.\");","lastModifiedDate":"2023-01-22"},{"lineNumber":86,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":87,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":88,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":89,"author":{"gitId":"EangJS"},"content":"     * Set the specified task at the given index to undone","lastModifiedDate":"2023-01-22"},{"lineNumber":90,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":91,"author":{"gitId":"EangJS"},"content":"     * @param taskIndex index in which the task is stored in the array","lastModifiedDate":"2023-01-22"},{"lineNumber":92,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":93,"author":{"gitId":"EangJS"},"content":"    public void markAsUndone(int taskIndex) {","lastModifiedDate":"2023-01-22"},{"lineNumber":94,"author":{"gitId":"EangJS"},"content":"        String taskType \u003d taskList.get(taskIndex).getTaskType();","lastModifiedDate":"2023-02-09"},{"lineNumber":95,"author":{"gitId":"EangJS"},"content":"        String task \u003d taskList.get(taskIndex).setAsUndone();","lastModifiedDate":"2023-02-09"},{"lineNumber":96,"author":{"gitId":"EangJS"},"content":"        taskWriter.writeToJson(taskList);","lastModifiedDate":"2023-02-10"},{"lineNumber":97,"author":{"gitId":"EangJS"},"content":"        System.out.println(\"Noted sir, I have marked \\n\"","lastModifiedDate":"2023-01-22"},{"lineNumber":98,"author":{"gitId":"EangJS"},"content":"                + taskType + \"[ ]\" + task + \"\\n\"","lastModifiedDate":"2023-01-29"},{"lineNumber":99,"author":{"gitId":"EangJS"},"content":"                + \"as not done.\");","lastModifiedDate":"2023-01-22"},{"lineNumber":100,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":101,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":102,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":103,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":104,"author":{"gitId":"EangJS"},"content":"     * prints all tasks stored in the list","lastModifiedDate":"2023-01-22"},{"lineNumber":105,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":106,"author":{"gitId":"EangJS"},"content":"    public void printList() {","lastModifiedDate":"2023-01-22"},{"lineNumber":107,"author":{"gitId":"EangJS"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-01-22"},{"lineNumber":108,"author":{"gitId":"EangJS"},"content":"        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2023-02-09"},{"lineNumber":109,"author":{"gitId":"EangJS"},"content":"            System.out.println(\"There are no tasks in your list!\");","lastModifiedDate":"2023-02-05"},{"lineNumber":110,"author":{"gitId":"EangJS"},"content":"            return;","lastModifiedDate":"2023-02-05"},{"lineNumber":111,"author":{"gitId":"EangJS"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":112,"author":{"gitId":"EangJS"},"content":"        int count \u003d 1;","lastModifiedDate":"2023-02-09"},{"lineNumber":113,"author":{"gitId":"EangJS"},"content":"        for (Task i : taskList) {","lastModifiedDate":"2023-02-09"},{"lineNumber":114,"author":{"gitId":"EangJS"},"content":"            System.out.println(count + \". \" + i.getTaskStatus());","lastModifiedDate":"2023-02-09"},{"lineNumber":115,"author":{"gitId":"EangJS"},"content":"            count++;","lastModifiedDate":"2023-02-09"},{"lineNumber":116,"author":{"gitId":"EangJS"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":117,"author":{"gitId":"EangJS"},"content":"        System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2023-02-09"},{"lineNumber":118,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":119,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":120,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":121,"author":{"gitId":"EangJS"},"content":"     * Deletes the specified index","lastModifiedDate":"2023-02-09"},{"lineNumber":122,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":123,"author":{"gitId":"EangJS"},"content":"    public void deleteTask(int taskIndex) {","lastModifiedDate":"2023-02-09"},{"lineNumber":124,"author":{"gitId":"EangJS"},"content":"        String taskType \u003d taskList.get(taskIndex).getTaskType();","lastModifiedDate":"2023-02-09"},{"lineNumber":125,"author":{"gitId":"EangJS"},"content":"        String task \u003d taskList.get(taskIndex).getTaskStatus();","lastModifiedDate":"2023-02-09"},{"lineNumber":126,"author":{"gitId":"EangJS"},"content":"        taskList.remove(taskIndex);","lastModifiedDate":"2023-02-09"},{"lineNumber":127,"author":{"gitId":"EangJS"},"content":"        System.out.println(\"Noted sir, I have removed \\n\"","lastModifiedDate":"2023-02-09"},{"lineNumber":128,"author":{"gitId":"EangJS"},"content":"                + task);","lastModifiedDate":"2023-02-09"},{"lineNumber":129,"author":{"gitId":"EangJS"},"content":"        System.out.println(\"Now you have \" + taskList.size() + \" task(s) in the list.\");","lastModifiedDate":"2023-02-09"},{"lineNumber":130,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":131,"author":{"gitId":"EangJS"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"EangJS":131}},{"path":"src/main/java/duke/command/UserCommandManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EangJS"},"content":"package duke.command;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"EangJS"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"EangJS"},"content":"public class UserCommandManager {","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"EangJS"},"content":"    CommandHandler commandHandler \u003d new CommandHandler();","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"EangJS"},"content":"     * Handles the command (i.e. type of task) by user","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"EangJS"},"content":"     * and parse the arguments to add to task list","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"EangJS"},"content":"     * @param userCommand type of action user wants to perform","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"EangJS"},"content":"     * @param userInput   arguments to the action (i.e. task description)","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"EangJS"},"content":"    public void handleCommands(String userCommand, String userInput) {","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"EangJS"},"content":"        Scanner scanner \u003d new Scanner(userInput);","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"EangJS"},"content":"        switch (userCommand) {","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"EangJS"},"content":"        case \"list\":","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"EangJS"},"content":"            commandHandler.handleListCommand();","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"EangJS"},"content":"            break;","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"EangJS"},"content":"        case \"mark\":","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"EangJS"},"content":"            commandHandler.handleMarkAsDone(userInput.replace(\" \", \"\"));","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"EangJS"},"content":"            break;","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"EangJS"},"content":"        case \"unmark\":","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"EangJS"},"content":"            commandHandler.handleMarkAsUndone(userInput.replace(\" \", \"\"));","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"EangJS"},"content":"            break;","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"EangJS"},"content":"        case \"todo\":","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"EangJS"},"content":"            commandHandler.handleTodoCommand(scanner.nextLine());","lastModifiedDate":"2023-02-05"},{"lineNumber":30,"author":{"gitId":"EangJS"},"content":"            break;","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"EangJS"},"content":"        case \"deadline\":","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"EangJS"},"content":"            commandHandler.handleDeadlineCommand(scanner.nextLine().trim().split(\"/by\"));","lastModifiedDate":"2023-02-05"},{"lineNumber":33,"author":{"gitId":"EangJS"},"content":"            break;","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"EangJS"},"content":"        case \"event\":","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"EangJS"},"content":"            commandHandler.handleEventCommand(userInput);","lastModifiedDate":"2023-02-05"},{"lineNumber":36,"author":{"gitId":"EangJS"},"content":"            break;","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"EangJS"},"content":"        case \"delete\":","lastModifiedDate":"2023-02-09"},{"lineNumber":38,"author":{"gitId":"EangJS"},"content":"            commandHandler.handleDeleteCommand(userInput.replace(\" \", \"\"));","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"EangJS"},"content":"            break;","lastModifiedDate":"2023-02-09"},{"lineNumber":40,"author":{"gitId":"EangJS"},"content":"        default:","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"EangJS"},"content":"            commandHandler.handleUnknownCommand();","lastModifiedDate":"2023-02-05"},{"lineNumber":42,"author":{"gitId":"EangJS"},"content":"            break;","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"EangJS"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"EangJS"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"EangJS":45}},{"path":"src/main/java/duke/exceptions/ListTooLarge.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EangJS"},"content":"package duke.exceptions;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"EangJS"},"content":"public class ListTooLarge extends Exception {","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"EangJS"},"content":"    public ListTooLarge() {","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"EangJS"},"content":"        super(\"Can\u0027t Add anymore items, the list has reached its max size\");","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"EangJS"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"EangJS":7}},{"path":"src/main/java/duke/filemanager/TaskLoader.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EangJS"},"content":"package duke.filemanager;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"EangJS"},"content":"import com.google.gson.*;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"EangJS"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"EangJS"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"EangJS"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"EangJS"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"EangJS"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"EangJS"},"content":"import java.io.Reader;","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"EangJS"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"EangJS"},"content":"public class TaskLoader {","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"EangJS"},"content":"    public ArrayList\u003cTask\u003e setClasses() {","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"EangJS"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"EangJS"},"content":"        Gson gson \u003d new Gson();","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"EangJS"},"content":"        JsonArray jsonArray \u003d new JsonArray();","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"EangJS"},"content":"        try {","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"EangJS"},"content":"            Reader reader \u003d new FileReader(\"duke.json\");","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"EangJS"},"content":"            JsonParser parser \u003d new JsonParser();","lastModifiedDate":"2023-02-10"},{"lineNumber":22,"author":{"gitId":"EangJS"},"content":"            JsonElement jsonTree \u003d parser.parse(reader);","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"EangJS"},"content":"            jsonArray \u003d jsonTree.getAsJsonObject().getAsJsonArray(\"taskList\");","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"EangJS"},"content":"        } catch (FileNotFoundException notFound) {","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"EangJS"},"content":"            System.out.println(\"Data file does not exist, starting fresh\");","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"EangJS"},"content":"        } catch (IllegalStateException i) {","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"EangJS"},"content":"            System.out.println(\"Corrupted data file, starting fresh\");","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"EangJS"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"EangJS"},"content":"            System.out.println(\"Unexpected error occurred\");","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"EangJS"},"content":"            System.out.println(e);","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"EangJS"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":32,"author":{"gitId":"EangJS"},"content":"        for (JsonElement element : jsonArray) {","lastModifiedDate":"2023-02-10"},{"lineNumber":33,"author":{"gitId":"EangJS"},"content":"            if (element.getAsJsonObject().has(\"type\") \u0026\u0026 element.getAsJsonObject().get(\"type\").getAsString().equals(\"todo\")) {","lastModifiedDate":"2023-02-10"},{"lineNumber":34,"author":{"gitId":"EangJS"},"content":"                tasks.add(gson.fromJson(element, Task.class));","lastModifiedDate":"2023-02-10"},{"lineNumber":35,"author":{"gitId":"EangJS"},"content":"            } else if (element.getAsJsonObject().has(\"startTime\")) {","lastModifiedDate":"2023-02-10"},{"lineNumber":36,"author":{"gitId":"EangJS"},"content":"                tasks.add(gson.fromJson(element, Event.class));","lastModifiedDate":"2023-02-10"},{"lineNumber":37,"author":{"gitId":"EangJS"},"content":"            } else if (element.getAsJsonObject().has(\"dueBy\")) {","lastModifiedDate":"2023-02-10"},{"lineNumber":38,"author":{"gitId":"EangJS"},"content":"                tasks.add(gson.fromJson(element, Deadline.class));","lastModifiedDate":"2023-02-10"},{"lineNumber":39,"author":{"gitId":"EangJS"},"content":"            }","lastModifiedDate":"2023-02-10"},{"lineNumber":40,"author":{"gitId":"EangJS"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":41,"author":{"gitId":"EangJS"},"content":"        return tasks;","lastModifiedDate":"2023-02-10"},{"lineNumber":42,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":43,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":44,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":45,"author":{"gitId":"EangJS"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"EangJS":45}},{"path":"src/main/java/duke/filemanager/TaskWriter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EangJS"},"content":"package duke.filemanager;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"EangJS"},"content":"import com.google.gson.*;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"EangJS"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"EangJS"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"EangJS"},"content":"import java.io.Writer;","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"EangJS"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"EangJS"},"content":"public class TaskWriter {","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"EangJS"},"content":"    public void writeToJson(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"EangJS"},"content":"        try {","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"EangJS"},"content":"            Writer writer \u003d new FileWriter(\"duke.json\");","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"EangJS"},"content":"            JsonArray jsonArray \u003d new Gson().toJsonTree(taskList).getAsJsonArray();","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"EangJS"},"content":"            JsonObject jsonObject \u003d new JsonObject();","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"EangJS"},"content":"            jsonObject.add(\"taskList\", jsonArray);","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"EangJS"},"content":"            Gson gson \u003d new GsonBuilder()","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"EangJS"},"content":"                    .setPrettyPrinting()","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"EangJS"},"content":"                    .create();","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"EangJS"},"content":"            writer.write(gson.toJson(jsonObject));","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"EangJS"},"content":"            writer.close();","lastModifiedDate":"2023-02-10"},{"lineNumber":22,"author":{"gitId":"EangJS"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"EangJS"},"content":"            System.out.println(\"Failed to write to file\");","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"EangJS"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"EangJS"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"EangJS":28}},{"path":"src/main/java/duke/main/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EangJS"},"content":"package duke.main;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"EangJS"},"content":"import duke.command.UserCommandManager;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"EangJS"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"EangJS"},"content":"/**","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"EangJS"},"content":" * Last Modified: 10.2.23 0157","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"EangJS"},"content":" */","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":12,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-01-13"},{"lineNumber":13,"author":{"gitId":"EangJS"},"content":"     * Prints out the greeting message to the user","lastModifiedDate":"2023-01-13"},{"lineNumber":14,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-01-13"},{"lineNumber":15,"author":{"gitId":"EangJS"},"content":"    public static void greetUser() {","lastModifiedDate":"2023-01-13"},{"lineNumber":16,"author":{"gitId":"EangJS"},"content":"        String logo \u003d \" .----------------.  .----------------.  .----------------.  .----------------. \\n\" +","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"EangJS"},"content":"                \"| | |_   ___ `.  | || ||_   _||_   _|| || | |_  ||_  _|  | || | |_   ___  |  | |\\n\" +","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"EangJS"},"content":"                \"| |   | |   `. \\\\ | || |  | |    | |  | || |   | |_/ /    | || |   | |_  \\\\_|  | |\\n\" +","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"EangJS"},"content":"                \"| |   | |    | | | || |  | \u0027    \u0027 |  | || |   |  __\u0027.    | || |   |  _|  _   | |\\n\" +","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"EangJS"},"content":"                \"| |  _| |___.\u0027 / | || |   \\\\ `--\u0027 /   | || |  _| |  \\\\ \\\\_  | || |  _| |___/ |  | |\\n\" +","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"EangJS"},"content":"                \"| | |________.\u0027  | || |    `.__.\u0027    | || | |____||____| | || | |_________|  | |\\n\" +","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"EangJS"},"content":"                \" \u0027----------------\u0027  \u0027----------------\u0027  \u0027----------------\u0027  \u0027----------------\u0027 \";","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"EangJS"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"EangJS"},"content":"        String greetMessage \u003d \"Hello! I\u0027m Duke\\n\"","lastModifiedDate":"2023-01-13"},{"lineNumber":25,"author":{"gitId":"EangJS"},"content":"                + \"Send me a list of things to remember!\\n\"","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"EangJS"},"content":"                + \"Type \u003cbye\u003e to exit\";","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"EangJS"},"content":"        System.out.println(greetMessage);","lastModifiedDate":"2023-01-13"},{"lineNumber":28,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":29,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":30,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"EangJS"},"content":"     * Prints out the exit message to the user","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"EangJS"},"content":"    public static void exitProgram() {","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"EangJS"},"content":"        String exitMessage \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"EangJS"},"content":"        System.out.println(exitMessage);","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"EangJS"},"content":"        System.exit(0);","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"EangJS"},"content":"     * Greets user and responds to user commands from the command line","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"EangJS"},"content":"     * @param args None taken","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"EangJS"},"content":"    @SuppressWarnings(\"InfiniteLoopStatement\")","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":46,"author":{"gitId":"EangJS"},"content":"        Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-21"},{"lineNumber":47,"author":{"gitId":"EangJS"},"content":"        greetUser();","lastModifiedDate":"2023-01-13"},{"lineNumber":48,"author":{"gitId":"EangJS"},"content":"        UserCommandManager commandManager \u003d new UserCommandManager();","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"EangJS"},"content":"        while (true) {","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"EangJS"},"content":"            String userCommand \u003d input.next().toLowerCase();","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"EangJS"},"content":"            if (userCommand.equals(\"bye\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"EangJS"},"content":"                exitProgram();","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"EangJS"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"EangJS"},"content":"            commandManager.handleCommands(userCommand, input.nextLine());","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"EangJS"},"content":"            System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-02-05"},{"lineNumber":56,"author":{"gitId":"EangJS"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"EangJS":54,"-":4}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EangJS"},"content":"package duke.task;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"EangJS"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"EangJS"},"content":"    protected String dueBy;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"EangJS"},"content":"    public Deadline(String task, String dueBy) {","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"EangJS"},"content":"        super(task);","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"EangJS"},"content":"        this.dueBy \u003d dueBy;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"EangJS"},"content":"        this.type \u003d \"Deadline\";","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"EangJS"},"content":"     * gets the due date of the task","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"EangJS"},"content":"     * @return formatted string of due date","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"EangJS"},"content":"    public String getDueDate() {","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"EangJS"},"content":"        return \"(by:\" + dueBy + \")\";","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"EangJS"},"content":"     * gets the type of task (deadline type)","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"EangJS"},"content":"     * @return letter representing type of task","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"EangJS"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"EangJS"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"EangJS"},"content":"        return \"[D]\";","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"EangJS"},"content":"     * Shows the full deadline status and description","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"EangJS"},"content":"     * @return deadline status and description","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"EangJS"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"EangJS"},"content":"    public String getTaskStatus() {","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"EangJS"},"content":"        return \"[D]\" + \"[\" + getStatusIcon() + \"] \" + task + getDueDate();","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"EangJS"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"EangJS":40}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EangJS"},"content":"package duke.task;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"EangJS"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"EangJS"},"content":"    protected String startTime;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"EangJS"},"content":"    protected String endTime;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"EangJS"},"content":"    public Event(String task, String startTime, String endTime) {","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"EangJS"},"content":"        super(task);","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"EangJS"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"EangJS"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"EangJS"},"content":"        this.type \u003d \"Event\";","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"EangJS"},"content":"     * gets the duration of the event","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"EangJS"},"content":"     * @return the formatted string of the event duration","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"EangJS"},"content":"    public String getDuration() {","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"EangJS"},"content":"        return \"(from:\" + startTime + \"to:\" + endTime + \")\";","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"EangJS"},"content":"     * gets the type of task (event type)","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"EangJS"},"content":"     * @return letter representing type of task","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"EangJS"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"EangJS"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"EangJS"},"content":"        return \"[E]\";","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"EangJS"},"content":"     * Shows the full event status and description","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"EangJS"},"content":"     * @return event status and description","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"EangJS"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"EangJS"},"content":"    public String getTaskStatus() {","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"EangJS"},"content":"        return \"[E]\" + \"[\" + getStatusIcon() + \"] \" + task + getDuration();","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"EangJS"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"EangJS":42}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EangJS"},"content":"package duke.task;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"EangJS"},"content":"public class Task {","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"EangJS"},"content":"    protected String type;","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"EangJS"},"content":"    protected String task;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"EangJS"},"content":"    private boolean isDone;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"EangJS"},"content":"    public Task(String task) {","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"EangJS"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"EangJS"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"EangJS"},"content":"        this.type \u003d \"todo\";","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"EangJS"},"content":"     * sets the current task to be marked as done","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"EangJS"},"content":"     * @return the String of the marked task","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"EangJS"},"content":"    public String setAsDone() {","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"EangJS"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"EangJS"},"content":"        return this.task;","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"EangJS"},"content":"     * sets the current task to be marked as not done","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"EangJS"},"content":"     * @return the String of the marked task","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"EangJS"},"content":"    public String setAsUndone() {","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"EangJS"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"EangJS"},"content":"        return this.task;","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"EangJS"},"content":"     * checks if the task is done, if done will return a tick,","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"EangJS"},"content":"     * however, if not done will return an empty space","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"EangJS"},"content":"     * @return the String indicating the status of the task","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"EangJS"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"EangJS"},"content":"        return (this.isDone ? \"X\" : \" \");","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"EangJS"},"content":"     * gets the type of task (todo type)","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"EangJS"},"content":"     * @return letter representing type of task","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"EangJS"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"EangJS"},"content":"        return \"[T]\";","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"EangJS"},"content":"     * Shows the full task status and description","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"EangJS"},"content":"     * @return task status and description","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"EangJS"},"content":"    public String getTaskStatus() {","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"EangJS"},"content":"        return \"[T]\" + \"[\" + getStatusIcon() + \"]\" + task;","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"EangJS"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"EangJS":61}},{"path":"text-ui-test/Counter.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"EangJS"},"content":"REM Credits: Code adapted from: https://gist.github.com/Archigos/0e34219b4a8b82358bb0","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"EangJS"},"content":"@ECHO OFF","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"EangJS"},"content":":ProgressMeter","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"EangJS"},"content":"SETLOCAL ENABLEDELAYEDEXPANSION","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"EangJS"},"content":"SET ProgressCnt\u003d%1","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"EangJS"},"content":"SET /A ProgressPercent\u003dProgressCnt/10","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"EangJS"},"content":"SET /A NumBars\u003d%ProgressPercent%","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"EangJS"},"content":"SET /A NumSpaces\u003d10-%NumBars%","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"EangJS"},"content":"SET Meter\u003d","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"EangJS"},"content":"FOR /L %%A IN (%NumBars%,-1,1) DO SET Meter\u003d!Meter!I","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"EangJS"},"content":"FOR /L %%A IN (%NumSpaces%,-1,1) DO SET Meter\u003d!Meter!.","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"EangJS"},"content":"TITLE Progress:  [%Meter%]  %ProgressCnt%%%","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"EangJS"},"content":"ENDLOCAL","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"EangJS"},"content":"GOTO :EOF","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"EangJS":18}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"EangJS"},"content":"todo Buy milk","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"EangJS"},"content":"deadline bake a cake /by 17/02/2023","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"EangJS"},"content":"event attend baking course /from 16/02/2023 /to 19/02/2023","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"EangJS"},"content":"list","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"EangJS"},"content":"event attend baking course /from 16/02/2023 /to 19/02/2023","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"EangJS"},"content":"deadline bake a cake /by 17/02/2023","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"EangJS"},"content":"deadline sell the cake /by 18/02/2023","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"EangJS"},"content":"mark 1","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"EangJS"},"content":"mark 2","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"EangJS"},"content":"mark 3","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"EangJS"},"content":"list","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"EangJS"},"content":"unmark 1","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"EangJS"},"content":"list","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"EangJS"},"content":"delete 1","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"EangJS"},"content":"delete 2","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"EangJS"},"content":"delete 3","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"EangJS"},"content":"bye","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"EangJS":17}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"EangJS"},"content":"FOR /L %%A IN (0,1,10) DO CALL COUNTER %%A%%","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"EangJS"},"content":"FOR /L %%A IN (10,1,20) DO CALL COUNTER %%A%%","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"EangJS"},"content":"javac  -cp \"..\\src\\main\\java;..\\lib\\gson-2.8.2.jar\" -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\main\\*.java ","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"EangJS"},"content":"FOR /L %%A IN (20,1,30) DO CALL COUNTER %%A%%","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"EangJS"},"content":"FOR /L %%A IN (30,1,70) DO CALL COUNTER %%A%%","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"EangJS"},"content":"java -classpath \"..\\bin;..\\lib\\gson-2.8.2.jar\" duke.main.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"EangJS"},"content":"FOR /L %%A IN (70,1,80) DO CALL COUNTER %%A%%","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"EangJS"},"content":"FC ACTUAL.TXT EXPECTED.TXT \u003e nul","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"EangJS"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"EangJS"},"content":"    ECHO TESTCASE FAILED","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"EangJS"},"content":") ELSE (","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"EangJS"},"content":"    ECHO TESTCASE PASSED","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"EangJS"},"content":")","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"EangJS"},"content":"FOR /L %%A IN (80,1,100) DO CALL COUNTER %%A%%","lastModifiedDate":"2023-02-05"},{"lineNumber":38,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":39,"author":{"gitId":"EangJS"},"content":"timeout /t 3 \u003e NUL","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"-":17,"EangJS":22}}]
