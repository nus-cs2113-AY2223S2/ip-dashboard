[{"path":"docs/AddingTasks.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"EangJS"},"content":"---","lastModifiedDate":"2023-02-24"},{"lineNumber":2,"author":{"gitId":"EangJS"},"content":"title: Adding Tasks","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"EangJS"},"content":"---","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"EangJS"},"content":"## Usage","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"EangJS"},"content":"### `todo [description]` - Creates a new todo task","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"EangJS"},"content":"Creates a new todo task and adds to the list","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"EangJS"},"content":"Example of usage:","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"EangJS"},"content":"`todo buy milk`","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"EangJS"},"content":"Expected outcome:","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"EangJS"},"content":"You should see a successful output with the total number of tasks","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"EangJS"},"content":"currently in the list as shown:","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"EangJS"},"content":"```","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"EangJS"},"content":"Got it! Added ","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"EangJS"},"content":"[T][ ]buy milk","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"EangJS"},"content":"to the list.","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"EangJS"},"content":"Now you have 1 task(s) in the list.","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"EangJS"},"content":"```","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"EangJS"},"content":"### `deadline [description] /by [due date]` - Creates a new deadline task","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"EangJS"},"content":"`[due date]` - Can be in any format, but to save as a date use dd-MM-yyyy HHmm","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"EangJS"},"content":"else it will default to current date and time","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"EangJS"},"content":"Creates a new deadline task and adds to the list","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"EangJS"},"content":"Example of usage:","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"EangJS"},"content":"- `deadline buy milk /by 22-02-2023 1500`","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"EangJS"},"content":"Expected outcome:","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"EangJS"},"content":"You should see a successful output with the total number of tasks","lastModifiedDate":"2023-02-24"},{"lineNumber":41,"author":{"gitId":"EangJS"},"content":"currently in the list as shown:","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"EangJS"},"content":"```","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"EangJS"},"content":"Got it! Added ","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"EangJS"},"content":"[D][ ] buy milk (by: 22-02-2023 1500)","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"EangJS"},"content":"to the list.","lastModifiedDate":"2023-02-24"},{"lineNumber":47,"author":{"gitId":"EangJS"},"content":"Now you have 2 task(s) in the list.","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"EangJS"},"content":"```","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":50,"author":{"gitId":"EangJS"},"content":"- `deadline buy milk /by dinner time`","lastModifiedDate":"2023-02-24"},{"lineNumber":51,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":52,"author":{"gitId":"EangJS"},"content":"Expected outcome:","lastModifiedDate":"2023-02-24"},{"lineNumber":53,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":54,"author":{"gitId":"EangJS"},"content":"You should see a successful output with the total number of tasks","lastModifiedDate":"2023-02-24"},{"lineNumber":55,"author":{"gitId":"EangJS"},"content":"currently in the list as shown, however since input is not a date a prompt","lastModifiedDate":"2023-02-24"},{"lineNumber":56,"author":{"gitId":"EangJS"},"content":"will be given:","lastModifiedDate":"2023-02-24"},{"lineNumber":57,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":58,"author":{"gitId":"EangJS"},"content":"```","lastModifiedDate":"2023-02-24"},{"lineNumber":59,"author":{"gitId":"EangJS"},"content":"Not a date and time, you can add a datetime with dd-MM-yyyy HHmm format","lastModifiedDate":"2023-02-24"},{"lineNumber":60,"author":{"gitId":"EangJS"},"content":"Got it! Added ","lastModifiedDate":"2023-02-24"},{"lineNumber":61,"author":{"gitId":"EangJS"},"content":"[D][ ] buy milk (by: dinner time)","lastModifiedDate":"2023-02-24"},{"lineNumber":62,"author":{"gitId":"EangJS"},"content":"to the list.","lastModifiedDate":"2023-02-24"},{"lineNumber":63,"author":{"gitId":"EangJS"},"content":"Now you have 2 task(s) in the list.","lastModifiedDate":"2023-02-24"},{"lineNumber":64,"author":{"gitId":"EangJS"},"content":"```","lastModifiedDate":"2023-02-24"},{"lineNumber":65,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":66,"author":{"gitId":"EangJS"},"content":"### `event [description] /from [start date] /to [end date]` - Creates a new event task","lastModifiedDate":"2023-02-24"},{"lineNumber":67,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":68,"author":{"gitId":"EangJS"},"content":"`[start date]`, `[end date]` - Can be in any format, but to save as a date use dd-MM-yyyy HHmm","lastModifiedDate":"2023-02-24"},{"lineNumber":69,"author":{"gitId":"EangJS"},"content":"else it will default to current date and time","lastModifiedDate":"2023-02-24"},{"lineNumber":70,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":71,"author":{"gitId":"EangJS"},"content":"Creates a new event task and adds to the list","lastModifiedDate":"2023-02-24"},{"lineNumber":72,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":73,"author":{"gitId":"EangJS"},"content":"Example of usage:","lastModifiedDate":"2023-02-24"},{"lineNumber":74,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":75,"author":{"gitId":"EangJS"},"content":"- `event lecture time /from 24-02-2023 1600 /to 24-02-2023 1800`","lastModifiedDate":"2023-02-24"},{"lineNumber":76,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":77,"author":{"gitId":"EangJS"},"content":"Expected outcome:","lastModifiedDate":"2023-02-24"},{"lineNumber":78,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":79,"author":{"gitId":"EangJS"},"content":"You should see a successful output with the total number of tasks","lastModifiedDate":"2023-02-24"},{"lineNumber":80,"author":{"gitId":"EangJS"},"content":"currently in the list as shown:","lastModifiedDate":"2023-02-24"},{"lineNumber":81,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":82,"author":{"gitId":"EangJS"},"content":"```","lastModifiedDate":"2023-02-24"},{"lineNumber":83,"author":{"gitId":"EangJS"},"content":"Got it! Added ","lastModifiedDate":"2023-02-24"},{"lineNumber":84,"author":{"gitId":"EangJS"},"content":"[E][ ] lecture time (from: 24-02-2023 1600 to: 24-02-2023 1800)","lastModifiedDate":"2023-02-24"},{"lineNumber":85,"author":{"gitId":"EangJS"},"content":"to the list.","lastModifiedDate":"2023-02-24"},{"lineNumber":86,"author":{"gitId":"EangJS"},"content":"Now you have 3 task(s) in the list.","lastModifiedDate":"2023-02-24"},{"lineNumber":87,"author":{"gitId":"EangJS"},"content":"```","lastModifiedDate":"2023-02-24"},{"lineNumber":88,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":89,"author":{"gitId":"EangJS"},"content":"- `event lecture time /from afternoon /to evening `","lastModifiedDate":"2023-02-24"},{"lineNumber":90,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":91,"author":{"gitId":"EangJS"},"content":"Expected outcome:","lastModifiedDate":"2023-02-24"},{"lineNumber":92,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":93,"author":{"gitId":"EangJS"},"content":"You should see a successful output with the total number of tasks","lastModifiedDate":"2023-02-24"},{"lineNumber":94,"author":{"gitId":"EangJS"},"content":"currently in the list as shown, however since input is not a date a prompt","lastModifiedDate":"2023-02-24"},{"lineNumber":95,"author":{"gitId":"EangJS"},"content":"will be given:","lastModifiedDate":"2023-02-24"},{"lineNumber":96,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":97,"author":{"gitId":"EangJS"},"content":"```","lastModifiedDate":"2023-02-24"},{"lineNumber":98,"author":{"gitId":"EangJS"},"content":"Not a date and time, you can add a datetime with dd-MM-yyyy HHmm format","lastModifiedDate":"2023-02-24"},{"lineNumber":99,"author":{"gitId":"EangJS"},"content":"Got it! Added ","lastModifiedDate":"2023-02-24"},{"lineNumber":100,"author":{"gitId":"EangJS"},"content":"[E][ ] lecture time (from: afternoon to: evening)","lastModifiedDate":"2023-02-24"},{"lineNumber":101,"author":{"gitId":"EangJS"},"content":"to the list.","lastModifiedDate":"2023-02-24"},{"lineNumber":102,"author":{"gitId":"EangJS"},"content":"Now you have 4 task(s) in the list.","lastModifiedDate":"2023-02-24"},{"lineNumber":103,"author":{"gitId":"EangJS"},"content":"```","lastModifiedDate":"2023-02-24"},{"lineNumber":104,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":105,"author":{"gitId":"EangJS"},"content":"Go [back](README.md)","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"EangJS":105}},{"path":"docs/ListingTasks.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"EangJS"},"content":"---","lastModifiedDate":"2023-02-24"},{"lineNumber":2,"author":{"gitId":"EangJS"},"content":"title: Displaying Tasks","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"EangJS"},"content":"---","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"EangJS"},"content":"## Usage","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"EangJS"},"content":"### `list`, `ls` - lists all current tasks","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"EangJS"},"content":"Lists all the tasks stored","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"EangJS"},"content":"Example of usage:","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"EangJS"},"content":"`list`","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"EangJS"},"content":"Expected outcome:","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"EangJS"},"content":"You should see a successful output showing the","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"EangJS"},"content":"all the tasks in the list with the total number of tasks","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"EangJS"},"content":"currently in the list as shown:","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"EangJS"},"content":"```","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"EangJS"},"content":"Here are the tasks in your list:","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"EangJS"},"content":"1. [T][ ] buy milk","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"EangJS"},"content":"2. [E][ ] CS2113 Exam (from: 24-02-2023 1500 to: 24-02-2023 1700)","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"EangJS"},"content":"3. [D][ ] submit CS2113 assignmnet (by: 24-02-2023 1700)","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"EangJS"},"content":"4. [D][ ] review PRs (by: 25-02-2023 1200)","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"EangJS"},"content":"5. [D][ ] buy flour (by: 22-02-2023 1500)","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"EangJS"},"content":"```","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"EangJS"},"content":"### `list-sorted`, `ls-s` - sorts and prints the list without saving to hard disk","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"EangJS"},"content":"Sorts the list and prints the sorted list","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"EangJS"},"content":"Example of usage:","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"EangJS"},"content":"`ls-a`, `list-sorted`","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"EangJS"},"content":"Expected outcome:","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"EangJS"},"content":"You should see a successful output showing the","lastModifiedDate":"2023-02-24"},{"lineNumber":41,"author":{"gitId":"EangJS"},"content":"sorted list based on end time:","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"EangJS"},"content":"Try comparing with the list above!","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"EangJS"},"content":"```","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"EangJS"},"content":"Sorting the list for you...","lastModifiedDate":"2023-02-24"},{"lineNumber":47,"author":{"gitId":"EangJS"},"content":"Here are the tasks in your list:","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"EangJS"},"content":"1. [T][ ] buy milk","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"EangJS"},"content":"2. [D][ ] buy flour (by: 22-02-2023 1500)","lastModifiedDate":"2023-02-24"},{"lineNumber":50,"author":{"gitId":"EangJS"},"content":"3. [E][ ] CS2113 Exam (from: 24-02-2023 1500 to: 24-02-2023 1700)","lastModifiedDate":"2023-02-24"},{"lineNumber":51,"author":{"gitId":"EangJS"},"content":"4. [D][ ] submit CS2113 assignmnet (by: 24-02-2023 1700)","lastModifiedDate":"2023-02-24"},{"lineNumber":52,"author":{"gitId":"EangJS"},"content":"5. [D][ ] review PRs (by: 25-02-2023 1200)","lastModifiedDate":"2023-02-24"},{"lineNumber":53,"author":{"gitId":"EangJS"},"content":"Now you have 5 tasks in the list.","lastModifiedDate":"2023-02-24"},{"lineNumber":54,"author":{"gitId":"EangJS"},"content":"```","lastModifiedDate":"2023-02-24"},{"lineNumber":55,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":56,"author":{"gitId":"EangJS"},"content":"### `sort` - sorts and prints the list and saves the sorted list to the hard disk","lastModifiedDate":"2023-02-24"},{"lineNumber":57,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":58,"author":{"gitId":"EangJS"},"content":"Sorts the list and prints the sorted list and saves the list","lastModifiedDate":"2023-02-24"},{"lineNumber":59,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":60,"author":{"gitId":"EangJS"},"content":"Example of usage:","lastModifiedDate":"2023-02-24"},{"lineNumber":61,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":62,"author":{"gitId":"EangJS"},"content":"`sort`","lastModifiedDate":"2023-02-24"},{"lineNumber":63,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":64,"author":{"gitId":"EangJS"},"content":"Expected outcome:","lastModifiedDate":"2023-02-24"},{"lineNumber":65,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":66,"author":{"gitId":"EangJS"},"content":"You should see a successful output showing the","lastModifiedDate":"2023-02-24"},{"lineNumber":67,"author":{"gitId":"EangJS"},"content":"sorted list based on end time:","lastModifiedDate":"2023-02-24"},{"lineNumber":68,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":69,"author":{"gitId":"EangJS"},"content":"```","lastModifiedDate":"2023-02-24"},{"lineNumber":70,"author":{"gitId":"EangJS"},"content":"Sorting and saving the list for you...","lastModifiedDate":"2023-02-24"},{"lineNumber":71,"author":{"gitId":"EangJS"},"content":"Here are the tasks in your list:","lastModifiedDate":"2023-02-24"},{"lineNumber":72,"author":{"gitId":"EangJS"},"content":"1. [T][ ] buy milk","lastModifiedDate":"2023-02-24"},{"lineNumber":73,"author":{"gitId":"EangJS"},"content":"2. [D][ ] buy flour (by: 22-02-2023 1500)","lastModifiedDate":"2023-02-24"},{"lineNumber":74,"author":{"gitId":"EangJS"},"content":"3. [E][ ] CS2113 Exam (from: 24-02-2023 1500 to: 24-02-2023 1700)","lastModifiedDate":"2023-02-24"},{"lineNumber":75,"author":{"gitId":"EangJS"},"content":"4. [D][ ] submit CS2113 assignmnet (by: 24-02-2023 1700)","lastModifiedDate":"2023-02-24"},{"lineNumber":76,"author":{"gitId":"EangJS"},"content":"5. [D][ ] review PRs (by: 25-02-2023 1200)","lastModifiedDate":"2023-02-24"},{"lineNumber":77,"author":{"gitId":"EangJS"},"content":"Now you have 5 tasks in the list.","lastModifiedDate":"2023-02-24"},{"lineNumber":78,"author":{"gitId":"EangJS"},"content":"```","lastModifiedDate":"2023-02-24"},{"lineNumber":79,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":80,"author":{"gitId":"EangJS"},"content":"### `find [query]` - Searches for query string in task description and prints matche(s)","lastModifiedDate":"2023-02-24"},{"lineNumber":81,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":82,"author":{"gitId":"EangJS"},"content":"Finds a task that corresponds to query string and prints matche(s)","lastModifiedDate":"2023-02-24"},{"lineNumber":83,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":84,"author":{"gitId":"EangJS"},"content":"Example of usage:","lastModifiedDate":"2023-02-24"},{"lineNumber":85,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":86,"author":{"gitId":"EangJS"},"content":"`find CS2113`","lastModifiedDate":"2023-02-24"},{"lineNumber":87,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":88,"author":{"gitId":"EangJS"},"content":"Expected outcome:","lastModifiedDate":"2023-02-24"},{"lineNumber":89,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":90,"author":{"gitId":"EangJS"},"content":"You should see a successful output matching tasks.","lastModifiedDate":"2023-02-24"},{"lineNumber":91,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":92,"author":{"gitId":"EangJS"},"content":"```","lastModifiedDate":"2023-02-24"},{"lineNumber":93,"author":{"gitId":"EangJS"},"content":"1. [E][ ] CS2113 Exam (from: 24-02-2023 1500 to: 24-02-2023 1700)","lastModifiedDate":"2023-02-24"},{"lineNumber":94,"author":{"gitId":"EangJS"},"content":"2. [D][ ] submit CS2113 assignmnet (by: 24-02-2023 1700)","lastModifiedDate":"2023-02-24"},{"lineNumber":95,"author":{"gitId":"EangJS"},"content":"You have 2 to your query of: CS2113","lastModifiedDate":"2023-02-24"},{"lineNumber":96,"author":{"gitId":"EangJS"},"content":"```","lastModifiedDate":"2023-02-24"},{"lineNumber":97,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":98,"author":{"gitId":"EangJS"},"content":"Go [back](README.md)","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"EangJS":98}},{"path":"docs/ModifyingTasks.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"EangJS"},"content":"---","lastModifiedDate":"2023-02-24"},{"lineNumber":2,"author":{"gitId":"EangJS"},"content":"title: Modifying Tasks","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"EangJS"},"content":"---","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"EangJS"},"content":"## Usage","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"EangJS"},"content":"### `delete [index]` - deletes a task at index","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"EangJS"},"content":"`[index]` - Must be an integer within the range of the list (i.e. as per the example","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"EangJS"},"content":"below, index can only be numbers 1 - 4)","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"EangJS"},"content":"Removes a task from the list","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"EangJS"},"content":"For example these are the current tasks in the list now:","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"EangJS"},"content":"```","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"EangJS"},"content":"Here are the tasks in your list:","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"EangJS"},"content":"1. [T][ ] buy milk","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"EangJS"},"content":"2. [D][ ] buy milk (by: dinner time)","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"EangJS"},"content":"3. [E][ ] lecture time (from: 24-02-2023 1600 to: 24-02-2023 1800)","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"EangJS"},"content":"4. [E][ ] lecture time (from: afternoon to: evening)","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"EangJS"},"content":"Now you have 4 tasks in the list.","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"EangJS"},"content":"```","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"EangJS"},"content":"Example of usage:","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"EangJS"},"content":"`delete 3`","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"EangJS"},"content":"Expected outcome:","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"EangJS"},"content":"You should see a successful output showing the","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"EangJS"},"content":"deleted task with the total number of tasks","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"EangJS"},"content":"currently in the list as shown:","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"EangJS"},"content":"```","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"EangJS"},"content":"Noted sir, I have removed ","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"EangJS"},"content":"[E][ ]lecture time","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"EangJS"},"content":"from the list","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"EangJS"},"content":"Now you have 3 task(s) in the list.","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"EangJS"},"content":"```","lastModifiedDate":"2023-02-24"},{"lineNumber":41,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"EangJS"},"content":"### `mark [index]` - marks a task at index","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"EangJS"},"content":"`[index]` - Must be an integer within the range of the list (i.e. as per the example","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"EangJS"},"content":"below, index can only be numbers 1 - 4)","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":47,"author":{"gitId":"EangJS"},"content":"Marks a task in the list","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"EangJS"},"content":"For example these are the current tasks in the list now:","lastModifiedDate":"2023-02-24"},{"lineNumber":50,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":51,"author":{"gitId":"EangJS"},"content":"```","lastModifiedDate":"2023-02-24"},{"lineNumber":52,"author":{"gitId":"EangJS"},"content":"Here are the tasks in your list:","lastModifiedDate":"2023-02-24"},{"lineNumber":53,"author":{"gitId":"EangJS"},"content":"1. [T][ ] buy milk","lastModifiedDate":"2023-02-24"},{"lineNumber":54,"author":{"gitId":"EangJS"},"content":"2. [D][ ] buy milk (by: dinner time)","lastModifiedDate":"2023-02-24"},{"lineNumber":55,"author":{"gitId":"EangJS"},"content":"3. [E][ ] lecture time (from: 24-02-2023 1600 to: 24-02-2023 1800)","lastModifiedDate":"2023-02-24"},{"lineNumber":56,"author":{"gitId":"EangJS"},"content":"4. [E][ ] lecture time (from: afternoon to: evening)","lastModifiedDate":"2023-02-24"},{"lineNumber":57,"author":{"gitId":"EangJS"},"content":"Now you have 4 tasks in the list.","lastModifiedDate":"2023-02-24"},{"lineNumber":58,"author":{"gitId":"EangJS"},"content":"```","lastModifiedDate":"2023-02-24"},{"lineNumber":59,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":60,"author":{"gitId":"EangJS"},"content":"Example of usage:","lastModifiedDate":"2023-02-24"},{"lineNumber":61,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":62,"author":{"gitId":"EangJS"},"content":"`mark 4`","lastModifiedDate":"2023-02-24"},{"lineNumber":63,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":64,"author":{"gitId":"EangJS"},"content":"Expected outcome:","lastModifiedDate":"2023-02-24"},{"lineNumber":65,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":66,"author":{"gitId":"EangJS"},"content":"You should see a successful output showing the","lastModifiedDate":"2023-02-24"},{"lineNumber":67,"author":{"gitId":"EangJS"},"content":"marked task:","lastModifiedDate":"2023-02-24"},{"lineNumber":68,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":69,"author":{"gitId":"EangJS"},"content":"```","lastModifiedDate":"2023-02-24"},{"lineNumber":70,"author":{"gitId":"EangJS"},"content":"Noted sir, I have marked ","lastModifiedDate":"2023-02-24"},{"lineNumber":71,"author":{"gitId":"EangJS"},"content":"[E][X] lecture time","lastModifiedDate":"2023-02-24"},{"lineNumber":72,"author":{"gitId":"EangJS"},"content":"as done.","lastModifiedDate":"2023-02-24"},{"lineNumber":73,"author":{"gitId":"EangJS"},"content":"```","lastModifiedDate":"2023-02-24"},{"lineNumber":74,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":75,"author":{"gitId":"EangJS"},"content":"### `unmark [index]` - deletes a task at index","lastModifiedDate":"2023-02-24"},{"lineNumber":76,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":77,"author":{"gitId":"EangJS"},"content":"`[index]` - Must be an integer within the range of the list (i.e. as per the example","lastModifiedDate":"2023-02-24"},{"lineNumber":78,"author":{"gitId":"EangJS"},"content":"below, index can only be numbers 1 - 4)","lastModifiedDate":"2023-02-24"},{"lineNumber":79,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":80,"author":{"gitId":"EangJS"},"content":"Unmark a task from the list","lastModifiedDate":"2023-02-24"},{"lineNumber":81,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":82,"author":{"gitId":"EangJS"},"content":"For example these are the current tasks in the list now:","lastModifiedDate":"2023-02-24"},{"lineNumber":83,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":84,"author":{"gitId":"EangJS"},"content":"```","lastModifiedDate":"2023-02-24"},{"lineNumber":85,"author":{"gitId":"EangJS"},"content":"Here are the tasks in your list:","lastModifiedDate":"2023-02-24"},{"lineNumber":86,"author":{"gitId":"EangJS"},"content":"1. [T][ ] buy milk","lastModifiedDate":"2023-02-24"},{"lineNumber":87,"author":{"gitId":"EangJS"},"content":"2. [D][ ] buy milk (by: dinner time)","lastModifiedDate":"2023-02-24"},{"lineNumber":88,"author":{"gitId":"EangJS"},"content":"3. [E][ ] lecture time (from: 24-02-2023 1600 to: 24-02-2023 1800)","lastModifiedDate":"2023-02-24"},{"lineNumber":89,"author":{"gitId":"EangJS"},"content":"4. [E][ ] lecture time (from: afternoon to: evening)","lastModifiedDate":"2023-02-24"},{"lineNumber":90,"author":{"gitId":"EangJS"},"content":"Now you have 4 tasks in the list.","lastModifiedDate":"2023-02-24"},{"lineNumber":91,"author":{"gitId":"EangJS"},"content":"```","lastModifiedDate":"2023-02-24"},{"lineNumber":92,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":93,"author":{"gitId":"EangJS"},"content":"Example of usage:","lastModifiedDate":"2023-02-24"},{"lineNumber":94,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":95,"author":{"gitId":"EangJS"},"content":"`unmark 4`","lastModifiedDate":"2023-02-24"},{"lineNumber":96,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":97,"author":{"gitId":"EangJS"},"content":"Expected outcome:","lastModifiedDate":"2023-02-24"},{"lineNumber":98,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":99,"author":{"gitId":"EangJS"},"content":"You should see a successful output showing the","lastModifiedDate":"2023-02-24"},{"lineNumber":100,"author":{"gitId":"EangJS"},"content":"unmarked task:","lastModifiedDate":"2023-02-24"},{"lineNumber":101,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":102,"author":{"gitId":"EangJS"},"content":"```","lastModifiedDate":"2023-02-24"},{"lineNumber":103,"author":{"gitId":"EangJS"},"content":"Noted sir, I have marked ","lastModifiedDate":"2023-02-24"},{"lineNumber":104,"author":{"gitId":"EangJS"},"content":"[E][ ]lecture time","lastModifiedDate":"2023-02-24"},{"lineNumber":105,"author":{"gitId":"EangJS"},"content":"as not done.","lastModifiedDate":"2023-02-24"},{"lineNumber":106,"author":{"gitId":"EangJS"},"content":"```","lastModifiedDate":"2023-02-24"},{"lineNumber":107,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":108,"author":{"gitId":"EangJS"},"content":"Go [back](README.md)","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"EangJS":108}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2023-02-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"EangJS"},"content":"Duke is a Command Line Interface based task tracker. This program can help you organise your tasks to keep","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"EangJS"},"content":"you in track with your assignments so that you can be as productive as ever!","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"EangJS"},"content":"## Getting Started","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":8,"author":{"gitId":"EangJS"},"content":"1. Ensure you have Java 11 or above installed in your PC.","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":10,"author":{"gitId":"EangJS"},"content":"2. Download the latest version of Duke.jar from my GitHub releases page.","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":12,"author":{"gitId":"EangJS"},"content":"3. Move the downloaded file to the folder where you want to run duke.","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"EangJS"},"content":"4. Open a command terminal in the folder where you put duke.jar in","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"EangJS"},"content":"5. Use the `java -jar duke.jar` command to run the application.","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"EangJS"},"content":"   The GUI as shown below should appear.","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"EangJS"},"content":"```","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"EangJS"},"content":"Hello from","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"EangJS"},"content":" .----------------.  .----------------.  .----------------.  .----------------. ","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"EangJS"},"content":"| | |_   ___ `.  | || ||_   _||_   _|| || | |_  ||_  _|  | || | |_   ___  |  | |","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"EangJS"},"content":"| |   | |   `. \\ | || |  | |    | |  | || |   | |_/ /    | || |   | |_  \\_|  | |","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"EangJS"},"content":"| |   | |    | | | || |  | \u0027    \u0027 |  | || |   |  __\u0027.    | || |   |  _|  _   | |","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"EangJS"},"content":"| |  _| |___.\u0027 / | || |   \\ `--\u0027 /   | || |  _| |  \\ \\_  | || |  _| |___/ |  | |","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"EangJS"},"content":"| | |________.\u0027  | || |    `.__.\u0027    | || | |____||____| | || | |_________|  | |","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"EangJS"},"content":" \u0027----------------\u0027  \u0027----------------\u0027  \u0027----------------\u0027  \u0027----------------\u0027 ","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"EangJS"},"content":"Hello! I\u0027m Duke","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"EangJS"},"content":"Send me a list of things to remember!","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"EangJS"},"content":"Type \u003cbye\u003e to exit","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"EangJS"},"content":"```","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":33,"author":{"gitId":"EangJS"},"content":"## Features","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":35,"author":{"gitId":"EangJS"},"content":"### Feature-Tasks","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"EangJS"},"content":"You can add three types of tasks:","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"EangJS"},"content":"- Todo: A task containing only description","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"EangJS"},"content":"- Deadline: A task containing a deadline","lastModifiedDate":"2023-02-24"},{"lineNumber":41,"author":{"gitId":"EangJS"},"content":"- Event: A task containing a start and end datetime","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"EangJS"},"content":"Go to [Adding Tasks](AddingTasks.md)","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"EangJS"},"content":"### Feature-Modifiers","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":47,"author":{"gitId":"EangJS"},"content":"Ability to interact with the tasks:","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"EangJS"},"content":"- Delete a task","lastModifiedDate":"2023-02-24"},{"lineNumber":50,"author":{"gitId":"EangJS"},"content":"- Mark a task as done","lastModifiedDate":"2023-02-24"},{"lineNumber":51,"author":{"gitId":"EangJS"},"content":"- Mark a task as undone","lastModifiedDate":"2023-02-24"},{"lineNumber":52,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":53,"author":{"gitId":"EangJS"},"content":"Go to [ModifyingTasks](ModifyingTasks.md)","lastModifiedDate":"2023-02-24"},{"lineNumber":54,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":55,"author":{"gitId":"EangJS"},"content":"### Feature-User Interface","lastModifiedDate":"2023-02-24"},{"lineNumber":56,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":57,"author":{"gitId":"EangJS"},"content":"- Ability to list all current tasks","lastModifiedDate":"2023-02-24"},{"lineNumber":58,"author":{"gitId":"EangJS"},"content":"- Sort and display tasks according to deadline","lastModifiedDate":"2023-02-24"},{"lineNumber":59,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":60,"author":{"gitId":"EangJS"},"content":"Go to [ListingTasks](ListingTasks.md)","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"-":14,"EangJS":46}},{"path":"src/main/java/duke/command/AddDeadlineToListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EangJS"},"content":"package duke.command;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"EangJS"},"content":"import duke.data.TaskList;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"EangJS"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"EangJS"},"content":"import duke.exceptions.InvalidInputException;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"EangJS"},"content":"import duke.filemanager.Storage;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"EangJS"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"EangJS"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"EangJS"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-22"},{"lineNumber":11,"author":{"gitId":"EangJS"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-22"},{"lineNumber":12,"author":{"gitId":"EangJS"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"EangJS"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"EangJS"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-22"},{"lineNumber":15,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":17,"author":{"gitId":"EangJS"},"content":"/**","lastModifiedDate":"2023-02-22"},{"lineNumber":18,"author":{"gitId":"EangJS"},"content":" * Handles the deadline command to add a new deadline to the list.","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"EangJS"},"content":" */","lastModifiedDate":"2023-02-22"},{"lineNumber":20,"author":{"gitId":"EangJS"},"content":"public class AddDeadlineToListCommand extends Command {","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"EangJS"},"content":"    private Deadline newTask;","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"EangJS"},"content":"     * Preprocess userInput to create new deadline object.","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"EangJS"},"content":"     * @param userInput Raw string containing deadline details.","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"EangJS"},"content":"     * @throws DukeException Occurs when input is invalid i.e /by not found.","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"EangJS"},"content":"    public AddDeadlineToListCommand(String userInput) throws DukeException {","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"EangJS"},"content":"        try {","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"EangJS"},"content":"            Scanner scanner \u003d new Scanner(userInput);","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"EangJS"},"content":"            String[] userInputArray \u003d scanner.nextLine().trim().split(\"/by\");","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"EangJS"},"content":"            setTasks(userInputArray);","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"EangJS"},"content":"        } catch (IndexOutOfBoundsException | NoSuchElementException ex) {","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"EangJS"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"EangJS"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":37,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"EangJS"},"content":"     * Adds the new deadline into the arrayList.","lastModifiedDate":"2023-03-02"},{"lineNumber":41,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"EangJS"},"content":"     * @param tasks ArrayList containing all tasks.","lastModifiedDate":"2023-03-02"},{"lineNumber":43,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"EangJS"},"content":"    @Override","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"EangJS"},"content":"    public void executeCommand(TaskList tasks, Storage storage, Ui ui) throws DukeException {","lastModifiedDate":"2023-02-20"},{"lineNumber":46,"author":{"gitId":"EangJS"},"content":"        tasks.add(newTask, storage);","lastModifiedDate":"2023-02-20"},{"lineNumber":47,"author":{"gitId":"EangJS"},"content":"        ui.printTaskDeadline(newTask, tasks);","lastModifiedDate":"2023-02-20"},{"lineNumber":48,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":49,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":50,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":51,"author":{"gitId":"EangJS"},"content":"     * Creates a new deadline object with the processed userInput.","lastModifiedDate":"2023-03-02"},{"lineNumber":52,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":53,"author":{"gitId":"EangJS"},"content":"     * @param userInputArray User Input classified to the deadline parameters.","lastModifiedDate":"2023-03-02"},{"lineNumber":54,"author":{"gitId":"EangJS"},"content":"     * @throws DukeException Occurs when input is partial or invalid.","lastModifiedDate":"2023-03-02"},{"lineNumber":55,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":56,"author":{"gitId":"EangJS"},"content":"    public void setTasks(String[] userInputArray) throws DukeException {","lastModifiedDate":"2023-02-20"},{"lineNumber":57,"author":{"gitId":"EangJS"},"content":"        try {","lastModifiedDate":"2023-02-20"},{"lineNumber":58,"author":{"gitId":"EangJS"},"content":"            String description \u003d userInputArray[0];","lastModifiedDate":"2023-02-20"},{"lineNumber":59,"author":{"gitId":"EangJS"},"content":"            String dueBy \u003d userInputArray[1].replaceFirst(\" \", \"\");","lastModifiedDate":"2023-02-22"},{"lineNumber":60,"author":{"gitId":"EangJS"},"content":"            try {","lastModifiedDate":"2023-02-22"},{"lineNumber":61,"author":{"gitId":"EangJS"},"content":"                //secondary try catch to check if input is a date.","lastModifiedDate":"2023-03-02"},{"lineNumber":62,"author":{"gitId":"EangJS"},"content":"                DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\");","lastModifiedDate":"2023-02-22"},{"lineNumber":63,"author":{"gitId":"EangJS"},"content":"                newTask \u003d new Deadline(description, dueBy, LocalDateTime.parse(dueBy, dateTimeFormatter));","lastModifiedDate":"2023-02-22"},{"lineNumber":64,"author":{"gitId":"EangJS"},"content":"            } catch (DateTimeParseException ex) {","lastModifiedDate":"2023-02-22"},{"lineNumber":65,"author":{"gitId":"EangJS"},"content":"                System.out.println(\"Not a date and time, you can add a datetime with dd-MM-yyyy HHmm format\");","lastModifiedDate":"2023-02-22"},{"lineNumber":66,"author":{"gitId":"EangJS"},"content":"                newTask \u003d new Deadline(description, dueBy);","lastModifiedDate":"2023-02-20"},{"lineNumber":67,"author":{"gitId":"EangJS"},"content":"            }","lastModifiedDate":"2023-02-22"},{"lineNumber":68,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":69,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":70,"author":{"gitId":"EangJS"},"content":"        } catch (IndexOutOfBoundsException outOfBounds) {","lastModifiedDate":"2023-02-20"},{"lineNumber":71,"author":{"gitId":"EangJS"},"content":"            throw new DukeException(\"Please input all the necessary details\");","lastModifiedDate":"2023-02-20"},{"lineNumber":72,"author":{"gitId":"EangJS"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":73,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":74,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":75,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":76,"author":{"gitId":"EangJS"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"EangJS":76}},{"path":"src/main/java/duke/command/AddEventToListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EangJS"},"content":"package duke.command;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"EangJS"},"content":"import duke.data.TaskList;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"EangJS"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"EangJS"},"content":"import duke.exceptions.InvalidInputException;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"EangJS"},"content":"import duke.exceptions.InvalidScheduleException;","lastModifiedDate":"2023-02-22"},{"lineNumber":7,"author":{"gitId":"EangJS"},"content":"import duke.filemanager.Storage;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"EangJS"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"EangJS"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"EangJS"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-22"},{"lineNumber":12,"author":{"gitId":"EangJS"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-22"},{"lineNumber":13,"author":{"gitId":"EangJS"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-22"},{"lineNumber":14,"author":{"gitId":"EangJS"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"EangJS"},"content":"/**","lastModifiedDate":"2023-02-22"},{"lineNumber":17,"author":{"gitId":"EangJS"},"content":" * Handles the event command to add a new event to the list.","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"EangJS"},"content":" */","lastModifiedDate":"2023-02-22"},{"lineNumber":19,"author":{"gitId":"EangJS"},"content":"public class AddEventToListCommand extends Command {","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"EangJS"},"content":"    private Event newTask;","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"EangJS"},"content":"     * Pre-processes the raw user input into array.","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"EangJS"},"content":"     * @param userInput Raw user input string.","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"EangJS"},"content":"     * @throws DukeException Occurs when invalid input is found i.e. missing /from.","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"EangJS"},"content":"    public AddEventToListCommand(String userInput) throws DukeException {","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"EangJS"},"content":"        try {","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"EangJS"},"content":"            final String[] userInputArray \u003d userInput.trim().split(\" /from | /to \");","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"EangJS"},"content":"            setTasks(userInputArray);","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"EangJS"},"content":"        } catch (IndexOutOfBoundsException ex) {","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"EangJS"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"EangJS"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":37,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"EangJS"},"content":"     * Adds a new event to the list.","lastModifiedDate":"2023-03-02"},{"lineNumber":39,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"EangJS"},"content":"     * @param tasks ArrayList containing all tasks.","lastModifiedDate":"2023-03-02"},{"lineNumber":41,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"EangJS"},"content":"    @Override","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"EangJS"},"content":"    public void executeCommand(TaskList tasks, Storage storage, Ui ui) throws DukeException {","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"EangJS"},"content":"        tasks.add(newTask, storage);","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"EangJS"},"content":"        ui.printTaskEvent(newTask, tasks);","lastModifiedDate":"2023-02-20"},{"lineNumber":46,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":47,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":48,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":49,"author":{"gitId":"EangJS"},"content":"     * Processes the given userInput and creates a new event object.","lastModifiedDate":"2023-03-02"},{"lineNumber":50,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":51,"author":{"gitId":"EangJS"},"content":"     * @param userInputArray Processed userInput.","lastModifiedDate":"2023-03-02"},{"lineNumber":52,"author":{"gitId":"EangJS"},"content":"     * @throws DukeException Occurs when an invalid input is found.","lastModifiedDate":"2023-03-02"},{"lineNumber":53,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":54,"author":{"gitId":"EangJS"},"content":"    public void setTasks(String[] userInputArray) throws DukeException {","lastModifiedDate":"2023-02-20"},{"lineNumber":55,"author":{"gitId":"EangJS"},"content":"        try {","lastModifiedDate":"2023-02-20"},{"lineNumber":56,"author":{"gitId":"EangJS"},"content":"            String description \u003d userInputArray[0];","lastModifiedDate":"2023-02-20"},{"lineNumber":57,"author":{"gitId":"EangJS"},"content":"            String startString \u003d userInputArray[1];","lastModifiedDate":"2023-02-22"},{"lineNumber":58,"author":{"gitId":"EangJS"},"content":"            String endString \u003d userInputArray[2];","lastModifiedDate":"2023-02-22"},{"lineNumber":59,"author":{"gitId":"EangJS"},"content":"            DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\");","lastModifiedDate":"2023-02-22"},{"lineNumber":60,"author":{"gitId":"EangJS"},"content":"            try {","lastModifiedDate":"2023-02-22"},{"lineNumber":61,"author":{"gitId":"EangJS"},"content":"                //secondary try-catch to catch if input is a date","lastModifiedDate":"2023-03-02"},{"lineNumber":62,"author":{"gitId":"EangJS"},"content":"                LocalDateTime startTime \u003d LocalDateTime.parse(startString, dateTimeFormatter);","lastModifiedDate":"2023-02-22"},{"lineNumber":63,"author":{"gitId":"EangJS"},"content":"                LocalDateTime endTime \u003d LocalDateTime.parse(endString, dateTimeFormatter);","lastModifiedDate":"2023-02-22"},{"lineNumber":64,"author":{"gitId":"EangJS"},"content":"                if (endTime.isBefore(startTime)) {","lastModifiedDate":"2023-02-22"},{"lineNumber":65,"author":{"gitId":"EangJS"},"content":"                    throw new InvalidScheduleException();","lastModifiedDate":"2023-02-22"},{"lineNumber":66,"author":{"gitId":"EangJS"},"content":"                }","lastModifiedDate":"2023-02-22"},{"lineNumber":67,"author":{"gitId":"EangJS"},"content":"                newTask \u003d new Event(description, startString, endString","lastModifiedDate":"2023-02-22"},{"lineNumber":68,"author":{"gitId":"EangJS"},"content":"                        , startTime","lastModifiedDate":"2023-02-22"},{"lineNumber":69,"author":{"gitId":"EangJS"},"content":"                        , endTime);","lastModifiedDate":"2023-02-22"},{"lineNumber":70,"author":{"gitId":"EangJS"},"content":"            } catch (DateTimeParseException ex) {","lastModifiedDate":"2023-02-22"},{"lineNumber":71,"author":{"gitId":"EangJS"},"content":"                System.out.println(\"Not a date and time, you can add a datetime with dd-MM-yyyy HHmm format\");","lastModifiedDate":"2023-02-22"},{"lineNumber":72,"author":{"gitId":"EangJS"},"content":"                this.newTask \u003d new Event(description, startString, endString);","lastModifiedDate":"2023-02-22"},{"lineNumber":73,"author":{"gitId":"EangJS"},"content":"            }","lastModifiedDate":"2023-02-22"},{"lineNumber":74,"author":{"gitId":"EangJS"},"content":"        } catch (IndexOutOfBoundsException | NoSuchElementException ex) {","lastModifiedDate":"2023-02-20"},{"lineNumber":75,"author":{"gitId":"EangJS"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2023-02-20"},{"lineNumber":76,"author":{"gitId":"EangJS"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":77,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":78,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":79,"author":{"gitId":"EangJS"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"EangJS":79}},{"path":"src/main/java/duke/command/AddTodoToListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EangJS"},"content":"package duke.command;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"EangJS"},"content":"import duke.data.TaskList;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"EangJS"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"EangJS"},"content":"import duke.exceptions.InvalidInputException;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"EangJS"},"content":"import duke.filemanager.Storage;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"EangJS"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"EangJS"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"EangJS"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"EangJS"},"content":"/**","lastModifiedDate":"2023-02-22"},{"lineNumber":13,"author":{"gitId":"EangJS"},"content":" * Handles command to add a new todo to list.","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"EangJS"},"content":" */","lastModifiedDate":"2023-02-22"},{"lineNumber":15,"author":{"gitId":"EangJS"},"content":"public class AddTodoToListCommand extends Command {","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"EangJS"},"content":"    private Task newTask;","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"EangJS"},"content":"     * Creates a new todo object.","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"EangJS"},"content":"     * @param userInput Data containing todo description.","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"EangJS"},"content":"     * @throws DukeException Occurs when an invalid input is found i.e. missing description.","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"EangJS"},"content":"    public AddTodoToListCommand(String userInput) throws DukeException {","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"EangJS"},"content":"        try {","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"EangJS"},"content":"            this.newTask \u003d new Task(userInput.replaceFirst(\" \", \"\"));","lastModifiedDate":"2023-02-22"},{"lineNumber":27,"author":{"gitId":"EangJS"},"content":"        } catch (IndexOutOfBoundsException | NoSuchElementException ex) {","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"EangJS"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"EangJS"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"EangJS"},"content":"     * Adds new todo object into the arrayList.","lastModifiedDate":"2023-03-02"},{"lineNumber":34,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"EangJS"},"content":"     * @param tasks Containing all tasks.","lastModifiedDate":"2023-03-02"},{"lineNumber":36,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":37,"author":{"gitId":"EangJS"},"content":"    @Override","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"EangJS"},"content":"    public void executeCommand(TaskList tasks, Storage storage, Ui ui) throws DukeException {","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"EangJS"},"content":"        tasks.add(newTask, storage);","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"EangJS"},"content":"        ui.printTaskTodo(newTask, tasks);","lastModifiedDate":"2023-02-20"},{"lineNumber":41,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"EangJS"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"EangJS":43}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EangJS"},"content":"package duke.command;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"EangJS"},"content":"import duke.data.TaskList;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"EangJS"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"EangJS"},"content":"import duke.filemanager.Storage;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"EangJS"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"EangJS"},"content":"/**","lastModifiedDate":"2023-02-22"},{"lineNumber":9,"author":{"gitId":"EangJS"},"content":" * Handles the various user commands.","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"EangJS"},"content":" */","lastModifiedDate":"2023-02-22"},{"lineNumber":11,"author":{"gitId":"EangJS"},"content":"public abstract class Command {","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":13,"author":{"gitId":"EangJS"},"content":"     * Abstract method to execute the commands.","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":15,"author":{"gitId":"EangJS"},"content":"     * @param tasks   TaskList of tasks currently stored.","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"EangJS"},"content":"     * @param storage Handler to read write to json.","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"EangJS"},"content":"     * @param ui      Handler to print text to user.","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"EangJS"},"content":"     * @throws DukeException","lastModifiedDate":"2023-02-22"},{"lineNumber":19,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":20,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"EangJS"},"content":"    public abstract void executeCommand(TaskList tasks, Storage storage, Ui ui) throws DukeException;","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"EangJS"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"EangJS":23}},{"path":"src/main/java/duke/command/DeleteFromListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EangJS"},"content":"package duke.command;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"EangJS"},"content":"import duke.data.TaskList;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"EangJS"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"EangJS"},"content":"import duke.exceptions.InvalidInputException;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"EangJS"},"content":"import duke.filemanager.Storage;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"EangJS"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"EangJS"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"EangJS"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"EangJS"},"content":"/**","lastModifiedDate":"2023-02-22"},{"lineNumber":13,"author":{"gitId":"EangJS"},"content":" * Handles the delete command to remove task from list.","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"EangJS"},"content":" */","lastModifiedDate":"2023-02-22"},{"lineNumber":15,"author":{"gitId":"EangJS"},"content":"public class DeleteFromListCommand extends Command {","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"EangJS"},"content":"    private int taskIndex;","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":19,"author":{"gitId":"EangJS"},"content":"     * Constructor to process userInput and set taskIndex to delete.","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":21,"author":{"gitId":"EangJS"},"content":"     * @param userInput Raw user input containing taskIndex.","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"EangJS"},"content":"     * @throws DukeException Occurs when there is a format error or invalid input.","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":24,"author":{"gitId":"EangJS"},"content":"    public DeleteFromListCommand(String userInput) throws DukeException {","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"EangJS"},"content":"        try {","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"EangJS"},"content":"            String taskIndex \u003d userInput.replace(\" \", \"\");","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"EangJS"},"content":"            setDeleteTask(Integer.parseInt(taskIndex) - 1);","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"EangJS"},"content":"        } catch (NoSuchElementException | NumberFormatException ex) {","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"EangJS"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"EangJS"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":34,"author":{"gitId":"EangJS"},"content":"     * Executes the command to delete and save the deleted task index provided.","lastModifiedDate":"2023-03-02"},{"lineNumber":35,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":36,"author":{"gitId":"EangJS"},"content":"     * @param tasks   TaskList of tasks currently stored.","lastModifiedDate":"2023-03-02"},{"lineNumber":37,"author":{"gitId":"EangJS"},"content":"     * @param storage Handler to read write to json.","lastModifiedDate":"2023-03-02"},{"lineNumber":38,"author":{"gitId":"EangJS"},"content":"     * @param ui      Handler to print text to user.","lastModifiedDate":"2023-03-02"},{"lineNumber":39,"author":{"gitId":"EangJS"},"content":"     * @throws DukeException Occurs when there is an invalid input or write error.","lastModifiedDate":"2023-03-02"},{"lineNumber":40,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":41,"author":{"gitId":"EangJS"},"content":"    @Override","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"EangJS"},"content":"    public void executeCommand(TaskList tasks, Storage storage, Ui ui) throws DukeException {","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"EangJS"},"content":"        try {","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"EangJS"},"content":"            Task task \u003d tasks.deleteTask(taskIndex, storage);","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"EangJS"},"content":"            ui.printDeletedTask(task, tasks);","lastModifiedDate":"2023-02-20"},{"lineNumber":46,"author":{"gitId":"EangJS"},"content":"        } catch (IndexOutOfBoundsException ex) {","lastModifiedDate":"2023-02-20"},{"lineNumber":47,"author":{"gitId":"EangJS"},"content":"            throw new DukeException(\"Enter a number within range of list!\");","lastModifiedDate":"2023-02-20"},{"lineNumber":48,"author":{"gitId":"EangJS"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":49,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":50,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":51,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":52,"author":{"gitId":"EangJS"},"content":"     * Sets the taskIndex to delete.","lastModifiedDate":"2023-03-02"},{"lineNumber":53,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":54,"author":{"gitId":"EangJS"},"content":"     * @param taskIndex Index that corresponds to task to delete.","lastModifiedDate":"2023-03-02"},{"lineNumber":55,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":56,"author":{"gitId":"EangJS"},"content":"    public void setDeleteTask(int taskIndex) {","lastModifiedDate":"2023-02-20"},{"lineNumber":57,"author":{"gitId":"EangJS"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2023-02-20"},{"lineNumber":58,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":59,"author":{"gitId":"EangJS"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"EangJS":59}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EangJS"},"content":"package duke.command;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"EangJS"},"content":"import duke.data.TaskList;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"EangJS"},"content":"import duke.filemanager.Storage;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"EangJS"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"EangJS"},"content":"/**","lastModifiedDate":"2023-02-22"},{"lineNumber":8,"author":{"gitId":"EangJS"},"content":" * Exits the program when exit command is entered.","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"EangJS"},"content":" */","lastModifiedDate":"2023-02-22"},{"lineNumber":10,"author":{"gitId":"EangJS"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":12,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":13,"author":{"gitId":"EangJS"},"content":"     * Executes the exit command.","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":15,"author":{"gitId":"EangJS"},"content":"     * @param tasks   TaskList of tasks currently stored.","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"EangJS"},"content":"     * @param storage Handler to read write to json.","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"EangJS"},"content":"     * @param ui      Handler to print text to user.","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":19,"author":{"gitId":"EangJS"},"content":"    @Override","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"EangJS"},"content":"    public void executeCommand(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"EangJS"},"content":"        exitProgram();","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"EangJS"},"content":"     * Prints out the exit message to the user.","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"EangJS"},"content":"     * and exits with status 0.","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"EangJS"},"content":"    public static void exitProgram() {","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"EangJS"},"content":"        String exitMessage \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"EangJS"},"content":"        System.out.println(exitMessage);","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"EangJS"},"content":"        System.exit(0);","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"EangJS"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"EangJS":33}},{"path":"src/main/java/duke/command/FindTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EangJS"},"content":"package duke.command;","lastModifiedDate":"2023-02-22"},{"lineNumber":2,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":3,"author":{"gitId":"EangJS"},"content":"import duke.data.TaskList;","lastModifiedDate":"2023-02-22"},{"lineNumber":4,"author":{"gitId":"EangJS"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-22"},{"lineNumber":5,"author":{"gitId":"EangJS"},"content":"import duke.filemanager.Storage;","lastModifiedDate":"2023-02-22"},{"lineNumber":6,"author":{"gitId":"EangJS"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-22"},{"lineNumber":7,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":8,"author":{"gitId":"EangJS"},"content":"/**","lastModifiedDate":"2023-02-22"},{"lineNumber":9,"author":{"gitId":"EangJS"},"content":" * Finds if tasks in taskList contains a query string.","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"EangJS"},"content":" */","lastModifiedDate":"2023-02-22"},{"lineNumber":11,"author":{"gitId":"EangJS"},"content":"public class FindTaskCommand extends Command {","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":13,"author":{"gitId":"EangJS"},"content":"    private String query;","lastModifiedDate":"2023-02-22"},{"lineNumber":14,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":15,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":16,"author":{"gitId":"EangJS"},"content":"     * Constructor to process and set query string.","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":18,"author":{"gitId":"EangJS"},"content":"     * @param userInput raw query string.","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":20,"author":{"gitId":"EangJS"},"content":"    public FindTaskCommand(String userInput) {","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"EangJS"},"content":"        this.query \u003d userInput.replaceFirst(\" \", \"\");","lastModifiedDate":"2023-02-22"},{"lineNumber":22,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":23,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":24,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":25,"author":{"gitId":"EangJS"},"content":"     * Finds task(s) based on whether task description contains query string.","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":27,"author":{"gitId":"EangJS"},"content":"     * @param tasks   TaskList of tasks currently stored.","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"EangJS"},"content":"     * @param storage Handler to read write to json.","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"EangJS"},"content":"     * @param ui      Handler to print text to user.","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"EangJS"},"content":"     * @throws DukeException","lastModifiedDate":"2023-02-22"},{"lineNumber":31,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":32,"author":{"gitId":"EangJS"},"content":"    @Override","lastModifiedDate":"2023-02-22"},{"lineNumber":33,"author":{"gitId":"EangJS"},"content":"    public void executeCommand(TaskList tasks, Storage storage, Ui ui) throws DukeException {","lastModifiedDate":"2023-02-22"},{"lineNumber":34,"author":{"gitId":"EangJS"},"content":"        ui.findQueryTasks(tasks, query);","lastModifiedDate":"2023-02-22"},{"lineNumber":35,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":36,"author":{"gitId":"EangJS"},"content":"}","lastModifiedDate":"2023-02-22"},{"lineNumber":37,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-22"}],"authorContributionMap":{"EangJS":37}},{"path":"src/main/java/duke/command/ListTasksCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EangJS"},"content":"package duke.command;","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"EangJS"},"content":"import duke.data.TaskList;","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"EangJS"},"content":"import duke.filemanager.Storage;","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"EangJS"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"EangJS"},"content":"/**","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"EangJS"},"content":" * Handles the listing of tasks command.","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"EangJS"},"content":" */","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"EangJS"},"content":"public class ListTasksCommand extends Command {","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"EangJS"},"content":"     * Executes the command to list task.","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"EangJS"},"content":"     * @param tasks   TaskList of tasks currently stored.","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"EangJS"},"content":"     * @param storage Handler to read write to json.","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"EangJS"},"content":"     * @param ui      Handler to print text to user.","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"EangJS"},"content":"    @Override","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"EangJS"},"content":"    public void executeCommand(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"EangJS"},"content":"        ui.printTasks(tasks);","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"EangJS"},"content":"}","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"EangJS":23}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EangJS"},"content":"package duke.command;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"EangJS"},"content":"import duke.data.TaskList;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"EangJS"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"EangJS"},"content":"import duke.exceptions.InvalidInputException;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"EangJS"},"content":"import duke.filemanager.Storage;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"EangJS"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"EangJS"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"EangJS"},"content":"/**","lastModifiedDate":"2023-02-22"},{"lineNumber":11,"author":{"gitId":"EangJS"},"content":" * Marks a task as completed.","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"EangJS"},"content":" */","lastModifiedDate":"2023-02-22"},{"lineNumber":13,"author":{"gitId":"EangJS"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"EangJS"},"content":"    private int taskIndex;","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":17,"author":{"gitId":"EangJS"},"content":"     * Constructor which further processes the userInput to remove whitespace to","lastModifiedDate":"2023-02-22"},{"lineNumber":18,"author":{"gitId":"EangJS"},"content":"     * set taskIndex.","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":20,"author":{"gitId":"EangJS"},"content":"     * @param userInput Raw input containing taskIndex.","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"EangJS"},"content":"     * @throws DukeException Occurs when there is an invalid input.","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":23,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":24,"author":{"gitId":"EangJS"},"content":"    public MarkCommand(String userInput) throws DukeException {","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"EangJS"},"content":"        try {","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"EangJS"},"content":"            String taskIndex \u003d userInput.replace(\" \", \"\");","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"EangJS"},"content":"            setMarkTask(Integer.parseInt(taskIndex) - 1);","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"EangJS"},"content":"        } catch (IndexOutOfBoundsException | NumberFormatException ex) {","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"EangJS"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"EangJS"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":35,"author":{"gitId":"EangJS"},"content":"     * Executes the command to mark a task as completed.","lastModifiedDate":"2023-03-02"},{"lineNumber":36,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":37,"author":{"gitId":"EangJS"},"content":"     * @param tasks   TaskList of tasks currently stored.","lastModifiedDate":"2023-03-02"},{"lineNumber":38,"author":{"gitId":"EangJS"},"content":"     * @param storage Handler to read write to json.","lastModifiedDate":"2023-03-02"},{"lineNumber":39,"author":{"gitId":"EangJS"},"content":"     * @param ui      Handler to print text to user.","lastModifiedDate":"2023-03-02"},{"lineNumber":40,"author":{"gitId":"EangJS"},"content":"     * @throws DukeException Occurs when there is a write error or format error.","lastModifiedDate":"2023-03-02"},{"lineNumber":41,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":42,"author":{"gitId":"EangJS"},"content":"    @Override","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"EangJS"},"content":"    public void executeCommand(TaskList tasks, Storage storage, Ui ui) throws DukeException {","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"EangJS"},"content":"        try {","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"EangJS"},"content":"            Task task \u003d tasks.markAsDone(taskIndex, storage);","lastModifiedDate":"2023-02-20"},{"lineNumber":46,"author":{"gitId":"EangJS"},"content":"            ui.printMarkedTask(task);","lastModifiedDate":"2023-02-20"},{"lineNumber":47,"author":{"gitId":"EangJS"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-20"},{"lineNumber":48,"author":{"gitId":"EangJS"},"content":"            throw new DukeException(\"Please enter a number within list size!\");","lastModifiedDate":"2023-02-20"},{"lineNumber":49,"author":{"gitId":"EangJS"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":50,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":51,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":52,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":53,"author":{"gitId":"EangJS"},"content":"     * Sets the taskIndex of the task to be marked.","lastModifiedDate":"2023-03-02"},{"lineNumber":54,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":55,"author":{"gitId":"EangJS"},"content":"     * @param taskIndex Index of task to be marked.","lastModifiedDate":"2023-03-02"},{"lineNumber":56,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":57,"author":{"gitId":"EangJS"},"content":"    public void setMarkTask(int taskIndex) {","lastModifiedDate":"2023-02-20"},{"lineNumber":58,"author":{"gitId":"EangJS"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2023-02-20"},{"lineNumber":59,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":60,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":61,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":62,"author":{"gitId":"EangJS"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"EangJS":62}},{"path":"src/main/java/duke/command/PrintSortedTasksCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EangJS"},"content":"package duke.command;","lastModifiedDate":"2023-02-22"},{"lineNumber":2,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":3,"author":{"gitId":"EangJS"},"content":"import duke.data.TaskList;","lastModifiedDate":"2023-02-22"},{"lineNumber":4,"author":{"gitId":"EangJS"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-22"},{"lineNumber":5,"author":{"gitId":"EangJS"},"content":"import duke.filemanager.Storage;","lastModifiedDate":"2023-02-22"},{"lineNumber":6,"author":{"gitId":"EangJS"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-22"},{"lineNumber":7,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":8,"author":{"gitId":"EangJS"},"content":"/**","lastModifiedDate":"2023-02-22"},{"lineNumber":9,"author":{"gitId":"EangJS"},"content":" * Prints the list of sorted task according to due date.","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"EangJS"},"content":" */","lastModifiedDate":"2023-02-22"},{"lineNumber":11,"author":{"gitId":"EangJS"},"content":"public class PrintSortedTasksCommand extends Command {","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":13,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":14,"author":{"gitId":"EangJS"},"content":"     * Executes the command to print the sorted tasks.","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":16,"author":{"gitId":"EangJS"},"content":"     * @param tasks   TaskList of tasks currently stored.","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"EangJS"},"content":"     * @param storage Handler to read write to json.","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"EangJS"},"content":"     * @param ui      Handler to print text to user.","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"EangJS"},"content":"     * @throws DukeException","lastModifiedDate":"2023-02-22"},{"lineNumber":20,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":21,"author":{"gitId":"EangJS"},"content":"    @Override","lastModifiedDate":"2023-02-22"},{"lineNumber":22,"author":{"gitId":"EangJS"},"content":"    public void executeCommand(TaskList tasks, Storage storage, Ui ui) throws DukeException {","lastModifiedDate":"2023-02-22"},{"lineNumber":23,"author":{"gitId":"EangJS"},"content":"        ui.printSorted(storage);","lastModifiedDate":"2023-02-22"},{"lineNumber":24,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":25,"author":{"gitId":"EangJS"},"content":"}","lastModifiedDate":"2023-02-22"}],"authorContributionMap":{"EangJS":25}},{"path":"src/main/java/duke/command/SortTasksCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EangJS"},"content":"package duke.command;","lastModifiedDate":"2023-02-22"},{"lineNumber":2,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":3,"author":{"gitId":"EangJS"},"content":"import duke.data.TaskList;","lastModifiedDate":"2023-02-22"},{"lineNumber":4,"author":{"gitId":"EangJS"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-22"},{"lineNumber":5,"author":{"gitId":"EangJS"},"content":"import duke.filemanager.Storage;","lastModifiedDate":"2023-02-22"},{"lineNumber":6,"author":{"gitId":"EangJS"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-22"},{"lineNumber":7,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":8,"author":{"gitId":"EangJS"},"content":"/**","lastModifiedDate":"2023-02-22"},{"lineNumber":9,"author":{"gitId":"EangJS"},"content":" * Sorts the tasks according to due date and writes to memory.","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"EangJS"},"content":" */","lastModifiedDate":"2023-02-22"},{"lineNumber":11,"author":{"gitId":"EangJS"},"content":"public class SortTasksCommand extends Command {","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":13,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":14,"author":{"gitId":"EangJS"},"content":"     * Executes the command to sort and save the tasks.","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":16,"author":{"gitId":"EangJS"},"content":"     * @param tasks   TaskList of tasks currently stored.","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"EangJS"},"content":"     * @param storage Handler to read write to json.","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"EangJS"},"content":"     * @param ui      Handler to print text to user.","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"EangJS"},"content":"     * @throws DukeException","lastModifiedDate":"2023-02-22"},{"lineNumber":20,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":21,"author":{"gitId":"EangJS"},"content":"    @Override","lastModifiedDate":"2023-02-22"},{"lineNumber":22,"author":{"gitId":"EangJS"},"content":"    public void executeCommand(TaskList tasks, Storage storage, Ui ui) throws DukeException {","lastModifiedDate":"2023-02-22"},{"lineNumber":23,"author":{"gitId":"EangJS"},"content":"        ui.sortTasks(tasks, storage);","lastModifiedDate":"2023-02-22"},{"lineNumber":24,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":25,"author":{"gitId":"EangJS"},"content":"}","lastModifiedDate":"2023-02-22"}],"authorContributionMap":{"EangJS":25}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EangJS"},"content":"package duke.command;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"EangJS"},"content":"import duke.data.TaskList;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"EangJS"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"EangJS"},"content":"import duke.exceptions.InvalidInputException;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"EangJS"},"content":"import duke.filemanager.Storage;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"EangJS"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"EangJS"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"EangJS"},"content":"/**","lastModifiedDate":"2023-02-22"},{"lineNumber":11,"author":{"gitId":"EangJS"},"content":" * Handles the unmark command to mark a task as undone.","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"EangJS"},"content":" */","lastModifiedDate":"2023-02-22"},{"lineNumber":13,"author":{"gitId":"EangJS"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"EangJS"},"content":"    private int taskIndex;","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":17,"author":{"gitId":"EangJS"},"content":"     * Constructor to set the task index to unmark.","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":19,"author":{"gitId":"EangJS"},"content":"     * @param userInput Raw input containing task index to unmark.","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"EangJS"},"content":"     * @throws DukeException Occurs when there is an invalid input.","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":22,"author":{"gitId":"EangJS"},"content":"    public UnmarkCommand(String userInput) throws DukeException {","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"EangJS"},"content":"        try {","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"EangJS"},"content":"            String taskIndex \u003d userInput.replace(\" \", \"\");","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"EangJS"},"content":"            setUnmarkTask(Integer.parseInt(taskIndex) - 1);","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"EangJS"},"content":"        } catch (IndexOutOfBoundsException | NumberFormatException ex) {","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"EangJS"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"EangJS"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":32,"author":{"gitId":"EangJS"},"content":"     * Executes the command to unmark the task given with the taskIndex.","lastModifiedDate":"2023-03-02"},{"lineNumber":33,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":34,"author":{"gitId":"EangJS"},"content":"     * @param tasks   TaskList of tasks currently stored.","lastModifiedDate":"2023-03-02"},{"lineNumber":35,"author":{"gitId":"EangJS"},"content":"     * @param storage Handler to read write to json.","lastModifiedDate":"2023-03-02"},{"lineNumber":36,"author":{"gitId":"EangJS"},"content":"     * @param ui      Handler to print text to user.","lastModifiedDate":"2023-03-02"},{"lineNumber":37,"author":{"gitId":"EangJS"},"content":"     * @throws DukeException Occurs when there is an invalid input.","lastModifiedDate":"2023-03-02"},{"lineNumber":38,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":39,"author":{"gitId":"EangJS"},"content":"    @Override","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"EangJS"},"content":"    public void executeCommand(TaskList tasks, Storage storage, Ui ui) throws DukeException {","lastModifiedDate":"2023-02-20"},{"lineNumber":41,"author":{"gitId":"EangJS"},"content":"        try {","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"EangJS"},"content":"            Task task \u003d tasks.markAsUndone(taskIndex, storage);","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"EangJS"},"content":"            ui.printUnmarkedTask(task);","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"EangJS"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"EangJS"},"content":"            throw new DukeException(\"Please enter a number within list size!\");","lastModifiedDate":"2023-02-20"},{"lineNumber":46,"author":{"gitId":"EangJS"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":47,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":48,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":49,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":50,"author":{"gitId":"EangJS"},"content":"     * Sets the taskIndex to unmark.","lastModifiedDate":"2023-03-02"},{"lineNumber":51,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":52,"author":{"gitId":"EangJS"},"content":"     * @param taskIndex index of task to unmark.","lastModifiedDate":"2023-03-02"},{"lineNumber":53,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":54,"author":{"gitId":"EangJS"},"content":"    public void setUnmarkTask(int taskIndex) {","lastModifiedDate":"2023-02-20"},{"lineNumber":55,"author":{"gitId":"EangJS"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2023-02-20"},{"lineNumber":56,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":57,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":58,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":59,"author":{"gitId":"EangJS"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"EangJS":59}},{"path":"src/main/java/duke/command/UserCommandManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EangJS"},"content":"package duke.command;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"EangJS"},"content":"import duke.data.TaskList;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"EangJS"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"EangJS"},"content":"import duke.filemanager.Storage;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"EangJS"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"EangJS"},"content":"public class UserCommandManager {","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"EangJS"},"content":"     * Handles the command (i.e. type of task) by user and parse the arguments to add to task list.","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"EangJS"},"content":"     * @param userCommands Parsed userInput containing command, and arguments","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"EangJS"},"content":"     * @param storage      Handler for writing to json file","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"EangJS"},"content":"     * @param tasks        TaskList of tasks","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"EangJS"},"content":"     * @param ui           Handler for printing text to the screen","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"EangJS"},"content":"    public void handleCommands(String[] userCommands, Storage storage, TaskList tasks, Ui ui) throws DukeException {","lastModifiedDate":"2023-02-22"},{"lineNumber":19,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"EangJS"},"content":"        Command command;","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"EangJS"},"content":"        switch (userCommands[0]) {","lastModifiedDate":"2023-02-22"},{"lineNumber":22,"author":{"gitId":"EangJS"},"content":"        case \"bye\":","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"EangJS"},"content":"            command \u003d new ExitCommand();","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"EangJS"},"content":"            break;","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"EangJS"},"content":"        case \"list\":","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"EangJS"},"content":"        case \"ls\":","lastModifiedDate":"2023-02-22"},{"lineNumber":27,"author":{"gitId":"EangJS"},"content":"            command \u003d new ListTasksCommand();","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"EangJS"},"content":"            break;","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"EangJS"},"content":"        case \"list-sorted\":","lastModifiedDate":"2023-02-22"},{"lineNumber":30,"author":{"gitId":"EangJS"},"content":"        case \"ls-s\":","lastModifiedDate":"2023-02-22"},{"lineNumber":31,"author":{"gitId":"EangJS"},"content":"            command \u003d new PrintSortedTasksCommand();","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"EangJS"},"content":"            break;","lastModifiedDate":"2023-02-22"},{"lineNumber":33,"author":{"gitId":"EangJS"},"content":"        case \"find\":","lastModifiedDate":"2023-02-22"},{"lineNumber":34,"author":{"gitId":"EangJS"},"content":"            command \u003d new FindTaskCommand(userCommands[1]);","lastModifiedDate":"2023-03-02"},{"lineNumber":35,"author":{"gitId":"EangJS"},"content":"            break;","lastModifiedDate":"2023-02-22"},{"lineNumber":36,"author":{"gitId":"EangJS"},"content":"        case \"sort\":","lastModifiedDate":"2023-02-22"},{"lineNumber":37,"author":{"gitId":"EangJS"},"content":"            command \u003d new SortTasksCommand();","lastModifiedDate":"2023-03-02"},{"lineNumber":38,"author":{"gitId":"EangJS"},"content":"            break;","lastModifiedDate":"2023-02-22"},{"lineNumber":39,"author":{"gitId":"EangJS"},"content":"        case \"mark\":","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"EangJS"},"content":"            command \u003d new MarkCommand(userCommands[1]);","lastModifiedDate":"2023-02-22"},{"lineNumber":41,"author":{"gitId":"EangJS"},"content":"            break;","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"EangJS"},"content":"        case \"unmark\":","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"EangJS"},"content":"            command \u003d new UnmarkCommand(userCommands[1]);","lastModifiedDate":"2023-02-22"},{"lineNumber":44,"author":{"gitId":"EangJS"},"content":"            break;","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"EangJS"},"content":"        case \"todo\":","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"EangJS"},"content":"            command \u003d new AddTodoToListCommand(userCommands[1]);","lastModifiedDate":"2023-03-02"},{"lineNumber":47,"author":{"gitId":"EangJS"},"content":"            break;","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"EangJS"},"content":"        case \"deadline\":","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"EangJS"},"content":"            command \u003d new AddDeadlineToListCommand(userCommands[1]);","lastModifiedDate":"2023-03-02"},{"lineNumber":50,"author":{"gitId":"EangJS"},"content":"            break;","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"EangJS"},"content":"        case \"event\":","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"EangJS"},"content":"            command \u003d new AddEventToListCommand(userCommands[1]);","lastModifiedDate":"2023-03-02"},{"lineNumber":53,"author":{"gitId":"EangJS"},"content":"            break;","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"EangJS"},"content":"        case \"delete\":","lastModifiedDate":"2023-02-09"},{"lineNumber":55,"author":{"gitId":"EangJS"},"content":"            command \u003d new DeleteFromListCommand(userCommands[1]);","lastModifiedDate":"2023-03-02"},{"lineNumber":56,"author":{"gitId":"EangJS"},"content":"            break;","lastModifiedDate":"2023-02-09"},{"lineNumber":57,"author":{"gitId":"EangJS"},"content":"        default:","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"EangJS"},"content":"            throw new DukeException(\"Unknown input\");","lastModifiedDate":"2023-02-20"},{"lineNumber":59,"author":{"gitId":"EangJS"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":60,"author":{"gitId":"EangJS"},"content":"        command.executeCommand(tasks, storage, ui);","lastModifiedDate":"2023-02-20"},{"lineNumber":61,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"EangJS"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"EangJS":62}},{"path":"src/main/java/duke/data/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EangJS"},"content":"package duke.data;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"EangJS"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"EangJS"},"content":"import duke.filemanager.Storage;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"EangJS"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"EangJS"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"EangJS"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-02-22"},{"lineNumber":9,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"EangJS"},"content":"/**","lastModifiedDate":"2023-02-22"},{"lineNumber":12,"author":{"gitId":"EangJS"},"content":" * TaskList that contains list of user tasks.","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"EangJS"},"content":" */","lastModifiedDate":"2023-02-22"},{"lineNumber":14,"author":{"gitId":"EangJS"},"content":"public class TaskList {","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"EangJS"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":18,"author":{"gitId":"EangJS"},"content":"     * Constructor to create and set a new empty taskList.","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":20,"author":{"gitId":"EangJS"},"content":"    public TaskList() {","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"EangJS"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":25,"author":{"gitId":"EangJS"},"content":"     * Constructor to set the taskList according to populated json file.","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":27,"author":{"gitId":"EangJS"},"content":"     * @param tasks tasks in the json file.","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":29,"author":{"gitId":"EangJS"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-22"},{"lineNumber":30,"author":{"gitId":"EangJS"},"content":"        this.taskList \u003d tasks;","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":34,"author":{"gitId":"EangJS"},"content":"     * Gives a redundant copy of the taskList.","lastModifiedDate":"2023-03-02"},{"lineNumber":35,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":36,"author":{"gitId":"EangJS"},"content":"     * @return the current taskList.","lastModifiedDate":"2023-03-02"},{"lineNumber":37,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":38,"author":{"gitId":"EangJS"},"content":"    public ArrayList\u003cTask\u003e getReadableList() {","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"EangJS"},"content":"        return this.taskList;","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":41,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":43,"author":{"gitId":"EangJS"},"content":"     * Gives the current size of the taskList.","lastModifiedDate":"2023-03-02"},{"lineNumber":44,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":45,"author":{"gitId":"EangJS"},"content":"     * @return Size of the taskList.","lastModifiedDate":"2023-03-02"},{"lineNumber":46,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":47,"author":{"gitId":"EangJS"},"content":"    public int size() {","lastModifiedDate":"2023-02-20"},{"lineNumber":48,"author":{"gitId":"EangJS"},"content":"        return taskList.size();","lastModifiedDate":"2023-02-20"},{"lineNumber":49,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":50,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":51,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":52,"author":{"gitId":"EangJS"},"content":"     * Adds the task to the list to keep track.","lastModifiedDate":"2023-03-02"},{"lineNumber":53,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":54,"author":{"gitId":"EangJS"},"content":"     * @param task:   User task to remember.","lastModifiedDate":"2023-03-02"},{"lineNumber":55,"author":{"gitId":"EangJS"},"content":"     * @param storage Handler to read write to json file.","lastModifiedDate":"2023-03-02"},{"lineNumber":56,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":57,"author":{"gitId":"EangJS"},"content":"    public void add(Task task, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-20"},{"lineNumber":58,"author":{"gitId":"EangJS"},"content":"        taskList.add(task);","lastModifiedDate":"2023-02-20"},{"lineNumber":59,"author":{"gitId":"EangJS"},"content":"        storage.writeTasks(taskList);","lastModifiedDate":"2023-02-20"},{"lineNumber":60,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":61,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":62,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":63,"author":{"gitId":"EangJS"},"content":"     * Marks the task corresponding to task index as done.","lastModifiedDate":"2023-03-02"},{"lineNumber":64,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":65,"author":{"gitId":"EangJS"},"content":"     * @param taskIndex Task to be marked as done.","lastModifiedDate":"2023-03-02"},{"lineNumber":66,"author":{"gitId":"EangJS"},"content":"     * @param storage   Handler to read write to json file.","lastModifiedDate":"2023-03-02"},{"lineNumber":67,"author":{"gitId":"EangJS"},"content":"     * @return The task that has just been marked as done.","lastModifiedDate":"2023-03-02"},{"lineNumber":68,"author":{"gitId":"EangJS"},"content":"     * @throws DukeException Occurs when there is a write error.","lastModifiedDate":"2023-03-02"},{"lineNumber":69,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":70,"author":{"gitId":"EangJS"},"content":"    public Task markAsDone(int taskIndex, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-20"},{"lineNumber":71,"author":{"gitId":"EangJS"},"content":"        taskList.get(taskIndex).setAsDone();","lastModifiedDate":"2023-02-20"},{"lineNumber":72,"author":{"gitId":"EangJS"},"content":"        storage.writeTasks(taskList);","lastModifiedDate":"2023-02-20"},{"lineNumber":73,"author":{"gitId":"EangJS"},"content":"        return taskList.get(taskIndex);","lastModifiedDate":"2023-02-20"},{"lineNumber":74,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":75,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":76,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":77,"author":{"gitId":"EangJS"},"content":"     * Sets the specified task at the given index to undone.","lastModifiedDate":"2023-03-02"},{"lineNumber":78,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":79,"author":{"gitId":"EangJS"},"content":"     * @param taskIndex Index in which the task is stored in the array.","lastModifiedDate":"2023-03-02"},{"lineNumber":80,"author":{"gitId":"EangJS"},"content":"     * @param storage   Handler to read write to json file.","lastModifiedDate":"2023-03-02"},{"lineNumber":81,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":82,"author":{"gitId":"EangJS"},"content":"    public Task markAsUndone(int taskIndex, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-20"},{"lineNumber":83,"author":{"gitId":"EangJS"},"content":"        taskList.get(taskIndex).setAsUndone();","lastModifiedDate":"2023-02-20"},{"lineNumber":84,"author":{"gitId":"EangJS"},"content":"        storage.writeTasks(taskList);","lastModifiedDate":"2023-02-20"},{"lineNumber":85,"author":{"gitId":"EangJS"},"content":"        return taskList.get(taskIndex);","lastModifiedDate":"2023-02-20"},{"lineNumber":86,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":87,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":88,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":89,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":90,"author":{"gitId":"EangJS"},"content":"     * Deletes the specified index.","lastModifiedDate":"2023-03-02"},{"lineNumber":91,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":92,"author":{"gitId":"EangJS"},"content":"     * @param taskIndex Task index corresponding to task to delete.","lastModifiedDate":"2023-03-02"},{"lineNumber":93,"author":{"gitId":"EangJS"},"content":"     * @param storage   Handler to read write to json file.","lastModifiedDate":"2023-03-02"},{"lineNumber":94,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":95,"author":{"gitId":"EangJS"},"content":"    public Task deleteTask(int taskIndex, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-20"},{"lineNumber":96,"author":{"gitId":"EangJS"},"content":"        Task currentTask \u003d taskList.get(taskIndex);","lastModifiedDate":"2023-02-20"},{"lineNumber":97,"author":{"gitId":"EangJS"},"content":"        taskList.remove(taskIndex);","lastModifiedDate":"2023-02-20"},{"lineNumber":98,"author":{"gitId":"EangJS"},"content":"        storage.writeTasks(taskList);","lastModifiedDate":"2023-02-20"},{"lineNumber":99,"author":{"gitId":"EangJS"},"content":"        return currentTask;","lastModifiedDate":"2023-02-20"},{"lineNumber":100,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":101,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":102,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":103,"author":{"gitId":"EangJS"},"content":"     * Compares tasks based on datetime.","lastModifiedDate":"2023-03-02"},{"lineNumber":104,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":105,"author":{"gitId":"EangJS"},"content":"    public static class CustomComparator implements Comparator\u003cTask\u003e {","lastModifiedDate":"2023-02-22"},{"lineNumber":106,"author":{"gitId":"EangJS"},"content":"        @Override","lastModifiedDate":"2023-02-22"},{"lineNumber":107,"author":{"gitId":"EangJS"},"content":"        public int compare(Task task1, Task task2) {","lastModifiedDate":"2023-02-27"},{"lineNumber":108,"author":{"gitId":"EangJS"},"content":"            return task1.getEndTime().compareTo(task2.getEndTime());","lastModifiedDate":"2023-02-27"},{"lineNumber":109,"author":{"gitId":"EangJS"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":110,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":111,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":112,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":113,"author":{"gitId":"EangJS"},"content":"     * Sorts the current task list according to datetime.","lastModifiedDate":"2023-03-02"},{"lineNumber":114,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":115,"author":{"gitId":"EangJS"},"content":"    public void sortTaskList() {","lastModifiedDate":"2023-02-22"},{"lineNumber":116,"author":{"gitId":"EangJS"},"content":"        taskList.sort(new CustomComparator());","lastModifiedDate":"2023-02-22"},{"lineNumber":117,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":118,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":119,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":120,"author":{"gitId":"EangJS"},"content":"     * Saves the current taskList to storage.","lastModifiedDate":"2023-03-02"},{"lineNumber":121,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":122,"author":{"gitId":"EangJS"},"content":"     * @param storage Handler to save to json file.","lastModifiedDate":"2023-03-02"},{"lineNumber":123,"author":{"gitId":"EangJS"},"content":"     * @throws DukeException Occurs when there is a write error.","lastModifiedDate":"2023-03-02"},{"lineNumber":124,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":125,"author":{"gitId":"EangJS"},"content":"    public void saveList(Storage storage) throws DukeException {","lastModifiedDate":"2023-02-22"},{"lineNumber":126,"author":{"gitId":"EangJS"},"content":"        storage.writeTasks(taskList);","lastModifiedDate":"2023-02-22"},{"lineNumber":127,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":128,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":129,"author":{"gitId":"EangJS"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"EangJS":129}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EangJS"},"content":"package duke.exceptions;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"EangJS"},"content":"/**","lastModifiedDate":"2023-02-22"},{"lineNumber":4,"author":{"gitId":"EangJS"},"content":" * Class that creates new custom duke error.","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"EangJS"},"content":" */","lastModifiedDate":"2023-02-22"},{"lineNumber":6,"author":{"gitId":"EangJS"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":8,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":9,"author":{"gitId":"EangJS"},"content":"     * Constructor to create a custom duke error.","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":11,"author":{"gitId":"EangJS"},"content":"     * @param error Error message of the error.","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":13,"author":{"gitId":"EangJS"},"content":"    public DukeException(String error) {","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"EangJS"},"content":"        super(error);","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"EangJS"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"EangJS":16}},{"path":"src/main/java/duke/exceptions/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EangJS"},"content":"package duke.exceptions;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"EangJS"},"content":"/**","lastModifiedDate":"2023-02-22"},{"lineNumber":4,"author":{"gitId":"EangJS"},"content":" * Creates a new invalid input exception.","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"EangJS"},"content":" */","lastModifiedDate":"2023-02-22"},{"lineNumber":6,"author":{"gitId":"EangJS"},"content":"public class InvalidInputException extends DukeException {","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":8,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":9,"author":{"gitId":"EangJS"},"content":"     * Error where user has entered an input that does not match the required format.","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":11,"author":{"gitId":"EangJS"},"content":"    public InvalidInputException() {","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"EangJS"},"content":"        super(\"Please enter according to input formats\");","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"EangJS"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"EangJS":15}},{"path":"src/main/java/duke/exceptions/InvalidScheduleException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EangJS"},"content":"package duke.exceptions;","lastModifiedDate":"2023-02-22"},{"lineNumber":2,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":3,"author":{"gitId":"EangJS"},"content":"/**","lastModifiedDate":"2023-02-22"},{"lineNumber":4,"author":{"gitId":"EangJS"},"content":" * Creates new error where invalid start and end date is given.","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"EangJS"},"content":" */","lastModifiedDate":"2023-02-22"},{"lineNumber":6,"author":{"gitId":"EangJS"},"content":"public class InvalidScheduleException extends DukeException {","lastModifiedDate":"2023-02-22"},{"lineNumber":7,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":8,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":9,"author":{"gitId":"EangJS"},"content":"     * Error where user has entered a due date that is before start date.","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":11,"author":{"gitId":"EangJS"},"content":"    public InvalidScheduleException() {","lastModifiedDate":"2023-02-22"},{"lineNumber":12,"author":{"gitId":"EangJS"},"content":"        super(\"/by date cannot be before /from date!\");","lastModifiedDate":"2023-02-22"},{"lineNumber":13,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":14,"author":{"gitId":"EangJS"},"content":"}","lastModifiedDate":"2023-02-22"}],"authorContributionMap":{"EangJS":14}},{"path":"src/main/java/duke/filemanager/LocalDateAdapter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EangJS"},"content":"package duke.filemanager;","lastModifiedDate":"2023-02-22"},{"lineNumber":2,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":3,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"EangJS"},"content":"import com.google.gson.JsonDeserializationContext;","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"EangJS"},"content":"import com.google.gson.JsonDeserializer;","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"EangJS"},"content":"import com.google.gson.JsonElement;","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"EangJS"},"content":"import com.google.gson.JsonSerializer;","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"EangJS"},"content":"import com.google.gson.JsonParseException;","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"EangJS"},"content":"import com.google.gson.JsonSerializationContext;","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"EangJS"},"content":"import com.google.gson.JsonPrimitive;","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":12,"author":{"gitId":"EangJS"},"content":"import java.lang.reflect.Type;","lastModifiedDate":"2023-02-22"},{"lineNumber":13,"author":{"gitId":"EangJS"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-22"},{"lineNumber":14,"author":{"gitId":"EangJS"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-22"},{"lineNumber":15,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":16,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":17,"author":{"gitId":"EangJS"},"content":"/**","lastModifiedDate":"2023-02-22"},{"lineNumber":18,"author":{"gitId":"EangJS"},"content":" * Custom gson serializer for LocalDateTime.","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"EangJS"},"content":" */","lastModifiedDate":"2023-02-22"},{"lineNumber":20,"author":{"gitId":"EangJS"},"content":"class LocalDateAdapter implements JsonSerializer\u003cLocalDateTime\u003e, JsonDeserializer\u003cLocalDateTime\u003e {","lastModifiedDate":"2023-02-22"},{"lineNumber":21,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":22,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":23,"author":{"gitId":"EangJS"},"content":"     * Deserializes the formatted LocalDateTime from json file.","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":25,"author":{"gitId":"EangJS"},"content":"     * @param jsonElement                The json element to deserialize.","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"EangJS"},"content":"     * @param jsonDeserializationContext Context for deserialization.","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"EangJS"},"content":"     * @return The LocalDateTime parsed from json element.","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"EangJS"},"content":"     * @throws JsonParseException Occurs when invalid json format is given.","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":30,"author":{"gitId":"EangJS"},"content":"    @Override","lastModifiedDate":"2023-02-22"},{"lineNumber":31,"author":{"gitId":"EangJS"},"content":"    public LocalDateTime deserialize(JsonElement jsonElement,","lastModifiedDate":"2023-02-22"},{"lineNumber":32,"author":{"gitId":"EangJS"},"content":"                                     Type type,","lastModifiedDate":"2023-02-22"},{"lineNumber":33,"author":{"gitId":"EangJS"},"content":"                                     JsonDeserializationContext jsonDeserializationContext) throws JsonParseException {","lastModifiedDate":"2023-02-22"},{"lineNumber":34,"author":{"gitId":"EangJS"},"content":"        return LocalDateTime.parse(jsonElement.getAsString(), DateTimeFormatter.ISO_LOCAL_DATE_TIME);","lastModifiedDate":"2023-02-22"},{"lineNumber":35,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":36,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":37,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":38,"author":{"gitId":"EangJS"},"content":"     * Serializes the LocalDateTime to ISO_LOCAL_DATE_TIME format.","lastModifiedDate":"2023-03-02"},{"lineNumber":39,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-03-02"},{"lineNumber":40,"author":{"gitId":"EangJS"},"content":"     * @param localDateTime The localDateTime to be serialized.","lastModifiedDate":"2023-03-02"},{"lineNumber":41,"author":{"gitId":"EangJS"},"content":"     * @return The serialized json element from localDateTime.","lastModifiedDate":"2023-03-02"},{"lineNumber":42,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":43,"author":{"gitId":"EangJS"},"content":"    @Override","lastModifiedDate":"2023-02-22"},{"lineNumber":44,"author":{"gitId":"EangJS"},"content":"    public JsonElement serialize(LocalDateTime localDateTime, Type type, JsonSerializationContext jsonSerializationContext) {","lastModifiedDate":"2023-02-22"},{"lineNumber":45,"author":{"gitId":"EangJS"},"content":"        return new JsonPrimitive(","lastModifiedDate":"2023-02-22"},{"lineNumber":46,"author":{"gitId":"EangJS"},"content":"                localDateTime.format(DateTimeFormatter.ISO_LOCAL_DATE_TIME)","lastModifiedDate":"2023-02-22"},{"lineNumber":47,"author":{"gitId":"EangJS"},"content":"        );","lastModifiedDate":"2023-02-22"},{"lineNumber":48,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":49,"author":{"gitId":"EangJS"},"content":"}","lastModifiedDate":"2023-02-22"}],"authorContributionMap":{"EangJS":49}},{"path":"src/main/java/duke/filemanager/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EangJS"},"content":"package duke.filemanager;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"EangJS"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"EangJS"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"EangJS"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"EangJS"},"content":"/**","lastModifiedDate":"2023-02-22"},{"lineNumber":9,"author":{"gitId":"EangJS"},"content":" * Handler to read / write tasks to file.","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"EangJS"},"content":" */","lastModifiedDate":"2023-02-22"},{"lineNumber":11,"author":{"gitId":"EangJS"},"content":"public class Storage {","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"EangJS"},"content":"    private String filePath;","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"EangJS"},"content":"    private TaskWriter taskWriter \u003d new TaskWriter();","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"EangJS"},"content":"    private TaskLoader taskLoader \u003d new TaskLoader();","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":17,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":18,"author":{"gitId":"EangJS"},"content":"     * Constructs the Storage handler and sets the filepath where json file is stored.","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":20,"author":{"gitId":"EangJS"},"content":"     * @param filePath File Path of json file.","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":22,"author":{"gitId":"EangJS"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"EangJS"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":27,"author":{"gitId":"EangJS"},"content":"     * Sets the arrayList of tasks from json file.","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":29,"author":{"gitId":"EangJS"},"content":"     * @return ArrayList of tasks from previous session.","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"EangJS"},"content":"     * @throws DukeException Occurs when there is a file read error.","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":32,"author":{"gitId":"EangJS"},"content":"    public ArrayList\u003cTask\u003e setTasks() throws DukeException {","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"EangJS"},"content":"        return taskLoader.setClasses(filePath);","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":37,"author":{"gitId":"EangJS"},"content":"     * Writes the current taskList to the json file.","lastModifiedDate":"2023-03-02"},{"lineNumber":38,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":39,"author":{"gitId":"EangJS"},"content":"     * @param taskList TaskList containing all current tasks.","lastModifiedDate":"2023-03-02"},{"lineNumber":40,"author":{"gitId":"EangJS"},"content":"     * @throws DukeException Occurs when there is a file write error.","lastModifiedDate":"2023-03-02"},{"lineNumber":41,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":42,"author":{"gitId":"EangJS"},"content":"    public void writeTasks(ArrayList\u003cTask\u003e taskList) throws DukeException {","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"EangJS"},"content":"        taskWriter.writeToJson(taskList, filePath);","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"EangJS"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"EangJS":45}},{"path":"src/main/java/duke/filemanager/TaskLoader.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EangJS"},"content":"package duke.filemanager;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"EangJS"},"content":"import com.google.gson.Gson;","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"EangJS"},"content":"import com.google.gson.GsonBuilder;","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"EangJS"},"content":"import com.google.gson.JsonArray;","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"EangJS"},"content":"import com.google.gson.JsonParser;","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"EangJS"},"content":"import com.google.gson.JsonElement;","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"EangJS"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"EangJS"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"EangJS"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"EangJS"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":16,"author":{"gitId":"EangJS"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-02-22"},{"lineNumber":17,"author":{"gitId":"EangJS"},"content":"import java.io.Reader;","lastModifiedDate":"2023-02-22"},{"lineNumber":18,"author":{"gitId":"EangJS"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-22"},{"lineNumber":19,"author":{"gitId":"EangJS"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"EangJS"},"content":"/**","lastModifiedDate":"2023-02-22"},{"lineNumber":22,"author":{"gitId":"EangJS"},"content":" * Loads the tasks from json file to an ArrayList.","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"EangJS"},"content":" */","lastModifiedDate":"2023-02-22"},{"lineNumber":24,"author":{"gitId":"EangJS"},"content":"public class TaskLoader {","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":27,"author":{"gitId":"EangJS"},"content":"     * Reads the json file and processes it into an ArrayList of tasks.","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":29,"author":{"gitId":"EangJS"},"content":"     * @param filePath json file containing all tasks.","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"EangJS"},"content":"     * @return ArrayList of tasks from previous session.","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"EangJS"},"content":"     * @throws DukeException Occurs when there is a read error i.e. invalid json format.","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":33,"author":{"gitId":"EangJS"},"content":"    public ArrayList\u003cTask\u003e setClasses(String filePath) throws DukeException {","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"EangJS"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-02-10"},{"lineNumber":35,"author":{"gitId":"EangJS"},"content":"        GsonBuilder gsonBuilder \u003d new GsonBuilder();","lastModifiedDate":"2023-02-22"},{"lineNumber":36,"author":{"gitId":"EangJS"},"content":"        Gson gson \u003d gsonBuilder","lastModifiedDate":"2023-02-22"},{"lineNumber":37,"author":{"gitId":"EangJS"},"content":"                .registerTypeAdapter(LocalDateTime.class, new LocalDateAdapter())","lastModifiedDate":"2023-02-22"},{"lineNumber":38,"author":{"gitId":"EangJS"},"content":"                .setPrettyPrinting()","lastModifiedDate":"2023-02-22"},{"lineNumber":39,"author":{"gitId":"EangJS"},"content":"                .create();","lastModifiedDate":"2023-02-22"},{"lineNumber":40,"author":{"gitId":"EangJS"},"content":"        JsonArray jsonArray;","lastModifiedDate":"2023-02-20"},{"lineNumber":41,"author":{"gitId":"EangJS"},"content":"        try {","lastModifiedDate":"2023-02-10"},{"lineNumber":42,"author":{"gitId":"EangJS"},"content":"            Reader reader \u003d new FileReader(filePath);","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"EangJS"},"content":"            JsonParser parser \u003d new JsonParser();","lastModifiedDate":"2023-02-10"},{"lineNumber":44,"author":{"gitId":"EangJS"},"content":"            JsonElement jsonTree \u003d parser.parse(reader);","lastModifiedDate":"2023-02-10"},{"lineNumber":45,"author":{"gitId":"EangJS"},"content":"            jsonArray \u003d jsonTree.getAsJsonObject().getAsJsonArray(\"taskList\");","lastModifiedDate":"2023-02-10"},{"lineNumber":46,"author":{"gitId":"EangJS"},"content":"            for (JsonElement element : jsonArray) {","lastModifiedDate":"2023-02-10"},{"lineNumber":47,"author":{"gitId":"EangJS"},"content":"                if (element.getAsJsonObject().has(\"type\") \u0026\u0026 element.getAsJsonObject().get(\"type\").getAsString().equals(\"todo\")) {","lastModifiedDate":"2023-02-10"},{"lineNumber":48,"author":{"gitId":"EangJS"},"content":"                    tasks.add(gson.fromJson(element, Task.class));","lastModifiedDate":"2023-02-10"},{"lineNumber":49,"author":{"gitId":"EangJS"},"content":"                } else if (element.getAsJsonObject().has(\"startTime\")) {","lastModifiedDate":"2023-02-10"},{"lineNumber":50,"author":{"gitId":"EangJS"},"content":"                    tasks.add(gson.fromJson(element, Event.class));","lastModifiedDate":"2023-02-10"},{"lineNumber":51,"author":{"gitId":"EangJS"},"content":"                } else if (element.getAsJsonObject().has(\"dueBy\")) {","lastModifiedDate":"2023-02-10"},{"lineNumber":52,"author":{"gitId":"EangJS"},"content":"                    tasks.add(gson.fromJson(element, Deadline.class));","lastModifiedDate":"2023-02-10"},{"lineNumber":53,"author":{"gitId":"EangJS"},"content":"                }","lastModifiedDate":"2023-02-10"},{"lineNumber":54,"author":{"gitId":"EangJS"},"content":"            }","lastModifiedDate":"2023-02-10"},{"lineNumber":55,"author":{"gitId":"EangJS"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-02-20"},{"lineNumber":56,"author":{"gitId":"EangJS"},"content":"            throw new DukeException(\"File corrupted!\");","lastModifiedDate":"2023-02-20"},{"lineNumber":57,"author":{"gitId":"EangJS"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":58,"author":{"gitId":"EangJS"},"content":"        return tasks;","lastModifiedDate":"2023-02-10"},{"lineNumber":59,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":60,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":61,"author":{"gitId":"EangJS"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"EangJS":61}},{"path":"src/main/java/duke/filemanager/TaskWriter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EangJS"},"content":"package duke.filemanager;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"EangJS"},"content":"import com.google.gson.*;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"EangJS"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"EangJS"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"EangJS"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"EangJS"},"content":"import java.io.Writer;","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"EangJS"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-22"},{"lineNumber":10,"author":{"gitId":"EangJS"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"EangJS"},"content":"/**","lastModifiedDate":"2023-02-22"},{"lineNumber":13,"author":{"gitId":"EangJS"},"content":" * Writes the ArrayList of tasks into the json file.","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"EangJS"},"content":" */","lastModifiedDate":"2023-02-22"},{"lineNumber":15,"author":{"gitId":"EangJS"},"content":"public class TaskWriter {","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":17,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":18,"author":{"gitId":"EangJS"},"content":"     * Processes and formats the taskList into jsonObject to be written into a file.","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":20,"author":{"gitId":"EangJS"},"content":"     * @param taskList TaskList containing populated tasks to be saved.","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"EangJS"},"content":"     * @param filePath File to which json file is to be saved.","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"EangJS"},"content":"     * @throws DukeException Occurs when there is an unexpected error which prevents writing to file.","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":24,"author":{"gitId":"EangJS"},"content":"    public void writeToJson(ArrayList\u003cTask\u003e taskList, String filePath) throws DukeException {","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"EangJS"},"content":"        try {","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"EangJS"},"content":"            Writer writer \u003d new FileWriter(filePath);","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"EangJS"},"content":"            GsonBuilder gsonBuilder \u003d new GsonBuilder();","lastModifiedDate":"2023-02-22"},{"lineNumber":28,"author":{"gitId":"EangJS"},"content":"            Gson gson \u003d gsonBuilder","lastModifiedDate":"2023-02-22"},{"lineNumber":29,"author":{"gitId":"EangJS"},"content":"                    .registerTypeAdapter(LocalDateTime.class, new LocalDateAdapter())","lastModifiedDate":"2023-02-22"},{"lineNumber":30,"author":{"gitId":"EangJS"},"content":"                    .setPrettyPrinting()","lastModifiedDate":"2023-02-10"},{"lineNumber":31,"author":{"gitId":"EangJS"},"content":"                    .create();","lastModifiedDate":"2023-02-10"},{"lineNumber":32,"author":{"gitId":"EangJS"},"content":"            JsonArray jsonArray \u003d gson.toJsonTree(taskList).getAsJsonArray();","lastModifiedDate":"2023-02-22"},{"lineNumber":33,"author":{"gitId":"EangJS"},"content":"            JsonObject jsonObject \u003d new JsonObject();","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"EangJS"},"content":"            jsonObject.add(\"taskList\", jsonArray);","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"EangJS"},"content":"            writer.write(gson.toJson(jsonObject));","lastModifiedDate":"2023-02-10"},{"lineNumber":37,"author":{"gitId":"EangJS"},"content":"            writer.close();","lastModifiedDate":"2023-02-10"},{"lineNumber":38,"author":{"gitId":"EangJS"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-02-10"},{"lineNumber":39,"author":{"gitId":"EangJS"},"content":"            throw new DukeException(\"Failed to write to file\");","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"EangJS"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":41,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":42,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":43,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":44,"author":{"gitId":"EangJS"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"EangJS":44}},{"path":"src/main/java/duke/main/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EangJS"},"content":"package duke.main;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"EangJS"},"content":"import duke.command.UserCommandManager;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"EangJS"},"content":"import duke.data.TaskList;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"EangJS"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"EangJS"},"content":"import duke.filemanager.Storage;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"EangJS"},"content":"import duke.ui.ReadUserInput;","lastModifiedDate":"2023-02-22"},{"lineNumber":8,"author":{"gitId":"EangJS"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"EangJS"},"content":"/**","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"EangJS"},"content":" * Main class to handle duke operations","lastModifiedDate":"2023-02-22"},{"lineNumber":13,"author":{"gitId":"EangJS"},"content":" */","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"EangJS"},"content":"    private Ui ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"EangJS"},"content":"    private Storage storage;","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"EangJS"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"EangJS"},"content":"    private static final String FILE_PATH \u003d \"duke.json\";","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":20,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":22,"author":{"gitId":"EangJS"},"content":"     * Constructs the new Ui and storage handler and sets the tasklist from memory.","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":24,"author":{"gitId":"EangJS"},"content":"     * @param filePath File directory where json file is stored.","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":26,"author":{"gitId":"EangJS"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"EangJS"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"EangJS"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"EangJS"},"content":"        try {","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"EangJS"},"content":"            tasks \u003d new TaskList(storage.setTasks());","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"EangJS"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"EangJS"},"content":"            ui.errorMessage(e.getMessage());","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"EangJS"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"EangJS"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":36,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":37,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":38,"author":{"gitId":"EangJS"},"content":"     * Executes the program to poll for userInput and handles them.","lastModifiedDate":"2023-03-02"},{"lineNumber":39,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":40,"author":{"gitId":"EangJS"},"content":"    @SuppressWarnings(\"InfiniteLoopStatement\")","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"EangJS"},"content":"    public void run() {","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"EangJS"},"content":"        Ui.greetUser();","lastModifiedDate":"2023-02-22"},{"lineNumber":43,"author":{"gitId":"EangJS"},"content":"        ui.showLine();","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"EangJS"},"content":"        UserCommandManager commandManager \u003d new UserCommandManager();","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"EangJS"},"content":"        while (true) {","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"EangJS"},"content":"            try {","lastModifiedDate":"2023-02-20"},{"lineNumber":47,"author":{"gitId":"EangJS"},"content":"                String[] userCommand \u003d ReadUserInput.readInput();","lastModifiedDate":"2023-02-22"},{"lineNumber":48,"author":{"gitId":"EangJS"},"content":"                commandManager.handleCommands(userCommand, storage, tasks, ui);","lastModifiedDate":"2023-02-20"},{"lineNumber":49,"author":{"gitId":"EangJS"},"content":"                ui.showLine();","lastModifiedDate":"2023-02-20"},{"lineNumber":50,"author":{"gitId":"EangJS"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-02-20"},{"lineNumber":51,"author":{"gitId":"EangJS"},"content":"                ui.errorMessage(e.getMessage());","lastModifiedDate":"2023-02-20"},{"lineNumber":52,"author":{"gitId":"EangJS"},"content":"            }","lastModifiedDate":"2023-01-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":55,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":56,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":57,"author":{"gitId":"EangJS"},"content":"     * Start the program.","lastModifiedDate":"2023-03-02"},{"lineNumber":58,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":59,"author":{"gitId":"EangJS"},"content":"     * @param args None taken.","lastModifiedDate":"2023-03-02"},{"lineNumber":60,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":61,"author":{"gitId":"EangJS"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-20"},{"lineNumber":62,"author":{"gitId":"EangJS"},"content":"        new Duke(FILE_PATH).run();","lastModifiedDate":"2023-03-02"},{"lineNumber":63,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":64,"author":{"gitId":"EangJS"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"EangJS":61,"-":3}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EangJS"},"content":"package duke.task;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"EangJS"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-22"},{"lineNumber":4,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":5,"author":{"gitId":"EangJS"},"content":"/**","lastModifiedDate":"2023-02-22"},{"lineNumber":6,"author":{"gitId":"EangJS"},"content":" * Task with a deadline.","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"EangJS"},"content":" */","lastModifiedDate":"2023-02-22"},{"lineNumber":8,"author":{"gitId":"EangJS"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"EangJS"},"content":"    protected String dueBy;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"EangJS"},"content":"    private static final String TASK_ICON \u003d \"[D]\";","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"EangJS"},"content":"    private static final String TASK_TYPE \u003d \"Deadline\";","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":15,"author":{"gitId":"EangJS"},"content":"     * Constructs a deadline when with no given datetime","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"EangJS"},"content":"     * sets default to current datetime.","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":18,"author":{"gitId":"EangJS"},"content":"     * @param task  Description of the deadline.","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"EangJS"},"content":"     * @param dueBy Due description.","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":21,"author":{"gitId":"EangJS"},"content":"    public Deadline(String task, String dueBy) {","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"EangJS"},"content":"        super(task);","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"EangJS"},"content":"        this.dueBy \u003d dueBy;","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"EangJS"},"content":"        this.type \u003d TASK_TYPE;","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"EangJS"},"content":"        this.endTime \u003d LocalDateTime.now();","lastModifiedDate":"2023-02-22"},{"lineNumber":26,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":27,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":28,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":29,"author":{"gitId":"EangJS"},"content":"     * Constructs a deadline with given datetime.","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":31,"author":{"gitId":"EangJS"},"content":"     * @param task    Description of deadline.","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"EangJS"},"content":"     * @param dueBy   Due description.","lastModifiedDate":"2023-03-02"},{"lineNumber":33,"author":{"gitId":"EangJS"},"content":"     * @param endTime Time of the due date.","lastModifiedDate":"2023-03-02"},{"lineNumber":34,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":35,"author":{"gitId":"EangJS"},"content":"    public Deadline(String task, String dueBy, LocalDateTime endTime) {","lastModifiedDate":"2023-02-22"},{"lineNumber":36,"author":{"gitId":"EangJS"},"content":"        super(task);","lastModifiedDate":"2023-02-22"},{"lineNumber":37,"author":{"gitId":"EangJS"},"content":"        this.dueBy \u003d dueBy;","lastModifiedDate":"2023-02-22"},{"lineNumber":38,"author":{"gitId":"EangJS"},"content":"        this.type \u003d TASK_TYPE;","lastModifiedDate":"2023-03-02"},{"lineNumber":39,"author":{"gitId":"EangJS"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-02-22"},{"lineNumber":40,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"EangJS"},"content":"     * Gets the due description of the deadline.","lastModifiedDate":"2023-03-02"},{"lineNumber":44,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"EangJS"},"content":"     * @return Formatted string of due description.","lastModifiedDate":"2023-03-02"},{"lineNumber":46,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"EangJS"},"content":"    public String getDueBy() {","lastModifiedDate":"2023-02-22"},{"lineNumber":48,"author":{"gitId":"EangJS"},"content":"        return \"(by: \" + dueBy + \")\";","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":52,"author":{"gitId":"EangJS"},"content":"     * Gets the end time of deadline.","lastModifiedDate":"2023-03-02"},{"lineNumber":53,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":54,"author":{"gitId":"EangJS"},"content":"     * @return LocalDateTime of dueDate.","lastModifiedDate":"2023-03-02"},{"lineNumber":55,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":56,"author":{"gitId":"EangJS"},"content":"    @Override","lastModifiedDate":"2023-02-22"},{"lineNumber":57,"author":{"gitId":"EangJS"},"content":"    public LocalDateTime getEndTime() {","lastModifiedDate":"2023-02-22"},{"lineNumber":58,"author":{"gitId":"EangJS"},"content":"        return this.endTime;","lastModifiedDate":"2023-02-22"},{"lineNumber":59,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":60,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":61,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"EangJS"},"content":"     * Gets the type of task (deadline type).","lastModifiedDate":"2023-03-02"},{"lineNumber":63,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"EangJS"},"content":"     * @return Letter representing type of task.","lastModifiedDate":"2023-03-02"},{"lineNumber":65,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"EangJS"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"EangJS"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"EangJS"},"content":"        return TASK_ICON;","lastModifiedDate":"2023-03-02"},{"lineNumber":69,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"EangJS"},"content":"     * Shows the full deadline status and description.","lastModifiedDate":"2023-03-02"},{"lineNumber":73,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"EangJS"},"content":"     * @return Deadline status and description.","lastModifiedDate":"2023-03-02"},{"lineNumber":75,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":76,"author":{"gitId":"EangJS"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":77,"author":{"gitId":"EangJS"},"content":"    public String getTaskStatus() {","lastModifiedDate":"2023-01-29"},{"lineNumber":78,"author":{"gitId":"EangJS"},"content":"        return TASK_ICON + \"[\" + getStatusIcon() + \"] \" + task + getDueBy();","lastModifiedDate":"2023-03-02"},{"lineNumber":79,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":80,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":81,"author":{"gitId":"EangJS"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"EangJS":81}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EangJS"},"content":"package duke.task;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"EangJS"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-22"},{"lineNumber":4,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":5,"author":{"gitId":"EangJS"},"content":"/**","lastModifiedDate":"2023-02-22"},{"lineNumber":6,"author":{"gitId":"EangJS"},"content":" * Task with a start and end date.","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"EangJS"},"content":" */","lastModifiedDate":"2023-02-22"},{"lineNumber":8,"author":{"gitId":"EangJS"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"EangJS"},"content":"    protected String startString;","lastModifiedDate":"2023-02-22"},{"lineNumber":10,"author":{"gitId":"EangJS"},"content":"    protected String endString;","lastModifiedDate":"2023-02-22"},{"lineNumber":11,"author":{"gitId":"EangJS"},"content":"    protected LocalDateTime startTime;","lastModifiedDate":"2023-02-22"},{"lineNumber":12,"author":{"gitId":"EangJS"},"content":"    private static final String TASK_ICON \u003d \"[E]\";","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"EangJS"},"content":"    private static final String TASK_TYPE \u003d \"Event\";","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":15,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":16,"author":{"gitId":"EangJS"},"content":"     * Constructs an event without a given datetime","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"EangJS"},"content":"     * defaults to current time.","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":19,"author":{"gitId":"EangJS"},"content":"     * @param task        Description of event.","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"EangJS"},"content":"     * @param startString Starting duration description.","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"EangJS"},"content":"     * @param endString   Ending duration description.","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":23,"author":{"gitId":"EangJS"},"content":"    public Event(String task, String startString, String endString) {","lastModifiedDate":"2023-02-22"},{"lineNumber":24,"author":{"gitId":"EangJS"},"content":"        super(task);","lastModifiedDate":"2023-02-22"},{"lineNumber":25,"author":{"gitId":"EangJS"},"content":"        this.startString \u003d startString;","lastModifiedDate":"2023-02-22"},{"lineNumber":26,"author":{"gitId":"EangJS"},"content":"        this.endString \u003d endString;","lastModifiedDate":"2023-02-22"},{"lineNumber":27,"author":{"gitId":"EangJS"},"content":"        this.type \u003d TASK_TYPE;","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"EangJS"},"content":"        this.startTime \u003d LocalDateTime.now();","lastModifiedDate":"2023-02-22"},{"lineNumber":29,"author":{"gitId":"EangJS"},"content":"        this.endTime \u003d LocalDateTime.now();","lastModifiedDate":"2023-02-22"},{"lineNumber":30,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":31,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":33,"author":{"gitId":"EangJS"},"content":"     * Constructs an event with given datetime.","lastModifiedDate":"2023-03-02"},{"lineNumber":34,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":35,"author":{"gitId":"EangJS"},"content":"     * @param task        Description of event.","lastModifiedDate":"2023-03-02"},{"lineNumber":36,"author":{"gitId":"EangJS"},"content":"     * @param startString Starting duration description.","lastModifiedDate":"2023-03-02"},{"lineNumber":37,"author":{"gitId":"EangJS"},"content":"     * @param endString   Ending duration description.","lastModifiedDate":"2023-03-02"},{"lineNumber":38,"author":{"gitId":"EangJS"},"content":"     * @param startTime   Datetime of start date.","lastModifiedDate":"2023-03-02"},{"lineNumber":39,"author":{"gitId":"EangJS"},"content":"     * @param endTime     Datetime of the due date.","lastModifiedDate":"2023-03-02"},{"lineNumber":40,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":41,"author":{"gitId":"EangJS"},"content":"    public Event(String task, String startString, String endString, LocalDateTime startTime, LocalDateTime endTime) {","lastModifiedDate":"2023-02-22"},{"lineNumber":42,"author":{"gitId":"EangJS"},"content":"        super(task);","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"EangJS"},"content":"        this.startString \u003d startString;","lastModifiedDate":"2023-02-22"},{"lineNumber":44,"author":{"gitId":"EangJS"},"content":"        this.endString \u003d endString;","lastModifiedDate":"2023-02-22"},{"lineNumber":45,"author":{"gitId":"EangJS"},"content":"        this.type \u003d TASK_TYPE;","lastModifiedDate":"2023-03-02"},{"lineNumber":46,"author":{"gitId":"EangJS"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"EangJS"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"EangJS"},"content":"     * Gets the duration of the event.","lastModifiedDate":"2023-03-02"},{"lineNumber":52,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"EangJS"},"content":"     * @return The formatted string of the event duration.","lastModifiedDate":"2023-03-02"},{"lineNumber":54,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"EangJS"},"content":"    public String getDuration() {","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"EangJS"},"content":"        return \" (from: \" + startString + \" to: \" + endString + \")\";","lastModifiedDate":"2023-02-22"},{"lineNumber":57,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":58,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":59,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":60,"author":{"gitId":"EangJS"},"content":"     * Gets the end time of event.","lastModifiedDate":"2023-03-02"},{"lineNumber":61,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":62,"author":{"gitId":"EangJS"},"content":"     * @return LocalDateTime of dueDate.","lastModifiedDate":"2023-03-02"},{"lineNumber":63,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":64,"author":{"gitId":"EangJS"},"content":"    @Override","lastModifiedDate":"2023-02-22"},{"lineNumber":65,"author":{"gitId":"EangJS"},"content":"    public LocalDateTime getEndTime() {","lastModifiedDate":"2023-02-22"},{"lineNumber":66,"author":{"gitId":"EangJS"},"content":"        return this.endTime;","lastModifiedDate":"2023-02-22"},{"lineNumber":67,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"EangJS"},"content":"     * Gets the type of task (event type).","lastModifiedDate":"2023-03-02"},{"lineNumber":71,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"EangJS"},"content":"     * @return Letter representing type of task.","lastModifiedDate":"2023-03-02"},{"lineNumber":73,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"EangJS"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":75,"author":{"gitId":"EangJS"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-01-29"},{"lineNumber":76,"author":{"gitId":"EangJS"},"content":"        return TASK_ICON;","lastModifiedDate":"2023-03-02"},{"lineNumber":77,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":78,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":79,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":80,"author":{"gitId":"EangJS"},"content":"     * Shows the full event status and description.","lastModifiedDate":"2023-03-02"},{"lineNumber":81,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":82,"author":{"gitId":"EangJS"},"content":"     * @return Event status and description.","lastModifiedDate":"2023-03-02"},{"lineNumber":83,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":84,"author":{"gitId":"EangJS"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":85,"author":{"gitId":"EangJS"},"content":"    public String getTaskStatus() {","lastModifiedDate":"2023-01-29"},{"lineNumber":86,"author":{"gitId":"EangJS"},"content":"        return TASK_ICON + \"[\" + getStatusIcon() + \"] \" + task + getDuration();","lastModifiedDate":"2023-03-02"},{"lineNumber":87,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":88,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":89,"author":{"gitId":"EangJS"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"EangJS":89}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EangJS"},"content":"package duke.task;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"EangJS"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-22"},{"lineNumber":4,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":5,"author":{"gitId":"EangJS"},"content":"/**","lastModifiedDate":"2023-02-22"},{"lineNumber":6,"author":{"gitId":"EangJS"},"content":" * Basic todo task with only description","lastModifiedDate":"2023-02-22"},{"lineNumber":7,"author":{"gitId":"EangJS"},"content":" */","lastModifiedDate":"2023-02-22"},{"lineNumber":8,"author":{"gitId":"EangJS"},"content":"public class Task {","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"EangJS"},"content":"    protected String type;","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"EangJS"},"content":"    protected String task;","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"EangJS"},"content":"    private boolean isDone;","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"EangJS"},"content":"    protected LocalDateTime endTime;","lastModifiedDate":"2023-02-22"},{"lineNumber":13,"author":{"gitId":"EangJS"},"content":"    private static final String TASK_ICON \u003d \"[T]\";","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"EangJS"},"content":"    private static final String TASK_TYPE \u003d \"todo\";","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"EangJS"},"content":"    private static final String MARKED_ICON \u003d \"X\";","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"EangJS"},"content":"    private static final String UNMARKED_ICON \u003d \" \";","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"EangJS"},"content":"    private static final LocalDateTime DEFAULT_TIME \u003d LocalDateTime.of(0, 1, 1, 0, 0);","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":20,"author":{"gitId":"EangJS"},"content":"     * Constructs a new todo task with default date","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"EangJS"},"content":"     * of 1/1/0000 0000 so that it will be placed at the top when","lastModifiedDate":"2023-02-22"},{"lineNumber":22,"author":{"gitId":"EangJS"},"content":"     * sorted.","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":24,"author":{"gitId":"EangJS"},"content":"     * @param task Description of task.","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":26,"author":{"gitId":"EangJS"},"content":"    public Task(String task) {","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"EangJS"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"EangJS"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"EangJS"},"content":"        this.type \u003d TASK_TYPE;","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"EangJS"},"content":"        this.endTime \u003d DEFAULT_TIME;","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":34,"author":{"gitId":"EangJS"},"content":"     * Returns the task description.","lastModifiedDate":"2023-03-02"},{"lineNumber":35,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":36,"author":{"gitId":"EangJS"},"content":"     * @return String containing task description.","lastModifiedDate":"2023-03-02"},{"lineNumber":37,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":38,"author":{"gitId":"EangJS"},"content":"    public String getDescription() {","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"EangJS"},"content":"        return this.task;","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":41,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":43,"author":{"gitId":"EangJS"},"content":"     * Returns the endTime of task.","lastModifiedDate":"2023-03-02"},{"lineNumber":44,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":45,"author":{"gitId":"EangJS"},"content":"     * @return LocalDateTime object of endTime.","lastModifiedDate":"2023-03-02"},{"lineNumber":46,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":47,"author":{"gitId":"EangJS"},"content":"    public LocalDateTime getEndTime() {","lastModifiedDate":"2023-02-22"},{"lineNumber":48,"author":{"gitId":"EangJS"},"content":"        return this.endTime;","lastModifiedDate":"2023-02-22"},{"lineNumber":49,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":50,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":51,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":52,"author":{"gitId":"EangJS"},"content":"     * Sets the current task to be marked as done.","lastModifiedDate":"2023-03-02"},{"lineNumber":53,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":54,"author":{"gitId":"EangJS"},"content":"     * @return The String of the marked task","lastModifiedDate":"2023-03-02"},{"lineNumber":55,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":56,"author":{"gitId":"EangJS"},"content":"    public String setAsDone() {","lastModifiedDate":"2023-01-22"},{"lineNumber":57,"author":{"gitId":"EangJS"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-22"},{"lineNumber":58,"author":{"gitId":"EangJS"},"content":"        return this.task;","lastModifiedDate":"2023-01-22"},{"lineNumber":59,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":60,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":61,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":62,"author":{"gitId":"EangJS"},"content":"     * Sets the current task to be marked as not done.","lastModifiedDate":"2023-03-02"},{"lineNumber":63,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":64,"author":{"gitId":"EangJS"},"content":"     * @return The String of the marked task.","lastModifiedDate":"2023-03-02"},{"lineNumber":65,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":66,"author":{"gitId":"EangJS"},"content":"    public String setAsUndone() {","lastModifiedDate":"2023-01-22"},{"lineNumber":67,"author":{"gitId":"EangJS"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-22"},{"lineNumber":68,"author":{"gitId":"EangJS"},"content":"        return this.task;","lastModifiedDate":"2023-01-22"},{"lineNumber":69,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":70,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":71,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":72,"author":{"gitId":"EangJS"},"content":"     * Checks if the task is done, if done will return a tick,","lastModifiedDate":"2023-03-02"},{"lineNumber":73,"author":{"gitId":"EangJS"},"content":"     * however, if not done will return an empty space.","lastModifiedDate":"2023-03-02"},{"lineNumber":74,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":75,"author":{"gitId":"EangJS"},"content":"     * @return The String indicating the status of the task.","lastModifiedDate":"2023-03-02"},{"lineNumber":76,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":77,"author":{"gitId":"EangJS"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-22"},{"lineNumber":78,"author":{"gitId":"EangJS"},"content":"        return (this.isDone ? MARKED_ICON : UNMARKED_ICON);","lastModifiedDate":"2023-03-02"},{"lineNumber":79,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":80,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":81,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":82,"author":{"gitId":"EangJS"},"content":"     * Gets the type of task (todo type).","lastModifiedDate":"2023-03-02"},{"lineNumber":83,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":84,"author":{"gitId":"EangJS"},"content":"     * @return Letter representing type of task.","lastModifiedDate":"2023-03-02"},{"lineNumber":85,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":86,"author":{"gitId":"EangJS"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-01-29"},{"lineNumber":87,"author":{"gitId":"EangJS"},"content":"        return TASK_ICON;","lastModifiedDate":"2023-03-02"},{"lineNumber":88,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":89,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":90,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":91,"author":{"gitId":"EangJS"},"content":"     * Shows the full task status and description.","lastModifiedDate":"2023-03-02"},{"lineNumber":92,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":93,"author":{"gitId":"EangJS"},"content":"     * @return Task status and description.","lastModifiedDate":"2023-03-02"},{"lineNumber":94,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":95,"author":{"gitId":"EangJS"},"content":"    public String getTaskStatus() {","lastModifiedDate":"2023-01-29"},{"lineNumber":96,"author":{"gitId":"EangJS"},"content":"        return TASK_ICON + \"[\" + getStatusIcon() + \"] \" + task;","lastModifiedDate":"2023-03-02"},{"lineNumber":97,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":98,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":99,"author":{"gitId":"EangJS"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"EangJS":99}},{"path":"src/main/java/duke/ui/ReadUserInput.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EangJS"},"content":"package duke.ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"EangJS"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"EangJS"},"content":"/**","lastModifiedDate":"2023-02-22"},{"lineNumber":6,"author":{"gitId":"EangJS"},"content":" * Handles the reading of userInput from the command line.","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"EangJS"},"content":" */","lastModifiedDate":"2023-02-22"},{"lineNumber":8,"author":{"gitId":"EangJS"},"content":"public class ReadUserInput {","lastModifiedDate":"2023-02-22"},{"lineNumber":9,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":10,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":11,"author":{"gitId":"EangJS"},"content":"     * Scans for new user input and parse into String array containing.","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"EangJS"},"content":"     * command and command arguments.","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":14,"author":{"gitId":"EangJS"},"content":"     * @return String array containing command and its arguments.","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":16,"author":{"gitId":"EangJS"},"content":"    public static String[] readInput() {","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"EangJS"},"content":"        Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"EangJS"},"content":"        String[] userCommand \u003d new String[2];","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"EangJS"},"content":"        userCommand[0] \u003d input.next().toLowerCase();","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"EangJS"},"content":"        userCommand[1] \u003d input.nextLine();","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"EangJS"},"content":"        return userCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":24,"author":{"gitId":"EangJS"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"EangJS":24}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EangJS"},"content":"package duke.ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"EangJS"},"content":"import duke.data.TaskList;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"EangJS"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-22"},{"lineNumber":5,"author":{"gitId":"EangJS"},"content":"import duke.filemanager.Storage;","lastModifiedDate":"2023-02-22"},{"lineNumber":6,"author":{"gitId":"EangJS"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"EangJS"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"EangJS"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"EangJS"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"EangJS"},"content":"/**","lastModifiedDate":"2023-02-22"},{"lineNumber":13,"author":{"gitId":"EangJS"},"content":" * Handles all ui outputs to the user.","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"EangJS"},"content":" */","lastModifiedDate":"2023-02-22"},{"lineNumber":15,"author":{"gitId":"EangJS"},"content":"public class Ui {","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"EangJS"},"content":"    private static final String SEPARATOR \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"EangJS"},"content":"    private static final String BAD_SEPARATOR \u003d \"XXXXXXXXXXXXXXXXX\";","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"EangJS"},"content":"    private static final String LOGO \u003d \" .----------------.  .----------------.  .----------------.  .----------------. \\n\" +","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"EangJS"},"content":"            \"| | |_   ___ `.  | || ||_   _||_   _|| || | |_  ||_  _|  | || | |_   ___  |  | |\\n\" +","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"EangJS"},"content":"            \"| |   | |   `. \\\\ | || |  | |    | |  | || |   | |_/ /    | || |   | |_  \\\\_|  | |\\n\" +","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"EangJS"},"content":"            \"| |   | |    | | | || |  | \u0027    \u0027 |  | || |   |  __\u0027.    | || |   |  _|  _   | |\\n\" +","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"EangJS"},"content":"            \"| |  _| |___.\u0027 / | || |   \\\\ `--\u0027 /   | || |  _| |  \\\\ \\\\_  | || |  _| |___/ |  | |\\n\" +","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"EangJS"},"content":"            \"| | |________.\u0027  | || |    `.__.\u0027    | || | |____||____| | || | |_________|  | |\\n\" +","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"EangJS"},"content":"            \" \u0027----------------\u0027  \u0027----------------\u0027  \u0027----------------\u0027  \u0027----------------\u0027 \";","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"EangJS"},"content":"     * Prints out the greeting message to the user.","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"EangJS"},"content":"    public static void greetUser() {","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"EangJS"},"content":"        System.out.println(\"Hello from\\n\" + LOGO);","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"EangJS"},"content":"        String greetMessage \u003d \"Hello! I\u0027m Duke\\n\"","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"EangJS"},"content":"                + \"Send me a list of things to remember!\\n\"","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"EangJS"},"content":"                + \"Type \u003cbye\u003e to exit\";","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"EangJS"},"content":"        System.out.println(greetMessage);","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":37,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":39,"author":{"gitId":"EangJS"},"content":"     * Prints a separator line.","lastModifiedDate":"2023-03-02"},{"lineNumber":40,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":41,"author":{"gitId":"EangJS"},"content":"    public void showLine() {","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"EangJS"},"content":"        System.out.println(SEPARATOR);","lastModifiedDate":"2023-03-02"},{"lineNumber":43,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":46,"author":{"gitId":"EangJS"},"content":"     * Prints an error separator line with error message.","lastModifiedDate":"2023-03-02"},{"lineNumber":47,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":48,"author":{"gitId":"EangJS"},"content":"    public void errorMessage(String errorText) {","lastModifiedDate":"2023-02-20"},{"lineNumber":49,"author":{"gitId":"EangJS"},"content":"        System.out.println(errorText);","lastModifiedDate":"2023-02-20"},{"lineNumber":50,"author":{"gitId":"EangJS"},"content":"        System.out.println(BAD_SEPARATOR);","lastModifiedDate":"2023-03-02"},{"lineNumber":51,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":52,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":53,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":54,"author":{"gitId":"EangJS"},"content":"     * Prints the details of added task deadline.","lastModifiedDate":"2023-03-02"},{"lineNumber":55,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":56,"author":{"gitId":"EangJS"},"content":"     * @param deadline Newly added deadline task.","lastModifiedDate":"2023-03-02"},{"lineNumber":57,"author":{"gitId":"EangJS"},"content":"     * @param tasks    TaskList of all tasks.","lastModifiedDate":"2023-03-02"},{"lineNumber":58,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":59,"author":{"gitId":"EangJS"},"content":"    public void printTaskDeadline(Deadline deadline, TaskList tasks) {","lastModifiedDate":"2023-02-20"},{"lineNumber":60,"author":{"gitId":"EangJS"},"content":"        System.out.println(\"Got it! Added \\n\"","lastModifiedDate":"2023-02-20"},{"lineNumber":61,"author":{"gitId":"EangJS"},"content":"                + deadline.getTaskType() + \"[ ] \" + deadline.getDescription() + deadline.getDueBy() + \"\\n\"","lastModifiedDate":"2023-03-02"},{"lineNumber":62,"author":{"gitId":"EangJS"},"content":"                + \"to the list.\");","lastModifiedDate":"2023-02-20"},{"lineNumber":63,"author":{"gitId":"EangJS"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" task(s) in the list.\");","lastModifiedDate":"2023-02-20"},{"lineNumber":64,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":65,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":66,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":67,"author":{"gitId":"EangJS"},"content":"     * Prints the details of added task event.","lastModifiedDate":"2023-03-02"},{"lineNumber":68,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":69,"author":{"gitId":"EangJS"},"content":"     * @param event Newly added event task.","lastModifiedDate":"2023-03-02"},{"lineNumber":70,"author":{"gitId":"EangJS"},"content":"     * @param tasks TaskList of all tasks.","lastModifiedDate":"2023-03-02"},{"lineNumber":71,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":72,"author":{"gitId":"EangJS"},"content":"    public void printTaskEvent(Event event, TaskList tasks) {","lastModifiedDate":"2023-02-20"},{"lineNumber":73,"author":{"gitId":"EangJS"},"content":"        System.out.println(\"Got it! Added \\n\"","lastModifiedDate":"2023-02-20"},{"lineNumber":74,"author":{"gitId":"EangJS"},"content":"                + event.getTaskType() + \"[ ] \" + event.getDescription() + event.getDuration() + \"\\n\"","lastModifiedDate":"2023-03-02"},{"lineNumber":75,"author":{"gitId":"EangJS"},"content":"                + \"to the list.\");","lastModifiedDate":"2023-02-20"},{"lineNumber":76,"author":{"gitId":"EangJS"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" task(s) in the list.\");","lastModifiedDate":"2023-02-20"},{"lineNumber":77,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":78,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":79,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":80,"author":{"gitId":"EangJS"},"content":"     * Prints the details of added task.","lastModifiedDate":"2023-03-02"},{"lineNumber":81,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":82,"author":{"gitId":"EangJS"},"content":"     * @param task  Newly added task.","lastModifiedDate":"2023-03-02"},{"lineNumber":83,"author":{"gitId":"EangJS"},"content":"     * @param tasks TaskList of all tasks.","lastModifiedDate":"2023-03-02"},{"lineNumber":84,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":85,"author":{"gitId":"EangJS"},"content":"    public void printTaskTodo(Task task, TaskList tasks) {","lastModifiedDate":"2023-02-20"},{"lineNumber":86,"author":{"gitId":"EangJS"},"content":"        System.out.println(\"Got it! Added \\n\"","lastModifiedDate":"2023-02-20"},{"lineNumber":87,"author":{"gitId":"EangJS"},"content":"                + task.getTaskType() + \"[ ]\" + task.getDescription() + \"\\n\"","lastModifiedDate":"2023-03-02"},{"lineNumber":88,"author":{"gitId":"EangJS"},"content":"                + \"to the list.\");","lastModifiedDate":"2023-02-20"},{"lineNumber":89,"author":{"gitId":"EangJS"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" task(s) in the list.\");","lastModifiedDate":"2023-02-20"},{"lineNumber":90,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":91,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":92,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":93,"author":{"gitId":"EangJS"},"content":"     * Prints the details of deleted task.","lastModifiedDate":"2023-03-02"},{"lineNumber":94,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":95,"author":{"gitId":"EangJS"},"content":"     * @param task  Deleted task.","lastModifiedDate":"2023-03-02"},{"lineNumber":96,"author":{"gitId":"EangJS"},"content":"     * @param tasks TaskList of all tasks.","lastModifiedDate":"2023-03-02"},{"lineNumber":97,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":98,"author":{"gitId":"EangJS"},"content":"    public void printDeletedTask(Task task, TaskList tasks) {","lastModifiedDate":"2023-02-20"},{"lineNumber":99,"author":{"gitId":"EangJS"},"content":"        System.out.println(\"Noted sir, I have removed \\n\"","lastModifiedDate":"2023-02-20"},{"lineNumber":100,"author":{"gitId":"EangJS"},"content":"                + task.getTaskType() + \"[ ]\" + task.getDescription() + \"\\n\"","lastModifiedDate":"2023-02-20"},{"lineNumber":101,"author":{"gitId":"EangJS"},"content":"                + \"from the list\");","lastModifiedDate":"2023-02-20"},{"lineNumber":102,"author":{"gitId":"EangJS"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" task(s) in the list.\");","lastModifiedDate":"2023-02-20"},{"lineNumber":103,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":104,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":105,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":106,"author":{"gitId":"EangJS"},"content":"     * Prints the details of marked task.","lastModifiedDate":"2023-03-02"},{"lineNumber":107,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":108,"author":{"gitId":"EangJS"},"content":"     * @param task Task that has been marked.","lastModifiedDate":"2023-03-02"},{"lineNumber":109,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":110,"author":{"gitId":"EangJS"},"content":"    public void printMarkedTask(Task task) {","lastModifiedDate":"2023-02-20"},{"lineNumber":111,"author":{"gitId":"EangJS"},"content":"        System.out.println(\"Noted sir, I have marked \\n\"","lastModifiedDate":"2023-02-20"},{"lineNumber":112,"author":{"gitId":"EangJS"},"content":"                + task.getTaskStatus() + \" \" + task.getDescription() + \"\\n\"","lastModifiedDate":"2023-03-02"},{"lineNumber":113,"author":{"gitId":"EangJS"},"content":"                + \"as done.\");","lastModifiedDate":"2023-02-20"},{"lineNumber":114,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":115,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":116,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":117,"author":{"gitId":"EangJS"},"content":"     * Prints the details of the unmarked task.","lastModifiedDate":"2023-03-02"},{"lineNumber":118,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":119,"author":{"gitId":"EangJS"},"content":"     * @param task Task that has been unmarked.","lastModifiedDate":"2023-03-02"},{"lineNumber":120,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":121,"author":{"gitId":"EangJS"},"content":"    public void printUnmarkedTask(Task task) {","lastModifiedDate":"2023-02-20"},{"lineNumber":122,"author":{"gitId":"EangJS"},"content":"        System.out.println(\"Noted sir, I have marked \\n\"","lastModifiedDate":"2023-02-20"},{"lineNumber":123,"author":{"gitId":"EangJS"},"content":"                + task.getTaskType() + \"[ ] \" + task.getDescription() + \"\\n\"","lastModifiedDate":"2023-02-20"},{"lineNumber":124,"author":{"gitId":"EangJS"},"content":"                + \"as not done.\");","lastModifiedDate":"2023-02-20"},{"lineNumber":125,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":126,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":127,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":128,"author":{"gitId":"EangJS"},"content":"     * Prints all current tasks in taskList.","lastModifiedDate":"2023-03-02"},{"lineNumber":129,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":130,"author":{"gitId":"EangJS"},"content":"     * @param tasks TaskList of all current tasks.","lastModifiedDate":"2023-03-02"},{"lineNumber":131,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":132,"author":{"gitId":"EangJS"},"content":"    public void printTasks(TaskList tasks) {","lastModifiedDate":"2023-02-20"},{"lineNumber":133,"author":{"gitId":"EangJS"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-02-20"},{"lineNumber":134,"author":{"gitId":"EangJS"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-02-20"},{"lineNumber":135,"author":{"gitId":"EangJS"},"content":"            System.out.println(\"There are no tasks in your list!\");","lastModifiedDate":"2023-02-20"},{"lineNumber":136,"author":{"gitId":"EangJS"},"content":"            return;","lastModifiedDate":"2023-02-20"},{"lineNumber":137,"author":{"gitId":"EangJS"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":138,"author":{"gitId":"EangJS"},"content":"        ArrayList\u003cTask\u003e readableList \u003d tasks.getReadableList();","lastModifiedDate":"2023-02-20"},{"lineNumber":139,"author":{"gitId":"EangJS"},"content":"        int count \u003d 1;","lastModifiedDate":"2023-02-20"},{"lineNumber":140,"author":{"gitId":"EangJS"},"content":"        for (Task i : readableList) {","lastModifiedDate":"2023-02-20"},{"lineNumber":141,"author":{"gitId":"EangJS"},"content":"            System.out.println(count + \". \" + i.getTaskStatus());","lastModifiedDate":"2023-02-20"},{"lineNumber":142,"author":{"gitId":"EangJS"},"content":"            count++;","lastModifiedDate":"2023-02-20"},{"lineNumber":143,"author":{"gitId":"EangJS"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":144,"author":{"gitId":"EangJS"},"content":"        System.out.println(\"Now you have \" + readableList.size() + \" tasks in the list.\");","lastModifiedDate":"2023-02-20"},{"lineNumber":145,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":146,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":147,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":148,"author":{"gitId":"EangJS"},"content":"     * Prints the sorted version of the taskList according to endTime.","lastModifiedDate":"2023-03-02"},{"lineNumber":149,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":150,"author":{"gitId":"EangJS"},"content":"     * @param storage Handler to read write to json.","lastModifiedDate":"2023-03-02"},{"lineNumber":151,"author":{"gitId":"EangJS"},"content":"     * @throws DukeException Occurs when there is a read or write error.","lastModifiedDate":"2023-03-02"},{"lineNumber":152,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":153,"author":{"gitId":"EangJS"},"content":"    public void printSorted(Storage storage) throws DukeException {","lastModifiedDate":"2023-02-22"},{"lineNumber":154,"author":{"gitId":"EangJS"},"content":"        System.out.println(\"Sorting the list for you...\");","lastModifiedDate":"2023-02-22"},{"lineNumber":155,"author":{"gitId":"EangJS"},"content":"        TaskList toSort \u003d new TaskList(storage.setTasks()); //temp TaskList to sort and discard","lastModifiedDate":"2023-02-22"},{"lineNumber":156,"author":{"gitId":"EangJS"},"content":"        toSort.sortTaskList();","lastModifiedDate":"2023-02-22"},{"lineNumber":157,"author":{"gitId":"EangJS"},"content":"        printTasks(toSort);","lastModifiedDate":"2023-02-22"},{"lineNumber":158,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":159,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":160,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":161,"author":{"gitId":"EangJS"},"content":"     * Sorts and saves the taskList which is printed to user.","lastModifiedDate":"2023-03-02"},{"lineNumber":162,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":163,"author":{"gitId":"EangJS"},"content":"     * @param tasks   TaskList of all current tasks.","lastModifiedDate":"2023-03-02"},{"lineNumber":164,"author":{"gitId":"EangJS"},"content":"     * @param storage Handler to read write to json.","lastModifiedDate":"2023-03-02"},{"lineNumber":165,"author":{"gitId":"EangJS"},"content":"     * @throws DukeException Occurs when there is a read or write error.","lastModifiedDate":"2023-03-02"},{"lineNumber":166,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":167,"author":{"gitId":"EangJS"},"content":"    public void sortTasks(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-22"},{"lineNumber":168,"author":{"gitId":"EangJS"},"content":"        System.out.println(\"Sorting and saving the list for you...\");","lastModifiedDate":"2023-02-22"},{"lineNumber":169,"author":{"gitId":"EangJS"},"content":"        tasks.sortTaskList();","lastModifiedDate":"2023-02-22"},{"lineNumber":170,"author":{"gitId":"EangJS"},"content":"        printTasks(tasks);","lastModifiedDate":"2023-02-22"},{"lineNumber":171,"author":{"gitId":"EangJS"},"content":"        tasks.saveList(storage);","lastModifiedDate":"2023-02-22"},{"lineNumber":172,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":173,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":174,"author":{"gitId":"EangJS"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":175,"author":{"gitId":"EangJS"},"content":"     * Finds the tasks in taskList which their description contains query string and","lastModifiedDate":"2023-02-22"},{"lineNumber":176,"author":{"gitId":"EangJS"},"content":"     * prints out to the user.","lastModifiedDate":"2023-03-02"},{"lineNumber":177,"author":{"gitId":"EangJS"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":178,"author":{"gitId":"EangJS"},"content":"     * @param tasks TaskList of all current tasks.","lastModifiedDate":"2023-03-02"},{"lineNumber":179,"author":{"gitId":"EangJS"},"content":"     * @param query Query string to search for.","lastModifiedDate":"2023-03-02"},{"lineNumber":180,"author":{"gitId":"EangJS"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":181,"author":{"gitId":"EangJS"},"content":"    public void findQueryTasks(TaskList tasks, String query) {","lastModifiedDate":"2023-02-22"},{"lineNumber":182,"author":{"gitId":"EangJS"},"content":"        ArrayList\u003cTask\u003e readableList \u003d tasks.getReadableList();","lastModifiedDate":"2023-02-22"},{"lineNumber":183,"author":{"gitId":"EangJS"},"content":"        int matches \u003d 0;","lastModifiedDate":"2023-02-22"},{"lineNumber":184,"author":{"gitId":"EangJS"},"content":"        for (Task task : readableList) {","lastModifiedDate":"2023-02-22"},{"lineNumber":185,"author":{"gitId":"EangJS"},"content":"            if (task.getDescription().contains(query)) {","lastModifiedDate":"2023-02-22"},{"lineNumber":186,"author":{"gitId":"EangJS"},"content":"                matches +\u003d 1;","lastModifiedDate":"2023-02-22"},{"lineNumber":187,"author":{"gitId":"EangJS"},"content":"                System.out.println(matches + \". \" + task.getTaskStatus());","lastModifiedDate":"2023-02-22"},{"lineNumber":188,"author":{"gitId":"EangJS"},"content":"            }","lastModifiedDate":"2023-02-22"},{"lineNumber":189,"author":{"gitId":"EangJS"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":190,"author":{"gitId":"EangJS"},"content":"        System.out.println(\"You have \" + matches + \" to your query of: \" + query);","lastModifiedDate":"2023-02-22"},{"lineNumber":191,"author":{"gitId":"EangJS"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":192,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":193,"author":{"gitId":"EangJS"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"EangJS":193}},{"path":"text-ui-test/Counter.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"EangJS"},"content":"REM Credits: Code adapted from: https://gist.github.com/Archigos/0e34219b4a8b82358bb0","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"EangJS"},"content":"@ECHO OFF","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"EangJS"},"content":":ProgressMeter","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"EangJS"},"content":"SETLOCAL ENABLEDELAYEDEXPANSION","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"EangJS"},"content":"SET ProgressCnt\u003d%1","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"EangJS"},"content":"SET /A ProgressPercent\u003dProgressCnt/10","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"EangJS"},"content":"SET /A NumBars\u003d%ProgressPercent%","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"EangJS"},"content":"SET /A NumSpaces\u003d10-%NumBars%","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"EangJS"},"content":"SET Meter\u003d","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"EangJS"},"content":"FOR /L %%A IN (%NumBars%,-1,1) DO SET Meter\u003d!Meter!I","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"EangJS"},"content":"FOR /L %%A IN (%NumSpaces%,-1,1) DO SET Meter\u003d!Meter!.","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"EangJS"},"content":"TITLE Progress:  [%Meter%]  %ProgressCnt%%%","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"EangJS"},"content":"ENDLOCAL","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"EangJS"},"content":"GOTO :EOF","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"EangJS":18}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"EangJS"},"content":"todo Buy milk","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"EangJS"},"content":"deadline bake a cake /by 17/02/2023","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"EangJS"},"content":"event attend baking course /from 16/02/2023 /to 19/02/2023","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"EangJS"},"content":"list","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"EangJS"},"content":"event attend baking course /from 16/02/2023 /to 19/02/2023","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"EangJS"},"content":"deadline bake a cake /by 17/02/2023","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"EangJS"},"content":"deadline sell the cake /by 18/02/2023","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"EangJS"},"content":"mark 1","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"EangJS"},"content":"mark 2","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"EangJS"},"content":"mark 3","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"EangJS"},"content":"list","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"EangJS"},"content":"unmark 1","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"EangJS"},"content":"list","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"EangJS"},"content":"delete 1","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"EangJS"},"content":"delete 2","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"EangJS"},"content":"delete 3","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"EangJS"},"content":"bye","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"EangJS":17}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"EangJS"},"content":"FOR /L %%A IN (0,1,10) DO CALL COUNTER %%A%%","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"EangJS"},"content":"FOR /L %%A IN (10,1,20) DO CALL COUNTER %%A%%","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"EangJS"},"content":"javac  -cp \"..\\src\\main\\java;..\\lib\\gson-2.8.2.jar\" -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\main\\*.java ","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"EangJS"},"content":"FOR /L %%A IN (20,1,30) DO CALL COUNTER %%A%%","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"EangJS"},"content":"FOR /L %%A IN (30,1,70) DO CALL COUNTER %%A%%","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"EangJS"},"content":"java -classpath \"..\\bin;..\\lib\\gson-2.8.2.jar\" duke.main.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"EangJS"},"content":"FOR /L %%A IN (70,1,80) DO CALL COUNTER %%A%%","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"EangJS"},"content":"FC ACTUAL.TXT EXPECTED.TXT \u003e nul","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"EangJS"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"EangJS"},"content":"    ECHO TESTCASE FAILED","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"EangJS"},"content":") ELSE (","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"EangJS"},"content":"    ECHO TESTCASE PASSED","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"EangJS"},"content":")","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"EangJS"},"content":"FOR /L %%A IN (80,1,100) DO CALL COUNTER %%A%%","lastModifiedDate":"2023-02-05"},{"lineNumber":38,"author":{"gitId":"EangJS"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":39,"author":{"gitId":"EangJS"},"content":"timeout /t 3 \u003e NUL","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"-":17,"EangJS":22}}]
