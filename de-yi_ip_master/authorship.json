[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"de-yi"},"content":"### Feature-Add Todo","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"de-yi"},"content":"    [User] todo individual project","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"de-yi"},"content":"Duke will add the task to your task list.","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":12,"author":{"gitId":"de-yi"},"content":"### Feature-Add Deadline","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"de-yi"},"content":"    [User] deadline coursemology by 2023-01-01","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"de-yi"},"content":"Duke will add task with the deadline to your task list.","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"de-yi"},"content":"### Feature-Add Event","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"de-yi"},"content":"    [User] event tutorial from 2023-01-25 to 2023-04-07","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"de-yi"},"content":"Duke will add task with the starting and end date to your task list.","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"de-yi"},"content":"### Feature-List Tasks","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"de-yi"},"content":"    [User] list","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"de-yi"},"content":"Duke will list all the tasks in your task list.","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"de-yi"},"content":"### Feature-(Un)Mark Task","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"de-yi"},"content":"    [User] mark 1","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"de-yi"},"content":"Duke will mark the 1st task in your task list as done.","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"de-yi"},"content":"    [User] unmark 1","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"de-yi"},"content":"Duke will mark the 1st task in your task list as undone.","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"de-yi"},"content":"### Feature-Delete Task","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"de-yi"},"content":"    [User] delete 1","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"de-yi"},"content":"Duke will delete the 1st task in your task list.","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"de-yi"},"content":"### Feature-Find Task","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"de-yi"},"content":"    [User] find book","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"de-yi"},"content":"Duke will find tasks in your task list that contains the keyword.","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"de-yi"},"content":"### Feature-Exit","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"de-yi"},"content":"    [User] bye","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"de-yi"},"content":"Duke will say goodbye and finish the program.","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":58,"author":{"gitId":"de-yi"},"content":"### `todo` - add todo","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"de-yi"},"content":"Add todo task to your task list.","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"de-yi"},"content":"`todo TASK`","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"de-yi"},"content":"Expected outcome:","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"de-yi"},"content":"Duke will confirm adding after successful addition.","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"de-yi"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"de-yi"},"content":"[DUKE] Okay:) You\u0027ve got one more task added: ","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"de-yi"},"content":"       [T][ ] ip","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"de-yi"},"content":"[DUKE] Now you have \u003c5\u003e tasks in the list.","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"de-yi"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":76,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"de-yi"},"content":"### `deadline` - add deadline","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"de-yi"},"content":"Add task with the deadline to your task list","lastModifiedDate":"2023-03-03"},{"lineNumber":80,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"de-yi"},"content":"Example of usage:","lastModifiedDate":"2023-03-03"},{"lineNumber":82,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":83,"author":{"gitId":"de-yi"},"content":"`deadline TASK by YYYY-MM-DD`","lastModifiedDate":"2023-03-03"},{"lineNumber":84,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":85,"author":{"gitId":"de-yi"},"content":"Expected outcome:","lastModifiedDate":"2023-03-03"},{"lineNumber":86,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":87,"author":{"gitId":"de-yi"},"content":"Duke will confirm adding after successful addition.","lastModifiedDate":"2023-03-03"},{"lineNumber":88,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":89,"author":{"gitId":"de-yi"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":90,"author":{"gitId":"de-yi"},"content":"[DUKE] Okay:) You\u0027ve got one more task added: ","lastModifiedDate":"2023-03-03"},{"lineNumber":91,"author":{"gitId":"de-yi"},"content":"       [D][ ] ip / by 2023-02-03","lastModifiedDate":"2023-03-03"},{"lineNumber":92,"author":{"gitId":"de-yi"},"content":"[DUKE] Now you have \u003c6\u003e tasks in the list.","lastModifiedDate":"2023-03-03"},{"lineNumber":93,"author":{"gitId":"de-yi"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":94,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":95,"author":{"gitId":"de-yi"},"content":"### `event` - add event","lastModifiedDate":"2023-03-03"},{"lineNumber":96,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":97,"author":{"gitId":"de-yi"},"content":"Add task with the starting and end date to your task list.","lastModifiedDate":"2023-03-03"},{"lineNumber":98,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":99,"author":{"gitId":"de-yi"},"content":"Example of usage:","lastModifiedDate":"2023-03-03"},{"lineNumber":100,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":101,"author":{"gitId":"de-yi"},"content":"`event TASK from YYYY-MM-DD to YYYY-MM-DD`","lastModifiedDate":"2023-03-03"},{"lineNumber":102,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":103,"author":{"gitId":"de-yi"},"content":"Expected outcome:","lastModifiedDate":"2023-03-03"},{"lineNumber":104,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":105,"author":{"gitId":"de-yi"},"content":"Duke will confirm adding after successful addition.","lastModifiedDate":"2023-03-03"},{"lineNumber":106,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":107,"author":{"gitId":"de-yi"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":108,"author":{"gitId":"de-yi"},"content":"[DUKE] Okay:) You\u0027ve got one more task added: ","lastModifiedDate":"2023-03-03"},{"lineNumber":109,"author":{"gitId":"de-yi"},"content":"       [E][ ] ip / from 2023-01-22 / to 2023-03-02","lastModifiedDate":"2023-03-03"},{"lineNumber":110,"author":{"gitId":"de-yi"},"content":"[DUKE] Now you have \u003c7\u003e tasks in the list.","lastModifiedDate":"2023-03-03"},{"lineNumber":111,"author":{"gitId":"de-yi"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":112,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":113,"author":{"gitId":"de-yi"},"content":"### `list` - list tasks","lastModifiedDate":"2023-03-03"},{"lineNumber":114,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":115,"author":{"gitId":"de-yi"},"content":"List all the tasks in your task list.","lastModifiedDate":"2023-03-03"},{"lineNumber":116,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":117,"author":{"gitId":"de-yi"},"content":"Example of usage:","lastModifiedDate":"2023-03-03"},{"lineNumber":118,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":119,"author":{"gitId":"de-yi"},"content":"`list`","lastModifiedDate":"2023-03-03"},{"lineNumber":120,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":121,"author":{"gitId":"de-yi"},"content":"Expected outcome:","lastModifiedDate":"2023-03-03"},{"lineNumber":122,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":123,"author":{"gitId":"de-yi"},"content":"Duke will print tasks in the task list.","lastModifiedDate":"2023-03-03"},{"lineNumber":124,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":125,"author":{"gitId":"de-yi"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":126,"author":{"gitId":"de-yi"},"content":"[DUKE] Here are the tasks in your list: ","lastModifiedDate":"2023-03-03"},{"lineNumber":127,"author":{"gitId":"de-yi"},"content":"1.[E][ ] ip1 / from 1월 2 2023 / to 1월 2 2023","lastModifiedDate":"2023-03-03"},{"lineNumber":128,"author":{"gitId":"de-yi"},"content":"2.[E][ ] ip2 / from 10월 30 2023 / to 11월 3 2023","lastModifiedDate":"2023-03-03"},{"lineNumber":129,"author":{"gitId":"de-yi"},"content":"3.[T][ ] ip3","lastModifiedDate":"2023-03-03"},{"lineNumber":130,"author":{"gitId":"de-yi"},"content":"4.[D][ ] ip4 / by 2월 3 2023","lastModifiedDate":"2023-03-03"},{"lineNumber":131,"author":{"gitId":"de-yi"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":132,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":133,"author":{"gitId":"de-yi"},"content":"### `(Un)Mark` - Mark/Unmark task","lastModifiedDate":"2023-03-03"},{"lineNumber":134,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":135,"author":{"gitId":"de-yi"},"content":"Mark the targeted task in your task list as done/undone.","lastModifiedDate":"2023-03-03"},{"lineNumber":136,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":137,"author":{"gitId":"de-yi"},"content":"Example of usage:","lastModifiedDate":"2023-03-03"},{"lineNumber":138,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":139,"author":{"gitId":"de-yi"},"content":"`mark INT`, `unmark INT`","lastModifiedDate":"2023-03-03"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":141,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2023-03-03"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":143,"author":{"gitId":"de-yi"},"content":"Duke will confirm marking/unmarking.","lastModifiedDate":"2023-03-03"},{"lineNumber":144,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":145,"author":{"gitId":"de-yi"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":146,"author":{"gitId":"de-yi"},"content":"[DUKE] Good job! I marked this task as done: ","lastModifiedDate":"2023-03-03"},{"lineNumber":147,"author":{"gitId":"de-yi"},"content":"[T][O] ip","lastModifiedDate":"2023-03-03"},{"lineNumber":148,"author":{"gitId":"de-yi"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":150,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":151,"author":{"gitId":"de-yi"},"content":"[DUKE] OK, I\u0027ve marked this task as not done yet: ","lastModifiedDate":"2023-03-03"},{"lineNumber":152,"author":{"gitId":"de-yi"},"content":"[T][ ] ip","lastModifiedDate":"2023-03-03"},{"lineNumber":153,"author":{"gitId":"de-yi"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":154,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":155,"author":{"gitId":"de-yi"},"content":"### `delete` - delete task","lastModifiedDate":"2023-03-03"},{"lineNumber":156,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":157,"author":{"gitId":"de-yi"},"content":"Delete the targeted task in your task list","lastModifiedDate":"2023-03-03"},{"lineNumber":158,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":159,"author":{"gitId":"de-yi"},"content":"Example of usage:","lastModifiedDate":"2023-03-03"},{"lineNumber":160,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":161,"author":{"gitId":"de-yi"},"content":"`delete INT`","lastModifiedDate":"2023-03-03"},{"lineNumber":162,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":163,"author":{"gitId":"de-yi"},"content":"Expected outcome:","lastModifiedDate":"2023-03-03"},{"lineNumber":164,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":165,"author":{"gitId":"de-yi"},"content":"Duke will confirm the deletion.","lastModifiedDate":"2023-03-03"},{"lineNumber":166,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":167,"author":{"gitId":"de-yi"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":168,"author":{"gitId":"de-yi"},"content":"[DUKE] OK, I removed this task from the list: ","lastModifiedDate":"2023-03-03"},{"lineNumber":169,"author":{"gitId":"de-yi"},"content":"       [T][ ] ip","lastModifiedDate":"2023-03-03"},{"lineNumber":170,"author":{"gitId":"de-yi"},"content":"[DUKE] Now you have \u003c3\u003e tasks in the list.","lastModifiedDate":"2023-03-03"},{"lineNumber":171,"author":{"gitId":"de-yi"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":172,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":173,"author":{"gitId":"de-yi"},"content":"### `find` - find tasks with the keyword","lastModifiedDate":"2023-03-03"},{"lineNumber":174,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":175,"author":{"gitId":"de-yi"},"content":"Find tasks in your task list that contains the keyword.","lastModifiedDate":"2023-03-03"},{"lineNumber":176,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":177,"author":{"gitId":"de-yi"},"content":"Example of usage:","lastModifiedDate":"2023-03-03"},{"lineNumber":178,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":179,"author":{"gitId":"de-yi"},"content":"`find KEYWORD`","lastModifiedDate":"2023-03-03"},{"lineNumber":180,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":181,"author":{"gitId":"de-yi"},"content":"Expected outcome:","lastModifiedDate":"2023-03-03"},{"lineNumber":182,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":183,"author":{"gitId":"de-yi"},"content":"Duke will show you the list of tasks containing the keyword.","lastModifiedDate":"2023-03-03"},{"lineNumber":184,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":185,"author":{"gitId":"de-yi"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":186,"author":{"gitId":"de-yi"},"content":"[DUKE] Here are the matching tasks in your list: ","lastModifiedDate":"2023-03-03"},{"lineNumber":187,"author":{"gitId":"de-yi"},"content":"1.[D][ ] ip / by 2월 3 2023","lastModifiedDate":"2023-03-03"},{"lineNumber":188,"author":{"gitId":"de-yi"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":189,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":190,"author":{"gitId":"de-yi"},"content":"### `bye` - exit program","lastModifiedDate":"2023-03-03"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":192,"author":{"gitId":"de-yi"},"content":"Exit program.","lastModifiedDate":"2023-03-03"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":196,"author":{"gitId":"de-yi"},"content":"`bye`","lastModifiedDate":"2023-03-03"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":200,"author":{"gitId":"de-yi"},"content":"Duke will end the program after saying goodbye.","lastModifiedDate":"2023-03-03"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":202,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":203,"author":{"gitId":"de-yi"},"content":"[DUKE] Bye. Hope to see you again soon!","lastModifiedDate":"2023-03-03"},{"lineNumber":204,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"de-yi":174,"-":30}},{"path":"src/main/java/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"de-yi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"de-yi"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"de-yi"},"content":" * Represents a command to add deadline.","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"de-yi"},"content":" * A \u003ccode\u003eAddDeadlineCommand\u003c/code\u003e object corresponds to a command with \"add deadline\" type, content, and by(due date).","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"de-yi"},"content":" * It prints \u003ccode\u003eUI.printDateFormatErrorComment()\u003c/code\u003e if the input has an invalid date format.","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"de-yi"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"de-yi"},"content":"public class AddDeadlineCommand extends Command{","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"de-yi"},"content":"    public AddDeadlineCommand(String userInput){","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"de-yi"},"content":"        super(\"add deadline\");","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"de-yi"},"content":"        String originalInput \u003d userInput.replace(\"deadline\", \" \").strip();","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"de-yi"},"content":"        originalInput \u003d originalInput.replaceAll(\" / \", \"\");","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"de-yi"},"content":"        originalInput \u003d originalInput.replaceAll(\"/\", \"\");","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"de-yi"},"content":"        int byBeginIndex \u003d originalInput.lastIndexOf(\"by \");","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"de-yi"},"content":"        super.content \u003d originalInput.substring(0, byBeginIndex).strip();","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"de-yi"},"content":"        try{","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"de-yi"},"content":"            super.by \u003d LocalDate.parse(originalInput.substring(byBeginIndex).replace(\"by \", \"\").trim());","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"de-yi"},"content":"        } catch(Exception e){","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"de-yi"},"content":"            UI.printDateFormatErrorComment();","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"de-yi"},"content":"        }","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"de-yi"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"de-yi"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"de-yi":24}},{"path":"src/main/java/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"de-yi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"de-yi"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"de-yi"},"content":" * Represents a command to add event.","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"de-yi"},"content":" * A \u003ccode\u003eAddEventCommand\u003c/code\u003e object corresponds to a command with \"add event\" type, content, from(starting date), and to(ending date).","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"de-yi"},"content":" * It prints \u003ccode\u003eUI.printDateFormatErrorComment()\u003c/code\u003e if the input has an invalid date format.","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"de-yi"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"de-yi"},"content":"public class AddEventCommand extends Command{","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"de-yi"},"content":"    public AddEventCommand(String userInput){","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"de-yi"},"content":"        super(\"add event\");","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"de-yi"},"content":"        String originalInput \u003d userInput.replace(\"event\", \"\").strip();","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"de-yi"},"content":"        originalInput \u003d originalInput.replaceAll(\" / \", \"\");","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"de-yi"},"content":"        originalInput \u003d originalInput.replaceAll(\"/\", \"\");","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"de-yi"},"content":"        int fromBeginIndex \u003d originalInput.lastIndexOf(\"from \");","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"de-yi"},"content":"        int toBeginIndex \u003d originalInput.lastIndexOf(\"to \");","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"de-yi"},"content":"        content \u003d originalInput.substring(0, fromBeginIndex).strip();","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"de-yi"},"content":"        try{","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"de-yi"},"content":"            super.from \u003d LocalDate.parse(originalInput.substring(fromBeginIndex, toBeginIndex).replace(\"from \", \"\").trim());","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"de-yi"},"content":"            super.to \u003d LocalDate.parse(originalInput.substring(toBeginIndex).replace(\"to \", \"\").trim());","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"de-yi"},"content":"        } catch(Exception e){","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"de-yi"},"content":"            UI.printDateFormatErrorComment();","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"de-yi"},"content":"        }","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"de-yi"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"de-yi"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"de-yi":29}},{"path":"src/main/java/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"de-yi"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"de-yi"},"content":" * Represents a command to add todo.","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"de-yi"},"content":" * A \u003ccode\u003eAddTodoCommand\u003c/code\u003e object corresponds to a command with \"add todo\" type and content.","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"de-yi"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"de-yi"},"content":"public class AddTodoCommand extends Command{","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"de-yi"},"content":"    public AddTodoCommand(String userInput){","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"de-yi"},"content":"        super(\"add todo\");","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"de-yi"},"content":"        String tempContent \u003d userInput.replace(\"todo\", \"\").strip();","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"de-yi"},"content":"        super.content \u003d tempContent;","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"de-yi"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"de-yi"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"de-yi":12}},{"path":"src/main/java/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"de-yi"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"de-yi"},"content":" * Represents a command to exit the program.","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"de-yi"},"content":" * A \u003ccode\u003eByeCommand\u003c/code\u003e object corresponds to a command with \"bye\" type.","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"de-yi"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"de-yi"},"content":"public class ByeCommand extends Command{","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"de-yi"},"content":"    public ByeCommand(){","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"de-yi"},"content":"        super(\"bye\");","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"de-yi"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"de-yi"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"de-yi":10}},{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"de-yi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"de-yi"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"de-yi"},"content":" * Represents an abstract format of a command.","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"de-yi"},"content":" * A \u003ccode\u003eCommand\u003c/code\u003e object has null type, content, by, from, to, targetTaskIndex, and targetWord.","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"de-yi"},"content":" * Classes that extend this class should fill in necessary information through their constructors or methods.","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"de-yi"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"de-yi"},"content":"abstract public class Command {","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"de-yi"},"content":"    protected String type \u003d \" \";","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"de-yi"},"content":"    protected String content \u003d \" \";","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"de-yi"},"content":"    protected LocalDate by;","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"de-yi"},"content":"    protected LocalDate from;","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"de-yi"},"content":"    protected LocalDate to;","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"de-yi"},"content":"    protected int targetTaskIndex \u003d -1;","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"de-yi"},"content":"    protected String targetWord \u003d \" \";","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"de-yi"},"content":"    public Command(String type){","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"de-yi"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"de-yi"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"de-yi"},"content":"    public String getType(){","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"de-yi"},"content":"        return type;","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"de-yi"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"de-yi"},"content":"    public String getContent(){","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"de-yi"},"content":"        return content;","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"de-yi"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"de-yi"},"content":"    public LocalDate getBy(){","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"de-yi"},"content":"        return by;","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"de-yi"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"de-yi"},"content":"    public LocalDate getFrom(){","lastModifiedDate":"2023-03-02"},{"lineNumber":35,"author":{"gitId":"de-yi"},"content":"        return from;","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"de-yi"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"de-yi"},"content":"    public LocalDate getTo(){","lastModifiedDate":"2023-03-02"},{"lineNumber":39,"author":{"gitId":"de-yi"},"content":"        return to;","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"de-yi"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"de-yi"},"content":"    public int getTargetTaskIndex(){","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"de-yi"},"content":"        return targetTaskIndex;","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"de-yi"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":46,"author":{"gitId":"de-yi"},"content":"    public String getTargetWord(){","lastModifiedDate":"2023-03-02"},{"lineNumber":47,"author":{"gitId":"de-yi"},"content":"        return targetWord;","lastModifiedDate":"2023-03-02"},{"lineNumber":48,"author":{"gitId":"de-yi"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":49,"author":{"gitId":"de-yi"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"de-yi":49}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"de-yi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"de-yi"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"de-yi"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"de-yi"},"content":" * Represents a deadline task.","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"de-yi"},"content":" * A \u003ccode\u003eDeadline\u003c/code\u003e object corresponds to a task with contents, task progress, and deadline.","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"de-yi"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"de-yi"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"de-yi"},"content":"    private LocalDate by;","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"de-yi"},"content":"    Deadline(String content, LocalDate end) {","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"de-yi"},"content":"        super(content);","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"de-yi"},"content":"        try{","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"de-yi"},"content":"            this.by \u003d end;","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"de-yi"},"content":"        } catch(Exception e){","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"de-yi"},"content":"            UI.printDateFormatErrorComment();","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"de-yi"},"content":"        }","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"de-yi"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"de-yi"},"content":"    public LocalDate getBy(){","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"de-yi"},"content":"        return by;","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"de-yi"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"de-yi"},"content":"    @Override","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"de-yi"},"content":"    public String toString() {","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"de-yi"},"content":"        String returnStr \u003d \"[D]\";","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"de-yi"},"content":"        if (getIsDone()) {","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"de-yi"},"content":"            returnStr \u003d returnStr.concat(\"[O] \");","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"de-yi"},"content":"        } else {","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"de-yi"},"content":"            returnStr \u003d returnStr.concat(\"[ ] \");","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"de-yi"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":33,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":34,"author":{"gitId":"de-yi"},"content":"        return returnStr + getContents() + \" / by \" + by;","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"de-yi"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":36,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":37,"author":{"gitId":"de-yi"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"de-yi"},"content":"     * Returns information of a \u003ccode\u003eDeadline\u003c/code\u003e object with dates in mm-dd-yyyy format.","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"de-yi"},"content":"     * @param none.","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"de-yi"},"content":"     * @return String.","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"de-yi"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"de-yi"},"content":"    @Override","lastModifiedDate":"2023-03-02"},{"lineNumber":43,"author":{"gitId":"de-yi"},"content":"    public String showTask(){","lastModifiedDate":"2023-03-02"},{"lineNumber":44,"author":{"gitId":"de-yi"},"content":"        String returnStr \u003d \"[D]\";","lastModifiedDate":"2023-03-02"},{"lineNumber":45,"author":{"gitId":"de-yi"},"content":"        if (getIsDone()) {","lastModifiedDate":"2023-03-02"},{"lineNumber":46,"author":{"gitId":"de-yi"},"content":"            returnStr \u003d returnStr.concat(\"[O] \");","lastModifiedDate":"2023-03-02"},{"lineNumber":47,"author":{"gitId":"de-yi"},"content":"        } else {","lastModifiedDate":"2023-03-02"},{"lineNumber":48,"author":{"gitId":"de-yi"},"content":"            returnStr \u003d returnStr.concat(\"[ ] \");","lastModifiedDate":"2023-03-02"},{"lineNumber":49,"author":{"gitId":"de-yi"},"content":"        }","lastModifiedDate":"2023-03-02"},{"lineNumber":50,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":51,"author":{"gitId":"de-yi"},"content":"        return returnStr + getContents() + \" / by \" + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-03-02"},{"lineNumber":52,"author":{"gitId":"de-yi"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":53,"author":{"gitId":"de-yi"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"de-yi":53}},{"path":"src/main/java/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"de-yi"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"de-yi"},"content":" * Represents a command to delete a task.","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"de-yi"},"content":" * A \u003ccode\u003eDeleteCommand\u003c/code\u003e object corresponds to a command with \"delete\" type and an index of the target task.","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"de-yi"},"content":" * It prints \u003ccode\u003eUI.printInputErrorComment\u003c/code\u003e if the input does not have proper target task index.","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"de-yi"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"de-yi"},"content":"public class DeleteCommand extends Command{","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"de-yi"},"content":"    public DeleteCommand(String userInput){","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"de-yi"},"content":"        super(\"delete\");","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"de-yi"},"content":"        try{","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"de-yi"},"content":"            String originalInput \u003d userInput.replace(\"delete\", \" \").trim();","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"de-yi"},"content":"            super.targetTaskIndex \u003d Integer.parseInt(originalInput);","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"de-yi"},"content":"        } catch(Exception e){","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"de-yi"},"content":"            UI.printInputErrorComment();","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"de-yi"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"de-yi"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"de-yi"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"de-yi":18}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"de-yi"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"de-yi"},"content":" * Represents a virtual assistant that helps you manage your tasks.","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"de-yi"},"content":" * A \u003ccode\u003eDuke\u003c/code\u003e object can execute 9 types of command","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"de-yi"},"content":" * : bye, list, mark, unmark, delete, add todo/deadline/event, and find","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"de-yi"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"de-yi"},"content":"    public static final String COMMAND_BYE \u003d \"bye\";","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"de-yi"},"content":"    public static final String COMMAND_LIST \u003d \"list\";","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"de-yi"},"content":"    public static final String COMMAND_MARK \u003d \"mark\";","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"de-yi"},"content":"    public static final String COMMAND_UNMARK \u003d \"unmark\";","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"de-yi"},"content":"    public static final String COMMAND_DELETE \u003d \"delete\";","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"de-yi"},"content":"    public static final String COMMAND_ADD_TODO \u003d \"add todo\";","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"de-yi"},"content":"    public static final String COMMAND_ADD_DEADLINE \u003d \"add deadline\";","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"de-yi"},"content":"    public static final String COMMAND_ADD_EVENT \u003d \"add event\";","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"de-yi"},"content":"    public static final String COMMAND_FIND \u003d \"find\";","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"de-yi"},"content":"    private static TaskList taskList;","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"de-yi"},"content":"        taskList \u003d new TaskList(true);","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"de-yi"},"content":"        UI.greetUser();","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"de-yi"},"content":"        while(true){","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"de-yi"},"content":"            executeCommand();","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"de-yi"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"de-yi"},"content":"    private static void executeCommand(){","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"de-yi"},"content":"        Command command \u003d Parser.getCommand();","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"de-yi"},"content":"        if(command \u003d\u003d null) return;","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"de-yi"},"content":"        switch(command.getType()){","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"de-yi"},"content":"            case COMMAND_BYE:","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"de-yi"},"content":"                exitProgram(); break;","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"de-yi"},"content":"            case COMMAND_LIST:","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"de-yi"},"content":"                list(); break;","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"de-yi"},"content":"            case COMMAND_MARK:","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"de-yi"},"content":"                mark(command); break;","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"de-yi"},"content":"            case COMMAND_UNMARK:","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"de-yi"},"content":"                unmark(command); break;","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"de-yi"},"content":"            case COMMAND_DELETE:","lastModifiedDate":"2023-02-15"},{"lineNumber":45,"author":{"gitId":"de-yi"},"content":"                delete(command); break;","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"de-yi"},"content":"            case COMMAND_ADD_TODO:","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"de-yi"},"content":"                add(command); break;","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"de-yi"},"content":"            case COMMAND_ADD_DEADLINE:","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"de-yi"},"content":"                add(command); break;","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"de-yi"},"content":"            case COMMAND_ADD_EVENT:","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"de-yi"},"content":"                add(command); break;","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"de-yi"},"content":"            case COMMAND_FIND:","lastModifiedDate":"2023-03-02"},{"lineNumber":53,"author":{"gitId":"de-yi"},"content":"                find(command); break;","lastModifiedDate":"2023-03-02"},{"lineNumber":54,"author":{"gitId":"de-yi"},"content":"            default:","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"de-yi"},"content":"                UI.printInputErrorComment();","lastModifiedDate":"2023-03-01"},{"lineNumber":56,"author":{"gitId":"de-yi"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"de-yi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":59,"author":{"gitId":"de-yi"},"content":"    private static void exitProgram(){","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"de-yi"},"content":"        UI.printBye();","lastModifiedDate":"2023-03-01"},{"lineNumber":61,"author":{"gitId":"de-yi"},"content":"        System.exit(0);","lastModifiedDate":"2023-03-01"},{"lineNumber":62,"author":{"gitId":"de-yi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":63,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":64,"author":{"gitId":"de-yi"},"content":"    private static void add(Command command){","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"de-yi"},"content":"        if (taskList.addTask(command)) {","lastModifiedDate":"2023-03-01"},{"lineNumber":66,"author":{"gitId":"de-yi"},"content":"            int totalTaskNum \u003d taskList.getTotalTaskNum();","lastModifiedDate":"2023-03-01"},{"lineNumber":67,"author":{"gitId":"de-yi"},"content":"            UI.printAddComment(taskList.getTask(totalTaskNum), totalTaskNum);","lastModifiedDate":"2023-03-01"},{"lineNumber":68,"author":{"gitId":"de-yi"},"content":"        } else {","lastModifiedDate":"2023-01-30"},{"lineNumber":69,"author":{"gitId":"de-yi"},"content":"            UI.printInputErrorComment();","lastModifiedDate":"2023-03-01"},{"lineNumber":70,"author":{"gitId":"de-yi"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":71,"author":{"gitId":"de-yi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":72,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":73,"author":{"gitId":"de-yi"},"content":"    private static void list(){","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"de-yi"},"content":"        UI.printTaskList(taskList);","lastModifiedDate":"2023-03-01"},{"lineNumber":75,"author":{"gitId":"de-yi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":76,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":77,"author":{"gitId":"de-yi"},"content":"    private static void mark(Command command){","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"de-yi"},"content":"        taskList.markTask(command.getTargetTaskIndex());","lastModifiedDate":"2023-03-01"},{"lineNumber":79,"author":{"gitId":"de-yi"},"content":"        UI.printMarkComment(taskList.getTask(command.getTargetTaskIndex()));","lastModifiedDate":"2023-03-01"},{"lineNumber":80,"author":{"gitId":"de-yi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":81,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":82,"author":{"gitId":"de-yi"},"content":"    private static void unmark(Command command) {","lastModifiedDate":"2023-03-03"},{"lineNumber":83,"author":{"gitId":"de-yi"},"content":"        taskList.unmarkTask(command.getTargetTaskIndex());","lastModifiedDate":"2023-03-01"},{"lineNumber":84,"author":{"gitId":"de-yi"},"content":"        UI.printUnmarkComment(taskList.getTask(command.getTargetTaskIndex()));","lastModifiedDate":"2023-03-01"},{"lineNumber":85,"author":{"gitId":"de-yi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":86,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":87,"author":{"gitId":"de-yi"},"content":"    private static void delete(Command command){","lastModifiedDate":"2023-03-03"},{"lineNumber":88,"author":{"gitId":"de-yi"},"content":"        int taskNumInt \u003d command.getTargetTaskIndex();","lastModifiedDate":"2023-03-01"},{"lineNumber":89,"author":{"gitId":"de-yi"},"content":"        if(taskNumInt \u003e taskList.getTotalTaskNum() || taskNumInt \u003c\u003d 0){","lastModifiedDate":"2023-03-01"},{"lineNumber":90,"author":{"gitId":"de-yi"},"content":"            UI.printNotFoundErrorComment();","lastModifiedDate":"2023-03-01"},{"lineNumber":91,"author":{"gitId":"de-yi"},"content":"            return;","lastModifiedDate":"2023-02-15"},{"lineNumber":92,"author":{"gitId":"de-yi"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":93,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":94,"author":{"gitId":"de-yi"},"content":"        Task targetTask \u003d taskList.getTask(command.getTargetTaskIndex());","lastModifiedDate":"2023-03-01"},{"lineNumber":95,"author":{"gitId":"de-yi"},"content":"        if(taskList.delete(taskNumInt)) {","lastModifiedDate":"2023-03-01"},{"lineNumber":96,"author":{"gitId":"de-yi"},"content":"            UI.printDeleteComment(targetTask, taskList.getTotalTaskNum());","lastModifiedDate":"2023-03-01"},{"lineNumber":97,"author":{"gitId":"de-yi"},"content":"        } else{","lastModifiedDate":"2023-02-15"},{"lineNumber":98,"author":{"gitId":"de-yi"},"content":"            UI.printInputErrorComment();","lastModifiedDate":"2023-03-01"},{"lineNumber":99,"author":{"gitId":"de-yi"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":100,"author":{"gitId":"de-yi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":101,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":102,"author":{"gitId":"de-yi"},"content":"    private static void find(Command command){","lastModifiedDate":"2023-03-03"},{"lineNumber":103,"author":{"gitId":"de-yi"},"content":"        String targetWord \u003d command.getTargetWord();","lastModifiedDate":"2023-03-02"},{"lineNumber":104,"author":{"gitId":"de-yi"},"content":"        TaskList targetTaskList \u003d new TaskList(false);","lastModifiedDate":"2023-03-02"},{"lineNumber":105,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":106,"author":{"gitId":"de-yi"},"content":"        for(Task task : taskList.getTaskArray()){","lastModifiedDate":"2023-03-02"},{"lineNumber":107,"author":{"gitId":"de-yi"},"content":"            if (task.getContents().contains(targetWord)){","lastModifiedDate":"2023-03-02"},{"lineNumber":108,"author":{"gitId":"de-yi"},"content":"               targetTaskList.addTask(task);","lastModifiedDate":"2023-03-02"},{"lineNumber":109,"author":{"gitId":"de-yi"},"content":"            }","lastModifiedDate":"2023-03-02"},{"lineNumber":110,"author":{"gitId":"de-yi"},"content":"        }","lastModifiedDate":"2023-03-02"},{"lineNumber":111,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":112,"author":{"gitId":"de-yi"},"content":"        UI.printTargetTaskList(targetTaskList);","lastModifiedDate":"2023-03-02"},{"lineNumber":113,"author":{"gitId":"de-yi"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":114,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"de-yi":111,"-":4}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"de-yi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"de-yi"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"de-yi"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"de-yi"},"content":" * Represents an event task.","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"de-yi"},"content":" * A \u003ccode\u003eEvent\u003c/code\u003e object corresponds to a task with contents, task progress, start date, and end date.","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"de-yi"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"de-yi"},"content":"public class Event extends Task {","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"de-yi"},"content":"    LocalDate from;","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"de-yi"},"content":"    LocalDate to;","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"de-yi"},"content":"    Event(String content, LocalDate start, LocalDate end) {","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"de-yi"},"content":"        super(content);","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"de-yi"},"content":"        try{","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"de-yi"},"content":"            this.from \u003d start;","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"de-yi"},"content":"            this.to \u003d end;","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"de-yi"},"content":"        } catch (Exception e){","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"de-yi"},"content":"            UI.printDateFormatErrorComment();","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"de-yi"},"content":"        }","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"de-yi"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"de-yi"},"content":"    public LocalDate getFrom(){","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"de-yi"},"content":"        return from;","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"de-yi"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"de-yi"},"content":"    public LocalDate getTo(){","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"de-yi"},"content":"        return to;","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"de-yi"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"de-yi"},"content":"    @Override","lastModifiedDate":"2023-02-15"},{"lineNumber":33,"author":{"gitId":"de-yi"},"content":"    public String toString() {","lastModifiedDate":"2023-02-15"},{"lineNumber":34,"author":{"gitId":"de-yi"},"content":"        String returnStr \u003d \"[E]\";","lastModifiedDate":"2023-02-15"},{"lineNumber":35,"author":{"gitId":"de-yi"},"content":"        if (getIsDone()) {","lastModifiedDate":"2023-02-15"},{"lineNumber":36,"author":{"gitId":"de-yi"},"content":"            returnStr \u003d returnStr.concat(\"[O] \");","lastModifiedDate":"2023-02-15"},{"lineNumber":37,"author":{"gitId":"de-yi"},"content":"        } else {","lastModifiedDate":"2023-02-15"},{"lineNumber":38,"author":{"gitId":"de-yi"},"content":"            returnStr \u003d returnStr.concat(\"[ ] \");","lastModifiedDate":"2023-02-15"},{"lineNumber":39,"author":{"gitId":"de-yi"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":40,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":41,"author":{"gitId":"de-yi"},"content":"        return returnStr + getContents() + \" / from \" + from + \" / to \" + to;","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"de-yi"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":43,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":44,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"de-yi"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"de-yi"},"content":"     * Returns information of an \u003ccode\u003eEvent\u003c/code\u003e object with dates in mm-dd-yyyy format.","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"de-yi"},"content":"     * @param none.","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"de-yi"},"content":"     * @return String.","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"de-yi"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"de-yi"},"content":"    @Override","lastModifiedDate":"2023-03-02"},{"lineNumber":51,"author":{"gitId":"de-yi"},"content":"    public String showTask(){","lastModifiedDate":"2023-03-02"},{"lineNumber":52,"author":{"gitId":"de-yi"},"content":"        String returnStr \u003d \"[E]\";","lastModifiedDate":"2023-03-02"},{"lineNumber":53,"author":{"gitId":"de-yi"},"content":"        if (getIsDone()) {","lastModifiedDate":"2023-03-02"},{"lineNumber":54,"author":{"gitId":"de-yi"},"content":"            returnStr \u003d returnStr.concat(\"[O] \");","lastModifiedDate":"2023-03-02"},{"lineNumber":55,"author":{"gitId":"de-yi"},"content":"        } else {","lastModifiedDate":"2023-03-02"},{"lineNumber":56,"author":{"gitId":"de-yi"},"content":"            returnStr \u003d returnStr.concat(\"[ ] \");","lastModifiedDate":"2023-03-02"},{"lineNumber":57,"author":{"gitId":"de-yi"},"content":"        }","lastModifiedDate":"2023-03-02"},{"lineNumber":58,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":59,"author":{"gitId":"de-yi"},"content":"        return returnStr + getContents() + \" / from \" + from.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2023-03-02"},{"lineNumber":60,"author":{"gitId":"de-yi"},"content":"                + \" / to \" + to.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-03-02"},{"lineNumber":61,"author":{"gitId":"de-yi"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":62,"author":{"gitId":"de-yi"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"de-yi":62}},{"path":"src/main/java/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"de-yi"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"de-yi"},"content":" * Represents a command to find tasks with the keyword.","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"de-yi"},"content":" * A \u003ccode\u003eFindCommand\u003c/code\u003e object corresponds to a command with \"find\" type and targetWord.","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"de-yi"},"content":" *  It prints \u003ccode\u003eUI.printInputErrorComment()\u003c/code\u003e when the target word is invalid.","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"de-yi"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"de-yi"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"de-yi"},"content":"    public FindCommand(String userInput){","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"de-yi"},"content":"        super(\"find\");","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"de-yi"},"content":"        try{","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"de-yi"},"content":"            String originalInput \u003d userInput.replace(\"find\", \" \").trim();","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"de-yi"},"content":"            super.targetWord \u003d originalInput;","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"de-yi"},"content":"        } catch(Exception e){","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"de-yi"},"content":"            UI.printInputErrorComment();","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"de-yi"},"content":"        }","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"de-yi"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"de-yi"},"content":"}","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"de-yi":17}},{"path":"src/main/java/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"de-yi"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"de-yi"},"content":" * Represents a command to list all tasks in the tasklist.","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"de-yi"},"content":" * A \u003ccode\u003eListCommand\u003c/code\u003e object corresponds to a command with \"list\" type.","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"de-yi"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"de-yi"},"content":"public class ListCommand extends Command{","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"de-yi"},"content":"    public ListCommand(){","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"de-yi"},"content":"        super(\"list\");","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"de-yi"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"de-yi"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"de-yi":10}},{"path":"src/main/java/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"de-yi"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"de-yi"},"content":" * Represents a command to mark a task as done.","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"de-yi"},"content":" * A \u003ccode\u003eMarkCommand\u003c/code\u003e object corresponds to a command with \"mark\" type and an index of the target task.","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"de-yi"},"content":" * It prints \u003ccode\u003eUI.printInputErrorComment\u003c/code\u003e if the input does not have proper target task index.","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"de-yi"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"de-yi"},"content":"public class MarkCommand extends Command{","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"de-yi"},"content":"    public MarkCommand(String userInput){","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"de-yi"},"content":"        super(\"mark\");","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"de-yi"},"content":"        try{","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"de-yi"},"content":"            String originalInput \u003d userInput.replace(\"mark\", \" \").trim();","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"de-yi"},"content":"            super.targetTaskIndex \u003d Integer.parseInt(originalInput);","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"de-yi"},"content":"        } catch(Exception e){","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"de-yi"},"content":"            UI.printInputErrorComment();","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"de-yi"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"de-yi"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"de-yi"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"de-yi":17}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"de-yi"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"de-yi"},"content":" * Represents a parser that interprets user input.","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"de-yi"},"content":" * A \u003ccode\u003eParser\u003c/code\u003e sorts inputs into 9 different comments, and create appropriate Command objects.","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"de-yi"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"de-yi"},"content":"public class Parser {","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"de-yi"},"content":"    public static Command getCommand(){","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"de-yi"},"content":"        String userInput \u003d UI.getUserCommand().toLowerCase();","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"de-yi"},"content":"        return getCommand(userInput);","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"de-yi"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"de-yi"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"de-yi"},"content":"     * Returns appropriate \u003ccode\u003eCommand\u003c/code\u003e object according to the user input.","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"de-yi"},"content":"     * If the command is in wrong format, it will return null value.","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"de-yi"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"de-yi"},"content":"     * @param userInput string input of user","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"de-yi"},"content":"     * @return a \u003ccode\u003eCommand\u003c/code\u003e object according to the command type.","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"de-yi"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"de-yi"},"content":"    public static Command getCommand(String userInput){","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"de-yi"},"content":"        if(userInput.startsWith(\"todo\")){","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"de-yi"},"content":"            return new AddTodoCommand(userInput);","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"de-yi"},"content":"        }else if(userInput.startsWith(\"deadline\") \u0026\u0026 isValidDeadline(userInput)){","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"de-yi"},"content":"            return new AddDeadlineCommand(userInput);","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"de-yi"},"content":"        }else if(userInput.startsWith(\"event\") \u0026\u0026 isValidEvent(userInput)){","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"de-yi"},"content":"            return new AddEventCommand(userInput);","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"de-yi"},"content":"        }else if(userInput.startsWith(\"list\")){","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"de-yi"},"content":"            return new ListCommand();","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"de-yi"},"content":"        }else if(userInput.startsWith(\"mark\")){","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"de-yi"},"content":"            return new MarkCommand(userInput);","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"de-yi"},"content":"        }else if(userInput.startsWith(\"unmark\")){","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"de-yi"},"content":"            return new UnmarkCommand(userInput);","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"de-yi"},"content":"        }else if(userInput.startsWith(\"delete\")){","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"de-yi"},"content":"            return new DeleteCommand(userInput);","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"de-yi"},"content":"        }else if(userInput.startsWith(\"find\")){","lastModifiedDate":"2023-03-02"},{"lineNumber":37,"author":{"gitId":"de-yi"},"content":"            return new FindCommand(userInput);","lastModifiedDate":"2023-03-02"},{"lineNumber":38,"author":{"gitId":"de-yi"},"content":"        } else if(userInput.startsWith(\"bye\")){","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"de-yi"},"content":"            return new ByeCommand();","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"de-yi"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"de-yi"},"content":"        UI.printInputErrorComment();","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"de-yi"},"content":"        return null;","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"de-yi"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"de-yi"},"content":"    public static boolean isValidDeadline(String userInput){","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"de-yi"},"content":"        if(userInput.contains(\"by\")){","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"de-yi"},"content":"            return true;","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"de-yi"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"de-yi"},"content":"        return false;","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"de-yi"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"de-yi"},"content":"    public static boolean isValidEvent(String userInput){","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"de-yi"},"content":"        if(userInput.contains(\"from\") \u0026\u0026 userInput.contains(\"to\")){","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"de-yi"},"content":"            return true;","lastModifiedDate":"2023-03-01"},{"lineNumber":56,"author":{"gitId":"de-yi"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"de-yi"},"content":"        return false;","lastModifiedDate":"2023-03-01"},{"lineNumber":58,"author":{"gitId":"de-yi"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":59,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":60,"author":{"gitId":"de-yi"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"de-yi":60}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"de-yi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"de-yi"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"de-yi"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"de-yi"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"de-yi"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"de-yi"},"content":" * Represents a storage that deals with local file.","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"de-yi"},"content":" * A \u003ccode\u003eStorage\u003c/code\u003e can write and scan text data to/from the local file.","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"de-yi"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"de-yi"},"content":"public class Storage {","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"de-yi"},"content":"    static String home \u003d System.getProperty(\"user.home\");","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"de-yi"},"content":"    static java.nio.file.Path path \u003d Paths.get(home, \"duke.txt\");","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"de-yi"},"content":"    public Storage(){","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"de-yi"},"content":"        try {","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"de-yi"},"content":"            if (!Files.exists(path)) {","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"de-yi"},"content":"                UI.printFileCreatedComment(Files.createFile(path).toString());","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"de-yi"},"content":"            }","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"de-yi"},"content":"        } catch(IOException e){","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"de-yi"},"content":"            UI.printFileNotCreatedComment();","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"de-yi"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"de-yi"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"de-yi"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"de-yi"},"content":"    public static ArrayList\u003cString\u003e scanData() throws IOException {","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"de-yi"},"content":"        ArrayList\u003cString\u003e existingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"de-yi"},"content":"        existingTasks.addAll(Files.readAllLines(path));","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"de-yi"},"content":"        return existingTasks;","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"de-yi"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"de-yi"},"content":"    public void writeToFile(String textAdded){","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"de-yi"},"content":"        try {","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"de-yi"},"content":"            Files.writeString(path, textAdded);","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"de-yi"},"content":"        } catch (IOException e){","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"de-yi"},"content":"            UI.printSaveErrorComment();","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"de-yi"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"de-yi"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"de-yi"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"de-yi"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"de-yi":42}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"de-yi"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"de-yi"},"content":" * Represents a basic task format.","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"de-yi"},"content":" * A \u003ccode\u003eTask\u003c/code\u003e object corresponds to a task with contents and progress of the task.","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"de-yi"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"de-yi"},"content":"public class Task {","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"de-yi"},"content":"    private String contents;","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"de-yi"},"content":"    private Boolean isDone \u003d false;","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"de-yi"},"content":"    Task(String userInput) {","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"de-yi"},"content":"        contents \u003d userInput;","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"de-yi"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"de-yi"},"content":"    @Override","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"de-yi"},"content":"    public String toString() {","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"de-yi"},"content":"        if (isDone) {","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"de-yi"},"content":"            return \"[O] \" + contents;","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"de-yi"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"de-yi"},"content":"        return \"[ ] \" + contents;","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"de-yi"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"de-yi"},"content":"    public String getContents() {","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"de-yi"},"content":"        return contents;","lastModifiedDate":"2023-02-15"},{"lineNumber":25,"author":{"gitId":"de-yi"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"de-yi"},"content":"    public Boolean getIsDone() {","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"de-yi"},"content":"        return isDone;","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"de-yi"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"de-yi"},"content":"    public void mark() {","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"de-yi"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-02-15"},{"lineNumber":33,"author":{"gitId":"de-yi"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":34,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":35,"author":{"gitId":"de-yi"},"content":"    public void unmark() {","lastModifiedDate":"2023-02-15"},{"lineNumber":36,"author":{"gitId":"de-yi"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-02-15"},{"lineNumber":37,"author":{"gitId":"de-yi"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":38,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":39,"author":{"gitId":"de-yi"},"content":"    public String showTask(){","lastModifiedDate":"2023-03-02"},{"lineNumber":40,"author":{"gitId":"de-yi"},"content":"        if (isDone) {","lastModifiedDate":"2023-03-02"},{"lineNumber":41,"author":{"gitId":"de-yi"},"content":"            return \"[O] \" + contents;","lastModifiedDate":"2023-03-02"},{"lineNumber":42,"author":{"gitId":"de-yi"},"content":"        }","lastModifiedDate":"2023-03-02"},{"lineNumber":43,"author":{"gitId":"de-yi"},"content":"        return \"[ ] \" + contents;","lastModifiedDate":"2023-03-02"},{"lineNumber":44,"author":{"gitId":"de-yi"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":45,"author":{"gitId":"de-yi"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"de-yi":45}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"de-yi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"de-yi"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"de-yi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"de-yi"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"de-yi"},"content":" * Represents a list of tasks that Duke has to manage your tasks.","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"de-yi"},"content":" * A \u003ccode\u003eTaskList\u003c/code\u003e object loads existing data in file named \"Duke.txt\" whenever a Duke is operated","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"de-yi"},"content":" * and can add/delete/mark/print tasks on the list.","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"de-yi"},"content":" * Also, it can automatically update the local file by using Storage class.","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"de-yi"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"de-yi"},"content":"public class TaskList {","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"de-yi"},"content":"    private ArrayList\u003cTask\u003e taskArray;","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"de-yi"},"content":"    private int totalTaskNum;","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"de-yi"},"content":"    private Storage taskStorage \u003d new Storage();","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"de-yi"},"content":"    public TaskList(boolean shouldLoad){","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"de-yi"},"content":"        taskArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"de-yi"},"content":"        totalTaskNum \u003d 0;","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"de-yi"},"content":"        if(!shouldLoad){","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"de-yi"},"content":"            return;","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"de-yi"},"content":"        }","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"de-yi"},"content":"        try{","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"de-yi"},"content":"            ArrayList\u003cString\u003e existingTasks \u003d Storage.scanData();","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"de-yi"},"content":"            loadData(existingTasks);","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"de-yi"},"content":"        } catch(IOException e){","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"de-yi"},"content":"            UI.printFileLoadingErrorComment();","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"de-yi"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"de-yi"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"de-yi"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"de-yi"},"content":"    private void loadData(ArrayList\u003cString\u003e existingTasks) throws IOException{","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"de-yi"},"content":"        for(String taskInfo : existingTasks){","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"de-yi"},"content":"            Boolean isTaskDone \u003d false;","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"de-yi"},"content":"            if(taskInfo.contains(\"[O]\")){","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"de-yi"},"content":"                isTaskDone \u003d true;","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"de-yi"},"content":"            }","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"de-yi"},"content":"            if(taskInfo.contains(\"[T]\")){","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"de-yi"},"content":"                taskInfo \u003d \"todo \" + taskInfo.substring(9);","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"de-yi"},"content":"            }else if(taskInfo.contains(\"[D]\")){","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"de-yi"},"content":"                taskInfo \u003d \"deadline \" + taskInfo.substring(9);","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"de-yi"},"content":"            }else if(taskInfo.contains(\"[E]\")){","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"de-yi"},"content":"                taskInfo \u003d \"event \" + taskInfo.substring(9);","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"de-yi"},"content":"            }","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"de-yi"},"content":"            Command command \u003d Parser.getCommand(taskInfo);","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"de-yi"},"content":"            if(!addTask(command)){","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"de-yi"},"content":"                UI.printFileLoadingErrorComment();","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"de-yi"},"content":"            }","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"de-yi"},"content":"            if(isTaskDone) {","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"de-yi"},"content":"                markTask(getTotalTaskNum());","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"de-yi"},"content":"            }","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"de-yi"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":56,"author":{"gitId":"de-yi"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":58,"author":{"gitId":"de-yi"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"de-yi"},"content":"     * Returns boolean value after successfully adding a task to the task list.","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"de-yi"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"de-yi"},"content":"     * @param command \u003ccode\u003eCommand\u003c/code\u003e class object that contains a command to add todo, deadline, or event.","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"de-yi"},"content":"     * @return boolean value regarding the success of the addition","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"de-yi"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"de-yi"},"content":"    public boolean addTask(Command command){","lastModifiedDate":"2023-03-01"},{"lineNumber":65,"author":{"gitId":"de-yi"},"content":"        switch(command.getType()){","lastModifiedDate":"2023-03-01"},{"lineNumber":66,"author":{"gitId":"de-yi"},"content":"            case \"add todo\":","lastModifiedDate":"2023-03-01"},{"lineNumber":67,"author":{"gitId":"de-yi"},"content":"                return addTodo(command);","lastModifiedDate":"2023-03-01"},{"lineNumber":68,"author":{"gitId":"de-yi"},"content":"            case \"add deadline\":","lastModifiedDate":"2023-03-01"},{"lineNumber":69,"author":{"gitId":"de-yi"},"content":"                return addDeadline(command);","lastModifiedDate":"2023-03-01"},{"lineNumber":70,"author":{"gitId":"de-yi"},"content":"            case \"add event\":","lastModifiedDate":"2023-03-01"},{"lineNumber":71,"author":{"gitId":"de-yi"},"content":"                return addEvent(command);","lastModifiedDate":"2023-03-01"},{"lineNumber":72,"author":{"gitId":"de-yi"},"content":"            default:","lastModifiedDate":"2023-01-30"},{"lineNumber":73,"author":{"gitId":"de-yi"},"content":"                return false;","lastModifiedDate":"2023-03-01"},{"lineNumber":74,"author":{"gitId":"de-yi"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":75,"author":{"gitId":"de-yi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":76,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":77,"author":{"gitId":"de-yi"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"de-yi"},"content":"     * Returns boolean value after successfully adding a task to the task list.","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"de-yi"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":80,"author":{"gitId":"de-yi"},"content":"     * @param task \u003ccode\u003eTask\u003c/code\u003e class object that contains a todo, deadline, or event task.","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"de-yi"},"content":"     * @return boolean value regarding the success of the addition","lastModifiedDate":"2023-03-03"},{"lineNumber":82,"author":{"gitId":"de-yi"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":83,"author":{"gitId":"de-yi"},"content":"    public boolean addTask(Task task){","lastModifiedDate":"2023-03-02"},{"lineNumber":84,"author":{"gitId":"de-yi"},"content":"        taskArray.add(task);","lastModifiedDate":"2023-03-02"},{"lineNumber":85,"author":{"gitId":"de-yi"},"content":"        totalTaskNum++;","lastModifiedDate":"2023-03-02"},{"lineNumber":86,"author":{"gitId":"de-yi"},"content":"        return true;","lastModifiedDate":"2023-03-02"},{"lineNumber":87,"author":{"gitId":"de-yi"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":88,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":89,"author":{"gitId":"de-yi"},"content":"    private boolean addTodo(Command command){","lastModifiedDate":"2023-03-03"},{"lineNumber":90,"author":{"gitId":"de-yi"},"content":"        try{","lastModifiedDate":"2023-01-30"},{"lineNumber":91,"author":{"gitId":"de-yi"},"content":"            String contents \u003d command.getContent();","lastModifiedDate":"2023-03-01"},{"lineNumber":92,"author":{"gitId":"de-yi"},"content":"            Todo newTodo \u003d new Todo(contents);","lastModifiedDate":"2023-01-30"},{"lineNumber":93,"author":{"gitId":"de-yi"},"content":"            taskArray.add(newTodo);","lastModifiedDate":"2023-02-15"},{"lineNumber":94,"author":{"gitId":"de-yi"},"content":"            totalTaskNum++;","lastModifiedDate":"2023-02-15"},{"lineNumber":95,"author":{"gitId":"de-yi"},"content":"        } catch(Exception e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":96,"author":{"gitId":"de-yi"},"content":"            UI.printEmptyDescriptionComment(\"todo\");","lastModifiedDate":"2023-03-01"},{"lineNumber":97,"author":{"gitId":"de-yi"},"content":"            return false;","lastModifiedDate":"2023-01-30"},{"lineNumber":98,"author":{"gitId":"de-yi"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":99,"author":{"gitId":"de-yi"},"content":"        taskStorage.writeToFile(this.toString());","lastModifiedDate":"2023-03-01"},{"lineNumber":100,"author":{"gitId":"de-yi"},"content":"        return true;","lastModifiedDate":"2023-02-15"},{"lineNumber":101,"author":{"gitId":"de-yi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":102,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":103,"author":{"gitId":"de-yi"},"content":"    private boolean addDeadline(Command command){","lastModifiedDate":"2023-03-03"},{"lineNumber":104,"author":{"gitId":"de-yi"},"content":"        try{","lastModifiedDate":"2023-01-30"},{"lineNumber":105,"author":{"gitId":"de-yi"},"content":"            String contents \u003d command.getContent();","lastModifiedDate":"2023-03-01"},{"lineNumber":106,"author":{"gitId":"de-yi"},"content":"            LocalDate by \u003d command.getBy();","lastModifiedDate":"2023-03-02"},{"lineNumber":107,"author":{"gitId":"de-yi"},"content":"            if(by \u003d\u003d null) {return false;}","lastModifiedDate":"2023-03-02"},{"lineNumber":108,"author":{"gitId":"de-yi"},"content":"            Deadline newDeadline \u003d new Deadline (contents, by);","lastModifiedDate":"2023-03-01"},{"lineNumber":109,"author":{"gitId":"de-yi"},"content":"            taskArray.add(newDeadline);","lastModifiedDate":"2023-02-15"},{"lineNumber":110,"author":{"gitId":"de-yi"},"content":"            totalTaskNum++;","lastModifiedDate":"2023-02-15"},{"lineNumber":111,"author":{"gitId":"de-yi"},"content":"            taskStorage.writeToFile(this.toString());","lastModifiedDate":"2023-03-03"},{"lineNumber":112,"author":{"gitId":"de-yi"},"content":"        } catch(Exception e){","lastModifiedDate":"2023-01-30"},{"lineNumber":113,"author":{"gitId":"de-yi"},"content":"            UI.printEmptyDescriptionComment(\"deadline\");","lastModifiedDate":"2023-03-01"},{"lineNumber":114,"author":{"gitId":"de-yi"},"content":"            return false;","lastModifiedDate":"2023-01-30"},{"lineNumber":115,"author":{"gitId":"de-yi"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":116,"author":{"gitId":"de-yi"},"content":"        return true;","lastModifiedDate":"2023-02-15"},{"lineNumber":117,"author":{"gitId":"de-yi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":118,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":119,"author":{"gitId":"de-yi"},"content":"    private boolean addEvent(Command command){","lastModifiedDate":"2023-03-03"},{"lineNumber":120,"author":{"gitId":"de-yi"},"content":"        try{","lastModifiedDate":"2023-01-30"},{"lineNumber":121,"author":{"gitId":"de-yi"},"content":"            String contents \u003d command.getContent();","lastModifiedDate":"2023-03-01"},{"lineNumber":122,"author":{"gitId":"de-yi"},"content":"            LocalDate from \u003d command.getFrom();","lastModifiedDate":"2023-03-02"},{"lineNumber":123,"author":{"gitId":"de-yi"},"content":"            LocalDate to \u003d command.getTo();","lastModifiedDate":"2023-03-02"},{"lineNumber":124,"author":{"gitId":"de-yi"},"content":"            if(from \u003d\u003d null || to \u003d\u003d null) {return false;}","lastModifiedDate":"2023-03-02"},{"lineNumber":125,"author":{"gitId":"de-yi"},"content":"            Event newEvent \u003d new Event(contents, from, to);","lastModifiedDate":"2023-03-01"},{"lineNumber":126,"author":{"gitId":"de-yi"},"content":"            taskArray.add(newEvent);","lastModifiedDate":"2023-02-15"},{"lineNumber":127,"author":{"gitId":"de-yi"},"content":"            totalTaskNum++;","lastModifiedDate":"2023-02-15"},{"lineNumber":128,"author":{"gitId":"de-yi"},"content":"            taskStorage.writeToFile(this.toString());","lastModifiedDate":"2023-03-03"},{"lineNumber":129,"author":{"gitId":"de-yi"},"content":"        } catch(Exception e){","lastModifiedDate":"2023-01-30"},{"lineNumber":130,"author":{"gitId":"de-yi"},"content":"            UI.printEmptyDescriptionComment(\"event\");","lastModifiedDate":"2023-03-01"},{"lineNumber":131,"author":{"gitId":"de-yi"},"content":"            return false;","lastModifiedDate":"2023-01-30"},{"lineNumber":132,"author":{"gitId":"de-yi"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":133,"author":{"gitId":"de-yi"},"content":"        return true;","lastModifiedDate":"2023-02-15"},{"lineNumber":134,"author":{"gitId":"de-yi"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":135,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":136,"author":{"gitId":"de-yi"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":137,"author":{"gitId":"de-yi"},"content":"     * Marks a task as done and reflects it on the local file.","lastModifiedDate":"2023-03-03"},{"lineNumber":138,"author":{"gitId":"de-yi"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":139,"author":{"gitId":"de-yi"},"content":"     * @param taskNumInt the index of a task to mark.","lastModifiedDate":"2023-03-03"},{"lineNumber":140,"author":{"gitId":"de-yi"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":141,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":142,"author":{"gitId":"de-yi"},"content":"    public void markTask(int taskNumInt){","lastModifiedDate":"2023-03-03"},{"lineNumber":143,"author":{"gitId":"de-yi"},"content":"        taskArray.get(taskNumInt-1).mark();","lastModifiedDate":"2023-02-15"},{"lineNumber":144,"author":{"gitId":"de-yi"},"content":"        taskStorage.writeToFile(this.toString());","lastModifiedDate":"2023-03-01"},{"lineNumber":145,"author":{"gitId":"de-yi"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":146,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":147,"author":{"gitId":"de-yi"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":148,"author":{"gitId":"de-yi"},"content":"     * Marks a task as undone and reflects it on the local file.","lastModifiedDate":"2023-03-03"},{"lineNumber":149,"author":{"gitId":"de-yi"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":150,"author":{"gitId":"de-yi"},"content":"     * @param taskNumInt the index of a task to unmark.","lastModifiedDate":"2023-03-03"},{"lineNumber":151,"author":{"gitId":"de-yi"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":152,"author":{"gitId":"de-yi"},"content":"    public void unmarkTask(int taskNumInt){","lastModifiedDate":"2023-03-03"},{"lineNumber":153,"author":{"gitId":"de-yi"},"content":"        taskArray.get(taskNumInt-1).unmark();","lastModifiedDate":"2023-02-15"},{"lineNumber":154,"author":{"gitId":"de-yi"},"content":"        taskStorage.writeToFile(this.toString());","lastModifiedDate":"2023-03-01"},{"lineNumber":155,"author":{"gitId":"de-yi"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":156,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":157,"author":{"gitId":"de-yi"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":158,"author":{"gitId":"de-yi"},"content":"     * Deletes a task from the task list, rewrite the local file, and return true.","lastModifiedDate":"2023-03-03"},{"lineNumber":159,"author":{"gitId":"de-yi"},"content":"     * If it fails to delete, it returns false.","lastModifiedDate":"2023-03-03"},{"lineNumber":160,"author":{"gitId":"de-yi"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":161,"author":{"gitId":"de-yi"},"content":"     * @param taskNumInt the index of a task to delete.","lastModifiedDate":"2023-03-03"},{"lineNumber":162,"author":{"gitId":"de-yi"},"content":"     * @return boolean value indicating the success of deletion.","lastModifiedDate":"2023-03-03"},{"lineNumber":163,"author":{"gitId":"de-yi"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":164,"author":{"gitId":"de-yi"},"content":"    public boolean delete(int taskNumInt){","lastModifiedDate":"2023-02-15"},{"lineNumber":165,"author":{"gitId":"de-yi"},"content":"        try{","lastModifiedDate":"2023-02-15"},{"lineNumber":166,"author":{"gitId":"de-yi"},"content":"            taskArray.remove(taskNumInt-1);","lastModifiedDate":"2023-02-15"},{"lineNumber":167,"author":{"gitId":"de-yi"},"content":"            totalTaskNum--;","lastModifiedDate":"2023-02-15"},{"lineNumber":168,"author":{"gitId":"de-yi"},"content":"            taskStorage.writeToFile(this.toString());","lastModifiedDate":"2023-03-01"},{"lineNumber":169,"author":{"gitId":"de-yi"},"content":"            return true;","lastModifiedDate":"2023-02-15"},{"lineNumber":170,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":171,"author":{"gitId":"de-yi"},"content":"        } catch(Exception e){","lastModifiedDate":"2023-02-15"},{"lineNumber":172,"author":{"gitId":"de-yi"},"content":"            return false;","lastModifiedDate":"2023-02-15"},{"lineNumber":173,"author":{"gitId":"de-yi"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":174,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":175,"author":{"gitId":"de-yi"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":176,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":177,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":178,"author":{"gitId":"de-yi"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":179,"author":{"gitId":"de-yi"},"content":"    public String toString(){","lastModifiedDate":"2023-01-30"},{"lineNumber":180,"author":{"gitId":"de-yi"},"content":"        String str \u003d \"\";","lastModifiedDate":"2023-01-30"},{"lineNumber":181,"author":{"gitId":"de-yi"},"content":"        for(int i\u003d1; i\u003ctotalTaskNum+1; i++){","lastModifiedDate":"2023-01-30"},{"lineNumber":182,"author":{"gitId":"de-yi"},"content":"            str \u003d str.concat(i + \".\" + taskArray.get(i-1) + \"\\n\");","lastModifiedDate":"2023-02-15"},{"lineNumber":183,"author":{"gitId":"de-yi"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":184,"author":{"gitId":"de-yi"},"content":"        return str;","lastModifiedDate":"2023-01-30"},{"lineNumber":185,"author":{"gitId":"de-yi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":186,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":187,"author":{"gitId":"de-yi"},"content":"    public int getTotalTaskNum(){","lastModifiedDate":"2023-01-30"},{"lineNumber":188,"author":{"gitId":"de-yi"},"content":"        return totalTaskNum;","lastModifiedDate":"2023-01-30"},{"lineNumber":189,"author":{"gitId":"de-yi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":190,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":191,"author":{"gitId":"de-yi"},"content":"    public Task getTask(int taskNumInt){","lastModifiedDate":"2023-03-01"},{"lineNumber":192,"author":{"gitId":"de-yi"},"content":"        return taskArray.get(taskNumInt-1);","lastModifiedDate":"2023-03-01"},{"lineNumber":193,"author":{"gitId":"de-yi"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":194,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":195,"author":{"gitId":"de-yi"},"content":"    public ArrayList\u003cTask\u003e getTaskArray() {","lastModifiedDate":"2023-03-02"},{"lineNumber":196,"author":{"gitId":"de-yi"},"content":"        return taskArray;","lastModifiedDate":"2023-03-02"},{"lineNumber":197,"author":{"gitId":"de-yi"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":198,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":199,"author":{"gitId":"de-yi"},"content":"    public String showTaskList(){","lastModifiedDate":"2023-03-02"},{"lineNumber":200,"author":{"gitId":"de-yi"},"content":"        String str \u003d \"\";","lastModifiedDate":"2023-03-02"},{"lineNumber":201,"author":{"gitId":"de-yi"},"content":"        for(int i\u003d1; i\u003ctotalTaskNum+1; i++){","lastModifiedDate":"2023-03-02"},{"lineNumber":202,"author":{"gitId":"de-yi"},"content":"            str \u003d str.concat(i + \".\" + taskArray.get(i-1).showTask() + \"\\n\");","lastModifiedDate":"2023-03-02"},{"lineNumber":203,"author":{"gitId":"de-yi"},"content":"        }","lastModifiedDate":"2023-03-02"},{"lineNumber":204,"author":{"gitId":"de-yi"},"content":"        return str;","lastModifiedDate":"2023-03-02"},{"lineNumber":205,"author":{"gitId":"de-yi"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":206,"author":{"gitId":"de-yi"},"content":"}","lastModifiedDate":"2023-01-30"},{"lineNumber":207,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"de-yi":207}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"de-yi"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"de-yi"},"content":" * Represents a todo task.","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"de-yi"},"content":" * A \u003ccode\u003eTodo\u003c/code\u003e object corresponds to a task with contents and progress of the task.","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"de-yi"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"de-yi"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"de-yi"},"content":"    Todo(String userInput) {","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"de-yi"},"content":"        super(userInput);","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"de-yi"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"de-yi"},"content":"    @Override","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"de-yi"},"content":"    public String toString() {","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"de-yi"},"content":"        if (getIsDone()) {","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"de-yi"},"content":"            return \"[T][O] \" + getContents();","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"de-yi"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"de-yi"},"content":"        return \"[T][ ] \" + getContents();","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"de-yi"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"de-yi"},"content":"    @Override","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"de-yi"},"content":"    public String showTask(){","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"de-yi"},"content":"        if (getIsDone()) {","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"de-yi"},"content":"            return \"[T][O] \" + getContents();","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"de-yi"},"content":"        }","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"de-yi"},"content":"        return \"[T][ ] \" + getContents();","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"de-yi"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"de-yi"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"de-yi":26}},{"path":"src/main/java/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"de-yi"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"de-yi"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"de-yi"},"content":" * Represents a user interface that interact directly with the user.","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"de-yi"},"content":" * A \u003ccode\u003eUI\u003c/code\u003e prints greetings, task lists, errors, and comments of Duke.","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"de-yi"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"de-yi"},"content":"public class UI {","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"de-yi"},"content":"    public static String HORIZONTAL_LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"de-yi"},"content":"    public UI(){","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"de-yi"},"content":"        greetUser();","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"de-yi"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"de-yi"},"content":"    public static void greetUser(){","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"de-yi"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"de-yi"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"de-yi"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"de-yi"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"de-yi"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"de-yi"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"de-yi"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"de-yi"},"content":"        System.out.println(\"[DUKE] Hello! I\u0027m Duke\");","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"de-yi"},"content":"        printAvailableInput();","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"de-yi"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"de-yi"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"de-yi"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"de-yi"},"content":"    public static  void printBye(){","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"de-yi"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"de-yi"},"content":"        System.out.println(\"[DUKE] Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"de-yi"},"content":"        System.out.print(HORIZONTAL_LINE);","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"de-yi"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"de-yi"},"content":"    public static void printAvailableInput(){","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"de-yi"},"content":"        System.out.println(\"These are what You can do:\");","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"de-yi"},"content":"        System.out.println(\"* |Add todo| ex) todo individual project\" );","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"de-yi"},"content":"        System.out.println(\"* |Add deadline| ex) deadline do coursemology by 2023-01-01\");","lastModifiedDate":"2023-03-02"},{"lineNumber":39,"author":{"gitId":"de-yi"},"content":"        System.out.println(\"* |Add event| ex) event tutorial from 2023-02-09 to 2023-03-07\");","lastModifiedDate":"2023-03-02"},{"lineNumber":40,"author":{"gitId":"de-yi"},"content":"        System.out.println(\"* |List tasks| ex) list\");","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"de-yi"},"content":"        System.out.println(\"* |Mark a task as Done| ex) mark 2\");","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"de-yi"},"content":"        System.out.println(\"* |Mark a task as Undone| ex) unmark 2\");","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"de-yi"},"content":"        System.out.println(\"* |Delete| ex) delete 3\");","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"de-yi"},"content":"        System.out.println(\"* |Find| ex) find project\");","lastModifiedDate":"2023-03-02"},{"lineNumber":45,"author":{"gitId":"de-yi"},"content":"        System.out.println(\"* |Exit| ex) bye\");","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"de-yi"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"de-yi"},"content":"    public static void printAddComment(Task targetTask, int totalTaskNum){","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"de-yi"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"de-yi"},"content":"        System.out.println(\"[DUKE] Okay:) You\u0027ve got one more task added: \");","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"de-yi"},"content":"        System.out.println(\"       \"+ targetTask);","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"de-yi"},"content":"        System.out.println(\"[DUKE] Now you have \u003c\" + totalTaskNum + \"\u003e tasks in the list.\");","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"de-yi"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"de-yi"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":56,"author":{"gitId":"de-yi"},"content":"    public static void printDeleteComment(Task targetTask, int totalTaskNum){","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"de-yi"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-03-01"},{"lineNumber":58,"author":{"gitId":"de-yi"},"content":"        System.out.println(\"[DUKE] OK, I removed this task from the list: \");","lastModifiedDate":"2023-03-01"},{"lineNumber":59,"author":{"gitId":"de-yi"},"content":"        System.out.println(\"       \"+ targetTask);","lastModifiedDate":"2023-03-01"},{"lineNumber":60,"author":{"gitId":"de-yi"},"content":"        System.out.println(\"[DUKE] Now you have \u003c\" + totalTaskNum + \"\u003e tasks in the list.\");","lastModifiedDate":"2023-03-01"},{"lineNumber":61,"author":{"gitId":"de-yi"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-03-01"},{"lineNumber":62,"author":{"gitId":"de-yi"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":63,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":64,"author":{"gitId":"de-yi"},"content":"    public static void printMarkComment(Task targetTask){","lastModifiedDate":"2023-03-01"},{"lineNumber":65,"author":{"gitId":"de-yi"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-03-01"},{"lineNumber":66,"author":{"gitId":"de-yi"},"content":"        System.out.println(\"[DUKE] Good job! I marked this task as done: \");","lastModifiedDate":"2023-03-01"},{"lineNumber":67,"author":{"gitId":"de-yi"},"content":"        System.out.println(targetTask.showTask());","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"de-yi"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-03-01"},{"lineNumber":69,"author":{"gitId":"de-yi"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":70,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":71,"author":{"gitId":"de-yi"},"content":"    public static void printUnmarkComment(Task targetTask){","lastModifiedDate":"2023-03-01"},{"lineNumber":72,"author":{"gitId":"de-yi"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-03-01"},{"lineNumber":73,"author":{"gitId":"de-yi"},"content":"        System.out.println(\"[DUKE] OK, I\u0027ve marked this task as not done yet: \");","lastModifiedDate":"2023-03-01"},{"lineNumber":74,"author":{"gitId":"de-yi"},"content":"        System.out.println(targetTask.showTask());","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"de-yi"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-03-01"},{"lineNumber":76,"author":{"gitId":"de-yi"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":77,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":78,"author":{"gitId":"de-yi"},"content":"    public static void printTaskList(TaskList taskList){","lastModifiedDate":"2023-03-01"},{"lineNumber":79,"author":{"gitId":"de-yi"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-03-01"},{"lineNumber":80,"author":{"gitId":"de-yi"},"content":"        System.out.println(\"[DUKE] Here are the tasks in your list: \");","lastModifiedDate":"2023-03-01"},{"lineNumber":81,"author":{"gitId":"de-yi"},"content":"        System.out.print(taskList.showTaskList());","lastModifiedDate":"2023-03-02"},{"lineNumber":82,"author":{"gitId":"de-yi"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-03-01"},{"lineNumber":83,"author":{"gitId":"de-yi"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":84,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":85,"author":{"gitId":"de-yi"},"content":"    public static void printTargetTaskList(TaskList taskList){","lastModifiedDate":"2023-03-02"},{"lineNumber":86,"author":{"gitId":"de-yi"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-03-02"},{"lineNumber":87,"author":{"gitId":"de-yi"},"content":"        System.out.println(\"[DUKE] Here are the matching tasks in your list: \");","lastModifiedDate":"2023-03-02"},{"lineNumber":88,"author":{"gitId":"de-yi"},"content":"        System.out.print(taskList.showTaskList());","lastModifiedDate":"2023-03-03"},{"lineNumber":89,"author":{"gitId":"de-yi"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-03-02"},{"lineNumber":90,"author":{"gitId":"de-yi"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":91,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":92,"author":{"gitId":"de-yi"},"content":"    public static void printInputErrorComment(){","lastModifiedDate":"2023-03-01"},{"lineNumber":93,"author":{"gitId":"de-yi"},"content":"        System.out.println(\"[DUKE] Uh oh! Wrong Input :( I Cannot Understand you. Please check input format.\");","lastModifiedDate":"2023-03-01"},{"lineNumber":94,"author":{"gitId":"de-yi"},"content":"        printAvailableInput();","lastModifiedDate":"2023-03-01"},{"lineNumber":95,"author":{"gitId":"de-yi"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-03-01"},{"lineNumber":96,"author":{"gitId":"de-yi"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":97,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":98,"author":{"gitId":"de-yi"},"content":"    public static void printNotFoundErrorComment(){","lastModifiedDate":"2023-03-01"},{"lineNumber":99,"author":{"gitId":"de-yi"},"content":"        System.out.println(\"[Duke] ☹ OOPS!!! I cannot find the task\");","lastModifiedDate":"2023-03-01"},{"lineNumber":100,"author":{"gitId":"de-yi"},"content":"        printAvailableInput();","lastModifiedDate":"2023-03-01"},{"lineNumber":101,"author":{"gitId":"de-yi"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-03-01"},{"lineNumber":102,"author":{"gitId":"de-yi"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":103,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":104,"author":{"gitId":"de-yi"},"content":"    public static void printEmptyDescriptionComment(String taskType){","lastModifiedDate":"2023-03-01"},{"lineNumber":105,"author":{"gitId":"de-yi"},"content":"        System.out.println(\"[Duke] ☹ OOPS!!! The description of a(n) \" + taskType + \" cannot be empty.\");","lastModifiedDate":"2023-03-01"},{"lineNumber":106,"author":{"gitId":"de-yi"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":107,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":108,"author":{"gitId":"de-yi"},"content":"    public static void printFileCreatedComment(String fileName){","lastModifiedDate":"2023-03-01"},{"lineNumber":109,"author":{"gitId":"de-yi"},"content":"        System.out.println(\"[Duke] I created the file [\" + fileName + \"]\");","lastModifiedDate":"2023-03-01"},{"lineNumber":110,"author":{"gitId":"de-yi"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":111,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":112,"author":{"gitId":"de-yi"},"content":"    public static void printFileNotCreatedComment(){","lastModifiedDate":"2023-03-01"},{"lineNumber":113,"author":{"gitId":"de-yi"},"content":"        System.out.println(\"[Duke] I cannot create File:( Please try again.\");","lastModifiedDate":"2023-03-01"},{"lineNumber":114,"author":{"gitId":"de-yi"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":115,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":116,"author":{"gitId":"de-yi"},"content":"    public static void printSaveErrorComment(){","lastModifiedDate":"2023-03-01"},{"lineNumber":117,"author":{"gitId":"de-yi"},"content":"        System.out.println(\"[Duke] Something went wrong while saving...! Please try again.\");","lastModifiedDate":"2023-03-01"},{"lineNumber":118,"author":{"gitId":"de-yi"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":119,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":120,"author":{"gitId":"de-yi"},"content":"    public static void printFileLoadingErrorComment(){","lastModifiedDate":"2023-03-01"},{"lineNumber":121,"author":{"gitId":"de-yi"},"content":"        System.out.println(\"[Duke] Uh oh! I cannot load file :\u003c Please check again.\");","lastModifiedDate":"2023-03-01"},{"lineNumber":122,"author":{"gitId":"de-yi"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":123,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":124,"author":{"gitId":"de-yi"},"content":"    public static String getUserCommand(){","lastModifiedDate":"2023-03-01"},{"lineNumber":125,"author":{"gitId":"de-yi"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-03-01"},{"lineNumber":126,"author":{"gitId":"de-yi"},"content":"        System.out.print(\"[User] \");","lastModifiedDate":"2023-03-01"},{"lineNumber":127,"author":{"gitId":"de-yi"},"content":"        return scanner.nextLine();","lastModifiedDate":"2023-03-01"},{"lineNumber":128,"author":{"gitId":"de-yi"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":129,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":130,"author":{"gitId":"de-yi"},"content":"    public static void printDateFormatErrorComment(){","lastModifiedDate":"2023-03-02"},{"lineNumber":131,"author":{"gitId":"de-yi"},"content":"        System.out.println(\"[Duke] Uh oh! Check if your date format is correct [YYYY-MM-DD] :\u003c\");","lastModifiedDate":"2023-03-02"},{"lineNumber":132,"author":{"gitId":"de-yi"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":133,"author":{"gitId":"de-yi"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"de-yi":133}},{"path":"src/main/java/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"de-yi"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"de-yi"},"content":" * Represents a command to mark a task as undone.","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"de-yi"},"content":" * A \u003ccode\u003eUnmarkCommand\u003c/code\u003e object corresponds to a command with \"unmark\" type and an index of the target task.","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"de-yi"},"content":" * It prints \u003ccode\u003eUI.printInputErrorComment\u003c/code\u003e if the input does not have proper target task index.","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"de-yi"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"de-yi"},"content":"public class UnmarkCommand extends Command{","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"de-yi"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"de-yi"},"content":"    public UnmarkCommand(String userInput){","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"de-yi"},"content":"        super(\"unmark\");","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"de-yi"},"content":"        try{","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"de-yi"},"content":"            String originalInput \u003d userInput.replace(\"unmark\", \" \").trim();","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"de-yi"},"content":"            super.targetTaskIndex \u003d Integer.parseInt(originalInput);","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"de-yi"},"content":"        } catch(Exception e){","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"de-yi"},"content":"            UI.printInputErrorComment();","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"de-yi"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"de-yi"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"de-yi"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"de-yi":18}}]
