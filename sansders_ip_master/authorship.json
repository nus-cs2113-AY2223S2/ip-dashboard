[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"sansders"},"content":"# Duke User Guide","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"sansders"},"content":"By: `sansders` Last Updated: `February 2023`","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"sansders"},"content":"# Contents","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"sansders"},"content":"- [1. Introduction](#1-Introduction)","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"sansders"},"content":"- [2. Quick Start](#2-Quick-Start)","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"sansders"},"content":"- [3. Features](#3-Features)","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"sansders"},"content":"    - [3.1 Add To-do](#31-Add-To-do)","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"sansders"},"content":"    - [3.2 Add Deadline](#32-Add-Deadline)","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"sansders"},"content":"    - [3.3 Add Event](#33-Add-Event)","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"sansders"},"content":"    - [3.4 List all Tasks](#34-List-all-Tasks)","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"sansders"},"content":"    - [3.5 Mark Task as Done/Undone](#35-Mark-Task-as-Done/Undone)","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"sansders"},"content":"    - [3.6 Delete a Task](#36-Delete-a-Task)","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"sansders"},"content":"    - [3.7 Find a Task](#37-Find-a-Task)","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"sansders"},"content":"    - [3.8 Exit Duke](#38-Exit-Duke)","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"sansders"},"content":"    - [3.9 Task Storage](#39-Task-Storage)","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"sansders"},"content":"- [4. Command Summary](#4-Command-Summary)","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"sansders"},"content":"# 1. Introduction","lastModifiedDate":"2023-02-19"},{"lineNumber":20,"author":{"gitId":"sansders"},"content":"Duke, your personal bot,\u003cbr\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":21,"author":{"gitId":"sansders"},"content":"Second only to ChatGPT,\u003cbr\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":22,"author":{"gitId":"sansders"},"content":"Tracks your to-dos and deadlines a lot,\u003cbr\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"sansders"},"content":"Just like a journal, but electronically.","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"sansders"},"content":"With Duke by your side,\u003cbr\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"sansders"},"content":"Events are always on time,\u003cbr\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":27,"author":{"gitId":"sansders"},"content":"Tasks you no longer need to hide,\u003cbr\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":28,"author":{"gitId":"sansders"},"content":"Completed or not, Duke keeps them in line.","lastModifiedDate":"2023-02-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"sansders"},"content":"Minimal effort is all it takes,\u003cbr\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":31,"author":{"gitId":"sansders"},"content":"To keep your life organized and neat.\u003cbr\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":32,"author":{"gitId":"sansders"},"content":"No need to worry about missed dates,\u003cbr\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":33,"author":{"gitId":"sansders"},"content":"With Duke, everything is a treat.","lastModifiedDate":"2023-02-19"},{"lineNumber":34,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":35,"author":{"gitId":"sansders"},"content":"So why wait any longer?\u003cbr\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":36,"author":{"gitId":"sansders"},"content":"Install Duke today!\u003cbr\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":37,"author":{"gitId":"sansders"},"content":"Your life will be much stronger,\u003cbr\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":38,"author":{"gitId":"sansders"},"content":"And organized in every way!","lastModifiedDate":"2023-02-19"},{"lineNumber":39,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":40,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":41,"author":{"gitId":"sansders"},"content":"# 2. Quick Start","lastModifiedDate":"2023-02-19"},{"lineNumber":42,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":43,"author":{"gitId":"sansders"},"content":"1. Ensure that you have Java 11 installed on your computer. If you do not have Java 11 installed, you can do so [here](https://www.oracle.com/sg/java/technologies/downloads/#java11).","lastModifiedDate":"2023-02-19"},{"lineNumber":44,"author":{"gitId":"sansders"},"content":"1. Download the latest ip.jar from [here](https://github.com/sansders/ip/releases).","lastModifiedDate":"2023-02-19"},{"lineNumber":45,"author":{"gitId":"sansders"},"content":"1. Copy the file to the folder you wish to use as the home folder for the application.","lastModifiedDate":"2023-02-19"},{"lineNumber":46,"author":{"gitId":"sansders"},"content":"1. Open the command terminal and navigate to the folder where the jar file is.","lastModifiedDate":"2023-02-19"},{"lineNumber":47,"author":{"gitId":"sansders"},"content":"    1. If you do not know how, open file explorer and navigate to the application.","lastModifiedDate":"2023-02-19"},{"lineNumber":48,"author":{"gitId":"sansders"},"content":"    1. Then, right-click on the folder and select Properties","lastModifiedDate":"2023-02-19"},{"lineNumber":49,"author":{"gitId":"sansders"},"content":"    1. Under the General tab, copy the path listed as Location","lastModifiedDate":"2023-02-19"},{"lineNumber":50,"author":{"gitId":"sansders"},"content":"1. Then, open a command terminal by typing cmd in your start menu and launch the command terminal. ","lastModifiedDate":"2023-02-19"},{"lineNumber":51,"author":{"gitId":"sansders"},"content":"1. Access the folder via the command terminal, by doing cd FILEPATH. If you followed steps 4.i to 4.iii, you can paste the filepath which was previously copied.","lastModifiedDate":"2023-02-19"},{"lineNumber":52,"author":{"gitId":"sansders"},"content":"1. Use the command `java -jar ip.jar` to run the command. ","lastModifiedDate":"2023-02-19"},{"lineNumber":53,"author":{"gitId":"sansders"},"content":"1. To execute commands, enter the command with the necessary parameters, then press the Enter key. ","lastModifiedDate":"2023-02-19"},{"lineNumber":54,"author":{"gitId":"sansders"},"content":"1. To see more details, refer to the Features section.","lastModifiedDate":"2023-02-19"},{"lineNumber":55,"author":{"gitId":"sansders"},"content":"1. When you are done using the app, enter bye to shut down the application, instead of just closing it. Doing so allows the application to save the data.","lastModifiedDate":"2023-02-19"},{"lineNumber":56,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":57,"author":{"gitId":"sansders"},"content":"# 3. Features","lastModifiedDate":"2023-02-19"},{"lineNumber":58,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":59,"author":{"gitId":"sansders"},"content":"## 3.1 Add To-do","lastModifiedDate":"2023-02-19"},{"lineNumber":60,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":61,"author":{"gitId":"sansders"},"content":"This feature adds a todo task to the task list.","lastModifiedDate":"2023-02-19"},{"lineNumber":62,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":63,"author":{"gitId":"sansders"},"content":"Format: `todo \u003ctask description\u003e`","lastModifiedDate":"2023-02-19"},{"lineNumber":64,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":65,"author":{"gitId":"sansders"},"content":"Example: `todo read a book`","lastModifiedDate":"2023-02-19"},{"lineNumber":66,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":67,"author":{"gitId":"sansders"},"content":"Expected Output:","lastModifiedDate":"2023-02-19"},{"lineNumber":68,"author":{"gitId":"sansders"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":69,"author":{"gitId":"sansders"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-19"},{"lineNumber":70,"author":{"gitId":"sansders"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-02-19"},{"lineNumber":71,"author":{"gitId":"sansders"},"content":"[T][ ] do homework","lastModifiedDate":"2023-02-19"},{"lineNumber":72,"author":{"gitId":"sansders"},"content":"Now you have 1 task in the list.","lastModifiedDate":"2023-02-19"},{"lineNumber":73,"author":{"gitId":"sansders"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-19"},{"lineNumber":74,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":75,"author":{"gitId":"sansders"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":76,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":77,"author":{"gitId":"sansders"},"content":"## 3.2 Add Deadline","lastModifiedDate":"2023-02-19"},{"lineNumber":78,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":79,"author":{"gitId":"sansders"},"content":"This feature adds a deadline task to the task list.","lastModifiedDate":"2023-02-19"},{"lineNumber":80,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":81,"author":{"gitId":"sansders"},"content":"Format: `deadline \u003ctask description\u003e /by \u003cdeadline\u003e`","lastModifiedDate":"2023-02-19"},{"lineNumber":82,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":83,"author":{"gitId":"sansders"},"content":"Example: `deadline finish CS2113T report /by 2023-02-28 2359`","lastModifiedDate":"2023-02-19"},{"lineNumber":84,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":85,"author":{"gitId":"sansders"},"content":"Expected Output:","lastModifiedDate":"2023-02-19"},{"lineNumber":86,"author":{"gitId":"sansders"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":87,"author":{"gitId":"sansders"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-19"},{"lineNumber":88,"author":{"gitId":"sansders"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-02-19"},{"lineNumber":89,"author":{"gitId":"sansders"},"content":"[D][ ] finish CS2113T report (by: Feb 28 2023 2359)","lastModifiedDate":"2023-02-19"},{"lineNumber":90,"author":{"gitId":"sansders"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2023-02-19"},{"lineNumber":91,"author":{"gitId":"sansders"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-19"},{"lineNumber":92,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":93,"author":{"gitId":"sansders"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":94,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":95,"author":{"gitId":"sansders"},"content":"## 3.3 Add Event","lastModifiedDate":"2023-02-19"},{"lineNumber":96,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":97,"author":{"gitId":"sansders"},"content":"This feature adds an event task to the task list.","lastModifiedDate":"2023-02-19"},{"lineNumber":98,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":99,"author":{"gitId":"sansders"},"content":"Format: `event \u003ctask description\u003e /from \u003cfrom\u003e /to \u003cto\u003e`","lastModifiedDate":"2023-02-19"},{"lineNumber":100,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":101,"author":{"gitId":"sansders"},"content":"Example: `event CS2113T Finals /from 03 May 9am /to 11am`","lastModifiedDate":"2023-02-19"},{"lineNumber":102,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":103,"author":{"gitId":"sansders"},"content":"Expected Output:","lastModifiedDate":"2023-02-19"},{"lineNumber":104,"author":{"gitId":"sansders"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":105,"author":{"gitId":"sansders"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-19"},{"lineNumber":106,"author":{"gitId":"sansders"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-02-19"},{"lineNumber":107,"author":{"gitId":"sansders"},"content":"[E][ ] CS2113T Finals (from: 03 May 9am to: 11am)","lastModifiedDate":"2023-02-19"},{"lineNumber":108,"author":{"gitId":"sansders"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2023-02-19"},{"lineNumber":109,"author":{"gitId":"sansders"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-19"},{"lineNumber":110,"author":{"gitId":"sansders"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":111,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":112,"author":{"gitId":"sansders"},"content":"## 3.4 List all Tasks","lastModifiedDate":"2023-02-19"},{"lineNumber":113,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":114,"author":{"gitId":"sansders"},"content":"This feature allows you to look at all the tasks.","lastModifiedDate":"2023-02-19"},{"lineNumber":115,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":116,"author":{"gitId":"sansders"},"content":"Format: `list`","lastModifiedDate":"2023-02-19"},{"lineNumber":117,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":118,"author":{"gitId":"sansders"},"content":"Expected Output:","lastModifiedDate":"2023-02-19"},{"lineNumber":119,"author":{"gitId":"sansders"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":120,"author":{"gitId":"sansders"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-19"},{"lineNumber":121,"author":{"gitId":"sansders"},"content":"1.[T][ ] read a book","lastModifiedDate":"2023-02-19"},{"lineNumber":122,"author":{"gitId":"sansders"},"content":"2.[D][ ] finish CS2113T report (by: Feb 28 2023 2359)","lastModifiedDate":"2023-02-19"},{"lineNumber":123,"author":{"gitId":"sansders"},"content":"3.[E][ ] CS2113T Finals (from: 03 May 9am to: 11am)","lastModifiedDate":"2023-02-19"},{"lineNumber":124,"author":{"gitId":"sansders"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-19"},{"lineNumber":125,"author":{"gitId":"sansders"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":126,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":127,"author":{"gitId":"sansders"},"content":"## 3.5 Mark Task as Done/Undone","lastModifiedDate":"2023-02-19"},{"lineNumber":128,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":129,"author":{"gitId":"sansders"},"content":"This feature allows you to keep track of what tasks in your list you have already completed.","lastModifiedDate":"2023-02-19"},{"lineNumber":130,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":131,"author":{"gitId":"sansders"},"content":"You must first obtain the index of the specific task from using the `list` command to use this command.","lastModifiedDate":"2023-02-19"},{"lineNumber":132,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":133,"author":{"gitId":"sansders"},"content":"If you mark a task as done by accident, you may unmark it at any point of time by entering `unmark` instead.","lastModifiedDate":"2023-02-19"},{"lineNumber":134,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":135,"author":{"gitId":"sansders"},"content":"Format: `mark \u003ctask index\u003e` or `unmark \u003ctask index\u003e`","lastModifiedDate":"2023-02-19"},{"lineNumber":136,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":137,"author":{"gitId":"sansders"},"content":"Example: `mark 2`","lastModifiedDate":"2023-02-19"},{"lineNumber":138,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":139,"author":{"gitId":"sansders"},"content":"Expected Output:","lastModifiedDate":"2023-02-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"},{"lineNumber":141,"author":{"gitId":"sansders"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-19"},{"lineNumber":142,"author":{"gitId":"sansders"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2023-02-19"},{"lineNumber":143,"author":{"gitId":"sansders"},"content":"[D][X] finish CS2113T report (by: Feb 28 2023 2359)","lastModifiedDate":"2023-02-19"},{"lineNumber":144,"author":{"gitId":"sansders"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"},{"lineNumber":146,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":147,"author":{"gitId":"sansders"},"content":"## 3.6 Delete a Task","lastModifiedDate":"2023-02-19"},{"lineNumber":148,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":149,"author":{"gitId":"sansders"},"content":"You may choose to delete a task from the list of tasks at any point of time, regardless of whether they are marked as done or not.","lastModifiedDate":"2023-02-19"},{"lineNumber":150,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":151,"author":{"gitId":"sansders"},"content":"Similar to the `mark` and `unmark` commands, you must first get the index of the task you wish to delete by using the `list` command.","lastModifiedDate":"2023-02-19"},{"lineNumber":152,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":153,"author":{"gitId":"sansders"},"content":"Format: `delete \u003ctask index\u003e`","lastModifiedDate":"2023-02-19"},{"lineNumber":154,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":155,"author":{"gitId":"sansders"},"content":"Example: `delete 2`","lastModifiedDate":"2023-02-19"},{"lineNumber":156,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":157,"author":{"gitId":"sansders"},"content":"Expected Output:","lastModifiedDate":"2023-02-19"},{"lineNumber":158,"author":{"gitId":"sansders"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":159,"author":{"gitId":"sansders"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-19"},{"lineNumber":160,"author":{"gitId":"sansders"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2023-02-19"},{"lineNumber":161,"author":{"gitId":"sansders"},"content":"2.[D][X] finish CS2113T report (by: Feb 28 2023 2359)","lastModifiedDate":"2023-02-19"},{"lineNumber":162,"author":{"gitId":"sansders"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2023-02-19"},{"lineNumber":163,"author":{"gitId":"sansders"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-19"},{"lineNumber":164,"author":{"gitId":"sansders"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":165,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":166,"author":{"gitId":"sansders"},"content":"## 3.7 Find a Task","lastModifiedDate":"2023-02-19"},{"lineNumber":167,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":168,"author":{"gitId":"sansders"},"content":"You may find out whether or not a Task exists in your list of tasks by entering a keyword.","lastModifiedDate":"2023-02-19"},{"lineNumber":169,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":170,"author":{"gitId":"sansders"},"content":"Format: `find \u003ckeyword\u003e`","lastModifiedDate":"2023-02-19"},{"lineNumber":171,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":172,"author":{"gitId":"sansders"},"content":"Example: `find Finals`","lastModifiedDate":"2023-02-19"},{"lineNumber":173,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":174,"author":{"gitId":"sansders"},"content":"Expected Output: ","lastModifiedDate":"2023-02-19"},{"lineNumber":175,"author":{"gitId":"sansders"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":176,"author":{"gitId":"sansders"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-19"},{"lineNumber":177,"author":{"gitId":"sansders"},"content":"Here are matching tasks in your list:","lastModifiedDate":"2023-02-19"},{"lineNumber":178,"author":{"gitId":"sansders"},"content":"- [E][ ] CS2113T Finals (from: 03 May 9am to: 11am)","lastModifiedDate":"2023-02-19"},{"lineNumber":179,"author":{"gitId":"sansders"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-19"},{"lineNumber":180,"author":{"gitId":"sansders"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":181,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":182,"author":{"gitId":"sansders"},"content":"## 3.8 Exit Duke","lastModifiedDate":"2023-02-19"},{"lineNumber":183,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":184,"author":{"gitId":"sansders"},"content":"When you are done with using Duke, you may safely exit the application by bidding Duke farewell.","lastModifiedDate":"2023-02-19"},{"lineNumber":185,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":186,"author":{"gitId":"sansders"},"content":"Format: `bye`","lastModifiedDate":"2023-02-19"},{"lineNumber":187,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":188,"author":{"gitId":"sansders"},"content":"Expected Output:","lastModifiedDate":"2023-02-19"},{"lineNumber":189,"author":{"gitId":"sansders"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":190,"author":{"gitId":"sansders"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-19"},{"lineNumber":191,"author":{"gitId":"sansders"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2023-02-19"},{"lineNumber":192,"author":{"gitId":"sansders"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-19"},{"lineNumber":193,"author":{"gitId":"sansders"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":194,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":195,"author":{"gitId":"sansders"},"content":"## 3.9 Task Storage","lastModifiedDate":"2023-02-19"},{"lineNumber":196,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":197,"author":{"gitId":"sansders"},"content":"When you first run Duke, a save file will not exist. ","lastModifiedDate":"2023-02-19"},{"lineNumber":198,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":199,"author":{"gitId":"sansders"},"content":"Upon adding a new Task, Duke then creates and writes to a save file `tasks.txt`. ","lastModifiedDate":"2023-02-19"},{"lineNumber":200,"author":{"gitId":"sansders"},"content":"Please **do not** delete the file unless you wish to intentionally delete your save data.","lastModifiedDate":"2023-02-19"},{"lineNumber":201,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":202,"author":{"gitId":"sansders"},"content":"Expected output (on first run):","lastModifiedDate":"2023-02-19"},{"lineNumber":203,"author":{"gitId":"sansders"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":204,"author":{"gitId":"sansders"},"content":"Save file does not exist.","lastModifiedDate":"2023-02-19"},{"lineNumber":205,"author":{"gitId":"sansders"},"content":"Creating new save file...","lastModifiedDate":"2023-02-19"},{"lineNumber":206,"author":{"gitId":"sansders"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-19"},{"lineNumber":207,"author":{"gitId":"sansders"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":208,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":209,"author":{"gitId":"sansders"},"content":"Expected output (on subsequent runs):","lastModifiedDate":"2023-02-19"},{"lineNumber":210,"author":{"gitId":"sansders"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":211,"author":{"gitId":"sansders"},"content":"Save file found.","lastModifiedDate":"2023-02-19"},{"lineNumber":212,"author":{"gitId":"sansders"},"content":"Loading save file...","lastModifiedDate":"2023-02-19"},{"lineNumber":213,"author":{"gitId":"sansders"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-19"},{"lineNumber":214,"author":{"gitId":"sansders"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":215,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":216,"author":{"gitId":"sansders"},"content":"## 4. Command Summary","lastModifiedDate":"2023-02-19"},{"lineNumber":217,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":218,"author":{"gitId":"sansders"},"content":"Command     | Format                                           | Example","lastModifiedDate":"2023-02-19"},{"lineNumber":219,"author":{"gitId":"sansders"},"content":"------------|--------------------------------------------------|----------------","lastModifiedDate":"2023-02-19"},{"lineNumber":220,"author":{"gitId":"sansders"},"content":"todo        | `todo \u003ctask description\u003e`                        | `todo homework`","lastModifiedDate":"2023-02-19"},{"lineNumber":221,"author":{"gitId":"sansders"},"content":"deadline    |`deadline \u003ctask description\u003e /by \u003cdeadline\u003e`      | `deadline finish CS2113T report /by 2023-02-28 2359 `","lastModifiedDate":"2023-02-19"},{"lineNumber":222,"author":{"gitId":"sansders"},"content":"event       | `event \u003ctask description\u003e /from \u003cfrom\u003e /to \u003cto\u003e` | `event CS2113T Finals /from 03 May 9am /to 11am`","lastModifiedDate":"2023-02-19"},{"lineNumber":223,"author":{"gitId":"sansders"},"content":"list        | `list`                                           | `list`","lastModifiedDate":"2023-02-19"},{"lineNumber":224,"author":{"gitId":"sansders"},"content":"mark        | `mark \u003ctask index\u003e`                              | `mark 2`","lastModifiedDate":"2023-02-19"},{"lineNumber":225,"author":{"gitId":"sansders"},"content":"unmark      | `unmark \u003ctask index\u003e`                            | `unmark 2`","lastModifiedDate":"2023-02-19"},{"lineNumber":226,"author":{"gitId":"sansders"},"content":"delete      | `delete \u003ctask index\u003e`                            | `delete 2`","lastModifiedDate":"2023-02-19"},{"lineNumber":227,"author":{"gitId":"sansders"},"content":"find        | `find \u003ctask substring\u003e`                          | `find homework`","lastModifiedDate":"2023-02-19"},{"lineNumber":228,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":229,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":230,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":231,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":232,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":233,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":234,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":235,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":236,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"sansders":230,"-":6}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"sansders"},"content":"# Duke User Guide","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"sansders"},"content":"By: `sansders` Last Updated: `February 2023`","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"sansders"},"content":"# Contents","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"sansders"},"content":"- [1. Introduction](#1-Introduction)","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"sansders"},"content":"- [2. Quick Start](#2-Quick-Start)","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"sansders"},"content":"- [3. Features](#3-Features)","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"sansders"},"content":"    - [3.1 Add To-do](#31-Add-To-do)","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"sansders"},"content":"    - [3.2 Add Deadline](#32-Add-Deadline)","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"sansders"},"content":"    - [3.3 Add Event](#33-Add-Event)","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"sansders"},"content":"    - [3.4 List all Tasks](#34-List-all-Tasks)","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"sansders"},"content":"    - [3.5 Mark Task as Done/Undone](#35-Mark-Task-as-Done/Undone)","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"sansders"},"content":"    - [3.6 Delete a Task](#36-Delete-a-Task)","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"sansders"},"content":"    - [3.7 Find a Task](#37-Find-a-Task)","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"sansders"},"content":"    - [3.8 Exit Duke](#38-Exit-Duke)","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"sansders"},"content":"    - [3.9 Task Storage](#39-Task-Storage)","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"sansders"},"content":"- [4. Command Summary](#4-Command-Summary)","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"sansders"},"content":"# 1. Introduction","lastModifiedDate":"2023-02-19"},{"lineNumber":20,"author":{"gitId":"sansders"},"content":"Duke, your personal bot,\u003cbr\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":21,"author":{"gitId":"sansders"},"content":"Second only to ChatGPT,\u003cbr\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":22,"author":{"gitId":"sansders"},"content":"Tracks your to-dos and deadlines a lot,\u003cbr\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"sansders"},"content":"Just like a journal, but electronically.","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":25,"author":{"gitId":"sansders"},"content":"With Duke by your side,\u003cbr\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"sansders"},"content":"Events are always on time,\u003cbr\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":27,"author":{"gitId":"sansders"},"content":"Tasks you no longer need to hide,\u003cbr\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":28,"author":{"gitId":"sansders"},"content":"Completed or not, Duke keeps them in line.","lastModifiedDate":"2023-02-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":30,"author":{"gitId":"sansders"},"content":"Minimal effort is all it takes,\u003cbr\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":31,"author":{"gitId":"sansders"},"content":"To keep your life organized and neat.\u003cbr\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":32,"author":{"gitId":"sansders"},"content":"No need to worry about missed dates,\u003cbr\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":33,"author":{"gitId":"sansders"},"content":"With Duke, everything is a treat.","lastModifiedDate":"2023-02-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":35,"author":{"gitId":"sansders"},"content":"So why wait any longer?\u003cbr\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":36,"author":{"gitId":"sansders"},"content":"Install Duke today!\u003cbr\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":37,"author":{"gitId":"sansders"},"content":"Your life will be much stronger,\u003cbr\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":38,"author":{"gitId":"sansders"},"content":"And organized in every way!","lastModifiedDate":"2023-02-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":41,"author":{"gitId":"sansders"},"content":"# 2. Quick Start","lastModifiedDate":"2023-02-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":43,"author":{"gitId":"sansders"},"content":"1. Ensure that you have Java 11 installed on your computer. If you do not have Java 11 installed, you can do so [here](https://www.oracle.com/sg/java/technologies/downloads/#java11).","lastModifiedDate":"2023-02-19"},{"lineNumber":44,"author":{"gitId":"sansders"},"content":"1. Download the latest ip.jar from [here](https://github.com/sansders/ip/releases).","lastModifiedDate":"2023-02-19"},{"lineNumber":45,"author":{"gitId":"sansders"},"content":"1. Copy the file to the folder you wish to use as the home folder for the application.","lastModifiedDate":"2023-02-19"},{"lineNumber":46,"author":{"gitId":"sansders"},"content":"1. Open the command terminal and navigate to the folder where the jar file is.","lastModifiedDate":"2023-02-19"},{"lineNumber":47,"author":{"gitId":"sansders"},"content":"    1. If you do not know how, open file explorer and navigate to the application.","lastModifiedDate":"2023-02-19"},{"lineNumber":48,"author":{"gitId":"sansders"},"content":"    1. Then, right-click on the folder and select Properties","lastModifiedDate":"2023-02-19"},{"lineNumber":49,"author":{"gitId":"sansders"},"content":"    1. Under the General tab, copy the path listed as Location","lastModifiedDate":"2023-02-19"},{"lineNumber":50,"author":{"gitId":"sansders"},"content":"1. Then, open a command terminal by typing cmd in your start menu and launch the command terminal. ","lastModifiedDate":"2023-02-19"},{"lineNumber":51,"author":{"gitId":"sansders"},"content":"1. Access the folder via the command terminal, by doing cd FILEPATH. If you followed steps 4.i to 4.iii, you can paste the filepath which was previously copied.","lastModifiedDate":"2023-02-19"},{"lineNumber":52,"author":{"gitId":"sansders"},"content":"1. Use the command `java -jar ip.jar` to run the command. ","lastModifiedDate":"2023-02-19"},{"lineNumber":53,"author":{"gitId":"sansders"},"content":"1. To execute commands, enter the command with the necessary parameters, then press the Enter key. ","lastModifiedDate":"2023-02-19"},{"lineNumber":54,"author":{"gitId":"sansders"},"content":"1. To see more details, refer to the Features section.","lastModifiedDate":"2023-02-19"},{"lineNumber":55,"author":{"gitId":"sansders"},"content":"1. When you are done using the app, enter bye to shut down the application, instead of just closing it. Doing so allows the application to save the data.","lastModifiedDate":"2023-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":57,"author":{"gitId":"sansders"},"content":"# 3. Features","lastModifiedDate":"2023-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":59,"author":{"gitId":"sansders"},"content":"## 3.1 Add To-do","lastModifiedDate":"2023-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":61,"author":{"gitId":"sansders"},"content":"This feature adds a todo task to the task list.","lastModifiedDate":"2023-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":63,"author":{"gitId":"sansders"},"content":"Format: `todo \u003ctask description\u003e`","lastModifiedDate":"2023-02-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":65,"author":{"gitId":"sansders"},"content":"Example: `todo read a book`","lastModifiedDate":"2023-02-19"},{"lineNumber":66,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":67,"author":{"gitId":"sansders"},"content":"Expected Output:","lastModifiedDate":"2023-02-19"},{"lineNumber":68,"author":{"gitId":"sansders"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":69,"author":{"gitId":"sansders"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-19"},{"lineNumber":70,"author":{"gitId":"sansders"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-02-19"},{"lineNumber":71,"author":{"gitId":"sansders"},"content":"[T][ ] do homework","lastModifiedDate":"2023-02-19"},{"lineNumber":72,"author":{"gitId":"sansders"},"content":"Now you have 1 task in the list.","lastModifiedDate":"2023-02-19"},{"lineNumber":73,"author":{"gitId":"sansders"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-19"},{"lineNumber":74,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":75,"author":{"gitId":"sansders"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":76,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":77,"author":{"gitId":"sansders"},"content":"## 3.2 Add Deadline","lastModifiedDate":"2023-02-19"},{"lineNumber":78,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":79,"author":{"gitId":"sansders"},"content":"This feature adds a deadline task to the task list.","lastModifiedDate":"2023-02-19"},{"lineNumber":80,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":81,"author":{"gitId":"sansders"},"content":"Format: `deadline \u003ctask description\u003e /by \u003cdeadline\u003e`","lastModifiedDate":"2023-02-19"},{"lineNumber":82,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":83,"author":{"gitId":"sansders"},"content":"Example: `deadline finish CS2113T report /by 2023-02-28 2359`","lastModifiedDate":"2023-02-19"},{"lineNumber":84,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":85,"author":{"gitId":"sansders"},"content":"Expected Output:","lastModifiedDate":"2023-02-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":87,"author":{"gitId":"sansders"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-19"},{"lineNumber":88,"author":{"gitId":"sansders"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-02-19"},{"lineNumber":89,"author":{"gitId":"sansders"},"content":"[D][ ] finish CS2113T report (by: Feb 28 2023 2359)","lastModifiedDate":"2023-02-19"},{"lineNumber":90,"author":{"gitId":"sansders"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2023-02-19"},{"lineNumber":91,"author":{"gitId":"sansders"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-19"},{"lineNumber":92,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":94,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":95,"author":{"gitId":"sansders"},"content":"## 3.3 Add Event","lastModifiedDate":"2023-02-19"},{"lineNumber":96,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":97,"author":{"gitId":"sansders"},"content":"This feature adds an event task to the task list.","lastModifiedDate":"2023-02-19"},{"lineNumber":98,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":99,"author":{"gitId":"sansders"},"content":"Format: `event \u003ctask description\u003e /from \u003cfrom\u003e /to \u003cto\u003e`","lastModifiedDate":"2023-02-19"},{"lineNumber":100,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":101,"author":{"gitId":"sansders"},"content":"Example: `event CS2113T Finals /from 03 May 9am /to 11am`","lastModifiedDate":"2023-02-19"},{"lineNumber":102,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":103,"author":{"gitId":"sansders"},"content":"Expected Output:","lastModifiedDate":"2023-02-19"},{"lineNumber":104,"author":{"gitId":"sansders"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":105,"author":{"gitId":"sansders"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-19"},{"lineNumber":106,"author":{"gitId":"sansders"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-02-19"},{"lineNumber":107,"author":{"gitId":"sansders"},"content":"[E][ ] CS2113T Finals (from: 03 May 9am to: 11am)","lastModifiedDate":"2023-02-19"},{"lineNumber":108,"author":{"gitId":"sansders"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2023-02-19"},{"lineNumber":109,"author":{"gitId":"sansders"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-19"},{"lineNumber":110,"author":{"gitId":"sansders"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":111,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":112,"author":{"gitId":"sansders"},"content":"## 3.4 List all Tasks","lastModifiedDate":"2023-02-19"},{"lineNumber":113,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":114,"author":{"gitId":"sansders"},"content":"This feature allows you to look at all the tasks.","lastModifiedDate":"2023-02-19"},{"lineNumber":115,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":116,"author":{"gitId":"sansders"},"content":"Format: `list`","lastModifiedDate":"2023-02-19"},{"lineNumber":117,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":118,"author":{"gitId":"sansders"},"content":"Expected Output:","lastModifiedDate":"2023-02-19"},{"lineNumber":119,"author":{"gitId":"sansders"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":120,"author":{"gitId":"sansders"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-19"},{"lineNumber":121,"author":{"gitId":"sansders"},"content":"1.[T][ ] read a book","lastModifiedDate":"2023-02-19"},{"lineNumber":122,"author":{"gitId":"sansders"},"content":"2.[D][ ] finish CS2113T report (by: Feb 28 2023 2359)","lastModifiedDate":"2023-02-19"},{"lineNumber":123,"author":{"gitId":"sansders"},"content":"3.[E][ ] CS2113T Finals (from: 03 May 9am to: 11am)","lastModifiedDate":"2023-02-19"},{"lineNumber":124,"author":{"gitId":"sansders"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-19"},{"lineNumber":125,"author":{"gitId":"sansders"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":126,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":127,"author":{"gitId":"sansders"},"content":"## 3.5 Mark Task as Done/Undone","lastModifiedDate":"2023-02-19"},{"lineNumber":128,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":129,"author":{"gitId":"sansders"},"content":"This feature allows you to keep track of what tasks in your list you have already completed.","lastModifiedDate":"2023-02-19"},{"lineNumber":130,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":131,"author":{"gitId":"sansders"},"content":"You must first obtain the index of the specific task from using the `list` command to use this command.","lastModifiedDate":"2023-02-19"},{"lineNumber":132,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":133,"author":{"gitId":"sansders"},"content":"If you mark a task as done by accident, you may unmark it at any point of time by entering `unmark` instead.","lastModifiedDate":"2023-02-19"},{"lineNumber":134,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":135,"author":{"gitId":"sansders"},"content":"Format: `mark \u003ctask index\u003e` or `unmark \u003ctask index\u003e`","lastModifiedDate":"2023-02-19"},{"lineNumber":136,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":137,"author":{"gitId":"sansders"},"content":"Example: `mark 2`","lastModifiedDate":"2023-02-19"},{"lineNumber":138,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":139,"author":{"gitId":"sansders"},"content":"Expected Output:","lastModifiedDate":"2023-02-19"},{"lineNumber":140,"author":{"gitId":"sansders"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":141,"author":{"gitId":"sansders"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-19"},{"lineNumber":142,"author":{"gitId":"sansders"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2023-02-19"},{"lineNumber":143,"author":{"gitId":"sansders"},"content":"[D][X] finish CS2113T report (by: Feb 28 2023 2359)","lastModifiedDate":"2023-02-19"},{"lineNumber":144,"author":{"gitId":"sansders"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-19"},{"lineNumber":145,"author":{"gitId":"sansders"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":146,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":147,"author":{"gitId":"sansders"},"content":"## 3.6 Delete a Task","lastModifiedDate":"2023-02-19"},{"lineNumber":148,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":149,"author":{"gitId":"sansders"},"content":"You may choose to delete a task from the list of tasks at any point of time, regardless of whether they are marked as done or not.","lastModifiedDate":"2023-02-19"},{"lineNumber":150,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":151,"author":{"gitId":"sansders"},"content":"Similar to the `mark` and `unmark` commands, you must first get the index of the task you wish to delete by using the `list` command.","lastModifiedDate":"2023-02-19"},{"lineNumber":152,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":153,"author":{"gitId":"sansders"},"content":"Format: `delete \u003ctask index\u003e`","lastModifiedDate":"2023-02-19"},{"lineNumber":154,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":155,"author":{"gitId":"sansders"},"content":"Example: `delete 2`","lastModifiedDate":"2023-02-19"},{"lineNumber":156,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":157,"author":{"gitId":"sansders"},"content":"Expected Output:","lastModifiedDate":"2023-02-19"},{"lineNumber":158,"author":{"gitId":"sansders"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":159,"author":{"gitId":"sansders"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-19"},{"lineNumber":160,"author":{"gitId":"sansders"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2023-02-19"},{"lineNumber":161,"author":{"gitId":"sansders"},"content":"2.[D][X] finish CS2113T report (by: Feb 28 2023 2359)","lastModifiedDate":"2023-02-19"},{"lineNumber":162,"author":{"gitId":"sansders"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2023-02-19"},{"lineNumber":163,"author":{"gitId":"sansders"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-19"},{"lineNumber":164,"author":{"gitId":"sansders"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":165,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":166,"author":{"gitId":"sansders"},"content":"## 3.7 Find a Task","lastModifiedDate":"2023-02-19"},{"lineNumber":167,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":168,"author":{"gitId":"sansders"},"content":"You may find out whether or not a Task exists in your list of tasks by entering a keyword.","lastModifiedDate":"2023-02-19"},{"lineNumber":169,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":170,"author":{"gitId":"sansders"},"content":"Format: `find \u003ckeyword\u003e`","lastModifiedDate":"2023-02-19"},{"lineNumber":171,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":172,"author":{"gitId":"sansders"},"content":"Example: `find Finals`","lastModifiedDate":"2023-02-19"},{"lineNumber":173,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":174,"author":{"gitId":"sansders"},"content":"Expected Output: ","lastModifiedDate":"2023-02-19"},{"lineNumber":175,"author":{"gitId":"sansders"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":176,"author":{"gitId":"sansders"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-19"},{"lineNumber":177,"author":{"gitId":"sansders"},"content":"Here are matching tasks in your list:","lastModifiedDate":"2023-02-19"},{"lineNumber":178,"author":{"gitId":"sansders"},"content":"- [E][ ] CS2113T Finals (from: 03 May 9am to: 11am)","lastModifiedDate":"2023-02-19"},{"lineNumber":179,"author":{"gitId":"sansders"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-19"},{"lineNumber":180,"author":{"gitId":"sansders"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":181,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":182,"author":{"gitId":"sansders"},"content":"## 3.8 Exit Duke","lastModifiedDate":"2023-02-19"},{"lineNumber":183,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":184,"author":{"gitId":"sansders"},"content":"When you are done with using Duke, you may safely exit the application by bidding Duke farewell.","lastModifiedDate":"2023-02-19"},{"lineNumber":185,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":186,"author":{"gitId":"sansders"},"content":"Format: `bye`","lastModifiedDate":"2023-02-19"},{"lineNumber":187,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":188,"author":{"gitId":"sansders"},"content":"Expected Output:","lastModifiedDate":"2023-02-19"},{"lineNumber":189,"author":{"gitId":"sansders"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":190,"author":{"gitId":"sansders"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-19"},{"lineNumber":191,"author":{"gitId":"sansders"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2023-02-19"},{"lineNumber":192,"author":{"gitId":"sansders"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-19"},{"lineNumber":193,"author":{"gitId":"sansders"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":194,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":195,"author":{"gitId":"sansders"},"content":"## 3.9 Task Storage","lastModifiedDate":"2023-02-19"},{"lineNumber":196,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":197,"author":{"gitId":"sansders"},"content":"When you first run Duke, a save file will not exist. ","lastModifiedDate":"2023-02-19"},{"lineNumber":198,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":199,"author":{"gitId":"sansders"},"content":"Upon adding a new Task, Duke then creates and writes to a save file `tasks.txt`. ","lastModifiedDate":"2023-02-19"},{"lineNumber":200,"author":{"gitId":"sansders"},"content":"Please **do not** delete the file unless you wish to intentionally delete your save data.","lastModifiedDate":"2023-02-19"},{"lineNumber":201,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":202,"author":{"gitId":"sansders"},"content":"Expected output (on first run):","lastModifiedDate":"2023-02-19"},{"lineNumber":203,"author":{"gitId":"sansders"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":204,"author":{"gitId":"sansders"},"content":"Save file does not exist.","lastModifiedDate":"2023-02-19"},{"lineNumber":205,"author":{"gitId":"sansders"},"content":"Creating new save file...","lastModifiedDate":"2023-02-19"},{"lineNumber":206,"author":{"gitId":"sansders"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-19"},{"lineNumber":207,"author":{"gitId":"sansders"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":208,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":209,"author":{"gitId":"sansders"},"content":"Expected output (on subsequent runs):","lastModifiedDate":"2023-02-19"},{"lineNumber":210,"author":{"gitId":"sansders"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":211,"author":{"gitId":"sansders"},"content":"Save file found.","lastModifiedDate":"2023-02-19"},{"lineNumber":212,"author":{"gitId":"sansders"},"content":"Loading save file...","lastModifiedDate":"2023-02-19"},{"lineNumber":213,"author":{"gitId":"sansders"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-19"},{"lineNumber":214,"author":{"gitId":"sansders"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":215,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":216,"author":{"gitId":"sansders"},"content":"## 4. Command Summary","lastModifiedDate":"2023-02-19"},{"lineNumber":217,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":218,"author":{"gitId":"sansders"},"content":"Command     | Format                                           | Example","lastModifiedDate":"2023-02-19"},{"lineNumber":219,"author":{"gitId":"sansders"},"content":"------------|--------------------------------------------------|----------------","lastModifiedDate":"2023-02-19"},{"lineNumber":220,"author":{"gitId":"sansders"},"content":"todo        | `todo \u003ctask description\u003e`                        | `todo homework`","lastModifiedDate":"2023-02-19"},{"lineNumber":221,"author":{"gitId":"sansders"},"content":"deadline    |`deadline \u003ctask description\u003e /by \u003cdeadline\u003e`      | `deadline finish CS2113T report /by 2023-02-28 2359 `","lastModifiedDate":"2023-02-19"},{"lineNumber":222,"author":{"gitId":"sansders"},"content":"event       | `event \u003ctask description\u003e /from \u003cfrom\u003e /to \u003cto\u003e` | `event CS2113T Finals /from 03 May 9am /to 11am`","lastModifiedDate":"2023-02-19"},{"lineNumber":223,"author":{"gitId":"sansders"},"content":"list        | `list`                                           | `list`","lastModifiedDate":"2023-02-19"},{"lineNumber":224,"author":{"gitId":"sansders"},"content":"mark        | `mark \u003ctask index\u003e`                              | `mark 2`","lastModifiedDate":"2023-02-19"},{"lineNumber":225,"author":{"gitId":"sansders"},"content":"unmark      | `unmark \u003ctask index\u003e`                            | `unmark 2`","lastModifiedDate":"2023-02-19"},{"lineNumber":226,"author":{"gitId":"sansders"},"content":"delete      | `delete \u003ctask index\u003e`                            | `delete 2`","lastModifiedDate":"2023-02-19"},{"lineNumber":227,"author":{"gitId":"sansders"},"content":"find        | `find \u003ctask substring\u003e`                          | `find homework`","lastModifiedDate":"2023-02-19"},{"lineNumber":228,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":229,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":230,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":231,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":232,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":233,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":234,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":235,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":236,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"sansders":221,"-":15}},{"path":"src/main/java/duke/CommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sansders"},"content":"package duke;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":3,"author":{"gitId":"sansders"},"content":"import error.DukeIllegalCharacterException;","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"sansders"},"content":"import error.DukeTaskDoesNotExistException;","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"sansders"},"content":"import error.DukeIllegalSyntaxException;","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"sansders"},"content":"import error.DukeAlreadyMarkedException;","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"sansders"},"content":"import error.DukeIllegalCommandException;","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"sansders"},"content":"import task.Deadline;","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"sansders"},"content":"import task.Event;","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"sansders"},"content":"import task.Task;","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"sansders"},"content":"import task.Todo;","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"sansders"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"sansders"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"sansders"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"sansders"},"content":"/**","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"sansders"},"content":" * Contains the methods responsible for managing the different types of inputs to Duke.","lastModifiedDate":"2023-02-19"},{"lineNumber":20,"author":{"gitId":"sansders"},"content":" */","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"sansders"},"content":"public class CommandParser {","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"sansders"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"sansders"},"content":"     * Manages the input entered by the user.","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"sansders"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"sansders"},"content":"     * @param userInput The entire String entered by the user.","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"sansders"},"content":"     * @param command   The first word of the userInput.","lastModifiedDate":"2023-02-18"},{"lineNumber":29,"author":{"gitId":"sansders"},"content":"     * @param tasks     The ArrayList of Tasks contained in tasks.txt.","lastModifiedDate":"2023-02-18"},{"lineNumber":30,"author":{"gitId":"sansders"},"content":"     * @throws DukeIllegalCharacterException If userInput contains `|`.","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"sansders"},"content":"     * @throws DukeTaskDoesNotExistException If the specified Task does not exist.","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"sansders"},"content":"     * @throws DukeAlreadyMarkedException    If the task is already marked or unmarked.","lastModifiedDate":"2023-02-18"},{"lineNumber":33,"author":{"gitId":"sansders"},"content":"     * @throws DukeIllegalSyntaxException    If the userInput does not conform to the required syntax.","lastModifiedDate":"2023-02-18"},{"lineNumber":34,"author":{"gitId":"sansders"},"content":"     * @throws DukeIllegalCommandException   If the userInput contains an illegal command.","lastModifiedDate":"2023-02-18"},{"lineNumber":35,"author":{"gitId":"sansders"},"content":"     * @throws IOException                   If tasks.txt cannot be read or written to.","lastModifiedDate":"2023-02-18"},{"lineNumber":36,"author":{"gitId":"sansders"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":37,"author":{"gitId":"sansders"},"content":"    public void manageInput(String userInput, String command, ArrayList\u003cTask\u003e tasks)","lastModifiedDate":"2023-02-18"},{"lineNumber":38,"author":{"gitId":"sansders"},"content":"            throws DukeIllegalCharacterException, DukeTaskDoesNotExistException,","lastModifiedDate":"2023-02-18"},{"lineNumber":39,"author":{"gitId":"sansders"},"content":"            DukeAlreadyMarkedException, DukeIllegalSyntaxException,","lastModifiedDate":"2023-02-18"},{"lineNumber":40,"author":{"gitId":"sansders"},"content":"            DukeIllegalCommandException, IOException {","lastModifiedDate":"2023-02-18"},{"lineNumber":41,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":42,"author":{"gitId":"sansders"},"content":"        PrintOperations.horizontalLine();","lastModifiedDate":"2023-02-18"},{"lineNumber":43,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":44,"author":{"gitId":"sansders"},"content":"        if (userInput.contains(\"|\")) {","lastModifiedDate":"2023-02-18"},{"lineNumber":45,"author":{"gitId":"sansders"},"content":"            throw new DukeIllegalCharacterException();","lastModifiedDate":"2023-02-18"},{"lineNumber":46,"author":{"gitId":"sansders"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":47,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":48,"author":{"gitId":"sansders"},"content":"        String[] splitInput \u003d userInput.split(\"\\\\s+\");","lastModifiedDate":"2023-02-18"},{"lineNumber":49,"author":{"gitId":"sansders"},"content":"        String firstWordOfUserInput \u003d splitInput[0];","lastModifiedDate":"2023-02-18"},{"lineNumber":50,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":51,"author":{"gitId":"sansders"},"content":"        switch (firstWordOfUserInput) {","lastModifiedDate":"2023-02-18"},{"lineNumber":52,"author":{"gitId":"sansders"},"content":"        case \"list\":","lastModifiedDate":"2023-02-18"},{"lineNumber":53,"author":{"gitId":"sansders"},"content":"            PrintOperations.list(tasks);","lastModifiedDate":"2023-02-18"},{"lineNumber":54,"author":{"gitId":"sansders"},"content":"            break;","lastModifiedDate":"2023-02-18"},{"lineNumber":55,"author":{"gitId":"sansders"},"content":"        case \"mark\":","lastModifiedDate":"2023-02-18"},{"lineNumber":56,"author":{"gitId":"sansders"},"content":"            handleMark(userInput, command, tasks);","lastModifiedDate":"2023-02-19"},{"lineNumber":57,"author":{"gitId":"sansders"},"content":"            break;","lastModifiedDate":"2023-02-19"},{"lineNumber":58,"author":{"gitId":"sansders"},"content":"        case \"unmark\":","lastModifiedDate":"2023-02-18"},{"lineNumber":59,"author":{"gitId":"sansders"},"content":"            handleUnmark(userInput, command, tasks);","lastModifiedDate":"2023-02-19"},{"lineNumber":60,"author":{"gitId":"sansders"},"content":"            break;","lastModifiedDate":"2023-02-19"},{"lineNumber":61,"author":{"gitId":"sansders"},"content":"        case \"delete\":","lastModifiedDate":"2023-02-18"},{"lineNumber":62,"author":{"gitId":"sansders"},"content":"            handleDelete(userInput, command, tasks);","lastModifiedDate":"2023-02-19"},{"lineNumber":63,"author":{"gitId":"sansders"},"content":"            break;","lastModifiedDate":"2023-02-18"},{"lineNumber":64,"author":{"gitId":"sansders"},"content":"        case \"find\":","lastModifiedDate":"2023-02-18"},{"lineNumber":65,"author":{"gitId":"sansders"},"content":"            handleFind(userInput, tasks);","lastModifiedDate":"2023-02-18"},{"lineNumber":66,"author":{"gitId":"sansders"},"content":"            break;","lastModifiedDate":"2023-02-18"},{"lineNumber":67,"author":{"gitId":"sansders"},"content":"        default:","lastModifiedDate":"2023-02-18"},{"lineNumber":68,"author":{"gitId":"sansders"},"content":"            addNewTask(userInput, command, tasks);","lastModifiedDate":"2023-02-18"},{"lineNumber":69,"author":{"gitId":"sansders"},"content":"            break;","lastModifiedDate":"2023-02-19"},{"lineNumber":70,"author":{"gitId":"sansders"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":71,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":72,"author":{"gitId":"sansders"},"content":"        // Save task ArrayList information into tasks.txt","lastModifiedDate":"2023-02-18"},{"lineNumber":73,"author":{"gitId":"sansders"},"content":"        FileOperations.saveArrayListToFile(tasks);","lastModifiedDate":"2023-02-18"},{"lineNumber":74,"author":{"gitId":"sansders"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":75,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":76,"author":{"gitId":"sansders"},"content":"    private void handleDelete(String userInput, String command, ArrayList\u003cTask\u003e tasks)","lastModifiedDate":"2023-02-19"},{"lineNumber":77,"author":{"gitId":"sansders"},"content":"            throws DukeTaskDoesNotExistException{","lastModifiedDate":"2023-02-19"},{"lineNumber":78,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":79,"author":{"gitId":"sansders"},"content":"        int taskIndex \u003d Integer.parseInt(userInput.substring(userInput.length() - 1)) - 1;","lastModifiedDate":"2023-02-18"},{"lineNumber":80,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":81,"author":{"gitId":"sansders"},"content":"        // If task index does not exist, throw exception","lastModifiedDate":"2023-02-18"},{"lineNumber":82,"author":{"gitId":"sansders"},"content":"        if ((taskIndex + 1) \u003e tasks.size() || taskIndex \u003c 0) {","lastModifiedDate":"2023-02-18"},{"lineNumber":83,"author":{"gitId":"sansders"},"content":"            throw new DukeTaskDoesNotExistException();","lastModifiedDate":"2023-02-18"},{"lineNumber":84,"author":{"gitId":"sansders"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":85,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":86,"author":{"gitId":"sansders"},"content":"        PrintOperations.taskRemoved(taskIndex, tasks);","lastModifiedDate":"2023-02-18"},{"lineNumber":87,"author":{"gitId":"sansders"},"content":"        tasks.remove(taskIndex);","lastModifiedDate":"2023-02-18"},{"lineNumber":88,"author":{"gitId":"sansders"},"content":"        PrintOperations.numberOfTasks(tasks);","lastModifiedDate":"2023-02-18"},{"lineNumber":89,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":90,"author":{"gitId":"sansders"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":91,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":92,"author":{"gitId":"sansders"},"content":"    private void handleMark(String userInput, String command, ArrayList\u003cTask\u003e tasks)","lastModifiedDate":"2023-02-19"},{"lineNumber":93,"author":{"gitId":"sansders"},"content":"            throws DukeTaskDoesNotExistException, DukeAlreadyMarkedException {","lastModifiedDate":"2023-02-19"},{"lineNumber":94,"author":{"gitId":"sansders"},"content":"        int taskIndex \u003d Integer.parseInt(userInput.substring(userInput.length() - 1)) - 1;","lastModifiedDate":"2023-02-19"},{"lineNumber":95,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":96,"author":{"gitId":"sansders"},"content":"        // If task index does not exist, throw exception","lastModifiedDate":"2023-02-19"},{"lineNumber":97,"author":{"gitId":"sansders"},"content":"        if ((taskIndex + 1) \u003e tasks.size() || taskIndex \u003c 0) {","lastModifiedDate":"2023-02-19"},{"lineNumber":98,"author":{"gitId":"sansders"},"content":"            throw new DukeTaskDoesNotExistException();","lastModifiedDate":"2023-02-19"},{"lineNumber":99,"author":{"gitId":"sansders"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":100,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":101,"author":{"gitId":"sansders"},"content":"        tasks.get(taskIndex).markAsDone();","lastModifiedDate":"2023-02-19"},{"lineNumber":102,"author":{"gitId":"sansders"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":103,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":104,"author":{"gitId":"sansders"},"content":"    private void handleUnmark(String userInput, String command, ArrayList\u003cTask\u003e tasks)","lastModifiedDate":"2023-02-19"},{"lineNumber":105,"author":{"gitId":"sansders"},"content":"            throws DukeTaskDoesNotExistException, DukeAlreadyMarkedException {","lastModifiedDate":"2023-02-19"},{"lineNumber":106,"author":{"gitId":"sansders"},"content":"        int taskIndex \u003d Integer.parseInt(userInput.substring(userInput.length() - 1)) - 1;","lastModifiedDate":"2023-02-19"},{"lineNumber":107,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":108,"author":{"gitId":"sansders"},"content":"        // If task index does not exist, throw exception","lastModifiedDate":"2023-02-19"},{"lineNumber":109,"author":{"gitId":"sansders"},"content":"        if ((taskIndex + 1) \u003e tasks.size() || taskIndex \u003c 0) {","lastModifiedDate":"2023-02-19"},{"lineNumber":110,"author":{"gitId":"sansders"},"content":"            throw new DukeTaskDoesNotExistException();","lastModifiedDate":"2023-02-19"},{"lineNumber":111,"author":{"gitId":"sansders"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":112,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":113,"author":{"gitId":"sansders"},"content":"        tasks.get(taskIndex).markAsNotDone();","lastModifiedDate":"2023-02-19"},{"lineNumber":114,"author":{"gitId":"sansders"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":115,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":116,"author":{"gitId":"sansders"},"content":"    private void addNewTask(String userInput, String command, ArrayList\u003cTask\u003e tasks)","lastModifiedDate":"2023-02-18"},{"lineNumber":117,"author":{"gitId":"sansders"},"content":"            throws DukeIllegalSyntaxException, DukeIllegalCommandException {","lastModifiedDate":"2023-02-18"},{"lineNumber":118,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":119,"author":{"gitId":"sansders"},"content":"        Task newTask;","lastModifiedDate":"2023-02-18"},{"lineNumber":120,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":121,"author":{"gitId":"sansders"},"content":"        // Depending on the type of command, the input gets parsed into the different handlers","lastModifiedDate":"2023-02-18"},{"lineNumber":122,"author":{"gitId":"sansders"},"content":"        switch (command) {","lastModifiedDate":"2023-02-18"},{"lineNumber":123,"author":{"gitId":"sansders"},"content":"        case \"deadline\":","lastModifiedDate":"2023-02-18"},{"lineNumber":124,"author":{"gitId":"sansders"},"content":"            String[] deadlineArgs \u003d Deadline.handler(userInput);","lastModifiedDate":"2023-02-18"},{"lineNumber":125,"author":{"gitId":"sansders"},"content":"            newTask \u003d new Deadline(deadlineArgs[0], deadlineArgs[1]);","lastModifiedDate":"2023-02-18"},{"lineNumber":126,"author":{"gitId":"sansders"},"content":"            break;","lastModifiedDate":"2023-02-18"},{"lineNumber":127,"author":{"gitId":"sansders"},"content":"        case \"event\":","lastModifiedDate":"2023-02-18"},{"lineNumber":128,"author":{"gitId":"sansders"},"content":"            String[] eventArgs \u003d Event.handler(userInput);","lastModifiedDate":"2023-02-18"},{"lineNumber":129,"author":{"gitId":"sansders"},"content":"            newTask \u003d new Event(eventArgs[0], eventArgs[1], eventArgs[2]);","lastModifiedDate":"2023-02-18"},{"lineNumber":130,"author":{"gitId":"sansders"},"content":"            break;","lastModifiedDate":"2023-02-18"},{"lineNumber":131,"author":{"gitId":"sansders"},"content":"        case \"todo\":","lastModifiedDate":"2023-02-18"},{"lineNumber":132,"author":{"gitId":"sansders"},"content":"            String todoCommand \u003d Todo.handler(userInput);","lastModifiedDate":"2023-02-18"},{"lineNumber":133,"author":{"gitId":"sansders"},"content":"            newTask \u003d new Todo(todoCommand);","lastModifiedDate":"2023-02-18"},{"lineNumber":134,"author":{"gitId":"sansders"},"content":"            break;","lastModifiedDate":"2023-02-18"},{"lineNumber":135,"author":{"gitId":"sansders"},"content":"        default:","lastModifiedDate":"2023-02-18"},{"lineNumber":136,"author":{"gitId":"sansders"},"content":"            throw new DukeIllegalCommandException();","lastModifiedDate":"2023-02-18"},{"lineNumber":137,"author":{"gitId":"sansders"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":138,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":139,"author":{"gitId":"sansders"},"content":"        tasks.add(newTask);","lastModifiedDate":"2023-02-18"},{"lineNumber":140,"author":{"gitId":"sansders"},"content":"        PrintOperations.addTask(newTask);","lastModifiedDate":"2023-02-18"},{"lineNumber":141,"author":{"gitId":"sansders"},"content":"        PrintOperations.numberOfTasks(tasks);","lastModifiedDate":"2023-02-18"},{"lineNumber":142,"author":{"gitId":"sansders"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":143,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":144,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":145,"author":{"gitId":"sansders"},"content":"    private void handleFind(String userInput, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-18"},{"lineNumber":146,"author":{"gitId":"sansders"},"content":"        userInput \u003d userInput.replace(\"find \", \"\");","lastModifiedDate":"2023-02-18"},{"lineNumber":147,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":148,"author":{"gitId":"sansders"},"content":"        // Necessary to declare userInput as a constant variable for input into streams","lastModifiedDate":"2023-02-18"},{"lineNumber":149,"author":{"gitId":"sansders"},"content":"        final String finalUserInput \u003d userInput;","lastModifiedDate":"2023-02-18"},{"lineNumber":150,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":151,"author":{"gitId":"sansders"},"content":"        ArrayList\u003cTask\u003e filteredList \u003d tasks.stream()","lastModifiedDate":"2023-02-18"},{"lineNumber":152,"author":{"gitId":"sansders"},"content":"                .filter(t -\u003e t.getDescription().contains(finalUserInput))","lastModifiedDate":"2023-02-18"},{"lineNumber":153,"author":{"gitId":"sansders"},"content":"                .collect(Collectors.toCollection(ArrayList::new));","lastModifiedDate":"2023-02-18"},{"lineNumber":154,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":155,"author":{"gitId":"sansders"},"content":"        if (filteredList.size() \u003e 0) {","lastModifiedDate":"2023-02-19"},{"lineNumber":156,"author":{"gitId":"sansders"},"content":"            PrintOperations.foundTasks();","lastModifiedDate":"2023-02-19"},{"lineNumber":157,"author":{"gitId":"sansders"},"content":"            PrintOperations.bulletedList(filteredList);","lastModifiedDate":"2023-02-18"},{"lineNumber":158,"author":{"gitId":"sansders"},"content":"        } else {","lastModifiedDate":"2023-02-19"},{"lineNumber":159,"author":{"gitId":"sansders"},"content":"            PrintOperations.noTasksFound();","lastModifiedDate":"2023-02-19"},{"lineNumber":160,"author":{"gitId":"sansders"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":161,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":162,"author":{"gitId":"sansders"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":163,"author":{"gitId":"sansders"},"content":"}","lastModifiedDate":"2023-02-18"}],"authorContributionMap":{"sansders":163}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sansders"},"content":"package duke;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"sansders"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"sansders"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"sansders"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"sansders"},"content":"import task.Task;","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"sansders"},"content":"import error.DukeAlreadyMarkedException;","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"sansders"},"content":"import error.DukeIllegalCommandException;","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"sansders"},"content":"import error.DukeIllegalSyntaxException;","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"sansders"},"content":"import error.DukeTaskDoesNotExistException;","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"sansders"},"content":"import error.DukeIllegalCharacterException;","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"sansders"},"content":"    private static ArrayList\u003cTask\u003e tasks \u003d FileOperations.loadArrayListFromFile();","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"sansders"},"content":"    private static Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"sansders"},"content":"    private static void runProgram() {","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"sansders"},"content":"        String userInput \u003d scanner.nextLine();","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"sansders"},"content":"        // Loop for next tasks to add","lastModifiedDate":"2023-01-21"},{"lineNumber":25,"author":{"gitId":"sansders"},"content":"        while (!userInput.equals(\"bye\")) {","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"sansders"},"content":"            try {","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"sansders"},"content":"                CommandParser commandParser \u003d new CommandParser();","lastModifiedDate":"2023-02-18"},{"lineNumber":29,"author":{"gitId":"sansders"},"content":"                commandParser.manageInput(userInput, userInput.split(\" \")[0], tasks);","lastModifiedDate":"2023-02-18"},{"lineNumber":30,"author":{"gitId":"sansders"},"content":"            } catch (DukeIllegalCommandException exception) {","lastModifiedDate":"2023-02-19"},{"lineNumber":31,"author":{"gitId":"sansders"},"content":"                PrintOperations.illegalCommand();","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"sansders"},"content":"            } catch (DukeIllegalSyntaxException exception) {","lastModifiedDate":"2023-02-19"},{"lineNumber":33,"author":{"gitId":"sansders"},"content":"                PrintOperations.illegalSyntax();","lastModifiedDate":"2023-02-15"},{"lineNumber":34,"author":{"gitId":"sansders"},"content":"            } catch (DukeAlreadyMarkedException exception) {","lastModifiedDate":"2023-02-19"},{"lineNumber":35,"author":{"gitId":"sansders"},"content":"                PrintOperations.alreadyMarked();","lastModifiedDate":"2023-02-15"},{"lineNumber":36,"author":{"gitId":"sansders"},"content":"            } catch (DukeTaskDoesNotExistException exception) {","lastModifiedDate":"2023-02-19"},{"lineNumber":37,"author":{"gitId":"sansders"},"content":"                PrintOperations.doesNotExist();","lastModifiedDate":"2023-02-15"},{"lineNumber":38,"author":{"gitId":"sansders"},"content":"            } catch (DukeIllegalCharacterException exception) {","lastModifiedDate":"2023-02-19"},{"lineNumber":39,"author":{"gitId":"sansders"},"content":"                PrintOperations.illegalCharacter();","lastModifiedDate":"2023-02-15"},{"lineNumber":40,"author":{"gitId":"sansders"},"content":"            } catch (IOException exception) {","lastModifiedDate":"2023-02-19"},{"lineNumber":41,"author":{"gitId":"sansders"},"content":"                PrintOperations.io();","lastModifiedDate":"2023-02-15"},{"lineNumber":42,"author":{"gitId":"sansders"},"content":"            } finally {","lastModifiedDate":"2023-02-19"},{"lineNumber":43,"author":{"gitId":"sansders"},"content":"                PrintOperations.horizontalLine();","lastModifiedDate":"2023-02-15"},{"lineNumber":44,"author":{"gitId":"sansders"},"content":"                userInput \u003d scanner.nextLine();","lastModifiedDate":"2023-02-10"},{"lineNumber":45,"author":{"gitId":"sansders"},"content":"            }","lastModifiedDate":"2023-02-10"},{"lineNumber":46,"author":{"gitId":"sansders"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":47,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":48,"author":{"gitId":"sansders"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":49,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":50,"author":{"gitId":"sansders"},"content":"    private static void exit() {","lastModifiedDate":"2023-02-18"},{"lineNumber":51,"author":{"gitId":"sansders"},"content":"        PrintOperations.bye();","lastModifiedDate":"2023-02-15"},{"lineNumber":52,"author":{"gitId":"sansders"},"content":"        System.exit(0);","lastModifiedDate":"2023-02-15"},{"lineNumber":53,"author":{"gitId":"sansders"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":54,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"sansders"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"sansders"},"content":"        PrintOperations.greet();","lastModifiedDate":"2023-02-15"},{"lineNumber":57,"author":{"gitId":"sansders"},"content":"        runProgram();","lastModifiedDate":"2023-02-03"},{"lineNumber":58,"author":{"gitId":"sansders"},"content":"        exit();","lastModifiedDate":"2023-02-03"},{"lineNumber":59,"author":{"gitId":"sansders"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"sansders":59,"-":2}},{"path":"src/main/java/duke/FileOperations.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sansders"},"content":"package duke;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"sansders"},"content":"import task.Deadline;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"sansders"},"content":"import task.Event;","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"sansders"},"content":"import task.Task;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"sansders"},"content":"import task.Todo;","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"sansders"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"sansders"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"sansders"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"sansders"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"sansders"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"sansders"},"content":"import java.io.File;","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"sansders"},"content":"/**","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"sansders"},"content":" * Contains the methods responsible for reading from and saving information about the tasks.","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"sansders"},"content":" * Each element in the ArrayList will be saved as a line in a txt file.","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"sansders"},"content":" * Examples of lines in the txt file are as follows:","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"sansders"},"content":" * T|1|read book","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"sansders"},"content":" * D|0|return book|June 6th","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"sansders"},"content":" * E|0|project meeting|Aug 6th 2pm|4pm","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"sansders"},"content":" **/","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"sansders"},"content":"public class FileOperations {","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"sansders"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"sansders"},"content":"     * Relative filepath to tasks.txt","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"sansders"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"sansders"},"content":"    private static final String FILE_PATH \u003d \"./tasks.txt\";","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"sansders"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"sansders"},"content":"     * ArrayList of tasks","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"sansders"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":33,"author":{"gitId":"sansders"},"content":"    private static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-18"},{"lineNumber":34,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":35,"author":{"gitId":"sansders"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":36,"author":{"gitId":"sansders"},"content":"     * Loads the information required for the ArrayList from the tasks.txt file.","lastModifiedDate":"2023-02-18"},{"lineNumber":37,"author":{"gitId":"sansders"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":38,"author":{"gitId":"sansders"},"content":"     * @return An ArrayList of tasks.","lastModifiedDate":"2023-02-18"},{"lineNumber":39,"author":{"gitId":"sansders"},"content":"     * @throws IOException If the tasks.txt file does not exist.","lastModifiedDate":"2023-02-18"},{"lineNumber":40,"author":{"gitId":"sansders"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":41,"author":{"gitId":"sansders"},"content":"    public static ArrayList\u003cTask\u003e loadArrayListFromFile() {","lastModifiedDate":"2023-02-11"},{"lineNumber":42,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":43,"author":{"gitId":"sansders"},"content":"        try {","lastModifiedDate":"2023-02-11"},{"lineNumber":44,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":45,"author":{"gitId":"sansders"},"content":"            File inputFile \u003d new File(FILE_PATH);","lastModifiedDate":"2023-02-11"},{"lineNumber":46,"author":{"gitId":"sansders"},"content":"            BufferedReader br \u003d new BufferedReader(new FileReader(inputFile));","lastModifiedDate":"2023-02-11"},{"lineNumber":47,"author":{"gitId":"sansders"},"content":"            String entry;","lastModifiedDate":"2023-02-11"},{"lineNumber":48,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":49,"author":{"gitId":"sansders"},"content":"            System.out.println(\"Save file found.\\nLoading save file...\");","lastModifiedDate":"2023-02-11"},{"lineNumber":50,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":51,"author":{"gitId":"sansders"},"content":"            while ((entry \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2023-02-11"},{"lineNumber":52,"author":{"gitId":"sansders"},"content":"                tasks.add(extractTaskFromString(entry));","lastModifiedDate":"2023-02-11"},{"lineNumber":53,"author":{"gitId":"sansders"},"content":"            }","lastModifiedDate":"2023-02-11"},{"lineNumber":54,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":55,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":56,"author":{"gitId":"sansders"},"content":"        } catch (IOException exception) {","lastModifiedDate":"2023-02-11"},{"lineNumber":57,"author":{"gitId":"sansders"},"content":"            System.out.println(\"Save file does not exist.\\nCreating new save file...\");","lastModifiedDate":"2023-02-11"},{"lineNumber":58,"author":{"gitId":"sansders"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":59,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":60,"author":{"gitId":"sansders"},"content":"        return tasks;","lastModifiedDate":"2023-02-11"},{"lineNumber":61,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":62,"author":{"gitId":"sansders"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":63,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":64,"author":{"gitId":"sansders"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":65,"author":{"gitId":"sansders"},"content":"     * Saves the information from the ArrayList to the file","lastModifiedDate":"2023-02-18"},{"lineNumber":66,"author":{"gitId":"sansders"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":67,"author":{"gitId":"sansders"},"content":"     * @param tasks An ArrayList of tasks.","lastModifiedDate":"2023-02-18"},{"lineNumber":68,"author":{"gitId":"sansders"},"content":"     * @throws IOException If the tasks.txt file cannot be written to.","lastModifiedDate":"2023-02-18"},{"lineNumber":69,"author":{"gitId":"sansders"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":70,"author":{"gitId":"sansders"},"content":"    public static void saveArrayListToFile(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2023-02-11"},{"lineNumber":71,"author":{"gitId":"sansders"},"content":"        FileWriter fileWriter \u003d new FileWriter(FILE_PATH, false);","lastModifiedDate":"2023-02-11"},{"lineNumber":72,"author":{"gitId":"sansders"},"content":"        fileWriter.write(formatData(tasks));","lastModifiedDate":"2023-02-19"},{"lineNumber":73,"author":{"gitId":"sansders"},"content":"        fileWriter.close();","lastModifiedDate":"2023-02-11"},{"lineNumber":74,"author":{"gitId":"sansders"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":75,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":76,"author":{"gitId":"sansders"},"content":"    private static String formatData(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-19"},{"lineNumber":77,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":78,"author":{"gitId":"sansders"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2023-02-11"},{"lineNumber":79,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":80,"author":{"gitId":"sansders"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2023-02-11"},{"lineNumber":81,"author":{"gitId":"sansders"},"content":"            if (t instanceof Todo) {","lastModifiedDate":"2023-02-11"},{"lineNumber":82,"author":{"gitId":"sansders"},"content":"                output.append(t.getTaskType() + \"|\" + (t.isDone() ? 1 : 0) + \"|\" + t.getDescription()","lastModifiedDate":"2023-02-11"},{"lineNumber":83,"author":{"gitId":"sansders"},"content":"                        + System.lineSeparator());","lastModifiedDate":"2023-02-11"},{"lineNumber":84,"author":{"gitId":"sansders"},"content":"            } else if (t instanceof Deadline) {","lastModifiedDate":"2023-02-11"},{"lineNumber":85,"author":{"gitId":"sansders"},"content":"                output.append(t.getTaskType() + \"|\" + (t.isDone() ? 1 : 0) + \"|\" + t.getDescription() + \"|\"","lastModifiedDate":"2023-02-11"},{"lineNumber":86,"author":{"gitId":"sansders"},"content":"                        + ((Deadline) t).getBy() + System.lineSeparator());","lastModifiedDate":"2023-02-11"},{"lineNumber":87,"author":{"gitId":"sansders"},"content":"            } else {","lastModifiedDate":"2023-02-11"},{"lineNumber":88,"author":{"gitId":"sansders"},"content":"                output.append(t.getTaskType() + \"|\" + (t.isDone() ? 1 : 0) + \"|\" + t.getDescription() + \"|\"","lastModifiedDate":"2023-02-11"},{"lineNumber":89,"author":{"gitId":"sansders"},"content":"                        + ((Event) t).getFrom() + \"|\" + ((Event) t).getTo() + System.lineSeparator());","lastModifiedDate":"2023-02-11"},{"lineNumber":90,"author":{"gitId":"sansders"},"content":"            }","lastModifiedDate":"2023-02-11"},{"lineNumber":91,"author":{"gitId":"sansders"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":92,"author":{"gitId":"sansders"},"content":"        return output.toString();","lastModifiedDate":"2023-02-11"},{"lineNumber":93,"author":{"gitId":"sansders"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":94,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":95,"author":{"gitId":"sansders"},"content":"    private static Task extractTaskFromString(String entry) {","lastModifiedDate":"2023-02-18"},{"lineNumber":96,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":97,"author":{"gitId":"sansders"},"content":"        Task task;","lastModifiedDate":"2023-02-11"},{"lineNumber":98,"author":{"gitId":"sansders"},"content":"        String[] stringArrayOfEntry \u003d entry.split(\"\\\\|\");","lastModifiedDate":"2023-02-11"},{"lineNumber":99,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":100,"author":{"gitId":"sansders"},"content":"        // Check type of Task and create new Task based on the type","lastModifiedDate":"2023-02-11"},{"lineNumber":101,"author":{"gitId":"sansders"},"content":"        if (entry.startsWith(\"T\")) {","lastModifiedDate":"2023-02-11"},{"lineNumber":102,"author":{"gitId":"sansders"},"content":"            task \u003d new Todo(stringArrayOfEntry[2]);","lastModifiedDate":"2023-02-11"},{"lineNumber":103,"author":{"gitId":"sansders"},"content":"        } else if (entry.startsWith(\"D\")) {","lastModifiedDate":"2023-02-11"},{"lineNumber":104,"author":{"gitId":"sansders"},"content":"            task \u003d new Deadline(stringArrayOfEntry[2], stringArrayOfEntry[3]);","lastModifiedDate":"2023-02-11"},{"lineNumber":105,"author":{"gitId":"sansders"},"content":"        } else {","lastModifiedDate":"2023-02-11"},{"lineNumber":106,"author":{"gitId":"sansders"},"content":"            task \u003d new Event(stringArrayOfEntry[2], stringArrayOfEntry[3], stringArrayOfEntry[4]);","lastModifiedDate":"2023-02-11"},{"lineNumber":107,"author":{"gitId":"sansders"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":108,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":109,"author":{"gitId":"sansders"},"content":"        // Set done status of the Task","lastModifiedDate":"2023-02-11"},{"lineNumber":110,"author":{"gitId":"sansders"},"content":"        task.setDone(stringArrayOfEntry[1].equals(\"1\"));","lastModifiedDate":"2023-02-11"},{"lineNumber":111,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":112,"author":{"gitId":"sansders"},"content":"        return task;","lastModifiedDate":"2023-02-11"},{"lineNumber":113,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":114,"author":{"gitId":"sansders"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":115,"author":{"gitId":"sansders"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"sansders":115}},{"path":"src/main/java/duke/PrintOperations.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sansders"},"content":"package duke;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"sansders"},"content":"import task.Task;","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"sansders"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"sansders"},"content":"/**","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"sansders"},"content":" * Class contains the methods responsible for printing all the outputs of Duke.","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"sansders"},"content":" */","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"sansders"},"content":"public class PrintOperations {","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"sansders"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"sansders"},"content":"     * A String of a horizontal Line","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"sansders"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"sansders"},"content":"    static final String HORIZONTAL_LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"sansders"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"sansders"},"content":"     * Prints a String of a horizontal line.","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"sansders"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"sansders"},"content":"    public static void horizontalLine() {","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"sansders"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"sansders"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"sansders"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"sansders"},"content":"     * Prints a lovely greeting.","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"sansders"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"sansders"},"content":"    public static void greet() {","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"sansders"},"content":"        horizontalLine();","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"sansders"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"sansders"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"sansders"},"content":"        horizontalLine();","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"sansders"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":33,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":34,"author":{"gitId":"sansders"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":35,"author":{"gitId":"sansders"},"content":"     * Prints a farewell message and exits the application.","lastModifiedDate":"2023-02-18"},{"lineNumber":36,"author":{"gitId":"sansders"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":37,"author":{"gitId":"sansders"},"content":"    public static void bye() {","lastModifiedDate":"2023-02-15"},{"lineNumber":38,"author":{"gitId":"sansders"},"content":"        horizontalLine();","lastModifiedDate":"2023-02-15"},{"lineNumber":39,"author":{"gitId":"sansders"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-02-15"},{"lineNumber":40,"author":{"gitId":"sansders"},"content":"        horizontalLine();","lastModifiedDate":"2023-02-15"},{"lineNumber":41,"author":{"gitId":"sansders"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":42,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":43,"author":{"gitId":"sansders"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":44,"author":{"gitId":"sansders"},"content":"     * Prints a String containing the description of the newly added Task.","lastModifiedDate":"2023-02-18"},{"lineNumber":45,"author":{"gitId":"sansders"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":46,"author":{"gitId":"sansders"},"content":"    public static void addTask(Task task) {","lastModifiedDate":"2023-02-15"},{"lineNumber":47,"author":{"gitId":"sansders"},"content":"        System.out.println(\"Got it. I\u0027ve added this task: \\n\" + task);","lastModifiedDate":"2023-02-15"},{"lineNumber":48,"author":{"gitId":"sansders"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":49,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":50,"author":{"gitId":"sansders"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":51,"author":{"gitId":"sansders"},"content":"     * Prints a list of the Tasks with numbered points.","lastModifiedDate":"2023-02-18"},{"lineNumber":52,"author":{"gitId":"sansders"},"content":"     * The displayed indexes can be used when manipulating the list using mark, unmark, or the delete commands.","lastModifiedDate":"2023-02-18"},{"lineNumber":53,"author":{"gitId":"sansders"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":54,"author":{"gitId":"sansders"},"content":"    public static void list(ArrayList\u003cTask\u003e listOfInputs) {","lastModifiedDate":"2023-02-15"},{"lineNumber":55,"author":{"gitId":"sansders"},"content":"        int counter \u003d 0;","lastModifiedDate":"2023-02-15"},{"lineNumber":56,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":57,"author":{"gitId":"sansders"},"content":"        if (listOfInputs.size() \u003d\u003d 0) {","lastModifiedDate":"2023-02-15"},{"lineNumber":58,"author":{"gitId":"sansders"},"content":"            System.out.println(\"Your list is empty.\");","lastModifiedDate":"2023-02-19"},{"lineNumber":59,"author":{"gitId":"sansders"},"content":"            return;","lastModifiedDate":"2023-02-15"},{"lineNumber":60,"author":{"gitId":"sansders"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":61,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":62,"author":{"gitId":"sansders"},"content":"        for (Task inputs : listOfInputs) {","lastModifiedDate":"2023-02-15"},{"lineNumber":63,"author":{"gitId":"sansders"},"content":"            System.out.println(counter + 1 + \".\" + inputs.toString());","lastModifiedDate":"2023-02-15"},{"lineNumber":64,"author":{"gitId":"sansders"},"content":"            counter++;","lastModifiedDate":"2023-02-15"},{"lineNumber":65,"author":{"gitId":"sansders"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":66,"author":{"gitId":"sansders"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":67,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":68,"author":{"gitId":"sansders"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":69,"author":{"gitId":"sansders"},"content":"     * Prints a list of the Tasks with bulleted points.","lastModifiedDate":"2023-02-19"},{"lineNumber":70,"author":{"gitId":"sansders"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":71,"author":{"gitId":"sansders"},"content":"    public static void bulletedList(ArrayList\u003cTask\u003e listOfFilteredInputs) {","lastModifiedDate":"2023-02-18"},{"lineNumber":72,"author":{"gitId":"sansders"},"content":"        for (Task inputs : listOfFilteredInputs) {","lastModifiedDate":"2023-02-18"},{"lineNumber":73,"author":{"gitId":"sansders"},"content":"            System.out.println(\"- \" + inputs.toString());","lastModifiedDate":"2023-02-18"},{"lineNumber":74,"author":{"gitId":"sansders"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":75,"author":{"gitId":"sansders"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":76,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":77,"author":{"gitId":"sansders"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":78,"author":{"gitId":"sansders"},"content":"     * Prints a String that states that some Tasks matching an entered keyword was found.","lastModifiedDate":"2023-02-19"},{"lineNumber":79,"author":{"gitId":"sansders"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":80,"author":{"gitId":"sansders"},"content":"    public static void foundTasks() {","lastModifiedDate":"2023-02-19"},{"lineNumber":81,"author":{"gitId":"sansders"},"content":"        System.out.println(\"Here are matching tasks in your list:\");","lastModifiedDate":"2023-02-19"},{"lineNumber":82,"author":{"gitId":"sansders"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":83,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":84,"author":{"gitId":"sansders"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":85,"author":{"gitId":"sansders"},"content":"     * Prints a String that states that no Tasks matching an entered keyword was found.","lastModifiedDate":"2023-02-19"},{"lineNumber":86,"author":{"gitId":"sansders"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":87,"author":{"gitId":"sansders"},"content":"    public static void noTasksFound() {","lastModifiedDate":"2023-02-19"},{"lineNumber":88,"author":{"gitId":"sansders"},"content":"        System.out.println(\"No tasks matching the supplied keyword was found!\");","lastModifiedDate":"2023-02-19"},{"lineNumber":89,"author":{"gitId":"sansders"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":90,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":91,"author":{"gitId":"sansders"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":92,"author":{"gitId":"sansders"},"content":"     * Prints the total number of Tasks in the ArrayList.","lastModifiedDate":"2023-02-19"},{"lineNumber":93,"author":{"gitId":"sansders"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":94,"author":{"gitId":"sansders"},"content":"    public static void numberOfTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-15"},{"lineNumber":95,"author":{"gitId":"sansders"},"content":"        if (tasks.size() \u003d\u003d 1) {","lastModifiedDate":"2023-02-15"},{"lineNumber":96,"author":{"gitId":"sansders"},"content":"            System.out.println(\"Now you have 1 task in the list.\");","lastModifiedDate":"2023-02-15"},{"lineNumber":97,"author":{"gitId":"sansders"},"content":"        } else {","lastModifiedDate":"2023-02-15"},{"lineNumber":98,"author":{"gitId":"sansders"},"content":"            System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-02-15"},{"lineNumber":99,"author":{"gitId":"sansders"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":100,"author":{"gitId":"sansders"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":101,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":102,"author":{"gitId":"sansders"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":103,"author":{"gitId":"sansders"},"content":"     * Prints the deleted Task.","lastModifiedDate":"2023-02-18"},{"lineNumber":104,"author":{"gitId":"sansders"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":105,"author":{"gitId":"sansders"},"content":"    public static void taskRemoved(int taskIndex, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-15"},{"lineNumber":106,"author":{"gitId":"sansders"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task: \");","lastModifiedDate":"2023-02-15"},{"lineNumber":107,"author":{"gitId":"sansders"},"content":"        System.out.println(taskIndex + 1 + \".\" + tasks.get(taskIndex).toString());","lastModifiedDate":"2023-02-15"},{"lineNumber":108,"author":{"gitId":"sansders"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":109,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":110,"author":{"gitId":"sansders"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":111,"author":{"gitId":"sansders"},"content":"     * Prints when task is marked as done.","lastModifiedDate":"2023-02-19"},{"lineNumber":112,"author":{"gitId":"sansders"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":113,"author":{"gitId":"sansders"},"content":"    public static void taskMarked(Task task) {","lastModifiedDate":"2023-02-19"},{"lineNumber":114,"author":{"gitId":"sansders"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-02-19"},{"lineNumber":115,"author":{"gitId":"sansders"},"content":"        System.out.println(task);","lastModifiedDate":"2023-02-19"},{"lineNumber":116,"author":{"gitId":"sansders"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":117,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":118,"author":{"gitId":"sansders"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":119,"author":{"gitId":"sansders"},"content":"     * Prints when task is unmarked.","lastModifiedDate":"2023-02-19"},{"lineNumber":120,"author":{"gitId":"sansders"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":121,"author":{"gitId":"sansders"},"content":"    public static void taskUnmarked(Task task) {","lastModifiedDate":"2023-02-19"},{"lineNumber":122,"author":{"gitId":"sansders"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-02-19"},{"lineNumber":123,"author":{"gitId":"sansders"},"content":"        System.out.println(task);","lastModifiedDate":"2023-02-19"},{"lineNumber":124,"author":{"gitId":"sansders"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":125,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":126,"author":{"gitId":"sansders"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":127,"author":{"gitId":"sansders"},"content":"     * Prints when the user enters an illegal command.","lastModifiedDate":"2023-02-18"},{"lineNumber":128,"author":{"gitId":"sansders"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":129,"author":{"gitId":"sansders"},"content":"    public static void illegalCommand() {","lastModifiedDate":"2023-02-15"},{"lineNumber":130,"author":{"gitId":"sansders"},"content":"        System.out.println(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-02-19"},{"lineNumber":131,"author":{"gitId":"sansders"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":132,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":133,"author":{"gitId":"sansders"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":134,"author":{"gitId":"sansders"},"content":"     * Prints when the user tries to mark or unmark a Task that already has that marking.","lastModifiedDate":"2023-02-18"},{"lineNumber":135,"author":{"gitId":"sansders"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":136,"author":{"gitId":"sansders"},"content":"    public static void alreadyMarked() {","lastModifiedDate":"2023-02-15"},{"lineNumber":137,"author":{"gitId":"sansders"},"content":"        System.out.println(\"OOPS!!! This task already has this marking :-(\");","lastModifiedDate":"2023-02-19"},{"lineNumber":138,"author":{"gitId":"sansders"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":139,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":140,"author":{"gitId":"sansders"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":141,"author":{"gitId":"sansders"},"content":"     * Prints when the user enters `|` in their input.","lastModifiedDate":"2023-02-18"},{"lineNumber":142,"author":{"gitId":"sansders"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":143,"author":{"gitId":"sansders"},"content":"    public static void illegalCharacter() {","lastModifiedDate":"2023-02-15"},{"lineNumber":144,"author":{"gitId":"sansders"},"content":"        System.out.println(\"OOPS!!! Please do not have \u0027|\u0027 in your input :-(\");","lastModifiedDate":"2023-02-19"},{"lineNumber":145,"author":{"gitId":"sansders"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":146,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":147,"author":{"gitId":"sansders"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":148,"author":{"gitId":"sansders"},"content":"     * Prints when the user enters an illegal syntax.","lastModifiedDate":"2023-02-18"},{"lineNumber":149,"author":{"gitId":"sansders"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":150,"author":{"gitId":"sansders"},"content":"    public static void illegalSyntax() {","lastModifiedDate":"2023-02-15"},{"lineNumber":151,"author":{"gitId":"sansders"},"content":"        System.out.println(\"OOPS!!! I\u0027m sorry, You entered an incorrect syntax :-(\");","lastModifiedDate":"2023-02-19"},{"lineNumber":152,"author":{"gitId":"sansders"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":153,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":154,"author":{"gitId":"sansders"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":155,"author":{"gitId":"sansders"},"content":"     * Prints when the user enters an invalid Task index.","lastModifiedDate":"2023-02-18"},{"lineNumber":156,"author":{"gitId":"sansders"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":157,"author":{"gitId":"sansders"},"content":"    public static void doesNotExist() {","lastModifiedDate":"2023-02-15"},{"lineNumber":158,"author":{"gitId":"sansders"},"content":"        System.out.println(\"OOPS!!! This task does not exist :-(\");","lastModifiedDate":"2023-02-19"},{"lineNumber":159,"author":{"gitId":"sansders"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":160,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":161,"author":{"gitId":"sansders"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":162,"author":{"gitId":"sansders"},"content":"     * Prints when there is an IO error.","lastModifiedDate":"2023-02-18"},{"lineNumber":163,"author":{"gitId":"sansders"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":164,"author":{"gitId":"sansders"},"content":"    public static void io() {","lastModifiedDate":"2023-02-15"},{"lineNumber":165,"author":{"gitId":"sansders"},"content":"        System.out.println(\"OOPS!!! Read/write file error :-(\");","lastModifiedDate":"2023-02-19"},{"lineNumber":166,"author":{"gitId":"sansders"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":167,"author":{"gitId":"sansders"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"sansders":167}},{"path":"src/main/java/error/DukeAlreadyMarkedException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sansders"},"content":"package error;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"sansders"},"content":"/**","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"sansders"},"content":" * Throws if the Task is already marked or unmarked.","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"sansders"},"content":" */","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"sansders"},"content":"public class DukeAlreadyMarkedException extends Exception{","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"sansders"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"sansders":7}},{"path":"src/main/java/error/DukeIllegalCharacterException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sansders"},"content":"package error;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"sansders"},"content":"/**","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"sansders"},"content":" * Throws if a user enters `|` in their input.","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"sansders"},"content":" **/","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"sansders"},"content":"public class DukeIllegalCharacterException extends Exception {","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"sansders"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"sansders":7}},{"path":"src/main/java/error/DukeIllegalCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sansders"},"content":"package error;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"sansders"},"content":"/**","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"sansders"},"content":" * Throws if a user enters an illegal command.","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"sansders"},"content":" **/","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"sansders"},"content":"public class DukeIllegalCommandException extends Exception {","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"sansders"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"sansders":8}},{"path":"src/main/java/error/DukeIllegalSyntaxException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sansders"},"content":"package error;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"sansders"},"content":"/**","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"sansders"},"content":" * Throws if a user enters an illegal syntax for a command.","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"sansders"},"content":" **/","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"sansders"},"content":"public class DukeIllegalSyntaxException extends Exception{","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"sansders"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"sansders":8}},{"path":"src/main/java/error/DukeTaskDoesNotExistException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sansders"},"content":"package error;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"sansders"},"content":"/**","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"sansders"},"content":" * Throws when a user tries to mark, unmark, or delete a non-existent Task index number.","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"sansders"},"content":" **/","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"sansders"},"content":"public class DukeTaskDoesNotExistException extends Exception {","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"sansders"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"sansders":7}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sansders"},"content":"package task;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"sansders"},"content":"import error.DukeIllegalSyntaxException;","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"sansders"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"sansders"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"sansders"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"sansders"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"sansders"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"sansders"},"content":"    private String by;","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"sansders"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"sansders"},"content":"        super(description, \u0027D\u0027);","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"sansders"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"sansders"},"content":"        replaceDate(by);","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"sansders"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"sansders"},"content":"    public String getBy() {","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"sansders"},"content":"        return by;","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"sansders"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"sansders"},"content":"    // Replaces dates of `yyyy-mm-dd` formats into `MMM dd yyyy` formats","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"sansders"},"content":"    private void replaceDate(String by) {","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":29,"author":{"gitId":"sansders"},"content":"        String datePattern \u003d \"\\\\d{4}-\\\\d{2}-\\\\d{2}\";","lastModifiedDate":"2023-02-18"},{"lineNumber":30,"author":{"gitId":"sansders"},"content":"        Pattern dateRegex \u003d Pattern.compile(datePattern);","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"sansders"},"content":"        Matcher dateMatcher \u003d dateRegex.matcher(by);","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"sansders"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-02-18"},{"lineNumber":33,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":34,"author":{"gitId":"sansders"},"content":"        String oldDateString;","lastModifiedDate":"2023-02-18"},{"lineNumber":35,"author":{"gitId":"sansders"},"content":"        String newDateString;","lastModifiedDate":"2023-02-18"},{"lineNumber":36,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":37,"author":{"gitId":"sansders"},"content":"        if (dateMatcher.find()) {","lastModifiedDate":"2023-02-18"},{"lineNumber":38,"author":{"gitId":"sansders"},"content":"            oldDateString \u003d dateMatcher.group();","lastModifiedDate":"2023-02-18"},{"lineNumber":39,"author":{"gitId":"sansders"},"content":"            newDateString \u003d getReplacementDateString(LocalDate.parse(dateMatcher.group(), formatter));","lastModifiedDate":"2023-02-18"},{"lineNumber":40,"author":{"gitId":"sansders"},"content":"            this.by \u003d by.replace(oldDateString, newDateString);","lastModifiedDate":"2023-02-18"},{"lineNumber":41,"author":{"gitId":"sansders"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":42,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":43,"author":{"gitId":"sansders"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":44,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":45,"author":{"gitId":"sansders"},"content":"    // Returns the new date format from the input","lastModifiedDate":"2023-02-18"},{"lineNumber":46,"author":{"gitId":"sansders"},"content":"    private String getReplacementDateString(LocalDate date) {","lastModifiedDate":"2023-02-18"},{"lineNumber":47,"author":{"gitId":"sansders"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2023-02-18"},{"lineNumber":48,"author":{"gitId":"sansders"},"content":"        return date.format(formatter);","lastModifiedDate":"2023-02-18"},{"lineNumber":49,"author":{"gitId":"sansders"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":50,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":51,"author":{"gitId":"sansders"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":52,"author":{"gitId":"sansders"},"content":"     * Method extracts the relevant information (description and by fields) from the userInput.","lastModifiedDate":"2023-02-19"},{"lineNumber":53,"author":{"gitId":"sansders"},"content":"     * It returns a String array containing {description, deadline}.","lastModifiedDate":"2023-02-18"},{"lineNumber":54,"author":{"gitId":"sansders"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":55,"author":{"gitId":"sansders"},"content":"     * @param userInput The input entered by the user.","lastModifiedDate":"2023-02-18"},{"lineNumber":56,"author":{"gitId":"sansders"},"content":"     * @return An array of Strings containing each word of the input in each of the indexes.","lastModifiedDate":"2023-02-18"},{"lineNumber":57,"author":{"gitId":"sansders"},"content":"     * @throws DukeIllegalSyntaxException If the syntax entered by the user is invalid.","lastModifiedDate":"2023-02-18"},{"lineNumber":58,"author":{"gitId":"sansders"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":59,"author":{"gitId":"sansders"},"content":"    public static String[] handler(String userInput) throws DukeIllegalSyntaxException {","lastModifiedDate":"2023-02-15"},{"lineNumber":60,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":61,"author":{"gitId":"sansders"},"content":"        // Format of userInput: \u003ccommand\u003e \u003ctaskName\u003e /by \u003cdeadline\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":62,"author":{"gitId":"sansders"},"content":"        int numberOfWords \u003d userInput.split(\" \").length - 1;","lastModifiedDate":"2023-02-15"},{"lineNumber":63,"author":{"gitId":"sansders"},"content":"        int endOfTaskNameIndex \u003d 0;","lastModifiedDate":"2023-02-15"},{"lineNumber":64,"author":{"gitId":"sansders"},"content":"        String[] userInputArray \u003d new String[numberOfWords];","lastModifiedDate":"2023-02-15"},{"lineNumber":65,"author":{"gitId":"sansders"},"content":"        String[] outputArray \u003d {\"\", \"\"};","lastModifiedDate":"2023-02-15"},{"lineNumber":66,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":67,"author":{"gitId":"sansders"},"content":"        userInput \u003d userInput.replaceFirst(\"deadline \", \"\");","lastModifiedDate":"2023-02-15"},{"lineNumber":68,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":69,"author":{"gitId":"sansders"},"content":"        // Checks if userInput contains \"\\by\"","lastModifiedDate":"2023-02-15"},{"lineNumber":70,"author":{"gitId":"sansders"},"content":"        if (!userInput.contains(\"/by\")) {","lastModifiedDate":"2023-02-15"},{"lineNumber":71,"author":{"gitId":"sansders"},"content":"            throw new DukeIllegalSyntaxException();","lastModifiedDate":"2023-02-15"},{"lineNumber":72,"author":{"gitId":"sansders"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":73,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":74,"author":{"gitId":"sansders"},"content":"        // Get index of \"/by\"","lastModifiedDate":"2023-02-15"},{"lineNumber":75,"author":{"gitId":"sansders"},"content":"        userInputArray \u003d userInput.split(\" \");","lastModifiedDate":"2023-02-15"},{"lineNumber":76,"author":{"gitId":"sansders"},"content":"        for (int i \u003d 0; i \u003c numberOfWords; i++) {","lastModifiedDate":"2023-02-15"},{"lineNumber":77,"author":{"gitId":"sansders"},"content":"            if (userInputArray[i].equals(\"/by\")) {","lastModifiedDate":"2023-02-15"},{"lineNumber":78,"author":{"gitId":"sansders"},"content":"                endOfTaskNameIndex \u003d i;","lastModifiedDate":"2023-02-15"},{"lineNumber":79,"author":{"gitId":"sansders"},"content":"                break;","lastModifiedDate":"2023-02-15"},{"lineNumber":80,"author":{"gitId":"sansders"},"content":"            }","lastModifiedDate":"2023-02-15"},{"lineNumber":81,"author":{"gitId":"sansders"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":82,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":83,"author":{"gitId":"sansders"},"content":"        // Add the taskName into index 0 of outputArray","lastModifiedDate":"2023-02-15"},{"lineNumber":84,"author":{"gitId":"sansders"},"content":"        for (int i \u003d 0; i \u003c endOfTaskNameIndex; i++) {","lastModifiedDate":"2023-02-15"},{"lineNumber":85,"author":{"gitId":"sansders"},"content":"            outputArray[0] +\u003d userInputArray[i] + \" \";","lastModifiedDate":"2023-02-15"},{"lineNumber":86,"author":{"gitId":"sansders"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":87,"author":{"gitId":"sansders"},"content":"        outputArray[0] \u003d outputArray[0].trim();","lastModifiedDate":"2023-02-15"},{"lineNumber":88,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":89,"author":{"gitId":"sansders"},"content":"        // Add the deadline into index 1 of outputArray","lastModifiedDate":"2023-02-15"},{"lineNumber":90,"author":{"gitId":"sansders"},"content":"        for (int i \u003d endOfTaskNameIndex + 1; i \u003c numberOfWords; i++) {","lastModifiedDate":"2023-02-15"},{"lineNumber":91,"author":{"gitId":"sansders"},"content":"            outputArray[1] +\u003d userInputArray[i] + \" \";","lastModifiedDate":"2023-02-15"},{"lineNumber":92,"author":{"gitId":"sansders"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":93,"author":{"gitId":"sansders"},"content":"        outputArray[1] \u003d outputArray[1].trim();","lastModifiedDate":"2023-02-15"},{"lineNumber":94,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":95,"author":{"gitId":"sansders"},"content":"        // Return {taskName, deadline}","lastModifiedDate":"2023-02-15"},{"lineNumber":96,"author":{"gitId":"sansders"},"content":"        return outputArray;","lastModifiedDate":"2023-02-15"},{"lineNumber":97,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":98,"author":{"gitId":"sansders"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":99,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":100,"author":{"gitId":"sansders"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":101,"author":{"gitId":"sansders"},"content":"    public String toString() {","lastModifiedDate":"2023-02-01"},{"lineNumber":102,"author":{"gitId":"sansders"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-02-01"},{"lineNumber":103,"author":{"gitId":"sansders"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":104,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":105,"author":{"gitId":"sansders"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"sansders":105}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sansders"},"content":"package task;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"sansders"},"content":"import error.DukeIllegalSyntaxException;","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"sansders"},"content":"public class Event extends Task {","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"sansders"},"content":"    private String from;","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"sansders"},"content":"    private String to;","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"sansders"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"sansders"},"content":"        super(description, \u0027E\u0027);","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"sansders"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"sansders"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"sansders"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"sansders"},"content":"    public String getFrom() {","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"sansders"},"content":"        return from;","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"sansders"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"sansders"},"content":"    public String getTo() {","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"sansders"},"content":"        return to;","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"sansders"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"sansders"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"sansders"},"content":"     * Method extracts the relevant information (description, from, and to fields) from the userInput.","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"sansders"},"content":"     * It returns a String array containing {description, from, to}.","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"sansders"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"sansders"},"content":"     * @param userInput The input entered by the user.","lastModifiedDate":"2023-02-18"},{"lineNumber":29,"author":{"gitId":"sansders"},"content":"     * @return An array of Strings containing each word of the input in each of the indexes.","lastModifiedDate":"2023-02-18"},{"lineNumber":30,"author":{"gitId":"sansders"},"content":"     * @throws DukeIllegalSyntaxException If the syntax entered by the user is invalid.","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"sansders"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"sansders"},"content":"    public static String[] handler(String userInput) throws DukeIllegalSyntaxException {","lastModifiedDate":"2023-02-15"},{"lineNumber":33,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":34,"author":{"gitId":"sansders"},"content":"        // Format of userInput: \u003ccommand\u003e \u003ctaskName\u003e /from \u003cfrom\u003e /to \u003cto\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":35,"author":{"gitId":"sansders"},"content":"        int numberOfWords \u003d userInput.split(\" \").length - 1;","lastModifiedDate":"2023-02-15"},{"lineNumber":36,"author":{"gitId":"sansders"},"content":"        int fromIndex \u003d 0;","lastModifiedDate":"2023-02-15"},{"lineNumber":37,"author":{"gitId":"sansders"},"content":"        int toIndex \u003d 0;","lastModifiedDate":"2023-02-15"},{"lineNumber":38,"author":{"gitId":"sansders"},"content":"        String[] userInputArray;","lastModifiedDate":"2023-02-15"},{"lineNumber":39,"author":{"gitId":"sansders"},"content":"        String[] outputArray \u003d {\"\", \"\", \"\"};","lastModifiedDate":"2023-02-15"},{"lineNumber":40,"author":{"gitId":"sansders"},"content":"        boolean isFromPassed \u003d false;","lastModifiedDate":"2023-02-15"},{"lineNumber":41,"author":{"gitId":"sansders"},"content":"        boolean isToPassed \u003d false;","lastModifiedDate":"2023-02-15"},{"lineNumber":42,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":43,"author":{"gitId":"sansders"},"content":"        // Checks if userInput contains \"\\from\" and \"\\to\"","lastModifiedDate":"2023-02-15"},{"lineNumber":44,"author":{"gitId":"sansders"},"content":"        if (!userInput.contains(\"/from\") || !userInput.contains(\"/to\")) {","lastModifiedDate":"2023-02-15"},{"lineNumber":45,"author":{"gitId":"sansders"},"content":"            throw new DukeIllegalSyntaxException();","lastModifiedDate":"2023-02-15"},{"lineNumber":46,"author":{"gitId":"sansders"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":47,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":48,"author":{"gitId":"sansders"},"content":"        // Remove `event` from","lastModifiedDate":"2023-02-15"},{"lineNumber":49,"author":{"gitId":"sansders"},"content":"        userInput \u003d userInput.replaceFirst(\"event \", \"\");","lastModifiedDate":"2023-02-15"},{"lineNumber":50,"author":{"gitId":"sansders"},"content":"        userInputArray \u003d userInput.split(\" \");","lastModifiedDate":"2023-02-15"},{"lineNumber":51,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":52,"author":{"gitId":"sansders"},"content":"        // Get indexes of `/from` and `/to` in userInput","lastModifiedDate":"2023-02-15"},{"lineNumber":53,"author":{"gitId":"sansders"},"content":"        for (int i \u003d 0; i \u003c numberOfWords; i++) {","lastModifiedDate":"2023-02-15"},{"lineNumber":54,"author":{"gitId":"sansders"},"content":"            if (userInputArray[i].equals(\"/from\") \u0026\u0026 !isFromPassed) {","lastModifiedDate":"2023-02-15"},{"lineNumber":55,"author":{"gitId":"sansders"},"content":"                fromIndex \u003d i;","lastModifiedDate":"2023-02-15"},{"lineNumber":56,"author":{"gitId":"sansders"},"content":"                isFromPassed \u003d true;","lastModifiedDate":"2023-02-15"},{"lineNumber":57,"author":{"gitId":"sansders"},"content":"            }","lastModifiedDate":"2023-02-15"},{"lineNumber":58,"author":{"gitId":"sansders"},"content":"            if (userInputArray[i].equals(\"/to\") \u0026\u0026 !isToPassed) {","lastModifiedDate":"2023-02-15"},{"lineNumber":59,"author":{"gitId":"sansders"},"content":"                toIndex \u003d i;","lastModifiedDate":"2023-02-15"},{"lineNumber":60,"author":{"gitId":"sansders"},"content":"                isToPassed \u003d true;","lastModifiedDate":"2023-02-15"},{"lineNumber":61,"author":{"gitId":"sansders"},"content":"            }","lastModifiedDate":"2023-02-15"},{"lineNumber":62,"author":{"gitId":"sansders"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":63,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":64,"author":{"gitId":"sansders"},"content":"        // Add the taskName into index 0 of outputArray","lastModifiedDate":"2023-02-15"},{"lineNumber":65,"author":{"gitId":"sansders"},"content":"        for (int i \u003d 0; i \u003c fromIndex; i++) {","lastModifiedDate":"2023-02-15"},{"lineNumber":66,"author":{"gitId":"sansders"},"content":"            outputArray[0] +\u003d userInputArray[i] + \" \";","lastModifiedDate":"2023-02-15"},{"lineNumber":67,"author":{"gitId":"sansders"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":68,"author":{"gitId":"sansders"},"content":"        outputArray[0] \u003d outputArray[0].trim();","lastModifiedDate":"2023-02-15"},{"lineNumber":69,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":70,"author":{"gitId":"sansders"},"content":"        // Add the `from` field into index 1 of outputArray","lastModifiedDate":"2023-02-15"},{"lineNumber":71,"author":{"gitId":"sansders"},"content":"        for (int i \u003d fromIndex + 1; i \u003c toIndex; i++) {","lastModifiedDate":"2023-02-15"},{"lineNumber":72,"author":{"gitId":"sansders"},"content":"            outputArray[1] +\u003d userInputArray[i] + \" \";","lastModifiedDate":"2023-02-15"},{"lineNumber":73,"author":{"gitId":"sansders"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":74,"author":{"gitId":"sansders"},"content":"        outputArray[1] \u003d outputArray[1].trim();","lastModifiedDate":"2023-02-15"},{"lineNumber":75,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":76,"author":{"gitId":"sansders"},"content":"        // Add the `to` field into index 2 of outputArray","lastModifiedDate":"2023-02-15"},{"lineNumber":77,"author":{"gitId":"sansders"},"content":"        for (int i \u003d toIndex + 1; i \u003c numberOfWords; i++) {","lastModifiedDate":"2023-02-15"},{"lineNumber":78,"author":{"gitId":"sansders"},"content":"            outputArray[2] +\u003d userInputArray[i] + \" \";","lastModifiedDate":"2023-02-15"},{"lineNumber":79,"author":{"gitId":"sansders"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":80,"author":{"gitId":"sansders"},"content":"        outputArray[2] \u003d outputArray[2].trim();","lastModifiedDate":"2023-02-15"},{"lineNumber":81,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":82,"author":{"gitId":"sansders"},"content":"        return outputArray;","lastModifiedDate":"2023-02-15"},{"lineNumber":83,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":84,"author":{"gitId":"sansders"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":85,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":86,"author":{"gitId":"sansders"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":87,"author":{"gitId":"sansders"},"content":"    public String toString() {","lastModifiedDate":"2023-02-01"},{"lineNumber":88,"author":{"gitId":"sansders"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-02-01"},{"lineNumber":89,"author":{"gitId":"sansders"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":90,"author":{"gitId":"sansders"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"sansders":90}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sansders"},"content":"package task;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"sansders"},"content":"import duke.PrintOperations;","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"sansders"},"content":"import error.DukeAlreadyMarkedException;","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"sansders"},"content":"public class Task {","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"sansders"},"content":"    private String description;","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"sansders"},"content":"    private boolean isDone;","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"sansders"},"content":"    private char taskType;","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"sansders"},"content":"    public Task(String description, char taskType) {","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"sansders"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"sansders"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"sansders"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"sansders"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"sansders"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"sansders"},"content":"        return this.description;","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"sansders"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"sansders"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"sansders"},"content":"        isDone \u003d done;","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"sansders"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":25,"author":{"gitId":"sansders"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"sansders"},"content":"        return isDone;","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"sansders"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"sansders"},"content":"    public char getTaskType() {","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"sansders"},"content":"        return taskType;","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"sansders"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":33,"author":{"gitId":"sansders"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-21"},{"lineNumber":34,"author":{"gitId":"sansders"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-21"},{"lineNumber":35,"author":{"gitId":"sansders"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":36,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":37,"author":{"gitId":"sansders"},"content":"    public void markAsDone() throws DukeAlreadyMarkedException {","lastModifiedDate":"2023-02-05"},{"lineNumber":38,"author":{"gitId":"sansders"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-02-05"},{"lineNumber":39,"author":{"gitId":"sansders"},"content":"            throw new DukeAlreadyMarkedException();","lastModifiedDate":"2023-02-05"},{"lineNumber":40,"author":{"gitId":"sansders"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":41,"author":{"gitId":"sansders"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-21"},{"lineNumber":42,"author":{"gitId":"sansders"},"content":"        PrintOperations.taskMarked(this);","lastModifiedDate":"2023-02-19"},{"lineNumber":43,"author":{"gitId":"sansders"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":44,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":45,"author":{"gitId":"sansders"},"content":"    public void markAsNotDone() throws DukeAlreadyMarkedException {","lastModifiedDate":"2023-02-05"},{"lineNumber":46,"author":{"gitId":"sansders"},"content":"        if (!this.isDone) {","lastModifiedDate":"2023-02-05"},{"lineNumber":47,"author":{"gitId":"sansders"},"content":"            throw new DukeAlreadyMarkedException();","lastModifiedDate":"2023-02-05"},{"lineNumber":48,"author":{"gitId":"sansders"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":49,"author":{"gitId":"sansders"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-21"},{"lineNumber":50,"author":{"gitId":"sansders"},"content":"        PrintOperations.taskUnmarked(this);","lastModifiedDate":"2023-02-19"},{"lineNumber":51,"author":{"gitId":"sansders"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":53,"author":{"gitId":"sansders"},"content":"    public String toString() {","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"sansders"},"content":"        return String.format(\"[%s] %s\", getStatusIcon(), getDescription());","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"sansders"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":56,"author":{"gitId":"sansders"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"sansders":56}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sansders"},"content":"package task;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"sansders"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"sansders"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"sansders"},"content":"        super(description, \u0027T\u0027);","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"sansders"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"sansders"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"sansders"},"content":"     * This method extracts the relevant information (description) from the userInput.","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"sansders"},"content":"     * It returns String containing the description of the Task.","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"sansders"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"sansders"},"content":"     * @param userInput The input entered by the user.","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"sansders"},"content":"     * @return A String containing the description of the Task.","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"sansders"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"sansders"},"content":"    public static String handler(String userInput) {","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"sansders"},"content":"        // Format of userInput: \u003ccommand\u003e \u003ctask_name\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"sansders"},"content":"        String taskName \u003d userInput.replaceFirst(\"todo \", \"\");","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"sansders"},"content":"        return taskName;","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"sansders"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"sansders"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"sansders"},"content":"    public String toString() {","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"sansders"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"sansders"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"sansders"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"sansders"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"sansders":28}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"sansders"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"sansders":1,"-":20}}]
