[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zeno-Zr"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Zeno-Zr"},"content":"    String date;","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Zeno-Zr"},"content":"    public Deadline(boolean isDone, String description, String date) {","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"Zeno-Zr"},"content":"        super(TypeOfTask.DEADLINE,isDone, description);","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"Zeno-Zr"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Zeno-Zr"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Zeno-Zr"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Zeno-Zr"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Zeno-Zr"},"content":"     * Returns the symbol for DEADLINE task","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Zeno-Zr"},"content":"     * @return D","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Zeno-Zr"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Zeno-Zr"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Zeno-Zr"},"content":"    public String getStatusForTypeOfTask() {","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Zeno-Zr"},"content":"        return \"D\";","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Zeno-Zr"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Zeno-Zr"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Zeno-Zr"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Zeno-Zr"},"content":"     * Prints out the deadline according to a format","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Zeno-Zr"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Zeno-Zr"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Zeno-Zr"},"content":"    public void printTask() {","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Zeno-Zr"},"content":"        System.out.println(formatString());","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"Zeno-Zr"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"Zeno-Zr"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"Zeno-Zr"},"content":"    public String formatString() {","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"Zeno-Zr"},"content":"        return (\".[\" + this.getStatusForTypeOfTask() + \"]\" +","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"Zeno-Zr"},"content":"                \"[\" + this.getStatusIcon() + \"] \" +","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Zeno-Zr"},"content":"                this.getDescription() +","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"Zeno-Zr"},"content":"                \"(by: \" + this.date + \")\");","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"Zeno-Zr"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"Zeno-Zr"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Zeno-Zr"},"content":"    public String getDate() {","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"Zeno-Zr"},"content":"        return this.date;","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"Zeno-Zr"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"Zeno-Zr"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"Zeno-Zr"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Zeno-Zr":36}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zeno-Zr"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"Zeno-Zr"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"Zeno-Zr"},"content":"import java.io.File;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"Zeno-Zr"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"Zeno-Zr"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"Zeno-Zr"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"Zeno-Zr"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"Zeno-Zr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Zeno-Zr"},"content":"import java.util.MissingFormatArgumentException;","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"Zeno-Zr"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"Zeno-Zr"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"Zeno-Zr"},"content":"    public static final String BYE_COMMAND \u003d \"bye\";","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Zeno-Zr"},"content":"    public static final String CHANGE_COMMAND \u003d \"change\";","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Zeno-Zr"},"content":"    public static final String LANG_COMMAND \u003d \"lang\";","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Zeno-Zr"},"content":"    public static final String LIST_COMMAND \u003d \"list\";","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Zeno-Zr"},"content":"    public static final String MARK_COMMAND \u003d \"mark\";","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Zeno-Zr"},"content":"    public static final String UNMARK_COMMAND \u003d \"unmark\";","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Zeno-Zr"},"content":"    public static final String DELETE_COMMAND \u003d \"delete\";","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"Zeno-Zr"},"content":"    public static final String TODO_COMMAND \u003d \"todo\";","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Zeno-Zr"},"content":"    public static final String DEADLINE_COMMAND \u003d \"deadline\";","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Zeno-Zr"},"content":"    public static final String DEADLINE_BY \u003d \"/by\";","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Zeno-Zr"},"content":"    public static final String EVENT_COMMAND \u003d \"event\";","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"Zeno-Zr"},"content":"    public static final String EVENT_START_FROM \u003d \"/from\";","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"Zeno-Zr"},"content":"    public static final String EVENT_END_TO \u003d \"/to\";","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"Zeno-Zr"},"content":"    /** A fixed sized buffer to trim strings at the right index */","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"Zeno-Zr"},"content":"    public static final int COMMAND_BUFFER \u003d 1;","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Zeno-Zr"},"content":"    /** The return result when a substring is not found */","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"Zeno-Zr"},"content":"    public static final int OUT_OF_BOUNDS \u003d -1;","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"Zeno-Zr"},"content":"    public static final String STORAGE_INFO_TXT \u003d \"storage-info.txt\";","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"Zeno-Zr"},"content":"    public static final String STORE_DIR \u003d \"store\";","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"Zeno-Zr"},"content":"    public static final String STORAGE_BUFFER \u003d \"~;~\";","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"Zeno-Zr"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"Zeno-Zr"},"content":"    /** Language state of the program. */","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"Zeno-Zr"},"content":"    public static boolean isSinglish \u003d false;","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"Zeno-Zr"},"content":"    /** A fixed sized array to store all the tasks entered from the user. */","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"Zeno-Zr"},"content":"    public static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"Zeno-Zr"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"Zeno-Zr"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"Zeno-Zr"},"content":"     * Toggles the language setting between normal and Singlish mode.","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"Zeno-Zr"},"content":"     * Prints to the output the changes made.","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"Zeno-Zr"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"Zeno-Zr"},"content":"    public static void changeLanguage() {","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"Zeno-Zr"},"content":"        isSinglish \u003d !isSinglish;","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"Zeno-Zr"},"content":"        Greeting.sayChangeLanguage(isSinglish);","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"Zeno-Zr"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"Zeno-Zr"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":48,"author":{"gitId":"Zeno-Zr"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"Zeno-Zr"},"content":"     * Adds the entered task to the list of tasks.","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"Zeno-Zr"},"content":"     * if the list of tasks is full, informs the user that the task list is full and no new tasks can be added.","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"Zeno-Zr"},"content":"     *","lastModifiedDate":"2023-02-11"},{"lineNumber":52,"author":{"gitId":"Zeno-Zr"},"content":"     * @param line String entered by user.","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"Zeno-Zr"},"content":"     * @param typeOfTask Type of tasks (TODO, DEADLINE, EVENT).","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"Zeno-Zr"},"content":"     * @param startDate startDate for EVENT, Deadline date for DEADLINE, null for TODO.","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"Zeno-Zr"},"content":"     * @param endDate endDate for EVENT, null for DEADLINE, null for TODO.","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"Zeno-Zr"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"Zeno-Zr"},"content":"    public static void addToList(String line, TypeOfTask typeOfTask, String startDate, String endDate) {","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"Zeno-Zr"},"content":"        if (typeOfTask.equals(TypeOfTask.TODO)) {","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"Zeno-Zr"},"content":"            Todo item \u003d new Todo(false, line);","lastModifiedDate":"2023-02-13"},{"lineNumber":60,"author":{"gitId":"Zeno-Zr"},"content":"            tasks.add(item);","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"Zeno-Zr"},"content":"        } else if (typeOfTask.equals(TypeOfTask.DEADLINE)) {","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"Zeno-Zr"},"content":"            Deadline item \u003d new Deadline(false, line, startDate);","lastModifiedDate":"2023-02-13"},{"lineNumber":63,"author":{"gitId":"Zeno-Zr"},"content":"            tasks.add(item);","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"Zeno-Zr"},"content":"        } else if (typeOfTask.equals(TypeOfTask.EVENT))  {","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"Zeno-Zr"},"content":"            Event item \u003d new Event(false, line, startDate, endDate);","lastModifiedDate":"2023-02-13"},{"lineNumber":66,"author":{"gitId":"Zeno-Zr"},"content":"            tasks.add(item);","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"Zeno-Zr"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"Zeno-Zr"},"content":"        Greeting.sayAddToList(isSinglish);","lastModifiedDate":"2023-02-04"},{"lineNumber":69,"author":{"gitId":"Zeno-Zr"},"content":"        printTask(tasks.get(tasks.size() - 1), tasks.size());","lastModifiedDate":"2023-02-11"},{"lineNumber":70,"author":{"gitId":"Zeno-Zr"},"content":"        Greeting.printHorizontalLines(isSinglish);","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"Zeno-Zr"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":72,"author":{"gitId":"Zeno-Zr"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":73,"author":{"gitId":"Zeno-Zr"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"Zeno-Zr"},"content":"     * Prints out the task passed into it.","lastModifiedDate":"2023-01-29"},{"lineNumber":75,"author":{"gitId":"Zeno-Zr"},"content":"     *","lastModifiedDate":"2023-02-11"},{"lineNumber":76,"author":{"gitId":"Zeno-Zr"},"content":"     * @param task The Task to be printed out","lastModifiedDate":"2023-02-11"},{"lineNumber":77,"author":{"gitId":"Zeno-Zr"},"content":"     * @param index The index of the respective task","lastModifiedDate":"2023-02-11"},{"lineNumber":78,"author":{"gitId":"Zeno-Zr"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":79,"author":{"gitId":"Zeno-Zr"},"content":"    public static void printTask(Task task, int index) {","lastModifiedDate":"2023-02-11"},{"lineNumber":80,"author":{"gitId":"Zeno-Zr"},"content":"        System.out.print(index);","lastModifiedDate":"2023-02-11"},{"lineNumber":81,"author":{"gitId":"Zeno-Zr"},"content":"        task.printTask();","lastModifiedDate":"2023-01-29"},{"lineNumber":82,"author":{"gitId":"Zeno-Zr"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":83,"author":{"gitId":"Zeno-Zr"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":84,"author":{"gitId":"Zeno-Zr"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"Zeno-Zr"},"content":"     * Prints out the entire list of tasks entered by the user.","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"Zeno-Zr"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"Zeno-Zr"},"content":"    public static void printList() {","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"Zeno-Zr"},"content":"        int index \u003d 1;","lastModifiedDate":"2023-02-11"},{"lineNumber":89,"author":{"gitId":"Zeno-Zr"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-01-28"},{"lineNumber":90,"author":{"gitId":"Zeno-Zr"},"content":"            printTask(task, index);","lastModifiedDate":"2023-02-11"},{"lineNumber":91,"author":{"gitId":"Zeno-Zr"},"content":"            index++;","lastModifiedDate":"2023-02-11"},{"lineNumber":92,"author":{"gitId":"Zeno-Zr"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":93,"author":{"gitId":"Zeno-Zr"},"content":"        Greeting.printHorizontalLines(isSinglish);","lastModifiedDate":"2023-01-29"},{"lineNumber":94,"author":{"gitId":"Zeno-Zr"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":95,"author":{"gitId":"Zeno-Zr"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":96,"author":{"gitId":"Zeno-Zr"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":97,"author":{"gitId":"Zeno-Zr"},"content":"     * Marks or Unmark the selected task whether it is done, prints out the selected task alongside its state.","lastModifiedDate":"2023-01-26"},{"lineNumber":98,"author":{"gitId":"Zeno-Zr"},"content":"     * If the user gives an invalid index, informs the user about it.","lastModifiedDate":"2023-01-26"},{"lineNumber":99,"author":{"gitId":"Zeno-Zr"},"content":"     * Does nothing if the user trys to mark a marked task and vice versa.","lastModifiedDate":"2023-01-29"},{"lineNumber":100,"author":{"gitId":"Zeno-Zr"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":101,"author":{"gitId":"Zeno-Zr"},"content":"     * @param index The index of the task selected to be marked or unmarked.","lastModifiedDate":"2023-01-26"},{"lineNumber":102,"author":{"gitId":"Zeno-Zr"},"content":"     * @param isMark Whether to mark or unmark the task.","lastModifiedDate":"2023-01-26"},{"lineNumber":103,"author":{"gitId":"Zeno-Zr"},"content":"     * @throws IndexOutOfBoundsException When the user keys an index that is out of bounds.","lastModifiedDate":"2023-02-11"},{"lineNumber":104,"author":{"gitId":"Zeno-Zr"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":105,"author":{"gitId":"Zeno-Zr"},"content":"    public static void markTask(int index, boolean isMark) throws IndexOutOfBoundsException {","lastModifiedDate":"2023-02-05"},{"lineNumber":106,"author":{"gitId":"Zeno-Zr"},"content":"        index--;","lastModifiedDate":"2023-01-24"},{"lineNumber":107,"author":{"gitId":"Zeno-Zr"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2023-01-28"},{"lineNumber":108,"author":{"gitId":"Zeno-Zr"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2023-02-05"},{"lineNumber":109,"author":{"gitId":"Zeno-Zr"},"content":"        } else {","lastModifiedDate":"2023-01-24"},{"lineNumber":110,"author":{"gitId":"Zeno-Zr"},"content":"            if (tasks.get(index).getIsDone() !\u003d isMark) {","lastModifiedDate":"2023-01-28"},{"lineNumber":111,"author":{"gitId":"Zeno-Zr"},"content":"                tasks.get(index).switchIsDone();","lastModifiedDate":"2023-01-28"},{"lineNumber":112,"author":{"gitId":"Zeno-Zr"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":113,"author":{"gitId":"Zeno-Zr"},"content":"            Greeting.sayUpdatedTask(isSinglish);","lastModifiedDate":"2023-01-29"},{"lineNumber":114,"author":{"gitId":"Zeno-Zr"},"content":"            printTask(tasks.get(index), index + 1);","lastModifiedDate":"2023-02-11"},{"lineNumber":115,"author":{"gitId":"Zeno-Zr"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":116,"author":{"gitId":"Zeno-Zr"},"content":"        Greeting.printHorizontalLines(isSinglish);","lastModifiedDate":"2023-02-11"},{"lineNumber":117,"author":{"gitId":"Zeno-Zr"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":118,"author":{"gitId":"Zeno-Zr"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":119,"author":{"gitId":"Zeno-Zr"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":120,"author":{"gitId":"Zeno-Zr"},"content":"     * Deletes the task at the index specfied from the list","lastModifiedDate":"2023-02-11"},{"lineNumber":121,"author":{"gitId":"Zeno-Zr"},"content":"     * If the user gives an invalid index, informs the user about it.","lastModifiedDate":"2023-02-11"},{"lineNumber":122,"author":{"gitId":"Zeno-Zr"},"content":"     *","lastModifiedDate":"2023-02-11"},{"lineNumber":123,"author":{"gitId":"Zeno-Zr"},"content":"     * @param index The index of the task to be deleted","lastModifiedDate":"2023-02-11"},{"lineNumber":124,"author":{"gitId":"Zeno-Zr"},"content":"     * @throws IndexOutOfBoundsException yyWhen the user keys an index that is out of bounds.","lastModifiedDate":"2023-02-11"},{"lineNumber":125,"author":{"gitId":"Zeno-Zr"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":126,"author":{"gitId":"Zeno-Zr"},"content":"    public static void deleteTask(int index) {","lastModifiedDate":"2023-02-11"},{"lineNumber":127,"author":{"gitId":"Zeno-Zr"},"content":"        index--;","lastModifiedDate":"2023-02-11"},{"lineNumber":128,"author":{"gitId":"Zeno-Zr"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2023-02-11"},{"lineNumber":129,"author":{"gitId":"Zeno-Zr"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2023-02-11"},{"lineNumber":130,"author":{"gitId":"Zeno-Zr"},"content":"        } else {","lastModifiedDate":"2023-02-11"},{"lineNumber":131,"author":{"gitId":"Zeno-Zr"},"content":"            Greeting.sayDeleteTaskFromList(isSinglish);","lastModifiedDate":"2023-02-11"},{"lineNumber":132,"author":{"gitId":"Zeno-Zr"},"content":"            printTask(tasks.get(index), index + 1);","lastModifiedDate":"2023-02-13"},{"lineNumber":133,"author":{"gitId":"Zeno-Zr"},"content":"            tasks.remove(index);","lastModifiedDate":"2023-02-11"},{"lineNumber":134,"author":{"gitId":"Zeno-Zr"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":135,"author":{"gitId":"Zeno-Zr"},"content":"        Greeting.printHorizontalLines(isSinglish);","lastModifiedDate":"2023-02-04"},{"lineNumber":136,"author":{"gitId":"Zeno-Zr"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":137,"author":{"gitId":"Zeno-Zr"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":138,"author":{"gitId":"Zeno-Zr"},"content":"    public static void updateList(Path storageFilePath) throws IOException {","lastModifiedDate":"2023-02-13"},{"lineNumber":139,"author":{"gitId":"Zeno-Zr"},"content":"        try (BufferedWriter bufferedWriter \u003d new BufferedWriter(","lastModifiedDate":"2023-02-13"},{"lineNumber":140,"author":{"gitId":"Zeno-Zr"},"content":"                (new FileWriter(storageFilePath.toFile())))) {","lastModifiedDate":"2023-02-13"},{"lineNumber":141,"author":{"gitId":"Zeno-Zr"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-02-13"},{"lineNumber":142,"author":{"gitId":"Zeno-Zr"},"content":"                String line \u003d \"error\";","lastModifiedDate":"2023-02-13"},{"lineNumber":143,"author":{"gitId":"Zeno-Zr"},"content":"                if (task.getTypeOfTask() \u003d\u003d TypeOfTask.TODO) {","lastModifiedDate":"2023-02-13"},{"lineNumber":144,"author":{"gitId":"Zeno-Zr"},"content":"                    line \u003d task.getTypeOfTask() + STORAGE_BUFFER","lastModifiedDate":"2023-02-13"},{"lineNumber":145,"author":{"gitId":"Zeno-Zr"},"content":"                            + task.getStatusIcon() + STORAGE_BUFFER","lastModifiedDate":"2023-02-13"},{"lineNumber":146,"author":{"gitId":"Zeno-Zr"},"content":"                            + task.getDescription();","lastModifiedDate":"2023-02-13"},{"lineNumber":147,"author":{"gitId":"Zeno-Zr"},"content":"                } else if (task.getTypeOfTask() \u003d\u003d TypeOfTask.DEADLINE) {","lastModifiedDate":"2023-02-13"},{"lineNumber":148,"author":{"gitId":"Zeno-Zr"},"content":"                    line \u003d task.getTypeOfTask() + STORAGE_BUFFER","lastModifiedDate":"2023-02-13"},{"lineNumber":149,"author":{"gitId":"Zeno-Zr"},"content":"                            + task.getStatusIcon() + STORAGE_BUFFER","lastModifiedDate":"2023-02-13"},{"lineNumber":150,"author":{"gitId":"Zeno-Zr"},"content":"                            + task.getDescription() + STORAGE_BUFFER","lastModifiedDate":"2023-02-13"},{"lineNumber":151,"author":{"gitId":"Zeno-Zr"},"content":"                            + ((Deadline) task).getDate();","lastModifiedDate":"2023-02-13"},{"lineNumber":152,"author":{"gitId":"Zeno-Zr"},"content":"                } else if (task.getTypeOfTask() \u003d\u003d TypeOfTask.EVENT) {","lastModifiedDate":"2023-02-13"},{"lineNumber":153,"author":{"gitId":"Zeno-Zr"},"content":"                    line \u003d task.getTypeOfTask() + STORAGE_BUFFER","lastModifiedDate":"2023-02-13"},{"lineNumber":154,"author":{"gitId":"Zeno-Zr"},"content":"                            + task.getStatusIcon() + STORAGE_BUFFER","lastModifiedDate":"2023-02-13"},{"lineNumber":155,"author":{"gitId":"Zeno-Zr"},"content":"                            + task.getDescription() + STORAGE_BUFFER","lastModifiedDate":"2023-02-13"},{"lineNumber":156,"author":{"gitId":"Zeno-Zr"},"content":"                            + ((Event) task).getStartDate() + STORAGE_BUFFER","lastModifiedDate":"2023-02-13"},{"lineNumber":157,"author":{"gitId":"Zeno-Zr"},"content":"                            + ((Event) task).getEndDate();","lastModifiedDate":"2023-02-13"},{"lineNumber":158,"author":{"gitId":"Zeno-Zr"},"content":"                }","lastModifiedDate":"2023-02-13"},{"lineNumber":159,"author":{"gitId":"Zeno-Zr"},"content":"                bufferedWriter.write(line);","lastModifiedDate":"2023-02-13"},{"lineNumber":160,"author":{"gitId":"Zeno-Zr"},"content":"                bufferedWriter.newLine();","lastModifiedDate":"2023-02-13"},{"lineNumber":161,"author":{"gitId":"Zeno-Zr"},"content":"            }","lastModifiedDate":"2023-02-13"},{"lineNumber":162,"author":{"gitId":"Zeno-Zr"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":163,"author":{"gitId":"Zeno-Zr"},"content":"            throw new IOException();","lastModifiedDate":"2023-02-13"},{"lineNumber":164,"author":{"gitId":"Zeno-Zr"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":165,"author":{"gitId":"Zeno-Zr"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":166,"author":{"gitId":"Zeno-Zr"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":167,"author":{"gitId":"Zeno-Zr"},"content":"    public static void readAndStoreList(Path storageFilePath) throws IOException {","lastModifiedDate":"2023-02-13"},{"lineNumber":168,"author":{"gitId":"Zeno-Zr"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(storageFilePath.toFile()))) {","lastModifiedDate":"2023-02-13"},{"lineNumber":169,"author":{"gitId":"Zeno-Zr"},"content":"            String line;","lastModifiedDate":"2023-02-13"},{"lineNumber":170,"author":{"gitId":"Zeno-Zr"},"content":"            line \u003d reader.readLine();","lastModifiedDate":"2023-02-13"},{"lineNumber":171,"author":{"gitId":"Zeno-Zr"},"content":"            int index \u003d 1;","lastModifiedDate":"2023-02-13"},{"lineNumber":172,"author":{"gitId":"Zeno-Zr"},"content":"            while (line !\u003d null) {","lastModifiedDate":"2023-02-13"},{"lineNumber":173,"author":{"gitId":"Zeno-Zr"},"content":"                String[] commands \u003d line.split(STORAGE_BUFFER);","lastModifiedDate":"2023-02-13"},{"lineNumber":174,"author":{"gitId":"Zeno-Zr"},"content":"                System.out.print(index);","lastModifiedDate":"2023-02-13"},{"lineNumber":175,"author":{"gitId":"Zeno-Zr"},"content":"                if (commands[0].equals(TypeOfTask.TODO.toString())) {","lastModifiedDate":"2023-02-13"},{"lineNumber":176,"author":{"gitId":"Zeno-Zr"},"content":"                    Todo todo \u003d new Todo((commands[1].equals(\"X\")), commands[2]);","lastModifiedDate":"2023-02-13"},{"lineNumber":177,"author":{"gitId":"Zeno-Zr"},"content":"                    todo.printTask();","lastModifiedDate":"2023-02-13"},{"lineNumber":178,"author":{"gitId":"Zeno-Zr"},"content":"                    tasks.add(todo);","lastModifiedDate":"2023-02-13"},{"lineNumber":179,"author":{"gitId":"Zeno-Zr"},"content":"                } else if (commands[0].equals(TypeOfTask.DEADLINE.toString())) {","lastModifiedDate":"2023-02-13"},{"lineNumber":180,"author":{"gitId":"Zeno-Zr"},"content":"                    Deadline deadline \u003d new Deadline((commands[1].equals(\"X\")), commands[2], commands[3]);","lastModifiedDate":"2023-02-13"},{"lineNumber":181,"author":{"gitId":"Zeno-Zr"},"content":"                    deadline.printTask();","lastModifiedDate":"2023-02-13"},{"lineNumber":182,"author":{"gitId":"Zeno-Zr"},"content":"                    tasks.add(deadline);","lastModifiedDate":"2023-02-13"},{"lineNumber":183,"author":{"gitId":"Zeno-Zr"},"content":"                } else if (commands[0].equals(TypeOfTask.EVENT.toString())) {","lastModifiedDate":"2023-02-13"},{"lineNumber":184,"author":{"gitId":"Zeno-Zr"},"content":"                    Event event \u003d new Event((commands[1].equals(\"X\")), commands[2], commands[3], commands[4]);","lastModifiedDate":"2023-02-13"},{"lineNumber":185,"author":{"gitId":"Zeno-Zr"},"content":"                    event.printTask();","lastModifiedDate":"2023-02-13"},{"lineNumber":186,"author":{"gitId":"Zeno-Zr"},"content":"                    tasks.add(event);","lastModifiedDate":"2023-02-13"},{"lineNumber":187,"author":{"gitId":"Zeno-Zr"},"content":"                }","lastModifiedDate":"2023-02-13"},{"lineNumber":188,"author":{"gitId":"Zeno-Zr"},"content":"                line \u003d reader.readLine();","lastModifiedDate":"2023-02-13"},{"lineNumber":189,"author":{"gitId":"Zeno-Zr"},"content":"                index++;","lastModifiedDate":"2023-02-13"},{"lineNumber":190,"author":{"gitId":"Zeno-Zr"},"content":"            }","lastModifiedDate":"2023-02-13"},{"lineNumber":191,"author":{"gitId":"Zeno-Zr"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":192,"author":{"gitId":"Zeno-Zr"},"content":"            throw new IOException();","lastModifiedDate":"2023-02-13"},{"lineNumber":193,"author":{"gitId":"Zeno-Zr"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":194,"author":{"gitId":"Zeno-Zr"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":195,"author":{"gitId":"Zeno-Zr"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":196,"author":{"gitId":"Zeno-Zr"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2023-02-13"},{"lineNumber":197,"author":{"gitId":"Zeno-Zr"},"content":"        Greeting.sayHello(isSinglish);","lastModifiedDate":"2023-01-29"},{"lineNumber":198,"author":{"gitId":"Zeno-Zr"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":199,"author":{"gitId":"Zeno-Zr"},"content":"        Path storageFilePath \u003d loadStorageFolderAndFile();","lastModifiedDate":"2023-02-13"},{"lineNumber":200,"author":{"gitId":"Zeno-Zr"},"content":"        readAndStoreList(storageFilePath);","lastModifiedDate":"2023-02-13"},{"lineNumber":201,"author":{"gitId":"Zeno-Zr"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":202,"author":{"gitId":"Zeno-Zr"},"content":"        while (true) {","lastModifiedDate":"2023-01-22"},{"lineNumber":203,"author":{"gitId":"Zeno-Zr"},"content":"            Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-22"},{"lineNumber":204,"author":{"gitId":"Zeno-Zr"},"content":"            String line \u003d in.nextLine();","lastModifiedDate":"2023-01-22"},{"lineNumber":205,"author":{"gitId":"Zeno-Zr"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":206,"author":{"gitId":"Zeno-Zr"},"content":"            String[] commands \u003d line.split(\" \");","lastModifiedDate":"2023-01-22"},{"lineNumber":207,"author":{"gitId":"Zeno-Zr"},"content":"            boolean isBye \u003d commands[0].equals(BYE_COMMAND);","lastModifiedDate":"2023-01-29"},{"lineNumber":208,"author":{"gitId":"Zeno-Zr"},"content":"            boolean isValidChangeLangCommand \u003d commands[0].equals(CHANGE_COMMAND) \u0026\u0026 commands.length \u003d\u003d 2 \u0026\u0026 commands[1].equals(LANG_COMMAND);","lastModifiedDate":"2023-01-29"},{"lineNumber":209,"author":{"gitId":"Zeno-Zr"},"content":"            boolean isValidPrintListCommand \u003d commands[0].equals(LIST_COMMAND) \u0026\u0026 commands.length \u003d\u003d 1;","lastModifiedDate":"2023-01-29"},{"lineNumber":210,"author":{"gitId":"Zeno-Zr"},"content":"            boolean isValidMarkOrUnmarkCommand \u003d (commands[0].equals(MARK_COMMAND) || commands[0].equals(UNMARK_COMMAND)) \u0026\u0026 commands.length \u003d\u003d 2;","lastModifiedDate":"2023-01-29"},{"lineNumber":211,"author":{"gitId":"Zeno-Zr"},"content":"            boolean isValidDeleteCommand \u003d commands[0].equals(DELETE_COMMAND) \u0026\u0026 commands.length \u003d\u003d 2;","lastModifiedDate":"2023-02-11"},{"lineNumber":212,"author":{"gitId":"Zeno-Zr"},"content":"            boolean isTodo \u003d commands[0].equals(TODO_COMMAND);","lastModifiedDate":"2023-01-29"},{"lineNumber":213,"author":{"gitId":"Zeno-Zr"},"content":"            boolean isDeadline \u003d commands[0].equals(DEADLINE_COMMAND);","lastModifiedDate":"2023-01-29"},{"lineNumber":214,"author":{"gitId":"Zeno-Zr"},"content":"            boolean isEvent \u003d commands[0].equals(EVENT_COMMAND);","lastModifiedDate":"2023-01-29"},{"lineNumber":215,"author":{"gitId":"Zeno-Zr"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":216,"author":{"gitId":"Zeno-Zr"},"content":"            try {","lastModifiedDate":"2023-02-05"},{"lineNumber":217,"author":{"gitId":"Zeno-Zr"},"content":"                if (isBye) {","lastModifiedDate":"2023-01-29"},{"lineNumber":218,"author":{"gitId":"Zeno-Zr"},"content":"                    Greeting.sayGoodbye(isSinglish);","lastModifiedDate":"2023-01-29"},{"lineNumber":219,"author":{"gitId":"Zeno-Zr"},"content":"                    break;","lastModifiedDate":"2023-01-22"},{"lineNumber":220,"author":{"gitId":"Zeno-Zr"},"content":"                } else if (isValidChangeLangCommand) {","lastModifiedDate":"2023-01-29"},{"lineNumber":221,"author":{"gitId":"Zeno-Zr"},"content":"                    changeLanguage();","lastModifiedDate":"2023-01-22"},{"lineNumber":222,"author":{"gitId":"Zeno-Zr"},"content":"                } else if (isValidPrintListCommand) {","lastModifiedDate":"2023-01-29"},{"lineNumber":223,"author":{"gitId":"Zeno-Zr"},"content":"                    printList();","lastModifiedDate":"2023-01-26"},{"lineNumber":224,"author":{"gitId":"Zeno-Zr"},"content":"                } else if (isValidMarkOrUnmarkCommand) {","lastModifiedDate":"2023-01-29"},{"lineNumber":225,"author":{"gitId":"Zeno-Zr"},"content":"                    checkAndMarkTask(commands);","lastModifiedDate":"2023-01-29"},{"lineNumber":226,"author":{"gitId":"Zeno-Zr"},"content":"                    updateList(storageFilePath);","lastModifiedDate":"2023-02-13"},{"lineNumber":227,"author":{"gitId":"Zeno-Zr"},"content":"                } else if (isValidDeleteCommand) {","lastModifiedDate":"2023-02-11"},{"lineNumber":228,"author":{"gitId":"Zeno-Zr"},"content":"                    checkAndDeleteTask(commands);","lastModifiedDate":"2023-02-11"},{"lineNumber":229,"author":{"gitId":"Zeno-Zr"},"content":"                    updateList(storageFilePath);","lastModifiedDate":"2023-02-13"},{"lineNumber":230,"author":{"gitId":"Zeno-Zr"},"content":"                } else if (isTodo) {","lastModifiedDate":"2023-01-29"},{"lineNumber":231,"author":{"gitId":"Zeno-Zr"},"content":"                    addTodo(line);","lastModifiedDate":"2023-01-29"},{"lineNumber":232,"author":{"gitId":"Zeno-Zr"},"content":"                    updateList(storageFilePath);","lastModifiedDate":"2023-02-13"},{"lineNumber":233,"author":{"gitId":"Zeno-Zr"},"content":"                } else if (isDeadline) {","lastModifiedDate":"2023-01-29"},{"lineNumber":234,"author":{"gitId":"Zeno-Zr"},"content":"                    addDeadline(line);","lastModifiedDate":"2023-01-29"},{"lineNumber":235,"author":{"gitId":"Zeno-Zr"},"content":"                    updateList(storageFilePath);","lastModifiedDate":"2023-02-13"},{"lineNumber":236,"author":{"gitId":"Zeno-Zr"},"content":"                } else if (isEvent) {","lastModifiedDate":"2023-01-29"},{"lineNumber":237,"author":{"gitId":"Zeno-Zr"},"content":"                    addEvent(line);","lastModifiedDate":"2023-01-29"},{"lineNumber":238,"author":{"gitId":"Zeno-Zr"},"content":"                    updateList(storageFilePath);","lastModifiedDate":"2023-02-13"},{"lineNumber":239,"author":{"gitId":"Zeno-Zr"},"content":"                } else {","lastModifiedDate":"2023-01-22"},{"lineNumber":240,"author":{"gitId":"Zeno-Zr"},"content":"                    throw new IllegalAccessException();","lastModifiedDate":"2023-02-05"},{"lineNumber":241,"author":{"gitId":"Zeno-Zr"},"content":"                }","lastModifiedDate":"2023-02-05"},{"lineNumber":242,"author":{"gitId":"Zeno-Zr"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-05"},{"lineNumber":243,"author":{"gitId":"Zeno-Zr"},"content":"                Greeting.warnOutOfRange(isSinglish);","lastModifiedDate":"2023-02-05"},{"lineNumber":244,"author":{"gitId":"Zeno-Zr"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-05"},{"lineNumber":245,"author":{"gitId":"Zeno-Zr"},"content":"                Greeting.warnWrongSyntax(isSinglish);","lastModifiedDate":"2023-02-05"},{"lineNumber":246,"author":{"gitId":"Zeno-Zr"},"content":"            } catch (IllegalAccessException e) {","lastModifiedDate":"2023-02-05"},{"lineNumber":247,"author":{"gitId":"Zeno-Zr"},"content":"                Greeting.warnWrongSyntax(isSinglish);","lastModifiedDate":"2023-01-29"},{"lineNumber":248,"author":{"gitId":"Zeno-Zr"},"content":"            } catch (MissingFormatArgumentException e) {","lastModifiedDate":"2023-02-05"},{"lineNumber":249,"author":{"gitId":"Zeno-Zr"},"content":"                Greeting.warnEmptyDesc(isSinglish);","lastModifiedDate":"2023-02-05"},{"lineNumber":250,"author":{"gitId":"Zeno-Zr"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":251,"author":{"gitId":"Zeno-Zr"},"content":"                throw new RuntimeException(e);","lastModifiedDate":"2023-02-13"},{"lineNumber":252,"author":{"gitId":"Zeno-Zr"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":253,"author":{"gitId":"Zeno-Zr"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":254,"author":{"gitId":"Zeno-Zr"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":255,"author":{"gitId":"Zeno-Zr"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":256,"author":{"gitId":"Zeno-Zr"},"content":"    private static Path loadStorageFolderAndFile() {","lastModifiedDate":"2023-02-13"},{"lineNumber":257,"author":{"gitId":"Zeno-Zr"},"content":"        new File(\"store\").mkdirs();","lastModifiedDate":"2023-02-13"},{"lineNumber":258,"author":{"gitId":"Zeno-Zr"},"content":"        String ipFolderPath \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2023-02-13"},{"lineNumber":259,"author":{"gitId":"Zeno-Zr"},"content":"        Path storageFolderPath \u003d java.nio.file.Paths.get(ipFolderPath, STORE_DIR);","lastModifiedDate":"2023-02-13"},{"lineNumber":260,"author":{"gitId":"Zeno-Zr"},"content":"        Path storageFilePath \u003d java.nio.file.Paths.get(storageFolderPath.toString(), STORAGE_INFO_TXT);","lastModifiedDate":"2023-02-13"},{"lineNumber":261,"author":{"gitId":"Zeno-Zr"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":262,"author":{"gitId":"Zeno-Zr"},"content":"        try {","lastModifiedDate":"2023-02-13"},{"lineNumber":263,"author":{"gitId":"Zeno-Zr"},"content":"            java.nio.file.Files.createFile(storageFilePath);","lastModifiedDate":"2023-02-13"},{"lineNumber":264,"author":{"gitId":"Zeno-Zr"},"content":"            System.out.println(\"File created successfully at: \" + storageFilePath);","lastModifiedDate":"2023-02-13"},{"lineNumber":265,"author":{"gitId":"Zeno-Zr"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":266,"author":{"gitId":"Zeno-Zr"},"content":"            System.out.println(\"File already exist: \" + e.getMessage());","lastModifiedDate":"2023-02-13"},{"lineNumber":267,"author":{"gitId":"Zeno-Zr"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":268,"author":{"gitId":"Zeno-Zr"},"content":"        return storageFilePath;","lastModifiedDate":"2023-02-13"},{"lineNumber":269,"author":{"gitId":"Zeno-Zr"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":270,"author":{"gitId":"Zeno-Zr"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":271,"author":{"gitId":"Zeno-Zr"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":272,"author":{"gitId":"Zeno-Zr"},"content":"     * Checks the validity of the event command.","lastModifiedDate":"2023-01-29"},{"lineNumber":273,"author":{"gitId":"Zeno-Zr"},"content":"     * adds the event to the list if command has the right syntax.","lastModifiedDate":"2023-01-29"},{"lineNumber":274,"author":{"gitId":"Zeno-Zr"},"content":"     * otherwise, it informs the user that it has a wrong syntax.","lastModifiedDate":"2023-01-29"},{"lineNumber":275,"author":{"gitId":"Zeno-Zr"},"content":"     *","lastModifiedDate":"2023-02-11"},{"lineNumber":276,"author":{"gitId":"Zeno-Zr"},"content":"     * @param line String entered by the user.","lastModifiedDate":"2023-01-29"},{"lineNumber":277,"author":{"gitId":"Zeno-Zr"},"content":"     * @throws MissingFormatArgumentException When the user fails to key in all the arguments.","lastModifiedDate":"2023-02-11"},{"lineNumber":278,"author":{"gitId":"Zeno-Zr"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":279,"author":{"gitId":"Zeno-Zr"},"content":"    private static void addEvent(String line) throws MissingFormatArgumentException{","lastModifiedDate":"2023-02-05"},{"lineNumber":280,"author":{"gitId":"Zeno-Zr"},"content":"        int indexOfStartDate \u003d line.indexOf(EVENT_START_FROM);","lastModifiedDate":"2023-01-29"},{"lineNumber":281,"author":{"gitId":"Zeno-Zr"},"content":"        int indexOfEndDate \u003d line.indexOf(EVENT_END_TO);","lastModifiedDate":"2023-01-29"},{"lineNumber":282,"author":{"gitId":"Zeno-Zr"},"content":"        boolean isOutOfBounds \u003d indexOfStartDate \u003d\u003d OUT_OF_BOUNDS || indexOfEndDate \u003d\u003d OUT_OF_BOUNDS;","lastModifiedDate":"2023-02-05"},{"lineNumber":283,"author":{"gitId":"Zeno-Zr"},"content":"        boolean isMissingDescription \u003d indexOfStartDate \u003c\u003d EVENT_COMMAND.length() + COMMAND_BUFFER;","lastModifiedDate":"2023-02-05"},{"lineNumber":284,"author":{"gitId":"Zeno-Zr"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":285,"author":{"gitId":"Zeno-Zr"},"content":"        if (!isOutOfBounds \u0026\u0026 !isMissingDescription) {","lastModifiedDate":"2023-02-05"},{"lineNumber":286,"author":{"gitId":"Zeno-Zr"},"content":"            // +6 for \"/from \" length","lastModifiedDate":"2023-01-29"},{"lineNumber":287,"author":{"gitId":"Zeno-Zr"},"content":"            String startOfDate \u003d line.substring(indexOfStartDate + EVENT_START_FROM.length() + COMMAND_BUFFER, indexOfEndDate);","lastModifiedDate":"2023-01-29"},{"lineNumber":288,"author":{"gitId":"Zeno-Zr"},"content":"            // +5 for \"/to \" length","lastModifiedDate":"2023-01-29"},{"lineNumber":289,"author":{"gitId":"Zeno-Zr"},"content":"            String endOfDate \u003d line.substring(indexOfEndDate + EVENT_END_TO.length() + COMMAND_BUFFER);","lastModifiedDate":"2023-01-29"},{"lineNumber":290,"author":{"gitId":"Zeno-Zr"},"content":"            // +7 for \"event \" length","lastModifiedDate":"2023-02-11"},{"lineNumber":291,"author":{"gitId":"Zeno-Zr"},"content":"            String descOfTask \u003d line.substring(EVENT_COMMAND.length() + COMMAND_BUFFER, indexOfStartDate);","lastModifiedDate":"2023-01-29"},{"lineNumber":292,"author":{"gitId":"Zeno-Zr"},"content":"            addToList(descOfTask, TypeOfTask.EVENT, startOfDate, endOfDate);","lastModifiedDate":"2023-01-29"},{"lineNumber":293,"author":{"gitId":"Zeno-Zr"},"content":"        } else if (isOutOfBounds) {","lastModifiedDate":"2023-02-05"},{"lineNumber":294,"author":{"gitId":"Zeno-Zr"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2023-02-05"},{"lineNumber":295,"author":{"gitId":"Zeno-Zr"},"content":"        } else if (isMissingDescription) {","lastModifiedDate":"2023-02-05"},{"lineNumber":296,"author":{"gitId":"Zeno-Zr"},"content":"            throw new MissingFormatArgumentException(\"Missing description\");","lastModifiedDate":"2023-02-05"},{"lineNumber":297,"author":{"gitId":"Zeno-Zr"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":298,"author":{"gitId":"Zeno-Zr"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":299,"author":{"gitId":"Zeno-Zr"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":300,"author":{"gitId":"Zeno-Zr"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":301,"author":{"gitId":"Zeno-Zr"},"content":"     * Checks the validity of the deadline command.","lastModifiedDate":"2023-01-29"},{"lineNumber":302,"author":{"gitId":"Zeno-Zr"},"content":"     * adds the deadline to the list if command has the right syntax.","lastModifiedDate":"2023-01-29"},{"lineNumber":303,"author":{"gitId":"Zeno-Zr"},"content":"     * otherwise, it informs the user that it has a wrong syntax.","lastModifiedDate":"2023-01-29"},{"lineNumber":304,"author":{"gitId":"Zeno-Zr"},"content":"     *","lastModifiedDate":"2023-02-11"},{"lineNumber":305,"author":{"gitId":"Zeno-Zr"},"content":"     * @param line String entered by the user.","lastModifiedDate":"2023-01-29"},{"lineNumber":306,"author":{"gitId":"Zeno-Zr"},"content":"     * @throws IndexOutOfBoundsException When the user keys an index that is out of bounds.","lastModifiedDate":"2023-02-11"},{"lineNumber":307,"author":{"gitId":"Zeno-Zr"},"content":"     * @throws MissingFormatArgumentException When the user fails to key in all the arguments.","lastModifiedDate":"2023-02-11"},{"lineNumber":308,"author":{"gitId":"Zeno-Zr"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":309,"author":{"gitId":"Zeno-Zr"},"content":"    private static void addDeadline(String line) throws IndexOutOfBoundsException, MissingFormatArgumentException {","lastModifiedDate":"2023-02-05"},{"lineNumber":310,"author":{"gitId":"Zeno-Zr"},"content":"        int indexOfDate \u003d line.indexOf(DEADLINE_BY);","lastModifiedDate":"2023-01-29"},{"lineNumber":311,"author":{"gitId":"Zeno-Zr"},"content":"        boolean isOutOfBounds \u003d indexOfDate \u003d\u003d OUT_OF_BOUNDS;","lastModifiedDate":"2023-02-05"},{"lineNumber":312,"author":{"gitId":"Zeno-Zr"},"content":"        boolean isMissingDescription \u003d indexOfDate \u003c\u003d DEADLINE_COMMAND.length() + COMMAND_BUFFER;","lastModifiedDate":"2023-02-05"},{"lineNumber":313,"author":{"gitId":"Zeno-Zr"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":314,"author":{"gitId":"Zeno-Zr"},"content":"        if (!isOutOfBounds \u0026\u0026 !isMissingDescription) {","lastModifiedDate":"2023-02-05"},{"lineNumber":315,"author":{"gitId":"Zeno-Zr"},"content":"            // +4 for \"/by \" length","lastModifiedDate":"2023-01-29"},{"lineNumber":316,"author":{"gitId":"Zeno-Zr"},"content":"            String startOfDate \u003d line.substring(indexOfDate + DEADLINE_BY.length() + COMMAND_BUFFER);","lastModifiedDate":"2023-01-29"},{"lineNumber":317,"author":{"gitId":"Zeno-Zr"},"content":"            // +10 for \"deadline \" length","lastModifiedDate":"2023-02-11"},{"lineNumber":318,"author":{"gitId":"Zeno-Zr"},"content":"            String descriptionOfTask \u003d line.substring(DEADLINE_COMMAND.length() + COMMAND_BUFFER, indexOfDate);","lastModifiedDate":"2023-02-04"},{"lineNumber":319,"author":{"gitId":"Zeno-Zr"},"content":"            addToList(descriptionOfTask, TypeOfTask.DEADLINE, startOfDate, null);","lastModifiedDate":"2023-02-04"},{"lineNumber":320,"author":{"gitId":"Zeno-Zr"},"content":"        } else if (isOutOfBounds) {","lastModifiedDate":"2023-02-05"},{"lineNumber":321,"author":{"gitId":"Zeno-Zr"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2023-02-05"},{"lineNumber":322,"author":{"gitId":"Zeno-Zr"},"content":"        } else if (isMissingDescription) {","lastModifiedDate":"2023-02-05"},{"lineNumber":323,"author":{"gitId":"Zeno-Zr"},"content":"            throw new MissingFormatArgumentException(\"Missing description\");","lastModifiedDate":"2023-02-05"},{"lineNumber":324,"author":{"gitId":"Zeno-Zr"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":325,"author":{"gitId":"Zeno-Zr"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":326,"author":{"gitId":"Zeno-Zr"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":327,"author":{"gitId":"Zeno-Zr"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":328,"author":{"gitId":"Zeno-Zr"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":329,"author":{"gitId":"Zeno-Zr"},"content":"     * Checks the validity of the deadline command.","lastModifiedDate":"2023-01-29"},{"lineNumber":330,"author":{"gitId":"Zeno-Zr"},"content":"     * adds the deadline to the list if command has the right syntax.","lastModifiedDate":"2023-01-29"},{"lineNumber":331,"author":{"gitId":"Zeno-Zr"},"content":"     * otherwise, it informs the user that it has a wrong syntax.","lastModifiedDate":"2023-01-29"},{"lineNumber":332,"author":{"gitId":"Zeno-Zr"},"content":"     *","lastModifiedDate":"2023-02-11"},{"lineNumber":333,"author":{"gitId":"Zeno-Zr"},"content":"     * @param line String entered by the user.","lastModifiedDate":"2023-01-29"},{"lineNumber":334,"author":{"gitId":"Zeno-Zr"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":335,"author":{"gitId":"Zeno-Zr"},"content":"    private static void addTodo(String line) {","lastModifiedDate":"2023-01-29"},{"lineNumber":336,"author":{"gitId":"Zeno-Zr"},"content":"        // +6 for \"deadline \" length","lastModifiedDate":"2023-02-11"},{"lineNumber":337,"author":{"gitId":"Zeno-Zr"},"content":"        String desc \u003d line.substring(TODO_COMMAND.length() + COMMAND_BUFFER);","lastModifiedDate":"2023-01-29"},{"lineNumber":338,"author":{"gitId":"Zeno-Zr"},"content":"        addToList(desc, TypeOfTask.TODO, null, null);","lastModifiedDate":"2023-01-29"},{"lineNumber":339,"author":{"gitId":"Zeno-Zr"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":340,"author":{"gitId":"Zeno-Zr"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":341,"author":{"gitId":"Zeno-Zr"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":342,"author":{"gitId":"Zeno-Zr"},"content":"     * Checks the validity of the mark/unmark command.","lastModifiedDate":"2023-01-29"},{"lineNumber":343,"author":{"gitId":"Zeno-Zr"},"content":"     * if the task selected is valid, marks or unmark the task depending on the exact command.","lastModifiedDate":"2023-02-11"},{"lineNumber":344,"author":{"gitId":"Zeno-Zr"},"content":"     * otherwise, informs the user that the command entered has wrong syntax or task of that index does not exist.","lastModifiedDate":"2023-01-29"},{"lineNumber":345,"author":{"gitId":"Zeno-Zr"},"content":"     *","lastModifiedDate":"2023-02-11"},{"lineNumber":346,"author":{"gitId":"Zeno-Zr"},"content":"     * @param commands Commands entered by the user.","lastModifiedDate":"2023-02-11"},{"lineNumber":347,"author":{"gitId":"Zeno-Zr"},"content":"     * @throws NumberFormatException When the user keys an invalid value for index.","lastModifiedDate":"2023-02-11"},{"lineNumber":348,"author":{"gitId":"Zeno-Zr"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":349,"author":{"gitId":"Zeno-Zr"},"content":"    private static void checkAndMarkTask(String[] commands) throws NumberFormatException {","lastModifiedDate":"2023-02-05"},{"lineNumber":350,"author":{"gitId":"Zeno-Zr"},"content":"        if (commands[1].matches(\"\\\\d+?\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":351,"author":{"gitId":"Zeno-Zr"},"content":"            boolean isMark \u003d commands[0].equals(MARK_COMMAND);","lastModifiedDate":"2023-01-29"},{"lineNumber":352,"author":{"gitId":"Zeno-Zr"},"content":"            markTask(Integer.parseInt(commands[1]), isMark);","lastModifiedDate":"2023-01-29"},{"lineNumber":353,"author":{"gitId":"Zeno-Zr"},"content":"        } else {","lastModifiedDate":"2023-01-29"},{"lineNumber":354,"author":{"gitId":"Zeno-Zr"},"content":"            throw new NumberFormatException();","lastModifiedDate":"2023-02-05"},{"lineNumber":355,"author":{"gitId":"Zeno-Zr"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":357,"author":{"gitId":"Zeno-Zr"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":358,"author":{"gitId":"Zeno-Zr"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":359,"author":{"gitId":"Zeno-Zr"},"content":"     * Check the validity of the delete command","lastModifiedDate":"2023-02-11"},{"lineNumber":360,"author":{"gitId":"Zeno-Zr"},"content":"     * if the task selected is valid, deletes the task from the list","lastModifiedDate":"2023-02-11"},{"lineNumber":361,"author":{"gitId":"Zeno-Zr"},"content":"     * otherwise, informs the user that the command entered has wrong syntax or task of that index does not exist.","lastModifiedDate":"2023-02-11"},{"lineNumber":362,"author":{"gitId":"Zeno-Zr"},"content":"     *","lastModifiedDate":"2023-02-11"},{"lineNumber":363,"author":{"gitId":"Zeno-Zr"},"content":"     * @param commands Commands entered by the user.","lastModifiedDate":"2023-02-11"},{"lineNumber":364,"author":{"gitId":"Zeno-Zr"},"content":"     * @throws NumberFormatException When the user keys an invalid value for index.","lastModifiedDate":"2023-02-11"},{"lineNumber":365,"author":{"gitId":"Zeno-Zr"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":366,"author":{"gitId":"Zeno-Zr"},"content":"    private static void checkAndDeleteTask(String[] commands) throws NumberFormatException {","lastModifiedDate":"2023-02-11"},{"lineNumber":367,"author":{"gitId":"Zeno-Zr"},"content":"        if (commands[1].matches(\"\\\\d+?\")) {","lastModifiedDate":"2023-02-11"},{"lineNumber":368,"author":{"gitId":"Zeno-Zr"},"content":"            deleteTask(Integer.parseInt(commands[1]));","lastModifiedDate":"2023-02-11"},{"lineNumber":369,"author":{"gitId":"Zeno-Zr"},"content":"        } else {","lastModifiedDate":"2023-02-11"},{"lineNumber":370,"author":{"gitId":"Zeno-Zr"},"content":"            throw new NumberFormatException();","lastModifiedDate":"2023-02-11"},{"lineNumber":371,"author":{"gitId":"Zeno-Zr"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":372,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":373,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Zeno-Zr":369,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zeno-Zr"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"Zeno-Zr"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"Zeno-Zr":2}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zeno-Zr"},"content":"public class Event extends Task{","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Zeno-Zr"},"content":"    String startDate;","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Zeno-Zr"},"content":"    String endDate;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Zeno-Zr"},"content":"    public Event(boolean isDone, String description, String startDate, String endDate) {","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"Zeno-Zr"},"content":"        super(TypeOfTask.EVENT, isDone, description);","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"Zeno-Zr"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Zeno-Zr"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Zeno-Zr"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Zeno-Zr"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Zeno-Zr"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Zeno-Zr"},"content":"     * Returns the symbol for EVENT task","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Zeno-Zr"},"content":"     * @return \"E\"","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Zeno-Zr"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Zeno-Zr"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Zeno-Zr"},"content":"    public String getStatusForTypeOfTask() {","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Zeno-Zr"},"content":"        return \"E\";","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Zeno-Zr"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Zeno-Zr"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Zeno-Zr"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Zeno-Zr"},"content":"     * Prints out the event according to a format","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Zeno-Zr"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Zeno-Zr"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"Zeno-Zr"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"Zeno-Zr"},"content":"    public void printTask() {","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"Zeno-Zr"},"content":"        System.out.println(formatString());","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"Zeno-Zr"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"Zeno-Zr"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"Zeno-Zr"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"Zeno-Zr"},"content":"    public String formatString() {","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"Zeno-Zr"},"content":"        return (\".[\" + this.getStatusForTypeOfTask() + \"]\" +","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"Zeno-Zr"},"content":"                \"[\" + this.getStatusIcon() + \"] \" +","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Zeno-Zr"},"content":"                this.getDescription() +","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"Zeno-Zr"},"content":"                \"(from: \" + this.startDate + \"to: \" + this.endDate + \")\");","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"Zeno-Zr"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"Zeno-Zr"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"Zeno-Zr"},"content":"    public String getStartDate() {","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"Zeno-Zr"},"content":"        return startDate;","lastModifiedDate":"2023-02-13"},{"lineNumber":38,"author":{"gitId":"Zeno-Zr"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"Zeno-Zr"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":40,"author":{"gitId":"Zeno-Zr"},"content":"    public String getEndDate() {","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"Zeno-Zr"},"content":"        return endDate;","lastModifiedDate":"2023-02-13"},{"lineNumber":42,"author":{"gitId":"Zeno-Zr"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"Zeno-Zr"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Zeno-Zr":43}},{"path":"src/main/java/Greeting.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zeno-Zr"},"content":"public class Greeting {","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Zeno-Zr"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Zeno-Zr"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Zeno-Zr"},"content":"     * Prints out the farewell message.","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Zeno-Zr"},"content":"     *","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"Zeno-Zr"},"content":"     * @param isSinglish Whether the language setting is currently in Singlish","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Zeno-Zr"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Zeno-Zr"},"content":"    public static void sayGoodbye(boolean isSinglish) {","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Zeno-Zr"},"content":"        if (isSinglish) {","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Zeno-Zr"},"content":"            System.out.println(\"Ok bye bye, come back soon ah!\");","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Zeno-Zr"},"content":"        } else {","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Zeno-Zr"},"content":"            System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Zeno-Zr"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Zeno-Zr"},"content":"        printHorizontalLines(isSinglish);","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Zeno-Zr"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Zeno-Zr"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Zeno-Zr"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Zeno-Zr"},"content":"     * Prints out horizontal lines for formatting.","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Zeno-Zr"},"content":"     *","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"Zeno-Zr"},"content":"     * @param isSinglish Whether the language setting is currently in Singlish","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Zeno-Zr"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Zeno-Zr"},"content":"    public static void printHorizontalLines(boolean isSinglish) {","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Zeno-Zr"},"content":"        if (isSinglish) {","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"Zeno-Zr"},"content":"            System.out.println(\"************************************************************\");","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"Zeno-Zr"},"content":"        } else {","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"Zeno-Zr"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"Zeno-Zr"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Zeno-Zr"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"Zeno-Zr"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"Zeno-Zr"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"Zeno-Zr"},"content":"     * Prints out the greeting message.","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Zeno-Zr"},"content":"     *","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"Zeno-Zr"},"content":"     * @param isSinglish Whether the language setting is currently in Singlish","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"Zeno-Zr"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"Zeno-Zr"},"content":"    public static void sayHello(boolean isSinglish) {","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"Zeno-Zr"},"content":"        printHorizontalLines(isSinglish);","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"Zeno-Zr"},"content":"        if (isSinglish) {","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"Zeno-Zr"},"content":"            System.out.println(\"Hello, my name is Uncle Simon, call me Simon can liao\");","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"Zeno-Zr"},"content":"            System.out.println(\"You need my help?\");","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"Zeno-Zr"},"content":"            System.out.println(\"(To turn off Singlish mode, type \\\"change lang\\\")\");","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"Zeno-Zr"},"content":"        } else {","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"Zeno-Zr"},"content":"            System.out.println(\"Hello, I\u0027m Duke.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"Zeno-Zr"},"content":"            System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"Zeno-Zr"},"content":"            System.out.println(\"(To turn on Singlish mode, type \\\"change lang\\\").\");","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"Zeno-Zr"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"Zeno-Zr"},"content":"        printHorizontalLines(isSinglish);","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"Zeno-Zr"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"Zeno-Zr"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"Zeno-Zr"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"Zeno-Zr"},"content":"     * Prints out a message informing the user that it has typed a command with invalid syntax","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"Zeno-Zr"},"content":"     *","lastModifiedDate":"2023-02-11"},{"lineNumber":52,"author":{"gitId":"Zeno-Zr"},"content":"     * @param isSinglish Whether the language setting is currently in Singlish","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"Zeno-Zr"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"Zeno-Zr"},"content":"    public static void warnWrongSyntax(boolean isSinglish) {","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"Zeno-Zr"},"content":"        if (isSinglish) {","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"Zeno-Zr"},"content":"            System.out.println(\"Eh you typed wrongly, can try typing again?\");","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"Zeno-Zr"},"content":"        } else {","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"Zeno-Zr"},"content":"            System.out.println(\"Invalid syntax, please try again\");","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"Zeno-Zr"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"Zeno-Zr"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"Zeno-Zr"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"Zeno-Zr"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"Zeno-Zr"},"content":"     * Prints out a message informing the user that language has changed","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"Zeno-Zr"},"content":"     *","lastModifiedDate":"2023-02-11"},{"lineNumber":65,"author":{"gitId":"Zeno-Zr"},"content":"     * @param isSinglish Whether the language setting is currently in Singlish","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"Zeno-Zr"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"Zeno-Zr"},"content":"    public static void sayChangeLanguage(boolean isSinglish) {","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"Zeno-Zr"},"content":"        if (isSinglish) {","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"Zeno-Zr"},"content":"            System.out.println(\"You want Duke to help you instead? Can can I go call him now\");","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"Zeno-Zr"},"content":"            System.out.println(\"Singlish mode \u003d OFF\");","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"Zeno-Zr"},"content":"        } else {","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"Zeno-Zr"},"content":"            System.out.println(\"Changing language mode to Singlish...\");","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"Zeno-Zr"},"content":"            System.out.println(\"Singlish mode \u003d ON\");","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"Zeno-Zr"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":75,"author":{"gitId":"Zeno-Zr"},"content":"        Greeting.sayHello(isSinglish);","lastModifiedDate":"2023-01-29"},{"lineNumber":76,"author":{"gitId":"Zeno-Zr"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":77,"author":{"gitId":"Zeno-Zr"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":78,"author":{"gitId":"Zeno-Zr"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":79,"author":{"gitId":"Zeno-Zr"},"content":"     * Prints out a message informing the user that the index selected does not have a task","lastModifiedDate":"2023-01-29"},{"lineNumber":80,"author":{"gitId":"Zeno-Zr"},"content":"     *","lastModifiedDate":"2023-02-11"},{"lineNumber":81,"author":{"gitId":"Zeno-Zr"},"content":"     * @param isSinglish Whether the language setting is currently in Singlish","lastModifiedDate":"2023-01-29"},{"lineNumber":82,"author":{"gitId":"Zeno-Zr"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":83,"author":{"gitId":"Zeno-Zr"},"content":"    public static void warnOutOfRange(boolean isSinglish) {","lastModifiedDate":"2023-01-29"},{"lineNumber":84,"author":{"gitId":"Zeno-Zr"},"content":"        if (isSinglish) {","lastModifiedDate":"2023-01-29"},{"lineNumber":85,"author":{"gitId":"Zeno-Zr"},"content":"            System.out.println(\"Eh, either you type wrongly or your list dun have a task at that index lah\");","lastModifiedDate":"2023-02-11"},{"lineNumber":86,"author":{"gitId":"Zeno-Zr"},"content":"        } else {","lastModifiedDate":"2023-01-29"},{"lineNumber":87,"author":{"gitId":"Zeno-Zr"},"content":"            System.out.println((\"Command inputted has wrong syntax or the list does not have a task of that index\"));","lastModifiedDate":"2023-02-11"},{"lineNumber":88,"author":{"gitId":"Zeno-Zr"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":89,"author":{"gitId":"Zeno-Zr"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":90,"author":{"gitId":"Zeno-Zr"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":91,"author":{"gitId":"Zeno-Zr"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":92,"author":{"gitId":"Zeno-Zr"},"content":"     * Prints out a message informing the user that the task has been sucessfully updated","lastModifiedDate":"2023-01-29"},{"lineNumber":93,"author":{"gitId":"Zeno-Zr"},"content":"     *","lastModifiedDate":"2023-02-11"},{"lineNumber":94,"author":{"gitId":"Zeno-Zr"},"content":"     * @param isSinglish Whether the language setting is currently in Singlish","lastModifiedDate":"2023-01-29"},{"lineNumber":95,"author":{"gitId":"Zeno-Zr"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":96,"author":{"gitId":"Zeno-Zr"},"content":"    public static void sayUpdatedTask(boolean isSinglish) {","lastModifiedDate":"2023-01-29"},{"lineNumber":97,"author":{"gitId":"Zeno-Zr"},"content":"        if (isSinglish) {","lastModifiedDate":"2023-01-29"},{"lineNumber":98,"author":{"gitId":"Zeno-Zr"},"content":"            System.out.println(\"Ok I updated it:\");","lastModifiedDate":"2023-01-29"},{"lineNumber":99,"author":{"gitId":"Zeno-Zr"},"content":"        } else {","lastModifiedDate":"2023-01-29"},{"lineNumber":100,"author":{"gitId":"Zeno-Zr"},"content":"            System.out.println(\"Updated the following task:\");","lastModifiedDate":"2023-01-29"},{"lineNumber":101,"author":{"gitId":"Zeno-Zr"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":102,"author":{"gitId":"Zeno-Zr"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":103,"author":{"gitId":"Zeno-Zr"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":104,"author":{"gitId":"Zeno-Zr"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":105,"author":{"gitId":"Zeno-Zr"},"content":"     * Prints out a message informing the user that the task description is empty","lastModifiedDate":"2023-01-29"},{"lineNumber":106,"author":{"gitId":"Zeno-Zr"},"content":"     *","lastModifiedDate":"2023-02-11"},{"lineNumber":107,"author":{"gitId":"Zeno-Zr"},"content":"     * @param isSinglish Whether the language setting is currently in Singlish","lastModifiedDate":"2023-01-29"},{"lineNumber":108,"author":{"gitId":"Zeno-Zr"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":109,"author":{"gitId":"Zeno-Zr"},"content":"    public static void warnEmptyDesc(boolean isSinglish) {","lastModifiedDate":"2023-01-29"},{"lineNumber":110,"author":{"gitId":"Zeno-Zr"},"content":"        if (isSinglish) {","lastModifiedDate":"2023-01-29"},{"lineNumber":111,"author":{"gitId":"Zeno-Zr"},"content":"            System.out.println(\"Eh, cannot have empty task la\");","lastModifiedDate":"2023-01-29"},{"lineNumber":112,"author":{"gitId":"Zeno-Zr"},"content":"        } else {","lastModifiedDate":"2023-01-29"},{"lineNumber":113,"author":{"gitId":"Zeno-Zr"},"content":"            System.out.println(\"Empty task, please try again.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":114,"author":{"gitId":"Zeno-Zr"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":115,"author":{"gitId":"Zeno-Zr"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":116,"author":{"gitId":"Zeno-Zr"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":117,"author":{"gitId":"Zeno-Zr"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":118,"author":{"gitId":"Zeno-Zr"},"content":"     * Prints out a message informing the user that the task has been added to the list","lastModifiedDate":"2023-02-11"},{"lineNumber":119,"author":{"gitId":"Zeno-Zr"},"content":"     *","lastModifiedDate":"2023-02-11"},{"lineNumber":120,"author":{"gitId":"Zeno-Zr"},"content":"     * @param isSinglish Whether the language setting is currently in Singlish","lastModifiedDate":"2023-02-11"},{"lineNumber":121,"author":{"gitId":"Zeno-Zr"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":122,"author":{"gitId":"Zeno-Zr"},"content":"    public static void sayAddToList(boolean isSinglish) {","lastModifiedDate":"2023-02-04"},{"lineNumber":123,"author":{"gitId":"Zeno-Zr"},"content":"        if (isSinglish) {","lastModifiedDate":"2023-02-04"},{"lineNumber":124,"author":{"gitId":"Zeno-Zr"},"content":"            System.out.println(\"Ok, I add in already\");","lastModifiedDate":"2023-02-04"},{"lineNumber":125,"author":{"gitId":"Zeno-Zr"},"content":"        } else {","lastModifiedDate":"2023-02-04"},{"lineNumber":126,"author":{"gitId":"Zeno-Zr"},"content":"            System.out.println(\"Task has been added to the list.\");","lastModifiedDate":"2023-02-11"},{"lineNumber":127,"author":{"gitId":"Zeno-Zr"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":128,"author":{"gitId":"Zeno-Zr"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":129,"author":{"gitId":"Zeno-Zr"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":130,"author":{"gitId":"Zeno-Zr"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":131,"author":{"gitId":"Zeno-Zr"},"content":"     * Prints out a message informing the user that the task at a specified index has been deleted","lastModifiedDate":"2023-02-11"},{"lineNumber":132,"author":{"gitId":"Zeno-Zr"},"content":"     *","lastModifiedDate":"2023-02-11"},{"lineNumber":133,"author":{"gitId":"Zeno-Zr"},"content":"     * @param isSinglish Whether the language setting is currently in Singlish","lastModifiedDate":"2023-02-11"},{"lineNumber":134,"author":{"gitId":"Zeno-Zr"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":135,"author":{"gitId":"Zeno-Zr"},"content":"    public static void sayDeleteTaskFromList(boolean isSinglish) {","lastModifiedDate":"2023-02-11"},{"lineNumber":136,"author":{"gitId":"Zeno-Zr"},"content":"        if (isSinglish) {","lastModifiedDate":"2023-02-11"},{"lineNumber":137,"author":{"gitId":"Zeno-Zr"},"content":"            System.out.println(\"Ok, I delete it already\");","lastModifiedDate":"2023-02-11"},{"lineNumber":138,"author":{"gitId":"Zeno-Zr"},"content":"        } else {","lastModifiedDate":"2023-02-11"},{"lineNumber":139,"author":{"gitId":"Zeno-Zr"},"content":"            System.out.println((\"Task has been removed from the list\"));","lastModifiedDate":"2023-02-11"},{"lineNumber":140,"author":{"gitId":"Zeno-Zr"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":141,"author":{"gitId":"Zeno-Zr"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":142,"author":{"gitId":"Zeno-Zr"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":143,"author":{"gitId":"Zeno-Zr"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":144,"author":{"gitId":"Zeno-Zr"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":145,"author":{"gitId":"Zeno-Zr"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Zeno-Zr":145}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zeno-Zr"},"content":"public class Task {","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"Zeno-Zr"},"content":"    /** The description of the task entered by the user. */","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"Zeno-Zr"},"content":"    protected String description;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"Zeno-Zr"},"content":"    /** The state of the task, whether it is done or not. */","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"Zeno-Zr"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"Zeno-Zr"},"content":"    /** The type of task the following task is","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Zeno-Zr"},"content":"     * Possible values: TODO, DEADLINE, EVENT","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Zeno-Zr"},"content":"     * */","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Zeno-Zr"},"content":"    protected TypeOfTask typeOfTask;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Zeno-Zr"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"Zeno-Zr"},"content":"    public Task(TypeOfTask typeOfTask, boolean isDone, String description) {","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"Zeno-Zr"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"Zeno-Zr"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"Zeno-Zr"},"content":"        this.typeOfTask \u003d typeOfTask;","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Zeno-Zr"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"Zeno-Zr"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"Zeno-Zr"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"Zeno-Zr"},"content":"     * Returns the symbol to be printed depends on whether the task is marked as done or not.","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"Zeno-Zr"},"content":"     * @return The symbol whether the task is done or not.","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"Zeno-Zr"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"Zeno-Zr"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"Zeno-Zr"},"content":"        return (isDone ? \"X\" : \"_\"); // mark done task with X","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"Zeno-Zr"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"Zeno-Zr"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"Zeno-Zr"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"Zeno-Zr"},"content":"     * Returns the state of the task: whether is it done or not.","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"Zeno-Zr"},"content":"     * @return isDone The state of the task.","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"Zeno-Zr"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"Zeno-Zr"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"Zeno-Zr"},"content":"        return isDone;","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"Zeno-Zr"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"Zeno-Zr"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"Zeno-Zr"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"Zeno-Zr"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"Zeno-Zr"},"content":"     * Toggles the state of the task between done and not done.","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"Zeno-Zr"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"Zeno-Zr"},"content":"    public void switchIsDone() {","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"Zeno-Zr"},"content":"        isDone \u003d !isDone;","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"Zeno-Zr"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"Zeno-Zr"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"Zeno-Zr"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"Zeno-Zr"},"content":"     * Returns the description of the task that the user entered.","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"Zeno-Zr"},"content":"     * @return description The description of the task.","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"Zeno-Zr"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"Zeno-Zr"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"Zeno-Zr"},"content":"        return description;","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"Zeno-Zr"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"Zeno-Zr"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"Zeno-Zr"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"Zeno-Zr"},"content":"     * Returns the type of task","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"Zeno-Zr"},"content":"     * @return typeOfTask","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"Zeno-Zr"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"Zeno-Zr"},"content":"    public TypeOfTask getTypeOfTask() {","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"Zeno-Zr"},"content":"        return typeOfTask;","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"Zeno-Zr"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"Zeno-Zr"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"Zeno-Zr"},"content":"    /** Returns the symbol to be printed based on the type of task","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"Zeno-Zr"},"content":"     * @return The symbol depending on whether it\u0027s a TODO, DEADLINE, or EVENT task","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"Zeno-Zr"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"Zeno-Zr"},"content":"    public String getStatusForTypeOfTask() {","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"Zeno-Zr"},"content":"        return \"Task\";","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"Zeno-Zr"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"Zeno-Zr"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"Zeno-Zr"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"Zeno-Zr"},"content":"     * Prints out the task according to a format","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"Zeno-Zr"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"Zeno-Zr"},"content":"    public void printTask() {","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"Zeno-Zr"},"content":"        System.out.println(formatString());","lastModifiedDate":"2023-02-13"},{"lineNumber":69,"author":{"gitId":"Zeno-Zr"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":70,"author":{"gitId":"Zeno-Zr"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":71,"author":{"gitId":"Zeno-Zr"},"content":"    public String formatString() {","lastModifiedDate":"2023-02-13"},{"lineNumber":72,"author":{"gitId":"Zeno-Zr"},"content":"        return (\".[\" + this.getStatusForTypeOfTask() + \"]\" +","lastModifiedDate":"2023-02-13"},{"lineNumber":73,"author":{"gitId":"Zeno-Zr"},"content":"                \"[\" + this.getStatusIcon() + \"] \" +","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"Zeno-Zr"},"content":"                this.getDescription());","lastModifiedDate":"2023-01-29"},{"lineNumber":75,"author":{"gitId":"Zeno-Zr"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":76,"author":{"gitId":"Zeno-Zr"},"content":"}","lastModifiedDate":"2023-01-24"},{"lineNumber":77,"author":{"gitId":"Zeno-Zr"},"content":"","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"Zeno-Zr":77}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zeno-Zr"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Zeno-Zr"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Zeno-Zr"},"content":"    public Todo(boolean isDone, String description) {","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"Zeno-Zr"},"content":"        super(TypeOfTask.TODO, isDone, description);","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"Zeno-Zr"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Zeno-Zr"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Zeno-Zr"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Zeno-Zr"},"content":"     * Returns the symbol for TODO task","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Zeno-Zr"},"content":"     * @return \"T\"","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Zeno-Zr"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Zeno-Zr"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Zeno-Zr"},"content":"    public String getStatusForTypeOfTask() {","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Zeno-Zr"},"content":"        return \"T\";","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Zeno-Zr"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Zeno-Zr"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Zeno-Zr":15}},{"path":"src/main/java/TypeOfTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zeno-Zr"},"content":"public enum TypeOfTask {","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Zeno-Zr"},"content":"    TODO, DEADLINE, EVENT","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Zeno-Zr"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Zeno-Zr":3}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"Zeno-Zr"},"content":"del ACTUAL.TXT","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"Zeno-Zr"},"content":"javac  -cp ..\\src\\Duke\\java -Xlint:none -d ..\\bin ..\\src\\Duke\\java\\*.java","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Zeno-Zr":2,"-":19}}]
