[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"iantenkai"},"content":"This is the user guide for the Duke app, a task management app.","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"iantenkai"},"content":"### Add Various types of tasks","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":8,"author":{"gitId":"iantenkai"},"content":"The app supports several types of tasks","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":10,"author":{"gitId":"iantenkai"},"content":"  1. ToDos","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"iantenkai"},"content":"  2. Deadlines","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"iantenkai"},"content":"  3. Events","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":14,"author":{"gitId":"iantenkai"},"content":"### Task operations","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"iantenkai"},"content":"  1. Delete tasks","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"iantenkai"},"content":"  2. Mark/unmark tasks as done","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"iantenkai"},"content":"  3. Find tasks with a specific keyword","lastModifiedDate":"2023-02-27"},{"lineNumber":19,"author":{"gitId":"iantenkai"},"content":"  4. List all saved tasks","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"iantenkai"},"content":"  5. Clear the list of tasks","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"iantenkai"},"content":"### Task data","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":24,"author":{"gitId":"iantenkai"},"content":"  1. Reads and writes task data to a txt file ```memory.txt```","lastModifiedDate":"2023-02-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"iantenkai"},"content":"### `todo` - Add a todo task","lastModifiedDate":"2023-02-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":30,"author":{"gitId":"iantenkai"},"content":"Example of usage: ","lastModifiedDate":"2023-02-27"},{"lineNumber":31,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":32,"author":{"gitId":"iantenkai"},"content":"`todo do 2023`","lastModifiedDate":"2023-02-27"},{"lineNumber":33,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":34,"author":{"gitId":"iantenkai"},"content":"Expected outcome:","lastModifiedDate":"2023-02-27"},{"lineNumber":35,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":36,"author":{"gitId":"iantenkai"},"content":"Acknowledgment of task addition and display of new task.","lastModifiedDate":"2023-02-27"},{"lineNumber":37,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":38,"author":{"gitId":"iantenkai"},"content":"```","lastModifiedDate":"2023-02-27"},{"lineNumber":39,"author":{"gitId":"iantenkai"},"content":"覚えましたよ～ (todo recorded) do 2023","lastModifiedDate":"2023-02-27"},{"lineNumber":40,"author":{"gitId":"iantenkai"},"content":"```","lastModifiedDate":"2023-02-27"},{"lineNumber":41,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":42,"author":{"gitId":"iantenkai"},"content":"### `deadline` - Add a deadline task","lastModifiedDate":"2023-02-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2023-02-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":46,"author":{"gitId":"iantenkai"},"content":"`deadline submit withdrawl form /by week 6`","lastModifiedDate":"2023-02-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2023-02-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":50,"author":{"gitId":"iantenkai"},"content":"Acknowledgment of task addition and display of new task.","lastModifiedDate":"2023-02-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-02-27"},{"lineNumber":53,"author":{"gitId":"iantenkai"},"content":"覚えましたよ～ (event recorded) interview at McDonalds (by: week 6)","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"iantenkai"},"content":"```","lastModifiedDate":"2023-02-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":56,"author":{"gitId":"iantenkai"},"content":"### `event` - Add an event task","lastModifiedDate":"2023-02-27"},{"lineNumber":57,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2019-07-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":60,"author":{"gitId":"iantenkai"},"content":"`event interview at McDonalds /from 4pm /to 6pm`","lastModifiedDate":"2023-02-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":64,"author":{"gitId":"iantenkai"},"content":"Acknowledgment of task addition and display of new task.","lastModifiedDate":"2023-02-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":67,"author":{"gitId":"iantenkai"},"content":"覚えましたよ～ (event recorded) interview at McDonalds (from: 4pm to: 6pm)","lastModifiedDate":"2023-02-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":69,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":70,"author":{"gitId":"iantenkai"},"content":"### `list` - List all tasks","lastModifiedDate":"2023-02-27"},{"lineNumber":71,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":72,"author":{"gitId":"iantenkai"},"content":"Example of usage: ","lastModifiedDate":"2023-02-27"},{"lineNumber":73,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":74,"author":{"gitId":"iantenkai"},"content":"`list`","lastModifiedDate":"2023-02-27"},{"lineNumber":75,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":76,"author":{"gitId":"iantenkai"},"content":"Expected outcome:","lastModifiedDate":"2023-02-27"},{"lineNumber":77,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":78,"author":{"gitId":"iantenkai"},"content":"List of all saved tasks.","lastModifiedDate":"2023-02-27"},{"lineNumber":79,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":80,"author":{"gitId":"iantenkai"},"content":"```","lastModifiedDate":"2023-02-27"},{"lineNumber":81,"author":{"gitId":"iantenkai"},"content":"1. [T][ ] do 2023","lastModifiedDate":"2023-02-27"},{"lineNumber":82,"author":{"gitId":"iantenkai"},"content":"2. [D][ ] submit withdrawl form  (by: week 6)","lastModifiedDate":"2023-02-27"},{"lineNumber":83,"author":{"gitId":"iantenkai"},"content":"3. [E][ ] interview at McDonalds (from: 4pm to: 6pm)","lastModifiedDate":"2023-02-27"},{"lineNumber":84,"author":{"gitId":"iantenkai"},"content":"```","lastModifiedDate":"2023-02-27"},{"lineNumber":85,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":86,"author":{"gitId":"iantenkai"},"content":"### `Find` - searches for all tasks with a specific keyword in their decription","lastModifiedDate":"2023-02-27"},{"lineNumber":87,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":88,"author":{"gitId":"iantenkai"},"content":"Syntax: `find \u003ckeyword\u003e`","lastModifiedDate":"2023-02-27"},{"lineNumber":89,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":90,"author":{"gitId":"iantenkai"},"content":"Example of usage: ","lastModifiedDate":"2023-02-27"},{"lineNumber":91,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":92,"author":{"gitId":"iantenkai"},"content":"`find withdrawal`","lastModifiedDate":"2023-02-27"},{"lineNumber":93,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":94,"author":{"gitId":"iantenkai"},"content":"Expected outcome:","lastModifiedDate":"2023-02-27"},{"lineNumber":95,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":96,"author":{"gitId":"iantenkai"},"content":"List of all tasks with the keyword","lastModifiedDate":"2023-02-27"},{"lineNumber":97,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":98,"author":{"gitId":"iantenkai"},"content":"```","lastModifiedDate":"2023-02-27"},{"lineNumber":99,"author":{"gitId":"iantenkai"},"content":"Here are the matching tasks: ","lastModifiedDate":"2023-02-27"},{"lineNumber":100,"author":{"gitId":"iantenkai"},"content":"1. [D][ ] submit withdrawl form  (by: week 6)","lastModifiedDate":"2023-02-27"},{"lineNumber":101,"author":{"gitId":"iantenkai"},"content":"```","lastModifiedDate":"2023-02-27"},{"lineNumber":102,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":103,"author":{"gitId":"iantenkai"},"content":"### `mark` or `unmark` - Mark task as done/undone","lastModifiedDate":"2023-02-27"},{"lineNumber":104,"author":{"gitId":"iantenkai"},"content":"Syntax: `mark \u003ctasknumber\u003e`/`unmark \u003ctasknumber\u003e`","lastModifiedDate":"2023-02-27"},{"lineNumber":105,"author":{"gitId":"iantenkai"},"content":"Example of usage: ","lastModifiedDate":"2023-02-27"},{"lineNumber":106,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":107,"author":{"gitId":"iantenkai"},"content":"`mark 1`","lastModifiedDate":"2023-02-27"},{"lineNumber":108,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":109,"author":{"gitId":"iantenkai"},"content":"Expected outcome:","lastModifiedDate":"2023-02-27"},{"lineNumber":110,"author":{"gitId":"iantenkai"},"content":"Acknowledgment of task mark.","lastModifiedDate":"2023-02-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-02-27"},{"lineNumber":112,"author":{"gitId":"iantenkai"},"content":"目標達成！- [X] do 2023","lastModifiedDate":"2023-02-27"},{"lineNumber":113,"author":{"gitId":"iantenkai"},"content":"```","lastModifiedDate":"2023-02-27"},{"lineNumber":114,"author":{"gitId":"iantenkai"},"content":"Invoking `list` afterwards yields","lastModifiedDate":"2023-02-27"},{"lineNumber":115,"author":{"gitId":"iantenkai"},"content":"```","lastModifiedDate":"2023-02-27"},{"lineNumber":116,"author":{"gitId":"iantenkai"},"content":"1. [T][X] do 2023","lastModifiedDate":"2023-02-27"},{"lineNumber":117,"author":{"gitId":"iantenkai"},"content":"2. [D][ ] submit withdrawl form  (by: week 6)","lastModifiedDate":"2023-02-27"},{"lineNumber":118,"author":{"gitId":"iantenkai"},"content":"3. [E][ ] interview at McDonalds (from: 4pm to: 6pm)","lastModifiedDate":"2023-02-27"},{"lineNumber":119,"author":{"gitId":"iantenkai"},"content":"```","lastModifiedDate":"2023-02-27"},{"lineNumber":120,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":121,"author":{"gitId":"iantenkai"},"content":"similarly, invoking `unmark 1`","lastModifiedDate":"2023-02-27"},{"lineNumber":122,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":123,"author":{"gitId":"iantenkai"},"content":"Expected outcome:","lastModifiedDate":"2023-02-27"},{"lineNumber":124,"author":{"gitId":"iantenkai"},"content":"Acknowledgment of task undoing.","lastModifiedDate":"2023-02-27"},{"lineNumber":125,"author":{"gitId":"iantenkai"},"content":"```","lastModifiedDate":"2023-02-27"},{"lineNumber":126,"author":{"gitId":"iantenkai"},"content":"ええ。。。噓つき。- [ ] do 2023","lastModifiedDate":"2023-02-27"},{"lineNumber":127,"author":{"gitId":"iantenkai"},"content":"```","lastModifiedDate":"2023-02-27"},{"lineNumber":128,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":129,"author":{"gitId":"iantenkai"},"content":"Invoking `list` afterwards yields","lastModifiedDate":"2023-02-27"},{"lineNumber":130,"author":{"gitId":"iantenkai"},"content":"```","lastModifiedDate":"2023-02-27"},{"lineNumber":131,"author":{"gitId":"iantenkai"},"content":"1. [T][ ] do 2023","lastModifiedDate":"2023-02-27"},{"lineNumber":132,"author":{"gitId":"iantenkai"},"content":"2. [D][ ] submit withdrawl form  (by: week 6)","lastModifiedDate":"2023-02-27"},{"lineNumber":133,"author":{"gitId":"iantenkai"},"content":"3. [E][ ] interview at McDonalds (from: 4pm to: 6pm)","lastModifiedDate":"2023-02-27"},{"lineNumber":134,"author":{"gitId":"iantenkai"},"content":"```","lastModifiedDate":"2023-02-27"},{"lineNumber":135,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":136,"author":{"gitId":"iantenkai"},"content":"### `delete` - Delete a task","lastModifiedDate":"2023-02-27"},{"lineNumber":137,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":138,"author":{"gitId":"iantenkai"},"content":"Delete a task.","lastModifiedDate":"2023-02-27"},{"lineNumber":139,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":140,"author":{"gitId":"iantenkai"},"content":"syntax: `delete \u003ctasknumber\u003e`","lastModifiedDate":"2023-02-27"},{"lineNumber":141,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":142,"author":{"gitId":"iantenkai"},"content":"Example of usage: ","lastModifiedDate":"2023-02-27"},{"lineNumber":143,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":144,"author":{"gitId":"iantenkai"},"content":"`delete 1`","lastModifiedDate":"2023-02-27"},{"lineNumber":145,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":146,"author":{"gitId":"iantenkai"},"content":"Expected outcome:","lastModifiedDate":"2023-02-27"},{"lineNumber":147,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":148,"author":{"gitId":"iantenkai"},"content":"Acknowledgment of task deletion.","lastModifiedDate":"2023-02-27"},{"lineNumber":149,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":150,"author":{"gitId":"iantenkai"},"content":"```","lastModifiedDate":"2023-02-27"},{"lineNumber":151,"author":{"gitId":"iantenkai"},"content":"deleted this task: do 2023","lastModifiedDate":"2023-02-27"},{"lineNumber":152,"author":{"gitId":"iantenkai"},"content":"```","lastModifiedDate":"2023-02-27"},{"lineNumber":153,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":154,"author":{"gitId":"iantenkai"},"content":"### `clearlist` - Clear all tasks","lastModifiedDate":"2023-02-27"},{"lineNumber":155,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":156,"author":{"gitId":"iantenkai"},"content":"Clear all saved tasks.","lastModifiedDate":"2023-02-27"},{"lineNumber":157,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":158,"author":{"gitId":"iantenkai"},"content":"Example of usage: ","lastModifiedDate":"2023-02-27"},{"lineNumber":159,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":160,"author":{"gitId":"iantenkai"},"content":"`clearlist`","lastModifiedDate":"2023-02-27"},{"lineNumber":161,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":162,"author":{"gitId":"iantenkai"},"content":"Expected outcome:","lastModifiedDate":"2023-02-27"},{"lineNumber":163,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":164,"author":{"gitId":"iantenkai"},"content":"Acknowledgment of all tasks being cleared.","lastModifiedDate":"2023-02-27"},{"lineNumber":165,"author":{"gitId":"iantenkai"},"content":"```","lastModifiedDate":"2023-02-27"},{"lineNumber":166,"author":{"gitId":"iantenkai"},"content":"List cleared","lastModifiedDate":"2023-02-27"},{"lineNumber":167,"author":{"gitId":"iantenkai"},"content":"```","lastModifiedDate":"2023-02-27"},{"lineNumber":168,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":169,"author":{"gitId":"iantenkai"},"content":"invoking `list` afterwards yields","lastModifiedDate":"2023-02-27"},{"lineNumber":170,"author":{"gitId":"iantenkai"},"content":"```","lastModifiedDate":"2023-02-27"},{"lineNumber":171,"author":{"gitId":"iantenkai"},"content":"何もいない。。。頭のように。。。(list is empty)","lastModifiedDate":"2023-02-27"},{"lineNumber":172,"author":{"gitId":"iantenkai"},"content":"```","lastModifiedDate":"2023-02-27"},{"lineNumber":173,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":174,"author":{"gitId":"iantenkai"},"content":"### `bye` - Exit the app","lastModifiedDate":"2023-02-27"},{"lineNumber":175,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":176,"author":{"gitId":"iantenkai"},"content":"Exit the application.","lastModifiedDate":"2023-02-27"},{"lineNumber":177,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":178,"author":{"gitId":"iantenkai"},"content":"Example of usage: ","lastModifiedDate":"2023-02-27"},{"lineNumber":179,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":180,"author":{"gitId":"iantenkai"},"content":"`bye`","lastModifiedDate":"2023-02-27"},{"lineNumber":181,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":182,"author":{"gitId":"iantenkai"},"content":"Expected outcome:","lastModifiedDate":"2023-02-27"},{"lineNumber":183,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":184,"author":{"gitId":"iantenkai"},"content":"Application exits.","lastModifiedDate":"2023-02-27"},{"lineNumber":185,"author":{"gitId":"iantenkai"},"content":"```","lastModifiedDate":"2023-02-27"},{"lineNumber":186,"author":{"gitId":"iantenkai"},"content":"じゃねえ～ (bye)","lastModifiedDate":"2023-02-27"},{"lineNumber":187,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":188,"author":{"gitId":"iantenkai"},"content":"Process finished with exit code 0","lastModifiedDate":"2023-02-27"},{"lineNumber":189,"author":{"gitId":"iantenkai"},"content":"```","lastModifiedDate":"2023-02-27"},{"lineNumber":190,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"iantenkai":161,"-":29}},{"path":"memory.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"iantenkai"},"content":"1. [T][ ] a","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"iantenkai"},"content":"2. [T][X] b","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"iantenkai"},"content":"3. [E][ ] fuckdsda (from: 2pm to: 5pm)","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"iantenkai"},"content":"4. [T][ ] fuckkkk","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"iantenkai"},"content":"5. [T][ ] eat shit","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"iantenkai":5}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"iantenkai"},"content":"import DukeFunctions.Storage;","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"iantenkai"},"content":"import DukeFunctions.TaskList;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"iantenkai"},"content":"import DukeFunctions.Ui;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"iantenkai"},"content":"import DukeFunctions.Parser;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"iantenkai"},"content":"import Exceptions.DukeError;","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"iantenkai"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"iantenkai"},"content":"/**","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"iantenkai"},"content":" * The Duke class represents a task list.","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"iantenkai"},"content":" * This class uses a TaskList object to manage tasks, and a Storage object to read and write data","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"iantenkai"},"content":" * to a local file. The Ui class handles user interaction, and the Parser class","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"iantenkai"},"content":" * handles the input.","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"iantenkai"},"content":" */","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"iantenkai"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"iantenkai"},"content":"     * Ui object handles user interaction.","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"iantenkai"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"iantenkai"},"content":"    private Ui ui;","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"iantenkai"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"iantenkai"},"content":"     * TaskList object manages the list of tasks.","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"iantenkai"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"iantenkai"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"iantenkai"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"iantenkai"},"content":"     * Storage object reads and writes data to and from a local file.","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"iantenkai"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"iantenkai"},"content":"    private Storage storage;","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":35,"author":{"gitId":"iantenkai"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"iantenkai"},"content":"     * Constructs a Duke object with the specified file path.","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"iantenkai"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"iantenkai"},"content":"     * @param filePath the file path of the locally saved memory text file","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"iantenkai"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"iantenkai"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"iantenkai"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"iantenkai"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"iantenkai"},"content":"        try {","lastModifiedDate":"2023-02-18"},{"lineNumber":44,"author":{"gitId":"iantenkai"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"iantenkai"},"content":"        } catch (DukeError e) {","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"iantenkai"},"content":"            ui.showError(e);","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"iantenkai"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"iantenkai"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":49,"author":{"gitId":"iantenkai"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":50,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":51,"author":{"gitId":"iantenkai"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"iantenkai"},"content":"     * Runs the Duke app.","lastModifiedDate":"2023-02-26"},{"lineNumber":53,"author":{"gitId":"iantenkai"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":54,"author":{"gitId":"iantenkai"},"content":"     * @throws DukeError if there is an error","lastModifiedDate":"2023-02-26"},{"lineNumber":55,"author":{"gitId":"iantenkai"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":56,"author":{"gitId":"iantenkai"},"content":"    public void run() throws DukeError {","lastModifiedDate":"2023-02-26"},{"lineNumber":57,"author":{"gitId":"iantenkai"},"content":"        ui.welcome();","lastModifiedDate":"2023-02-26"},{"lineNumber":58,"author":{"gitId":"iantenkai"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-02-26"},{"lineNumber":59,"author":{"gitId":"iantenkai"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-02-26"},{"lineNumber":60,"author":{"gitId":"iantenkai"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-26"},{"lineNumber":61,"author":{"gitId":"iantenkai"},"content":"        while (!isExit) {","lastModifiedDate":"2023-02-26"},{"lineNumber":62,"author":{"gitId":"iantenkai"},"content":"            String input \u003d scanner.nextLine();","lastModifiedDate":"2023-02-26"},{"lineNumber":63,"author":{"gitId":"iantenkai"},"content":"            try {","lastModifiedDate":"2023-02-18"},{"lineNumber":64,"author":{"gitId":"iantenkai"},"content":"                parser.parseCommand(input, tasks, ui);","lastModifiedDate":"2023-02-26"},{"lineNumber":65,"author":{"gitId":"iantenkai"},"content":"                isExit \u003d parser.isExit;","lastModifiedDate":"2023-02-26"},{"lineNumber":66,"author":{"gitId":"iantenkai"},"content":"            } catch (DukeError e) {","lastModifiedDate":"2023-02-26"},{"lineNumber":67,"author":{"gitId":"iantenkai"},"content":"                ui.showError(e);","lastModifiedDate":"2023-02-26"},{"lineNumber":68,"author":{"gitId":"iantenkai"},"content":"            }","lastModifiedDate":"2023-02-18"},{"lineNumber":69,"author":{"gitId":"iantenkai"},"content":"            try {","lastModifiedDate":"2023-02-26"},{"lineNumber":70,"author":{"gitId":"iantenkai"},"content":"                storage.save(tasks);","lastModifiedDate":"2023-02-26"},{"lineNumber":71,"author":{"gitId":"iantenkai"},"content":"            } catch (DukeError e) {","lastModifiedDate":"2023-02-26"},{"lineNumber":72,"author":{"gitId":"iantenkai"},"content":"                ui.showError(e);","lastModifiedDate":"2023-02-26"},{"lineNumber":73,"author":{"gitId":"iantenkai"},"content":"            }","lastModifiedDate":"2023-02-18"},{"lineNumber":74,"author":{"gitId":"iantenkai"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":75,"author":{"gitId":"iantenkai"},"content":"        ui.bye();","lastModifiedDate":"2023-02-26"},{"lineNumber":76,"author":{"gitId":"iantenkai"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":77,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":78,"author":{"gitId":"iantenkai"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":79,"author":{"gitId":"iantenkai"},"content":"     * The main method of the Duke application.","lastModifiedDate":"2023-02-26"},{"lineNumber":80,"author":{"gitId":"iantenkai"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":81,"author":{"gitId":"iantenkai"},"content":"     * @param args the command line arguments","lastModifiedDate":"2023-02-26"},{"lineNumber":82,"author":{"gitId":"iantenkai"},"content":"     * @throws DukeError if there is an error with the app","lastModifiedDate":"2023-02-26"},{"lineNumber":83,"author":{"gitId":"iantenkai"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":84,"author":{"gitId":"iantenkai"},"content":"    public static void main(String[] args) throws DukeError {","lastModifiedDate":"2023-02-26"},{"lineNumber":85,"author":{"gitId":"iantenkai"},"content":"        new Duke(\"memory.txt\").run();","lastModifiedDate":"2023-02-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"iantenkai":84,"-":3}},{"path":"src/main/java/DukeFunctions/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"iantenkai"},"content":"package DukeFunctions;","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"iantenkai"},"content":"import Exceptions.DukeError;","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"iantenkai"},"content":"import Exceptions.MissingInputException;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"iantenkai"},"content":"/**","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"iantenkai"},"content":" * Represents a deadline task with a description and a deadline.","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"iantenkai"},"content":" * Inherits from the {@link Todo} class.","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"iantenkai"},"content":" */","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"iantenkai"},"content":"public class Deadline extends Todo {","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"iantenkai"},"content":"    protected String by;","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"iantenkai"},"content":"    String deliverable;","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"iantenkai"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"iantenkai"},"content":"     * Constructs a new Deadline object with the given input contents.","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"iantenkai"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"iantenkai"},"content":"     * @param inputContents the input contents of the deadline task, which includes a description and a deadline","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"iantenkai"},"content":"     * @throws MissingInputException if there are insufficient inputs","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"iantenkai"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"iantenkai"},"content":"    public Deadline(String inputContents) throws DukeError {","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"iantenkai"},"content":"        super(inputContents);","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"iantenkai"},"content":"        String[] parts \u003d inputContents.split(\"/by\");","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":25,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":26,"author":{"gitId":"iantenkai"},"content":"        if (parts.length \u003e 1) {","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"iantenkai"},"content":"            String deliverable \u003d parts[0];","lastModifiedDate":"2023-02-27"},{"lineNumber":28,"author":{"gitId":"iantenkai"},"content":"            this.by \u003d parts[1].trim();","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"iantenkai"},"content":"        } else {","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"iantenkai"},"content":"            throw new DukeError(\"Missing inputs. Syntax for deadline: deadline \u003cdescription\u003e /by \u003ctime\u003e \");","lastModifiedDate":"2023-02-27"},{"lineNumber":31,"author":{"gitId":"iantenkai"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"iantenkai"},"content":"        //this.by \u003d (parts.length \u003e 1) ? parts[1].trim() : throw new MissingInputException();","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"iantenkai"},"content":"        this.deliverable \u003d deliverable;","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"iantenkai"},"content":"        this.type \u003d \"D\";","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"iantenkai"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"iantenkai"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"iantenkai"},"content":"     * Sets the deadline of the deadline task.","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"iantenkai"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"iantenkai"},"content":"     * @param by the deadline of the deadline task","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"iantenkai"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"iantenkai"},"content":"    public void setBy(String by) {","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"iantenkai"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"iantenkai"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"iantenkai"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"iantenkai"},"content":"     * Gets the deadline of the deadline task.","lastModifiedDate":"2023-02-26"},{"lineNumber":49,"author":{"gitId":"iantenkai"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"iantenkai"},"content":"     * @return string the deadline of the deadline task","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"iantenkai"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"iantenkai"},"content":"    public String getBy() {","lastModifiedDate":"2023-02-03"},{"lineNumber":53,"author":{"gitId":"iantenkai"},"content":"        return by;","lastModifiedDate":"2023-02-03"},{"lineNumber":54,"author":{"gitId":"iantenkai"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"iantenkai"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":57,"author":{"gitId":"iantenkai"},"content":"     * Returns a string representation of the deadline task.","lastModifiedDate":"2023-02-26"},{"lineNumber":58,"author":{"gitId":"iantenkai"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":59,"author":{"gitId":"iantenkai"},"content":"     * @return string string in the format \"description (by: deadline)\"","lastModifiedDate":"2023-02-26"},{"lineNumber":60,"author":{"gitId":"iantenkai"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":61,"author":{"gitId":"iantenkai"},"content":"    @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":62,"author":{"gitId":"iantenkai"},"content":"    public String toString() {","lastModifiedDate":"2023-02-03"},{"lineNumber":63,"author":{"gitId":"iantenkai"},"content":"        return deliverable + \" (by: \" + by + \")\";","lastModifiedDate":"2023-02-18"},{"lineNumber":64,"author":{"gitId":"iantenkai"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":65,"author":{"gitId":"iantenkai"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"iantenkai":65}},{"path":"src/main/java/DukeFunctions/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iantenkai"},"content":"package DukeFunctions;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"iantenkai"},"content":"import Exceptions.DukeError;","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"iantenkai"},"content":"import Exceptions.MissingInputException;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"iantenkai"},"content":"public class Event extends Todo {","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"iantenkai"},"content":"    protected String from;","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"iantenkai"},"content":"    protected String to;","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"iantenkai"},"content":"    String deliverable;","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"iantenkai"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"iantenkai"},"content":"     * Constructs an Event object with the specified input contents.","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"iantenkai"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"iantenkai"},"content":"     * @param inputContents The input contents of the event.","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"iantenkai"},"content":"     * @throws MissingInputException If the input is missing the \"/from\" or \"/to\" keywords.","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"iantenkai"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"iantenkai"},"content":"    public Event(String inputContents) throws DukeError {","lastModifiedDate":"2023-02-27"},{"lineNumber":19,"author":{"gitId":"iantenkai"},"content":"        super(inputContents);","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"iantenkai"},"content":"        String[] parts \u003d inputContents.split(\"/from|/to\");","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"iantenkai"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"iantenkai"},"content":"            throw new DukeError(\"Missing inputs. Syntax for event: event \u003cdescription\u003e /from \u003ctime\u003e /to \u003ctime\u003e\");","lastModifiedDate":"2023-02-27"},{"lineNumber":26,"author":{"gitId":"iantenkai"},"content":"        } else {","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"iantenkai"},"content":"            String deliverable \u003d parts[0].trim();","lastModifiedDate":"2023-02-27"},{"lineNumber":28,"author":{"gitId":"iantenkai"},"content":"            from \u003d (parts.length \u003e 1) ? parts[1].trim() : \"\";","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"iantenkai"},"content":"            to \u003d (parts.length \u003e 2) ? parts[2].trim() : \"\";","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"iantenkai"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"iantenkai"},"content":"        this.deliverable \u003d deliverable;","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"iantenkai"},"content":"        this.type \u003d \"E\";","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"iantenkai"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"iantenkai"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"iantenkai"},"content":"     * Returns the starting time of the event.","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"iantenkai"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"iantenkai"},"content":"     * @return String The starting time of the event.","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"iantenkai"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"iantenkai"},"content":"    public String getFrom() {","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"iantenkai"},"content":"        return from;","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"iantenkai"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"iantenkai"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"iantenkai"},"content":"     * Returns the ending time of the event.","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"iantenkai"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"iantenkai"},"content":"     * @return String The ending time of the event.","lastModifiedDate":"2023-02-26"},{"lineNumber":49,"author":{"gitId":"iantenkai"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"iantenkai"},"content":"    public String getTo() {","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"iantenkai"},"content":"        return to;","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"iantenkai"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":53,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":54,"author":{"gitId":"iantenkai"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":55,"author":{"gitId":"iantenkai"},"content":"     * Returns a string representation of the event object.","lastModifiedDate":"2023-02-26"},{"lineNumber":56,"author":{"gitId":"iantenkai"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":57,"author":{"gitId":"iantenkai"},"content":"     * @return String A string representation of the event object.","lastModifiedDate":"2023-02-26"},{"lineNumber":58,"author":{"gitId":"iantenkai"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":59,"author":{"gitId":"iantenkai"},"content":"    @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":60,"author":{"gitId":"iantenkai"},"content":"    public String toString() {","lastModifiedDate":"2023-02-03"},{"lineNumber":61,"author":{"gitId":"iantenkai"},"content":"        return deliverable + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-02-03"},{"lineNumber":62,"author":{"gitId":"iantenkai"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":63,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":64,"author":{"gitId":"iantenkai"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"iantenkai":64}},{"path":"src/main/java/DukeFunctions/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iantenkai"},"content":"package DukeFunctions;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"iantenkai"},"content":"import Exceptions.DukeError;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"iantenkai"},"content":"import Exceptions.MissingInputException;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"iantenkai"},"content":"/**","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"iantenkai"},"content":" * Takes in a string input and execute the command within it.","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"iantenkai"},"content":" */","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"iantenkai"},"content":"public class Parser { //takes in a string input and executes the command within it","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"iantenkai"},"content":"    public Parser() {","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"iantenkai"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"iantenkai"},"content":"    public boolean isExit \u003d false;","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"iantenkai"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"iantenkai"},"content":"     * Parses the given input command and executes the appropriate action.","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"iantenkai"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"iantenkai"},"content":"     * @param input The input command to parse.","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"iantenkai"},"content":"     * @param tasks The list of tasks to modify based on the command.","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"iantenkai"},"content":"     * @param ui    The user interface to display output.","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"iantenkai"},"content":"     * @throws DukeError If there is an error parsing or executing the command.","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"iantenkai"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"iantenkai"},"content":"    public void parseCommand(String input, TaskList tasks, Ui ui) throws DukeError {","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"iantenkai"},"content":"        String[] words \u003d input.split(\" \");","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"iantenkai"},"content":"        String command \u003d words[0];","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"iantenkai"},"content":"        String inputContents \u003d input.substring(command.length()).trim(); //","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"iantenkai"},"content":"        try {","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"iantenkai"},"content":"            switch (command) { // todo; put the logic for this shit in the","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"iantenkai"},"content":"                case \"list\":","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"iantenkai"},"content":"                    if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"iantenkai"},"content":"                        ui.listEmpty();","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"iantenkai"},"content":"                    } else {","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"iantenkai"},"content":"                        ui.listTasks(tasks);","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"iantenkai"},"content":"                    }","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"iantenkai"},"content":"                    break;","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"iantenkai"},"content":"                case \"mark\":","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"iantenkai"},"content":"                    int markTarget \u003d Integer.parseInt(words[1]) - 1;","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"iantenkai"},"content":"                    if (markTarget \u003e\u003d 0 \u0026\u0026 markTarget \u003c tasks.size()) {","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"iantenkai"},"content":"                        tasks.get(markTarget).mark();","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"iantenkai"},"content":"                        ui.markAck(tasks.get(markTarget));","lastModifiedDate":"2023-02-26"},{"lineNumber":49,"author":{"gitId":"iantenkai"},"content":"                    } else {","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"iantenkai"},"content":"                        ui.taskDoesNotexist();","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"iantenkai"},"content":"                    }","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"iantenkai"},"content":"                    break;","lastModifiedDate":"2023-02-26"},{"lineNumber":53,"author":{"gitId":"iantenkai"},"content":"                case \"unmark\":","lastModifiedDate":"2023-02-26"},{"lineNumber":54,"author":{"gitId":"iantenkai"},"content":"                    int target \u003d Integer.parseInt(words[1]) - 1;","lastModifiedDate":"2023-02-26"},{"lineNumber":55,"author":{"gitId":"iantenkai"},"content":"                    if (target \u003e\u003d 0 \u0026\u0026 target \u003c tasks.size()) {","lastModifiedDate":"2023-02-26"},{"lineNumber":56,"author":{"gitId":"iantenkai"},"content":"                        tasks.get(target).unMark();","lastModifiedDate":"2023-02-26"},{"lineNumber":57,"author":{"gitId":"iantenkai"},"content":"                        ui.unmarkAck(tasks.get(target));","lastModifiedDate":"2023-02-26"},{"lineNumber":58,"author":{"gitId":"iantenkai"},"content":"                    } else {","lastModifiedDate":"2023-02-26"},{"lineNumber":59,"author":{"gitId":"iantenkai"},"content":"                        ui.taskDoesNotexist();","lastModifiedDate":"2023-02-26"},{"lineNumber":60,"author":{"gitId":"iantenkai"},"content":"                    }","lastModifiedDate":"2023-02-26"},{"lineNumber":61,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":62,"author":{"gitId":"iantenkai"},"content":"                    break;","lastModifiedDate":"2023-02-26"},{"lineNumber":63,"author":{"gitId":"iantenkai"},"content":"                case \"todo\":","lastModifiedDate":"2023-02-26"},{"lineNumber":64,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":65,"author":{"gitId":"iantenkai"},"content":"                    // if (index \u003c 100) {","lastModifiedDate":"2023-02-26"},{"lineNumber":66,"author":{"gitId":"iantenkai"},"content":"                    Todo newTodo \u003d new Todo(inputContents);","lastModifiedDate":"2023-02-26"},{"lineNumber":67,"author":{"gitId":"iantenkai"},"content":"                    tasks.add(newTodo);","lastModifiedDate":"2023-02-26"},{"lineNumber":68,"author":{"gitId":"iantenkai"},"content":"                    ui.acknowledge(newTodo);","lastModifiedDate":"2023-02-26"},{"lineNumber":69,"author":{"gitId":"iantenkai"},"content":"                    //System.out.println(\"覚えましたよ～ (todo recorded) \" + newTodo.toString());","lastModifiedDate":"2023-02-26"},{"lineNumber":70,"author":{"gitId":"iantenkai"},"content":"                    // index++;","lastModifiedDate":"2023-02-26"},{"lineNumber":71,"author":{"gitId":"iantenkai"},"content":"                    // }","lastModifiedDate":"2023-02-26"},{"lineNumber":72,"author":{"gitId":"iantenkai"},"content":"                    break;","lastModifiedDate":"2023-02-26"},{"lineNumber":73,"author":{"gitId":"iantenkai"},"content":"                case \"deadline\":","lastModifiedDate":"2023-02-26"},{"lineNumber":74,"author":{"gitId":"iantenkai"},"content":"                    // if (index \u003c 100) {","lastModifiedDate":"2023-02-26"},{"lineNumber":75,"author":{"gitId":"iantenkai"},"content":"                    Deadline newDeadline \u003d new Deadline(inputContents);","lastModifiedDate":"2023-02-26"},{"lineNumber":76,"author":{"gitId":"iantenkai"},"content":"                    tasks.add(newDeadline);","lastModifiedDate":"2023-02-26"},{"lineNumber":77,"author":{"gitId":"iantenkai"},"content":"                    ui.acknowledge(newDeadline);","lastModifiedDate":"2023-02-26"},{"lineNumber":78,"author":{"gitId":"iantenkai"},"content":"                    // System.out.println(\"覚えましたよ～ (deadline recorded) \" + newDeadline.toString());","lastModifiedDate":"2023-02-26"},{"lineNumber":79,"author":{"gitId":"iantenkai"},"content":"                    // index++;","lastModifiedDate":"2023-02-26"},{"lineNumber":80,"author":{"gitId":"iantenkai"},"content":"                    //  }","lastModifiedDate":"2023-02-26"},{"lineNumber":81,"author":{"gitId":"iantenkai"},"content":"                    break;","lastModifiedDate":"2023-02-26"},{"lineNumber":82,"author":{"gitId":"iantenkai"},"content":"                case \"event\":","lastModifiedDate":"2023-02-26"},{"lineNumber":83,"author":{"gitId":"iantenkai"},"content":"                    // if (index \u003c 100) {","lastModifiedDate":"2023-02-26"},{"lineNumber":84,"author":{"gitId":"iantenkai"},"content":"                    Event newEvent \u003d new Event(inputContents);","lastModifiedDate":"2023-02-26"},{"lineNumber":85,"author":{"gitId":"iantenkai"},"content":"                    tasks.add(newEvent);","lastModifiedDate":"2023-02-26"},{"lineNumber":86,"author":{"gitId":"iantenkai"},"content":"                    ui.acknowledge(newEvent);","lastModifiedDate":"2023-02-26"},{"lineNumber":87,"author":{"gitId":"iantenkai"},"content":"                    // System.out.println(\"覚えましたよ～ (event recorded) \" + newEvent.toString());","lastModifiedDate":"2023-02-26"},{"lineNumber":88,"author":{"gitId":"iantenkai"},"content":"                    //index++;","lastModifiedDate":"2023-02-26"},{"lineNumber":89,"author":{"gitId":"iantenkai"},"content":"                    // }","lastModifiedDate":"2023-02-26"},{"lineNumber":90,"author":{"gitId":"iantenkai"},"content":"                    break;","lastModifiedDate":"2023-02-26"},{"lineNumber":91,"author":{"gitId":"iantenkai"},"content":"                case \"delete\":","lastModifiedDate":"2023-02-26"},{"lineNumber":92,"author":{"gitId":"iantenkai"},"content":"                    int deleteTarget \u003d Integer.parseInt(words[1]) - 1;","lastModifiedDate":"2023-02-26"},{"lineNumber":93,"author":{"gitId":"iantenkai"},"content":"                    if (deleteTarget \u003e\u003d 0 \u0026\u0026 deleteTarget \u003c tasks.size()) {","lastModifiedDate":"2023-02-26"},{"lineNumber":94,"author":{"gitId":"iantenkai"},"content":"                        ui.ackDelete(tasks.get(deleteTarget));","lastModifiedDate":"2023-02-26"},{"lineNumber":95,"author":{"gitId":"iantenkai"},"content":"                        tasks.remove(deleteTarget);","lastModifiedDate":"2023-02-26"},{"lineNumber":96,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":97,"author":{"gitId":"iantenkai"},"content":"                    } else {","lastModifiedDate":"2023-02-26"},{"lineNumber":98,"author":{"gitId":"iantenkai"},"content":"                        ui.doesNotExist();","lastModifiedDate":"2023-02-26"},{"lineNumber":99,"author":{"gitId":"iantenkai"},"content":"                    }","lastModifiedDate":"2023-02-26"},{"lineNumber":100,"author":{"gitId":"iantenkai"},"content":"                    break;","lastModifiedDate":"2023-02-26"},{"lineNumber":101,"author":{"gitId":"iantenkai"},"content":"                case \"find\":","lastModifiedDate":"2023-02-26"},{"lineNumber":102,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":103,"author":{"gitId":"iantenkai"},"content":"                    if (words.length \u003e 1) {","lastModifiedDate":"2023-02-27"},{"lineNumber":104,"author":{"gitId":"iantenkai"},"content":"                        String keyword \u003d words[1];","lastModifiedDate":"2023-02-26"},{"lineNumber":105,"author":{"gitId":"iantenkai"},"content":"                        tasks.find(ui, keyword);","lastModifiedDate":"2023-02-26"},{"lineNumber":106,"author":{"gitId":"iantenkai"},"content":"                    } else {","lastModifiedDate":"2023-02-27"},{"lineNumber":107,"author":{"gitId":"iantenkai"},"content":"                        throw new DukeError(\"No search keyword\");","lastModifiedDate":"2023-02-27"},{"lineNumber":108,"author":{"gitId":"iantenkai"},"content":"                    }","lastModifiedDate":"2023-02-27"},{"lineNumber":109,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":110,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":111,"author":{"gitId":"iantenkai"},"content":"                    break;","lastModifiedDate":"2023-02-26"},{"lineNumber":112,"author":{"gitId":"iantenkai"},"content":"                case \"clearlist\":","lastModifiedDate":"2023-02-26"},{"lineNumber":113,"author":{"gitId":"iantenkai"},"content":"                    tasks.clear();","lastModifiedDate":"2023-02-26"},{"lineNumber":114,"author":{"gitId":"iantenkai"},"content":"                    ui.clearAck();","lastModifiedDate":"2023-02-26"},{"lineNumber":115,"author":{"gitId":"iantenkai"},"content":"                    break;","lastModifiedDate":"2023-02-26"},{"lineNumber":116,"author":{"gitId":"iantenkai"},"content":"                case \"bye\":","lastModifiedDate":"2023-02-26"},{"lineNumber":117,"author":{"gitId":"iantenkai"},"content":"                    this.isExit \u003d true;","lastModifiedDate":"2023-02-26"},{"lineNumber":118,"author":{"gitId":"iantenkai"},"content":"                    break;","lastModifiedDate":"2023-02-26"},{"lineNumber":119,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":120,"author":{"gitId":"iantenkai"},"content":"                default:","lastModifiedDate":"2023-02-26"},{"lineNumber":121,"author":{"gitId":"iantenkai"},"content":"                    ui.badCommand();","lastModifiedDate":"2023-02-26"},{"lineNumber":122,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":123,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":124,"author":{"gitId":"iantenkai"},"content":"                    break;","lastModifiedDate":"2023-02-26"},{"lineNumber":125,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":126,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":127,"author":{"gitId":"iantenkai"},"content":"            }","lastModifiedDate":"2023-02-26"},{"lineNumber":128,"author":{"gitId":"iantenkai"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2023-02-26"},{"lineNumber":129,"author":{"gitId":"iantenkai"},"content":"            throw new DukeError(\"NullPointerException\");","lastModifiedDate":"2023-02-26"},{"lineNumber":130,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":131,"author":{"gitId":"iantenkai"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":132,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":133,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":134,"author":{"gitId":"iantenkai"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":135,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":136,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":137,"author":{"gitId":"iantenkai"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"iantenkai":137}},{"path":"src/main/java/DukeFunctions/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iantenkai"},"content":"package DukeFunctions;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"iantenkai"},"content":"import Exceptions.DukeError;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"iantenkai"},"content":"import Exceptions.MissingInputException;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"iantenkai"},"content":"import java.io.File;","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"iantenkai"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"iantenkai"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"iantenkai"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"iantenkai"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"iantenkai"},"content":"public class Storage {","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"iantenkai"},"content":"    private File f;","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"iantenkai"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"iantenkai"},"content":"     * Creates a new Storage object with the specified file path.","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"iantenkai"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"iantenkai"},"content":"     * @param filePath Path of the file to be read from and written to.","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"iantenkai"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"iantenkai"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"iantenkai"},"content":"        f \u003d new File(filePath);","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"iantenkai"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"iantenkai"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"iantenkai"},"content":"     * Saves the taskList tasks to the file","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"iantenkai"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"iantenkai"},"content":"     * @param tasks The taskList to be saved.","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"iantenkai"},"content":"     * @throws DukeError If there is an error writing to the file.","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"iantenkai"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"iantenkai"},"content":"    public void save(TaskList tasks) throws DukeError {","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"iantenkai"},"content":"        try {","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"iantenkai"},"content":"            StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"iantenkai"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"iantenkai"},"content":"                output.append(i + 1).append(\". [\")","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"iantenkai"},"content":"                        .append(tasks.get(i).getType()).append(\"][\")","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"iantenkai"},"content":"                        .append(tasks.get(i).getIsDone()).append(\"] \")","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"iantenkai"},"content":"                        .append(tasks.get(i).toString()).append(\"\\n\");","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"iantenkai"},"content":"            }","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"iantenkai"},"content":"            String fileText \u003d output.toString();","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"iantenkai"},"content":"            FileWriter fw \u003d new FileWriter(\"memory.txt\");","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"iantenkai"},"content":"            fw.write(fileText);","lastModifiedDate":"2023-02-26"},{"lineNumber":49,"author":{"gitId":"iantenkai"},"content":"            fw.close();","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"iantenkai"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"iantenkai"},"content":"            throw new DukeError(\"IOException\");","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"iantenkai"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":53,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":54,"author":{"gitId":"iantenkai"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":55,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":56,"author":{"gitId":"iantenkai"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":57,"author":{"gitId":"iantenkai"},"content":"     * Loads the list of tasks from the file.","lastModifiedDate":"2023-02-26"},{"lineNumber":58,"author":{"gitId":"iantenkai"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":59,"author":{"gitId":"iantenkai"},"content":"     * @return the TaskList loaded from the file.","lastModifiedDate":"2023-02-26"},{"lineNumber":60,"author":{"gitId":"iantenkai"},"content":"     * @throws DukeError If there is an error reading from the file.","lastModifiedDate":"2023-02-26"},{"lineNumber":61,"author":{"gitId":"iantenkai"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":62,"author":{"gitId":"iantenkai"},"content":"    public ArrayList\u003cTodo\u003e load() throws DukeError {","lastModifiedDate":"2023-02-26"},{"lineNumber":63,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":64,"author":{"gitId":"iantenkai"},"content":"        ArrayList\u003cTodo\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-26"},{"lineNumber":65,"author":{"gitId":"iantenkai"},"content":"        try {","lastModifiedDate":"2023-02-26"},{"lineNumber":66,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":67,"author":{"gitId":"iantenkai"},"content":"            if (!f.exists()) {","lastModifiedDate":"2023-02-26"},{"lineNumber":68,"author":{"gitId":"iantenkai"},"content":"                System.out.println(\"making a new memory file\");","lastModifiedDate":"2023-02-26"},{"lineNumber":69,"author":{"gitId":"iantenkai"},"content":"                FileWriter fw \u003d new FileWriter(\"memory.txt\");","lastModifiedDate":"2023-02-26"},{"lineNumber":70,"author":{"gitId":"iantenkai"},"content":"                fw.close();","lastModifiedDate":"2023-02-26"},{"lineNumber":71,"author":{"gitId":"iantenkai"},"content":"            } else {","lastModifiedDate":"2023-02-26"},{"lineNumber":72,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":73,"author":{"gitId":"iantenkai"},"content":"                Scanner scanner \u003d new Scanner(f);","lastModifiedDate":"2023-02-26"},{"lineNumber":74,"author":{"gitId":"iantenkai"},"content":"                while (scanner.hasNextLine()) {","lastModifiedDate":"2023-02-26"},{"lineNumber":75,"author":{"gitId":"iantenkai"},"content":"                    String line \u003d scanner.nextLine();","lastModifiedDate":"2023-02-26"},{"lineNumber":76,"author":{"gitId":"iantenkai"},"content":"                    // get type","lastModifiedDate":"2023-02-26"},{"lineNumber":77,"author":{"gitId":"iantenkai"},"content":"                    String type \u003d line.substring(line.indexOf(\"[\") + 1, line.indexOf(\"]\"));","lastModifiedDate":"2023-02-26"},{"lineNumber":78,"author":{"gitId":"iantenkai"},"content":"                    //get status","lastModifiedDate":"2023-02-26"},{"lineNumber":79,"author":{"gitId":"iantenkai"},"content":"                    String status \u003d line.substring(line.indexOf(\"[\", line.indexOf(\"[\") + 1) + 1, line.indexOf(\"]\", line.indexOf(\"]\") + 1));","lastModifiedDate":"2023-02-26"},{"lineNumber":80,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":81,"author":{"gitId":"iantenkai"},"content":"                    String description;","lastModifiedDate":"2023-02-26"},{"lineNumber":82,"author":{"gitId":"iantenkai"},"content":"                    if (type.equals(\"T\")) {","lastModifiedDate":"2023-02-26"},{"lineNumber":83,"author":{"gitId":"iantenkai"},"content":"                        description \u003d line.substring(line.indexOf(\"]\") + 5);","lastModifiedDate":"2023-02-26"},{"lineNumber":84,"author":{"gitId":"iantenkai"},"content":"                        Todo newTodo \u003d new Todo(description);","lastModifiedDate":"2023-02-26"},{"lineNumber":85,"author":{"gitId":"iantenkai"},"content":"                        tasks.add(newTodo);","lastModifiedDate":"2023-02-26"},{"lineNumber":86,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":87,"author":{"gitId":"iantenkai"},"content":"                    } else {","lastModifiedDate":"2023-02-26"},{"lineNumber":88,"author":{"gitId":"iantenkai"},"content":"                        int start \u003d line.indexOf(\"]\") + 5;","lastModifiedDate":"2023-02-26"},{"lineNumber":89,"author":{"gitId":"iantenkai"},"content":"                        int end \u003d line.indexOf(\"(\") - 1;","lastModifiedDate":"2023-02-26"},{"lineNumber":90,"author":{"gitId":"iantenkai"},"content":"                        description \u003d line.substring(start, end);","lastModifiedDate":"2023-02-26"},{"lineNumber":91,"author":{"gitId":"iantenkai"},"content":"                    }","lastModifiedDate":"2023-02-26"},{"lineNumber":92,"author":{"gitId":"iantenkai"},"content":"                    String by \u003d null;","lastModifiedDate":"2023-02-26"},{"lineNumber":93,"author":{"gitId":"iantenkai"},"content":"                    String from \u003d null;","lastModifiedDate":"2023-02-26"},{"lineNumber":94,"author":{"gitId":"iantenkai"},"content":"                    String to \u003d null;","lastModifiedDate":"2023-02-26"},{"lineNumber":95,"author":{"gitId":"iantenkai"},"content":"                    if (type.equals(\"D\")) {","lastModifiedDate":"2023-02-26"},{"lineNumber":96,"author":{"gitId":"iantenkai"},"content":"                        int start \u003d line.indexOf(\"by:\") + 3;","lastModifiedDate":"2023-02-26"},{"lineNumber":97,"author":{"gitId":"iantenkai"},"content":"                        int end \u003d line.indexOf(\")\", line.indexOf(\"by:\"));","lastModifiedDate":"2023-02-26"},{"lineNumber":98,"author":{"gitId":"iantenkai"},"content":"                        by \u003d line.substring(start, end);","lastModifiedDate":"2023-02-26"},{"lineNumber":99,"author":{"gitId":"iantenkai"},"content":"                        String deadlineInput \u003d description + \"/by\" + by;","lastModifiedDate":"2023-02-26"},{"lineNumber":100,"author":{"gitId":"iantenkai"},"content":"                        Deadline newDeadline \u003d new Deadline(deadlineInput);","lastModifiedDate":"2023-02-26"},{"lineNumber":101,"author":{"gitId":"iantenkai"},"content":"                        tasks.add(newDeadline);","lastModifiedDate":"2023-02-26"},{"lineNumber":102,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":103,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":104,"author":{"gitId":"iantenkai"},"content":"                    } else if (type.equals(\"E\")) {","lastModifiedDate":"2023-02-26"},{"lineNumber":105,"author":{"gitId":"iantenkai"},"content":"                        int fromIndex \u003d line.indexOf(\"from:\");","lastModifiedDate":"2023-02-26"},{"lineNumber":106,"author":{"gitId":"iantenkai"},"content":"                        int toIndex \u003d line.indexOf(\"to:\");","lastModifiedDate":"2023-02-26"},{"lineNumber":107,"author":{"gitId":"iantenkai"},"content":"                        from \u003d line.substring(fromIndex + 5, line.indexOf(\"to:\", fromIndex));","lastModifiedDate":"2023-02-26"},{"lineNumber":108,"author":{"gitId":"iantenkai"},"content":"                        to \u003d line.substring(toIndex + 3, line.indexOf(\")\", toIndex));","lastModifiedDate":"2023-02-26"},{"lineNumber":109,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":110,"author":{"gitId":"iantenkai"},"content":"                        String eventInput \u003d description + \"/from\" + from + \"/to\" + to;","lastModifiedDate":"2023-02-26"},{"lineNumber":111,"author":{"gitId":"iantenkai"},"content":"                        Event newEvent \u003d new Event(eventInput);","lastModifiedDate":"2023-02-26"},{"lineNumber":112,"author":{"gitId":"iantenkai"},"content":"                        tasks.add(newEvent);","lastModifiedDate":"2023-02-26"},{"lineNumber":113,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":114,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":115,"author":{"gitId":"iantenkai"},"content":"                    }","lastModifiedDate":"2023-02-26"},{"lineNumber":116,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":117,"author":{"gitId":"iantenkai"},"content":"                }","lastModifiedDate":"2023-02-26"},{"lineNumber":118,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":119,"author":{"gitId":"iantenkai"},"content":"                scanner.close();","lastModifiedDate":"2023-02-26"},{"lineNumber":120,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":121,"author":{"gitId":"iantenkai"},"content":"            }","lastModifiedDate":"2023-02-26"},{"lineNumber":122,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":123,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":124,"author":{"gitId":"iantenkai"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-26"},{"lineNumber":125,"author":{"gitId":"iantenkai"},"content":"            throw new DukeError(\"IOException\");","lastModifiedDate":"2023-02-26"},{"lineNumber":126,"author":{"gitId":"iantenkai"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":127,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":128,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":129,"author":{"gitId":"iantenkai"},"content":"        return tasks;","lastModifiedDate":"2023-02-26"},{"lineNumber":130,"author":{"gitId":"iantenkai"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":131,"author":{"gitId":"iantenkai"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"iantenkai":131}},{"path":"src/main/java/DukeFunctions/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iantenkai"},"content":"package DukeFunctions;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"iantenkai"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"iantenkai"},"content":"public class TaskList {","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"iantenkai"},"content":"    public ArrayList\u003cTodo\u003e TodoList;","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"iantenkai"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"iantenkai"},"content":"     * Constructs an empty TaskList","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"iantenkai"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"iantenkai"},"content":"    public TaskList() {","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"iantenkai"},"content":"        TodoList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"iantenkai"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"iantenkai"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"iantenkai"},"content":"     * Constructs a TaskList from an arraylist. Called when constructing","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"iantenkai"},"content":"     * a TaskList from a saved file","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"iantenkai"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"iantenkai"},"content":"     * @param savedList the arraylist used to construct the Tasklist","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"iantenkai"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"iantenkai"},"content":"    public TaskList(ArrayList\u003cTodo\u003e savedList) {","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"iantenkai"},"content":"        this.TodoList \u003d savedList;","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"iantenkai"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"iantenkai"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"iantenkai"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"iantenkai"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"iantenkai"},"content":"     * @param newTask task to be added","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"iantenkai"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"iantenkai"},"content":"    public void add(Todo newTask) {","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"iantenkai"},"content":"        this.TodoList.add(newTask);","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"iantenkai"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"iantenkai"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"iantenkai"},"content":"     * Gets the number of tasks in the list.","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"iantenkai"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"iantenkai"},"content":"     * @return the number of tasks in the tsk list","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"iantenkai"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"iantenkai"},"content":"    public int size() {","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"iantenkai"},"content":"        return TodoList.size();","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"iantenkai"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"iantenkai"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"iantenkai"},"content":"     * Gets a task at index i in the list","lastModifiedDate":"2023-02-26"},{"lineNumber":49,"author":{"gitId":"iantenkai"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"iantenkai"},"content":"     * @param i the index of the task to be retrieved","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"iantenkai"},"content":"     * @return task at the specified index","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"iantenkai"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":53,"author":{"gitId":"iantenkai"},"content":"    public Todo get(int i) {","lastModifiedDate":"2023-02-26"},{"lineNumber":54,"author":{"gitId":"iantenkai"},"content":"        return TodoList.get(i);","lastModifiedDate":"2023-02-26"},{"lineNumber":55,"author":{"gitId":"iantenkai"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":56,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":57,"author":{"gitId":"iantenkai"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":58,"author":{"gitId":"iantenkai"},"content":"     * Removes all tasks from the task list.","lastModifiedDate":"2023-02-26"},{"lineNumber":59,"author":{"gitId":"iantenkai"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":60,"author":{"gitId":"iantenkai"},"content":"    public void clear() {","lastModifiedDate":"2023-02-26"},{"lineNumber":61,"author":{"gitId":"iantenkai"},"content":"        TodoList.clear();","lastModifiedDate":"2023-02-26"},{"lineNumber":62,"author":{"gitId":"iantenkai"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":63,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":64,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":65,"author":{"gitId":"iantenkai"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":66,"author":{"gitId":"iantenkai"},"content":"     * Removes a task from the task list.","lastModifiedDate":"2023-02-26"},{"lineNumber":67,"author":{"gitId":"iantenkai"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":68,"author":{"gitId":"iantenkai"},"content":"     * @param i the index of the task to be removed","lastModifiedDate":"2023-02-26"},{"lineNumber":69,"author":{"gitId":"iantenkai"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":70,"author":{"gitId":"iantenkai"},"content":"    public void remove(int i) {","lastModifiedDate":"2023-02-26"},{"lineNumber":71,"author":{"gitId":"iantenkai"},"content":"        TodoList.remove(i);","lastModifiedDate":"2023-02-26"},{"lineNumber":72,"author":{"gitId":"iantenkai"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":73,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":74,"author":{"gitId":"iantenkai"},"content":"    public void find(Ui ui, String keyword) {","lastModifiedDate":"2023-02-26"},{"lineNumber":75,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":76,"author":{"gitId":"iantenkai"},"content":"        TaskList searchResults \u003d new TaskList();","lastModifiedDate":"2023-02-26"},{"lineNumber":77,"author":{"gitId":"iantenkai"},"content":"        this.TodoList.forEach(todo -\u003e {","lastModifiedDate":"2023-02-26"},{"lineNumber":78,"author":{"gitId":"iantenkai"},"content":"            if (todo.getDescription().contains(keyword)) {","lastModifiedDate":"2023-02-27"},{"lineNumber":79,"author":{"gitId":"iantenkai"},"content":"                searchResults.add(todo);","lastModifiedDate":"2023-02-26"},{"lineNumber":80,"author":{"gitId":"iantenkai"},"content":"            }","lastModifiedDate":"2023-02-26"},{"lineNumber":81,"author":{"gitId":"iantenkai"},"content":"        });","lastModifiedDate":"2023-02-26"},{"lineNumber":82,"author":{"gitId":"iantenkai"},"content":"        ui.printSearchResults(searchResults);","lastModifiedDate":"2023-02-26"},{"lineNumber":83,"author":{"gitId":"iantenkai"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":84,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":85,"author":{"gitId":"iantenkai"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"iantenkai":85}},{"path":"src/main/java/DukeFunctions/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iantenkai"},"content":"package DukeFunctions;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"iantenkai"},"content":"/**","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"iantenkai"},"content":" * Represents a task on the TaskList.","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"iantenkai"},"content":" */","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"iantenkai"},"content":"public class Todo {","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"iantenkai"},"content":"    private String description;","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"iantenkai"},"content":"    String type;","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"iantenkai"},"content":"    private boolean isDone;","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"iantenkai"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"iantenkai"},"content":"     * Constructor for the Todo class.","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"iantenkai"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"iantenkai"},"content":"     * @param contents contents of the task.","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"iantenkai"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"iantenkai"},"content":"    public Todo(String contents) {","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"iantenkai"},"content":"        this.description \u003d contents;","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"iantenkai"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"iantenkai"},"content":"        this.type \u003d \"T\";","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"iantenkai"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"iantenkai"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"iantenkai"},"content":"     * Gets the status of the task.","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"iantenkai"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"iantenkai"},"content":"     * @return string status of the task (either \" \" or \"X\").","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"iantenkai"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"iantenkai"},"content":"    public String getIsDone() {","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"iantenkai"},"content":"        String status \u003d \" \";","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"iantenkai"},"content":"        if (this.isDone \u003d\u003d true) {","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"iantenkai"},"content":"            status \u003d \"X\";","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"iantenkai"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"iantenkai"},"content":"        return status;","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"iantenkai"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"iantenkai"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"iantenkai"},"content":"     * Gets the type of the task.","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"iantenkai"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"iantenkai"},"content":"     * @return string type of the task.","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"iantenkai"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"iantenkai"},"content":"    public String getType() {","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"iantenkai"},"content":"        return this.type;","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"iantenkai"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"iantenkai"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"iantenkai"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-02-26"},{"lineNumber":49,"author":{"gitId":"iantenkai"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"iantenkai"},"content":"    public void mark() {","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"iantenkai"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"iantenkai"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":53,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":54,"author":{"gitId":"iantenkai"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":55,"author":{"gitId":"iantenkai"},"content":"     * Marks the task as not done.","lastModifiedDate":"2023-02-26"},{"lineNumber":56,"author":{"gitId":"iantenkai"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":57,"author":{"gitId":"iantenkai"},"content":"    public void unMark() {","lastModifiedDate":"2023-02-03"},{"lineNumber":58,"author":{"gitId":"iantenkai"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-02-03"},{"lineNumber":59,"author":{"gitId":"iantenkai"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":60,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":61,"author":{"gitId":"iantenkai"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":62,"author":{"gitId":"iantenkai"},"content":"     * Gets the description of the task.","lastModifiedDate":"2023-02-26"},{"lineNumber":63,"author":{"gitId":"iantenkai"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":64,"author":{"gitId":"iantenkai"},"content":"     * @return string description of the task.","lastModifiedDate":"2023-02-26"},{"lineNumber":65,"author":{"gitId":"iantenkai"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":66,"author":{"gitId":"iantenkai"},"content":"    public String getDescription() {","lastModifiedDate":"2023-02-03"},{"lineNumber":67,"author":{"gitId":"iantenkai"},"content":"        return description;","lastModifiedDate":"2023-02-03"},{"lineNumber":68,"author":{"gitId":"iantenkai"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":69,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":70,"author":{"gitId":"iantenkai"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":71,"author":{"gitId":"iantenkai"},"content":"     * Returns the description of the task.","lastModifiedDate":"2023-02-26"},{"lineNumber":72,"author":{"gitId":"iantenkai"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":73,"author":{"gitId":"iantenkai"},"content":"     * @return string description of the task.","lastModifiedDate":"2023-02-26"},{"lineNumber":74,"author":{"gitId":"iantenkai"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":75,"author":{"gitId":"iantenkai"},"content":"    @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":76,"author":{"gitId":"iantenkai"},"content":"    public String toString() {","lastModifiedDate":"2023-02-03"},{"lineNumber":77,"author":{"gitId":"iantenkai"},"content":"        return description;","lastModifiedDate":"2023-02-18"},{"lineNumber":78,"author":{"gitId":"iantenkai"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":79,"author":{"gitId":"iantenkai"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"iantenkai":79}},{"path":"src/main/java/DukeFunctions/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iantenkai"},"content":"package DukeFunctions;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"iantenkai"},"content":"import Exceptions.DukeError;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"iantenkai"},"content":"public class Ui {","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"iantenkai"},"content":"    public void welcome() {","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"iantenkai"},"content":"        System.out.println(\"おかえり～　ご飯にする？お風呂にする？それとも。。。　わ・た・し？ (start)\");","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"iantenkai"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"iantenkai"},"content":"    public void bye() {","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"iantenkai"},"content":"        System.out.println(\"じゃねえ～ (bye)\");","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"iantenkai"},"content":"        ;","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"iantenkai"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"iantenkai"},"content":"    public void listEmpty() {","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"iantenkai"},"content":"        System.out.println(\"何もいない。。。頭のように。。。(list is empty)\");","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"iantenkai"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"iantenkai"},"content":"    public void doesNotExist() {","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"iantenkai"},"content":"        System.out.println(\"バカにさせないで。その目標は実在しません。\");","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"iantenkai"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"iantenkai"},"content":"    void badCommand() {","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"iantenkai"},"content":"        System.out.println(\"i dont recognize that command\");","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"iantenkai"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"iantenkai"},"content":"    public void taskDoesNotexist() {","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"iantenkai"},"content":"        System.out.println(\"バカにさせないで。その目標は実在しません。(that task does not exist)\");","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"iantenkai"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"iantenkai"},"content":"    public void clearAck() {","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"iantenkai"},"content":"        System.out.println(\"List cleared\");","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"iantenkai"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"iantenkai"},"content":"    public void acknowledge(Todo newTask) {","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"iantenkai"},"content":"        switch (newTask.getType()) {","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"iantenkai"},"content":"            case \"T\":","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"iantenkai"},"content":"                System.out.println(\"覚えましたよ～ (todo recorded) \" + newTask.toString());","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"iantenkai"},"content":"                break;","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"iantenkai"},"content":"            case \"D\":","lastModifiedDate":"2023-02-26"},{"lineNumber":49,"author":{"gitId":"iantenkai"},"content":"                System.out.println(\"覚えましたよ～ (deadline recorded) \" + newTask.toString());","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"iantenkai"},"content":"                break;","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"iantenkai"},"content":"            case \"E\":","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"iantenkai"},"content":"                System.out.println(\"覚えましたよ～ (event recorded) \" + newTask.toString());","lastModifiedDate":"2023-02-26"},{"lineNumber":53,"author":{"gitId":"iantenkai"},"content":"                break;","lastModifiedDate":"2023-02-26"},{"lineNumber":54,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":55,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":56,"author":{"gitId":"iantenkai"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":57,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":58,"author":{"gitId":"iantenkai"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":59,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":60,"author":{"gitId":"iantenkai"},"content":"    public void showError(DukeError e) {","lastModifiedDate":"2023-02-26"},{"lineNumber":61,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":62,"author":{"gitId":"iantenkai"},"content":"        System.out.println(\"error has occured: \" + e.problem);","lastModifiedDate":"2023-02-26"},{"lineNumber":63,"author":{"gitId":"iantenkai"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":64,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":65,"author":{"gitId":"iantenkai"},"content":"    public void ackDelete(Todo task) {","lastModifiedDate":"2023-02-26"},{"lineNumber":66,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":67,"author":{"gitId":"iantenkai"},"content":"        System.out.println(\"deleted this task: \" + task.toString());","lastModifiedDate":"2023-02-26"},{"lineNumber":68,"author":{"gitId":"iantenkai"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":69,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":70,"author":{"gitId":"iantenkai"},"content":"    public void markAck(Todo task) {","lastModifiedDate":"2023-02-26"},{"lineNumber":71,"author":{"gitId":"iantenkai"},"content":"        System.out.println(\"目標達成！- [\" + task.getIsDone() + \"] \" + task.toString());","lastModifiedDate":"2023-02-26"},{"lineNumber":72,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":73,"author":{"gitId":"iantenkai"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":74,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":75,"author":{"gitId":"iantenkai"},"content":"    public void unmarkAck(Todo task) {","lastModifiedDate":"2023-02-26"},{"lineNumber":76,"author":{"gitId":"iantenkai"},"content":"        System.out.println(\"ええ。。。噓つき。- [\" + task.getIsDone() + \"] \" + task.toString());","lastModifiedDate":"2023-02-26"},{"lineNumber":77,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":78,"author":{"gitId":"iantenkai"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":79,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":80,"author":{"gitId":"iantenkai"},"content":"    public void listTasks(TaskList tasks) {","lastModifiedDate":"2023-02-26"},{"lineNumber":81,"author":{"gitId":"iantenkai"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-02-26"},{"lineNumber":82,"author":{"gitId":"iantenkai"},"content":"            System.out.println(i + 1 + \". [\" + tasks.get(i).getType() + \"]\" + \"[\" + tasks.get(i).getIsDone() + \"] \" + tasks.get(i).toString());","lastModifiedDate":"2023-02-26"},{"lineNumber":83,"author":{"gitId":"iantenkai"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":84,"author":{"gitId":"iantenkai"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":85,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":86,"author":{"gitId":"iantenkai"},"content":"    public void printSearchResults(TaskList searchResults) {","lastModifiedDate":"2023-02-26"},{"lineNumber":87,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":88,"author":{"gitId":"iantenkai"},"content":"        System.out.println(\"Here are the matching tasks: \");","lastModifiedDate":"2023-02-26"},{"lineNumber":89,"author":{"gitId":"iantenkai"},"content":"        listTasks(searchResults);","lastModifiedDate":"2023-02-26"},{"lineNumber":90,"author":{"gitId":"iantenkai"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":91,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":92,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":93,"author":{"gitId":"iantenkai"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"iantenkai":93}},{"path":"src/main/java/Exceptions/DukeError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iantenkai"},"content":"package Exceptions;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"iantenkai"},"content":"public class DukeError extends Exception {","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"iantenkai"},"content":"    public String problem;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"iantenkai"},"content":"    public DukeError(String problemGiven) {","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"iantenkai"},"content":"        this.problem \u003d problemGiven;","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"iantenkai"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"iantenkai"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"iantenkai":12}},{"path":"src/main/java/Exceptions/MissingInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iantenkai"},"content":"package Exceptions;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"iantenkai"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"iantenkai"},"content":"public class MissingInputException extends Exception {","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"iantenkai"},"content":"}","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"iantenkai":4}}]
