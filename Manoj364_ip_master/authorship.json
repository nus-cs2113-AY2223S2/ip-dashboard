[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Manoj364"},"content":"import duke.Deadline;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"Manoj364"},"content":"import duke.Event;","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"Manoj364"},"content":"import duke.Todo;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"Manoj364"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"Manoj364"},"content":"import java.io.*;","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"Manoj364"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"Manoj364"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"Manoj364"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"Manoj364"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"Manoj364"},"content":"    public static void main(String[] args) throws FileNotFoundException {","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"Manoj364"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"Manoj364"},"content":"        printGreetingMessage();","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"Manoj364"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"Manoj364"},"content":"        //Read in input from user","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"Manoj364"},"content":"        String inputString;","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"Manoj364"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"Manoj364"},"content":"        //Set up list to store user inputs","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"Manoj364"},"content":"        ArrayList\u003cTodo\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"Manoj364"},"content":"        int counter \u003d 0;","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"Manoj364"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"Manoj364"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"Manoj364"},"content":"        //setup of exit flag","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"Manoj364"},"content":"        boolean exit \u003d false;","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"Manoj364"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"Manoj364"},"content":"        //Initialize list with saved data","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"Manoj364"},"content":"        counter \u003d initializeList(tasks, counter);","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"Manoj364"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"Manoj364"},"content":"        while (!exit) {","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"Manoj364"},"content":"            String taskType;","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"Manoj364"},"content":"            String task \u003d null;","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"Manoj364"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":33,"author":{"gitId":"Manoj364"},"content":"            inputString \u003d getInputString();","lastModifiedDate":"2023-03-02"},{"lineNumber":34,"author":{"gitId":"Manoj364"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":35,"author":{"gitId":"Manoj364"},"content":"            //Parsing user input","lastModifiedDate":"2023-03-02"},{"lineNumber":36,"author":{"gitId":"Manoj364"},"content":"            int descriptionPosition \u003d inputString.indexOf(\" \");","lastModifiedDate":"2023-03-02"},{"lineNumber":37,"author":{"gitId":"Manoj364"},"content":"            if(descriptionPosition \u003d\u003d -1) {","lastModifiedDate":"2023-03-02"},{"lineNumber":38,"author":{"gitId":"Manoj364"},"content":"                taskType \u003d inputString;","lastModifiedDate":"2023-03-02"},{"lineNumber":39,"author":{"gitId":"Manoj364"},"content":"            } else {","lastModifiedDate":"2023-03-02"},{"lineNumber":40,"author":{"gitId":"Manoj364"},"content":"                int endPosition \u003d inputString.length();","lastModifiedDate":"2023-03-02"},{"lineNumber":41,"author":{"gitId":"Manoj364"},"content":"                taskType \u003d inputString.substring(0, descriptionPosition);","lastModifiedDate":"2023-03-02"},{"lineNumber":42,"author":{"gitId":"Manoj364"},"content":"                task \u003d inputString.substring(descriptionPosition + 1, endPosition);","lastModifiedDate":"2023-03-02"},{"lineNumber":43,"author":{"gitId":"Manoj364"},"content":"            }","lastModifiedDate":"2023-03-02"},{"lineNumber":44,"author":{"gitId":"Manoj364"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"Manoj364"},"content":"            //switch cases for all specified input types","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"Manoj364"},"content":"            switch (taskType) {","lastModifiedDate":"2023-03-02"},{"lineNumber":47,"author":{"gitId":"Manoj364"},"content":"            case \"bye\":","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"Manoj364"},"content":"                exit \u003d true;","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"Manoj364"},"content":"                break;","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"Manoj364"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"Manoj364"},"content":"            case \"list\":","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"Manoj364"},"content":"                System.out.println(\"    _________________________________________\");","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"Manoj364"},"content":"                printListContents(tasks, tasks.size());","lastModifiedDate":"2023-03-02"},{"lineNumber":54,"author":{"gitId":"Manoj364"},"content":"                break;","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"Manoj364"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"Manoj364"},"content":"            case \"mark\":","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"Manoj364"},"content":"                int taskNumber \u003d getTaskNumber(task);","lastModifiedDate":"2023-03-02"},{"lineNumber":58,"author":{"gitId":"Manoj364"},"content":"                markAsDone(tasks, taskNumber);","lastModifiedDate":"2023-03-01"},{"lineNumber":59,"author":{"gitId":"Manoj364"},"content":"                printMarkedAcknowledgement(tasks, taskNumber);","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"Manoj364"},"content":"                break;","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"Manoj364"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"Manoj364"},"content":"            case \"unmark\":","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"Manoj364"},"content":"                taskNumber \u003d getTaskNumber(task);","lastModifiedDate":"2023-03-02"},{"lineNumber":64,"author":{"gitId":"Manoj364"},"content":"                tasks.get(taskNumber - 1).setDone(false);","lastModifiedDate":"2023-02-12"},{"lineNumber":65,"author":{"gitId":"Manoj364"},"content":"                printUnmarkedAcknowledgement(tasks, taskNumber);","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"Manoj364"},"content":"                break;","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"Manoj364"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"Manoj364"},"content":"            case \"todo\":","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"Manoj364"},"content":"                tasks.add(new Todo(task));","lastModifiedDate":"2023-03-02"},{"lineNumber":70,"author":{"gitId":"Manoj364"},"content":"                tasks.get(counter).print();","lastModifiedDate":"2023-02-12"},{"lineNumber":71,"author":{"gitId":"Manoj364"},"content":"                counter++;","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"Manoj364"},"content":"                System.out.println(\"    Now you have \" + counter + \" tasks in your list!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"Manoj364"},"content":"                break;","lastModifiedDate":"2023-01-31"},{"lineNumber":74,"author":{"gitId":"Manoj364"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":75,"author":{"gitId":"Manoj364"},"content":"            case \"deadline\":","lastModifiedDate":"2023-01-31"},{"lineNumber":76,"author":{"gitId":"Manoj364"},"content":"                int deadlinePosition \u003d task.indexOf(\"/\");","lastModifiedDate":"2023-03-02"},{"lineNumber":77,"author":{"gitId":"Manoj364"},"content":"                int endOfLine \u003d task.length();","lastModifiedDate":"2023-03-02"},{"lineNumber":78,"author":{"gitId":"Manoj364"},"content":"                String taskName \u003d task.substring(0, deadlinePosition);","lastModifiedDate":"2023-03-02"},{"lineNumber":79,"author":{"gitId":"Manoj364"},"content":"                String deadline \u003d task.substring(deadlinePosition + 1, endOfLine);","lastModifiedDate":"2023-03-02"},{"lineNumber":80,"author":{"gitId":"Manoj364"},"content":"                tasks.add(new Deadline(taskName, deadline));","lastModifiedDate":"2023-02-12"},{"lineNumber":81,"author":{"gitId":"Manoj364"},"content":"                tasks.get(counter).print();","lastModifiedDate":"2023-02-12"},{"lineNumber":82,"author":{"gitId":"Manoj364"},"content":"                counter++;","lastModifiedDate":"2023-01-31"},{"lineNumber":83,"author":{"gitId":"Manoj364"},"content":"                break;","lastModifiedDate":"2023-01-31"},{"lineNumber":84,"author":{"gitId":"Manoj364"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":85,"author":{"gitId":"Manoj364"},"content":"            case \"event\":","lastModifiedDate":"2023-01-31"},{"lineNumber":86,"author":{"gitId":"Manoj364"},"content":"                int deadlineStartPosition \u003d task.indexOf(\"/\");","lastModifiedDate":"2023-03-02"},{"lineNumber":87,"author":{"gitId":"Manoj364"},"content":"                int deadlineEndPosition \u003d task.indexOf(\"|\");","lastModifiedDate":"2023-03-02"},{"lineNumber":88,"author":{"gitId":"Manoj364"},"content":"                endOfLine \u003d task.length();","lastModifiedDate":"2023-03-02"},{"lineNumber":89,"author":{"gitId":"Manoj364"},"content":"                taskName \u003d task.substring(0, deadlineStartPosition);","lastModifiedDate":"2023-03-02"},{"lineNumber":90,"author":{"gitId":"Manoj364"},"content":"                String deadlineStart \u003d task.substring(deadlineStartPosition + 1, deadlineEndPosition);","lastModifiedDate":"2023-03-02"},{"lineNumber":91,"author":{"gitId":"Manoj364"},"content":"                String deadlineEnd \u003d task.substring(deadlineEndPosition + 1, endOfLine);","lastModifiedDate":"2023-03-02"},{"lineNumber":92,"author":{"gitId":"Manoj364"},"content":"                tasks.add(new Event(taskName, deadlineStart, deadlineEnd));","lastModifiedDate":"2023-02-12"},{"lineNumber":93,"author":{"gitId":"Manoj364"},"content":"                tasks.get(counter).print();","lastModifiedDate":"2023-02-12"},{"lineNumber":94,"author":{"gitId":"Manoj364"},"content":"                counter++;","lastModifiedDate":"2023-01-31"},{"lineNumber":95,"author":{"gitId":"Manoj364"},"content":"                break;","lastModifiedDate":"2023-01-31"},{"lineNumber":96,"author":{"gitId":"Manoj364"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":97,"author":{"gitId":"Manoj364"},"content":"            case \"delete\":","lastModifiedDate":"2023-02-12"},{"lineNumber":98,"author":{"gitId":"Manoj364"},"content":"                taskNumber \u003d getTaskNumber(task) - 1;","lastModifiedDate":"2023-03-02"},{"lineNumber":99,"author":{"gitId":"Manoj364"},"content":"                System.out.println(\"    _________________________________________\");","lastModifiedDate":"2023-02-12"},{"lineNumber":100,"author":{"gitId":"Manoj364"},"content":"                tasks.get(taskNumber).printInList();","lastModifiedDate":"2023-02-12"},{"lineNumber":101,"author":{"gitId":"Manoj364"},"content":"                System.out.println(\"    _________________________________________\");","lastModifiedDate":"2023-02-12"},{"lineNumber":102,"author":{"gitId":"Manoj364"},"content":"                System.out.println(\"    \");","lastModifiedDate":"2023-02-12"},{"lineNumber":103,"author":{"gitId":"Manoj364"},"content":"                tasks.remove(tasks.get(taskNumber));","lastModifiedDate":"2023-02-13"},{"lineNumber":104,"author":{"gitId":"Manoj364"},"content":"                counter--;","lastModifiedDate":"2023-02-12"},{"lineNumber":105,"author":{"gitId":"Manoj364"},"content":"                break;","lastModifiedDate":"2023-02-12"},{"lineNumber":106,"author":{"gitId":"Manoj364"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":107,"author":{"gitId":"Manoj364"},"content":"            case \"find\":","lastModifiedDate":"2023-03-02"},{"lineNumber":108,"author":{"gitId":"Manoj364"},"content":"                System.out.println(\"    Please specify keyword: \");","lastModifiedDate":"2023-03-02"},{"lineNumber":109,"author":{"gitId":"Manoj364"},"content":"                inputString \u003d getInputString();","lastModifiedDate":"2023-03-02"},{"lineNumber":110,"author":{"gitId":"Manoj364"},"content":"                for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-03-02"},{"lineNumber":111,"author":{"gitId":"Manoj364"},"content":"                    String task \u003d tasks.get(i).getDescription();","lastModifiedDate":"2023-03-02"},{"lineNumber":112,"author":{"gitId":"Manoj364"},"content":"                    if (task.contains(inputString)) {","lastModifiedDate":"2023-03-02"},{"lineNumber":113,"author":{"gitId":"Manoj364"},"content":"                        tasks.get(i).printInList();","lastModifiedDate":"2023-03-02"},{"lineNumber":114,"author":{"gitId":"Manoj364"},"content":"                    }","lastModifiedDate":"2023-03-02"},{"lineNumber":115,"author":{"gitId":"Manoj364"},"content":"                }","lastModifiedDate":"2023-03-02"},{"lineNumber":116,"author":{"gitId":"Manoj364"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":117,"author":{"gitId":"Manoj364"},"content":"            default:","lastModifiedDate":"2023-01-31"},{"lineNumber":118,"author":{"gitId":"Manoj364"},"content":"                System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-02-06"},{"lineNumber":119,"author":{"gitId":"Manoj364"},"content":"                break;","lastModifiedDate":"2023-01-31"},{"lineNumber":120,"author":{"gitId":"Manoj364"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":121,"author":{"gitId":"Manoj364"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":122,"author":{"gitId":"Manoj364"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":123,"author":{"gitId":"Manoj364"},"content":"        //When user types \"bye\"","lastModifiedDate":"2023-01-25"},{"lineNumber":124,"author":{"gitId":"Manoj364"},"content":"        exitMessage();","lastModifiedDate":"2023-03-03"},{"lineNumber":125,"author":{"gitId":"Manoj364"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":126,"author":{"gitId":"Manoj364"},"content":"        //Save list data into text file on disk","lastModifiedDate":"2023-03-02"},{"lineNumber":127,"author":{"gitId":"Manoj364"},"content":"        PrintWriter fw \u003d new PrintWriter(\"docs\\\\list.txt\");","lastModifiedDate":"2023-03-03"},{"lineNumber":128,"author":{"gitId":"Manoj364"},"content":"        for (int i \u003d 0; i \u003c counter; i++) {","lastModifiedDate":"2023-02-14"},{"lineNumber":129,"author":{"gitId":"Manoj364"},"content":"            String classType \u003d String.valueOf(tasks.get(i).getClass());","lastModifiedDate":"2023-03-02"},{"lineNumber":130,"author":{"gitId":"Manoj364"},"content":"            writeToFile(tasks, fw, i, classType);","lastModifiedDate":"2023-03-03"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":132,"author":{"gitId":"Manoj364"},"content":"        fw.close();","lastModifiedDate":"2023-02-14"},{"lineNumber":133,"author":{"gitId":"Manoj364"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":134,"author":{"gitId":"Manoj364"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":135,"author":{"gitId":"Manoj364"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":136,"author":{"gitId":"Manoj364"},"content":"     * Prints exit message when application is closed.","lastModifiedDate":"2023-03-03"},{"lineNumber":137,"author":{"gitId":"Manoj364"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":138,"author":{"gitId":"Manoj364"},"content":"    private static void exitMessage() {","lastModifiedDate":"2023-03-03"},{"lineNumber":139,"author":{"gitId":"Manoj364"},"content":"        System.out.println(\"    Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-03-03"},{"lineNumber":140,"author":{"gitId":"Manoj364"},"content":"        System.out.println(\"    _________________________________________\");","lastModifiedDate":"2023-03-03"},{"lineNumber":141,"author":{"gitId":"Manoj364"},"content":"        System.out.println(\"     \");","lastModifiedDate":"2023-03-03"},{"lineNumber":142,"author":{"gitId":"Manoj364"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":143,"author":{"gitId":"Manoj364"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":144,"author":{"gitId":"Manoj364"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":145,"author":{"gitId":"Manoj364"},"content":"     * Marks a task as done.","lastModifiedDate":"2023-03-03"},{"lineNumber":146,"author":{"gitId":"Manoj364"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":147,"author":{"gitId":"Manoj364"},"content":"     * @param tasks list of tasks already added.","lastModifiedDate":"2023-03-03"},{"lineNumber":148,"author":{"gitId":"Manoj364"},"content":"     * @param fw file to be modified.","lastModifiedDate":"2023-03-03"},{"lineNumber":149,"author":{"gitId":"Manoj364"},"content":"     * @param i increment for loop.","lastModifiedDate":"2023-03-03"},{"lineNumber":150,"author":{"gitId":"Manoj364"},"content":"     * @param classType type of task.","lastModifiedDate":"2023-03-03"},{"lineNumber":151,"author":{"gitId":"Manoj364"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":152,"author":{"gitId":"Manoj364"},"content":"    private static void writeToFile(ArrayList\u003cTodo\u003e tasks, PrintWriter fw, int i, String classType) {","lastModifiedDate":"2023-03-03"},{"lineNumber":153,"author":{"gitId":"Manoj364"},"content":"        if(classType.equalsIgnoreCase(\"Class Duke.Todo\")) {","lastModifiedDate":"2023-03-02"},{"lineNumber":154,"author":{"gitId":"Manoj364"},"content":"            fw.println(\"todo \" + tasks.get(i).getDescription());","lastModifiedDate":"2023-03-02"},{"lineNumber":155,"author":{"gitId":"Manoj364"},"content":"        } else if (classType.equalsIgnoreCase(\"Class Duke.Event\")) {","lastModifiedDate":"2023-03-02"},{"lineNumber":156,"author":{"gitId":"Manoj364"},"content":"            fw.println(\"event \" + tasks.get(i).getDescription() + \"/\" + tasks.get(i).getBy() + \"|\"","lastModifiedDate":"2023-03-03"},{"lineNumber":157,"author":{"gitId":"Manoj364"},"content":"                    + tasks.get(i).getEnd());","lastModifiedDate":"2023-03-03"},{"lineNumber":158,"author":{"gitId":"Manoj364"},"content":"        } else if (classType.equalsIgnoreCase(\"Class Duke.Deadline\")) {","lastModifiedDate":"2023-03-02"},{"lineNumber":159,"author":{"gitId":"Manoj364"},"content":"            fw.println(\"deadline \" + tasks.get(i).getDescription() + \"/\" + tasks.get(i).getBy());","lastModifiedDate":"2023-03-02"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":162,"author":{"gitId":"Manoj364"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":163,"author":{"gitId":"Manoj364"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":164,"author":{"gitId":"Manoj364"},"content":"     * Marks a task as done.","lastModifiedDate":"2023-03-02"},{"lineNumber":165,"author":{"gitId":"Manoj364"},"content":"     *","lastModifiedDate":"2023-03-02"},{"lineNumber":166,"author":{"gitId":"Manoj364"},"content":"     * @param tasks list of tasks already added.","lastModifiedDate":"2023-03-02"},{"lineNumber":167,"author":{"gitId":"Manoj364"},"content":"     * @param taskNumber number assigned to task in the list.","lastModifiedDate":"2023-03-02"},{"lineNumber":168,"author":{"gitId":"Manoj364"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":169,"author":{"gitId":"Manoj364"},"content":"    private static void markAsDone(ArrayList\u003cTodo\u003e tasks, int taskNumber) {","lastModifiedDate":"2023-03-01"},{"lineNumber":170,"author":{"gitId":"Manoj364"},"content":"        tasks.get(taskNumber - 1).setDone(true);","lastModifiedDate":"2023-03-01"},{"lineNumber":171,"author":{"gitId":"Manoj364"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":172,"author":{"gitId":"Manoj364"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":173,"author":{"gitId":"Manoj364"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":174,"author":{"gitId":"Manoj364"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":175,"author":{"gitId":"Manoj364"},"content":"     * Prints greeting message when application is launched.","lastModifiedDate":"2023-03-02"},{"lineNumber":176,"author":{"gitId":"Manoj364"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":177,"author":{"gitId":"Manoj364"},"content":"    private static void printGreetingMessage() {","lastModifiedDate":"2023-03-01"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-03-01"},{"lineNumber":179,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-03-01"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-03-01"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-03-01"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-03-01"},{"lineNumber":183,"author":{"gitId":"Manoj364"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":184,"author":{"gitId":"Manoj364"},"content":"        System.out.println(\"    Hello from\\n\" + logo);","lastModifiedDate":"2023-03-01"},{"lineNumber":185,"author":{"gitId":"Manoj364"},"content":"        System.out.println(\"    _________________________________________\");","lastModifiedDate":"2023-03-01"},{"lineNumber":186,"author":{"gitId":"Manoj364"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":187,"author":{"gitId":"Manoj364"},"content":"        System.out.println(\"    Hello! I\u0027m Duke\");","lastModifiedDate":"2023-03-01"},{"lineNumber":188,"author":{"gitId":"Manoj364"},"content":"        System.out.println(\"    What can I do for you?\");","lastModifiedDate":"2023-03-01"},{"lineNumber":189,"author":{"gitId":"Manoj364"},"content":"        System.out.println(\"    _________________________________________\");","lastModifiedDate":"2023-03-01"},{"lineNumber":190,"author":{"gitId":"Manoj364"},"content":"        System.out.println(\"     \");","lastModifiedDate":"2023-03-01"},{"lineNumber":191,"author":{"gitId":"Manoj364"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":192,"author":{"gitId":"Manoj364"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":193,"author":{"gitId":"Manoj364"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":194,"author":{"gitId":"Manoj364"},"content":"     * Returns counter after initializing list with items that were saved to disk previously.","lastModifiedDate":"2023-03-03"},{"lineNumber":195,"author":{"gitId":"Manoj364"},"content":"     * If no such saved file exists, a new file will be created on disk to save list items","lastModifiedDate":"2023-03-03"},{"lineNumber":196,"author":{"gitId":"Manoj364"},"content":"     * upon exiting the program.","lastModifiedDate":"2023-03-03"},{"lineNumber":197,"author":{"gitId":"Manoj364"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":198,"author":{"gitId":"Manoj364"},"content":"     * @param tasks list of tasks already added.","lastModifiedDate":"2023-03-03"},{"lineNumber":199,"author":{"gitId":"Manoj364"},"content":"     * @param counter number of tasks in the list.","lastModifiedDate":"2023-03-03"},{"lineNumber":200,"author":{"gitId":"Manoj364"},"content":"     * @return counter number of tasks in the list.","lastModifiedDate":"2023-03-03"},{"lineNumber":201,"author":{"gitId":"Manoj364"},"content":"     * @throws FileNotFoundException If .txt file is not found at specified file path.","lastModifiedDate":"2023-03-03"},{"lineNumber":202,"author":{"gitId":"Manoj364"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":203,"author":{"gitId":"Manoj364"},"content":"    private static int initializeList(ArrayList\u003cTodo\u003e tasks, int counter) throws FileNotFoundException {","lastModifiedDate":"2023-03-02"},{"lineNumber":204,"author":{"gitId":"Manoj364"},"content":"        String inputString;","lastModifiedDate":"2023-03-02"},{"lineNumber":205,"author":{"gitId":"Manoj364"},"content":"        String task \u003d null;","lastModifiedDate":"2023-03-02"},{"lineNumber":206,"author":{"gitId":"Manoj364"},"content":"        String taskType;","lastModifiedDate":"2023-03-02"},{"lineNumber":207,"author":{"gitId":"Manoj364"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":208,"author":{"gitId":"Manoj364"},"content":"        try {","lastModifiedDate":"2023-03-03"},{"lineNumber":209,"author":{"gitId":"Manoj364"},"content":"            File myFile \u003d new File(\"docs\\\\list.txt\");","lastModifiedDate":"2023-03-03"},{"lineNumber":210,"author":{"gitId":"Manoj364"},"content":"            if (myFile.createNewFile()) {","lastModifiedDate":"2023-03-03"},{"lineNumber":211,"author":{"gitId":"Manoj364"},"content":"                System.out.println(\"New List backup is created! List items will be saved to \" +","lastModifiedDate":"2023-03-03"},{"lineNumber":212,"author":{"gitId":"Manoj364"},"content":"                        \"disk after you exit the program!\");","lastModifiedDate":"2023-03-03"},{"lineNumber":213,"author":{"gitId":"Manoj364"},"content":"            } else {","lastModifiedDate":"2023-03-03"},{"lineNumber":214,"author":{"gitId":"Manoj364"},"content":"                System.out.println(\"List backup already exists and has been initialized.\");","lastModifiedDate":"2023-03-03"},{"lineNumber":215,"author":{"gitId":"Manoj364"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":216,"author":{"gitId":"Manoj364"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-03"},{"lineNumber":217,"author":{"gitId":"Manoj364"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-03-03"},{"lineNumber":218,"author":{"gitId":"Manoj364"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":219,"author":{"gitId":"Manoj364"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":220,"author":{"gitId":"Manoj364"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":221,"author":{"gitId":"Manoj364"},"content":"        Scanner scanner \u003d new Scanner(new File(\"docs\\\\list.txt\"));","lastModifiedDate":"2023-03-03"},{"lineNumber":222,"author":{"gitId":"Manoj364"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-03-03"},{"lineNumber":223,"author":{"gitId":"Manoj364"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":224,"author":{"gitId":"Manoj364"},"content":"        while (scanner.hasNextLine()) {","lastModifiedDate":"2023-03-02"},{"lineNumber":225,"author":{"gitId":"Manoj364"},"content":"            inputString \u003d scanner.nextLine();","lastModifiedDate":"2023-03-02"},{"lineNumber":226,"author":{"gitId":"Manoj364"},"content":"            int descriptionPosition \u003d inputString.indexOf(\" \");","lastModifiedDate":"2023-03-02"},{"lineNumber":227,"author":{"gitId":"Manoj364"},"content":"            if(descriptionPosition \u003d\u003d -1) {","lastModifiedDate":"2023-03-02"},{"lineNumber":228,"author":{"gitId":"Manoj364"},"content":"                taskType \u003d inputString;","lastModifiedDate":"2023-03-02"},{"lineNumber":229,"author":{"gitId":"Manoj364"},"content":"            } else {","lastModifiedDate":"2023-03-02"},{"lineNumber":230,"author":{"gitId":"Manoj364"},"content":"                int endPosition \u003d inputString.length();","lastModifiedDate":"2023-03-02"},{"lineNumber":231,"author":{"gitId":"Manoj364"},"content":"                taskType \u003d inputString.substring(0, descriptionPosition);","lastModifiedDate":"2023-03-02"},{"lineNumber":232,"author":{"gitId":"Manoj364"},"content":"                task \u003d inputString.substring(descriptionPosition + 1, endPosition);","lastModifiedDate":"2023-03-02"},{"lineNumber":233,"author":{"gitId":"Manoj364"},"content":"            }","lastModifiedDate":"2023-03-02"},{"lineNumber":234,"author":{"gitId":"Manoj364"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":235,"author":{"gitId":"Manoj364"},"content":"            switch (taskType) {","lastModifiedDate":"2023-03-02"},{"lineNumber":236,"author":{"gitId":"Manoj364"},"content":"            case \"todo\":","lastModifiedDate":"2023-03-02"},{"lineNumber":237,"author":{"gitId":"Manoj364"},"content":"                tasks.add(new Todo(task));","lastModifiedDate":"2023-03-02"},{"lineNumber":238,"author":{"gitId":"Manoj364"},"content":"                tasks.get(counter).print();","lastModifiedDate":"2023-03-02"},{"lineNumber":239,"author":{"gitId":"Manoj364"},"content":"                counter++;","lastModifiedDate":"2023-03-02"},{"lineNumber":240,"author":{"gitId":"Manoj364"},"content":"                break;","lastModifiedDate":"2023-03-02"},{"lineNumber":241,"author":{"gitId":"Manoj364"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":242,"author":{"gitId":"Manoj364"},"content":"            case \"deadline\":","lastModifiedDate":"2023-03-02"},{"lineNumber":243,"author":{"gitId":"Manoj364"},"content":"                int deadlinePosition \u003d task.indexOf(\"/\");","lastModifiedDate":"2023-03-02"},{"lineNumber":244,"author":{"gitId":"Manoj364"},"content":"                int endOfLine \u003d task.length();","lastModifiedDate":"2023-03-02"},{"lineNumber":245,"author":{"gitId":"Manoj364"},"content":"                String taskName \u003d task.substring(0, deadlinePosition);","lastModifiedDate":"2023-03-02"},{"lineNumber":246,"author":{"gitId":"Manoj364"},"content":"                String deadline \u003d task.substring(deadlinePosition + 1, endOfLine);","lastModifiedDate":"2023-03-02"},{"lineNumber":247,"author":{"gitId":"Manoj364"},"content":"                tasks.add(new Deadline(taskName, deadline));","lastModifiedDate":"2023-03-02"},{"lineNumber":248,"author":{"gitId":"Manoj364"},"content":"                tasks.get(counter).print();","lastModifiedDate":"2023-03-02"},{"lineNumber":249,"author":{"gitId":"Manoj364"},"content":"                counter++;","lastModifiedDate":"2023-03-02"},{"lineNumber":250,"author":{"gitId":"Manoj364"},"content":"                break;","lastModifiedDate":"2023-03-02"},{"lineNumber":251,"author":{"gitId":"Manoj364"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":252,"author":{"gitId":"Manoj364"},"content":"            case \"event\":","lastModifiedDate":"2023-03-02"},{"lineNumber":253,"author":{"gitId":"Manoj364"},"content":"                int deadlineStartPosition \u003d task.indexOf(\"/\");","lastModifiedDate":"2023-03-02"},{"lineNumber":254,"author":{"gitId":"Manoj364"},"content":"                int deadlineEndPosition \u003d task.indexOf(\"|\");","lastModifiedDate":"2023-03-02"},{"lineNumber":255,"author":{"gitId":"Manoj364"},"content":"                endOfLine \u003d task.length();","lastModifiedDate":"2023-03-02"},{"lineNumber":256,"author":{"gitId":"Manoj364"},"content":"                taskName \u003d task.substring(0, deadlineStartPosition);","lastModifiedDate":"2023-03-02"},{"lineNumber":257,"author":{"gitId":"Manoj364"},"content":"                String deadlineStart \u003d task.substring(deadlineStartPosition + 1, deadlineEndPosition);","lastModifiedDate":"2023-03-02"},{"lineNumber":258,"author":{"gitId":"Manoj364"},"content":"                String deadlineEnd \u003d task.substring(deadlineEndPosition + 1, endOfLine);","lastModifiedDate":"2023-03-02"},{"lineNumber":259,"author":{"gitId":"Manoj364"},"content":"                tasks.add(new Event(taskName, deadlineStart, deadlineEnd));","lastModifiedDate":"2023-03-02"},{"lineNumber":260,"author":{"gitId":"Manoj364"},"content":"                tasks.get(counter).print();","lastModifiedDate":"2023-03-02"},{"lineNumber":261,"author":{"gitId":"Manoj364"},"content":"                counter++;","lastModifiedDate":"2023-03-02"},{"lineNumber":262,"author":{"gitId":"Manoj364"},"content":"                break;","lastModifiedDate":"2023-03-02"},{"lineNumber":263,"author":{"gitId":"Manoj364"},"content":"            }","lastModifiedDate":"2023-03-02"},{"lineNumber":264,"author":{"gitId":"Manoj364"},"content":"        }","lastModifiedDate":"2023-03-02"},{"lineNumber":265,"author":{"gitId":"Manoj364"},"content":"        scanner.close();","lastModifiedDate":"2023-03-02"},{"lineNumber":266,"author":{"gitId":"Manoj364"},"content":"        return counter;","lastModifiedDate":"2023-03-02"},{"lineNumber":267,"author":{"gitId":"Manoj364"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":268,"author":{"gitId":"Manoj364"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":269,"author":{"gitId":"Manoj364"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":270,"author":{"gitId":"Manoj364"},"content":"     * Returns user input as a string.","lastModifiedDate":"2023-03-02"},{"lineNumber":271,"author":{"gitId":"Manoj364"},"content":"     *","lastModifiedDate":"2023-03-02"},{"lineNumber":272,"author":{"gitId":"Manoj364"},"content":"     * @return input string.","lastModifiedDate":"2023-03-02"},{"lineNumber":273,"author":{"gitId":"Manoj364"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":274,"author":{"gitId":"Manoj364"},"content":"    private static String getInputString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":275,"author":{"gitId":"Manoj364"},"content":"        String inputString;","lastModifiedDate":"2023-01-31"},{"lineNumber":276,"author":{"gitId":"Manoj364"},"content":"        Scanner in;","lastModifiedDate":"2023-03-02"},{"lineNumber":277,"author":{"gitId":"Manoj364"},"content":"        in \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-31"},{"lineNumber":278,"author":{"gitId":"Manoj364"},"content":"        inputString \u003d in.nextLine();","lastModifiedDate":"2023-01-31"},{"lineNumber":279,"author":{"gitId":"Manoj364"},"content":"        return inputString;","lastModifiedDate":"2023-01-31"},{"lineNumber":280,"author":{"gitId":"Manoj364"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":281,"author":{"gitId":"Manoj364"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":282,"author":{"gitId":"Manoj364"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":283,"author":{"gitId":"Manoj364"},"content":"     * Prints acknowledgement message when task is marked as not done.","lastModifiedDate":"2023-03-02"},{"lineNumber":284,"author":{"gitId":"Manoj364"},"content":"     *","lastModifiedDate":"2023-03-02"},{"lineNumber":285,"author":{"gitId":"Manoj364"},"content":"     * @param tasks list of tasks already added.","lastModifiedDate":"2023-03-02"},{"lineNumber":286,"author":{"gitId":"Manoj364"},"content":"     * @param taskNumber number assigned to task in the list.","lastModifiedDate":"2023-03-02"},{"lineNumber":287,"author":{"gitId":"Manoj364"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":288,"author":{"gitId":"Manoj364"},"content":"    private static void printUnmarkedAcknowledgement(ArrayList\u003cTodo\u003e tasks, int taskNumber) {","lastModifiedDate":"2023-02-13"},{"lineNumber":289,"author":{"gitId":"Manoj364"},"content":"        System.out.println(\"    _________________________________________\");","lastModifiedDate":"2023-01-31"},{"lineNumber":290,"author":{"gitId":"Manoj364"},"content":"        System.out.println(\"    \" + taskNumber + \".\" + \"[ ] \" + tasks.get(taskNumber - 1).getDescription());","lastModifiedDate":"2023-02-12"},{"lineNumber":291,"author":{"gitId":"Manoj364"},"content":"        System.out.println(\"    _________________________________________\");","lastModifiedDate":"2023-01-31"},{"lineNumber":292,"author":{"gitId":"Manoj364"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":293,"author":{"gitId":"Manoj364"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":294,"author":{"gitId":"Manoj364"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":295,"author":{"gitId":"Manoj364"},"content":"     * Prints acknowledgement message when task is marked as done.","lastModifiedDate":"2023-03-02"},{"lineNumber":296,"author":{"gitId":"Manoj364"},"content":"     *","lastModifiedDate":"2023-03-02"},{"lineNumber":297,"author":{"gitId":"Manoj364"},"content":"     * @param tasks list of tasks already added.","lastModifiedDate":"2023-03-02"},{"lineNumber":298,"author":{"gitId":"Manoj364"},"content":"     * @param taskNumber number assigned to task in the list.","lastModifiedDate":"2023-03-02"},{"lineNumber":299,"author":{"gitId":"Manoj364"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":300,"author":{"gitId":"Manoj364"},"content":"    private static void printMarkedAcknowledgement(ArrayList\u003cTodo\u003e tasks, int taskNumber) {","lastModifiedDate":"2023-02-13"},{"lineNumber":301,"author":{"gitId":"Manoj364"},"content":"        System.out.println(\"    _________________________________________\");","lastModifiedDate":"2023-01-31"},{"lineNumber":302,"author":{"gitId":"Manoj364"},"content":"        System.out.println(\"    \" + taskNumber + \".\" + \"[X] \" + tasks.get(taskNumber - 1).getDescription());","lastModifiedDate":"2023-02-12"},{"lineNumber":303,"author":{"gitId":"Manoj364"},"content":"        System.out.println(\"    _________________________________________\");","lastModifiedDate":"2023-01-31"},{"lineNumber":304,"author":{"gitId":"Manoj364"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":305,"author":{"gitId":"Manoj364"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":306,"author":{"gitId":"Manoj364"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":307,"author":{"gitId":"Manoj364"},"content":"     * Returns task number.","lastModifiedDate":"2023-03-02"},{"lineNumber":308,"author":{"gitId":"Manoj364"},"content":"     *","lastModifiedDate":"2023-03-02"},{"lineNumber":309,"author":{"gitId":"Manoj364"},"content":"     * @return task number.","lastModifiedDate":"2023-03-02"},{"lineNumber":310,"author":{"gitId":"Manoj364"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":311,"author":{"gitId":"Manoj364"},"content":"    private static int getTaskNumber(String task) {","lastModifiedDate":"2023-03-02"},{"lineNumber":312,"author":{"gitId":"Manoj364"},"content":"        return Integer.parseInt(task);","lastModifiedDate":"2023-03-02"},{"lineNumber":313,"author":{"gitId":"Manoj364"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":314,"author":{"gitId":"Manoj364"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":315,"author":{"gitId":"Manoj364"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":316,"author":{"gitId":"Manoj364"},"content":"     * Prints list contents.","lastModifiedDate":"2023-03-02"},{"lineNumber":317,"author":{"gitId":"Manoj364"},"content":"     *","lastModifiedDate":"2023-03-02"},{"lineNumber":318,"author":{"gitId":"Manoj364"},"content":"     * @param tasks list of tasks already added.","lastModifiedDate":"2023-03-02"},{"lineNumber":319,"author":{"gitId":"Manoj364"},"content":"     * @param counter number of tasks in the list.","lastModifiedDate":"2023-03-02"},{"lineNumber":320,"author":{"gitId":"Manoj364"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":321,"author":{"gitId":"Manoj364"},"content":"    private static void printListContents(ArrayList\u003cTodo\u003e tasks, int counter) {","lastModifiedDate":"2023-02-13"},{"lineNumber":322,"author":{"gitId":"Manoj364"},"content":"        for (int i \u003d 0; i \u003c counter; ++i) {","lastModifiedDate":"2023-01-31"},{"lineNumber":323,"author":{"gitId":"Manoj364"},"content":"            if (tasks.get(i).isDone) {","lastModifiedDate":"2023-02-12"},{"lineNumber":324,"author":{"gitId":"Manoj364"},"content":"                System.out.print(\"    \" + (i + 1) + \".\");","lastModifiedDate":"2023-01-31"},{"lineNumber":325,"author":{"gitId":"Manoj364"},"content":"                tasks.get(i).printInList();","lastModifiedDate":"2023-02-12"},{"lineNumber":326,"author":{"gitId":"Manoj364"},"content":"            } else {","lastModifiedDate":"2023-01-31"},{"lineNumber":327,"author":{"gitId":"Manoj364"},"content":"                System.out.print(\"    \" + (i + 1) + \".\");","lastModifiedDate":"2023-01-31"},{"lineNumber":328,"author":{"gitId":"Manoj364"},"content":"                tasks.get(i).printInList();","lastModifiedDate":"2023-02-12"},{"lineNumber":329,"author":{"gitId":"Manoj364"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":330,"author":{"gitId":"Manoj364"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":331,"author":{"gitId":"Manoj364"},"content":"        System.out.println(\"    _________________________________________\");","lastModifiedDate":"2023-01-31"},{"lineNumber":332,"author":{"gitId":"Manoj364"},"content":"        System.out.println(\"     \");","lastModifiedDate":"2023-01-31"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":334,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Manoj364":323,"-":11}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Manoj364"},"content":"package duke;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"Manoj364"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"Manoj364"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Manoj364"},"content":" * Represents a \u003ccode\u003eDeadline\u003c/code\u003e task that can be added to the list. A \u003ccode\u003eDeadline\u003c/code\u003e object stores a","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"Manoj364"},"content":" * description of the task, as well as the deadline for it.","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Manoj364"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"Manoj364"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"Manoj364"},"content":"public class Deadline extends Todo {","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"Manoj364"},"content":"    protected String by;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"Manoj364"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"Manoj364"},"content":"        super(description);","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"Manoj364"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"Manoj364"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"Manoj364"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"Manoj364"},"content":"    @Override","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"Manoj364"},"content":"    public String getBy() {","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"Manoj364"},"content":"        return by;","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"Manoj364"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"Manoj364"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"Manoj364"},"content":"    public void setBy(String time) {","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"Manoj364"},"content":"        by \u003d time;","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"Manoj364"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"Manoj364"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"Manoj364"},"content":"    public void print() {","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"Manoj364"},"content":"        System.out.println(\"    _________________________________________\");","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"Manoj364"},"content":"        System.out.println(\"    \" + \"added: \" + description + \" (by \" + by + \")\");","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"Manoj364"},"content":"        System.out.println(\"    _________________________________________\");","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"Manoj364"},"content":"        System.out.println(\"    \");","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"Manoj364"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"Manoj364"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"Manoj364"},"content":"    public void printInList() {","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"Manoj364"},"content":"        if (isDone) {","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"Manoj364"},"content":"            System.out.println(\" \" + \"[D][X] \" + description + \" (by \" + by + \")\");","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"Manoj364"},"content":"        } else {","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"Manoj364"},"content":"            System.out.println(\" \" + \"[D][ ] \" + description + \" (by \" + by + \")\");","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"Manoj364"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"Manoj364"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"Manoj364"},"content":"}","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"Manoj364"},"content":"","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"Manoj364":39}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Manoj364"},"content":"package duke;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"Manoj364"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"Manoj364"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"Manoj364"},"content":"    public DukeException(String inputString) {","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"Manoj364"},"content":"        if (inputString \u003d\u003d \"\") {","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"Manoj364"},"content":"            System.out.println(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"Manoj364"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"Manoj364"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"Manoj364"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"Manoj364"},"content":"}","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"Manoj364":10}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Manoj364"},"content":"package duke;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"Manoj364"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"Manoj364"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Manoj364"},"content":" * Represents a \u003ccode\u003eEvent\u003c/code\u003e task that can be added to the list. An \u003ccode\u003eEvent\u003c/code\u003e object stores a","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"Manoj364"},"content":" * description of the task and its duration.","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Manoj364"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"Manoj364"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"Manoj364"},"content":"public class Event extends Todo {","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"Manoj364"},"content":"    protected String by;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"Manoj364"},"content":"    protected String end;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"Manoj364"},"content":"    public Event(String description, String by, String end) {","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"Manoj364"},"content":"        super(description);","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"Manoj364"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"Manoj364"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"Manoj364"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"Manoj364"},"content":"@Override","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"Manoj364"},"content":"    public String getBy() {","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"Manoj364"},"content":"        return by;","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"Manoj364"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"Manoj364"},"content":"@Override","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"Manoj364"},"content":"    public String getEnd() {","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"Manoj364"},"content":"        return end;","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"Manoj364"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"Manoj364"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"Manoj364"},"content":"    public void setBy(String time) {","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"Manoj364"},"content":"        by \u003d time;","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"Manoj364"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"Manoj364"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"Manoj364"},"content":"    public void setEnd(String time) {","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"Manoj364"},"content":"        end \u003d time;","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"Manoj364"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"Manoj364"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"Manoj364"},"content":"    public void print() {","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"Manoj364"},"content":"        System.out.println(\"    _________________________________________\");","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"Manoj364"},"content":"        System.out.println(\"    \" + \"added: \" + description + \" (from: \" + by + \", to: \" + end + \")\");","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"Manoj364"},"content":"        System.out.println(\"    _________________________________________\");","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"Manoj364"},"content":"        System.out.println(\"    \");","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"Manoj364"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"Manoj364"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"Manoj364"},"content":"    public void printInList() {","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"Manoj364"},"content":"        if (isDone) {","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"Manoj364"},"content":"            System.out.println(\" \" + \"[E][X] \" + description + \" (from: \" + by + \", to: \" + end + \")\");","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"Manoj364"},"content":"        } else {","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"Manoj364"},"content":"            System.out.println(\" \" + \"[E][ ] \" + description + \" (from: \" + by + \", to: \" + end + \")\");","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"Manoj364"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"Manoj364"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"Manoj364"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"Manoj364":47}},{"path":"src/main/java/duke/FileReading.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Manoj364"},"content":"package duke;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"Manoj364"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"Manoj364"},"content":"import java.io.File;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"Manoj364"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"Manoj364"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"Manoj364"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"Manoj364"},"content":"public class FileReading {","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"Manoj364"},"content":"    private static void printFileContents(String filePath) throws FileNotFoundException {","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"Manoj364"},"content":"        File f \u003d new File(filePath); // create a File for the given file path","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"Manoj364"},"content":"        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"Manoj364"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"Manoj364"},"content":"            System.out.println(s.nextLine());","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"Manoj364"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"Manoj364"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"Manoj364"},"content":"}","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"Manoj364":15}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Manoj364"},"content":"package duke;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"Manoj364"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"Manoj364"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Manoj364"},"content":" * Represents a task that can be added to the list. A \u003ccode\u003eTask\u003c/code\u003e object can be either a \u003ccode\u003eTodo\u003c/code\u003e,","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"Manoj364"},"content":" * \u003ccode\u003eDeadline\u003c/code\u003e or an \u003ccode\u003eEvent\u003c/code\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Manoj364"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"Manoj364"},"content":"public class Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"Manoj364"},"content":"    protected String description;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"Manoj364"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"Manoj364"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"Manoj364"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"Manoj364"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"Manoj364"},"content":"        return description;","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"Manoj364"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"Manoj364"},"content":"    public String getBy()","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"Manoj364"},"content":"    {","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"Manoj364"},"content":"        return null;","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"Manoj364"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"Manoj364"},"content":"    public String getEnd() {","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"Manoj364"},"content":"        return null;","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"Manoj364"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"Manoj364"},"content":"}","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"Manoj364"},"content":"","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"Manoj364":23}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Manoj364"},"content":"package duke;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"Manoj364"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"Manoj364"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Manoj364"},"content":" * Represents a \u003ccode\u003eTask\u003c/code\u003e task that can be added to the list. A \u003ccode\u003eTask\u003c/code\u003e object only stores a","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"Manoj364"},"content":" * description of the task.","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Manoj364"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"Manoj364"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"Manoj364"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"Manoj364"},"content":"    public boolean isDone;","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"Manoj364"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"Manoj364"},"content":"        super(description);","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"Manoj364"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"Manoj364"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"Manoj364"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"Manoj364"},"content":"    public void setDone(boolean status) {","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"Manoj364"},"content":"        isDone \u003d status;","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"Manoj364"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"Manoj364"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"Manoj364"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"Manoj364"},"content":"        return isDone;","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"Manoj364"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"Manoj364"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"Manoj364"},"content":"    public void print() {","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"Manoj364"},"content":"        System.out.println(\"    _________________________________________\");","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"Manoj364"},"content":"        System.out.println(\"    \" + \"added: \" + description);","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"Manoj364"},"content":"        System.out.println(\"    _________________________________________\");","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"Manoj364"},"content":"        System.out.println(\"    \");","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"Manoj364"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"Manoj364"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"Manoj364"},"content":"    public void printInList() {","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"Manoj364"},"content":"        if (isDone) {","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"Manoj364"},"content":"            System.out.println(\" \" + \"[T][X] \" + description);","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"Manoj364"},"content":"        } else {","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"Manoj364"},"content":"            System.out.println(\" \" + \"[T][ ] \" + description);","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"Manoj364"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"Manoj364"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"Manoj364"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"Manoj364":37}},{"path":"src/main/java/duke/list.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Manoj364"},"content":"class duke.Event | Manoj attend CS2113 lecture | false | Friday 17 Feb 2023 4pm | 6pm","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"Manoj364":1}}]
